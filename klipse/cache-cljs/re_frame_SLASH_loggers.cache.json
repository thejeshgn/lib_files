["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$console",["^ ","~$groupEnd",["^ ","~$bind",["^ "]],"~$log",["^ ","^5",["^ "]],"~$group",["^ ","^5",["^ "]],"~$warn",["^ ","^5",["^ "]],"~$error",["^ ","^5",["^ "]]],"~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$re-frame.loggers","~:imports",null,"~:requires",["^ ","~$clojure.set","^B"],"~:uses",["^ ","~$difference","^B"],"~:defs",["^ ","^3",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","^?","~:line",35,"~:column",7,"~:end-line",35,"~:end-column",14,"~:arglists",["~#list",["~$quote",["^N",[["~$level","~$&","~$args"]]]]],"~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",1,"~:method-params",[["^N",["^P","^Q"]]],"^M",["^N",[["^P","~$&","^Q"]]],"~:arglists-meta",["^N",[null]]]],"^>","~$re-frame.loggers/console","^S",true,"^H","re_frame/loggers.cljc","^L",14,"^R",["^ ","^S",true,"^T",1,"^U",[["^N",["^P","^Q"]]],"^M",["^N",[["^P","~$&","^Q"]]],"^V",["^N",[null]]],"^U",[["^N",["^P","^Q"]]],"~:protocol-impl",null,"^V",["^N",[null]],"^J",1,"^I",35,"^K",35,"^T",1,"~:fn-var",true,"^M",["^N",[["^P","~$&","^Q"]]]],"~$loggers",["^ ","^G",["^ ","^H","^?","^I",14,"^J",16,"^K",14,"^L",23,"~:private",true],"^[",true,"^>","~$re-frame.loggers/loggers","^H","re_frame/loggers.cljc","^L",23,"^J",1,"^I",14,"^K",14,"~:tag","~$any","~:doc","Holds the current set of logging functions.\n   By default, re-frame uses the functions provided by js/console.\n   Use `set-loggers!` to change these defaults\n  "],"~$set-loggers!",["^ ","^F",null,"^G",["^ ","^H","^?","^I",41,"^J",7,"^K",41,"^L",19,"^M",["^N",["^O",["^N",[["~$new-loggers"]]]]],"^13","Change the set (or a subset) of logging functions used by re-frame.\n  `new-loggers` should be a map with the same keys as `loggers` (above)"],"^>","~$re-frame.loggers/set-loggers!","^S",false,"^H","re_frame/loggers.cljc","^L",19,"^U",["^N",[["^15"]]],"^X",null,"^V",["^N",[null,null]],"^J",1,"^I",41,"^K",41,"^T",1,"^Y",true,"^M",["^N",["^O",["^N",[["^15"]]]]],"^13","Change the set (or a subset) of logging functions used by re-frame.\n  `new-loggers` should be a map with the same keys as `loggers` (above)"],"~$get-loggers",["^ ","^F",null,"^G",["^ ","^H","^?","^I",48,"^J",7,"^K",48,"^L",18,"^M",["^N",["^O",["^N",[[]]]]],"^13","Get the current logging functions used by re-frame."],"^>","~$re-frame.loggers/get-loggers","^S",false,"^H","re_frame/loggers.cljc","^L",18,"^U",["^N",[[]]],"^X",null,"^V",["^N",[null,null]],"^J",1,"^I",48,"^K",48,"^T",0,"^Y",true,"^M",["^N",["^O",["^N",[[]]]]],"^13","Get the current logging functions used by re-frame."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^=",["~$&","^3","^15","~:group","^16","^Z","^[","^Q","^W","~:ns","~:warn","^>","^S","^H","^L","^R","^U","^14","^V","^J","^I","^?","^P","^K","^17","~:error","^T","^M","~:groupEnd","^13","~:log","~:test","^10","^18"]],"~:order",["^1A","^1>","^1?","^1<","^1@","^10","^[","^1=","^>","^H","^L","^J","^I","^K","^M","^13","^1B","^?","^Z","^W","^R","^3","^S","^T","^U","^V","^P","^Q","~$&","^16","^14","^15","^18","^17"]],"^13",null]