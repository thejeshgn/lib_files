["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$case","~$replace"]],"~:name","~$net.cgrand.macrovich$macros","~:imports",null,"~:requires",null,"~:uses",null,"~:defs",["^ ","~$usetime",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","~$net.cgrand.macrovich","~:end-column",18,"~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",2,"~:method-params",[["~#list",["~$&form","~$&env","~$body"]]],"~:arglists",["^G",[["^H","^I","~$&","^J"]]],"~:arglists-meta",["^G",[null]]],"~:column",11,"~:line",14,"~:macro",true,"~:end-line",14,"^K",["^G",["~$quote",["^G",[["~$&","^J"]]]]],"~:doc","This block content is not included at macro definition time.\n   For Clojure it always behaves like a `do` block.\n   For Clojurescript/JVM the block is only visible to Clojurescript.\n   For self-hosted Clojurescript the block is invisible when defining macros in the pseudo-namespace."],"^7","~$net.cgrand.macrovich$macros/usetime","^D",true,"^@","net/cgrand/macrovich.cljc","^B",18,"^C",["^ ","^D",true,"^E",2,"^F",[["^G",["^H","^I","^J"]]],"^K",["^G",[["^H","^I","~$&","^J"]]],"^L",["^G",[null]]],"^F",[["^G",["^H","^I","^J"]]],"~:protocol-impl",null,"^L",["^G",[null]],"^M",1,"^N",14,"^O",true,"^P",14,"^E",2,"~:fn-var",false,"^K",["^G",[["^H","^I","~$&","^J"]]],"^R","This block content is not included at macro definition time.\n   For Clojure it always behaves like a `do` block.\n   For Clojurescript/JVM the block is only visible to Clojurescript.\n   For self-hosted Clojurescript the block is invisible when defining macros in the pseudo-namespace."],"^6",["^ ","^>",null,"^?",["^ ","^@","^A","^N",30,"^M",11,"^P",30,"^B",18,"^O",true,"^K",["^G",["^Q",["^G",[["~$map-or-maps","~$&","^J"]]]]],"^C",["^ ","^D",true,"^E",3,"^F",[["^G",["^H","^I","^V","^J"]]],"^K",["^G",[["^H","^I","^V","~$&","^J"]]],"^L",["^G",[null]]]],"^7","~$net.cgrand.macrovich$macros/replace","^D",true,"^@","net/cgrand/macrovich.cljc","^B",18,"^C",["^ ","^D",true,"^E",3,"^F",[["^G",["^H","^I","^V","^J"]]],"^K",["^G",[["^H","^I","^V","~$&","^J"]]],"^L",["^G",[null]]],"^F",[["^G",["^H","^I","^V","^J"]]],"^T",null,"^L",["^G",[null]],"^M",1,"^N",30,"^O",true,"^P",30,"^E",3,"^U",false,"^K",["^G",[["^H","^I","^V","~$&","^J"]]]],"^5",["^ ","^>",null,"^?",["^ ","^@","^A","^N",23,"^M",11,"^P",23,"^B",15,"^O",true,"^K",["^G",["^Q",["^G",[["~$&",["^ ","~:keys",["~$cljs","~$clj"]]]]]]],"^C",["^ ","^D",true,"^E",2,"^F",[["^G",["^H","^I",["^ ","^X",["^Y","^Z"]]]]],"^K",["^G",[["^H","^I","~$&",["^ ","^X",["^Y","^Z"]]]]],"^L",["^G",[null]]]],"^7","~$net.cgrand.macrovich$macros/case","^D",true,"^@","net/cgrand/macrovich.cljc","^B",15,"^C",["^ ","^D",true,"^E",2,"^F",[["^G",["^H","^I",["^ ","^X",["^Y","^Z"]]]]],"^K",["^G",[["^H","^I","~$&",["^ ","^X",["^Y","^Z"]]]]],"^L",["^G",[null]]],"^F",[["^G",["^H","^I",["^ ","^X",["^Y","^Z"]]]]],"^T",null,"^L",["^G",[null]],"^M",1,"^N",23,"^O",true,"^P",23,"^E",2,"^U",false,"^K",["^G",[["^H","^I","~$&",["^ ","^X",["^Y","^Z"]]]]]],"~$deftime",["^ ","^>",null,"^?",["^ ","^@","^A","^B",18,"^C",["^ ","^D",true,"^E",2,"^F",[["^G",["^H","^I","^J"]]],"^K",["^G",[["^H","^I","~$&","^J"]]],"^L",["^G",[null]]],"^M",11,"^N",4,"^O",true,"^P",4,"^K",["^G",["^Q",["^G",[["~$&","^J"]]]]],"^R","This block will only be evaluated at the correct time for macro definition, at other times its content\n   are removed.\n   For Clojure it always behaves like a `do` block.\n   For Clojurescript/JVM the block is only visible to Clojure.\n   For self-hosted Clojurescript the block is only visible when defining macros in the pseudo-namespace."],"^7","~$net.cgrand.macrovich$macros/deftime","^D",true,"^@","net/cgrand/macrovich.cljc","^B",18,"^C",["^ ","^D",true,"^E",2,"^F",[["^G",["^H","^I","^J"]]],"^K",["^G",[["^H","^I","~$&","^J"]]],"^L",["^G",[null]]],"^F",[["^G",["^H","^I","^J"]]],"^T",null,"^L",["^G",[null]],"^M",1,"^N",4,"^O",true,"^P",4,"^E",2,"^U",false,"^K",["^G",[["^H","^I","~$&","^J"]]],"^R","This block will only be evaluated at the correct time for macro definition, at other times its content\n   are removed.\n   For Clojure it always behaves like a `do` block.\n   For Clojurescript/JVM the block is only visible to Clojure.\n   For self-hosted Clojurescript the block is only visible when defining macros in the pseudo-namespace."]],"~:require-macros",["^ "],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$&","^J","^Z","^Y","~:else","^V","~:ns","^7","^H","^=","^D","^@","^B","^C","~$do","^F","^6","~$if","^L","^M","^X","^S","^N","^O","^I","^W","^P","^E","^K","^11","^5","^R","^[","~:clj","~:cljs","~:test","^10","^8"]],"~:order",["^11","^16","^7","^@","^B","^C","^M","^N","^O","^P","^K","^R","^1;","^8","^10","^D","^E","^F","^L","^H","^I","^J","~$&","^17","^S","^=","^[","^5","^X","^Y","^Z","^1:","^19","^18","^W","^6","^V","^15"]],"^R",null]