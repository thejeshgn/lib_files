{"version":3,"file":"635.bundle.js","mappings":"kFAGAA,OAAOC,OAAOC,OAAOC,eAAgB,CACnCC,IAAK,EAAQ,OACbC,QAAS,EAAQ,MACjBC,GAAI,EAAQ,OACZC,OAAQ,EAAQ,OAChBC,KAAM,EAAQ,MACdC,YAAa,EAAQ,OACrBC,aAAc,EAAQ,Q,kBCVxB,MAAMC,EAAU,EAAQ,OAClBC,EAAI,aAAgC,YAiB1CC,EAAOC,QAXP,SAAoBC,GAClB,OAAO,IAAIJ,GAAQ,CAACK,EAASC,KAC3B,IAAIC,EAASN,EAAEO,SAASC,cAAc,UACtCF,EAAOG,KAAO,kBACdH,EAAOI,OAASN,EAChBE,EAAOK,QAAUN,EACjBC,EAAOM,IAAMT,EACbH,EAAEO,SAASM,qBAAqB,QAAQ,GAAGC,YAAYR,EAAO,GAElE,C","sources":["./app/client/exposeModulesForTests.js?","./app/client/lib/loadScript.js?"],"sourcesContent":["/* global window */\n\n// These modules are exposed for the sake of browser tests.\nObject.assign(window.exposedModules, {\n  dom: require('./lib/dom'),\n  grainjs: require('grainjs'),\n  ko: require('knockout'),\n  moment: require('moment-timezone'),\n  Comm: require('app/client/components/Comm'),\n  _loadScript: require('./lib/loadScript'),\n  ConnectState: require('./models/ConnectState'),\n});\n","const Promise = require('bluebird');\nconst G = require('./browserGlobals').get('document');\n\n/**\n * Load dynamically an external JS script from the given URL. Returns a promise that is\n * resolved when the script is loaded.\n */\nfunction loadScript(url) {\n  return new Promise((resolve, reject) => {\n    let script = G.document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.onload = resolve;\n    script.onerror = reject;\n    script.src = url;\n    G.document.getElementsByTagName(\"head\")[0].appendChild(script);\n  });\n}\n\nmodule.exports = loadScript;\n"],"names":["Object","assign","window","exposedModules","dom","grainjs","ko","moment","Comm","_loadScript","ConnectState","Promise","G","module","exports","url","resolve","reject","script","document","createElement","type","onload","onerror","src","getElementsByTagName","appendChild"],"sourceRoot":""}