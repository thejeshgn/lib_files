{"version":3,"file":"928.bundle.js","mappings":"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","sources":["./app/client/components/AceEditorCompletions.ts?","./app/client/components/Banner.ts?","./app/client/lib/chartUtil.ts?","./app/client/components/ChartView.ts?","./app/client/components/Cursor.ts?","./app/client/lib/ACIndex.ts?","./app/client/lib/ACSelect.ts?","./app/client/lib/CustomSectionElement.ts?","./app/client/lib/Delay.ts?","./app/client/lib/SafeBrowser.ts?","./app/client/lib/clipboardUtils.ts?","./app/client/lib/domAsync.ts?","./app/client/lib/fromKoSave.ts?","./app/client/lib/koArrayWrap.ts?","./app/client/lib/popupUtils.ts?","./app/client/lib/sessionObs.ts?","./app/client/lib/simpleList.ts?","./app/client/lib/sortUtil.ts?","./app/client/lib/tableUtil.ts?","./app/client/lib/testState.ts?","./app/client/lib/uploads.ts?","./app/common/uploads.ts?","./app/client/models/ClientColumnGetters.ts?","./app/client/models/ColumnFilter.ts?","./app/client/models/ColumnToMap.ts?","./app/client/models/DataRowModel.ts?","./app/client/models/DataTableModelWithDiff.ts?","./app/client/models/QuerySet.ts?","./app/client/models/SectionFilter.ts?","./app/client/models/Styles.ts?","./app/client/models/rowset.ts?","./app/client/ui/CodeHighlight.ts?","./app/client/models/ColumnFilterMenuModel.ts?","./app/client/ui/RelativeDatesOptions.ts?","./app/client/ui/ColumnFilterCalendarView.ts?","./app/client/ui/ColumnFilterMenuUtils.ts?","./app/client/ui/DateRangeOptions.ts?","./app/client/ui/ColumnFilterMenu.ts?","./app/client/lib/popupControl.ts?","./app/client/ui/TriggerFormulas.ts?","./app/client/ui/FieldConfig.ts?","./app/client/ui/FileDialog.ts?","./app/client/ui/FilterBar.ts?","./app/client/ui/FilterConfig.ts?","./app/client/ui/FloatingPopup.ts?","./app/client/ui/PageWidgetPicker.ts?","./app/client/components/RefSelect.ts?","./app/client/ui/CustomSectionConfig.ts?","./app/client/ui/DescriptionConfig.ts?","./app/client/ui/GridOptions.ts?","./app/client/ui/PredefinedCustomSectionConfig.ts?","./app/client/ui/RightPanel.ts?","./app/client/ui/RightPanelStyles.ts?","./app/client/ui/SortConfig.ts?","./app/client/ui/VisibleFieldsConfig.ts?","./app/client/ui/forms.ts?","./app/client/ui/inputs.ts?","./app/client/ui/sanitizeHTML.ts?","./app/client/ui/searchDropdown.ts?","./app/client/ui/selectBy.ts?","./app/client/ui/shadowScroll.ts?","./app/client/ui/widgetTypesMap.ts?","./app/client/ui2018/ColorPalette.ts?","./app/client/ui2018/ColorSelect.ts?","./app/client/ui2018/buttonSelect.ts?","./app/client/ui2018/draggableList.ts?","./app/client/widgets/CellStyle.ts?","./app/client/widgets/ChoiceListEditor.ts?","./app/client/widgets/ChoiceListEntry.ts?","./app/client/widgets/ChoiceTextBox.ts?","./app/client/widgets/ChoiceToken.ts?","./app/client/widgets/ConditionalStyle.ts?","./app/client/widgets/CurrencyPicker.ts?","./app/client/widgets/DiscussionEditor.ts?","./app/client/widgets/EditorButtons.ts?","./app/client/widgets/EditorPlacement.ts?","./app/client/components/ColumnTransform.ts?","./app/client/components/FormulaTransform.ts?","./app/client/components/TypeConversion.ts?","./app/client/components/TypeTransform.ts?","./app/client/ui/FieldMenus.ts?","./app/client/widgets/DiffBox.ts?","./app/client/widgets/AttachmentsWidget.ts?","./app/client/widgets/AttachmentsEditor.ts?","./app/client/widgets/ChoiceListCell.ts?","./app/client/widgets/NTextEditor.ts?","./app/client/widgets/HyperLinkEditor.ts?","./app/client/widgets/HyperLinkTextBox.ts?","./app/client/widgets/NumericTextBox.ts?","./app/client/widgets/Reference.ts?","./app/client/lib/ReferenceUtils.ts?","./app/client/widgets/ReferenceEditor.ts?","./app/client/widgets/ReferenceListEditor.ts?","./app/client/widgets/Toggle.ts?","./app/client/widgets/UserTypeImpl.ts?","./app/client/widgets/Spinner.ts?","./app/client/widgets/ReferenceList.ts?","./app/client/widgets/FieldBuilder.ts?","./app/client/widgets/ErrorDom.ts?","./app/client/widgets/EditorTooltip.ts?","./app/client/widgets/FieldEditor.ts?","./app/client/widgets/FloatingEditor.ts?","./app/client/widgets/FormulaAssistant.ts?","./app/client/widgets/FormulaEditor.ts?","./app/client/widgets/NTextBox.ts?","./app/client/widgets/NewAbstractWidget.ts?","./app/client/widgets/NewBaseEditor.ts?","./app/client/widgets/TZAutocomplete.ts?","./app/client/widgets/UserType.ts?","./app/common/ActionRouter.ts?","./app/common/ActionSummary.ts?","./app/common/AsyncCreate.ts?","./app/common/ColumnFilterFunc.ts?","./app/common/CustomWidget.ts?","./app/common/DisposableWithEvents.ts?","./app/common/FilterState.ts?","./app/common/NumberFormat.ts?","./app/common/NumberParse.ts?","./app/common/PluginInstance.ts?","./app/common/RelativeDates.ts?","./app/common/RowFilterFunc.ts?","./app/common/SortFunc.ts?","./app/common/SortSpec.ts?","./app/common/ValueFormatter.ts?","./app/common/ValueParser.ts?","./app/common/getCurrentTime.ts?","./app/common/gristTypes.ts?","./app/common/isHiddenTable.ts?","./app/common/parseDate.ts?","./app/common/tsvFormat.ts?","./app/plugin/GristAPI.ts?","./app/plugin/GristData.ts?","./app/plugin/TypeCheckers.ts?","./app/plugin/CustomSectionAPI-ti.ts?","./app/plugin/FileParserAPI-ti.ts?","./app/plugin/GristAPI-ti.ts?","./app/plugin/GristTable-ti.ts?","./app/plugin/ImportSourceAPI-ti.ts?","./app/plugin/InternalImportSourceAPI-ti.ts?","./app/plugin/RenderOptions-ti.ts?","./app/plugin/StorageAPI-ti.ts?","./app/plugin/WidgetAPI-ti.ts?","./app/plugin/objtypes.ts?","./app/client/components/AceEditor.js?","./app/client/components/Base.js?","./app/client/components/BaseView.js?","./app/client/lib/dispose.js?","./app/client/lib/koArray.js?","./app/client/lib/koDom.js?","./app/client/lib/koForm.js?","./app/client/lib/koUtil.js?","./app/client/models/BaseRowModel.js?","./app/client/models/DataTableModel.js?","./app/client/models/TableModel.js?","./app/client/models/modelUtil.js?","./app/client/widgets/AbstractWidget.js?","./app/client/widgets/BaseEditor.js?","./app/client/widgets/CheckBoxEditor.js?","./app/client/widgets/ChoiceEditor.js?","./app/client/widgets/DateEditor.js?","./app/client/widgets/DateTextBox.js?","./app/client/widgets/DateTimeEditor.js?","./app/client/widgets/DateTimeTextBox.js?","./app/client/widgets/TextEditor.js?","./node_modules/moment/locale/ sync \\b\\B?"],"sourcesContent":["import ace, {Ace} from 'ace-builds';\nimport {ISuggestionWithValue} from 'app/common/ActiveDocAPI';\nimport {commonUrls} from 'app/common/gristUrls';\n\nexport interface ICompletionOptions {\n  getSuggestions(prefix: string): Promise<ISuggestionWithValue[]>;\n}\n\nconst completionOptions = new WeakMap<Ace.Editor, ICompletionOptions>();\n\nexport function setupAceEditorCompletions(editor: Ace.Editor, options: ICompletionOptions) {\n  initCustomCompleter();\n  completionOptions.set(editor, options);\n\n  // Create Autocomplete object at this point so we can turn autoSelect off.\n  // There doesn't seem to be any way to get ace to respect autoSelect otherwise.\n  // It is important for autoSelect to be off so that hitting enter doesn't automatically\n  // use a suggestion, a change of behavior that doesn't seem particularly desirable and\n  // which also breaks several existing tests.\n  const {Autocomplete} = ace.require('ace/autocomplete');\n\n  const completer = new Autocomplete();\n  completer.autoSelect = false;\n  (editor as any).completer = completer;\n\n  // Used in the patches below. Returns true if the client should fetch fresh completions from the server,\n  // as it may have new suggestions that aren't currently shown.\n  completer._gristShouldRefreshCompletions = function(this: any, start: any) {\n    // These two lines are based on updateCompletions() in the ace autocomplete source code.\n    const end = this.editor.getCursorPosition();\n    const prefix: string = this.editor.session.getTextRange({start, end}).toLowerCase();\n\n    return (\n      prefix.endsWith(\".\") ||  // to get fresh attributes of references\n      prefix.endsWith(\".lookupone(\") ||  // to get initial argument suggestions\n      prefix.endsWith(\".lookuprecords(\")\n    );\n  }.bind(completer);\n\n  // Patch updateCompletions and insertMatch so that fresh completions are fetched when appropriate.\n  const originalUpdate = completer.updateCompletions.bind(completer);\n  completer.updateCompletions = function(this: any, keepPopupPosition: boolean) {\n    // This next line is copied from updateCompletions() in the ace autocomplete source code.\n    if (keepPopupPosition && this.base && this.completions) {\n      // When we need fresh completions, prevent this same block from running\n      // in the original updateCompletions() function. Otherwise it will just keep any remaining completions that match,\n      // or not show any completions at all.\n      if (this._gristShouldRefreshCompletions(this.base)) {\n        this.completions = null;\n      }\n    }\n    return originalUpdate(keepPopupPosition);\n  }.bind(completer);\n\n  // Similar patch to the above.\n  const originalInsertMatch = completer.insertMatch.bind(completer);\n  completer.insertMatch = function(this: any) {\n    const base = this.base;  // this.base may become null after the next line, save it now.\n    const result = originalInsertMatch.apply(...arguments);\n    if (this._gristShouldRefreshCompletions(base)) {\n      this.showPopup(this.editor);\n    }\n    return result;\n  }.bind(completer);\n\n  aceCompleterAddHelpLinks(completer);\n\n  // Explicitly destroy the auto-completer on disposal, since it doesn't not remove the element\n  // it adds to body even when it detaches itself. Ace's AutoCompleter doesn't expose any\n  // interface for this, so this takes some hacking. (One reason for this is that Ace seems to\n  // expect that a single AutoCompleter would be used for all editor instances.)\n  editor.on('destroy' as any, () => {\n    if (completer.editor) {\n      completer.detach();\n    }\n    if (completer.popup) {\n      completer.popup.destroy();                // This is not enough, but seems relevant to call.\n      completer.popup.container.remove();       // Removes the element from DOM.\n    }\n  });\n}\n\nlet _initialized = false;\nfunction initCustomCompleter() {\n  if (_initialized) { return; }\n  _initialized = true;\n\n  // The default regex just matches identifiers. We expand it to include periods (to capture\n  // attributes) and \"$\", for Grist column names. In addition, we autocomplete lookup formulas\n  // with the function name, to give suggestions for lookup keyword arguments.\n  const prefixMatchRegex = /\\w+\\.(?:lookupRecords|lookupOne)\\([\\w.$\\u00A2-\\uFFFF]*$|[\\w.$\\u00A2-\\uFFFF]+$/;\n\n  // Monkey-patch getCompletionPrefix. This is based on the source code in\n  // node_modules/ace-builds/src-noconflict/ext-language_tools.js, simplified to do the one thing\n  // we want here (since the original method's generality doesn't help us here).\n  const util = ace.require('ace/autocomplete/util');\n  util.getCompletionPrefix = function getCompletionPrefix(this: any, editor: Ace.Editor) {\n    const pos = editor.getCursorPosition();\n    const line = editor.session.getLine(pos.row);\n    const match = line.slice(0, pos.column).match(prefixMatchRegex);\n    return match ? match[0] : \"\";\n  };\n\n  // Add some autocompletion with partial access to document\n  const aceLanguageTools = ace.require('ace/ext/language_tools');\n  aceLanguageTools.setCompleters([]);\n  aceLanguageTools.addCompleter({\n    // For autocompletion we ship text to the sandbox and run standard completion there.\n    async getCompletions(\n      editor: Ace.Editor,\n      session: Ace.EditSession,\n      pos: Ace.Position,\n      prefix: string,\n      callback: any\n    ) {\n      const options = completionOptions.get(editor);\n      if (!options || prefix.length === 0) { callback(null, []); return; }\n\n      // Autocompletion can be triggered in the middle of a function or method call, like\n      // in the case where one function is being switched with another. Since we normally\n      // append a \"(\" when completing such suggestions, we need to be careful not to do\n      // so if a \"(\" is already present. One way to do this in ACE is to check if the\n      // current token is a function/identifier, and the next token is a lparen; if both are\n      // true, we skip appending a \"(\" to each suggestion.\n      const wordRange = session.getWordRange(pos.row, pos.column);\n      const token = session.getTokenAt(pos.row, wordRange.end.column) as Ace.Token;\n      const nextToken = session.getTokenAt(pos.row, wordRange.end.column + 1);\n      const isRenamingFunc = ['function.support', 'identifier'].includes(token.type)\n        && nextToken?.type === 'paren.lparen';\n\n      const suggestions = await options.getSuggestions(prefix);\n      // ACE autocompletions are very poorly documented. This is somewhat helpful:\n      // https://prog.world/implementing-code-completion-in-ace-editor/\n      const completions: AceSuggestion[] = suggestions.map(suggestionWithValue => {\n        const [suggestion, example] = suggestionWithValue;\n        if (Array.isArray(suggestion)) {\n          const [funcname, argSpec] = suggestion;\n          return {\n            value: funcname + (isRenamingFunc ? '' : '('),\n            caption: funcname + argSpec,\n            score: 1,\n            example,\n            funcname,\n          };\n        } else {\n          return {\n            value: suggestion,\n            caption: suggestion,\n            score: 1,\n            example,\n            funcname: '',\n          };\n        }\n      });\n\n      // For suggestions with example values, calculate the 'shared padding', i.e.\n      // the minimum width in characters that all suggestions should fill\n      // (before adding 'base padding') so that the examples are aligned.\n      const captionLengths = completions.filter(c => c.example).map(c => c.caption.length);\n      const sharedPadding = Math.min(\n        Math.min(...captionLengths) + MAX_RELATIVE_SHARED_PADDING,\n        Math.max(...captionLengths),\n        MAX_ABSOLUTE_SHARED_PADDING,\n      );\n\n      // Add the padding spaces and example values to the captions.\n      for (const c of completions) {\n        if (!c.example) { continue; }\n        const numSpaces = Math.max(0, sharedPadding - c.caption.length) + BASE_PADDING;\n        c.caption = c.caption + ' '.repeat(numSpaces) + c.example;\n      }\n\n      callback(null, completions);\n    },\n  });\n}\n\n// Regardless of other suggestions, always add this many spaces between the caption and the example.\nconst BASE_PADDING = 8;\n// In addition to the base padding, there's shared padding, which is the minimum number of spaces\n// that all suggestions should fill so that the examples are aligned.\n// However, one extremely long suggestion shouldn't result in huge padding for all suggestions.\n// To mitigate this, there are two limits on the shared padding.\n// The first limit is relative to the shortest caption in the suggestions.\n// So if all the suggestions are similarly long, there will still be some shared padding.\nconst MAX_RELATIVE_SHARED_PADDING = 15;\n// The second limit is absolute, so that even if all suggestions are long, we don't run out of popup space.\nconst MAX_ABSOLUTE_SHARED_PADDING = 40;\n\n// Suggestion objects that are passed to ace.\ninterface AceSuggestion {\n  value: string;    // the actual value inserted by the autocomplete\n  caption: string;  // the value displayed in the popup\n  score: number;\n\n  // Custom attributes used only by us\n  example: string | null;  // example value of the suggestion to show on the right\n  funcname: string;        // name of a function to link to in documentation\n}\n\n/**\n * When autocompleting a known function (with funcname received from the server call), turn the\n * function name into a link to Grist documentation.\n *\n * This is only applied for items returned from getCompletions() that include a our custom\n * `funcname` attribute.\n *\n * ACE autocomplete is poorly documented, and poorly customizable, so this is accomplished by\n * monkey-patching it. Further, the only text styling is done via styled tokens, but we can style\n * them to look like links, and handle clicks to open the destination URL.\n *\n * This implementation relies a lot on the details of the implementation in\n * node_modules/ace-builds/src-noconflict/ext-language_tools.js. Updates to ace-builds module may\n * easily break it.\n */\nfunction aceCompleterAddHelpLinks(completer: any) {\n  // Replace the $init function in order to intercept the creation of the autocomplete popup.\n  const init = completer.$init;\n  completer.$init = function() {\n    const popup = init.apply(this, arguments);\n    customizeAceCompleterPopup(this, popup);\n    return popup;\n  };\n}\n\nfunction customizeAceCompleterPopup(completer: any, popup: any) {\n  // Replace the $tokenizeRow function to produce customized tokens to style the link part.\n  const origTokenize = popup.session.bgTokenizer.$tokenizeRow;\n  popup.session.bgTokenizer.$tokenizeRow = function(row: any) {\n    const tokens = origTokenize(row);\n    return retokenizeAceCompleterRow(popup.data[row], tokens);\n  };\n\n  // Replace the click handler with one that handles link clicks.\n  popup.removeAllListeners(\"click\");\n  popup.on(\"click\", function(e: any) {\n    if (!maybeAceCompleterLinkClick(e.domEvent)) {\n      completer.insertMatch();\n    }\n    e.stop();\n  });\n}\n\nfunction retokenizeAceCompleterRow(rowData: AceSuggestion, tokens: Ace.Token[]): Ace.Token[] {\n  if (!(rowData.funcname || rowData.example)) {\n    // Not a special completion, pass through the result of ACE's original tokenizing.\n    return tokens;\n  }\n\n  // ACE's original tokenizer splits rowData.caption into tokens to highlight matching portions.\n  // We jump in, and further divide the tokens so that those that form the link get an extra CSS\n  // class. ACE's will turn token.type into CSS classes by splitting the type on \".\" and prefixing\n  // the resulting substrings with \"ace_\".\n\n  // Funcname may be the recognized name itself (e.g. \"UPPER\"), or a method (like\n  // \"Table1.lookupOne\"), in which case only the portion after the dot is the recognized name.\n\n  // Figure out the portion that should be linkified.\n  const dot = rowData.funcname.lastIndexOf(\".\");\n  const linkStart = dot < 0 ? 0 : dot + 1;\n  const linkEnd = rowData.funcname.length;\n\n  const newTokens = [];\n\n  // Include into new tokens a special token that will be hidden, but include the link URL. On\n  // click, we find it to know what URL to open.\n  const href = `${commonUrls.functions}/#` +\n    rowData.funcname.slice(linkStart, linkEnd).toLowerCase();\n  newTokens.push({value: href, type: 'grist_link_hidden'});\n\n  // Find where the example value (if any) starts, so that it can be shown in grey.\n  let exampleStart: number | undefined;\n  if (rowData.example) {\n    if (!rowData.caption.endsWith(rowData.example)) {\n      // Just being cautious, this shouldn't happen.\n      console.warn(`Example \"${rowData.example}\" does not match caption \"${rowData.caption}\"`);\n    } else {\n      exampleStart = rowData.caption.length - rowData.example.length;\n    }\n  }\n\n  // Go through tokens, splitting them if needed, and modifying those that form the link part.\n  let position = 0;\n  for (const t of tokens) {\n    if (exampleStart && position + t.value.length > exampleStart) {\n      // Ensure that all text after `exampleStart` has the type 'grist_example'.\n      // Don't combine that type with the existing type, because ace highlights weirdly sometimes\n      // and it's best to just override that.\n      const end = exampleStart - position;\n      if (end > 0) {\n        newTokens.push({value: t.value.slice(0, end), type: t.type});\n        newTokens.push({value: t.value.slice(end), type: 'grist_example'});\n      } else {\n        newTokens.push({value: t.value, type: 'grist_example'});\n      }\n    } else {\n      // Handle links to documentation.\n      // lStart/lEnd are indices of the link within the token, possibly negative.\n      const lStart = linkStart - position, lEnd = linkEnd - position;\n      if (lStart > 0) {\n        const beforeLink = t.value.slice(0, lStart);\n        newTokens.push({value: beforeLink, type: t.type});\n      }\n      if (lEnd > 0) {\n        const inLink = t.value.slice(Math.max(0, lStart), lEnd);\n        const newType = t.type + (t.type ? '.' : '') + 'grist_link';\n        newTokens.push({value: inLink, type: newType});\n        if (lEnd < t.value.length) {\n          const afterLink = t.value.slice(lEnd);\n          newTokens.push({value: afterLink, type: t.type});\n        }\n      } else {\n        newTokens.push(t);\n      }\n    }\n    position += t.value.length;\n  }\n  return newTokens;\n}\n\n// On any click on AceCompleter popup, we check if we happened to click .ace_grist_link class. If\n// so, we should be able to find the URL and open another window to it.\nfunction maybeAceCompleterLinkClick(domEvent: Event) {\n  const tgt = domEvent.target as HTMLElement;\n  if (tgt && tgt.matches('.ace_grist_link')) {\n    const dest = tgt.parentElement?.querySelector('.ace_grist_link_hidden');\n    if (dest) {\n      window.open(dest.textContent!, \"_blank\");\n      return true;\n    }\n  }\n  return false;\n}\n","import {colors, isNarrowScreenObs} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {Disposable, dom, DomArg, DomElementArg, makeTestId, Observable, styled} from 'grainjs';\n\nconst testId = makeTestId('test-banner-');\n\nexport interface BannerOptions {\n  /**\n   * Content to display in the banner.\n   */\n  content: DomArg;\n\n  /**\n   * The banner style.\n   *\n   * Warning banners have a yellow background. Error banners have a red\n   * background.\n   */\n  style: 'warning' | 'error' | 'info';\n\n  /**\n   * Optional variant of `content` to display when screen width becomes narrow.\n   */\n  contentSmall?: DomArg;\n\n  /**\n   * Whether a button to close the banner should be shown.\n   *\n   * If true, `onClose` should also be specified; it will be called when the close\n   * button is clicked.\n   *\n   * Defaults to false.\n   */\n  showCloseButton?: boolean;\n\n  /**\n   * Whether a button to collapse/expand the banner should be shown on narrow screens.\n   *\n   * Defaults to false.\n   */\n  showExpandButton?: boolean;\n\n  /**\n   * If provided, applies the css class to the banner container.\n   */\n  bannerCssClass?: string;\n\n  /**\n   * Function that is called when the banner close button is clicked.\n   *\n   * Should be used to handle disposal of the Banner.\n   */\n  onClose?(): void;\n}\n\n/**\n * A customizable banner for displaying at the top of a page.\n */\nexport class Banner extends Disposable {\n  private readonly _isExpanded = Observable.create(this, true);\n\n  constructor(private _options: BannerOptions) {\n    super();\n  }\n\n  public buildDom() {\n    return cssBanner({class: this._options.bannerCssClass || ''},\n      cssBanner.cls(`-${this._options.style}`),\n      this._buildContent(),\n      this._buildButtons(),\n      testId('element')\n    );\n  }\n\n  private _buildContent() {\n    const {content, contentSmall} = this._options;\n    return dom.domComputed(use => {\n      if (contentSmall === undefined) { return [content]; }\n\n      const isExpanded = use(this._isExpanded);\n      const isNarrowScreen = use(isNarrowScreenObs());\n      return [isNarrowScreen && !isExpanded ? contentSmall : content];\n    });\n  }\n\n  private _buildButtons() {\n    return cssButtons(\n      this._options.showExpandButton ? this._buildExpandButton() : null,\n      this._options.showCloseButton ? this._buildCloseButton() : null,\n    );\n  }\n\n  private _buildCloseButton() {\n    return cssButton('CrossBig',\n      dom.on('click', () => this._options.onClose?.()),\n      testId('close'),\n    );\n  }\n\n  private _buildExpandButton() {\n    return dom.maybe(isNarrowScreenObs(), () => {\n      return cssExpandButton('Dropdown',\n        cssExpandButton.cls('-expanded', this._isExpanded),\n        dom.on('click', () => this._isExpanded.set(!this._isExpanded.get())),\n      );\n    });\n  }\n}\n\nexport function buildBannerMessage(...domArgs: DomElementArg[]) {\n  return cssBannerMessage(\n    cssIcon('Idea'),\n    cssLightlyBoldedText(domArgs),\n  );\n}\n\nconst cssBanner = styled('div', `\n  display: flex;\n  padding: 10px;\n  gap: 16px;\n  color: white;\n\n  &-info {\n    color: black;\n    background: #FFFACD;\n  }\n\n  &-warning {\n    background: #E6A117;\n  }\n\n  &-error {\n    background: ${colors.error};\n  }\n`);\n\nexport const cssBannerLink = styled('span', `\n  cursor: pointer;\n  color: unset;\n  text-decoration: underline;\n\n  &:hover, &:focus {\n    color: unset;\n  }\n`);\n\nconst cssButtons = styled('div', `\n  display: flex;\n  gap: 16px;\n  flex-shrink: 0;\n  margin-left: auto;\n`);\n\nconst cssButton = styled(icon, `\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n  background-color: white;\n`);\n\nconst cssExpandButton = styled(cssButton, `\n  &-expanded {\n    -webkit-mask-image: var(--icon-DropdownUp) !important;\n  }\n`);\n\nconst cssLightlyBoldedText = styled('div', `\n  font-weight: 500;\n`);\n\nconst cssIconAndText = styled('div', `\n  display: flex;\n  gap: 16px;\n`);\n\nconst cssBannerMessage = styled(cssIconAndText, `\n  flex-grow: 1;\n  justify-content: center;\n`);\n\nconst cssIcon = styled(icon, `\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n  background-color: white;\n`);\n","import {typedCompare} from 'app/common/SortFunc';\nimport {decodeObject} from 'app/plugin/objtypes';\nimport {Datum} from 'plotly.js';\nimport range = require('lodash/range');\nimport uniqBy = require('lodash/uniqBy');\nimport flatten = require('lodash/flatten');\n\n/**\n * Sort all values in a list of series according to the values in the first one.\n */\nexport function sortByXValues(series: Array<{values: Datum[]}>): void {\n  // The order of points matters for graph types that connect points with lines: the lines are\n  // drawn in order in which the points appear in the data. For the chart types we support, it\n  // only makes sense to keep the points sorted. (The only downside is that Grist line charts can\n  // no longer produce arbitrary line drawings.)\n  if (!series[0]) { return; }\n  const xValues = series[0].values;\n  const indices = xValues.map((val, i) => i);\n  indices.sort((a, b) => typedCompare(xValues[a], xValues[b]));\n  for (const s of series) {\n    const values = s.values;\n    s.values = indices.map((i) => values[i]);\n  }\n}\n\n// Makes series so that the values of series[0] are duplicate free.\nexport function uniqXValues<T extends {values: Datum[]}>(series: Array<T>) {\n  if (!series[0]) { return; }\n  const n = series[0].values.length;\n  const indexToKeep = new Set(uniqBy(range(n), (i) => series[0].values[i]));\n  series.forEach((line: T) => {\n    line.values = line.values.filter((_val, i) => indexToKeep.has(i));\n  });\n}\n\n// Creates new version of series that split any entry whose value in the first series is a list into\n// multiple entries, one entry for each list's item. For all other series, newly created entries have\n// the same value as the original.\nexport function splitValues<T extends {values: Datum[]}>(series: Array<T>): Array<T> {\n  return splitValuesByIndex(series, 0);\n}\n\n// This method is like splitValues except it splits according to the values of the series at position index.\nexport function splitValuesByIndex<T extends {values: Datum[]}>(series: Array<T>, index: number): Array<T> {\n  const decoded = (series[index].values as any[]).map(decodeObject);\n\n  return series.map((s, si) => {\n    if (si === index) {\n      return {...series[index], values: flatten(decoded)};\n    }\n    let values: Datum[] = [];\n    for (const [i, splitByValue] of decoded.entries()) {\n      if (Array.isArray(splitByValue)) {\n        values = values.concat(Array(splitByValue.length).fill(s.values[i]));\n      } else {\n        values.push(s.values[i]);\n      }\n    }\n    return {...s, values};\n  });\n}\n\n/**\n * Makes sure series[0].values includes all of the values in xvalues and that they appears in the\n * same order. 0 is used to fill missing values in series[i].values for i > 1 (making function\n * suited only for numeric series AND only to use with for bar charts). Function does mutate series.\n *\n * Note it would make more sense to pad missing values with `null`, but plotly handles null the same\n * as missing values. Hence we're padding with 0.\n */\nexport function consolidateValues(series: Array<{values: Datum[]}>, xvalues: Datum[]) {\n  let i = 0;\n  for (const xval of xvalues) {\n    if (i < series[0].values.length && xval !== series[0].values[i]\n        || i > series[0].values.length - 1) {\n      series[0].values.splice(i, 0, xval);\n      for (let j = 1; j < series.length; ++j) {\n        series[j].values.splice(i, 0, 0);\n      }\n    }\n    while (xval === series[0].values[i] && i < series[0].values.length) {\n      i++;\n    }\n  }\n  return series;\n}\n\nexport function formatPercent(val: number) {\n  return Math.floor(val * 100) + \" %\";\n}\n","import BaseView from 'app/client/components/BaseView';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {consolidateValues, formatPercent, sortByXValues, splitValuesByIndex,\n        uniqXValues} from 'app/client/lib/chartUtil';\nimport {Delay} from 'app/client/lib/Delay';\nimport {Disposable} from 'app/client/lib/dispose';\nimport {fromKoSave} from 'app/client/lib/fromKoSave';\nimport {loadPlotly, PlotlyType} from 'app/client/lib/imports';\nimport DataTableModel from 'app/client/models/DataTableModel';\nimport {ColumnRec, ViewFieldRec, ViewSectionRec} from 'app/client/models/DocModel';\nimport {reportError} from 'app/client/models/errors';\nimport {KoSaveableObservable, ObjObservable, setSaveValue} from 'app/client/models/modelUtil';\nimport {SortedRowSet} from 'app/client/models/rowset';\nimport {IPageWidget, toPageWidget} from 'app/client/ui/PageWidgetPicker';\nimport {cssLabel, cssRow, cssSeparator} from 'app/client/ui/RightPanelStyles';\nimport {cssFieldEntry, cssFieldLabel, IField, VisibleFieldsConfig } from 'app/client/ui/VisibleFieldsConfig';\nimport {IconName} from 'app/client/ui2018/IconList';\nimport {squareCheckbox} from 'app/client/ui2018/checkbox';\nimport {theme, vars} from 'app/client/ui2018/cssVars';\nimport {cssDragger} from 'app/client/ui2018/draggableList';\nimport {icon} from 'app/client/ui2018/icons';\nimport {IOptionFull, linkSelect, menu, menuItem, menuText, select} from 'app/client/ui2018/menus';\nimport {nativeCompare, unwrap} from 'app/common/gutil';\nimport {Sort} from 'app/common/SortSpec';\nimport {BaseFormatter} from 'app/common/ValueFormatter';\nimport {decodeObject} from 'app/plugin/objtypes';\nimport {Events as BackboneEvents} from 'backbone';\nimport {Computed, dom, DomContents, DomElementArg, fromKo, Disposable as GrainJSDisposable,\n        IDisposable, IOption, makeTestId, Observable, styled, UseCB} from 'grainjs';\nimport * as ko from 'knockout';\nimport clamp = require('lodash/clamp');\nimport debounce = require('lodash/debounce');\nimport defaults = require('lodash/defaults');\nimport defaultsDeep = require('lodash/defaultsDeep');\nimport isNumber = require('lodash/isNumber');\nimport merge = require('lodash/merge');\nimport sum = require('lodash/sum');\nimport union = require('lodash/union');\nimport type {Annotations, Config, Datum, ErrorBar, Layout, LayoutAxis, Margin,\n    PlotData as PlotlyPlotData} from 'plotly.js';\nimport {makeT} from 'app/client/lib/localization';\n\n\nlet Plotly: PlotlyType;\n\n// When charting multiple series based on user data, limit the number of series given to plotly.\nconst MAX_SERIES_IN_CHART = 100;\nconst DONUT_DEFAULT_HOLE_SIZE = 0.75;\nconst DONUT_DEFAULT_TEXT_SIZE = 24;\n\nconst testId = makeTestId('test-chart-');\n\nconst t = makeT('ChartView');\n\nfunction isPieLike(chartType: string) {\n  return ['pie', 'donut'].includes(chartType);\n}\n\nfunction firstFieldIsLabels(chartType: string) {\n  return ['pie', 'donut', 'kaplan_meier', 'scatter'].includes(chartType);\n}\n\nexport function isNumericOnly(chartType: string) {\n  return ['bar', 'pie', 'donut', 'kaplan_meier', 'line', 'area', 'scatter'].includes(chartType);\n}\n\n// Returns the type of the visibleCol if col is of type `Ref`, otherwise returns the type of col.\nfunction visibleColType(col: ColumnRec, use: UseCB = unwrap) {\n  const colType = use(col.pureType);\n  const isRef = colType === 'Ref';\n  return isRef ? use(use(col.visibleColModel).type) : colType;\n}\n\n// Returns true if col is one of 'Numeric', 'Int', 'Any'.\nexport function isNumericLike(col: ColumnRec, use: UseCB = unwrap) {\n  const colType = visibleColType(col, use);\n  return ['Numeric', 'Int', 'Any'].includes(colType);\n}\n\n\ninterface ChartOptions {\n  multiseries?: boolean;\n  lineConnectGaps?: boolean;\n  lineMarkers?: boolean;\n  stacked?: boolean;\n  invertYAxis?: boolean;\n  logYAxis?: boolean;\n  // If \"symmetric\", one series after each Y series gives the length of the error bars around it. If\n  // \"separate\", two series after each Y series give the length of the error bars above and below it.\n  errorBars?: 'symmetric' | 'separate';\n  donutHoleSize?: number;\n  showTotal?: boolean;\n  textSize?: number;\n  isXAxisUndefined?: boolean;\n  orientation?: 'v'|'h';\n  aggregate?: boolean;\n}\n\n// tslint:disable:no-console\n\n// We use plotly's Datum to describe the type of values in cells. Cells may not match this\n// perfectly, but it's helpful for type-checking anyway.\ntype RowPropGetter = (rowId: number) => Datum;\n\n// We convert Grist data to a list of Series first, from which we then construct Plotly traces.\ninterface Series {\n  label: string;          // Corresponds to the column name.\n  group?: Datum;          // The group value, when grouped.\n  values: Datum[];\n  isInSortSpec?: boolean; // Whether this series is present in sort spec for this chart.\n}\n\nfunction getSeriesName(series: Series, haveMultiple: boolean) {\n  if (series.group === undefined) {\n    return series.label;\n  }\n\n  // Let's show [Blank] instead of leaving the name empty for that series. There is a possibility\n  // to confuse user between a blank cell and a cell holding the `[Blank]` value. But that is rare\n  // enough, and confusion can easily be removed by the chart creator by editing blank cells\n  // directly in the the table to put something more meaningful instead.\n  const groupName = series.group === '' ? '[Blank]' : series.group;\n  if (haveMultiple) {\n    return `${groupName} \\u2022 ${series.label}`;  // the unicode character is \"black circle\"\n  } else {\n    return String(groupName);\n  }\n}\n\ntype Data = Partial<PlotlyPlotData>;\n\n// The output of a ChartFunc. Normally it just returns one or more Data[] series, but sometimes it\n// includes layout information: e.g. a \"Scatter Plot\" returns a Layout with axis labels.\ninterface PlotData {\n  data: Data[];\n  layout?: Partial<Layout>;\n  config?: Partial<Config>;\n}\n\n// Data options to pass to chart functions.\ninterface DataOptions extends Data {\n\n  // Allows to set the pie sort option (see: https://plotly.com/javascript/reference/pie/#pie-sort).\n  // Supports pie charts only.\n  sort?: boolean;\n\n  // Formatter to be used for the total inside donut charts.\n  totalFormatter?: BaseFormatter;\n}\n\n// Convert a list of Series into a set of Plotly traces.\ntype ChartFunc = (series: Series[], options: ChartOptions, dataOptions?: DataOptions) => PlotData;\n\n\n// Helper for converting numeric Date/DateTime values (seconds since Epoch) to JS Date objects for\n// use with plotly.\nfunction dateGetter(getter: RowPropGetter): RowPropGetter {\n  return (r: number) => {\n    // 0's will turn into nulls, and non-numbers will turn into NaNs and then nulls. This prevents\n    // Plotly from including 1970-01-01 onto X axis, which usually makes the plot useless.\n    const val = (getter(r) as number) * 1000;\n    // Plotly recommends using strings for dates rather than Date objects or timestamps. They are\n    // interpreted more consistently. See https://github.com/plotly/plotly.js/issues/1532#issuecomment-290420534.\n    return val ? new Date(val).toISOString() : null;\n  };\n}\n\n\n// List of column types whose values are encoded has list, ie: ['L', 'foo', ...]. Such values\n// require special treatment to show correctly in charts.\nconst LIST_TYPES = ['ChoiceList', 'RefList'];\n\n/**\n * ChartView component displays created charts.\n */\nexport class ChartView extends Disposable {\n  public viewPane: Element;\n\n  // These elements are defined in BaseView, from which we inherit with some hackery.\n  protected viewSection: ViewSectionRec;\n  protected sortedRows: SortedRowSet;\n  protected tableModel: DataTableModel;\n  protected gristDoc: GristDoc;\n\n  private _chartType: ko.Observable<string>;\n  private _options: ObjObservable<any>;\n  private _chartDom: HTMLElement;\n  private _update: () => void;\n  private _resize: () => void;\n\n  private _formatterComp: ko.Computed<BaseFormatter|undefined>;\n\n  // peek section's sort spec\n  private get _sortSpec() { return this.viewSection.activeSortSpec.peek(); }\n\n  public create(gristDoc: GristDoc, viewSectionModel: ViewSectionRec) {\n    BaseView.call(this as any, gristDoc, viewSectionModel);\n\n    this._chartDom = this.autoDispose(this.buildDom());\n\n    this._resize = this.autoDispose(Delay.untilAnimationFrame(this._resizeChart, this));\n\n    // Note that .viewPane is used by ViewLayout to insert the actual DOM into the document.\n    this.viewPane = this._chartDom;\n\n    this._chartType = this.viewSection.chartTypeDef;\n    this._options = this.viewSection.optionsObj;\n\n    // Computed that returns the formatter of the first series. This is useful to format the total\n    // within a donut chart.\n    this._formatterComp = this.autoDispose(ko.computed(() => {\n      const field = this.viewSection.viewFields().at(1);\n      return field?.visibleColFormatter();\n    }));\n\n    this._update = debounce(() => this._updateView(), 0);\n\n    let subs: IDisposable[] = [];\n    this.autoDispose(this._chartType.subscribe(this._update));\n    this.autoDispose(this._options.subscribe(this._update));\n    this.autoDispose(this.viewSection.viewFields().subscribe((viewFields: ViewFieldRec[]) => {\n      this._update();\n      subs.forEach((sub) => sub.dispose());\n      subs = [\n        ...viewFields.map((field) => field.displayColModel.peek().type.subscribe(this._update)),\n        ...viewFields.map((field) => field.visibleColModel.peek().type.subscribe(this._update)),\n      ];\n    }));\n    this.listenTo(this.sortedRows, 'rowNotify', this._update);\n    this.autoDispose(this.sortedRows.getKoArray().subscribe(this._update));\n    this.autoDispose(this._formatterComp.subscribe(this._update));\n    this.autoDispose(this.gristDoc.currentTheme.addListener(() => this._update()));\n  }\n\n  public prepareToPrint(onOff: boolean) {\n    Plotly.relayout(this._chartDom, {}).catch(reportError);\n  }\n\n  protected onTableLoaded() {\n    (BaseView.prototype as any).onTableLoaded.call(this);\n    this._update();\n  }\n\n  protected onResize() {\n    this._resize();\n  }\n\n  protected buildDom() {\n    return dom('div.chart_container', testId('container'));\n  }\n\n  private listenTo(...args: any[]): void { /* replaced by Backbone */ }\n\n  private async _updateView() {\n    if (this.isDisposed()) { return; }\n\n    const chartFunc = chartTypes[this._chartType()];\n    if (typeof chartFunc !== 'function') {\n      console.warn(\"Unknown trace type %s\", this._chartType());\n      return;\n    }\n\n    const fields: ViewFieldRec[] = this.viewSection.viewFields().all();\n    const rowIds: number[] = this.sortedRows.getKoArray().peek() as number[];\n    const startIndexForYAxis = this._options.prop('multiseries').peek() ? 2 : 1;\n    let series: Series[] = fields\n      .filter((field, i) => i < startIndexForYAxis || this._isCompatibleSeries(field.column.peek()))\n      .map((field) => {\n        // Use the colId of the displayCol, which may be different in case of Reference columns.\n        const colId: string = field.displayColModel.peek().colId.peek();\n        const getter = this.tableModel.tableData.getRowPropFunc(colId) as RowPropGetter;\n        const pureType = field.displayColModel().pureType();\n        const fullGetter = (pureType === 'Date' || pureType === 'DateTime') ? dateGetter(getter) : getter;\n        return {\n          label: field.label(),\n          values: rowIds.map(fullGetter),\n          isInSortSpec: Boolean(Sort.findCol(this._sortSpec, field.colRef.peek())),\n        };\n      });\n\n    for (let i = 0; i < series.length; ++i) {\n      if (i < fields.length && LIST_TYPES.includes(fields[i].column.peek().pureType.peek())) {\n        if (i < startIndexForYAxis) {\n          // For x-axis and group column data, split series we should split records.\n          series = splitValuesByIndex(series, i);\n        } else {\n          // For all y-axis, it's not sure what would be a sensible representation for choice list,\n          // simply stringify choice list values seems reasonable.\n          series[i].values = series[i].values.map((v) => String(decodeObject(v as any)));\n        }\n      }\n    }\n\n    const dataOptions: DataOptions = {};\n    const options: ChartOptions = this._options.peek() || {};\n    let plotData: PlotData = {data: []};\n\n    if (isPieLike(this._chartType.peek())) {\n\n      // Plotly's pie charts have a sort option that is enabled by default. Let's turn it off.\n      dataOptions.sort = false;\n\n      // This line is for labels to stay in order when value changes, which can happen when using\n      // charts with linked list.\n      sortByXValues(series);\n    }\n\n    if (this._chartType.peek() === 'donut') {\n      dataOptions.totalFormatter = this._formatterComp.peek();\n    }\n\n    if (!options.multiseries && series.length) {\n      plotData = chartFunc(series, options, dataOptions);\n    } else if (series.length > 1) {\n      // We need to group all series by the first column.\n      // Sort series alphabetically only if user has not defined a sort on this chart.\n      const shouldSort = !series[0].isInSortSpec;\n      const nseries = groupSeries(series[0].values, series.slice(1), shouldSort);\n\n      // This will be in the order in which nseries Map was created; concat() flattens the arrays.\n      const xvalues = Array.from(new Set(series[1].values));\n      for (const gSeries of nseries.values()) {\n\n        // All series have partial list of values, ie: if some may have Q1, Q2, Q3, Q4 as x values\n        // some others might only have Q1. This causes inconsistent result in regard of the order\n        // bars will be displayed by plotly (for bar charts). This eventually result in bars not\n        // following the sorting order. This line fixes that issue by consolidating all series to\n        // have at least on entry of each x values.\n        if (this._chartType.peek() === 'bar') {\n          if (this._sortSpec?.length) { consolidateValues(gSeries, xvalues); }\n        }\n\n        const part = chartFunc(gSeries, options, dataOptions);\n        part.data = plotData.data.concat(part.data);\n        plotData = part;\n      }\n    }\n\n    Plotly = Plotly || await loadPlotly();\n\n    // Loading plotly is asynchronous and it may happen that the chart view had been disposed in the\n    // meantime and cause error later. So let's check again.\n    if (this.isDisposed()) { return; }\n\n    const layout: Partial<Layout> = defaultsDeep(plotData.layout, this._getPlotlyLayout(options));\n    const config: Partial<Config> = {...plotData.config, displayModeBar: false};\n    // react() can be used in place of newPlot(), and is faster when updating an existing plot.\n    await Plotly.react(this._chartDom, plotData.data, layout, config);\n    this._resizeChart();\n  }\n\n  private _resizeChart() {\n    if (this.isDisposed() || !Plotly || !this._chartDom.parentNode) { return; }\n    // Check if the chart is visible before resizing. If it's not visible, Plotly will throw an error.\n    const display = window.getComputedStyle(this._chartDom).display;\n    if (!display || display === 'none') {\n      return;\n    }\n    Plotly.Plots.resize(this._chartDom);\n  }\n\n  private _isCompatibleSeries(col: ColumnRec) {\n    return isNumericOnly(this._chartType.peek()) ? isNumericLike(col) : true;\n  }\n\n  private _getPlotlyLayout(options: ChartOptions): Partial<Layout> {\n    // Note that each call to getPlotlyLayout() creates a new layout object. We are intentionally\n    // avoiding reuse because Plotly caches too many layout calculations when the object is reused.\n    const yaxis: Partial<LayoutAxis> = {automargin: true, title: {standoff: 0}};\n    const xaxis: Partial<LayoutAxis> = {automargin: true, title: {standoff: 0}};\n    if (options.logYAxis) { yaxis.type = 'log'; }\n    if (options.invertYAxis) { yaxis.autorange = 'reversed'; }\n    const layout = {\n      // Margins include labels, titles, legend, and may get auto-expanded beyond this.\n      margin: {\n        l: 50,\n        r: 50,\n        b: 40,  // Space below chart which includes x-axis labels\n        t: 30,  // Space above the chart (doesn't include any text)\n        pad: 4\n      } as Margin,\n      yaxis,\n      xaxis,\n      ...(options.stacked ? {barmode: 'relative'} : {}),\n    };\n    return merge(layout, this._getPlotlyTheme());\n  }\n\n  private _getPlotlyTheme(): Partial<Layout> {\n    const appModel = this.gristDoc.docPageModel.appModel;\n    const {colors} = appModel.currentTheme.get();\n    return {\n      paper_bgcolor: colors['chart-bg'],\n      plot_bgcolor: colors['chart-bg'],\n      xaxis: {\n        color: colors['chart-x-axis'],\n      },\n      yaxis: {\n        color: colors['chart-y-axis'],\n      },\n      font: {\n        color: colors['chart-fg'],\n      },\n      legend: {\n        bgcolor: colors['chart-legend-bg'],\n      },\n    };\n  }\n}\n\n/**\n * Group the given array of series by a column of group values. The groupColumn and each of the\n * series should be arrays of the same length.\n *\n * For example, if groupColumn has CompanyID, and valueSeries contains [Date, Employees, Revenues]\n * (each an array of values), then returns a map mapping each CompanyID to the array [Date,\n * Employees, Revenue], each value of which is itself an array of values for that CompanyID.\n */\nfunction groupSeries<T extends Datum>(groupColumn: T[], valueSeries: Series[], sort: boolean): Map<T, Series[]> {\n  const nseries = new Map<T, Series[]>();\n\n  // Limit the number if group values so as to limit the total number of series we pass into\n  // Plotly. Too many series are impossible to make sense of anyway, and can hang the browser.\n  // TODO: When not all data is shown, we should probably show some indicator, similar to when\n  // OnDemand data is truncated.\n  const maxGroups = Math.floor(MAX_SERIES_IN_CHART / valueSeries.length);\n  let groupValues: T[] = [...new Set(groupColumn)];\n  if (sort) {\n    groupValues.sort();\n  }\n  groupValues = groupValues.slice(0, maxGroups);\n\n  // Set up empty lists for each group.\n  for (const group of groupValues) {\n    nseries.set(group, valueSeries.map((s: Series) => ({\n      label: s.label,\n      group,\n      values: []\n    })));\n  }\n\n  // Now fill up the lists.\n  for (let row = 0; row < groupColumn.length; row++) {\n    const group = groupColumn[row];\n    const series: Series[]|undefined = nseries.get(group);\n    if (series) {\n      for (let i = 0; i < valueSeries.length; i++) {\n        series[i].values.push(valueSeries[i].values[row]);\n      }\n    }\n  }\n  return nseries;\n}\n\n// If errorBars are requested, removes error bar series from the 'series' list, adding instead a\n// mapping from each main Y series to the corresponding plotly ErrorBar object.\nfunction extractErrorBars(series: Series[], options: ChartOptions): Map<Series, ErrorBar> {\n  const result = new Map<Series, ErrorBar>();\n  if (options.errorBars) {\n    // We assume that series is of the form [X, Y1, Y1-bar, Y2, Y2-bar, ...] (if \"symmetric\") or\n    // [X, Y1, Y1-below, Y1-above, Y2, Y2-below, Y2-above, ...] (if \"separate\").\n    for (let i = 1; i < series.length; i++) {\n      result.set(series[i], {\n        type: 'data',\n        symmetric: (options.errorBars === 'symmetric'),\n        array: series[i + 1] && series[i + 1].values,\n        arrayminus: (options.errorBars === 'separate' ? series[i + 2] && series[i + 2].values : undefined),\n        thickness: 1,\n        width: 3,\n      });\n      series.splice(i + 1, (options.errorBars === 'symmetric' ? 1 : 2));\n    }\n  }\n  return result;\n}\n\n// Getting an ES6 class to work with old-style multiple base classes takes a little hacking.\ndefaults(ChartView.prototype, BaseView.prototype);\nObject.assign(ChartView.prototype, BackboneEvents);\n\n/**\n * The grainjs component for side-pane configuration options for a Chart section.\n */\nexport class ChartConfig extends GrainJSDisposable {\n\n  private static _instanceMap = new WeakMap<ViewSectionRec, ChartConfig>();\n\n  // helper to build the draggable field list\n  private _configFieldsHelper = VisibleFieldsConfig.create(this, this._gristDoc, this._section);\n\n  // The index for the x-axis in the list visible fields. Could be eigther 0 or 1 or -1 depending on\n  // whether multiseries and isXAxisUndefined are set.\n  private _xAxisFieldIndex = Computed.create(\n    this,\n    fromKo(this._optionsObj.prop('multiseries')),\n    fromKo(this._optionsObj.prop('isXAxisUndefined')), (_use, multiseries, isUndefined) => (\n      isUndefined ? -1 : (multiseries ? 1 : 0)\n    )\n  );\n\n  // The colId of the grouping column, or \"\" if multiseries is disabled or there are no viewFields,\n  // for example during section removal.\n  private _groupDataColId: Computed<string> = Computed.create(this, (use) => {\n    const multiseries = use(this._optionsObj.prop('multiseries'));\n    const viewFields = use(use(this._section.viewFields).getObservable());\n    if (!multiseries || viewFields.length === 0) { return \"\"; }\n    return use(use(viewFields[0].column).colId);\n  })\n    .onWrite((colId) => this._setGroupDataColumn(colId));\n\n  // Updating the group data column involves several changes of the list of view fields which could\n  // leave the x-axis field index momentarily point to the wrong column. The freeze x axis\n  // observable is part of a hack to fix this issue.\n  private _freezeXAxis = Observable.create(this, false);\n\n  private _freezeYAxis = Observable.create(this, false);\n\n  // The colId of the x-axis, or \"\" is x axis is undefined.\n  private _xAxis: Computed<string> = Computed.create(\n    this, this._xAxisFieldIndex, this._freezeXAxis, (use, i, freeze) => {\n      if (freeze) { return this._xAxis.get(); }\n      const viewFields = use(use(this._section.viewFields).getObservable());\n      if (-1 < i && i < viewFields.length) {\n        return use(use(viewFields[i].column).colId);\n      }\n      return \"\";\n    })\n    .onWrite((colId) => this._setXAxis(colId));\n\n  // Whether value is aggregated or not\n  private _isValueAggregated = Computed.create(this, (use) => this._isSummaryTable(use))\n    .onWrite((val) => this._setAggregation(val));\n\n  // Columns options\n  private _columnsOptions: Computed<Array<IOptionFull<string>>> = Computed.create(\n    this, this._freezeXAxis, (use, freeze) => {\n      if (freeze) { return this._columnsOptions.get(); }\n      const columns = use(this._isValueAggregated) ?\n        this._getSummarySourceColumns(use) :\n        this._getColumns(use);\n      return columns\n      // filter out hidden column (ie: manualsort ...)\n        .filter((col) => !col.isHiddenCol.peek())\n        .map((col) => ({\n          value: col.colId(), label: col.label.peek(), icon: 'FieldColumn' as IconName,\n        }));\n    }\n  );\n\n  // The list of available columns for the group data picker.\n  private _groupDataOptions = Computed.create<Array<IOption<string>>>(this, (use) => [\n    {value: \"\", label: 'Pick a column'},\n    ...use(this._columnsOptions)\n  ]);\n\n  // Force checking/unchecking of the group data checkbox option.\n  private _groupDataForce = Observable.create(null, false);\n\n  // State for the group data option checkbox. True, if a group data column is set or if the user\n  // forced it. False otherwise.\n  private _groupData = Computed.create(\n    this, this._groupDataColId, this._groupDataForce, (_use, colId, force) => {\n      if (colId) { return true; }\n      return force;\n    }).onWrite((val) => {\n      if (val === false) {\n        this._groupDataColId.set(\"\");\n      }\n      this._groupDataForce.set(val);\n    });\n\n  // The label to show for the first field in the axis configurator.\n  private _firstFieldLabel = Computed.create(this, fromKo(this._section.chartTypeDef), (\n    (_use, chartType) => firstFieldIsLabels(chartType) ? 'LABEL' : 'X-AXIS'\n  ));\n\n  // A computed that returns `this._section.chartTypeDef` and that takes care of removing the group\n  // data option when type is switched to 'pie'.\n  private _chartType = Computed.create(this, (use) => use(this._section.chartTypeDef))\n    .onWrite((val) => {\n      return this._gristDoc.docData.bundleActions('switched chart type', async () => {\n        await this._section.chartTypeDef.saveOnly(val);\n        // When switching chart type to 'pie' makes sure to remove the group data option.\n        if (isPieLike(val)) {\n          await this._setGroupDataColumn(\"\");\n          this._groupDataForce.set(false);\n        }\n      });\n    });\n\n  constructor(private _gristDoc: GristDoc, private _section: ViewSectionRec) {\n    super();\n    ChartConfig._instanceMap.set(_section, this);\n  }\n\n  private get _optionsObj() { return this._section.optionsObj; }\n\n  public buildDom(): DomContents {\n\n    if (this._section.parentKey() !== 'chart') { return null; }\n\n    return [\n      cssRow(\n        select(this._chartType, [\n          {value: 'bar',          label: 'Bar Chart',         icon: 'ChartBar'   },\n          {value: 'pie',          label: 'Pie Chart',         icon: 'ChartPie'   },\n          {value: 'donut',        label: 'Donut Chart',       icon: 'ChartDonut' },\n          {value: 'area',         label: 'Area Chart',        icon: 'ChartArea'  },\n          {value: 'line',         label: 'Line Chart',        icon: 'ChartLine'  },\n          {value: 'scatter',      label: 'Scatter Plot',      icon: 'ChartLine'  },\n          {value: 'kaplan_meier', label: 'Kaplan-Meier Plot', icon: 'ChartKaplan'},\n        ]),\n        testId(\"type\"),\n      ),\n      dom.maybe((use) => !isPieLike(use(this._section.chartTypeDef)), () => [\n        // These options don't make much sense for a pie chart.\n        cssCheckboxRowObs('Split series', this._groupData),\n        cssCheckboxRow('Invert Y-axis', this._optionsObj.prop('invertYAxis')),\n        cssRow(\n          cssRowLabel('Orientation'),\n          dom('div', linkSelect(fromKoSave(this._optionsObj.prop('orientation')), [\n            {value: 'v', label: 'Vertical'},\n            {value: 'h', label: 'Horizontal'}\n          ], {defaultLabel: 'Vertical'})),\n          testId('orientation'),\n        ),\n        cssCheckboxRow('Log scale Y-axis', this._optionsObj.prop('logYAxis')),\n      ]),\n      dom.maybeOwned((use) => use(this._section.chartTypeDef) === 'donut', (owner) => [\n        cssSlideRow(\n          'Hole Size',\n          Computed.create(owner, (use) => use(this._optionsObj.prop('donutHoleSize')) ?? DONUT_DEFAULT_HOLE_SIZE),\n          (val: number) => this._optionsObj.prop('donutHoleSize').saveOnly(val),\n          testId('option')\n        ),\n        cssCheckboxRow('Show Total', this._optionsObj.prop('showTotal')),\n        dom.maybe(this._optionsObj.prop('showTotal'), () => (\n          cssNumberWithSpinnerRow(\n            'Text Size',\n            Computed.create(owner, (use) => use(this._optionsObj.prop('textSize')) ??  DONUT_DEFAULT_TEXT_SIZE),\n            (val: number) => this._optionsObj.prop('textSize').saveOnly(val),\n            testId('option')\n          )\n        ))\n      ]),\n      dom.maybe((use) => use(this._section.chartTypeDef) === 'line', () => [\n        cssCheckboxRow('Connect gaps', this._optionsObj.prop('lineConnectGaps')),\n        cssCheckboxRow('Show markers', this._optionsObj.prop('lineMarkers')),\n      ]),\n      dom.maybe((use) => ['line', 'bar'].includes(use(this._section.chartTypeDef)), () => [\n        cssCheckboxRow('Stack series', this._optionsObj.prop('stacked')),\n        cssRow(\n          cssRowLabel('Error bars'),\n          dom('div', linkSelect(fromKoSave(this._optionsObj.prop('errorBars')), [\n            {value: '', label: 'None'},\n            {value: 'symmetric', label: 'Symmetric'},\n            {value: 'separate', label: 'Above+Below'},\n          ], {defaultLabel: 'None'})),\n          testId('error-bars'),\n        ),\n        dom.domComputed(this._optionsObj.prop('errorBars'), (value: ChartOptions[\"errorBars\"]) =>\n          value === 'symmetric' ? cssRowHelp(t(\"Each Y series is followed by a series for the length of error bars.\")) :\n            value === 'separate' ? cssRowHelp(\n              t(\"Each Y series is followed by two series, for top and bottom error bars.\")\n            )\n          : null\n        ),\n      ]),\n\n      cssSeparator(),\n\n      dom.maybe(this._groupData, () => [\n        cssLabel('Split Series'),\n        cssRow(\n          select(this._groupDataColId, this._groupDataOptions),\n          testId('group-by-column'),\n        ),\n        cssHintRow(t(\"Create separate series for each value of the selected column.\")),\n      ]),\n\n      // TODO: user should select x axis before widget reach page\n      cssLabel(dom.text(this._firstFieldLabel), testId('first-field-label')),\n      cssRow(\n        select(\n          this._xAxis, this._columnsOptions,\n          { defaultLabel: t(\"Pick a column\") }\n        ),\n        testId('x-axis'),\n      ),\n      cssCheckboxRowObs('Aggregate values', this._isValueAggregated),\n\n      cssLabel('SERIES'),\n      this._buildYAxis(),\n      cssRow(\n        cssAddYAxis(\n          cssAddIcon('Plus'), 'Add Series',\n          menu(() => {\n            const hiddenColumns = this._section.hiddenColumns.peek();\n            const filterFunc = this._isCompatibleSeries.bind(this);\n            const nonNumericCount = hiddenColumns.filter((col) => !filterFunc(col)).length;\n            return [\n              ...hiddenColumns\n                .filter((col) => filterFunc(col))\n                .map((col) => menuItem(\n                  () => this._configFieldsHelper.addField(col),\n                  col.label.peek(),\n                )),\n              nonNumericCount ? menuText(\n                `${nonNumericCount} ` + (\n                  nonNumericCount > 1 ?\n                    `non-numeric columns are not shown` :\n                    `non-numeric column is not shown`\n                ),\n                testId('yseries-picker-message'),\n              ) : null,\n            ];\n          }),\n          testId('add-y-axis'),\n        )\n      ),\n\n    ];\n  }\n\n  private async _setXAxis(colId: string) {\n    const optionsObj = this._section.optionsObj;\n    const findColumn = () => this._getColumns().find((c) => c.colId() === colId);\n    const viewFields = this._section.viewFields.peek();\n\n    await this._gristDoc.docData.bundleActions('selected new x-axis', async () => {\n      this._freezeYAxis.set(true);\n      this._freezeXAxis.set(true);\n      try {\n\n        // first remove the current field\n        if (this._xAxisFieldIndex.get() !== -1 && this._xAxisFieldIndex.get() < viewFields.peek().length) {\n          await this._configFieldsHelper.removeField(viewFields.peek()[this._xAxisFieldIndex.get()]);\n        }\n\n        // if x axis was undefined, set option to false\n        await setSaveValue(this._optionsObj.prop('isXAxisUndefined'), false);\n\n        // if new field was used to split series, disable multiseries\n        const fieldIndex = viewFields.peek().findIndex((f) => f.column.peek().colId() === colId);\n        if (fieldIndex === 0 && optionsObj.prop('multiseries').peek()) {\n          await optionsObj.prop('multiseries').setAndSave(false);\n          return;\n        }\n\n        // if values aggregation is 'on' update the grouped by columns before findColumn()\n        // call. This will make sure that colId is not missing from the summary table's columns (as\n        // could happen if it were a non-numeric for instance).\n        if (this._isValueAggregated.get()) {\n          const splitColId = this._groupDataColId.get();\n          const cols = splitColId === colId ? [colId] : [splitColId, colId];\n          await this._setGroupByColumns(cols);\n        }\n\n        // if the new column for the x axis is already visible, make it the first visible column,\n        // else add it as the first visible field. The field will be first because it will be\n        // inserted before current xAxis column (which is already first (or second if we have\n        // multi-series option checked))\n        const xAxisField = viewFields.peek()[this._xAxisFieldIndex.get()];\n        if (fieldIndex > -1) {\n          await this._configFieldsHelper.changeFieldPosition(viewFields.peek()[fieldIndex], xAxisField);\n        } else {\n          const col = findColumn();\n          if (col) {\n            await this._configFieldsHelper.addField(col, xAxisField);\n          }\n        }\n      } finally {\n        this._freezeYAxis.set(false);\n        this._freezeXAxis.set(false);\n      }\n    });\n  }\n\n  private async _setGroupDataColumn(colId: string) {\n    const viewFields = this._section.viewFields.peek().peek();\n\n    await this._gristDoc.docData.bundleActions(t(\"selected new group data columns\"), async () => {\n      this._freezeXAxis.set(true);\n      this._freezeYAxis.set(true);\n      try {\n\n        // if grouping was already set, first remove the current field\n        if (this._groupDataColId.get()) {\n          await this._configFieldsHelper.removeField(viewFields[0]);\n        }\n\n        // if values aggregation is 'on' update the grouped by columns first. This will make sure\n        // that colId is not missing from the summary table's columns (as could happen if it were a\n        // non-numeric for instance).\n        if (this._isValueAggregated.get()) {\n          const xAxisColId = this._xAxis.get();\n          const cols = xAxisColId === colId ? [colId] : [colId, xAxisColId];\n          await this._setGroupByColumns(cols);\n        }\n\n        if (colId) {\n          const col = this._getColumns().find((c) => c.colId() === colId)!;\n          const field = viewFields.find((f) => f.column.peek().colId() === colId);\n\n          // if new field is already visible, moves the fields to the first place else add the field to the first\n          // place\n          if (field) {\n            await this._configFieldsHelper.changeFieldPosition(field, viewFields[0]);\n          } else {\n            await this._configFieldsHelper.addField(col, viewFields[0]);\n          }\n\n          // if this column is used as xAxis, set the xAxis to undefined (show Pick a column label)\n          if (colId === this._xAxis.get()) {\n            await this._optionsObj.prop('isXAxisUndefined').setAndSave(true);\n          }\n        }\n\n        await this._optionsObj.prop('multiseries').setAndSave(Boolean(colId));\n\n      } finally {\n        this._freezeXAxis.set(false);\n        this._freezeYAxis.set(false);\n      }\n    }, {nestInActiveBundle: true});\n  }\n\n  private _getColumns(use: UseCB = unwrap) {\n    const table = use(this._section.table);\n    return use(use(table.columns).getObservable());\n  }\n\n  private _getSummarySourceColumns(use: UseCB = unwrap) {\n    let table = use(this._section.table);\n    table = use(table.summarySource);\n    return use(use(table.columns).getObservable());\n  }\n\n  private _buildField(col: IField) {\n    return cssFieldEntry(\n      cssFieldLabel(dom.text(col.label)),\n      cssRemoveIcon(\n        'Remove',\n        dom.on('click', () => this._configFieldsHelper.removeField(col)),\n        testId('ref-select-remove'),\n      ),\n      testId('y-axis'),\n    );\n  }\n\n  private _buildYAxis(): DomContents {\n\n    // The y-axis are all visible fields that comes after the x-axis and maybe the group data\n    // column. Hence the draggable list of y-axis needs to skip either one or two visible fields.\n    const skipFirst = Computed.create(this,\n                                      fromKo(this._optionsObj.prop('multiseries')),\n                                      fromKo(this._optionsObj.prop('isXAxisUndefined')),\n                                      (_use, multiseries, isUndefined) =>  (\n      (isUndefined ? 0 : 1) + (multiseries ? 1 : 0)\n    ));\n\n    return dom.domComputed((use) => {\n      const filterFunc = (field: ViewFieldRec) => this._isCompatibleSeries(use(field.column), use);\n      return this._configFieldsHelper.buildVisibleFieldsConfigHelper({\n        itemCreateFunc: (field) => this._buildField(field),\n        draggableOptions: {\n          removeButton: false,\n          drag_indicator: cssDragger,\n        }, skipFirst, freeze: this._freezeYAxis, filterFunc\n      });\n    });\n  }\n\n  private _isCompatibleSeries(col: ColumnRec, use: UseCB = unwrap) {\n    return isNumericOnly(use(this._chartType)) ? isNumericLike(col, use) : true;\n  }\n\n  private async _setAggregation(val: boolean) {\n    try {\n      this._freezeXAxis.set(true);\n      await this._gristDoc.docData.bundleActions(t(\"Toggle chart aggregation\"), async () => {\n        if (val) {\n          await this._doAggregation();\n        } else {\n          await this._undoAggregation();\n        }\n      });\n    } finally {\n      if (!this.isDisposed()) {\n        this._freezeXAxis.set(false);\n      }\n    }\n  }\n\n  // Do the aggregation: if not a summary table, turns into one; else update groupby columns to\n  // match the X-Axis and Split-series columns.\n  private async _doAggregation(): Promise<void> {\n    if (!this._isSummaryTable()) {\n      await this._toggleSummaryTable();\n    } else {\n      await this._setGroupByColumns([this._xAxis.get(), this._groupDataColId.get()]);\n    }\n  }\n\n  // Undo the aggregation.\n  private async _undoAggregation() {\n    if (this._isSummaryTable()) {\n      await this._toggleSummaryTable();\n    }\n  }\n\n  private _isSummaryTable(use: UseCB = unwrap) {\n    return Boolean(use(use(this._section.table).summarySourceTable));\n  }\n\n  // Toggle whether section table is a summary table. Must use with care: this function calls\n  // `this.dispose()` as a side effect. Conveniently returns the ChartConfig instance of the new\n  // view section that replaces the old one.\n  private async _toggleSummaryTable(): Promise<ChartConfig> {\n    const colIds = [this._xAxis.get(), this._groupDataColId.get()];\n    const pageWidget = toPageWidget(this._section);\n    pageWidget.summarize = !this._isSummaryTable();\n    pageWidget.columns = this._getColumnIds(colIds);\n    this._ensureValidLinkingIfAny(pageWidget);\n    const newSection = await this._gristDoc.saveViewSection(this._section, pageWidget);\n    return ChartConfig._instanceMap.get(newSection)!;\n  }\n\n  private async _setGroupByColumns(groupByCols: string[]) {\n    const pageWidget = toPageWidget(this._section);\n    pageWidget.columns = this._getColumnIds(groupByCols);\n    this._ensureValidLinkingIfAny(pageWidget);\n    return this._gristDoc.saveViewSection(this._section, pageWidget);\n  }\n\n  // If section is linked to a summary table, makes sure that pageWidget describes a summary table\n  // that is more detailed than the source summary table. Function mutates `pageWidget`.\n  private _ensureValidLinkingIfAny(pageWidget: IPageWidget) {\n    if (!pageWidget.summarize) { return; }\n    if (!this._section.linkSrcSection().getRowId()) { return; }\n    const srcPageWidget = toPageWidget(this._section.linkSrcSection());\n    pageWidget.columns = union(pageWidget.columns, srcPageWidget.columns);\n  }\n\n  // Returns column ids corresponding to each colIds in the selected table (or corresponding summary\n  // source table, if select table is a summary table).\n  private _getColumnIds(colIds: string[]) {\n    const cols = this._isSummaryTable() ?\n      this._section.table().summarySource().columns().all() :\n      this._section.table().columns().all();\n    const columns = colIds\n      .map((colId) => colId && cols.find(c => c.colId() === colId))\n      .filter((col): col is ColumnRec => Boolean(col))\n      .map(col => col.id());\n    return columns;\n  }\n\n\n}\n\n// Row for a numeric option. User can change value using spinners or directly using keyboard. In\n// case of invalid values, the field reverts to the saved one.\nfunction cssNumberWithSpinnerRow(label: string, value: Computed<number>, save: (val: number) => Promise<void>,\n                                 ...args: DomElementArg[]) {\n  const minValue = 1;\n  let input: HTMLInputElement;\n\n  // Set the input's value to the value that's saved on the server.\n  function reset() {\n    input.value = value.get() + \"px\";\n  }\n\n  async function onChange(val: string, func: (val: number) => number = (v) => v) {\n    let fvalue = parseFloat(val);\n    if (isFinite(fvalue)) {\n      fvalue = clamp(func(fvalue), minValue, Infinity);\n      await save(fvalue);\n    }\n    // Reset is needed if value were not a valid number.\n    reset();\n  }\n\n  return cssRow(\n    cssRowLabel(label),\n    cssNumberWithSpinner(\n      input = cssNumberInput(\n        {type: 'text'},\n        dom.prop('value', (use) => use(value) + \"px\"),\n        dom.on('change', (_ev, el) => onChange(el.value)),\n        dom.onKeyDown({\n          ArrowDown: (_ev, el) => onChange(el.value, (val) => val - 1),\n          ArrowUp: (_ev, el) => onChange(el.value, (val) => val + 1),\n        }),\n      ),\n\n      // We add spinners as overlay in order to support showing the unit 'px' next to the value.\n      cssSpinners(\n        'input',\n        {type: 'number', step: '1', min: String(minValue)},\n        dom.prop('value', value),\n        dom.on('change', (_ev, el) => onChange(el.value)),\n      ),\n    ),\n    ...args\n  );\n}\n\n// Row for a numeric option that leaves between 0 and 1. User can change value using a slider, or\n// spinners or by directly using keyboard. Value is shown as percent. If user enter an invalid\n// value, field reverts to the saved value.\nfunction cssSlideRow(label: string, value: Computed<number>, save: (val: number) => Promise<void>,\n                     ...args: DomElementArg[]) {\n  let input: HTMLInputElement;\n\n  // Set the input's value to the value that's saved on the server.\n  function reset() {\n    input.value = formatPercent(value.get());\n  }\n\n  async function onChange(val: string, func: (val: number) => number = (v) => v) {\n    let fvalue = parseFloat(val);\n    if (isFinite(fvalue)) {\n      fvalue = clamp(func(fvalue), 0, 99) / 100;\n      await save(fvalue);\n    }\n    // Reset is needed if value were not a valid number.\n    reset();\n  }\n\n  return cssRow(\n    cssRowLabel(label),\n    cssRangeInput(\n      {type: 'range', min: \"0\", max: \"1\", step: \"0.01\"},\n      dom.prop('value', value),\n      dom.on('change', (_ev, el) => save(Number(el.value)))\n    ),\n    cssNumberWithSpinner(\n      input = cssNumberInput(\n        {type: 'text'},\n        dom.prop('value', (use) => formatPercent(use(value))),\n        dom.on('change', (_ev, el) => onChange(el.value)),\n        dom.onKeyDown({\n          ArrowDown: (_ev, el) => onChange(el.value, (val) => val - 1),\n          ArrowUp: (_ev, el) => onChange(el.value, (val) => val + 1),\n        }),\n      ),\n\n      // We add spinners as overlay in order to support showing the unit '%' next to the value.\n      cssSpinners(\n        'input',\n        {type: 'number', step: '0.01', min: '0', max: '0.99'},\n        dom.prop('value', value),\n        dom.on('change', (_ev, el) => save(Number(el.value))),\n      )\n    ),\n    ...args\n  );\n}\n\nfunction cssCheckboxRow(label: string, value: KoSaveableObservable<unknown>, ...args: DomElementArg[]) {\n  return cssCheckboxRowObs(label, fromKoSave(value), ...args);\n}\n\nfunction cssCheckboxRowObs(label: string, value: Observable<boolean>, ...args: DomElementArg[]) {\n  return dom('label', cssRow.cls(''),\n    cssRowLabel(label),\n    squareCheckbox(value, ...args),\n  );\n}\n\nfunction basicPlot(series: Series[], options: ChartOptions, dataOptions: Data): PlotData {\n  trimNonNumericData(series);\n  const errorBars = extractErrorBars(series, options);\n\n  if (dataOptions.type === 'bar') {\n    // Plotly has weirdness when redundant values shows up on the x-axis: the values that shows\n    // up on hover is different than the value on the y-axis. It seems that one is the sum of all\n    // values with same x-axis value, while the other is the last of them. To fix this, we force\n    // unique values for the x-axis.\n    uniqXValues(series);\n  }\n  const [axis1, axis2] = options.orientation === 'h' ? ['y', 'x'] : ['x', 'y'];\n\n  const dataSeries = series.slice(1).map((line: Series): Data => ({\n    name: getSeriesName(line, series.length > 2),\n    [axis1]: replaceEmptyLabels(series[0].values),\n    [axis2]: line.values,\n    [`error_${axis2}`]: errorBars.get(line),\n    orientation: options.orientation,\n    ...dataOptions,\n    stackgroup: makeRelativeStackGroup(dataOptions.stackgroup, line.values),\n  }));\n\n  // When stacking, stackgroup will be non-empty (an arbitrary value, set to \"A\" for line-charts).\n  // We further separate positive series from negative ones, by changing stackgroup to a different\n  // value (\"-A\") for series which look probably negative. This keeps positive ones above the\n  // x-axis, and negative ones below, as for barmode=relative (which only applies to bar charts).\n  function makeRelativeStackGroup(stackgroup: string|undefined, values: Datum[]) {\n    if (!stackgroup) { return stackgroup; }\n    const firstNonZero = values.find(v => v && (v > 0 || v < 0));\n    const isNegative = firstNonZero && firstNonZero < 0;\n    return isNegative ? \"-\" + stackgroup : stackgroup;\n  }\n\n  return {\n    data: dataSeries,\n    layout: {\n      [`${axis1}axis`]: {title: series.length > 0 ? {text: series[0].label}: {}},\n      // Include yaxis title for a single y-value series only (2 series total);\n      // If there are fewer than 2 total series, there is no y-series to display.\n      // If there are multiple y-series, a legend will be included instead, and the yaxis title\n      // is less meaningful, so omit it.\n      [`${axis2}axis`]: {title: series.length === 2 ? {text: series[1].label} : {}},\n    },\n  };\n}\n\n// Most chart types take a list of series and then use the first series for the X-axis, and each\n// subsequent series for their Y-axis values, allowing for multiple lines on the same plot.\n// Each series should have the form {label, values}.\nexport const chartTypes: {[name: string]: ChartFunc} = {\n  // TODO There is a lot of code duplication across chart types. Some refactoring is in order.\n  bar(series: Series[], options: ChartOptions): PlotData {\n    return basicPlot(series, options, {type: 'bar'});\n  },\n  line(series: Series[], options: ChartOptions): PlotData {\n    sortByXValues(series);\n    return basicPlot(series, options, {\n      type: 'scatter',\n      connectgaps: options.lineConnectGaps,\n      mode: options.lineMarkers ? 'lines+markers' : 'lines',\n      stackgroup: (options.stacked ? \"A\" : \"\"),\n    });\n  },\n  area(series: Series[], options: ChartOptions): PlotData {\n    sortByXValues(series);\n    return basicPlot(series, options, {\n      type: 'scatter',\n      fill: 'tozeroy',\n      line: {shape: 'spline'},\n    });\n  },\n  scatter(series: Series[], options: ChartOptions): PlotData {\n    return basicPlot(series.slice(1), options, {\n        type: 'scatter',\n        mode: 'text+markers',\n        text: series[0].values as string[],\n        textposition: \"bottom center\",\n    });\n  },\n\n  pie(series: Series[], _options: ChartOptions, dataOptions: DataOptions = {}): PlotData {\n    let line: Series;\n    if (series.length === 0) {\n      return {data: []};\n    }\n    if (series.length > 1) {\n      trimNonNumericData(series);\n      line = series[1];\n    } else {\n      // When there is only one series of labels, simply count their occurrences.\n      line = {label: 'Count', values: series[0].values.map(() => 1)};\n    }\n    return {\n      data: [{\n        type: 'pie',\n        name: getSeriesName(line, false),\n        // nulls cause JS errors when pie charts resize, so replace with blanks.\n        // (a falsy value would cause plotly to show its index, like \"2\" which is more confusing).\n        labels: replaceEmptyLabels(series[0].values),\n        values: line.values,\n        ...dataOptions,\n      }]\n    };\n  },\n\n\n  donut(series: Series[], options: ChartOptions, dataOptions: DataOptions = {}): PlotData {\n    const hole = isNumber(options.donutHoleSize) ? options.donutHoleSize : DONUT_DEFAULT_HOLE_SIZE;\n    const annotations: Array<Partial<Annotations>> = [];\n    const plotData: PlotData = chartTypes.pie(series, options, {...dataOptions, hole});\n\n    function format(val: number) {\n      if (dataOptions.totalFormatter) {\n        return dataOptions.totalFormatter.formatAny(val);\n      }\n      return String(val);\n    }\n\n    if (options.showTotal) {\n      annotations.push({\n        text: format(\n          series.length > 1 ?\n            sum(series[1].values.filter(isNumber)) :\n            plotData.data[0].labels!.length,\n        ),\n        showarrow: false,\n        font: {\n          size: options.textSize ?? DONUT_DEFAULT_TEXT_SIZE,\n        }\n      } as any);\n    }\n    return defaultsDeep(\n      plotData,\n      {layout: {annotations}}\n    );\n\n  },\n\n  kaplan_meier(series: Series[]): PlotData {\n    // For this plot, the first series names the category of each point, and the second the\n    // survival time for that point. We turn that into as many series as there are categories.\n    if (series.length < 2) { return {data: []}; }\n    const newSeries = groupIntoSeries(series[0].values, series[1].values);\n    return {\n      data: newSeries.map((line: Series): Data => {\n        const points = kaplanMeierPlot(line.values as number[]);\n        return {\n          type: 'scatter',\n          mode: 'lines',\n          line: {shape: 'hv'},\n          name: getSeriesName(line, false),\n          x: points.map(p => p.x),\n          y: points.map(p => p.y),\n        } as Data;\n      })\n    };\n  },\n};\n\n\n/**\n * Assumes a list of series of the form [xValues, yValues1, yValues2, ...]. Remove from all series\n * those points for which all of the y-values are non-numeric (e.g. null or a string).\n */\nfunction trimNonNumericData(series: Series[]): void {\n  const values = series.slice(1).map((s) => s.values);\n  for (const s of series) {\n    s.values = s.values.filter((_, i) => values.some(v => typeof v[i] === 'number'));\n  }\n}\n\n/**\n * Replace empty values with \"-\", which is relevant for labels in Pie Charts and for X-axis in\n * other chart types.\n *\n * In pie charts, nulls cause JS errors. In other types, nulls in X-axis cause that point to be\n * omitted (but still affect the Y scale, causing confusion). Replace with \"-\" rather than blank\n * because plotly replaces falsy values by their index (eg \"2\") in Pie charts, which is confusing.\n */\nfunction replaceEmptyLabels(values: Datum[]): Datum[] {\n  return values.map(v => (v == null || v === \"\") ? \"-\" : v);\n}\n\n// Given two parallel arrays, returns an array of series of the form\n// {label: category, values: array-of-values}\nfunction groupIntoSeries(categoryList: Datum[], valueList: Datum[]): Series[] {\n  const groups = new Map();\n  for (const [i, cat] of categoryList.entries()) {\n    if (!groups.has(cat)) { groups.set(cat, []); }\n    groups.get(cat).push(valueList[i]);\n  }\n  return Array.from(groups, ([label, values]) => ({label, values}));\n}\n\n// Given a list of survivalValues, returns a list of {x, y} pairs for the kaplanMeier plot.\nfunction kaplanMeierPlot(survivalValues: number[]): Array<{x: number, y: number}> {\n  // First get a distribution of survivalValue -> count.\n  const dist = new Map<number, number>();\n  for (const v of survivalValues) {\n    dist.set(v, (dist.get(v) || 0) + 1);\n  }\n\n  // Sort the distinct values.\n  const distinctValues = Array.from(dist.keys());\n  distinctValues.sort(nativeCompare);\n\n  // Now generate plot values, with 'x' for survivalValue and 'y' the number of surviving points.\n  let y = survivalValues.length;\n  const points = [{x: 0, y}];\n  for (const x of distinctValues) {\n    y -= dist.get(x)!;\n    points.push({x, y});\n  }\n  return points;\n}\n\n\nconst cssRowLabel = styled('div', `\n  flex: 1 0 0px;\n  margin-right: 8px;\n\n  font-weight: initial;   /* negate bootstrap */\n  color: ${theme.text};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  user-select: none;\n`);\n\nconst cssRowHelp = styled(cssRow, `\n  font-size: ${vars.smallFontSize};\n  color: ${theme.lightText};\n`);\n\nconst cssAddIcon = styled(icon, `\n  margin-right: 4px;\n`);\n\nconst cssAddYAxis = styled('div', `\n  display: flex;\n  cursor: pointer;\n  color: ${theme.controlFg};\n  --icon-color: ${theme.controlFg};\n\n  &:not(:first-child) {\n    margin-top: 8px;\n  }\n  &:hover, &:focus, &:active {\n    color: ${theme.controlHoverFg};\n    --icon-color: ${theme.controlHoverFg};\n  }\n`);\n\nconst cssRemoveIcon = styled(icon, `\n  display: none;\n  cursor: pointer;\n  flex: none;\n  margin-left: 8px;\n  .${cssFieldEntry.className}:hover & {\n    display: block;\n  }\n`);\n\nconst cssHintRow = styled('div', `\n  margin: -4px 16px 8px 16px;\n  color: ${theme.lightText};\n`);\n\nconst cssRangeInput = styled('input', `\n  input& {\n    width: 82px;\n    margin-right: 4px;\n  }\n`);\n\nconst cssNumberWithSpinner = styled('div', `\n  position: relative;\n`);\n\nconst cssNumberInput = styled('input', `\n  width: 55px;\n`);\n\n\nconst cssSpinners = styled('input', `\n  width: 19px;\n  position: absolute;\n  top: 2px;\n  right: 1px;\n  border: none;\n  outline: none;\n  appearance: none;\n  -moz-appearance: none;\n  visibility: hidden;\n\n  .${cssNumberWithSpinner.className}:hover & {\n    visibility: visible;\n  }\n\n  /* needed for chrome to show spinners, indeed the cursor could be outside of spinners' input\n  element */\n  &[type=number]::-webkit-inner-spin-button {\n    opacity: 1;\n  }\n`);\n","/**\n * The Cursor module contains functionality related to the cell with the cursor, i.e. a single\n * currently selected cell.\n */\n\n\nimport BaseView from 'app/client/components/BaseView';\nimport * as commands from 'app/client/components/commands';\nimport BaseRowModel from 'app/client/models/BaseRowModel';\nimport {LazyArrayModel} from 'app/client/models/DataTableModel';\nimport {CursorPos, UIRowId} from 'app/plugin/GristAPI';\nimport {Disposable} from 'grainjs';\nimport * as ko from 'knockout';\n\nfunction nullAsUndefined<T>(value: T|null|undefined): T|undefined {\n  return value == null ? undefined : value;\n}\n\n/**\n * Cursor represents the location of the cursor in the viewsection. It is maintained by BaseView,\n * and implements the shared functionality related to the cursor cell.\n * @param {BaseView} baseView: The BaseView object to which this Cursor belongs.\n * @param {Object} optCursorPos: Optional object containing rowId and fieldIndex properties\n *  to which the cursor should be initialized.\n */\nexport class Cursor extends Disposable {\n  /**\n   * The commands closely tied to the cursor. They are active when the BaseView containing this\n   * Cursor has focus. Some may need to be overridden by particular views.\n   */\n  public static editorCommands = {\n    // The cursor up/down commands may need to be a bit different in non-grid views.\n    cursorUp(this: Cursor) { this.rowIndex(this.rowIndex()! - 1); },\n    cursorDown(this: Cursor) { this.rowIndex(this.rowIndex()! + 1); },\n    cursorLeft(this: Cursor) { this.fieldIndex(this.fieldIndex() - 1); },\n    cursorRight(this: Cursor) { this.fieldIndex(this.fieldIndex() + 1); },\n    skipUp(this: Cursor) { this.rowIndex(this.rowIndex()! - 5); },\n    skipDown(this: Cursor) { this.rowIndex(this.rowIndex()! + 5); },\n    pageUp(this: Cursor) { this.rowIndex(this.rowIndex()! - 20); },    // TODO Not really pageUp\n    pageDown(this: Cursor) { this.rowIndex(this.rowIndex()! + 20); },  // TODO Not really pageDown\n    prevField(this: Cursor) { this.fieldIndex(this.fieldIndex() - 1); },\n    nextField(this: Cursor) { this.fieldIndex(this.fieldIndex() + 1); },\n    moveToFirstRecord(this: Cursor) { this.rowIndex(0); },\n    moveToLastRecord(this: Cursor) { this.rowIndex(Infinity); },\n    moveToFirstField(this: Cursor) { this.fieldIndex(0); },\n    moveToLastField(this: Cursor) { this.fieldIndex(Infinity); },\n  };\n\n  public viewData: LazyArrayModel<BaseRowModel>;\n  // observable with current cursor position\n  public currentPosition: ko.Computed<CursorPos>;\n\n  public rowIndex: ko.Computed<number|null>;     // May be null when there are no rows.\n  public fieldIndex: ko.Observable<number>;\n\n  private _rowId: ko.Observable<UIRowId|null>;     // May be null when there are no rows.\n\n  // The cursor's _rowId property is always fixed across data changes. When isLive is true,\n  // the rowIndex of the cursor is recalculated to match _rowId. When false, they will\n  // be out of sync.\n  private _isLive: ko.Observable<boolean> = ko.observable(true);\n  private _sectionId: ko.Computed<number>;\n\n  private _properRowId: ko.Computed<UIRowId|null>;\n\n  constructor(baseView: BaseView, optCursorPos?: CursorPos) {\n    super();\n    optCursorPos = optCursorPos || {};\n    this.viewData = baseView.viewData;\n\n    this._sectionId = this.autoDispose(ko.computed(() => baseView.viewSection.id()));\n    this._rowId = ko.observable<UIRowId|null>(optCursorPos.rowId || 0);\n    this.rowIndex = this.autoDispose(ko.computed({\n      read: () => {\n        if (!this._isLive()) { return this.rowIndex.peek(); }\n        const rowId = this._rowId();\n        return rowId == null ? null : this.viewData.clampIndex(this.viewData.getRowIndexWithSub(rowId));\n      },\n      write: (index) => {\n        const rowIndex = index === null ? null : this.viewData.clampIndex(index);\n        this._rowId(rowIndex == null ? null : this.viewData.getRowId(rowIndex));\n      },\n    }));\n\n    this.fieldIndex = baseView.viewSection.viewFields().makeLiveIndex(optCursorPos.fieldIndex || 0);\n    this.autoDispose(commands.createGroup(Cursor.editorCommands, this, baseView.viewSection.hasFocus));\n\n    // RowId might diverge from the one stored in _rowId when the data changes (it is filtered out). So here\n    // we will calculate rowId based on rowIndex (so in reverse order), to have a proper value.\n    this._properRowId = this.autoDispose(ko.computed(() => {\n      const rowIndex = this.rowIndex();\n      const rowId = rowIndex === null ? null : this.viewData.getRowId(rowIndex);\n      return rowId;\n    }));\n\n    // Update the section's activeRowId when the cursor's rowIndex is changed.\n    this.autoDispose(this._properRowId.subscribe((rowId) => baseView.viewSection.activeRowId(rowId)));\n\n    // On dispose, save the current cursor position to the section model.\n    this.onDispose(() => { baseView.viewSection.lastCursorPos = this.getCursorPos(); });\n\n    // calculate current position\n    this.currentPosition = this.autoDispose(ko.computed(() => this._isLive() ? this.getCursorPos() : {}));\n  }\n\n  // Returns the cursor position with rowId, rowIndex, and fieldIndex.\n  public getCursorPos(): CursorPos {\n    return {\n      rowId: nullAsUndefined(this._properRowId()),\n      rowIndex: nullAsUndefined(this.rowIndex()),\n      fieldIndex: this.fieldIndex(),\n      sectionId: this._sectionId()\n    };\n  }\n\n  /**\n   * Moves the cursor to the given position. Only moves the row if rowId or rowIndex is valid,\n   * preferring rowId.\n   * @param cursorPos: Position as { rowId?, rowIndex?, fieldIndex? }, as from getCursorPos().\n   */\n  public setCursorPos(cursorPos: CursorPos): void {\n    if (cursorPos.rowId !== undefined && this.viewData.getRowIndex(cursorPos.rowId) >= 0) {\n      this.rowIndex(this.viewData.getRowIndex(cursorPos.rowId) );\n    } else if (cursorPos.rowIndex !== undefined && cursorPos.rowIndex >= 0) {\n      this.rowIndex(cursorPos.rowIndex);\n    } else {\n      // Write rowIndex to itself to force an update of rowId if needed.\n      this.rowIndex(this.rowIndex.peek());\n    }\n    if (cursorPos.fieldIndex !== undefined) {\n      this.fieldIndex(cursorPos.fieldIndex);\n    }\n  }\n\n  public setLive(isLive: boolean): void {\n    this._isLive(isLive);\n  }\n}\n","/**\n * A search index for auto-complete suggestions.\n *\n * This implementation indexes words, and suggests items based on a best-match score, including\n * amount of overlap and position of words. It searches case-insensitively and only at the start\n * of words. E.g. searching for \"Blue\" would match \"Blu\" in \"Lavender Blush\", but searching for\n * \"lush\" would only match the \"L\" in \"Lavender\".\n */\n\nimport {localeCompare, nativeCompare, sortedIndex} from 'app/common/gutil';\nimport {DomContents} from 'grainjs';\nimport escapeRegExp = require(\"lodash/escapeRegExp\");\nimport deburr = require(\"lodash/deburr\");\nimport split = require(\"lodash/split\");\n\nexport interface ACItem {\n  // This should be a trimmed lowercase version of the item's text. It may be an accessor.\n  // Note that items with empty cleanText are never suggested.\n  cleanText: string;\n}\n\n// Returns a trimmed, lowercase version of a string,\n// from which accents and other diacritics have been removed,\n// so that autocomplete is case- and accent-insensitive.\nexport function normalizeText(text: string): string {\n  return deburr(text).trim().toLowerCase();\n}\n\n// Regexp used to split text into words; includes nearly all punctuation. This means that\n// \"foo-bar\" may be searched by \"bar\", but it's impossible to search for punctuation itself (e.g.\n// \"a-b\" and \"a+b\" are not distinguished). (It's easy to exclude unicode punctuation too if the\n// need arises, see https://stackoverflow.com/a/25575009/328565).\nconst wordSepRegexp = /[\\s!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~]+/;\n\n/**\n * An auto-complete index, which simply allows searching for a string.\n */\nexport interface ACIndex<Item extends ACItem> {\n  search(searchText: string): ACResults<Item>;\n}\n\n// Splits text into an array of pieces, with odd-indexed pieces being the ones to highlight.\nexport type HighlightFunc = (text: string) => string[];\n\nexport const highlightNone: HighlightFunc = (text) => [text];\n\n/**\n * AutoComplete results include the suggested items, which one to highlight, and a function for\n * highlighting the matched portion of each item.\n */\nexport interface ACResults<Item extends ACItem> {\n  // Matching items in order from best match to worst.\n  items: Item[];\n\n  // May be used to highlight matches using buildHighlightedDom().\n  highlightFunc: HighlightFunc;\n\n  // index of a good match (normally 0), or -1 if no great match\n  selectIndex: number;\n}\n\ninterface Word {\n  word: string;     // The indexed word\n  index: number;    // Index into _allItems for the item containing this word.\n  pos: number;      // Position of the word within the item where it occurred.\n}\n\n/**\n * Implements a search index. It doesn't currently support updates; when any values change, the\n * index needs to be rebuilt from scratch.\n */\nexport class ACIndexImpl<Item extends ACItem> implements ACIndex<Item> {\n  private _allItems: Item[];\n\n  // All words from _allItems, sorted.\n  private _words: Word[];\n\n  // Creates an index for the given list of items.\n  // The max number of items to suggest may be set using _maxResults (default is 50).\n  // If _keepOrder is true, best matches will be suggested in the order they occur in items,\n  // rather than order by best score.\n  constructor(items: Item[], private _maxResults: number = 50, private _keepOrder = false) {\n    this._allItems = items.slice(0);\n\n    // Collects [word, occurrence, position] tuples for all words in _allItems.\n    const allWords: Word[] = [];\n    for (let index = 0; index < this._allItems.length; index++) {\n      const item = this._allItems[index];\n      const words = item.cleanText.split(wordSepRegexp).filter(w => w);\n      for (let pos = 0; pos < words.length; pos++) {\n        allWords.push({word: words[pos], index, pos});\n      }\n    }\n\n    allWords.sort((a, b) => localeCompare(a.word, b.word));\n    this._words = allWords;\n  }\n\n\n  // The main search function. SearchText will be cleaned (trimmed and lowercased) at the start.\n  // Empty search text returns the first N items in the search universe.\n  public search(searchText: string): ACResults<Item> {\n    const cleanedSearchText = normalizeText(searchText);\n    const searchWords = cleanedSearchText.split(wordSepRegexp).filter(w => w);\n\n    // Maps item index in _allItems to its score.\n    const myMatches = new Map<number, number>();\n\n    if (searchWords.length > 0) {\n      // For each of searchWords, go through items with an overlap, and update their scores.\n      for (let k = 0; k < searchWords.length; k++) {\n        const searchWord = searchWords[k];\n        for (const [itemIndex, score] of this._findOverlaps(searchWord, k)) {\n          myMatches.set(itemIndex, (myMatches.get(itemIndex) || 0) + score);\n        }\n      }\n\n      // Give an extra point to items that start with the searchText.\n      for (const [itemIndex, score] of myMatches) {\n        if (this._allItems[itemIndex].cleanText.startsWith(cleanedSearchText)) {\n          myMatches.set(itemIndex, score + 1);\n        }\n      }\n    }\n\n    // Array of pairs [itemIndex, score], sorted by score (desc) and itemIndex.\n    const sortedMatches = Array.from(myMatches)\n      .sort((a, b) => nativeCompare(b[1], a[1]) || nativeCompare(a[0], b[0]))\n      .slice(0, this._maxResults);\n\n    const itemIndices: number[] = sortedMatches.map(([index, score]) => index);\n\n    // Append enough non-matching indices to reach maxResults.\n    for (let i = 0; i < this._allItems.length && itemIndices.length < this._maxResults; i++) {\n      if (this._allItems[i].cleanText && !myMatches.has(i)) {\n        itemIndices.push(i);\n      }\n    }\n\n    if (this._keepOrder) {\n      itemIndices.sort(nativeCompare);\n    }\n    const items = itemIndices.map(index => this._allItems[index]);\n\n    if (!cleanedSearchText) {\n      // In this case we are just returning the first few items.\n      return {items, highlightFunc: highlightNone, selectIndex: -1};\n    }\n\n    const highlightFunc = highlightMatches.bind(null, searchWords);\n\n    // If we have a best match, and any word in it actually starts with the search text, report it\n    // as a default selection for highlighting. Otherwise, no item will be auto-selected.\n    let selectIndex = sortedMatches.length > 0 ? itemIndices.indexOf(sortedMatches[0][0]) : -1;\n    if (selectIndex >= 0 && !startsWithText(items[selectIndex], cleanedSearchText, searchWords)) {\n      selectIndex = -1;\n    }\n    return {items, highlightFunc, selectIndex};\n  }\n\n  /**\n   * Given one of the search words, looks it up in the indexed list of words and searches up and\n   * down the list for all words that share a prefix with it. Each such word contributes something\n   * to the score of the index entry it is a part of.\n   *\n   * Returns a Map from the index entry (index into _allItems) to the score which this searchWord\n   * contributes to it.\n   *\n   * The searchWordPos argument is the position of searchWord in the overall search text (e.g. 0\n   * if it's the first word). It is used for the position bonus, to give higher scores to entries\n   * whose words occur in the same order as in the search text.\n   */\n  private _findOverlaps(searchWord: string, searchWordPos: number): Map<number, number> {\n    const insertIndex = sortedIndex<{word: string}>(this._words, {word: searchWord},\n      (a, b) => localeCompare(a.word, b.word));\n\n    // Maps index of item to its score.\n    const scored = new Map<number, number>();\n\n    // Search up and down the list, accepting smaller and smaller overlap.\n    for (const step of [1, -1]) {\n      let prefix = searchWord;\n      let index = insertIndex + (step > 0 ? 0 : -1);\n      while (prefix && index >= 0 && index < this._words.length) {\n        for ( ; index >= 0 && index < this._words.length; index += step) {\n          const wordEntry = this._words[index];\n          // Once we reach a word that doesn't start with our prefix, break this loop, so we can\n          // reduce the length of the prefix and keep scanning.\n          if (!wordEntry.word.startsWith(prefix)) { break; }\n\n          // The contribution of this word's to the score consists primarily of the length of\n          // overlap (i.e. length for the current prefix).\n          const baseScore = prefix.length;\n\n          // To this we add 1 if the word matches exactly.\n          const fullWordBonus = (wordEntry.word === searchWord ? 1 : 0);\n\n          // To prefer matches where words occur in the same order as searched (e.g. searching for\n          // \"Foo B\" should prefer \"Foo Bar\" over \"Bar Foo\"), we give a bonus based on the\n          // position of the word in the search text and the entry text. (If positions match as\n          // 0:0 and 1:1, the total position bonus is 2^0+2^(-2)=1.25; while the bonus from 0:1\n          // and 1:0 would be 2^(-1) + 2^(-1)=1.0.)\n          const positionBonus = Math.pow(2, -(searchWordPos + wordEntry.pos));\n\n          const itemScore = baseScore + fullWordBonus + positionBonus;\n          // Each search word contributes only one score (e.g. a search for \"Foo\" will partially\n          // match both words in \"forty five\", but only the higher of the matches will count).\n          if (itemScore >= (scored.get(wordEntry.index) || 0)) {\n            scored.set(wordEntry.index, itemScore);\n          }\n        }\n        prefix = prefix.slice(0, -1);\n      }\n    }\n    return scored;\n  }\n}\n\n\nexport type BuildHighlightFunc = (match: string) => DomContents;\n\n/**\n * Converts text to DOM with matching bits of text rendered using highlight(match) function.\n */\nexport function buildHighlightedDom(\n  text: string, highlightFunc: HighlightFunc, highlight: BuildHighlightFunc\n): DomContents {\n  if (!text) { return text; }\n  const parts = highlightFunc(text);\n  return parts.map((part, k) => k % 2 ? highlight(part) : part);\n}\n\n\n// Same as wordSepRegexp, but with capturing parentheses.\nconst wordSepRegexpParen = new RegExp(`(${wordSepRegexp.source})`);\n\n/**\n * Splits text into pieces, with odd-numbered pieces the ones matching a prefix of some\n * searchWord, i.e. the ones to highlight.\n */\nfunction highlightMatches(searchWords: string[], text: string): string[] {\n  const textParts = text.split(wordSepRegexpParen);\n  const outputs = [''];\n  for (let i = 0; i < textParts.length; i += 2) {\n    const word = textParts[i];\n    const separator = textParts[i + 1] || '';\n    // deburr (remove diacritics) was used to produce searchWords, so `word` needs to match that.\n    const prefixLen = findLongestPrefixLen(deburr(word).toLowerCase(), searchWords);\n    if (prefixLen === 0) {\n      outputs[outputs.length - 1] += word + separator;\n    } else {\n      // Split into unicode 'characters' that keep diacritics combined\n      const chars = split(word, '');\n      outputs.push(\n        chars.slice(0, prefixLen).join(''),\n        chars.slice(prefixLen).join('') + separator\n      );\n    }\n  }\n  return outputs;\n}\n\nfunction findLongestPrefixLen(text: string, choices: string[]): number {\n  return choices.reduce((max, choice) => Math.max(max, findCommonPrefixLength(text, choice)), 0);\n}\n\nfunction findCommonPrefixLength(text1: string, text2: string): number {\n  let i = 0;\n  while (i < text1.length && text1[i] === text2[i]) { ++i; }\n  return i;\n}\n\n/**\n * Checks whether `item` starts with `text`, or whether all words of text are prefixes of the\n * words of `item`. (E.g. it would return true if item is \"New York\", and text is \"ne yo\".)\n */\nfunction startsWithText(item: ACItem, text: string, searchWords: string[]): boolean {\n  if (item.cleanText.startsWith(text)) { return true; }\n\n  const regexp = new RegExp(searchWords.map(w => `\\\\b` + escapeRegExp(w)).join('.*'));\n  const cleanText = item.cleanText.split(wordSepRegexp).join(' ');\n  return regexp.test(cleanText);\n}\n","import {ACIndex, ACItem, buildHighlightedDom} from 'app/client/lib/ACIndex';\nimport {Autocomplete, IAutocompleteOptions} from 'app/client/lib/autocomplete';\nimport {theme} from \"app/client/ui2018/cssVars\";\nimport {icon} from \"app/client/ui2018/icons\";\nimport {menuCssClass} from 'app/client/ui2018/menus';\nimport {dom, DomElementArg, Holder, IDisposableOwner, Observable, styled} from 'grainjs';\n\nexport interface ACSelectItem extends ACItem {\n  value: string;\n  label: string;\n}\n\n/**\n * Builds a text input with an autocomplete dropdown.\n * Note that because it is currently only used in the right-side panel, it is designed to avoid\n * keeping focus.\n */\nexport function buildACSelect(\n  owner: IDisposableOwner,\n  options: {\n    disabled?: Observable<boolean>,\n    acIndex: ACIndex<ACSelectItem>,\n    valueObs: Observable<string>,\n    save: (value: string, item: ACSelectItem|undefined) => Promise<void>|void\n  },\n  ...args: DomElementArg[]\n) {\n  const {acIndex, valueObs, save} = options;\n  const acHolder = Holder.create<Autocomplete<ACSelectItem>>(owner);\n  let textInput: HTMLInputElement;\n\n  const isOpen = () => !acHolder.isEmpty();\n  const acOpen = () => acHolder.isEmpty() && Autocomplete.create(acHolder, textInput, acOptions);\n  const acClose = () => acHolder.clear();\n  const finish = () => { acClose(); textInput.blur(); };\n  const revert = () => { textInput.value = valueObs.get(); finish(); };\n  const commitOrRevert = async () => { (await commitIfValid()) || revert(); };\n  const openOrCommit = () => { isOpen() ? commitOrRevert().catch(() => {}) : acOpen(); };\n\n  const commitIfValid = async () => {\n    const item = acHolder.get()?.getSelectedItem();\n    if (item) {\n      textInput.value = item.value;\n    }\n    textInput.disabled = true;\n    try {\n      await save(textInput.value, item);\n      finish();\n      return true;\n    } catch (e) {\n      return false;\n    } finally {\n      textInput.disabled = false;\n    }\n  };\n\n  const onMouseDown = (ev: MouseEvent) => {\n    ev.preventDefault();    // Don't let it affect focus, since we focus/blur manually.\n    if (options.disabled?.get()) {\n      return;\n    }\n    if (!isOpen()) { textInput.focus(); }\n    openOrCommit();\n  };\n\n  const acOptions: IAutocompleteOptions<ACSelectItem> = {\n    menuCssClass: `${menuCssClass} test-acselect-dropdown`,\n    search: async (term: string) => acIndex.search(term),\n    renderItem: (item, highlightFunc) =>\n      cssSelectItem(buildHighlightedDom(item.label, highlightFunc, cssMatchText)),\n    getItemText: (item) => item.value,\n    onClick: commitIfValid,\n  };\n\n  return cssSelectBtn(\n    textInput = cssInput({type: 'text'},\n      dom.prop('value', valueObs),\n      dom.on('focus', (ev, elem) => elem.select()),\n      dom.on('blur', commitOrRevert),\n      dom.prop(\"disabled\", (use) => options.disabled ? use(options.disabled) : false),\n      dom.onKeyDown({\n        Escape: revert,\n        Enter: openOrCommit,\n        ArrowDown: acOpen,\n        Tab: commitIfValid,\n      }),\n      dom.on('input', acOpen),\n    ),\n    dom.on('mousedown', onMouseDown),\n    cssIcon('Dropdown'),\n    ...args\n  );\n}\n\nconst cssSelectBtn = styled('div', `\n  position: relative;\n  width: 100%;\n  height: 30px;\n  color: ${theme.selectButtonFg};\n  --icon-color: ${theme.selectButtonFg};\n`);\n\nexport const cssSelectItem = styled('li', `\n  color: ${theme.menuItemFg};\n  display: block;\n  white-space: pre;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  outline: none;\n  padding: var(--weaseljs-menu-item-padding, 8px 24px);\n  cursor: pointer;\n\n  &.selected {\n    background-color: ${theme.menuItemSelectedBg};\n    color:            ${theme.menuItemSelectedFg};\n  }\n`);\n\nconst cssInput = styled('input', `\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  height: 100%;\n  width: 100%;\n  padding: 0 6px;\n  outline: none;\n  border: 1px solid ${theme.inputBorder};\n  border-radius: 3px;\n  cursor: pointer;\n  line-height: 16px;\n  cursor: pointer;\n\n  &:disabled {\n    color: ${theme.inputDisabledFg};\n    background-color: ${theme.inputDisabledBg};\n  }\n  &:focus {\n    cursor: initial;\n    outline: none;\n    box-shadow: 0px 0px 2px 2px ${theme.inputFocus};\n  }\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n`);\n\nconst cssIcon = styled(icon, `\n  position: absolute;\n  right: 6px;\n  top: calc(50% - 8px);\n`);\n\nconst cssMatchText = styled('span', `\n  color: ${theme.autocompleteMatchText};\n  .selected > & {\n    color: ${theme.autocompleteSelectedMatchText};\n  }\n`);\n","import { SafeBrowser, ViewProcess } from 'app/client/lib/SafeBrowser';\nimport { PluginInstance } from 'app/common/PluginInstance';\n\nexport { ViewProcess } from 'app/client/lib/SafeBrowser';\n\n/**\n * A PluginCustomSection identifies one custom section in a plugin.\n */\nexport interface PluginCustomSection {\n  pluginId: string;\n  sectionId: string;\n}\n\nexport class CustomSectionElement {\n\n  /**\n   * Get the list of all available custom sections in all plugins' contributions.\n   */\n  public static getSections(plugins: PluginInstance[]): PluginCustomSection[] {\n    return plugins.reduce<PluginCustomSection[]>((acc, plugin) => {\n      const customSections = plugin.definition.manifest.contributions.customSections;\n      const pluginId = plugin.definition.id;\n      if (customSections) {\n        // collect identifiers\n        const sectionIds = customSections.map(section => ({sectionId: section.name, pluginId}));\n        // concat to the accumulator\n        return acc.concat(sectionIds);\n      }\n      return acc;\n    }, []);\n  }\n\n  /**\n   * Find a section matching sectionName in the plugin instances' constributions and returns\n   * it. Returns `undefined` if not found.\n   */\n  public static find(plugin: PluginInstance, sectionName: string): ViewProcess|undefined {\n    const customSections = plugin.definition.manifest.contributions.customSections;\n    if (customSections) {\n      const section = customSections.find(({ name }) => name === sectionName);\n      if (section) {\n        const safeBrowser = plugin.safeBrowser as SafeBrowser;\n        return safeBrowser.createViewProcess(section.path);\n      }\n    }\n  }\n}\n","/**\n * A little class to make it easier to work with setTimeout/clearTimeout when it may need to get\n * cancelled or rescheduled.\n */\n\nimport {Disposable} from 'app/client/lib/dispose';\n\nexport class Delay extends Disposable {\n\n  /**\n   * Returns a function which will schedule a call to cb(), forwarding the arguments.\n   * This is a static method that may be used without a Delay object.\n   * E.g. wrapWithDelay(10, cb)(1,2,3) will call cb(1,2,3) in 10ms.\n   */\n  public static wrapWithDelay(ms: number, cb: (this: void, ...args: any[]) => any,\n                              optContext?: any): (...args: any[]) => void;\n  public static wrapWithDelay<T>(ms: number, cb: (this: T, ...args: any[]) => any,\n                                 optContext: T): (...args: any[]) => void {\n    return function(this: any, ...args: any[]) {\n      const ctx = optContext || this;\n      setTimeout(() => cb.apply(ctx, args), ms);\n    };\n  }\n\n  /**\n   * Returns a wrapped callback whose execution is delayed until the next animation frame. The\n   * returned callback may be disposed to cancel the delayed execution.\n   */\n  public static untilAnimationFrame(cb: (this: void, ...args: any[]) => void,\n                                    optContext?: any): DisposableCB;\n  public static untilAnimationFrame<T>(cb: (this: T, ...args: any[]) => void,\n                                       optContext: T): DisposableCB {\n    let reqId: number|null = null;\n    const f = function(...args: any[]) {\n      if (reqId === null) {\n        reqId = window.requestAnimationFrame(() => {\n          reqId = null;\n          cb.apply(optContext, args);\n        });\n      }\n    };\n    f.dispose = function() {\n      if (reqId !== null) {\n        window.cancelAnimationFrame(reqId);\n      }\n    };\n    return f;\n  }\n\n  private _timeoutId: ReturnType<typeof setTimeout> | null = null;\n\n  public create() {\n    this.autoDisposeCallback(this.cancel);\n  }\n\n  /**\n   * If there is a scheduled callback, clear it.\n   */\n  public cancel() {\n    if (this._timeoutId !== null) {\n      clearTimeout(this._timeoutId);\n      this._timeoutId = null;\n    }\n  }\n\n  /**\n   * Returns whether there is a scheduled callback.\n   */\n  public isPending() {\n    return this._timeoutId !== null;\n  }\n\n  /**\n   * Schedule a new callback, to be called in ms milliseconds, optionally bound to the passed-in\n   * arguments. If another callback was scheduled, it is cleared first.\n   */\n\n  public schedule(ms: number, cb: (this: void, ...args: any[]) => any, optContext?: any, ...optArgs: any[]): void;\n  public schedule<T>(ms: number, cb: (this: T, ...args: any[]) => any, optContext: T, ...optArgs: any[]): void {\n    this.cancel();\n    this._timeoutId = setTimeout(() => {\n      this._timeoutId = null;\n      cb.apply(optContext, optArgs);\n    }, ms);\n  }\n}\n\nexport interface DisposableCB {\n  (...args: any[]): void;\n  dispose(): void;\n}\n","/**\n * The SafeBrowser component implementation is responsible for executing the safeBrowser component\n * of a plugin.\n *\n * A plugin's safeBrowser component is made of one main entry point (the javascript files declares\n * in the manifest), html files and any resources included by the html files (css, scripts, images\n * ...). The main script is the main entry point which uses the Grist API to render the views,\n * communicate with them en dispose them.\n *\n * The main script is executed within a WebWorker, and the html files are rendered within webviews\n * if run within electron, or iframe in case of the browser.\n *\n * Communication between the main process and the views are handle with rpc.\n *\n * If the plugins includes as well an unsafeNode component or a safePython component and if one of\n * them registers a function using the Grist Api, this function can then be called from within the\n * safeBrowser main script using the Grist API, as described in `app/plugin/Grist.ts`.\n *\n * The grist API available to safeBrowser components is implemented in `app/plugin/PluginImpl.ts`.\n *\n * All the safeBrowser's component resources, including the main script, the html files and any\n * other resources needed by the views, should be placed within one plugins' subfolder, and Grist\n * should serve only this folder. However, this is not yet implemented and is left as a TODO, as of\n * now the whole plugin's folder is served.\n *\n */\n // Todo: plugin resources should not be made available on the server by default, but only after\n // activation.\n\n// tslint:disable:max-classes-per-file\n\nimport { ClientScope } from 'app/client/components/ClientScope';\nimport { get as getBrowserGlobals } from 'app/client/lib/browserGlobals';\nimport dom from 'app/client/lib/dom';\nimport * as Mousetrap from 'app/client/lib/Mousetrap';\nimport { ActionRouter } from 'app/common/ActionRouter';\nimport { BaseComponent, BaseLogger, createRpcLogger, PluginInstance, warnIfNotReady } from 'app/common/PluginInstance';\nimport { tbind } from 'app/common/tbind';\nimport { getOriginUrl } from 'app/common/urlUtils';\nimport { GristAPI, RPC_GRISTAPI_INTERFACE } from 'app/plugin/GristAPI';\nimport { RenderOptions, RenderTarget } from 'app/plugin/RenderOptions';\nimport { checkers } from 'app/plugin/TypeCheckers';\nimport { IMsgCustom, IMsgRpcCall, Rpc } from 'grain-rpc';\nimport { Disposable } from './dispose';\nconst G = getBrowserGlobals('document', 'window');\n\n/**\n * The SafeBrowser component implementation. Responsible for running the script, rendering the\n * views, settings up communication channel.\n */\n // todo: it is unfortunate that SafeBrowser had to expose both `renderImpl` and `disposeImpl` which\n // really have no business outside of this module. What could be done, is to have an internal class\n // ProcessManager which will be created by SafeBrowser as a private field. It will manage the\n // client processes and among other thing will expose both renderImpl and\n // disposeImpl. ClientProcess will hold a reference to ProcessManager instead of SafeBrowser.\nexport class SafeBrowser extends BaseComponent {\n\n  /**\n   * Create a webview ClientProcess to render safe browser process in electron.\n   */\n  public static createWorker(safeBrowser: SafeBrowser, rpc: Rpc, src: string): WorkerProcess {\n    return new WorkerProcess(safeBrowser, rpc, src);\n  }\n\n  /**\n   * Create either an iframe or a webview ClientProcess depending on wether running electron or not.\n   */\n  public static createView(safeBrowser: SafeBrowser, rpc: Rpc, src: string): ViewProcess {\n    return G.window.isRunningUnderElectron ?\n      new WebviewProcess(safeBrowser, rpc, src) :\n      new IframeProcess(safeBrowser, rpc, src);\n  }\n\n  // All view processes. This is not used anymore to dispose all processes on deactivation (this is\n  // now achieved using `this._mainProcess.autoDispose(...)`) but rather to be able to dispatch\n  // events to all processes (such as doc actions which will need soon).\n  private _viewProcesses: Map<number, ClientProcess> = new Map();\n  private _pluginId: string;\n  private _pluginRpc: Rpc;\n  private _mainProcess: WorkerProcess|undefined;\n  private _viewCount: number = 0;\n\n  constructor(\n    private _plugin: PluginInstance,\n    private _clientScope: ClientScope,\n    private _untrustedContentOrigin: string,\n    private _mainPath: string = \"\",\n    private _baseLogger: BaseLogger = console,\n    rpcLogger = createRpcLogger(_baseLogger, `PLUGIN ${_plugin.definition.id} SafeBrowser:`),\n  ) {\n    super(_plugin.definition.manifest, rpcLogger);\n    this._pluginId = _plugin.definition.id;\n    this._pluginRpc = _plugin.rpc;\n  }\n\n  /**\n   * Render the file at path in an iframe or webview and returns its ViewProcess.\n   */\n  public createViewProcess(path: string): ViewProcess {\n    return this._createViewProcess(path)[0];\n  }\n  /**\n   * `receiveAction` handles an action received from the server by forwarding it to the view processes.\n   */\n  public receiveAction(action: any[]) {\n    for (const view of this._viewProcesses.values()) {\n      view.receiveAction(action);\n    }\n  }\n\n\n  /**\n   * Renders the file at path and returns its proc id. This is the SafeBrowser implementation for\n   * the GristAPI's render(...) method, more details can be found at app/plugin/GristAPI.ts.\n   */\n  public async renderImpl(path: string, target: RenderTarget, options: RenderOptions): Promise<number> {\n    const [proc, viewId] = this._createViewProcess(path);\n    const renderFunc = this._plugin.getRenderTarget(target, options);\n    renderFunc(proc.element);\n    if (this._mainProcess) {\n      // Disposing the web worker should dispose all view processes that created using the\n      // gristAPI. There is a flaw here: please read [1].\n      this._mainProcess.autoDispose(proc);\n    }\n    return viewId;\n    // [1]: When a process, which is not owned by the mainProcess (ie: a process which was created\n    // using `public createViewProcess(...)'), creates a view process using the gristAPI, the\n    // rendered view will be owned by the main process. This is not correct and could cause views to\n    // suddently disappear from the screen. This is pretty nasty. But for following reason I think\n    // it's ok to leave it for now: (1) fixing this would require (yet) another refactoring of\n    // SafeBrowser and (2) at this point it is not sure wether we want to keep `render()` in the\n    // future (we could as well directly register contribution using files directly in the\n    // manifest), and (3) plugins are only developed by us, we only have to remember that using\n    // `render()` is only supported from within the main process (which cover all our use cases so\n    // far).\n  }\n\n  /**\n   * Dispose the process using it's proc id. This is the SafeBrowser implementation for the\n   * GristAPI's dispose(...) method, more details can be found at app/plugin/GristAPI.ts.\n   */\n  public async disposeImpl(procId: number): Promise<void> {\n    const proc = this._viewProcesses.get(procId);\n    if (proc) {\n      this._viewProcesses.delete(procId);\n      proc.dispose();\n    }\n  }\n\n  protected doForwardCall(c: IMsgRpcCall): Promise<any> {\n    if (this._mainProcess) {\n      return this._mainProcess.rpc.forwardCall(c);\n    }\n    // should not happen.\n    throw new Error(\"Using SafeBrowser as an IForwarder requires a main script\");\n  }\n\n  protected doForwardMessage(c: IMsgCustom): Promise<any> {\n    if (this._mainProcess) {\n      return this._mainProcess.rpc.forwardMessage(c);\n    }\n    // should not happen.\n    throw new Error(\"Using SafeBrowser as an IForwarder requires a main script\");\n  }\n\n  protected async activateImplementation(): Promise<void> {\n    if (this._mainPath) {\n      const rpc = this._createRpc(this._mainPath);\n      const src = `plugins/${this._pluginId}/${this._mainPath}`;\n      // This SafeBrowser object is registered with _pluginRpc as _mainPath forwarder, and\n      // forwards calls to _mainProcess in doForward* methods (called from BaseComponent.forward*\n      // methods). Note that those calls are what triggers component activation.\n      this._mainProcess = SafeBrowser.createWorker(this, rpc, src);\n    }\n  }\n\n  protected async deactivateImplementation(): Promise<void> {\n    if (this._mainProcess) {\n      this._mainProcess.dispose();\n    }\n  }\n\n  /**\n   * Creates an iframe or a webview embedding the file at path. And adds it to `this._viewProcesses`\n   * using `viewId` as key, and registers it as forwarder to the `pluginRpc` using name\n   * `path`. Unregister both on disposal.\n   */\n  private _createViewProcess(path: string): [ViewProcess, number] {\n    const rpc = this._createRpc(path);\n    const url = `${this._untrustedContentOrigin}/plugins/${this._plugin.definition.id}/${path}`\n    + `?host=${G.window.location.origin}`;\n    const viewId = this._viewCount++;\n    const process = SafeBrowser.createView(this, rpc, url);\n    this._viewProcesses.set(viewId, process);\n    this._pluginRpc.registerForwarder(path, rpc);\n    process.autoDisposeCallback(() => {\n      this._pluginRpc.unregisterForwarder(path);\n      this._viewProcesses.delete(viewId);\n    });\n    return [process, viewId];\n  }\n\n  /**\n   * Create an rpc instance and set it up for communicating with a ClientProcess:\n   *  - won't send any message before receiving a ready message\n   *  - has the '*' forwarder set to the plugin's instance rpc\n   *  - has registered an implementation of the gristAPI.\n   * Returns the rpc instance.\n   */\n  private _createRpc(path: string): Rpc {\n    const rpc = new Rpc({logger: createRpcLogger(this._baseLogger, `PLUGIN ${this._pluginId}/${path} SafeBrowser:`) });\n    rpc.queueOutgoingUntilReadyMessage();\n    warnIfNotReady(rpc, 3000, \"Plugin isn't ready; be sure to call grist.ready() from plugin\");\n    rpc.registerForwarder('*', this._pluginRpc);\n    // TODO: we should be able to stop serving plugins, it looks like there are some resources\n    // required that should be disposed on component deactivation.\n    this._clientScope.servePlugin(this._pluginId, rpc);\n    return rpc;\n  }\n\n\n}\n\n/**\n * Base class for any client process. `onDispose` allows to register a callback that will be\n * triggered when dispose() is called. This is for internally use.\n */\nexport class ClientProcess extends Disposable {\n  public rpc: Rpc;\n\n  private _safeBrowser: SafeBrowser;\n  private _src: string;\n  private _actionRouter: ActionRouter;\n\n  public create(...args: any[]): void;\n  public create(safeBrowser: SafeBrowser, rpc: Rpc, src: string) {\n    this.rpc = rpc;\n    this._safeBrowser = safeBrowser;\n    this._src = src;\n    this._actionRouter = new ActionRouter(this.rpc);\n    const gristAPI: GristAPI = {\n      subscribe:    tbind(this._actionRouter.subscribeTable, this._actionRouter),\n      unsubscribe:  tbind(this._actionRouter.unsubscribeTable, this._actionRouter),\n      render:       tbind(this._safeBrowser.renderImpl, this._safeBrowser),\n      dispose:      tbind(this._safeBrowser.disposeImpl, this._safeBrowser),\n    };\n    rpc.registerImpl<GristAPI>(RPC_GRISTAPI_INTERFACE, gristAPI, checkers.GristAPI);\n    this.autoDisposeCallback(() => {\n      this.rpc.unregisterImpl(RPC_GRISTAPI_INTERFACE);\n    });\n  }\n\n  public receiveAction(action: any[]) {\n    this._actionRouter.process(action)\n      // tslint:disable:no-console\n      .catch((err: any) => console.warn(\"ClientProcess[%s] receiveAction: failed with %s\", this._src, err));\n  }\n\n}\n\n/**\n * The web worker client process, used to execute safe browser main script.\n */\nclass WorkerProcess extends ClientProcess  {\n  public create(safeBrowser: SafeBrowser, rpc: Rpc, src: string) {\n    super.create(safeBrowser, rpc, src);\n    // Serve web worker script from same host as current page\n    const worker = new Worker(getOriginUrl(`/${src}`));\n    worker.addEventListener(\"message\", (e: MessageEvent) => this.rpc.receiveMessage(e.data));\n    this.rpc.setSendMessage(worker.postMessage.bind(worker));\n    this.autoDisposeCallback(() => worker.terminate());\n  }\n}\n\nexport class ViewProcess extends ClientProcess {\n  public element: HTMLElement;\n}\n\n/**\n * The Iframe ClientProcess used to render safe browser content in the browser.\n */\nclass IframeProcess extends ViewProcess {\n  public create(safeBrowser: SafeBrowser, rpc: Rpc, src: string) {\n    super.create(safeBrowser, rpc, src);\n    const iframe = this.element = this.autoDispose(dom(`iframe.safe_browser_process.clipboard_focus`,\n      { src }));\n    const listener = (event: MessageEvent) => {\n      if (event.source === iframe.contentWindow) {\n        this.rpc.receiveMessage(event.data);\n      }\n    };\n    G.window.addEventListener('message', listener);\n    this.autoDisposeCallback(() => {\n      G.window.removeEventListener('message', listener);\n    });\n    this.rpc.setSendMessage(msg => iframe.contentWindow!.postMessage(msg, '*'));\n  }\n\n}\n\n/**\n * The webview ClientProcess to render safe browser process in electron.\n */\nclass WebviewProcess extends ViewProcess {\n  public create(safeBrowser: SafeBrowser, rpc: Rpc, src: string) {\n    super.create(safeBrowser, rpc, src);\n    const webview = this.element = this.autoDispose(dom('webview.safe_browser_process.clipboard_focus', {\n      src,\n      allowpopups: '',\n      // Requests with this partition get an extra header (see main.js) to get access to plugin content.\n      partition: 'plugins',\n    }));\n    // Temporaily disable \"mousetrap\" keyboard stealing for the duration of this webview.\n    // This is acceptable since webviews are currently full-screen modals.\n    // TODO: find a way for keyboard events to play nice when webviews are non-modal.\n    Mousetrap.setPaused(true);\n    this.autoDisposeCallback(() => Mousetrap.setPaused(false));\n    webview.addEventListener('ipc-message', (event: any /* IpcMessageEvent */) => {\n      // The event object passed to the listener is missing proper documentation. In the examples\n      // listed in https://electronjs.org/docs/api/ipc-main the arguments should be passed to the\n      // listener after the event object, but this is not happening here. Only we know it is a\n      // DOMEvent with some extra porperties including a `channel` property of type `string` and an\n      // `args` property of type `any[]`.\n      if (event.channel === 'grist') {\n        rpc.receiveMessage(event.args[0]);\n      }\n    });\n    this.rpc.setSendMessage(msg => webview.send('grist', msg));\n  }\n}\n","import {get as getBrowserGlobals} from 'app/client/lib/browserGlobals';\n\nconst G = getBrowserGlobals('document', 'window');\n\n/**\n * Copy text or data to the clipboard.\n */\nexport async function copyToClipboard(data: string | ClipboardItem) {\n  if (typeof data === 'string') {\n    await copyTextToClipboard(data);\n  } else {\n    await copyDataToClipboard(data);\n  }\n}\n\n/**\n * Copy text to the clipboard.\n */\nasync function copyTextToClipboard(txt: string) {\n  // If present and we have permission to use it, the navigator.clipboard interface\n  // is convenient.  This method works in non-headless tests, and regular chrome\n  // and firefox.\n  if (G.window.navigator && G.window.navigator.clipboard && G.window.navigator.clipboard.writeText) {\n    try {\n      await G.window.navigator.clipboard.writeText(txt);\n      return;\n    } catch (e) {\n      // no joy, try another way.\n    }\n  }\n  // Otherwise fall back on document.execCommand('copy'), which requires text in\n  // the dom to be selected.  Implementation here based on:\n  //   https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\n  // This fallback takes effect at least in headless tests, and in Safari.\n  const stash = G.document.createElement('textarea');\n  stash.value = txt;\n  stash.setAttribute('readonly', '');\n  stash.style.position = 'absolute';\n  stash.style.left = '-10000px';\n  G.document.body.appendChild(stash);\n  const selection = G.document.getSelection().rangeCount > 0 && G.document.getSelection().getRangeAt(0);\n  stash.select();\n  G.document.execCommand('copy');\n  G.document.body.removeChild(stash);\n  if (selection) {\n    G.document.getSelection().removeAllRanges();\n    G.document.getSelection().addRange(selection);\n  }\n}\n\n/**\n * Copy data to the clipboard.\n */\nasync function copyDataToClipboard(data: ClipboardItem) {\n  if (!G.window.navigator?.clipboard?.write) {\n    throw new Error('navigator.clipboard.write is not supported on this browser');\n  }\n\n  await G.window.navigator.clipboard.write([data]);\n}\n\n/**\n * Read text from the clipboard.\n */\nexport function readTextFromClipboard(): Promise<string> {\n  if (!G.window.navigator?.clipboard?.readText) {\n    throw new Error('navigator.clipboard.readText is not supported on this browser');\n  }\n\n  return G.window.navigator.clipboard.readText();\n}\n\n/**\n * Read data from the clipboard.\n */\nexport function readDataFromClipboard(): Promise<ClipboardItem[]> {\n  if (!G.window.navigator?.clipboard?.read) {\n    throw new Error('navigator.clipboard.read is not supported on this browser');\n  }\n\n  return G.window.navigator.clipboard.read();\n}\n","import {reportError} from 'app/client/models/errors';\nimport {DomContents, onDisposeElem, replaceContent} from 'grainjs';\n// grainjs annoyingly doesn't export browserGlobals tools, useful for testing in a simulated environment.\nimport {G} from 'grainjs/dist/cjs/lib/browserGlobals';\n\n/**\n * Insert DOM contents produced by a Promise. Until the Promise is fulfilled, nothing shows up.\n * TODO: This would be a handy place to support options to show a loading spinner (perhaps\n * showing up if the promise takes more than a bit to show).\n */\nexport function domAsync(promiseForDomContents: Promise<DomContents>, onError = reportError): DomContents {\n  const markerPre = G.document.createComment('a');\n  const markerPost = G.document.createComment('b');\n\n  // Function is added after the markers, to run once they have been attached to elem (the parent).\n  return [markerPre, markerPost, (elem: Node) => {\n    let disposed = false;\n    promiseForDomContents\n      .then((contents) => disposed || replaceContent(markerPre, markerPost, contents))\n      .catch(onError);\n\n    // If markerPost is disposed before the promise resolves, set insertContent to noop.\n    onDisposeElem(markerPost, () => { disposed = true; });\n  }];\n}\n","/**\n * Replicates some of grainjs's fromKo, except that the returned observables have a set() method\n * which calls koObs.saveOnly(val) rather than koObs(val).\n */\nimport {IKnockoutObservable, KoWrapObs, Observable} from 'grainjs';\n\nconst wrappers: WeakMap<IKnockoutObservable<any>, Observable<any>> = new WeakMap();\n\n/**\n * Returns a Grain.js observable which mirrors a Knockout observable.\n *\n * Do not dispose this wrapper, as it is shared by all code using koObs, and its lifetime is tied\n * to the lifetime of koObs. If unused, it consumes minimal resources, and should get garbage\n * collected along with koObs.\n */\nexport function fromKoSave<T>(koObs: IKnockoutObservable<T>): Observable<T> {\n  return wrappers.get(koObs) || wrappers.set(koObs, new KoSaveWrapObs(koObs)).get(koObs)!;\n}\n\nexport class KoSaveWrapObs<T> extends KoWrapObs<T> {\n  constructor(_koObs: IKnockoutObservable<T>) {\n    if (!('saveOnly' in _koObs)) {\n      throw new Error('fromKoSave needs a saveable observable');\n    }\n    super(_koObs);\n  }\n\n  public set(value: T): void {\n    // Hacky cast to get a private member. TODO: should make it protected instead.\n    (this as any)._koObs.saveOnly(value);\n  }\n}\n","import {KoArray} from 'app/client/lib/koArray';\nimport {IDisposableOwnerT, MutableObsArray, ObsArray, setDisposeOwner} from 'grainjs';\n\n/**\n * Returns a grainjs ObsArray that reflects the given koArray, mapping small changes using\n * similarly efficient events.\n *\n * (Note that for both ObsArray and koArray, the main purpose in life is to be more efficient than\n * an array-valued observable by handling small changes more efficiently.)\n */\nexport function createObsArray<T>(\n  owner: IDisposableOwnerT<ObsArray<T>> | null,\n  koArray: KoArray<T>,\n): ObsArray<T> {\n  return setDisposeOwner(owner, new KoWrapObsArray(koArray));\n}\n\n\n/**\n * An Observable that wraps a Knockout observable, created via fromKo(). It keeps minimal overhead\n * when unused by only subscribing to the wrapped observable while it itself has subscriptions.\n *\n * This way, when unused, the only reference is from the wrapper to the wrapped object. KoWrapObs\n * should not be disposed; its lifetime is tied to that of the wrapped object.\n */\nclass KoWrapObsArray<T> extends MutableObsArray<T> {\n  private _koSub: any = null;\n\n  constructor(_koArray: KoArray<T>) {\n    super(Array.from(_koArray.peek()));\n\n    this._koSub = _koArray.subscribe((splice: any) => {\n      const newValues = splice.array.slice(splice.start, splice.start + splice.added);\n      this.splice(splice.start, splice.deleted.length, ...newValues);\n    }, null, 'spliceChange');\n  }\n\n  public dispose(): void {\n    this._koSub.dispose();\n    super.dispose();\n  }\n}\n","import {dom, Holder, IDisposable, MultiHolder} from 'grainjs';\n\n/**\n * Overrides the cursor style for the entire document.\n * @returns {Disposable} - a Disposable that restores the cursor style to its original value.\n */\nexport function documentCursor(type: 'ns-resize' | 'grabbing'): IDisposable {\n  const cursorStyle: HTMLStyleElement = document.createElement('style');\n  cursorStyle.innerHTML = `*{cursor: ${type}!important;}`;\n  cursorStyle.id = 'cursor-style';\n  document.head.appendChild(cursorStyle);\n  const cursorOwner = {\n    dispose() {\n      if (this.isDisposed()) { return; }\n      document.head.removeChild(cursorStyle);\n    },\n    isDisposed() {\n      return !cursorStyle.isConnected;\n    }\n  };\n  return cursorOwner;\n}\n\n\n/**\n * Helper function to create a movable element.\n * @param options Handlers for the movable element.\n */\nexport function movable<T>(options: {\n  onMove: (dx: number, dy: number, state: T) => void,\n  onStart: () => T,\n  onEnd?: () => void,\n}) {\n  return (el: HTMLElement) => {\n    // Remember the initial position of the mouse.\n    let startX = 0;\n    let startY = 0;\n    dom.onElem(el, 'mousedown', (md) => {\n      // Only handle left mouse button.\n      if (md.button !== 0) { return; }\n      startX = md.clientX;\n      startY = md.clientY;\n      const state = options.onStart();\n\n      // We create a holder first so that we can dispose elements earlier on mouseup, and have a fallback\n      // in case of a situation when the dom is removed before mouseup.\n      const holder = new Holder();\n      const owner = MultiHolder.create(holder);\n      dom.autoDisposeElem(el, holder);\n\n      owner.autoDispose(dom.onElem(document, 'mousemove', (mv) => {\n        const dx = mv.clientX - startX;\n        const dy = mv.clientY - startY;\n        options.onMove(dx, dy, state);\n      }));\n      owner.autoDispose(dom.onElem(document, 'mouseup', () => {\n        options.onEnd?.();\n        holder.clear();\n      }));\n      owner.autoDispose(documentCursor('ns-resize'));\n      md.stopPropagation();\n      md.preventDefault();\n    }, { useCapture: true });\n  };\n}\n","/**\n * createSessionObs() creates an observable tied to window.sessionStorage, i.e. preserved for the\n * lifetime of a browser tab for the current origin.\n */\nimport {safeJsonParse} from 'app/common/gutil';\nimport {IDisposableOwner, Observable} from 'grainjs';\nimport {getSessionStorage} from 'app/client/lib/storage';\n\nexport interface SessionObs<T> extends Observable<T> {\n  pauseSaving(yesNo: boolean): void;\n}\n\n/**\n * Creates and returns an Observable tied to sessionStorage, to make its value stick across\n * reloads and navigation, but differ across browser tabs. E.g. whether a side pane is open.\n *\n * The `key` isn't visible to the user, so pick any unique string name. You may include the\n * docId into the key, to remember a separate value for each doc.\n *\n * To use it, you must specify a default, and a validation function: this module exposes a few\n * helpful ones. Some examples:\n *\n *    panelWidth = createSessionObs(owner, \"panelWidth\", 240, isNumber);  // Has type Observable<number>\n *\n *    import {StringUnion} from 'app/common/StringUnion';\n *    const SomeTab = StringUnion(\"foo\", \"bar\", \"baz\");\n *    tab = createSessionObs(owner, \"tab\", \"baz\", SomeTab.guard);  // Type Observable<\"foo\"|\"bar\"|\"baz\">\n *\n * You can disable saving to sessionStorage:\n *    panelWidth.pauseSaving(true);\n *    doStuff();\n *    panelWidth.pauseSaving(false);\n *\n */\nexport function createSessionObs<T>(\n  owner: IDisposableOwner|null,\n  key: string,\n  _default: T,\n  isValid: (val: any) => val is T,\n): SessionObs<T> {\n  function fromString(value: string|null): T {\n    const parsed = value == null ? null : safeJsonParse(value, null);\n    return isValid(parsed) ? parsed : _default;\n  }\n  function toString(value: T): string|null {\n    return value === _default || !isValid(value) ? null : JSON.stringify(value);\n  }\n  let _pauseSaving = false;\n  const storage = getSessionStorage();\n  const obs = Observable.create<T>(owner, fromString(storage.getItem(key)));\n  obs.addListener((value: T) => {\n    if (_pauseSaving) { return; }\n    const stored = toString(value);\n    if (stored == null) {\n      storage.removeItem(key);\n    } else {\n      storage.setItem(key, stored);\n    }\n  });\n  return Object.assign(obs, {pauseSaving(yesNo: boolean) { _pauseSaving = yesNo; }});\n}\n\n/** Helper functions to check simple types, useful for the `isValid` argument to createSessionObs. */\nexport function isNumber(t: any): t is number { return typeof t === 'number'; }\nexport function isBoolean(t: any): t is boolean { return typeof t === 'boolean'; }\nexport function isString(t: any): t is string { return typeof t === 'string'; }\n","/**\n * SimpleList is a simple collection of item. Besides holding the items, it also knows which item is\n * selected, and allows selection via keyboard. In particular simpleList does not steal focus from\n * the trigger element, which makes it suitable to show a list of items next to an input element\n * while user is typing without interfering.\n *\n * const array = observable([{label: 'foo': value: 0, {label: 'bar', value: 1}]);\n * const ctl = popupControl(elem, ctl => SimpleList.create(null, ctl, array, action));\n *\n * // Enable keyboard navigation by listening to keys on the element that has focus.\n * ctl.listenKeys(elem)\n *\n * // toggle popup\n * dom('input', dom.on('click', () => ctl.toggle()));\n */\nimport { Disposable, dom, DomArg, Observable, styled } from \"grainjs\";\nimport { cssMenu, cssMenuItem, cssMenuWrap, getOptionFull, IOpenController, IOption } from \"popweasel\";\nimport { attachMouseOverOnMove, findAncestorChild } from \"app/client/lib/autocomplete\";\nimport { menuCssClass, menuItem } from \"app/client/ui2018/menus\";\n\nexport type { IOption, IOptionFull } from 'popweasel';\nexport { getOptionFull } from 'popweasel';\n\nexport interface ISimpleListOpt<T, U extends IOption<T> = IOption<T>> {\n  headerDom?(): DomArg<HTMLElement>;\n  renderItem?(item: U): DomArg<HTMLElement>;\n}\n\nexport class SimpleList<T, U extends IOption<T> = IOption<T>> extends Disposable {\n\n  public readonly content: HTMLElement;\n  private _menuContent: HTMLElement;\n  private _selected: HTMLElement;\n  private _selectedIndex: number = -1;\n  private _mouseOver: {reset(): void};\n\n  constructor(private _ctl: IOpenController,\n              private _items: Observable<Array<U>>,\n              private _action: (value: T) => void,\n              opt: ISimpleListOpt<T, U> = {}) {\n    super();\n    const renderItem = opt.renderItem || ((item: U) => getOptionFull(item).label);\n    this.content = cssMenuWrap(\n      dom('div',\n        {class: menuCssClass + ' grist-floating-menu'},\n        cssMenu.cls(''),\n        cssMenuExt.cls(''),\n        opt.headerDom?.(),\n        this._menuContent = cssMenuList(\n          dom.forEach(this._items, (i) => {\n            const item = getOptionFull(i);\n            return cssOptionRow(\n              {class: menuItem.className + ' ' + cssMenuItem.className},\n              dom.on('click', () => this._doAction(item.value)),\n              renderItem(i),\n              dom.cls('disabled', Boolean(item.disabled)),\n              dom.data('itemValue', item.value),\n            );\n          }),\n        ),\n      ),\n      dom.on('mouseleave', (_ev) => this.setSelected(-1)),\n    );\n    this.autoDispose(_items.addListener(() => this._update()));\n    this._mouseOver = attachMouseOverOnMove(\n      this._menuContent,\n      (ev) => this.setSelected(this._findTargetItem(ev.target))\n    );\n    this._update();\n  }\n\n  public listenKeys(elem: HTMLElement) {\n    this.autoDispose(dom.onKeyElem(elem, 'keydown', {\n      Escape: () => this._ctl.close(),\n      ArrowDown: () => this.setSelected(this._getNextSelectable(1)),\n      ArrowUp: () => this.setSelected(this._getNextSelectable(-1)),\n      Enter: () => this._doAction(this._getSelectedData()),\n    }));\n  }\n\n  // When the selected element changes, update the classes of the formerly and newly-selected\n  // elements.\n  public setSelected(index: number) {\n    const elem = (this._menuContent.children[index] as HTMLElement) || null;\n    const prev = this._selected;\n    if (elem !== prev) {\n      const clsName = cssMenuItem.className + '-sel';\n      if (prev) { prev.classList.remove(clsName); }\n      if (elem) {\n        elem.classList.add(clsName);\n        elem.scrollIntoView({block: 'nearest'});\n      }\n    }\n    this._selected = elem;\n    this._selectedIndex = elem ? index : -1;\n  }\n\n  private _update() {\n    this._mouseOver?.reset();\n  }\n\n  private _findTargetItem(target: EventTarget|null): number {\n    // Find immediate child of this._menuContent which is an ancestor of ev.target.\n    const elem = findAncestorChild(this._menuContent, target as Element|null);\n    if (elem?.classList.contains('disabled')) { return -1; }\n    return Array.prototype.indexOf.call(this._menuContent.children, elem);\n  }\n\n  private _getSelectedData() {\n    return this._selected ? dom.getData(this._selected, 'itemValue') : null;\n  }\n\n  private _doAction(value: T | null) {\n    // If value is null, simply close the menu. This happens when pressing enter with no element\n    // selected.\n    if (value) { this._action(value); }\n    this._ctl.close();\n  }\n\n  private _getNext(index: number, step: 1 | -1): number {\n    // Pretend there is an extra element at the end to mean \"nothing selected\".\n    const xsize = this._items.get().length + 1;\n    const next = (index + step + xsize) % xsize;\n    return (next === xsize - 1) ? -1 : next;\n  }\n\n  private _getNextSelectable(step: 1 | -1): number {\n    let next = this._getNext(this._selectedIndex, step);\n    while (this._menuContent.children[next]?.classList.contains('disabled')) {\n      next = this._getNext(next, step);\n    }\n    return next;\n  }\n}\nconst cssMenuList = styled('ul', `\n  overflow: auto;\n  list-style: none;\n  outline: none;\n  padding: 0;\n  width: 100%;\n  margin: 0;\n`);\nconst cssOptionRow = styled('li', `\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n`);\nconst cssMenuExt = styled('div', `\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`);\n","import { GristDoc } from 'app/client/components/GristDoc';\nimport { ClientColumnGetters } from 'app/client/models/ClientColumnGetters';\nimport { ViewSectionRec } from 'app/client/models/entities/ViewSectionRec';\nimport * as rowset from 'app/client/models/rowset';\nimport { MANUALSORT } from 'app/common/gristTypes';\nimport { SortFunc } from 'app/common/SortFunc';\nimport { Sort } from 'app/common/SortSpec';\nimport { UIRowId } from 'app/plugin/GristAPI';\nimport * as ko from 'knockout';\nimport range = require('lodash/range');\n\n\n/**\n * Adds a column to the given sort spec, replacing its previous occurrence if\n * it's already in the sort spec.\n */\nexport function addToSort(sortSpecObs: ko.Observable<Sort.SortSpec>, colRef: number, direction: -1|1) {\n  const spec = sortSpecObs.peek();\n  const index = Sort.findColIndex(spec, colRef);\n  if (index !== -1) {\n    spec.splice(index, 1, colRef * direction);\n  } else {\n    spec.push(colRef * direction);\n  }\n  sortSpecObs(spec);\n}\n\nexport function sortBy(sortSpecObs: ko.Observable<Sort.SortSpec>, colRef: number, direction: -1|1) {\n  let spec = sortSpecObs.peek();\n  const colSpec = Sort.findCol(spec, colRef) ?? colRef;\n  spec = [Sort.setColDirection(colSpec, direction)];\n  sortSpecObs(spec);\n}\n\n// Updates the manual sort positions to the positions currently displayed in the view, sets the\n// view's default sort spec to be manual sort and broadcasts these changes.\n// This is excel/google sheets' sort behavior.\nexport async function updatePositions(gristDoc: GristDoc, section: ViewSectionRec): Promise<void> {\n  const tableId = section.table.peek().tableId.peek();\n  const tableModel = gristDoc.getTableModel(tableId);\n\n  // Build a sorted array of rowIds the way a view would, using the active sort spec. We just need\n  // the sorted list, and can dispose the observable array immediately.\n  const sortFunc = new SortFunc(new ClientColumnGetters(tableModel, { unversioned: true }));\n  sortFunc.updateSpec(section.activeDisplaySortSpec.peek());\n  const sortedRows = rowset.SortedRowSet.create(\n    null,\n    (a: UIRowId, b: UIRowId) => sortFunc.compare(a as number, b as number),\n    tableModel.tableData\n  );\n  sortedRows.subscribeTo(tableModel);\n  const sortedRowIds = sortedRows.getKoArray().peek().slice(0);\n  sortedRows.dispose();\n\n  // The action just assigns consecutive positions to the sorted rows.\n  const colInfo = {[MANUALSORT]: range(0, sortedRowIds.length)};\n  await gristDoc.docData.sendActions(\n    [\n      // Update row positions and clear the saved sort spec as a single action bundle.\n      ['BulkUpdateRecord', tableId, sortedRowIds, colInfo],\n      ['UpdateRecord', '_grist_Views_section', section.getRowId(), {sortColRefs: '[]'}],\n    ],\n    `Updated table ${tableId} row positions.`\n  );\n  // Finally clear out the local sort spec.\n  section.activeSortJson.revert();\n}\n","import type {CopySelection} from 'app/client/components/CopySelection';\nimport {get as getBrowserGlobals} from 'app/client/lib/browserGlobals';\nimport type {KoArray} from 'app/client/lib/koArray';\nimport {simpleStringHash} from 'app/client/lib/textUtils';\nimport type {ViewFieldRec} from 'app/client/models/DocModel';\nimport type {BulkUpdateRecord} from 'app/common/DocActions';\nimport {safeJsonParse} from 'app/common/gutil';\nimport type {TableData} from 'app/common/TableData';\nimport {tsvEncode} from 'app/common/tsvFormat';\nimport {dom} from 'grainjs';\nimport zipObject = require('lodash/zipObject');\n\nconst G = getBrowserGlobals('document', 'DOMParser');\n\n/**\n * Returns a sorted array of parentPos values for a viewField to be inserted just before index.\n * @param {koArray} viewFields - koArray of viewFields\n * @{param} {number} index - index in viewFields at which to insert the new fields\n * @{param} {number} numInserts - number of new fields to insert\n */\nexport function fieldInsertPositions(viewFields: KoArray<ViewFieldRec>, index: number, numInserts: number = 1\n): Array<number|null> {\n  const rightPos = (index < viewFields.peekLength) ? viewFields.at(index)!.parentPos() : null;\n  return Array(numInserts).fill(rightPos);\n}\n\n/**\n * Returns tsv formatted values from TableData at the given rowIDs and columnIds.\n * @param {TableData} tableData - the table containing the values to convert\n * @param {CopySelection} selection - a CopySelection instance\n * @return {String}\n **/\nexport function makePasteText(tableData: TableData, selection: CopySelection) {\n  // tsvEncode expects data as a 2-d array with each a array representing a row\n  // i.e. [[\"1-1\", \"1-2\", \"1-3\"],[\"2-1\", \"2-2\", \"2-3\"]]\n  const values = selection.rowIds.map(rowId =>\n    selection.columns.map(col => col.fmtGetter(rowId)));\n  return tsvEncode(values);\n}\n\n/**\n * Hash of the current docId to allow checking if copying and pasting is happening in the same document,\n * without leaking the actual docId which may allow others to access the document.\n */\nexport function getDocIdHash(): string {\n  const docId = (window as any).gristDocPageModel.currentDocId.get();\n  return simpleStringHash(docId);\n}\n\n/**\n * Returns an html table of containing the cells denoted by the cross product of\n * the given rows and columns, styled by the given table/row/col style dictionaries.\n * @param {TableData} tableData - the table containing the values denoted by the grid selection\n * @param {CopySelection} selection - a CopySelection instance\n * @param {Boolean} showColHeader - whether to include a column header row\n * @return {String} The html for a table containing the given data.\n **/\nexport function makePasteHtml(tableData: TableData, selection: CopySelection, includeColHeaders: boolean) {\n  const rowStyle = selection.rowStyle || {};    // Maps rowId to style object.\n  const colStyle = selection.colStyle || {};    // Maps colId to style object.\n\n  const elem = dom('table',\n    {border: '1', cellspacing: '0', style: 'white-space: pre', 'data-grist-doc-id-hash': getDocIdHash()},\n    dom('colgroup', selection.colIds.map((colId, idx) =>\n      dom('col', {\n        style: _styleAttr(colStyle[colId]),\n        'data-grist-col-ref': String(selection.colRefs[idx]),\n        'data-grist-col-type': tableData.getColType(colId)\n      })\n    )),\n    // Include column headers if requested.\n    (includeColHeaders ?\n      dom('tr', selection.colIds.map(colId => dom('th', colId))) :\n      null\n    ),\n    // Fill with table cells.\n    selection.rowIds.map(rowId =>\n      dom('tr',\n        {style: _styleAttr(rowStyle[rowId as number])},\n        selection.columns.map(col => {\n          const rawValue = col.rawGetter(rowId);\n          const fmtValue = col.fmtGetter(rowId);\n          const dataOptions = (rawValue === fmtValue) ? {} :\n            {'data-grist-raw-value': JSON.stringify(rawValue)};\n          return dom('td', dataOptions, fmtValue);\n        })\n      )\n    )\n  );\n  return elem.outerHTML;\n}\n\nexport interface RichPasteObject {\n  displayValue: string;\n  docIdHash?: string|null;\n  colType?: string|null;  // Column type of the source column.\n  colRef?: number|null;\n  rawValue?: unknown;     // Optional rawValue that should be used if colType matches destination.\n}\n\n/**\n * Parses a 2-d array of objects from a text string containing an HTML table.\n * @param {string} data - String of an HTML table.\n * @return {Array<Array<RichPasteObj>>} - 2-d array of objects containing details of copied cells.\n */\nexport function parsePasteHtml(data: string): RichPasteObject[][] {\n  const parser = new G.DOMParser() as DOMParser;\n  const doc = parser.parseFromString(data, 'text/html');\n  const table = doc.querySelector('table')!;\n  const docIdHash = table.getAttribute('data-grist-doc-id-hash');\n\n  const cols = [...table.querySelectorAll('col')];\n  const rows = [...table.querySelectorAll('tr')];\n  const result = rows.map(row =>\n    Array.from(row.querySelectorAll('td, th'), (cell, colIdx) => {\n      const col = cols[colIdx];\n      const colType = col?.getAttribute('data-grist-col-type');\n      const colRef = col && Number(col.getAttribute('data-grist-col-ref'));\n      const o: RichPasteObject = {displayValue: cell.textContent!, docIdHash, colType, colRef};\n\n      if (cell.hasAttribute('data-grist-raw-value')) {\n        o.rawValue = safeJsonParse(cell.getAttribute('data-grist-raw-value')!,\n          o.displayValue);\n      }\n\n      return o;\n    }))\n    .filter((row) => (row.length > 0));\n  if (result.length === 0) {\n    throw new Error('Unable to parse data from text/html');\n  }\n  return result;\n}\n\n// Helper function to add css style properties to an html tag\nfunction _styleAttr(style: object|undefined) {\n  if (typeof style !== 'object') {\n    return '';\n  }\n  return Object.entries(style).map(([prop, value]) => `${prop}: ${value};`).join(' ');\n}\n\n/**\n* Given a selection object, creates a action to set all references in the object to the empty string.\n* @param {Object} selection - an object with a list of selected row Ids, selected column Ids, a list of\n* column metaRowModels and other information about the currently selected cells.\n* See GridView.js getSelection and DetailView.js getSelection.\n* @returns {Object} BulkUpdateRecord action\n*/\nexport function makeDeleteAction(selection: CopySelection): BulkUpdateRecord|null {\n  // If the selection includes the \"new\" row, ignore that one.\n  const rowIds = selection.rowIds.filter((r): r is number => (typeof r === 'number'));\n  if (rowIds.length === 0) {\n    return null;\n  }\n  const blankRow = rowIds.map(() => '');\n\n  const colIds = selection.fields\n    .filter(field => !field.column().isRealFormula() && !field.disableEditData())\n    .map(field => field.colId());\n\n  // Get the tableId from the first selected column.\n  const tableId = selection.fields[0].column().table().tableId();\n\n  if (colIds.length === 0) {\n    return null;\n  }\n  return ['BulkUpdateRecord', tableId, rowIds,\n    zipObject(colIds, colIds.map(() => blankRow))];\n}\n","import {get as getBrowserGlobals} from 'app/client/lib/browserGlobals';\nimport {TestState} from 'app/common/TestState';\n\nconst G = getBrowserGlobals('window');\n\nexport function setTestState(state: Partial<TestState>) {\n  if (!('testGrist' in G.window)) {\n    G.window.testGrist = {};\n  }\n  Object.assign(G.window.testGrist, state);\n}\n","/**\n * This module contains several ways to create an upload on the server. In all cases, an\n * UploadResult is returned, with an uploadId which may be used in other server calls to identify\n * this upload.\n *\n * TODO: another proposed source for files is uploadUrl(url) which would fetch a file from URL and\n * upload, and if that fails due to CORS, would fetch the file on the server side instead.\n */\n\nimport {DocComm} from 'app/client/components/DocComm';\nimport {UserError} from 'app/client/models/errors';\nimport {FileDialogOptions, openFilePicker} from 'app/client/ui/FileDialog';\nimport {GristLoadConfig} from 'app/common/gristUrls';\nimport {byteString, safeJsonParse} from 'app/common/gutil';\nimport {FetchUrlOptions, UPLOAD_URL_PATH, UploadResult} from 'app/common/uploads';\nimport {docUrl} from 'app/common/urlUtils';\nimport noop = require('lodash/noop');\nimport trimStart = require('lodash/trimStart');\nimport {basename} from 'path';      // made available by webpack using path-browserify module.\n\ntype ProgressCB = (percent: number) => void;\n\nexport interface UploadOptions {\n  docWorkerUrl?: string;\n  sizeLimit?: 'import'|'attachment';\n}\n\nexport interface SelectFileOptions extends UploadOptions {\n  multiple?: boolean;     // Whether multiple files may be selected.\n  extensions?: string[];  // Comma-separated list of extensions (with a leading period),\n                          // e.g. [\".jpg\", \".png\"]\n}\n\nexport const IMPORTABLE_EXTENSIONS = [\".grist\", \".csv\", \".tsv\", \".txt\", \".xlsx\", \".xlsm\"];\n\n/**\n * Shows the file-picker dialog with the given options, and uploads the selected files. If under\n * electron, shows the native file-picker instead.\n *\n * If given, onProgress() callback will be called with 0 on initial call, and will go up to 100\n * after files are selected to indicate percentage of data uploaded.\n */\nexport async function selectFiles(options: SelectFileOptions,\n                                  onProgress: ProgressCB = noop): Promise<UploadResult|null> {\n  onProgress(0);\n  let result: UploadResult|null = null;\n  const electronSelectFiles: any = (window as any).electronSelectFiles;\n  if (typeof electronSelectFiles === 'function') {\n    result = await electronSelectFiles(getElectronOptions(options));\n  } else {\n    const files: File[] = await openFilePicker(getFileDialogOptions(options));\n    result = await uploadFiles(files, options, onProgress);\n  }\n  onProgress(100);\n  return result;\n}\n\n// Helper to convert SelectFileOptions to the browser's FileDialogOptions.\nfunction getFileDialogOptions(options: SelectFileOptions): FileDialogOptions {\n  const resOptions: FileDialogOptions = {};\n  if (options.multiple) {\n    resOptions.multiple = options.multiple;\n  }\n  if (options.extensions) {\n    resOptions.accept = options.extensions.join(\",\");\n  }\n  return resOptions;\n}\n\n// Helper to convert SelectFileOptions to electron's OpenDialogOptions.\nfunction getElectronOptions(options: SelectFileOptions) /*: OpenDialogOptions */ {\n  const resOptions /*: OpenDialogOptions*/ = {\n    filters: [] as Array<{name: string, extensions: any}>,\n    properties: ['openFile'],\n  };\n  if (options.extensions) {\n    // Electron does not expect leading period.\n    const extensions = options.extensions.map(e => trimStart(e, '.'));\n    resOptions.filters.push({name: 'Select files', extensions});\n  }\n  if (options.multiple) {\n    resOptions.properties.push('multiSelections');\n  }\n  return resOptions;\n}\n\n/**\n * Uploads a list of File objects to the server.\n */\nexport async function uploadFiles(\n  fileList: File[], options: UploadOptions, onProgress: ProgressCB = noop\n): Promise<UploadResult|null> {\n  if (!fileList.length) { return null; }\n\n  const formData = new FormData();\n  for (const file of fileList) {\n    formData.append('upload', file);\n  }\n\n  // Check for upload limits.\n  const gristConfig: GristLoadConfig = (window as any).gristConfig || {};\n  const {maxUploadSizeImport, maxUploadSizeAttachment} = gristConfig;\n  if (options.sizeLimit === 'import' && maxUploadSizeImport) {\n    // For imports, we limit the total upload size, but exempt .grist files from the upload limit.\n    // Grist docs can be uploaded to make copies or restore from backup, and may legitimately be\n    // very large (e.g. contain many attachments or on-demand tables).\n    const totalSize = fileList.reduce((acc, f) => acc + (f.name.endsWith(\".grist\") ? 0 : f.size), 0);\n    if (totalSize > maxUploadSizeImport) {\n      throw new UserError(`Imported files may not exceed ${byteString(maxUploadSizeImport)}`);\n    }\n  } else if (options.sizeLimit === 'attachment' && maxUploadSizeAttachment) {\n    // For attachments, we limit the size of each attachment.\n    if (fileList.some((f) => (f.size > maxUploadSizeAttachment))) {\n      throw new UserError(`Attachments may not exceed ${byteString(maxUploadSizeAttachment)}`);\n    }\n  }\n\n  return new Promise<UploadResult>((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('post', docUrl(options.docWorkerUrl, UPLOAD_URL_PATH), true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.withCredentials = true;\n    xhr.upload.addEventListener('progress', (e) => {\n      if (e.lengthComputable) {\n        onProgress(e.loaded / e.total * 100);   // percentage complete\n      }\n    });\n    xhr.addEventListener('error', (e: ProgressEvent) => {\n      console.warn(\"Upload error\", e);    // tslint:disable-line:no-console\n      // The event does not seem to have any helpful info in it, to add to the message.\n      reject(new Error('Upload error'));\n    });\n    xhr.addEventListener('load', () => {\n      if (xhr.status !== 200) {\n        // tslint:disable-next-line:no-console\n        console.warn(\"Upload failed\", xhr.status, xhr.responseText);\n        const err = safeJsonParse(xhr.responseText, null);\n        reject(new UserError('Upload failed: ' + (err && err.error || xhr.status)));\n      } else {\n        resolve(JSON.parse(xhr.responseText));\n      }\n    });\n    xhr.send(formData);\n  });\n}\n\n/**\n * Fetches resource from a url and returns an UploadResult. Tries to fetch from the client and\n * upload the file to the server. If unsuccessful, tries to fetch directly from the server. In both\n * case, it guesses the name of the file based on the response's content-type and the url.\n */\nexport async function fetchURL(\n  docComm: DocComm, url: string, options?: FetchUrlOptions, onProgress: ProgressCB = noop\n  ): Promise<UploadResult> {\n\n  if (isDriveUrl(url)) {\n    // don't download from google drive, immediately fallback to server side.\n    return docComm.fetchURL(url, options);\n  }\n\n  let response: Response;\n  try {\n    response = await window.fetch(url);\n  } catch (err) {\n    console.log( // tslint:disable-line:no-console\n      `Could not fetch ${url} on the Client, falling back to server fetch: ${err.message}`\n    );\n    return docComm.fetchURL(url, options);\n  }\n  // TODO: We should probably parse response.headers.get('content-disposition') when available\n  // (see content-disposition npm module).\n  const fileName = basename(url);\n  const mimeType = response.headers.get('content-type');\n  const fileOptions = mimeType ? { type: mimeType } : {};\n  const fileObj = new File([await response.blob()], fileName, fileOptions);\n  const res = await uploadFiles([fileObj], {docWorkerUrl: docComm.docWorkerUrl}, onProgress);\n  return res!;\n}\n\nexport function isDriveUrl(url: string) {\n  if (!url) { return null; }\n  const match = /^https:\\/\\/(docs|drive).google.com\\/(spreadsheets|file)\\/d\\/([^/]*)/i.exec(url);\n  return !!match;\n}\n","/**\n * Code and declarations shared by browser and server-side code for handling uploads.\n *\n * Browser code has several functions available in app/client/lib/uploads.ts which return an\n * UploadResult that represents an upload. An upload may contain multiple files.\n *\n * An upload is identified by a numeric uploadId which is unique within an UploadSet. An UploadSet\n * is collection of uploads tied to a browser session (as maintained by app/server/lib/Client).\n * When the session ends, all uploads are cleaned up.\n *\n * The uploadId is useful to identify the upload to the server, which can then consume the actual\n * files there. It may also be used to clean up the upload once it is no longer needed.\n *\n * Files within an upload can be identified by their index in UploadResult.files array. The\n * origName available for files is not guaranteed to be unique.\n *\n * Implementation detail: The upload is usually a temporary directory on the server, but may be a\n * collection of non-temporary files when files are selected using Electron's native file picker.\n */\n\n/**\n * Represents a single upload, containing one or more files. Empty uploads are never created.\n */\nexport interface UploadResult {\n  uploadId: number;\n  files: FileUploadResult[];\n}\n\n/**\n * Represents a single file within an upload. This is the only information made available to the\n * browser. (In particular, while the server knows also the actual path of the file on the server,\n * the browser has no need for it and should not know it.)\n */\nexport interface FileUploadResult {\n  origName: string;     // The filename that the user reports for the file (not guaranteed unique).\n  size: number;         // The size of the file in bytes.\n  ext: string;          // The extension of the file, starting with \".\"\n}\n\n/**\n * Path where the server accepts POST requests with uploads.  Don't include a leading / so that\n * the page's <base> will be respected.\n */\nexport const UPLOAD_URL_PATH = 'uploads';\n\n/**\n * Additional options for fetching external resources.\n */\nexport interface FetchUrlOptions {\n  googleAuthorizationCode?: string;   // The authorization code received from Google Auth Service.\n  fileName?: string;                  // The filename for external resource.\n  headers?: {[key: string]: string};  // Additional headers to use when accessing external resource.\n}\n","import DataTableModel from 'app/client/models/DataTableModel';\nimport {ColumnGetter, ColumnGetters, ColumnGettersByColId} from 'app/common/ColumnGetters';\nimport * as gristTypes from 'app/common/gristTypes';\nimport {choiceGetter} from 'app/common/SortFunc';\nimport {Sort} from 'app/common/SortSpec';\nimport {TableData} from 'app/common/TableData';\n\n/**\n *\n * An implementation of ColumnGetters for the client, drawing\n * on the observables and models available in that context.\n *\n */\nexport class ClientColumnGetters implements ColumnGetters {\n\n  // If the \"unversioned\" option is set, then cells with multiple\n  // versions will be read as a single version - the first version\n  // available of parent, local, or remote.  This can make sense for\n  // sorting, so cells appear in a reasonably sensible place.\n  constructor(private _tableModel: DataTableModel, private _options: {\n    unversioned?: boolean} = {}) {\n  }\n\n  public getColGetter(colSpec: Sort.ColSpec): ColumnGetter | null {\n    const rowModel = this._tableModel.docModel.columns.getRowModel(Sort.getColRef(colSpec));\n    const colId = rowModel.colId();\n    let getter: ColumnGetter|undefined = this._tableModel.tableData.getRowPropFunc(colId);\n    if (!getter) { return null; }\n    if (this._options.unversioned && this._tableModel.tableData.mayHaveVersions()) {\n      const valueGetter = getter;\n      getter = (rowId) => {\n        const value = valueGetter(rowId);\n        if (value && gristTypes.isVersions(value)) {\n          const versions = value[1];\n          return ('parent' in versions) ? versions.parent :\n            ('local' in versions) ? versions.local : versions.remote;\n        }\n        return value;\n      };\n    }\n    const details = Sort.specToDetails(colSpec);\n    if (details.orderByChoice) {\n      if (rowModel.pureType() === 'Choice') {\n        const choices: string[] = rowModel.widgetOptionsJson.peek()?.choices || [];\n        getter = choiceGetter(getter, choices);\n      }\n    }\n    return getter;\n  }\n\n  public getManualSortGetter(): ((rowId: number) => any) | null {\n    const manualSortCol = this._tableModel.tableMetaRow.columns().peek().find(\n      (c: any) => c.colId() === gristTypes.MANUALSORT);\n    if (!manualSortCol) {\n      return null;\n    }\n    return this.getColGetter(manualSortCol.getRowId());\n  }\n}\n\n\nexport class ClientColumnGettersByColId implements ColumnGettersByColId {\n  constructor(private _tableData: TableData) {\n  }\n\n  public getColGetterByColId(colId: string): ColumnGetter {\n    return this._tableData.getRowPropFunc(colId);\n  }\n}\n","import {ColumnFilterFunc, makeFilterFunc} from \"app/common/ColumnFilterFunc\";\nimport {CellValue} from 'app/common/DocActions';\nimport {\n  FilterSpec, FilterState, IRelativeDateSpec, isRangeFilter, isRelativeBound, makeFilterState\n} from \"app/common/FilterState\";\nimport {relativeDateToUnixTimestamp} from \"app/common/RelativeDates\";\nimport {nativeCompare} from 'app/common/gutil';\nimport {Computed, Disposable, Observable} from 'grainjs';\n\n/**\n * ColumnFilter implements a custom filter on a column, i.e. a filter that's diverged from what's\n * on the server. It has methods to modify the filter state, and exposes a public filterFunc\n * observable which gets triggered whenever the filter state changes.\n *\n * It does NOT listen to changes in the initial JSON, since it's only used when the filter has\n * been customized.\n */\nexport class ColumnFilter extends Disposable {\n\n  public min = Observable.create<number|undefined|IRelativeDateSpec>(this, undefined);\n  public max = Observable.create<number|undefined|IRelativeDateSpec>(this, undefined);\n\n  public readonly filterFunc = Observable.create<ColumnFilterFunc>(this, () => true);\n\n  // Computed that returns true if filter is an inclusion filter, false otherwise.\n  public readonly isInclusionFilter: Computed<boolean> = Computed.create(this, this.filterFunc, () => this._include);\n\n  // Computed that returns the current filter state.\n  public readonly state: Computed<FilterState> = Computed.create(this, this.filterFunc, () => this._getState());\n\n  public readonly isRange: Computed<boolean> = Computed.create(this, this.filterFunc, () => this._isRange());\n\n  private _include: boolean;\n  private _values: Set<CellValue>;\n\n  constructor(private _initialFilterJson: string, private _columnType: string = '',\n              public visibleColumnType: string = '', private _allValues: CellValue[] = []) {\n    super();\n    this.setState(_initialFilterJson);\n    this.autoDispose(this.min.addListener(() => this._updateState()));\n    this.autoDispose(this.max.addListener(() => this._updateState()));\n  }\n\n  public get columnType() {\n    return this._columnType;\n  }\n\n  public get initialFilterJson() {\n    return this._initialFilterJson;\n  }\n\n  public setState(filterJson: string|FilterSpec) {\n    const state = makeFilterState(filterJson);\n    if (isRangeFilter(state)) {\n      this.min.set(state.min);\n      this.max.set(state.max);\n      // Setting _include to false allows to make sure that the filter reverts to all values\n      // included when users delete one bound (min or max) while the other bound is already\n      // undefined (filter reverts to switching by value when both min and max are undefined).\n      this._include = false;\n      this._values = new Set();\n    } else {\n      this.min.set(undefined);\n      this.max.set(undefined);\n      this._include = state.include;\n      this._values = state.values;\n    }\n    this._updateState();\n  }\n\n  public includes(val: CellValue): boolean {\n    return this.filterFunc.get()(val);\n  }\n\n  public add(val: CellValue) {\n    this.addMany([val]);\n  }\n\n  public addMany(values: CellValue[]) {\n    this._toValues();\n    for (const val of values) {\n      this._include ? this._values.add(val) : this._values.delete(val);\n    }\n    this._updateState();\n  }\n\n  public delete(val: CellValue) {\n    this.deleteMany([val]);\n  }\n\n  public deleteMany(values: CellValue[]) {\n    this._toValues();\n    for (const val of values) {\n      this._include ? this._values.delete(val) : this._values.add(val);\n    }\n    this._updateState();\n  }\n\n  public clear() {\n    this._values.clear();\n    this._include = true;\n    this._updateState();\n  }\n\n  public selectAll() {\n    this._values.clear();\n    this._include = false;\n    this._updateState();\n  }\n\n  // For saving the filter value back.\n  public makeFilterJson(): string {\n    let filter: any;\n    if (this.min.get() !== undefined || this.max.get() !== undefined) {\n      filter = {min: this.min.get(), max: this.max.get()};\n    } else {\n      const values = Array.from(this._values).sort(nativeCompare);\n      filter = {[this._include ? 'included' : 'excluded']: values};\n    }\n    return JSON.stringify(filter);\n  }\n\n  public hasChanged(): boolean {\n    return this.makeFilterJson() !== this._initialFilterJson;\n  }\n\n  // Retuns min or max as a numeric value.\n  public getBoundsValue(minMax: 'min' | 'max'): number {\n    const value = this[minMax].get();\n    if (value === undefined) { return minMax === 'min' ? -Infinity : +Infinity; }\n    return isRelativeBound(value) ? relativeDateToUnixTimestamp(value) : value;\n  }\n\n\n  private _updateState(): void {\n    this.filterFunc.set(makeFilterFunc(this._getState(), this._columnType));\n  }\n\n  private _getState(): FilterState {\n    return {include: this._include, values: this._values, min: this.min.get(), max: this.max.get()};\n  }\n\n  private _isRange() {\n    return isRangeFilter(this._getState());\n  }\n\n  private _toValues() {\n    if (this._isRange()) {\n      const func = this.filterFunc.get();\n      const state = this._include ?\n        { included: this._allValues.filter((val) => func(val)) } :\n        { excluded: this._allValues.filter((val) => !func(val)) };\n      this.setState(state);\n    }\n  }\n}\n\n/**\n * A JSON-encoded filter spec that includes every value.\n */\nexport const ALL_INCLUSIVE_FILTER_JSON = '{\"excluded\":[]}';\n\n/**\n * A blank JSON-encoded filter spec.\n *\n * This is interpreted the same as `ALL_INCLUSIVE_FILTER_JSON` in the context\n * of parsing filters. However, it's still useful in scenarios where it's\n * necessary to discern between new filters and existing filters; initializing\n * a `ColumnFilter` with `NEW_FIlTER_JSON` makes it clear that a new filter\n * is being created.\n */\nexport const NEW_FILTER_JSON = '{}';\n","import * as UserType from 'app/client/widgets/UserType';\nimport {ColumnToMap} from 'app/plugin/CustomSectionAPI';\n\n/**\n * Helper that wraps custom widget's column definition and expands all the defaults.\n */\nexport class ColumnToMapImpl implements Required<ColumnToMap> {\n  // Name of the column Custom Widget expects.\n  public name: string;\n  // Label to show instead of the name.\n  public title: string;\n  // Human description of the column.\n  public description: string;\n  // If column is optional (used only on the UI).\n  public optional: boolean;\n  // Type of the column that widget expects.\n  public type: string;\n  // Description of the type (used to show a placeholder).\n  public typeDesc: string;\n  // Allow multiple column assignment (like Series in Charts).\n  public allowMultiple: boolean;\n  constructor(def: string|ColumnToMap) {\n    this.name = typeof def === 'string' ? def : def.name;\n    this.title = typeof def === 'string' ? def : (def.title ?? def.name);\n    this.description = typeof def === 'string' ? '' : (def.description ?? '');\n    this.optional = typeof def === 'string' ? false : (def.optional ?? false);\n    this.type = typeof def === 'string' ? 'Any' : (def.type ?? 'Any');\n    this.typeDesc = String(UserType.typeDefs[this.type]?.label ?? \"any\").toLowerCase();\n    this.allowMultiple = typeof def === 'string' ? false : (def.allowMultiple ?? false);\n  }\n\n  /**\n   * Does the column type matches this definition.\n   */\n  public canByMapped(pureType: string) {\n    return pureType === this.type\n      || pureType === \"Any\"\n      || this.type === \"Any\";\n  }\n}\n","import { KoArray } from 'app/client/lib/koArray';\nimport * as koUtil from 'app/client/lib/koUtil';\nimport BaseRowModel from 'app/client/models/BaseRowModel';\nimport DataTableModel from 'app/client/models/DataTableModel';\nimport { IRowModel } from 'app/client/models/DocModel';\nimport { ValidationRec } from 'app/client/models/entities/ValidationRec';\nimport * as modelUtil from 'app/client/models/modelUtil';\nimport { CellValue, ColValues } from 'app/common/DocActions';\nimport * as ko from 'knockout';\n\n/**\n * DataRowModel is a RowModel for a Data Table. It creates observables for each field in colNames.\n * A DataRowModel is initialized \"unassigned\", and can be assigned to any rowId using `.assign()`.\n */\nexport class DataRowModel extends BaseRowModel {\n  // Instances of this class are indexable, but that is a little awkward to type.\n  // The cells field gives typed access to that aspect of the instance.  This is a\n  // bit hacky, and should be cleaned up when BaseRowModel is ported to typescript.\n  public readonly cells: {[key: string]: modelUtil.KoSaveableObservable<CellValue>} = this as any;\n\n  public _validationFailures: ko.PureComputed<Array<IRowModel<'_grist_Validations'>>>;\n  public _isAddRow: ko.Observable<boolean>;\n\n  public _isRealChange: ko.Observable<boolean>;\n\n  public constructor(dataTableModel: DataTableModel, colNames: string[]) {\n    super(dataTableModel, colNames);\n\n    const allValidationsList: ko.Computed<KoArray<ValidationRec>> = dataTableModel.tableMetaRow.validations;\n\n    this._isAddRow = ko.observable(false);\n\n    // Observable that's set whenever a change to a row model is likely to be real, and unset when a\n    // row model is being reassigned to a different row. If a widget uses CSS transitions for\n    // changes, those should only be enabled when _isRealChange is true.\n    this._isRealChange = ko.observable(true);\n\n    this._validationFailures = this.autoDispose(ko.pureComputed(() => {\n      return allValidationsList().all().filter(\n        validation => !this.cells[this.getValidationNameFromId(validation.id())]());\n    }));\n  }\n\n  /**\n   * Helper method to get the column id of a validation associated with a given id\n   * No code other than this should need to know what\n   * naming scheme is used\n   */\n  public getValidationNameFromId(id: number) {\n    return \"validation___\" + id;\n  }\n\n  /**\n   * Overrides BaseRowModel.updateColValues(), which is used to save fields, to support the special\n   * \"add-row\" records, and to ensure values are up-to-date when the action completes.\n   */\n  public async updateColValues(colValues: ColValues) {\n    const action = this._isAddRow.peek() ?\n      [\"AddRecord\", null, colValues] : [\"UpdateRecord\", this._rowId, colValues];\n\n    try {\n      return await this._table.sendTableAction(action);\n    } finally {\n      // If the action doesn't actually result in an update to a row, it's important to reset the\n      // observable to the data (if the data did get updated, this will be a no-op). This is also\n      // important for AddRecord: if after the update, this row is again the 'new' row, it needs to\n      // be cleared out.\n      // TODO: in the case when data reverts because an update didn't happen (e.g. typing in\n      // \"12.000\" into a numeric column that has \"12\" in it), there should be a visual indication.\n      Object.keys(colValues).forEach(colId => this._assignColumn(colId));\n    }\n  }\n\n\n  /**\n   * Assign the DataRowModel to a different row of the table. This is primarily used with koDomScrolly,\n   * when scrolling is accomplished by reusing a few rows of DOM and their underying RowModels.\n   */\n  public assign(rowId: number|'new'|null) {\n    this._rowId = rowId;\n    this._isAddRow(rowId === 'new');\n\n    // When we reassign a row, unset _isRealChange momentarily (to disable CSS transitions).\n    // NOTE: it would be better to only set this flag when there is a data change (rather than unset\n    // it whenever we scroll), but Chrome will only run a transition if it's enabled before the\n    // actual DOM change, so setting this flag in the same tick as a change is not sufficient.\n    this._isRealChange(false);\n    // Include a check to avoid using the observable after the row model has been disposed.\n    setTimeout(() => this.isDisposed() || this._isRealChange(true), 0);\n\n    if (this._rowId !== null) {\n      this._fields.forEach(colName => this._assignColumn(colName));\n    }\n  }\n\n  /**\n   * Helper method to assign a particular column of this row to the associated tabledata.\n   */\n  private _assignColumn(colName: string) {\n    if (!this.isDisposed() && this.hasOwnProperty(colName)) {\n      const value =\n        (this._rowId === 'new' || !this._rowId) ? '' : this._table.tableData.getValue(this._rowId, colName);\n      koUtil.withKoUtils(this.cells[colName]).assign(value);\n    }\n  }\n}\n","import BaseRowModel from \"app/client/models/BaseRowModel\";\nimport DataTableModel from 'app/client/models/DataTableModel';\nimport { DocModel } from 'app/client/models/DocModel';\nimport { TableRec } from 'app/client/models/entities/TableRec';\nimport { TableQuerySets } from 'app/client/models/QuerySet';\nimport { RowGrouping, SortedRowSet } from 'app/client/models/rowset';\nimport { TableData } from 'app/client/models/TableData';\nimport { createEmptyTableDelta, getTableIdAfter, getTableIdBefore, TableDelta } from 'app/common/ActionSummary';\nimport { DisposableWithEvents } from 'app/common/DisposableWithEvents';\nimport { CellVersions, UserAction } from 'app/common/DocActions';\nimport { GristObjCode } from 'app/plugin/GristData';\nimport { CellDelta } from 'app/common/TabularDiff';\nimport { DocStateComparisonDetails } from 'app/common/UserAPI';\nimport { CellValue } from 'app/plugin/GristData';\n\n// A special row id, representing omitted rows.\nconst ROW_ID_SKIP = -1;\n\n/**\n * Represent extra rows in a table that correspond to rows added in a remote (right) document,\n * or removed in the local (left) document relative to a common ancestor.\n *\n * We assign synthetic row ids for these rows somewhat arbitrarily as follows:\n *  - For rows added remotely, we map their id to - id * 2 - 1\n *  - For rows removed locally, we map their id to - id * 2 - 2\n *  - (id of -1 is left free for use in skipped rows)\n * This should be the only part of the code that knows that.\n */\nexport class ExtraRows {\n  /**\n   * Map back from a possibly synthetic row id to an original strictly-positive row id.\n   */\n  public static interpretRowId(rowId: number): { type: 'remote-add'|'local-remove'|'shared'|'skipped', id: number } {\n    if (rowId >= 0) { return { type: 'shared', id: rowId }; }\n    else if (rowId === ROW_ID_SKIP) { return { type: 'skipped', id: rowId }; }\n    else if (rowId % 2 !== 0) { return { type: 'remote-add', id: -(rowId + 1) / 2 }; }\n    return { type: 'local-remove', id: -(rowId + 2) / 2 };\n  }\n\n  public readonly leftTableDelta?: TableDelta;\n  public readonly rightTableDelta?: TableDelta;\n  public readonly rightAddRows: Set<number>;\n  public readonly rightRemoveRows: Set<number>;\n  public readonly leftAddRows: Set<number>;\n  public readonly leftRemoveRows: Set<number>;\n\n  public constructor(public readonly tableId: string, public readonly comparison?: DocStateComparisonDetails) {\n    const remoteTableId = getRemoteTableId(tableId, comparison);\n    this.leftTableDelta = this.comparison?.leftChanges?.tableDeltas[tableId];\n    if (remoteTableId) {\n      this.rightTableDelta = this.comparison?.rightChanges?.tableDeltas[remoteTableId];\n    }\n    this.rightAddRows = new Set(this.rightTableDelta?.addRows.map(id => -id * 2 - 1));\n    this.rightRemoveRows = new Set(this.rightTableDelta?.removeRows);\n    this.leftAddRows = new Set(this.leftTableDelta?.addRows);\n    this.leftRemoveRows = new Set(this.leftTableDelta?.removeRows.map(id => -id * 2 - 2));\n  }\n\n  /**\n   * Get a list of extra synthetic row ids to add.\n   */\n  public getExtraRows(): ReadonlyArray<number> {\n    return [...this.rightAddRows].concat([...this.leftRemoveRows]);\n  }\n\n  /**\n   * Classify the row as either remote-add, remote-remove, local-add, or local-remove.\n   */\n  public getRowType(rowId: number) {\n    if (this.rightAddRows.has(rowId))         { return 'remote-add'; }\n    else if (this.leftAddRows.has(rowId))     { return 'local-add';  }\n    else if (this.rightRemoveRows.has(rowId)) { return 'remote-remove'; }\n    else if (this.leftRemoveRows.has(rowId))  { return 'local-remove'; }\n    // TODO: consider what should happen when a row is removed both locally and remotely.\n    return '';\n  }\n}\n\n/**\n *\n * A variant of DataTableModel that is aware of a comparison with another version of the table.\n * The constructor takes a DataTableModel and DocStateComparisonDetails.  We act as a proxy\n * for that DataTableModel, with the following changes to tableData:\n *\n *   - a cell changed remotely from A to B is given the value ['X', {parent: A, remote: B}].\n *   - a cell changed locally from A to B1 and remotely from A to B2 is given the value\n *     ['X', {parent: A, local: B1, remote: B2}].\n *   - negative rowIds are served from the remote table.\n *\n */\nexport class DataTableModelWithDiff extends DisposableWithEvents implements DataTableModel {\n\n  public docModel: DocModel;\n  public isLoaded: ko.Observable<boolean>;\n  public tableData: TableData;\n  public tableMetaRow: TableRec;\n  public tableQuerySets: TableQuerySets;\n\n  // For viewing purposes (LazyRowsModel), cells should have comparison info, so we will\n  // forward to a comparison-aware wrapper. Otherwise, the model is left substantially\n  // unchanged for now.\n  private _wrappedModel: DataTableModel;\n\n  public constructor(public core: DataTableModel, comparison: DocStateComparisonDetails) {\n    super();\n    this.tableMetaRow = core.tableMetaRow;\n    this.tableQuerySets = core.tableQuerySets;\n    this.docModel = core.docModel;\n    const tableId = core.tableData.tableId;\n    const remoteTableId = getRemoteTableId(tableId, comparison) || '';\n    this.tableData = new TableDataWithDiff(\n      core.tableData,\n      comparison.leftChanges.tableDeltas[tableId] || createEmptyTableDelta(),\n      comparison.rightChanges.tableDeltas[remoteTableId] || createEmptyTableDelta()) as any;\n    this.isLoaded = core.isLoaded;\n    this._wrappedModel = new DataTableModel(this.docModel, this.tableData, this.tableMetaRow);\n  }\n\n  public createLazyRowsModel(sortedRowSet: SortedRowSet, optRowModelClass: any) {\n    return this._wrappedModel.createLazyRowsModel(sortedRowSet, optRowModelClass);\n  }\n\n  public createFloatingRowModel(optRowModelClass?: any): BaseRowModel {\n    return this._wrappedModel.createFloatingRowModel(optRowModelClass);\n  }\n\n  public fetch(force?: boolean): Promise<void> {\n    return this.core.fetch(force);\n  }\n\n  public getAllRows(): ReadonlyArray<number> {\n    // Could add remote rows, but this method isn't used so it doesn't matter.\n    return this.core.getAllRows();\n  }\n\n  public getNumRows(): number {\n    return this.core.getNumRows();\n  }\n\n  public getRowGrouping(groupByCol: string): RowGrouping<CellValue> {\n    return this.core.getRowGrouping(groupByCol);\n  }\n\n  public sendTableActions(actions: UserAction[], optDesc?: string): Promise<any[]> {\n    return this.core.sendTableActions(actions, optDesc);\n  }\n\n  public sendTableAction(action: UserAction, optDesc?: string): Promise<any> | undefined {\n    return this.core.sendTableAction(action, optDesc);\n  }\n}\n\n/**\n * A variant of TableData that is aware of a comparison with another version of the table.\n * TODO: flesh out, just included essential members so far.\n */\nexport class TableDataWithDiff {\n  public dataLoadedEmitter: any;\n  public tableActionEmitter: any;\n\n  private _leftRemovals: Set<number>;\n  private _rightRemovals: Set<number>;\n  private _updates: Set<number>;\n\n  constructor(public core: TableData, public leftTableDelta: TableDelta, public rightTableDelta: TableDelta) {\n    this.dataLoadedEmitter = core.dataLoadedEmitter;\n    this.tableActionEmitter = core.tableActionEmitter;\n    // Construct the set of all rows updated in either left/local or right/remote.\n    // Omit any rows that were deleted in the other version, for simplicity.\n    this._leftRemovals = new Set(leftTableDelta.removeRows);\n    this._rightRemovals = new Set(rightTableDelta.removeRows);\n    this._updates = new Set([\n      ...leftTableDelta.updateRows.filter(r => !this._rightRemovals.has(r)),\n      ...rightTableDelta.updateRows.filter(r => !this._leftRemovals.has(r))\n    ]);\n  }\n\n  public getColIds(): string[] {\n    return this.core.getColIds();\n  }\n\n  public sendTableActions(actions: UserAction[], optDesc?: string): Promise<any[]> {\n    return this.core.sendTableActions(actions, optDesc);\n  }\n\n  public sendTableAction(action: UserAction, optDesc?: string): Promise<any> | undefined {\n    return this.core.sendTableAction(action, optDesc);\n  }\n\n  /**\n   * Make a variant of getter for a column that calls getValue for rows added remotely,\n   * or rows with updates.\n   */\n  public getRowPropFunc(colId: string) {\n    const fn = this.core.getRowPropFunc(colId);\n    if (!fn) { return fn; }\n    return (rowId: number|\"new\") => {\n      if (rowId !== 'new' && (rowId < 0 || this._updates.has(rowId))) {\n        return this.getValue(rowId, colId);\n      }\n      return fn(rowId);\n    };\n  }\n\n  public getKeepFunc(): undefined | ((rowId: number|\"new\") => boolean) {\n    return (rowId: number|'new') => {\n      return rowId === 'new' || this._updates.has(rowId) || rowId < 0 ||\n        this._leftRemovals.has(rowId) || this._rightRemovals.has(rowId);\n    };\n  }\n\n  public getSkipRowId(): number {\n    return ROW_ID_SKIP;\n  }\n\n  public mayHaveVersions() {\n    return true;\n  }\n\n  /**\n   * Intercept requests for updated cells or cells from remote rows.\n   */\n  public getValue(rowId: number, colId: string): CellValue|undefined {\n    if (rowId === ROW_ID_SKIP && colId !== 'id') {\n      return [GristObjCode.Skip];\n    }\n    if (this._updates.has(rowId)) {\n      const left = this.leftTableDelta.columnDeltas[colId]?.[rowId];\n      const right = this.rightTableDelta.columnDeltas[colId]?.[rowId];\n      if (left !== undefined && right !== undefined) {\n        return [GristObjCode.Versions, {\n          parent: oldValue(left),\n          local: newValue(left),\n          remote: newValue(right)\n        } as CellVersions];\n      } else if (right !== undefined) {\n        return [GristObjCode.Versions, {\n          parent: oldValue(right),\n          remote: newValue(right)\n        } as CellVersions];\n      } else if (left !== undefined) {\n        return [GristObjCode.Versions, {\n          parent: oldValue(left),\n          local: newValue(left)\n        } as CellVersions];\n      }\n    } else {\n      // keep row.id consistent with rowId for convenience.\n      if (colId === 'id') { return rowId; }\n      const {type, id} = ExtraRows.interpretRowId(rowId);\n      if (type === 'remote-add') {\n        const cell = this.rightTableDelta.columnDeltas[colId]?.[id];\n        const value = (cell !== undefined) ? newValue(cell) : undefined;\n        return value;\n      } else if (type === 'local-remove') {\n        const cell = this.leftTableDelta.columnDeltas[colId]?.[id];\n        const value = (cell !== undefined) ? oldValue(cell) : undefined;\n        return value;\n      }\n    }\n    return this.core.getValue(rowId, colId);\n  }\n  public get tableId() { return this.core.tableId; }\n\n  public numRecords() {\n    return this.core.numRecords();\n  }\n}\n\n/**\n * Get original value from a cell change, if available.\n */\nfunction oldValue(delta: CellDelta) {\n  if (delta[0] === '?') { return null; }\n  return delta[0]?.[0];\n}\n\n/**\n * Get new value from a cell change, if available.\n */\nfunction newValue(delta: CellDelta) {\n  if (delta[1] === '?') { return null; }\n  return delta[1]?.[0];\n}\n\n/**\n * Figure out the id of the specified table in the remote document.\n * Returns null if table is deleted or unknown in the remote document.\n */\nfunction getRemoteTableId(tableId: string, comparison?: DocStateComparisonDetails) {\n  if (!comparison) { return tableId; }\n  const parentTableId = getTableIdBefore(comparison.leftChanges.tableRenames, tableId);\n  return getTableIdAfter(comparison.rightChanges.tableRenames, parentTableId);\n}\n","/**\n * A QuerySet represents a data query to the server, which returns matching data and includes a\n * subscription. The subscription tells the server to send us docActions that affect this query.\n *\n * This file combines several classes related to it:\n *\n * - QuerySetManager is maintained by GristDoc, and keeps all active QuerySets for this doc.\n *   A new one is created using QuerySetManager.useQuerySet(owner, query)\n *\n *      This creates a subscription to the server, and sets up owner.autoDispose() to clean up\n *      that subscription. If a subscription already exists, it only returns a reference to it,\n *      and disposal will remove the reference, only unsubscribing from the server when no\n *      referernces remain.\n *\n * - DynamicQuerySet is used by BaseView (in place of FilteredRowSource used previously). It is a\n *   single RowSource which mirrors a QuerySet, and allows the QuerySet to be changed.\n *   You set it to a new query using DynamicQuerySet.makeQuery(...)\n *\n * - QuerySet represents the actual query, makes the calls to the server to populate the data in\n *   the relevant TableData. It is also a FilteredRowSource for the rows matching the query.\n *\n * - TableQuerySets is a simple set of queries maintained for a single table (by DataTableModel).\n *   It's needed to know which rows are still relevant after a QuerySet is disposed.\n *\n * TODO: need to have a fetch limit (e.g. 1000 by default, or an option for user)\n * TODO: client-side should show \"...\" or \"50000 more rows not shown\" in that case.\n * TODO: Reference columns don't work properly because always use a displayCol which relies on formulas\n */\nimport {ClientColumnGettersByColId} from 'app/client/models/ClientColumnGetters';\nimport DataTableModel from 'app/client/models/DataTableModel';\nimport {DocModel} from 'app/client/models/DocModel';\nimport {BaseFilteredRowSource, RowList, RowSource} from 'app/client/models/rowset';\nimport {TableData} from 'app/client/models/TableData';\nimport {ActiveDocAPI, ClientQuery, QueryOperation} from 'app/common/ActiveDocAPI';\nimport {TableDataAction} from 'app/common/DocActions';\nimport {DocData} from 'app/common/DocData';\nimport {nativeCompare} from 'app/common/gutil';\nimport {IRefCountSub, RefCountMap} from 'app/common/RefCountMap';\nimport {getLinkingFilterFunc, RowFilterFunc} from 'app/common/RowFilterFunc';\nimport {TableData as BaseTableData} from 'app/common/TableData';\nimport {tbind} from 'app/common/tbind';\nimport {UIRowId} from 'app/plugin/GristAPI';\nimport {Disposable, Holder, IDisposableOwnerT} from 'grainjs';\nimport * as ko from 'knockout';\nimport debounce = require('lodash/debounce');\n\n// Limit on the how many rows to request for OnDemand tables.\nconst ON_DEMAND_ROW_LIMIT = 10000;\n\n// Copied from app/server/lib/DocStorage.js. Actually could be 999, we are just playing it safe.\nconst MAX_SQL_PARAMS = 500;\n\n/**\n * A representation of a Query that uses tableRef/colRefs (i.e. metadata rowIds) to remain stable\n * across table/column renames.\n */\nexport interface QueryRefs {\n  tableRef: number;\n  filterTuples: Array<FilterTuple>;\n}\n\ntype ColRef = number | 'id';\ntype FilterTuple = [ColRef, QueryOperation, any[]];\n\n/**\n * QuerySetManager keeps track of all queries for a GristDoc instance. It is also responsible for\n * disposing all state associated with queries when a GristDoc is disposed.\n *\n * Note that queries are made using tableId + colIds, which is a more suitable interface for a\n * (future) public API, and easier to interact with DocData/TableData. However, it creates\n * problems when tables or columns are renamed or deleted.\n *\n * To handle renames, we keep track of queries using their QueryRef representation, using\n * tableRef/colRefs, i.e. metadata rowIds that aren't affected by renames.\n *\n * To handle deletes, we subscribe to isDeleted() observables of the needed tables and columns,\n * and purge the query from QuerySetManager if any isDeleted() flag becomes true.\n */\nexport class QuerySetManager extends Disposable {\n  private _queryMap: RefCountMap<string, QuerySet>;\n\n  constructor(private _docModel: DocModel, docComm: ActiveDocAPI) {\n    super();\n    this._queryMap = this.autoDispose(new RefCountMap<string, QuerySet>({\n      create: (query: string) => QuerySet.create(null, _docModel, docComm, query, this),\n      dispose: (query: string, querySet: QuerySet) => querySet.dispose(),\n      gracePeriodMs: 60000,   // Dispose after a minute of disuse.\n    }));\n  }\n\n  public useQuerySet(owner: IDisposableOwnerT<IRefCountSub<QuerySet>>, query: ClientQuery): QuerySet {\n    // Convert the query to a string key which identifies it.\n    const queryKey: string = encodeQuery(convertQueryToRefs(this._docModel, query));\n\n    // Look up or create the query in the RefCountMap. The returned object is a RefCountSub\n    // subscription, which decrements reference count when disposed.\n    const querySetRefCount = this._queryMap.use(queryKey);\n\n    // The passed-in owner is what will dispose this subscription (decrement reference count).\n    owner.autoDispose(querySetRefCount);\n    return querySetRefCount.get();\n  }\n\n  public purgeKey(queryKey: string) {\n    this._queryMap.purgeKey(queryKey);\n  }\n\n  // For testing: set gracePeriodMs, returning the previous value.\n  public testSetGracePeriodMs(ms: number): number {\n    return this._queryMap.testSetGracePeriodMs(ms);\n  }\n\n}\n\n/**\n * DynamicQuerySet wraps one QuerySet, and allows changing it on the fly. It serves as a\n * RowSource.\n */\nexport class DynamicQuerySet extends RowSource {\n  // Holds a reference to the currently active QuerySet.\n  private _holder = Holder.create<IRefCountSub<QuerySet>>(this);\n\n  // Shortcut to _holder.get().get().\n  private _querySet?: QuerySet;\n\n  // We could switch between several different queries quickly. If several queries are done\n  // fetching at the same time (e.g. were already ready), debounce lets us only update the\n  // query-set once to the last query.\n  private _updateQuerySetDebounced = debounce(tbind(this._updateQuerySet, this), 0);\n\n  constructor(private _querySetManager: QuerySetManager, private _tableModel: DataTableModel) {\n    super();\n  }\n\n  public getAllRows(): RowList {\n    return this._querySet ? this._querySet.getAllRows() : [];\n  }\n\n  public getNumRows(): number {\n    return this._querySet ? this._querySet.getNumRows() : 0;\n  }\n\n  /**\n   * Tells whether the query's result got truncated, i.e. not all rows are included.\n   */\n  public get isTruncated(): boolean {\n    return this._querySet ? this._querySet.isTruncated : false;\n  }\n\n  /**\n   * Replace the query represented by this DynamicQuerySet. If multiple makeQuery() calls are made\n   * quickly (while waiting for the server), cb() may only be called for the latest one.\n   *\n   * If there is an error fetching data, cb(err) will be called with that error. The second\n   * argument to cb() is true if any data was changed, and false if not. Note that for a series of\n   * makeQuery() calls, cb() is always called at least once, and always asynchronously.\n   */\n  public makeQuery(filters: {[colId: string]: any[]},\n                   operations: {[colId: string]: QueryOperation},\n                   cb: (err: Error|null, changed: boolean) => void): void {\n    const query: ClientQuery = {tableId: this._tableModel.tableData.tableId, filters, operations};\n    const newQuerySet = this._querySetManager.useQuerySet(this._holder, query);\n\n    // CB should be called asynchronously, since surprising hard-to-debug interactions can happen\n    // if it's sometimes synchronous and sometimes not.\n    newQuerySet.fetchPromise.then(() => {\n      this._updateQuerySetDebounced(newQuerySet, cb);\n    })\n    .catch((err) => { cb(err, false); });\n  }\n\n  private _updateQuerySet(nextQuerySet: QuerySet, cb: (err: Error|null, changed: boolean) => void): void {\n    try {\n      if (nextQuerySet !== this._querySet) {\n        const oldQuerySet = this._querySet;\n        this._querySet = nextQuerySet;\n\n        if (oldQuerySet) {\n          this.stopListening(oldQuerySet, 'rowChange');\n          this.stopListening(oldQuerySet, 'rowNotify');\n          this.trigger('rowChange', 'remove', oldQuerySet.getAllRows());\n        }\n        this.trigger('rowChange', 'add', this._querySet.getAllRows());\n        this.listenTo(this._querySet, 'rowNotify', tbind(this.trigger, this, 'rowNotify'));\n        this.listenTo(this._querySet, 'rowChange', tbind(this.trigger, this, 'rowChange'));\n      }\n      cb(null, true);\n    } catch (err) {\n      cb(err, true);\n    }\n  }\n}\n\n/**\n * Class representing a query, which knows how to fetch the data, an presents a RowSource with\n * matching rows. It uses new Comm calls for onDemand tables, but for regular tables, fetching\n * data uses the good old tableModel.fetch(). In in most cases the data is already available, so\n * this class is little more than a FilteredRowSource.\n */\nexport class QuerySet extends BaseFilteredRowSource {\n  // A publicly exposed promise, which may be waited on in order to know that the data has\n  // arrived. Until then, the RowSource underlying this QuerySet is empty.\n  public readonly fetchPromise: Promise<void>;\n\n  // Whether the fetched result is considered incomplete, i.e. not all rows were fetched.\n  public isTruncated: boolean;\n\n  constructor(docModel: DocModel, docComm: ActiveDocAPI, queryKey: string, qsm: QuerySetManager) {\n    const queryRefs: QueryRefs = decodeQuery(queryKey);\n    const query: ClientQuery = convertQueryFromRefs(docModel, queryRefs);\n\n    super(getFilterFunc(docModel.docData, query));\n    this.isTruncated = false;\n\n    // When table or any needed columns are deleted, purge this QuerySet from the map.\n    const isInvalid = this.autoDispose(makeQueryInvalidComputed(docModel, queryRefs));\n    this.autoDispose(isInvalid.subscribe((invalid) => {\n      if (invalid) { qsm.purgeKey(queryKey); }\n    }));\n\n    // Find the relevant DataTableModel.\n    const tableModel = docModel.dataTables[query.tableId];\n\n    // The number of values across all filters is limited to MAX_SQL_PARAMS. Normally a query has\n    // a single filter column, but in case there are multiple we divide the limit across all\n    // columns. It's OK to modify the query in place, since this modified version is not used\n    // elsewhere.\n\n    // (It might be better to limit this in DocStorage.js, but by limiting here, it's easier to\n    // know when to set isTruncated flag, to inform the user that data is incomplete.)\n    const colIds = Object.keys(query.filters);\n    if (colIds.length > 0) {\n      const maxParams = Math.floor(MAX_SQL_PARAMS / colIds.length);\n      for (const c of colIds) {\n        const values = query.filters[c];\n        if (values.length > maxParams) {\n          query.filters[c] = values.slice(0, maxParams);\n          this.isTruncated = true;\n        }\n      }\n    }\n\n    let fetchPromise: Promise<void>;\n    if (tableModel.tableMetaRow.onDemand()) {\n      const tableQS = tableModel.tableQuerySets;\n      fetchPromise = docComm.useQuerySet({limit: ON_DEMAND_ROW_LIMIT, ...query}).then((data) => {\n        // We assume that if we fetched the max number of rows, that there are likely more and the\n        // result should be reported as truncated.\n        // TODO: Better to fetch ON_DEMAND_ROW_LIMIT + 1 and omit one of them, so that isTruncated\n        // is only set if the row limit really was exceeded.\n        const rowIds = data.tableData[2];\n        if (rowIds.length >= ON_DEMAND_ROW_LIMIT) {\n          this.isTruncated = true;\n        }\n\n        this.onDispose(() => {\n          docComm.disposeQuerySet(data.querySubId).catch((err) => {\n            // tslint:disable-next-line:no-console\n            console.log(`Promise rejected for disposeQuerySet: ${err.message}`);\n          });\n          tableQS.removeQuerySet(this);\n        });\n        tableQS.addQuerySet(this, data.tableData);\n      });\n    } else {\n      // For regular (small), we fetch in bulk (and do nothing if already fetched).\n      fetchPromise = tableModel.fetch(false);\n    }\n\n    // This is a FilteredRowSource; subscribe it to the underlying data once the fetch resolves.\n    this.fetchPromise = fetchPromise.then(() => this.subscribeTo(tableModel));\n  }\n}\n\n/**\n * Helper for use in a DataTableModel to maintain all QuerySets.\n */\nexport class TableQuerySets {\n  private _querySets: Set<QuerySet> = new Set();\n\n  constructor(private _tableData: TableData) {}\n\n  public addQuerySet(querySet: QuerySet, data: TableDataAction): void {\n    this._querySets.add(querySet);\n    this._tableData.loadPartial(data);\n  }\n\n  // Returns a Set of unused RowIds from querySet.\n  public removeQuerySet(querySet: QuerySet): void {\n    this._querySets.delete(querySet);\n\n    // Figure out which rows are not used by any other QuerySet in this DataTableModel.\n    const unusedRowIds = new Set(querySet.getAllRows());\n    for (const qs of this._querySets) {\n      for (const rowId of qs.getAllRows()) {\n        unusedRowIds.delete(rowId);\n      }\n    }\n    this._tableData.unloadPartial(Array.from(unusedRowIds) as number[]);\n  }\n}\n\n/**\n * Returns a filtering function which tells whether a row matches the given query.\n */\nexport function getFilterFunc(docData: DocData, query: ClientQuery): RowFilterFunc<UIRowId> {\n  // NOTE we rely without checking on tableId and colIds being valid.\n  const tableData: BaseTableData = docData.getTable(query.tableId)!;\n  const colGetters = new ClientColumnGettersByColId(tableData);\n  const rowFilterFunc = getLinkingFilterFunc(colGetters, query);\n  return (rowId: UIRowId) => rowId !== \"new\" && rowFilterFunc(rowId);\n}\n\n/**\n * Helper that converts a Query (with tableId/colIds) to an object with tableRef/colRefs (i.e.\n * rowIds), and consistently sorted. We use that to identify a Query across table/column renames.\n */\nfunction convertQueryToRefs(docModel: DocModel, query: ClientQuery): QueryRefs {\n  // During table rename, we can be referencing old name of a table.\n  const tableRec = Object.values(docModel.dataTables).find(t => t.tableData.tableId === query.tableId)?.tableMetaRow;\n  if (!tableRec) {\n    throw new Error(`Table ${query.tableId} not found`);\n  }\n\n  const colRefsByColId: {[colId: string]: ColRef} = {id: 'id'};\n  for (const col of tableRec.columns.peek().peek()) {\n    colRefsByColId[col.colId.peek()] = col.getRowId();\n  }\n\n  const filterTuples = Object.keys(query.filters).map((colId) => {\n    const values = query.filters[colId];\n    // Keep filter values sorted by value, for consistency.\n    values.sort(nativeCompare);\n    return [colRefsByColId[colId], query.operations[colId], values] as FilterTuple;\n  });\n  // Keep filters sorted by colRef, for consistency.\n  filterTuples.sort((a, b) =>\n    nativeCompare(a[0], b[0]) || nativeCompare(a[1], b[1]));\n  return {tableRef: tableRec.getRowId(), filterTuples};\n}\n\n/**\n * Helper to convert a QueryRefs (using tableRef/colRefs) object back to a Query (using\n * tableId/colIds).\n */\nfunction convertQueryFromRefs(docModel: DocModel, queryRefs: QueryRefs): ClientQuery {\n  const tableRec = docModel.dataTablesByRef.get(queryRefs.tableRef)!.tableMetaRow;\n  const filters: {[colId: string]: any[]} = {};\n  const operations: {[colId: string]: QueryOperation} = {};\n  for (const [colRef, operation, values] of queryRefs.filterTuples) {\n    const colId = colRef === 'id' ? 'id' : docModel.columns.getRowModel(colRef).colId.peek();\n    filters[colId] = values;\n    operations[colId] = operation;\n  }\n  return {tableId: tableRec.tableId.peek(), filters, operations};\n}\n\n/**\n * Encodes a query (converted to QueryRefs using convertQueryToRefs()) as a string, to be usable\n * as a key into a map.\n *\n * It uses JSON.stringify, but avoids objects since their order of keys in serialization is not\n * guaranteed. This is important to produce consistent results (same query => same encoding).\n */\nfunction encodeQuery(queryRefs: QueryRefs): string {\n  return JSON.stringify([queryRefs.tableRef, queryRefs.filterTuples]);\n}\n\n// Decode an encoded QueryRefs.\nfunction decodeQuery(queryKey: string): QueryRefs {\n  const [tableRef, filterTuples] = JSON.parse(queryKey);\n  return {tableRef, filterTuples};\n}\n\n/**\n * Returns a ko.computed() which turns to true when the table or any of the columns needed by the\n * given query are deleted.\n */\nfunction makeQueryInvalidComputed(docModel: DocModel, queryRefs: QueryRefs): ko.Computed<boolean> {\n  const tableFlag: ko.Observable<boolean> = docModel.tables.getRowModel(queryRefs.tableRef)._isDeleted;\n  const colFlags: Array<ko.Observable<boolean> | null> = queryRefs.filterTuples.map(\n    ([colRef, , ]) => colRef === 'id' ? null : docModel.columns.getRowModel(colRef)._isDeleted);\n  return ko.computed(() => Boolean(tableFlag() || colFlags.some((c) => c?.())));\n}\n","import {ColumnFilter} from 'app/client/models/ColumnFilter';\nimport {ColumnRec, ViewFieldRec, ViewSectionRec} from 'app/client/models/DocModel';\nimport {TableData} from 'app/client/models/TableData';\nimport {buildColFilter, ColumnFilterFunc} from 'app/common/ColumnFilterFunc';\nimport {buildRowFilter, RowFilterFunc, RowValueFunc } from 'app/common/RowFilterFunc';\nimport {UIRowId} from 'app/plugin/GristAPI';\nimport {Computed, Disposable, MutableObsArray, obsArray, Observable, UseCB} from 'grainjs';\n\nexport type {ColumnFilterFunc};\n\ninterface OpenColumnFilter {\n  colRef: number;\n  colFilter: ColumnFilter;\n}\n\ntype ColFilterCB = (fieldOrColumn: ViewFieldRec|ColumnRec, colFilter: ColumnFilterFunc|null) => ColumnFilterFunc|null;\n\n/**\n * SectionFilter represents a collection of column filters in place for a view section. It is created\n * out of `filters` (in `viewSection`) and `tableData`, and provides a Computed `sectionFilterFunc` that users can\n * subscribe to in order to update their FilteredRowSource.\n *\n * Additionally, `setFilterOverride()` provides a way to override the current filter for a given colRef,\n * to reflect the changes in an open filter dialog. Also, `addTemporaryRow()` allows to add a rowId\n * that should be present regardless of filters. These rows are removed automatically when an update to the filter\n * results in their being displayed (obviating the need to maintain their rowId explicitly).\n */\nexport class SectionFilter extends Disposable {\n  public readonly sectionFilterFunc: Observable<RowFilterFunc<UIRowId>>;\n\n  private _openFilterOverride: Observable<OpenColumnFilter|null> = Observable.create(this, null);\n  private _tempRows: MutableObsArray<UIRowId> = obsArray();\n\n  constructor(public viewSection: ViewSectionRec, private _tableData: TableData) {\n    super();\n\n    const columnFilterFunc = Computed.create(this, this._openFilterOverride, (use, openFilter) => {\n      const openFilterFilterFunc = openFilter && use(openFilter.colFilter.filterFunc);\n      function getFilterFunc(fieldOrColumn: ViewFieldRec|ColumnRec, colFilter: ColumnFilterFunc|null) {\n        if (openFilter?.colRef === fieldOrColumn.origCol().getRowId()) {\n          return openFilterFilterFunc;\n        }\n        return colFilter;\n      }\n      return this._buildPlainFilterFunc(getFilterFunc, use);\n    });\n\n    this.sectionFilterFunc = Computed.create(this, columnFilterFunc, this._tempRows,\n      (_use, filterFunc, tempRows) => this._addRowsToFilter(filterFunc, tempRows));\n\n    // Prune temporary rowIds that are no longer being filtered out.\n    this.autoDispose(columnFilterFunc.addListener(f => {\n      this._tempRows.set(this._tempRows.get().filter(rowId => !f(rowId)));\n    }));\n  }\n\n  /**\n   * Allows to override a single filter for a given colRef. Multiple calls to `setFilterOverride` will overwrite\n   * previously set values.\n   */\n  public setFilterOverride(colRef: number, colFilter: ColumnFilter) {\n    this._openFilterOverride.set(({colRef, colFilter}));\n    colFilter.onDispose(() => {\n      const override = this._openFilterOverride.get();\n      if (override && override.colFilter === colFilter) {\n        this._openFilterOverride.set(null);\n      }\n    });\n  }\n\n  public addTemporaryRow(rowId: number) {\n    // Only add the rowId if it would otherwise be filtered out\n    if (!this.sectionFilterFunc.get()(rowId)) {\n      this._tempRows.push(rowId);\n    }\n  }\n\n  public resetTemporaryRows() {\n    this._tempRows.set([]);\n  }\n\n  /**\n   * Builds a filter function that combines the filter function of all the columns. You can use\n   * `getFilterFunc(column, colFilter)` to customize the filter func for each columns. It calls\n   * `getFilterFunc` right away. Also, all the rows that were added with `addTemporaryRow()` bypass\n   * the filter.\n   */\n  public buildFilterFunc(getFilterFunc: ColFilterCB, use: UseCB) {\n    return this._addRowsToFilter(this._buildPlainFilterFunc(getFilterFunc, use), this._tempRows.get());\n  }\n\n  private _addRowsToFilter(filterFunc: RowFilterFunc<UIRowId>, rows: UIRowId[]) {\n    return (rowId: UIRowId) => rows.includes(rowId) || (typeof rowId !== 'number') || filterFunc(rowId);\n  }\n\n  /**\n   * Internal that helps build a filter function that combines the filter function of all\n   * columns. You can use `getFilterFunc(column, colFilter)` to customize the filter func for each\n   * column. It calls `getFilterFunc` right away.\n   */\n  private _buildPlainFilterFunc(getFilterFunc: ColFilterCB, use: UseCB): RowFilterFunc<UIRowId> {\n    const filters = use(this.viewSection.filters);\n    const funcs: Array<RowFilterFunc<UIRowId> | null> = filters.map(({filter, fieldOrColumn}) => {\n      const colFilter = buildColFilter(use(filter), use(use(fieldOrColumn.origCol).type));\n      const filterFunc = getFilterFunc(fieldOrColumn, colFilter);\n\n      const getter = this._tableData.getRowPropFunc(fieldOrColumn.colId.peek());\n\n      if (!filterFunc || !getter) { return null; }\n\n      return buildRowFilter(getter as RowValueFunc<UIRowId>, filterFunc);\n    }).filter(f => f !== null); // Filter out columns that don't have a filter\n\n    return (rowId: UIRowId) => funcs.every(f => Boolean(f && f(rowId)));\n  }\n}\n","export interface Style {\n  textColor?: string|undefined; // this can be string, undefined or an absent key.\n  fillColor?: string|undefined;\n  fontBold?: boolean|undefined;\n  fontUnderline?: boolean|undefined;\n  fontItalic?: boolean|undefined;\n  fontStrikethrough?: boolean|undefined;\n}\n\nexport interface HeaderStyle {\n  headerTextColor?: string | undefined; // this can be string, undefined or an absent key.\n  headerFillColor?: string | undefined;\n  headerFontBold?: boolean | undefined;\n  headerFontUnderline?: boolean | undefined;\n  headerFontItalic?: boolean | undefined;\n  headerFontStrikethrough?: boolean | undefined;\n}\n\nexport class CombinedStyle implements Style {\n  public readonly textColor?: string;\n  public readonly fillColor?: string;\n  public readonly fontBold?: boolean;\n  public readonly fontUnderline?: boolean;\n  public readonly fontItalic?: boolean;\n  public readonly fontStrikethrough?: boolean;\n  constructor(rules: (Style|undefined|null)[], flags: any[]) {\n    for (let i = 0; i < rules.length; i++) {\n      if (flags[i]) {\n        const textColor = rules[i]?.textColor;\n        const fillColor = rules[i]?.fillColor;\n        const fontBold = rules[i]?.fontBold;\n        const fontUnderline = rules[i]?.fontUnderline;\n        const fontItalic = rules[i]?.fontItalic;\n        const fontStrikethrough = rules[i]?.fontStrikethrough;\n        this.textColor = textColor || this.textColor;\n        this.fillColor = fillColor || this.fillColor;\n        this.fontBold = fontBold || this.fontBold;\n        this.fontUnderline = fontUnderline || this.fontUnderline;\n        this.fontItalic = fontItalic || this.fontItalic;\n        this.fontStrikethrough = fontStrikethrough || this.fontStrikethrough;\n      }\n    }\n  }\n}\n","/**\n * rowset.js module defines a number of classes to deal with maintaining collections of rows and\n * listening to their changes.\n *\n * RowSource: abstract interface for a source of row changes.\n *  - emits rowChange('add|remove|update', rows) events with rows an iterable.\n *  - offers getAllRows() method that returns all rows currently in the RowSource.\n *\n * RowListener: base class for a listener to row changes.\n *  - offers subscribeTo(rowSource), unsubscribeFrom(rowSource) methods.\n *  - derived classes should implement onAddRows(), onRemoveRows(), onUpdateRows().\n *\n * FilteredRowSource(filterFunc): a RowListener that can be subscribed to any other RowSources and\n *  is itself a RowSource which forwards changes to rows that match filterFunc.\n *\n * RowGrouping(groupFunc): a RowListener that can be subscribed to any RowSources, groups\n *  rows by the result of groupFunc, and exposes a per-group RowSource via its getGroup() method.\n *\n * SortedRowSet(compareFunc): a RowListener that can be subscribed to any RowSources, and exposes\n *  an observable koArray via getKoArray(), which maintains rows from RowSources in sorted order.\n */\n// tslint:disable:max-classes-per-file\n\nimport koArray, {KoArray} from 'app/client/lib/koArray';\nimport {DisposableWithEvents} from 'app/common/DisposableWithEvents';\nimport {CompareFunc, sortedIndex} from 'app/common/gutil';\nimport {SkippableRows} from 'app/common/TableData';\nimport {RowFilterFunc} from \"app/common/RowFilterFunc\";\nimport {UIRowId} from 'app/plugin/GristAPI';\nimport {Observable} from 'grainjs';\n\n/**\n * Special constant value that can be used for the `rows` array for the 'rowNotify'\n * event to indicate that the event applies to all rows.\n */\nexport const ALL: unique symbol = Symbol(\"ALL\");\n\nexport type ChangeType = 'add' | 'remove' | 'update';\nexport type ChangeMethod = 'onAddRows' | 'onRemoveRows' | 'onUpdateRows';\nexport type RowList = Iterable<UIRowId>;\nexport type RowsChanged = RowList | typeof ALL;\n\n// ----------------------------------------------------------------------\n// RowSource\n// ----------------------------------------------------------------------\n\n/**\n * RowSource is an interface expected by RowListener. It should implement `getAllRows()` method,\n * and should emit `rowChange('add|remove|update', rows)` events on changes,\n * and `rowNotify(rows, value)` event to notify listeners of a value associated with a row.\n * For the `rowNotify` event, rows may be the rowset.ALL constant.\n */\nexport abstract class RowSource extends DisposableWithEvents {\n  /**\n   * Returns an iterable over all rows in this RowSource. Should be implemented by derived classes.\n   */\n  public abstract getAllRows(): RowList;\n\n  /**\n   * Returns the number of rows in this row source.\n   */\n  public abstract getNumRows(): number;\n}\n\n// ----------------------------------------------------------------------\n// RowListener\n// ----------------------------------------------------------------------\n\nconst _changeTypes: {[key: string]: ChangeMethod} = {\n  add:    'onAddRows',\n  remove: 'onRemoveRows',\n  update: 'onUpdateRows',\n};\n\n/**\n * RowListener is the base class for collections that want to subscribe to rowset changes. It\n * offers `subscribeTo(rowSource)` method. The derived class should implement several methods\n * which will be called on row changes.\n */\nexport class RowListener extends DisposableWithEvents {\n  /**\n   * Subscribes to the given rowSource and adds the rows currently in it.\n   */\n  public subscribeTo(rowSource: RowSource): void {\n    this.onAddRows(rowSource.getAllRows());\n    this.listenTo(rowSource, 'rowChange', (changeType: ChangeType, rows: RowList) => {\n      const method: ChangeMethod = _changeTypes[changeType];\n      this[method](rows);\n    });\n    this.listenTo(rowSource, 'rowNotify', this.onRowNotify);\n  }\n\n  /**\n   * Unsubscribes from the given rowSource removing its rows. This is not needed for disposal;\n   * dispose() on its own is sufficient and faster.\n   */\n  public unsubscribeFrom(rowSource: RowSource): void {\n    this.stopListening(rowSource, 'rowChange');\n    this.stopListening(rowSource, 'rowNotify');\n    this.onRemoveRows(rowSource.getAllRows());\n  }\n\n  /**\n   * Process row additions. To be implemented by derived classes.\n   */\n  protected onAddRows(rows: RowList) { /* no-op */ }\n\n  /**\n   * Process row removals. To be implemented by derived classes.\n   */\n  protected onRemoveRows(rows: RowList) { /* no-op */ }\n\n  /**\n   * Process row updates. To be implemented by derived classes.\n   */\n  protected onUpdateRows(rows: RowList) { /* no-op */ }\n\n  /**\n   * Derived classes may override this event to handle row notifications. By default, it re-triggers\n   * rowNotify on the RowListener itself.\n   */\n  protected onRowNotify(rows: RowList, notifyValue: any) {\n    this.trigger('rowNotify', rows, notifyValue);\n  }\n}\n\n// ----------------------------------------------------------------------\n// MappedRowSource\n// ----------------------------------------------------------------------\n\n/**\n * A trivial RowSource returning a fixed list of rows.\n */\nexport abstract class ArrayRowSource extends RowSource {\n  constructor(private _rows: UIRowId[]) { super(); }\n  public getAllRows(): RowList { return this._rows; }\n  public getNumRows(): number { return this._rows.length; }\n}\n\n/**\n * MappedRowSource wraps any other RowSource, and passes through all rows, replacing each row\n * identifier with the result of mapperFunc(row) call.\n *\n * The underlying RowSource is exposed as this.parentRowSource.\n *\n * TODO: This class is not used anywhere at the moment, and is a candidate for removal.\n */\nexport class MappedRowSource extends RowSource {\n  private _mapperFunc: (row: UIRowId) => UIRowId;\n\n  constructor(\n    public parentRowSource: RowSource,\n    mapperFunc: (row: UIRowId) => UIRowId,\n  ) {\n    super();\n\n    // Wrap mapperFunc to ensure arguments after the first one aren't passed on to it.\n    this._mapperFunc = (row => mapperFunc(row));\n\n    // Listen to the two event types a rowSource might produce, and map the rows in them.\n    this.listenTo(parentRowSource, 'rowChange', (changeType: ChangeType, rows: RowList) => {\n      this.trigger('rowChange', changeType, Array.from(rows, this._mapperFunc));\n    });\n    this.listenTo(parentRowSource, 'rowNotify', (rows: RowsChanged, notifyValue: any) => {\n      this.trigger('rowNotify', rows === ALL ? ALL : Array.from(rows, this._mapperFunc), notifyValue);\n    });\n  }\n\n  public getAllRows(): RowList {\n    return Array.from(this.parentRowSource.getAllRows(), this._mapperFunc);\n  }\n\n  public getNumRows(): number {\n    return this.parentRowSource.getNumRows();\n  }\n}\n\n/**\n * A RowSource with some extra rows added.\n */\nexport class ExtendedRowSource extends RowSource {\n\n  constructor(\n    public parentRowSource: RowSource,\n    public extras: UIRowId[]\n  ) {\n    super();\n\n   // Listen to the two event types a rowSource might produce, and map the rows in them.\n    this.listenTo(parentRowSource, 'rowChange', (changeType: ChangeType, rows: RowList) => {\n      this.trigger('rowChange', changeType, rows);\n    });\n    this.listenTo(parentRowSource, 'rowNotify', (rows: RowsChanged, notifyValue: any) => {\n      this.trigger('rowNotify', rows === ALL ? ALL : rows, notifyValue);\n    });\n  }\n\n  public getAllRows(): RowList {\n    return [...this.parentRowSource.getAllRows()].concat(this.extras);\n  }\n\n  public getNumRows(): number {\n    return this.parentRowSource.getNumRows() + this.extras.length;\n  }\n}\n\n// ----------------------------------------------------------------------\n// FilteredRowSource\n// ----------------------------------------------------------------------\n\ninterface FilterRowChanges {\n  adds?: UIRowId[];\n  updates?: UIRowId[];\n  removes?: UIRowId[];\n}\n\n/**\n * See FilteredRowSource, for which this is the base. BaseFilteredRowSource is simpler, in that it\n * does not maintain excluded rows, and does not allow changes to filterFunc.\n */\nexport class BaseFilteredRowSource extends RowListener implements RowSource {\n  protected _matchingRows: Set<UIRowId> = new Set();   // Set of rows matching the filter.\n\n  constructor(protected _filterFunc: RowFilterFunc<UIRowId>) {\n    super();\n  }\n\n  public getAllRows(): RowList {\n    return this._matchingRows.values();\n  }\n\n  public getNumRows(): number {\n    return this._matchingRows.size;\n  }\n\n  public onAddRows(rows: RowList) {\n    const outputRows = [];\n    for (const r of rows) {\n      if (this._filterFunc(r)) {\n        this._matchingRows.add(r);\n        outputRows.push(r);\n      } else {\n        this._addExcludedRow(r);\n      }\n    }\n    if (outputRows.length > 0) {\n      this.trigger('rowChange', 'add', outputRows);\n    }\n  }\n\n  public onRemoveRows(rows: RowList) {\n    const outputRows = [];\n    for (const r of rows) {\n      if (this._matchingRows.delete(r)) {\n        outputRows.push(r);\n      }\n      this._deleteExcludedRow(r);\n    }\n    if (outputRows.length > 0) {\n      this.trigger('rowChange', 'remove', outputRows);\n    }\n  }\n\n  public onUpdateRows(rows: RowList) {\n    const changes = this._updateRowsHelper({}, rows);\n    if (changes.removes) { this.trigger('rowChange', 'remove', changes.removes); }\n    if (changes.updates) { this.trigger('rowChange', 'update', changes.updates); }\n    if (changes.adds) { this.trigger('rowChange', 'add', changes.adds); }\n  }\n\n  public onRowNotify(rows: RowsChanged, notifyValue: any) {\n    if (rows === ALL) {\n      this.trigger('rowNotify', ALL, notifyValue);\n    } else {\n      const outputRows = [];\n      for (const r of rows) {\n        if (this._matchingRows.has(r)) {\n          outputRows.push(r);\n        }\n      }\n      if (outputRows.length > 0) {\n        this.trigger('rowNotify', outputRows, notifyValue);\n      }\n    }\n  }\n\n  /**\n   * Helper which goes through the given rows, applies _filterFunc() to them, and depending on the\n   * result, adds the row to one of the arrays: changes.adds, changes.removes, or changes.updates.\n   * Returns `changes` (the first parameter).\n   */\n  protected _updateRowsHelper(changes: FilterRowChanges, rows: RowList) {\n    for (const r of rows) {\n      if (this._filterFunc(r)) {\n        if (this._matchingRows.has(r)) {\n          (changes.updates || (changes.updates = [])).push(r);\n        } else if (this._deleteExcludedRow(r)) {\n          this._matchingRows.add(r);\n          (changes.adds || (changes.adds = [])).push(r);\n        }\n      } else {\n        if (this._matchingRows.delete(r)) {\n          this._addExcludedRow(r);\n          (changes.removes || (changes.removes = [])).push(r);\n        }\n      }\n    }\n    return changes;\n  }\n\n  // These are implemented by FilteredRowSource, but the base class doesn't need to do anything.\n  protected _addExcludedRow(row: UIRowId): void { /* no-op */ }\n  protected _deleteExcludedRow(row: UIRowId): boolean { return true; }\n}\n\n/**\n * FilteredRowSource can listen to any other RowSource, and passes through only the rows matching\n * the given filter function. In particular, an 'update' event may turn into an 'add' or 'remove'\n * if the row starts or stops matching the function.\n *\n * FilteredRowSource is also a RowListener, so to subscribe to a rowSource, use `subscribeTo()`.\n */\nexport class FilteredRowSource extends BaseFilteredRowSource {\n  private _excludedRows: Set<UIRowId> = new Set();   // Set of rows NOT matching the filter.\n\n  /**\n   * Change the filter function. This may trigger 'remove' and 'add' events as necessary to indicate\n   * that rows stopped or started matching the new filter.\n   */\n  public updateFilter(filterFunc: RowFilterFunc<UIRowId>) {\n    this._filterFunc = filterFunc;\n    const changes: FilterRowChanges = {};\n    // After the first call, _excludedRows may have additional rows, but there is no harm in it,\n    // as we know they don't match, and so will be ignored by _updateRowsHelper.\n    this._updateRowsHelper(changes, this._matchingRows);\n    this._updateRowsHelper(changes, this._excludedRows);\n    if (changes.removes) { this.trigger('rowChange', 'remove', changes.removes); }\n    if (changes.adds) { this.trigger('rowChange', 'add', changes.adds); }\n  }\n\n  /**\n   * Re-apply the filter to the given rows, triggering add/remove events as needed. This is also\n   * similar to what happens on an rowChange/update event from a RowSource, except that no 'update'\n   * event is propagated if filter status hasn't changed.\n   */\n  public refilterRows(rows: RowList) {\n    const changes = this._updateRowsHelper({}, rows);\n    if (changes.removes) { this.trigger('rowChange', 'remove', changes.removes); }\n    if (changes.adds) { this.trigger('rowChange', 'add', changes.adds); }\n  }\n\n  /**\n   * Returns an iterable over all rows that got filtered out by this FilteredRowSource.\n   */\n  public getHiddenRows() {\n    return this._excludedRows.values();\n  }\n\n  protected _addExcludedRow(row: UIRowId): void { this._excludedRows.add(row); }\n  protected _deleteExcludedRow(row: UIRowId): boolean { return this._excludedRows.delete(row); }\n}\n\n// ----------------------------------------------------------------------\n// RowGrouping\n// ----------------------------------------------------------------------\n\n/**\n * Private helper object that maintains a set of rows for a particular group.\n */\nclass RowGroupHelper<Value> extends RowSource {\n  private _rows: Set<UIRowId> = new Set();\n  constructor(public readonly groupValue: Value) {\n    super();\n  }\n\n  public getAllRows() {\n    return this._rows.values();\n  }\n\n  public getNumRows(): number {\n    return this._rows.size;\n  }\n\n  public _addAll(rows: RowList) {\n    for (const r of rows) { this._rows.add(r); }\n  }\n\n  public _removeAll(rows: RowList) {\n    for (const r of rows) { this._rows.delete(r); }\n  }\n}\n\n// ----------------------------------------------------------------------\n/**\n * Helper function that does map.get(key).push(r), creating an Array for the given key if\n * necessary.\n */\nfunction _addToMapOfArrays<K, V>(map: Map<K, V[]>, key: K, r: V): void {\n  let arr = map.get(key);\n  if (!arr) { map.set(key, arr = []); }\n  arr.push(r);\n}\n\n\n/**\n * RowGrouping is a RowListener which groups rows by the results of _groupFunc(row) and exposes\n * per-group RowSources via getGroup(val).\n *\n * @param {Function} groupFunc: called with row identifier, should return the value to group by.\n *    The returned value must be a primitive value such as a String or Number.\n */\nexport class RowGrouping<Value> extends RowListener {\n  // Maps row identifiers to groupValues.\n  private _rowsToValues: Map<UIRowId, Value> = new Map();\n\n  // Maps group values to RowGroupHelpers\n  private _valuesToGroups: Map<Value, RowGroupHelper<Value>> = new Map();\n\n  constructor(private _groupFunc: (row: UIRowId) => Value) {\n    super();\n\n    // On disposal, dispose all RowGroupHelpers that we maintain.\n    this.onDispose(() => {\n      for (const rowGroupHelper of this._valuesToGroups.values()) {\n        rowGroupHelper.dispose();\n      }\n    });\n  }\n\n  /**\n   * Returns a RowSource for the group of rows for which groupFunc(row) is equal to groupValue.\n   */\n  public getGroup(groupValue: Value): RowGroupHelper<Value> {\n    let group = this._valuesToGroups.get(groupValue);\n    if (!group) {\n      group = new RowGroupHelper(groupValue);\n      this._valuesToGroups.set(groupValue, group);\n    }\n    return group;\n  }\n\n  // Implementation of the RowListener interface.\n\n  public onAddRows(rows: RowList) {\n    const groupedRows = new Map();\n    for (const r of rows) {\n      const newValue = this._groupFunc(r);\n      _addToMapOfArrays(groupedRows, newValue, r);\n      this._rowsToValues.set(r, newValue);\n    }\n\n    groupedRows.forEach((groupRows, groupValue) => {\n      const group = this.getGroup(groupValue);\n      group._addAll(groupRows);\n      group.trigger('rowChange', 'add', groupRows);\n    });\n  }\n\n  public onRemoveRows(rows: RowList) {\n    const groupedRows = new Map();\n    for (const r of rows) {\n      _addToMapOfArrays(groupedRows, this._rowsToValues.get(r), r);\n      this._rowsToValues.delete(r);\n    }\n\n    // Note that we don't dispose the RowGroupHelper itself when it becomes empty, because this\n    // group may be in use elsewhere (even if empty at the moment). RowGroupHelpers are only\n    // disposed together with the RowGrouping object itself.\n    groupedRows.forEach((groupRows, groupValue) => {\n      const group = this._valuesToGroups.get(groupValue)!;\n      group._removeAll(groupRows);\n      group.trigger('rowChange', 'remove', groupRows);\n    });\n  }\n\n  public onUpdateRows(rows: RowList) {\n    let updateGroup, removeGroup, insertGroup;\n    for (const r of rows) {\n      const oldValue = this._rowsToValues.get(r);\n      const newValue = this._groupFunc(r);\n      if (newValue === oldValue) {\n        _addToMapOfArrays(updateGroup || (updateGroup = new Map()), oldValue, r);\n      } else {\n        this._rowsToValues.set(r, newValue);\n        _addToMapOfArrays(removeGroup || (removeGroup = new Map()), oldValue, r);\n        _addToMapOfArrays(insertGroup || (insertGroup = new Map()), newValue, r);\n      }\n    }\n    if (removeGroup) {\n      removeGroup.forEach((groupRows, groupValue) => {\n        const group = this._valuesToGroups.get(groupValue)!;\n        group._removeAll(groupRows);\n        group.trigger('rowChange', 'remove', groupRows);\n      });\n    }\n    if (updateGroup) {\n      updateGroup.forEach((groupRows, groupValue) => {\n        const group = this._valuesToGroups.get(groupValue)!;\n        group.trigger('rowChange', 'update', groupRows);\n      });\n    }\n    if (insertGroup) {\n      insertGroup.forEach((groupRows, groupValue) => {\n        const group = this.getGroup(groupValue);\n        group._addAll(groupRows);\n        group.trigger('rowChange', 'add', groupRows);\n      });\n    }\n  }\n\n  public onRowNotify(rows: RowsChanged, notifyValue: any) {\n    if (rows === ALL) {\n      for (const group of this._valuesToGroups.values()) {\n        group.trigger('rowNotify', ALL, notifyValue);\n      }\n    } else {\n      const groupedRows = new Map();\n      for (const r of rows) {\n        _addToMapOfArrays(groupedRows, this._rowsToValues.get(r), r);\n      }\n\n      groupedRows.forEach((groupRows, groupValue) => {\n        const group = this._valuesToGroups.get(groupValue)!;\n        group.trigger('rowNotify', groupRows, notifyValue);\n      });\n    }\n  }\n}\n\n// ----------------------------------------------------------------------\n// SortedRowSet\n// ----------------------------------------------------------------------\n\n/**\n * SortedRowSet is a RowListener which maintains a set of rows in a sorted order, according to the\n * results of compareFunc. The sorted rows are exposed as an observable koArray.\n *\n * SortedRowSet re-emits 'rowNotify(rows, value)' events from RowSources that it subscribes to.\n */\nexport class SortedRowSet extends RowListener {\n  private _allRows: Set<UIRowId> = new Set();\n  private _isPaused: boolean = false;\n  private _koArray: KoArray<UIRowId>;\n  private _keepFunc?: (rowId: number|'new') => boolean;\n\n  constructor(private _compareFunc: CompareFunc<UIRowId>,\n              private _skippableRows?: SkippableRows) {\n    super();\n    this._koArray = this.autoDispose(koArray<UIRowId>());\n    this._keepFunc = _skippableRows?.getKeepFunc();\n  }\n\n  /**\n   * Returns the sorted observable koArray maintained by this SortedRowSet.\n   */\n  public getKoArray() {\n    return this._koArray;\n  }\n\n  /**\n   * Disable the populating of koArray temporarily. When pause(false) is called, the array is\n   * brought back up to date. This is useful if there are multiple changes, e.g. subscriptions and\n   * compareFunc updates, to avoid sorting multiple times.\n   */\n  public pause(doPause: boolean) {\n    if (!doPause && this._isPaused) {\n      this._koArray.assign(Array.from(this._allRows).sort(this._compareFunc));\n    }\n    this._isPaused = Boolean(doPause);\n  }\n\n  /**\n   * Re-sorts the array according to the new compareFunc.\n   */\n  public updateSort(compareFunc: CompareFunc<UIRowId>): void {\n    this._compareFunc = compareFunc;\n    if (!this._isPaused) {\n      this._koArray.assign(Array.from(this._koArray.peek()).sort(this._compareFunc));\n    }\n  }\n\n\n  public onAddRows(rows: RowList) {\n    for (const r of rows) {\n      this._allRows.add(r);\n    }\n    if (this._isPaused) {\n      return;\n    }\n    if (this._canChangeIncrementally(rows)) {\n      for (const r of rows) {\n        const insertIndex = sortedIndex(this._koArray.peek(), r, this._compareFunc);\n        this._koArray.splice(insertIndex, 0, r);\n      }\n    } else {\n      this._koArray.assign(this._keep(Array.from(this._allRows).sort(this._compareFunc)));\n    }\n  }\n\n  public onRemoveRows(rows: RowList) {\n    for (const r of rows) {\n      this._allRows.delete(r);\n    }\n    if (this._isPaused) {\n      return;\n    }\n    if (this._canChangeIncrementally(rows)) {\n      for (const r of rows) {\n        const index = this._koArray.peek().indexOf(r);\n        if (index !== -1) {\n          this._koArray.splice(index, 1);\n        }\n      }\n    } else {\n      this._koArray.assign(this._keep(Array.from(this._allRows).sort(this._compareFunc)));\n    }\n  }\n\n  public onUpdateRows(rows: RowList) {\n    // If paused, do nothing, since we'll re-sort later anyway.\n    if (this._isPaused) {\n      return;\n    }\n\n    // If all affected rows are in correct place relative to their neighbors, then the array is\n    // still sorted, and there is nothing to do. (It's a common case when the update affects fields\n    // not participating in the sort.)\n    //\n    // Note that the logic is all or none, since we can't assume that a single row is in its right\n    // place by comparing to neighbors because the neighbors might themselves be affected and wrong.\n    const sortedRows = Array.from(rows).sort(this._compareFunc);\n    if (_allRowsSorted(this._koArray.peek(), this._allRows, sortedRows, this._compareFunc)) {\n      return;\n    }\n\n    if (this._canChangeIncrementally(rows)) {\n      // Note that we can't add any rows before we remove all affected rows, because affected rows\n      // may no longer be in the correct sort order, so binary search is broken until they are gone.\n      this.onRemoveRows(rows);\n      this.onAddRows(rows);\n    } else {\n      this._koArray.assign(this._keep(Array.from(this._koArray.peek()).sort(this._compareFunc)));\n    }\n  }\n\n  // Check whether a change in the specified rows can be applied incrementally.\n  private _canChangeIncrementally(rows: RowList) {\n    return !this._keepFunc && isSmallChange(rows);\n  }\n\n  // Filter out any rows that should be skipped. This is a no-op if no _keepFunc was found.\n  // All rows that sort within nContext rows of something meant to be kept are also kept.\n  private _keep(rows: UIRowId[], nContext: number = 2) {\n    // Nothing to be done if there's no _keepFunc.\n    if (!this._keepFunc) { return rows; }\n\n    // Seed a list of rows to be kept (we'll expand it as we go).\n    const keeping = rows.map(this._keepFunc);\n\n    // Within a range of skipped rows, we'll keep one as an interstitial, with its\n    // rowId replaced with a special \"skip\" id that makes it get rendered a special\n    // way (with \"...\" in every cell).\n    // Start with a blank list (we'll fill it out as we go).\n    const edge = rows.map(() => false);\n\n    // Keep the first and last (typically 'new') row.\n    const n = rows.length;\n    if (n >= 1) { keeping[0] = true; }\n    if (n >= 2) { keeping[n - 1] = true; }\n\n    // Sweep forwards through the list of kept rows, keeping an extra nContext rows\n    // after each.\n    let last = - nContext - 1;\n    for (let i = 0; i < n; i++) {\n      if (keeping[i]) { last = i; }\n      else if (i - last <= nContext) { keeping[i] = true; }\n    }\n\n    // Sweep backwards through the list of kept rows, keeping an extra nContext rows\n    // before each.\n    last = n + nContext + 1;\n    for (let i = n - 1; i >= 0; i--) {\n      if (keeping[i]) { last = i; }\n      else if (last - i <= nContext) { keeping[i] = true; }\n    }\n\n    // Keep one extra \"edge\" row from each sequence of rows that are to be skipped.\n    let skipping: boolean = false;\n    for (let i = 0; i < n; i++) {\n      if (keeping[i]) {\n        skipping = false;\n      } else {\n        if (!skipping) {\n          edge[i] = true;\n          skipping = true;\n        }\n      }\n    }\n\n    // Go ahead and filter out the rows to keep, tweaking the row id of the\n    // \"edge\" rows.\n    const skipRowId = this._skippableRows?.getSkipRowId() || 0;\n    return rows\n      .map((v, i) => edge[i] ? skipRowId : v)\n      .filter((v, i) => keeping[i] || edge[i] || v === 'new');\n  }\n}\n\ntype RowTester = (rowId: UIRowId) => boolean;\n/**\n * RowWatcher is a RowListener that maintains an observable function that checks whether a row\n * is in the connected RowSource.\n */\nexport class RowWatcher extends RowListener {\n  /**\n   * Observable function that returns true if the row is in the connected RowSource.\n   */\n  public rowFilter: Observable<RowTester> = Observable.create(this, () => false);\n  // We count the number of times the row is added or removed from the source.\n  // In most cases row is added and removed only once.\n  private _rowCounter: Map<UIRowId, number> = new Map();\n\n  public clear() {\n    this._rowCounter.clear();\n    this.rowFilter.set(() => false);\n    this.stopListening();\n  }\n\n  protected onAddRows(rows: RowList) {\n    for (const r of rows) {\n      this._rowCounter.set(r, (this._rowCounter.get(r) || 0) + 1);\n    }\n    this.rowFilter.set((row) => (this._rowCounter.get(row) ?? 0) > 0);\n  }\n\n  protected onRemoveRows(rows: RowList) {\n    for (const r of rows) {\n      this._rowCounter.set(r, (this._rowCounter.get(r) || 0) - 1);\n    }\n    this.rowFilter.set((row) => (this._rowCounter.get(row) ?? 0) > 0);\n  }\n}\n\nfunction isSmallChange(rows: RowList) {\n  return Array.isArray(rows) && rows.length <= 2;\n}\n\n/**\n * Helper function to tell if array[index] is in order relative to its neighbors.\n */\nfunction _isIndexInOrder<T>(array: T[], index: number, compareFunc: CompareFunc<T>): boolean {\n  const r = array[index];\n  return ((index === 0 || compareFunc(array[index - 1], r) <= 0) &&\n          (index === array.length - 1 || compareFunc(r, array[index + 1]) <= 0));\n}\n\n/**\n * Helper function to tell if each of sortedRows, if present in the array, is in order relative to\n * its neighbors. sortedRows should be sorted the same way as the array.\n */\nfunction _allRowsSorted<T>(array: T[], allRows: Set<T>, sortedRows: Iterable<T>, compareFunc: CompareFunc<T>): boolean {\n  let last = 0;\n  for (const r of sortedRows) {\n    if (!allRows.has(r)) {\n      continue;\n    }\n    const index = array.indexOf(r, last);\n    if (index === -1 || !_isIndexInOrder(array, index, compareFunc)) {\n      // rows of sortedRows are not present in the array in the same relative order.\n      return false;\n    }\n    last = index;\n  }\n  return true;\n}\n","import * as ace from 'ace-builds';\nimport {theme, vars} from 'app/client/ui2018/cssVars';\nimport {Theme} from 'app/common/ThemePrefs';\nimport {getGristConfig} from 'app/common/urlUtils';\nimport {BindableValue, Computed, dom, DomElementArg, Observable, styled, subscribeElem} from 'grainjs';\n\n// ace-builds also has a minified build (src-min-noconflict), but we don't\n// use it since webpack already handles minification.\nrequire('ace-builds/src-noconflict/ext-static_highlight');\nrequire('ace-builds/src-noconflict/mode-python');\nrequire('ace-builds/src-noconflict/theme-chrome');\nrequire('ace-builds/src-noconflict/theme-dracula');\n\nexport interface ICodeOptions {\n  gristTheme: Computed<Theme>;\n  placeholder?: string;\n  maxLines?: number;\n}\n\nexport function buildHighlightedCode(\n  code: BindableValue<string>, options: ICodeOptions, ...args: DomElementArg[]\n): HTMLElement {\n  const {gristTheme, placeholder, maxLines} = options;\n  const {enableCustomCss} = getGristConfig();\n\n  const highlighter = ace.require('ace/ext/static_highlight');\n  const PythonMode = ace.require('ace/mode/python').Mode;\n  const aceDom = ace.require('ace/lib/dom');\n  const chrome = ace.require('ace/theme/chrome');\n  const dracula = ace.require('ace/theme/dracula');\n  const mode = new PythonMode();\n\n  const codeText = Observable.create(null, '');\n  const codeTheme = Observable.create(null, gristTheme.get());\n\n  function updateHighlightedCode(elem: HTMLElement) {\n    let text = codeText.get();\n    if (!text) {\n      elem.textContent = placeholder || '';\n      return;\n    }\n\n    if (maxLines) {\n      // If requested, trim to maxLines, and add an ellipsis at the end.\n      // (Long lines are also truncated with an ellpsis via text-overflow style.)\n      const lines = text.split(/\\n/);\n      if (lines.length > maxLines) {\n        text = lines.slice(0, maxLines).join(\"\\n\") + \" \\u2026\";  // Ellipsis\n      }\n    }\n\n    let aceThemeName: 'chrome' | 'dracula';\n    let aceTheme: any;\n    if (codeTheme.get().appearance === 'dark' && !enableCustomCss) {\n      aceThemeName = 'dracula';\n      aceTheme = dracula;\n    } else {\n      aceThemeName = 'chrome';\n      aceTheme = chrome;\n    }\n\n    // Rendering highlighted code gives you back the HTML to insert into the DOM, as well\n    // as the CSS styles needed to apply the theme. The latter typically isn't included in\n    // the document until an Ace editor is opened, so we explicitly import it here to avoid\n    // leaving highlighted code blocks without a theme applied.\n    const {html, css} = highlighter.render(text, mode, aceTheme, 1, true);\n    elem.innerHTML = html;\n    aceDom.importCssString(css, `${aceThemeName}-highlighted-code`);\n  }\n\n  return cssHighlightedCode(\n    dom.autoDispose(codeText),\n    dom.autoDispose(codeTheme),\n    elem => subscribeElem(elem, code, (newCodeText) => {\n      codeText.set(newCodeText);\n      updateHighlightedCode(elem);\n      }),\n    elem => subscribeElem(elem, gristTheme, (newCodeTheme) => {\n      codeTheme.set(newCodeTheme);\n      updateHighlightedCode(elem);\n    }),\n    ...args,\n  );\n}\n\n// Use a monospace font, a subset of what ACE editor seems to use.\nexport const cssCodeBlock = styled('div', `\n  font-family: 'Monaco', 'Menlo', monospace;\n  font-size: ${vars.smallFontSize};\n  background-color: ${theme.highlightedCodeBlockBg};\n  &[disabled], &.disabled {\n    background-color: ${theme.highlightedCodeBlockBgDisabled};\n  }\n`);\n\nconst cssHighlightedCode = styled(cssCodeBlock, `\n  position: relative;\n  white-space: pre;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border: 1px solid ${theme.highlightedCodeBorder};\n  border-radius: 3px;\n  min-height: 28px;\n  padding: 5px 6px;\n  color: ${theme.highlightedCodeFg};\n\n  &.disabled, &.disabled .ace-chrome, &.disabled .ace-dracula {\n    background-color: ${theme.highlightedCodeBgDisabled};\n  }\n  & .ace_line {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`);\n\nexport const cssFieldFormula = styled(buildHighlightedCode, `\n  flex: auto;\n  cursor: pointer;\n  margin-top: 4px;\n  padding-left: 24px;\n  --icon-color: ${theme.accentIcon};\n\n  &-disabled-icon.formula_field_sidepane::before {\n    --icon-color: ${theme.iconDisabled};\n  }\n  &-disabled {\n    pointer-events: none;\n  }\n`);\n","import { GristDoc } from \"app/client/components/GristDoc\";\nimport { ColumnFilter } from \"app/client/models/ColumnFilter\";\nimport { FilterInfo } from \"app/client/models/entities/ViewSectionRec\";\nimport { CellValue } from \"app/plugin/GristData\";\nimport { normalizeText } from \"app/client/lib/ACIndex\";\nimport { Computed, Disposable, Observable } from \"grainjs\";\nimport escapeRegExp = require(\"lodash/escapeRegExp\");\nimport isNull = require(\"lodash/isNull\");\n\nconst MAXIMUM_SHOWN_FILTER_ITEMS = 500;\n\nexport interface IFilterCount {\n\n  // label is the formatted value\n  label: string;\n\n  // number of occurences in the table\n  count: number;\n\n  // displayValue is the underlying value (from the display column, if any), useful to perform\n  // comparison\n  displayValue: any;\n}\n\ntype ICompare<T> = (a: T, b: T) => number\n\nconst localeCompare = new Intl.Collator('en-US', {numeric: true}).compare;\n\ninterface ColumnFilterMenuModelParams {\n  columnFilter: ColumnFilter;\n  filterInfo: FilterInfo;\n  valueCount: Array<[CellValue, IFilterCount]>;\n  gristDoc: GristDoc;\n  limitShow?: number;\n}\n\nexport class ColumnFilterMenuModel extends Disposable {\n  public readonly columnFilter = this._params.columnFilter;\n\n  public readonly filterInfo = this._params.filterInfo;\n\n  public readonly gristDoc = this._params.gristDoc;\n\n  public readonly initialPinned = this.filterInfo.isPinned.peek();\n\n  public readonly limitShown = this._params.limitShow ?? MAXIMUM_SHOWN_FILTER_ITEMS;\n\n  public readonly searchValue = Observable.create(this, '');\n\n  public readonly isSortedByCount = Observable.create(this, false);\n\n  // computes a set of all keys that matches the search text.\n  public readonly filterSet = Computed.create(this, this.searchValue, (_use, searchValue) => {\n    const searchRegex = new RegExp(escapeRegExp(normalizeText(searchValue)), 'i');\n    const showAllOptions = ['Bool', 'Choice', 'ChoiceList'].includes(this.columnFilter.columnType);\n    return new Set(\n      this._params.valueCount\n        .filter(([_, {label, count}]) => (showAllOptions ? true : count) && searchRegex.test(normalizeText(label)))\n        .map(([key]) => key)\n    );\n  });\n\n  // computes the sorted array of all values (ie: pair of key and IFilterCount) that matches the search text.\n  public readonly filteredValues = Computed.create(\n    this, this.filterSet, this.isSortedByCount,\n    (_use, filter, isSortedByCount) => {\n      const prop: keyof IFilterCount = isSortedByCount ? 'count' : 'displayValue';\n      let isShownFirst: (val: any) => boolean = isNull;\n      if (['Date', 'DateTime', 'Numeric', 'Int'].includes(this.columnFilter.visibleColumnType)) {\n        isShownFirst = (val) => isNull(val) || isNaN(val);\n      }\n\n      const comparator: ICompare<any> = (a, b) => {\n        if (isShownFirst(a)) { return -1; }\n        if (isShownFirst(b)) { return 1; }\n        return localeCompare(a,  b);\n      };\n\n      return this._params.valueCount\n        .filter(([key]) => filter.has(key))\n        .sort((a, b) => comparator(a[1][prop], b[1][prop]));\n    }\n  );\n\n  // computes the array of all values that does NOT matches the search text\n  public readonly otherValues = Computed.create(this, this.filterSet, (_use, filter) => {\n    return this._params.valueCount.filter(([key]) => !filter.has(key));\n  });\n\n  // computes the array of keys that matches the search text\n  public readonly filteredKeys = Computed.create(this, this.filterSet, (_use, filter) => {\n    return this._params.valueCount\n      .filter(([key]) => filter.has(key))\n      .map(([key]) => key);\n  });\n\n  public readonly valuesBeyondLimit = Computed.create(this, this.filteredValues, (_use, filteredValues) => {\n    return filteredValues.slice(this.limitShown);\n  });\n\n  constructor(private _params: ColumnFilterMenuModelParams) {\n    super();\n  }\n}\n","import {\n  CURRENT_DATE,\n  diffUnit,\n  formatRelBounds,\n  IPeriod,\n  IRelativeDateSpec,\n  isEquivalentRelativeDate,\n  relativeDateToUnixTimestamp\n} from \"app/common/RelativeDates\";\nimport { IRangeBoundType, isRelativeBound } from \"app/common/FilterState\";\nimport getCurrentTime from \"app/common/getCurrentTime\";\nimport moment from \"moment-timezone\";\n\nexport const DEPS = {getCurrentTime};\n\nexport interface IRelativeDateOption {\n  label: string;\n  value: number|IRelativeDateSpec;\n}\n\nconst DEFAULT_OPTION_LIST: IRelativeDateSpec[] = [\n  CURRENT_DATE, [{\n    quantity: -3,\n    unit: 'day',\n  }], [{\n    quantity: -7,\n    unit: 'day',\n  }], [{\n    quantity: -30,\n    unit: 'day',\n  }], [{\n    quantity: 0,\n    unit: 'year',\n  }], [{\n    quantity: 3,\n    unit: 'day',\n  }], [{\n    quantity: 7,\n    unit: 'day',\n  }], [{\n    quantity: 30,\n    unit: 'day',\n  }], [{\n    quantity: 0,\n    unit: 'year',\n    endOf: true,\n  }]];\n\n\nexport function relativeDatesOptions(value: IRangeBoundType, valueFormatter: (val: any) => string\n                                   ): Array<{label: string, spec: IRangeBoundType}> {\n  return relativeDateOptionsSpec(value)\n    .map((spec) => ({spec, label: formatBoundOption(spec, valueFormatter)}));\n}\n\n// Returns a list of different relative date spec that all match passed in date value. If value is\n// undefined it returns a default list of spec meant to showcase user the different flavors of\n// relative date.\nfunction relativeDateOptionsSpec(value: IRangeBoundType): Array<IRangeBoundType> {\n\n  if (value === undefined) {\n    return DEFAULT_OPTION_LIST;\n  } else if (isRelativeBound(value)) {\n    value = relativeDateToUnixTimestamp(value);\n  }\n\n  const date = moment.utc(value * 1000);\n  const res: IRangeBoundType[] = [value];\n\n  let relDate = getMatchingDoubleRelativeDate(value, {unit: 'day'});\n  if (Math.abs(relDate[0].quantity) <= 90) {\n    res.push(relDate);\n  }\n\n  relDate = getMatchingDoubleRelativeDate(value, {unit: 'week'});\n  if (Math.abs(relDate[0].quantity) <= 4) {\n      res.push(relDate);\n  }\n\n  // any day of the month (with longer limit for 1st day of the month)\n  relDate = getMatchingDoubleRelativeDate(value, {unit: 'month'});\n  if (Math.abs(relDate[0].quantity) <= (date.date() === 1 ? 12  : 3)) {\n    res.push(relDate);\n  }\n\n  // If date is 1st of Jan show 1st day of year options\n  if (date.date() === 1 && date.month() === 0) {\n    res.push(getMatchingDoubleRelativeDate(value, {unit: 'year'}));\n  }\n\n  // 31st of Dec\n  if (date.date() === 31 && date.month() === 11) {\n    res.push(getMatchingDoubleRelativeDate(value, {unit: 'year', endOf: true}));\n  }\n\n  // Last day of any month\n  if (date.clone().endOf('month').date() === date.date()) {\n    relDate = getMatchingDoubleRelativeDate(value, {unit: 'month', endOf: true});\n    if (Math.abs(relDate[0].quantity) < 12) {\n      res.push(relDate);\n    }\n  }\n\n  return res;\n}\n\nfunction now(): moment.Moment {\n  const m = DEPS.getCurrentTime();\n  return moment.utc([m.year(), m.month(), m.date()]);\n}\n\n// Returns a relative date spec as a sequence of one or two IPeriod that allows to match dateValue\n// starting from the current date. The first period has .unit, .startOf and .endOf set according to\n// passed in option.\nexport function getMatchingDoubleRelativeDate(\n  dateValue: number,\n  option: {unit: 'day'|'week'|'month'|'year', endOf?: boolean}\n): IPeriod[] {\n  const {unit} = option;\n  const date = moment.utc(dateValue * 1000);\n  const dateNow = now();\n  const quantity = diffUnit(date, dateNow.clone(), unit);\n  const m = dateNow.clone().add(quantity, unit);\n  if (option.endOf) { m.endOf(unit); m.startOf('day'); }\n  else { m.startOf(unit); }\n  const dayQuantity = diffUnit(date, m, 'day');\n  const res = [{quantity, ...option}];\n  // Only add a 2nd period when it is not moot.\n  if (dayQuantity) { res.push({quantity: dayQuantity, unit: 'day'}); }\n  return res;\n}\n\nexport function formatBoundOption(bound: IRangeBoundType, valueFormatter: (val: any) => string): string {\n  return isRelativeBound(bound) ? formatRelBounds(bound) : valueFormatter(bound);\n}\n\n\n// Update relativeDate to match the new date picked by user.\nexport function updateRelativeDate(relativeDate: IRelativeDateSpec, date: number): IRelativeDateSpec|number {\n  const periods = Array.isArray(relativeDate) ? relativeDate : [relativeDate];\n\n  if ([1, 2].includes(periods.length)) {\n    const {unit, endOf} = periods[0];\n    const relDate = getMatchingDoubleRelativeDate(date, {unit, endOf});\n\n    // Returns the relative date only if it is one of the suggested relative dates, otherwise\n    // returns the absolute date.\n    const options = relativeDateOptionsSpec(date);\n    if (options.find(opt => isRelativeBound(opt) && isEquivalentRelativeDate(opt, relDate))) {\n      return relDate;\n    }\n    return date;\n  }\n\n  throw new Error(\n    `Relative date spec does only support 1 or 2 periods, got ${periods.length}!`\n  );\n}\n","import { Disposable, dom, Observable, styled } from \"grainjs\";\nimport { ColumnFilter } from \"app/client/models/ColumnFilter\";\nimport { testId } from \"app/client/ui2018/cssVars\";\nimport { textButton } from \"app/client/ui2018/buttons\";\nimport { IColumnFilterViewType } from \"app/client/ui/ColumnFilterMenu\";\nimport getCurrentTime from \"app/common/getCurrentTime\";\nimport { IRelativeDateSpec, isRelativeBound } from \"app/common/FilterState\";\nimport { updateRelativeDate } from \"app/client/ui/RelativeDatesOptions\";\nimport moment from \"moment-timezone\";\n\nexport class ColumnFilterCalendarView extends Disposable {\n\n  private _$el: any;\n\n  constructor(private _opts: {\n    viewTypeObs: Observable<IColumnFilterViewType>,\n    // Note the invariant: `selectedBoundObs.get() !== null` until this gets disposed.\n    selectedBoundObs: Observable<'min' | 'max' | null>,\n    columnFilter: ColumnFilter,\n  }) {\n    super();\n    this._moveToSelected = this._moveToSelected.bind(this);\n    this.autoDispose(this.columnFilter.min.addListener(() => this._setRange()));\n    this.autoDispose(this.columnFilter.max.addListener(() => this._setRange()));\n    this.autoDispose(this._opts.selectedBoundObs.addListener(this._moveToSelected));\n  }\n\n  public get columnFilter() { return this._opts.columnFilter; }\n  public get selectedBoundObs() { return this._opts.selectedBoundObs; }\n\n  public buildDom() {\n    setTimeout(() => this._moveToSelected(), 0);\n    return cssContainer(\n      cssLinkRow(\n        cssLink(\n          '← List view',\n          dom.on('click', () => this._opts.selectedBoundObs.set(null)),\n        ),\n        cssLink(\n          'Today',\n          dom.on('click', () => {\n            this._$el.datepicker('update', this._getCurrentTime());\n            this._cleanup();\n          }),\n        ),\n        testId('calendar-links'),\n      ),\n      cssDatepickerContainer(\n        (el) => {\n          const $el = this._$el = $(el) as any;\n          $el.datepicker({\n            defaultViewDate: this._getCurrentTime(),\n            todayHighlight: true,\n          });\n          $el[0].querySelector('.datepicker');\n          this._setRange();\n          $el.on('changeDate', () => this._onChangeDate());\n\n          // Schedules cleanups after users navigations (ie: navigating to next/prev month).\n          $el.on('changeMonth', () => setTimeout(() => this._cleanup(), 0));\n          $el.on('changeYear', () => setTimeout(() => this._cleanup(), 0));\n          $el.on('changeDecade', () => setTimeout(() => this._cleanup(), 0));\n          $el.on('changeCentury', () => setTimeout(() => this._cleanup(), 0));\n        },\n      )\n    );\n  }\n\n  private _setRange() {\n    this._$el.datepicker('setRange', this._getRange());\n    this._moveToSelected();\n  }\n\n  // Move calendar to the selected bound's current date.\n  private _moveToSelected() {\n    const minMax = this._opts.selectedBoundObs.get();\n    let dateValue = this._getCurrentTime();\n\n    if (minMax !== null) {\n      const value = this.columnFilter.getBoundsValue(minMax);\n      if (isFinite(value)) {\n        dateValue = new Date(value * 1000);\n      }\n    }\n\n    this._$el.datepicker('update', dateValue);\n    this._cleanup();\n  }\n\n  private _getCurrentTime(): Date {\n    return getCurrentTime().toDate();\n  }\n\n  private _onChangeDate() {\n    const d = this._$el.datepicker('getUTCDate').valueOf() / 1000;\n    const {min, max} = this.columnFilter;\n    // Check the the min bounds is before max bounds. If not update the other bounds to the same\n    // value.\n    // TODO: also perform this check when users pick relative dates from popup\n    if (this.selectedBoundObs.get() === 'min') {\n      min.set(this._updateBoundValue(min.get(), d));\n      if (this.columnFilter.getBoundsValue('max') < d) {\n        max.set(this._updateBoundValue(max.get(), d));\n      }\n    } else {\n      max.set(this._updateBoundValue(max.get(), d));\n      if (this.columnFilter.getBoundsValue('min') > d) {\n        min.set(this._updateBoundValue(min.get(), d));\n      }\n    }\n    this._cleanup();\n  }\n\n  private _getRange() {\n    const min = this.columnFilter.getBoundsValue('min');\n    const max = this.columnFilter.getBoundsValue('max');\n    const toDate = (val: number) => {\n      const m = moment.utc(val * 1000);\n      return new Date(Date.UTC(m.year(), m.month(), m.date()));\n    };\n    if (!isFinite(min) && !isFinite(max)) {\n      return [];\n    }\n    if (!isFinite(min)) {\n      return [{valueOf: () => -Infinity}, toDate(max)];\n    }\n    if (!isFinite(max)) {\n      return [toDate(min), {valueOf: () => +Infinity}];\n    }\n    return [toDate(min), toDate(max)];\n  }\n\n  // Update val with date. Returns the new updated value. Useful to update bounds' value after users\n  // have picked new value from calendar.\n  private _updateBoundValue(val: IRelativeDateSpec|number|undefined, date: number) {\n    return isRelativeBound(val) ? updateRelativeDate(val, date) : date;\n  }\n\n  // Removes the `.active` class from date elements in the datepicker. The active dates background\n  // takes precedence over other backgrounds which are more important to us, such as range's bounds\n  // and current day.\n  private _cleanup() {\n    const elements = this._$el.get()[0].querySelectorAll('.active');\n    for (const el of elements) {\n      el.classList.remove('active');\n    }\n  }\n}\n\nconst cssContainer = styled('div', `\n  padding: 16px 16px;\n`);\n\nconst cssLink = textButton;\n\nconst cssLinkRow = styled('div', `\n  display: flex;\n  justify-content: space-between;\n`);\n\nconst cssDatepickerContainer = styled('div', `\n  padding-top: 16px;\n`);\n","import { Placement } from \"@popperjs/core\";\nimport { IRangeBoundType, isEquivalentBound } from \"app/common/FilterState\";\nimport { Disposable, dom, Observable } from \"grainjs\";\nimport { IOpenController, IPopupOptions, PopupControl } from \"popweasel\";\nimport { popupControl } from \"app/client/lib/popupControl\";\nimport { IOptionFull, SimpleList } from \"app/client/lib/simpleList\";\nimport { relativeDatesOptions } from \"app/client/ui/RelativeDatesOptions\";\n\nexport interface IOptionsDropdownOpt {\n  placement: Placement;\n  valueFormatter(val: any): string\n}\n\n// Create a popup control that show the relative dates options for obs in a popup attached to\n// reference.\nexport function relativeDatesControl(\n  reference: HTMLElement,\n  obs: Observable<IRangeBoundType>,\n  opt: {valueFormatter(val: any): string} & IPopupOptions): PopupControl {\n  const popupCtl = popupControl(\n    reference,\n    ctl => RelativeDatesMenu.create(null, ctl, obs, opt).content,\n    opt,\n  );\n  dom.autoDisposeElem(reference, popupCtl);\n  return popupCtl;\n}\n\n// Builds the list of relatives dates to show in a popup next to the range inputs for date\n// filtering. It does not still focus from the range input and takes care of keyboard navigation\n// using arrow Up/Down, Escape to close the menu and enter to trigger select option.\nclass RelativeDatesMenu extends Disposable {\n\n  public content: Element;\n  private _dropdownList: SimpleList<IRangeBoundType>;\n  private _items: Observable<Array<IOptionFull<IRangeBoundType>>> = Observable.create(this, []);\n  constructor(ctl: IOpenController,\n              private _obs: Observable<IRangeBoundType>,\n              private _opt: {valueFormatter(val: any): string}) {\n    super();\n    this._dropdownList = SimpleList<IRangeBoundType>.create(this, ctl, this._items, this._action.bind(this));\n    this._dropdownList.listenKeys(ctl.getTriggerElem() as HTMLElement);\n    this.content = this._dropdownList.content;\n    this.autoDispose(this._obs.addListener(() => this._update()));\n    this._update();\n  }\n\n  private _getOptions() {\n    const newItems = relativeDatesOptions(this._obs.get(), this._opt.valueFormatter);\n    return newItems.map(item => ({label: item.label, value: item.spec}));\n  }\n\n  private _update() {\n    this._items.set(this._getOptions());\n    const index = this._items.get().findIndex(o => isEquivalentBound(o.value, this._obs.get()));\n    this._dropdownList.setSelected(index ?? -1);\n  }\n\n  private _action(value: IRangeBoundType) {\n    this._obs.set(value);\n  }\n}\n","import { CURRENT_DATE, IRelativeDateSpec } from \"app/common/RelativeDates\";\n\nexport interface IDateRangeOption {\n  label: string;\n  min: IRelativeDateSpec;\n  max: IRelativeDateSpec;\n}\n\nexport const DateRangeOptions: IDateRangeOption[] = [{\n  label: 'Today',\n  min: CURRENT_DATE,\n  max: CURRENT_DATE,\n}, {\n  label: 'Last 7 days',\n  min: [{quantity: -7, unit: 'day'}],\n  max: [{quantity: -1, unit: 'day'}],\n}, {\n  label: 'Next 7 days',\n  min: [{quantity: 1, unit: 'day'}],\n  max: [{quantity: 7, unit: 'day'}],\n}, {\n  label: 'Last Week',\n  min: [{quantity: -1, unit: 'week'}],\n  max: [{quantity: -1, unit: 'week', endOf: true}],\n}, {\n  label: 'Last 30 days',\n  min: [{quantity: -30, unit: 'day'}],\n  max: [{quantity: -1, unit: 'day'}],\n}, {\n  label: 'This week',\n  min: [{quantity: 0, unit: 'week'}],\n  max: [{quantity: 0, unit: 'week', endOf: true}],\n}, {\n  label: 'This month',\n  min: [{quantity: 0, unit: 'month'}],\n  max: [{quantity: 0, unit: 'month', endOf: true}],\n}, {\n  label: 'This year',\n  min: [{quantity: 0, unit: 'year'}],\n  max: [{quantity: 0, unit: 'year', endOf: true}],\n}];\n","/**\n * Creates a UI for column filter menu given a columnFilter model, a mapping of cell values to counts, and an onClose\n * callback that's triggered on Apply or on Cancel. Changes to the UI result in changes to the underlying model,\n * but on Cancel the model is reset to its initial state prior to menu closing.\n */\nimport * as commands from 'app/client/components/commands';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {FocusLayer} from 'app/client/lib/FocusLayer';\nimport {makeT} from 'app/client/lib/localization';\nimport {ColumnFilter, NEW_FILTER_JSON} from 'app/client/models/ColumnFilter';\nimport {ColumnFilterMenuModel, IFilterCount} from 'app/client/models/ColumnFilterMenuModel';\nimport {ColumnRec, ViewFieldRec} from 'app/client/models/DocModel';\nimport {FilterInfo} from 'app/client/models/entities/ViewSectionRec';\nimport {RowSource} from 'app/client/models/rowset';\nimport {ColumnFilterFunc, SectionFilter} from 'app/client/models/SectionFilter';\nimport {TableData} from 'app/client/models/TableData';\nimport {ColumnFilterCalendarView} from 'app/client/ui/ColumnFilterCalendarView';\nimport {relativeDatesControl} from 'app/client/ui/ColumnFilterMenuUtils';\nimport {cssInput} from 'app/client/ui/cssInput';\nimport {DateRangeOptions, IDateRangeOption} from 'app/client/ui/DateRangeOptions';\nimport {cssPinButton} from 'app/client/ui/RightPanelStyles';\nimport {basicButton, primaryButton, textButton} from 'app/client/ui2018/buttons';\nimport {cssLabel as cssCheckboxLabel, cssCheckboxSquare,\n        cssLabelText, Indeterminate, labeledTriStateSquareCheckbox} from 'app/client/ui2018/checkbox';\nimport {theme, vars} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {cssOptionRowIcon, menu, menuCssClass, menuDivider, menuItem} from 'app/client/ui2018/menus';\nimport {cssDeleteButton, cssDeleteIcon, cssToken as cssTokenTokenBase} from 'app/client/widgets/ChoiceListEditor';\nimport {ChoiceOptions} from 'app/client/widgets/ChoiceTextBox';\nimport {choiceToken} from 'app/client/widgets/ChoiceToken';\nimport {CellValue} from 'app/common/DocActions';\nimport {IRelativeDateSpec, isEquivalentFilter, isRelativeBound} from 'app/common/FilterState';\nimport {extractTypeFromColType, isDateLikeType, isList, isNumberType, isRefListType} from 'app/common/gristTypes';\nimport {formatRelBounds} from 'app/common/RelativeDates';\nimport {createFormatter} from 'app/common/ValueFormatter';\nimport {UIRowId} from 'app/plugin/GristAPI';\nimport {decodeObject} from 'app/plugin/objtypes';\nimport {Computed, dom, DomArg, DomElementArg, DomElementMethod, IDisposableOwner,\n        input, makeTestId, Observable, styled} from 'grainjs';\nimport {IOpenController, IPopupOptions, setPopupToCreateDom} from 'popweasel';\nimport concat = require('lodash/concat');\nimport identity = require('lodash/identity');\nimport noop = require('lodash/noop');\nimport partition = require('lodash/partition');\nimport some = require('lodash/some');\nimport tail = require('lodash/tail');\nimport debounce = require('lodash/debounce');\n\nconst t = makeT('ColumnFilterMenu');\n\nexport interface IFilterMenuOptions {\n  model: ColumnFilterMenuModel;\n  valueCounts: Map<CellValue, IFilterCount>;\n  rangeInputOptions?: IRangeInputOptions;\n  showAllFiltersButton?: boolean;\n  doCancel(): void;\n  doSave(reset: boolean): void;\n  renderValue(key: CellValue, value: IFilterCount): DomElementArg;\n  onClose(): void;\n  valueParser?(val: string): any;\n  valueFormatter?(val: any): string;\n}\n\nconst testId = makeTestId('test-filter-menu-');\n\nexport type IColumnFilterViewType = 'listView'|'calendarView';\n\n/**\n * Returns the DOM content for the column filter menu.\n *\n * For use with setPopupToCreateDom().\n */\nexport function columnFilterMenu(owner: IDisposableOwner, opts: IFilterMenuOptions): HTMLElement {\n  const { model, doCancel, doSave, onClose, renderValue, valueParser, showAllFiltersButton } = opts;\n  const { columnFilter, filterInfo, gristDoc } = model;\n  const valueFormatter = opts.valueFormatter || ((val) => val?.toString() || '');\n\n  // Map to keep track of displayed checkboxes\n  const checkboxMap: Map<CellValue, HTMLInputElement> = new Map();\n\n  // Listen for changes to filterFunc, and update checkboxes accordingly. Debounce is needed to\n  // prevent some weirdness when users click on a checkbox while focus was on a range input (causing\n  // sometimes the checkbox to not toggle)\n  const filterListener = columnFilter.filterFunc.addListener(debounce(func => {\n    for (const [value, elem] of checkboxMap) {\n      elem.checked = func(value);\n    }\n  }));\n\n  const {searchValue: searchValueObs, filteredValues, filteredKeys, isSortedByCount} = model;\n\n  const isAboveLimitObs = Computed.create(owner, (use) => use(model.valuesBeyondLimit).length > 0);\n  const isSearchingObs = Computed.create(owner, (use) => Boolean(use(searchValueObs)));\n  const showRangeFilter = isNumberType(columnFilter.columnType) || isDateLikeType(columnFilter.columnType);\n  const isDateFilter = isDateLikeType(columnFilter.columnType);\n  const selectedBoundObs = Observable.create<'min'|'max'|null>(owner, null);\n  const viewTypeObs = Computed.create<IColumnFilterViewType>(owner, (\n    (use) => isDateFilter && use(selectedBoundObs) ? 'calendarView' : 'listView'\n  ));\n  const isMinSelected = Computed.create<boolean>(owner, (use) => use(selectedBoundObs) === 'min')\n    .onWrite((val) => val ? selectedBoundObs.set('min') : selectedBoundObs.set('max'));\n  const isMaxSelected = Computed.create<boolean>(owner, (use) => use(selectedBoundObs) === 'max')\n    .onWrite((val) => val ? selectedBoundObs.set('max') : selectedBoundObs.set('min'));\n\n  let searchInput: HTMLInputElement;\n  let cancel = false;\n  let reset = false;\n\n  const filterMenu: HTMLElement = cssMenu(\n    { tabindex: '-1' }, // Allow menu to be focused\n    testId('wrapper'),\n\n    // Makes sure focus goes back to menu container and disable grist keyboard shortcut while open.\n    elem => {\n      FocusLayer.create(owner, {defaultFocusElem: elem, pauseMousetrap: true});\n\n      // Gives focus to the searchInput on open (or to the min input if the range filter is\n      // present). Note that this must happen after the instanciation of FocusLayer in order to\n      // correctly override focus set by the latter also using a 0 delay.\n      setTimeout(() => {\n        const el = searchInput;\n        el.focus();\n        el.select();\n      }, 0);\n\n    },\n\n    dom.cls(menuCssClass),\n    dom.autoDispose(filterListener),\n    // Save or cancel on disposal, which should always happen as part of closing.\n    dom.onDispose(() => cancel ? doCancel() : doSave(reset)),\n    dom.onKeyDown({\n      Enter: () => onClose(),\n      Escape: () => onClose(),\n    }),\n\n    // Filter by range\n    dom.maybe(showRangeFilter, () => [\n      cssRangeContainer(\n        rangeInput(\n          columnFilter.min, {\n            isDateFilter,\n            placeholder: isDateFilter ? t(\"Start\") : t(\"Min\"),\n            valueParser,\n            valueFormatter,\n            isSelected: isMinSelected,\n            viewTypeObs,\n            nextSelected: () => selectedBoundObs.set('max'),\n          },\n          testId('min'),\n          dom.onKeyDown({Tab: (e) => e.shiftKey || selectedBoundObs.set('max')}),\n        ),\n        rangeInput(\n          columnFilter.max, {\n            isDateFilter,\n            placeholder: isDateFilter ? t(\"End\") : t(\"Max\"),\n            valueParser,\n            valueFormatter,\n            isSelected: isMaxSelected,\n            viewTypeObs,\n          },\n          testId('max'),\n          dom.onKeyDown({Tab: (e) => e.shiftKey ? selectedBoundObs.set('min') : selectedBoundObs.set('max')}),\n        ),\n      ),\n\n      // presets links\n      dom.maybe(isDateFilter, () => {\n        function action(option: IDateRangeOption) {\n          const {min, max} = option;\n          columnFilter.min.set(min);\n          columnFilter.max.set(max);\n          // open the calendar view\n          selectedBoundObs.set('min');\n        }\n        return [\n          cssLinkRow(\n            testId('presets-links'),\n            cssLink(\n              DateRangeOptions[0].label,\n              dom.on('click', () => action(DateRangeOptions[0]))\n            ),\n            cssLink(\n              DateRangeOptions[1].label,\n              dom.on('click', () => action(DateRangeOptions[1]))\n            ),\n            cssLink(\n              'More ', icon('Dropdown'),\n              menu(() => DateRangeOptions.map(\n                (option) => menuItem(() => action(option), option.label)\n              ), {attach: '.' + cssMenu.className})\n            ),\n          ),\n        ];\n      }),\n      cssMenuDivider(),\n    ]),\n\n    dom.domComputed(viewTypeObs, viewType => viewType === 'listView' ? ListView() :\n      dom.create(ColumnFilterCalendarView, {\n        viewTypeObs, selectedBoundObs, columnFilter,\n      })),\n    Footer(),\n\n    // Prevents click on presets links submenus (any one of the 'More' submenus) from bubling up and\n    // eventually cause the parent menu to close (which used to happen when opening the column\n    // filter from the section sort&filter menu)\n    dom.on('click', ev => ev.stopPropagation()),\n  );\n\n  function ListView() {\n    return [\n      cssMenuHeader(\n        cssSearchIcon('Search'),\n        searchInput = cssSearch(\n          searchValueObs, { onInput: true },\n          testId('search-input'),\n          { type: 'search', placeholder: t('Search values') },\n          dom.onKeyDown({\n            Enter: () => {\n              if (searchValueObs.get()) {\n                columnFilter.setState({included: filteredKeys.get()});\n              }\n            },\n            Escape$: (ev) => {\n              if (searchValueObs.get()) {\n                searchValueObs.set('');\n                searchInput.focus();\n                ev.stopPropagation();\n              }\n            }\n          })\n        ),\n        dom.maybe(searchValueObs, () => cssSearchIcon(\n          'CrossSmall', testId('search-close'),\n          dom.on('click', () => {\n            searchValueObs.set('');\n            searchInput.focus();\n          }),\n        )),\n      ),\n      cssMenuDivider(),\n      cssMenuItem(\n        dom.domComputed((use) => {\n          const searchValue = use(searchValueObs);\n          // This is necessary to avoid a known bug in grainjs where filteredKeys does not get\n          // recalculated.\n          use(filteredKeys);\n          const allSpec = searchValue ? {included: use(filteredKeys)} : {excluded: []};\n          const noneSpec = searchValue ? {excluded: use(filteredKeys)} : {included: []};\n          const state = use(columnFilter.state);\n          return [\n            cssSelectAll(\n              dom.text(searchValue ? t('All Shown') : t('All')),\n              dom.prop('disabled', isEquivalentFilter(state, allSpec)),\n              dom.on('click', () => columnFilter.setState(allSpec)),\n              testId('bulk-action'),\n            ),\n            cssDotSeparator('•'),\n            cssSelectAll(\n              searchValue ? t('All Except') : t('None'),\n              dom.prop('disabled', isEquivalentFilter(state, noneSpec)),\n              dom.on('click', () => columnFilter.setState(noneSpec)),\n              testId('bulk-action'),\n            )\n          ];\n        }),\n        cssSortIcon(\n          'Sort',\n          cssSortIcon.cls('-active', isSortedByCount),\n          dom.on('click', () => isSortedByCount.set(!isSortedByCount.get())),\n        )\n      ),\n      cssItemList(\n        testId('list'),\n        dom.maybe(use => use(filteredValues).length === 0, () => cssNoResults(t(\"No matching values\"))),\n        dom.domComputed(filteredValues, (values) => values.slice(0, model.limitShown).map(([key, value]) => (\n          cssMenuItem(\n            cssLabel(\n              cssCheckboxSquare(\n                {type: 'checkbox'},\n                dom.on('change', (_ev, elem) => {\n                  elem.checked ? columnFilter.add(key) : columnFilter.delete(key);\n                }),\n                (elem) => { elem.checked = columnFilter.includes(key); checkboxMap.set(key, elem); },\n                dom.style('position', 'relative'),\n              ),\n              renderValue(key, value),\n            ),\n            cssItemCount(value.count.toLocaleString(), testId('count')))\n        ))) // Include comma separator\n      ),\n    ];\n  }\n\n  function Footer() {\n    return [\n      cssMenuDivider(),\n      cssMenuFooter(\n        dom.domComputed((use) => {\n          const isAboveLimit = use(isAboveLimitObs);\n          const searchValue = use(isSearchingObs);\n          const otherValues = use(model.otherValues);\n          const anyOtherValues = Boolean(otherValues.length);\n          const valuesBeyondLimit = use(model.valuesBeyondLimit);\n          const isRangeFilter = use(columnFilter.isRange);\n          if (isRangeFilter || use(viewTypeObs) === 'calendarView') {\n            return [];\n          }\n          if (isAboveLimit) {\n            return searchValue ? [\n              buildSummary(t(\"Other Matching\"), valuesBeyondLimit, false, model),\n              buildSummary(t(\"Other Non-Matching\"), otherValues, true, model),\n            ] : [\n              buildSummary(t(\"Other Values\"), concat(otherValues, valuesBeyondLimit), false, model),\n              buildSummary(t(\"Future Values\"), [], true, model),\n            ];\n          } else {\n            return anyOtherValues ? [\n              buildSummary(t('Others'), otherValues, true, model)\n            ] : [\n              buildSummary(t(\"Future Values\"), [], true, model)\n            ];\n          }\n        }),\n        cssFooterButtons(\n          dom('div',\n            cssPrimaryButton('Close', testId('apply-btn'),\n              dom.on('click', () => {\n                reset = true;\n                onClose();\n              }),\n            ),\n            basicButton('Cancel', testId('cancel-btn'),\n              dom.on('click', () => {\n                cancel = true;\n                onClose();\n              }),\n            ),\n            !showAllFiltersButton ? null : cssAllFiltersButton(\n              'All filters',\n              dom.on('click', () => {\n                onClose();\n                commands.allCommands.sortFilterMenuOpen.run(filterInfo.viewSection.getRowId());\n              }),\n              testId('all-filters-btn'),\n            ),\n          ),\n          dom('div',\n            cssPinButton(\n              icon('PinTilted'),\n              cssPinButton.cls('-pinned', model.filterInfo.isPinned),\n              dom.on('click', () => filterInfo.pinned(!filterInfo.pinned())),\n              gristDoc.behavioralPromptsManager.attachTip('filterButtons', {\n                popupOptions: {\n                  attach: null,\n                  modifiers: {\n                    flip: {\n                      behavior: ['right', 'top'],\n                    },\n                  },\n                  placement: 'right',\n                },\n              }),\n              testId('pin-btn'),\n            ),\n          ),\n        )\n      )\n    ];\n  }\n  return filterMenu;\n}\n\nexport interface IRangeInputOptions {\n  isDateFilter: boolean;\n  placeholder: string;\n  isSelected: Observable<boolean>;\n  viewTypeObs: Observable<IColumnFilterViewType>;\n  valueParser?(val: string): any;\n  valueFormatter(val: any): string;\n  nextSelected?(): void;\n}\n\n// The range input with the preset links.\nfunction rangeInput(obs: Observable<number|undefined|IRelativeDateSpec>, opts: IRangeInputOptions,\n                    ...args: DomArg<HTMLDivElement>[]) {\n\n  const buildInput = () => [\n    dom.maybe(use => isRelativeBound(use(obs)), () => relativeToken(obs, opts)),\n    numericInput(obs, opts),\n  ];\n\n  return cssRangeInputContainer(\n\n    dom.maybe(opts.isDateFilter, () => [\n      cssRangeInputIcon('FieldDate'),\n      buildInput(),\n      icon('Dropdown')\n    ]),\n\n    dom.maybe(!opts.isDateFilter, () => [\n      buildInput(),\n    ]),\n\n    cssRangeInputContainer.cls('-relative', use => isRelativeBound(use(obs))),\n    dom.cls('selected', (use) => use(opts.viewTypeObs) === 'calendarView' && use(opts.isSelected)),\n    dom.on('click', () => opts.isSelected.set(true)),\n    (elem) => opts.isDateFilter ? attachRelativeDatesOptions(elem, obs, opts) : null,\n    dom.onKeyDown({\n      Backspace$: () => isRelativeBound(obs.get()) && obs.set(undefined),\n    }),\n    ...args,\n  );\n}\n\n// Attach the date options dropdown to elem.\nfunction attachRelativeDatesOptions(elem: HTMLElement, obs: Observable<number|undefined|IRelativeDateSpec>,\n                                    opts: IRangeInputOptions) {\n  const popupCtl = relativeDatesControl(elem, obs, {\n    ...opts,\n    placement: 'right-start',\n    attach: '.' + cssMenu.className\n  });\n\n  // makes sure the options are shown any time the value changes.\n  const onValueChange = () => {\n    if (opts.isSelected.get()) {\n      popupCtl.open();\n    } else {\n      popupCtl.close();\n    }\n  };\n\n  // toggle popup on click\n  dom.update(elem, [\n    dom.on('click', () => popupCtl.toggle()),\n    dom.autoDispose(opts.isSelected.addListener(onValueChange)),\n    dom.autoDispose(obs.addListener(onValueChange)),\n    dom.onKeyDown({\n      Enter$: (e) => {\n        if (opts.viewTypeObs.get() === 'listView') { return; }\n        if (opts.isSelected.get()) {\n          if (popupCtl.isOpen()) {\n            opts.nextSelected?.();\n          } else {\n            popupCtl.open();\n          }\n        }\n        // Prevents Enter to close filter menu\n        e.stopPropagation();\n      },\n    }),\n  ]);\n\n}\n\nfunction numericInput(obs: Observable<number|undefined|IRelativeDateSpec>,\n                      opts: IRangeInputOptions,\n                      ...args: DomArg<HTMLDivElement>[]) {\n  const valueParser = opts.valueParser || Number;\n  const formatValue = opts.valueFormatter;\n  const placeholder = opts.placeholder;\n  let editMode = false;\n  let inputEl: HTMLInputElement;\n  // handle change\n  const onBlur = () => {\n    onInput.flush();\n    editMode = false;\n    inputEl.value = formatValue(obs.get());\n\n    setTimeout(() => {\n      // Make sure focus is trapped on input during calendar view, so that uses can still use keyboard\n      // to navigate relative date options just after picking a date on the calendar.\n      if (opts.viewTypeObs.get() === 'calendarView' && opts.isSelected.get()) {\n        inputEl.focus();\n      }\n    });\n  };\n  const onInput = debounce(() => {\n    if (isRelativeBound(obs.get())) { return; }\n    editMode = true;\n    const val = inputEl.value ? valueParser(inputEl.value) : undefined;\n    if (val === undefined || typeof val === 'number' && !isNaN(val)) {\n      obs.set(val);\n    }\n  }, 100);\n  // TODO: could be nice to have the cursor positioned at the end of the input\n  return inputEl = cssRangeInput(\n    {inputmode: 'numeric', placeholder, value: formatValue(obs.get())},\n    dom.on('input', onInput),\n    dom.on('blur', onBlur),\n    // keep input content in sync only when no edit are going on.\n    dom.autoDispose(obs.addListener(() => editMode ? null : inputEl.value = formatValue(obs.get()))),\n    dom.autoDispose(opts.isSelected.addListener(val => val && inputEl.focus())),\n\n    dom.onKeyDown({\n      Enter$: () => onBlur(),\n      Tab$: () => onBlur(),\n    }),\n    ...args,\n  );\n}\n\nfunction relativeToken(obs: Observable<number|undefined|IRelativeDateSpec>,\n                       opts: IRangeInputOptions) {\n  return cssTokenContainer(\n    cssTokenToken(\n      dom.text((use) => formatRelBounds(use(obs) as IRelativeDateSpec)),\n      cssDeleteButton(\n        // Ignore mousedown events, so that tokens aren't draggable by the delete button.\n        dom.on('mousedown', (ev) => ev.stopPropagation()),\n        cssDeleteIcon('CrossSmall'),\n        dom.on('click', () => obs.set(undefined)),\n        testId('tokenfield-delete'),\n      ),\n      testId('tokenfield-token'),\n    ),\n  );\n}\n\n\n/**\n * Builds a tri-state checkbox that summaries the state of all the `values`. The special value\n * `Future Values` which turns the filter into an inclusion filter or exclusion filter, can be\n * added to the summary using `switchFilterType`. Uses `label` as label and also expects\n * `model` as the column filter menu model.\n *\n * The checkbox appears checked if all values of the summary are included, unchecked if none, and in\n * the indeterminate state if values are in mixed state.\n *\n * On user clicks, if checkbox is checked, it does uncheck all the values, and if the\n * `switchFilterType` is true it also converts the filter into an inclusion filter. But if the\n * checkbox is unchecked, or in the Indeterminate state, it does check all the values, and if the\n * `switchFilterType` is true it also converts the filter into an exclusion filter.\n */\nfunction buildSummary(label: string|Computed<string>, values: Array<[CellValue, IFilterCount]>,\n                      switchFilterType: boolean, model: ColumnFilterMenuModel) {\n  const columnFilter = model.columnFilter;\n  const checkboxState = Computed.create(\n    null, columnFilter.isInclusionFilter, columnFilter.filterFunc,\n    (_use, isInclusionFilter) => {\n\n      // let's gather all sub options.\n      const subOptions = values.map((val) => ({getState: () => columnFilter.includes(val[0])}));\n      if (switchFilterType) {\n        subOptions.push({getState: () => !isInclusionFilter});\n      }\n\n      // At this point if sub options is still empty let's just return false (unchecked).\n      if (!subOptions.length) { return false; }\n\n      // let's compare the state for first sub options against all the others. If there is one\n      // different, then state should be `Indeterminate`, otherwise, the state will the the same as\n      // the one of the first sub option.\n      const first = subOptions[0].getState();\n      if (some(tail(subOptions), (val) => val.getState() !== first)) { return Indeterminate; }\n      return first;\n\n    }).onWrite((val) => {\n\n      if (switchFilterType) {\n\n        // Note that if `includeFutureValues` is true, we only needs to toggle the filter type\n        // between exclusive and inclusive. Doing this will automatically excludes/includes all\n        // other values, so no need for extra steps.\n        const state = val ?\n          {excluded: model.filteredKeys.get().filter((key) => !columnFilter.includes(key))} :\n          {included: model.filteredKeys.get().filter((key) => columnFilter.includes(key))};\n        columnFilter.setState(state);\n\n      } else {\n\n        const keys = values.map(([key]) => key);\n        if (val) {\n          columnFilter.addMany(keys);\n        } else {\n          columnFilter.deleteMany(keys);\n        }\n      }\n    });\n\n  return cssMenuItem(\n    dom.autoDispose(checkboxState),\n    testId('summary'),\n    labeledTriStateSquareCheckbox(\n      checkboxState,\n      `${label} ${formatUniqueCount(values)}`.trim()\n    ),\n    cssItemCount(formatCount(values), testId('count')),\n  );\n}\n\nfunction formatCount(values: Array<[CellValue, IFilterCount]>) {\n  const count = getCount(values);\n  return count ? count.toLocaleString() : '';\n}\n\nfunction formatUniqueCount(values: Array<[CellValue, IFilterCount]>) {\n  const count = values.length;\n  return count ? '(' + count.toLocaleString() + ')' : '';\n}\n\n/**\n * Returns a new `Map` object to holds pairs of `CellValue` and `IFilterCount`. For `Bool`, `Choice`\n * and `ChoiceList` type of column, the map is initialized with all possible values in order to make\n * sure they get shown to the user.\n */\nfunction getEmptyCountMap(fieldOrColumn: ViewFieldRec|ColumnRec): Map<CellValue, IFilterCount> {\n  const columnType = fieldOrColumn.origCol().type();\n  let values: any[] = [];\n  if (columnType === 'Bool') {\n    values = [true, false];\n  } else if (['Choice', 'ChoiceList'].includes(columnType)) {\n    const options = fieldOrColumn.origCol().widgetOptionsJson;\n    values = options.prop('choices')() ?? [];\n  }\n  return new Map(values.map((v) => [v, {label: String(v), count: 0, displayValue: v}]));\n}\n\nexport interface IColumnFilterMenuOptions {\n  /** If true, shows a button that opens the sort & filter widget menu. */\n  showAllFiltersButton?: boolean;\n  /** Callback for when the filter menu is closed. */\n  onClose?: () => void;\n}\n\nexport interface ICreateFilterMenuParams extends IColumnFilterMenuOptions {\n  openCtl: IOpenController;\n  sectionFilter: SectionFilter;\n  filterInfo: FilterInfo;\n  rowSource: RowSource;\n  tableData: TableData;\n  gristDoc: GristDoc;\n}\n\n/**\n * Returns content for the newly created columnFilterMenu; for use with setPopupToCreateDom().\n */\nexport function createFilterMenu(params: ICreateFilterMenuParams) {\n  const {\n    openCtl,\n    sectionFilter,\n    filterInfo,\n    rowSource,\n    tableData,\n    gristDoc,\n    showAllFiltersButton,\n    onClose = noop\n  } = params;\n\n  // Go through all of our shown and hidden rows, and count them up by the values in this column.\n  const {fieldOrColumn, filter, isPinned} = filterInfo;\n  const columnType = fieldOrColumn.origCol.peek().type.peek();\n  const visibleColumnType = fieldOrColumn.visibleColModel.peek()?.type.peek() || columnType;\n  const {keyMapFunc, labelMapFunc, valueMapFunc} = getMapFuncs(columnType, tableData, fieldOrColumn);\n\n  // range input options\n  const valueParser = (fieldOrColumn as any).createValueParser?.();\n  let colFormatter = fieldOrColumn.visibleColFormatter();\n\n  // Show only the date part of the datetime format in range picker.\n  if (extractTypeFromColType(colFormatter.type) === 'DateTime') {\n    const {docSettings} = colFormatter;\n    const widgetOpts = fieldOrColumn.origCol.peek().widgetOptionsJson();\n    colFormatter = createFormatter('Date', widgetOpts, docSettings);\n  }\n\n  // formatting values for Numeric columns entail issues. For instance with '%' when users type\n  // 0.499 and press enter, the input now shows 50% and there's no way to know what is the actual\n  // underlying value. Maybe worse, both 0.499 and 0.495 format to 50% but they can have different\n  // effects depending on data. Hence as of writing better to keep it only for Date.\n  const valueFormatter = isDateLikeType(visibleColumnType) ?\n    (val: any) => colFormatter.formatAny(val) : undefined;\n\n  function getFilterFunc(col: ViewFieldRec|ColumnRec, colFilter: ColumnFilterFunc|null) {\n    return col.getRowId() === fieldOrColumn.getRowId() ? null : colFilter;\n  }\n  const filterFunc = Computed.create(null, use => sectionFilter.buildFilterFunc(getFilterFunc, use));\n  openCtl.autoDispose(filterFunc);\n\n  const [allRows, hiddenRows] = partition(Array.from(rowSource.getAllRows()), filterFunc.get());\n  const valueCounts = getEmptyCountMap(fieldOrColumn);\n  addCountsToMap(valueCounts, allRows, {keyMapFunc, labelMapFunc, columnType,\n                                        valueMapFunc});\n  addCountsToMap(valueCounts, hiddenRows, {keyMapFunc, labelMapFunc, columnType,\n                                           areHiddenRows: true, valueMapFunc});\n\n  const valueCountsArr = Array.from(valueCounts);\n  const columnFilter = ColumnFilter.create(openCtl, filter.peek(), columnType, visibleColumnType,\n                                           valueCountsArr.map((arr) => arr[0]));\n  sectionFilter.setFilterOverride(fieldOrColumn.origCol().getRowId(), columnFilter); // Will be removed on menu disposal\n  const model = ColumnFilterMenuModel.create(openCtl, {\n    columnFilter,\n    filterInfo,\n    valueCount: valueCountsArr,\n    gristDoc,\n  });\n\n  return columnFilterMenu(openCtl, {\n    model,\n    valueCounts,\n    onClose: () => { openCtl.close(); onClose(); },\n    doSave: (reset: boolean = false) => {\n      const spec = columnFilter.makeFilterJson();\n      const {viewSection} = sectionFilter;\n      viewSection.setFilter(\n        fieldOrColumn.origCol().origColRef(),\n        {filter: spec}\n      );\n      if (reset) {\n        sectionFilter.resetTemporaryRows();\n      }\n\n      // Check if the save was for a new filter, and if that new filter was pinned. If it was, and\n      // it is the second pinned filter in the section, trigger a tip that explains how multiple\n      // filters in the same section work.\n      const isNewPinnedFilter = columnFilter.initialFilterJson === NEW_FILTER_JSON && isPinned();\n      if (isNewPinnedFilter && viewSection.pinnedActiveFilters.get().length === 2) {\n        viewSection.showNestedFilteringPopup.set(true);\n      }\n    },\n    doCancel: () => {\n      const {viewSection} = sectionFilter;\n      if (columnFilter.initialFilterJson === NEW_FILTER_JSON) {\n        viewSection.revertFilter(fieldOrColumn.origCol().origColRef());\n      } else {\n        const initialFilter = columnFilter.initialFilterJson;\n        columnFilter.setState(initialFilter);\n        viewSection.setFilter(\n          fieldOrColumn.origCol().origColRef(),\n          {filter: initialFilter, pinned: model.initialPinned}\n        );\n      }\n    },\n    renderValue: getRenderFunc(columnType, fieldOrColumn),\n    valueParser,\n    valueFormatter,\n    showAllFiltersButton,\n  });\n}\n\n/**\n * Returns three callback functions, `keyMapFunc`, `labelMapFunc`\n * and `valueMapFunc`, which map row ids to cell values, labels\n * and visible col value respectively.\n *\n * The functions vary based on the `columnType`. For example,\n * Reference Lists have a unique `labelMapFunc` that returns a list\n * of all labels in a given cell, rather than a single label.\n *\n * Used by ColumnFilterMenu to compute counts of unique cell\n * values and display them with an appropriate label.\n */\nfunction getMapFuncs(columnType: string, tableData: TableData, fieldOrColumn: ViewFieldRec|ColumnRec) {\n  const keyMapFunc = tableData.getRowPropFunc(fieldOrColumn.colId())!;\n  const labelGetter = tableData.getRowPropFunc(fieldOrColumn.displayColModel().colId())!;\n  const formatter = fieldOrColumn.visibleColFormatter();\n\n  let labelMapFunc: (rowId: number) => string | string[];\n  const valueMapFunc: (rowId: number) => any = (rowId: number) => decodeObject(labelGetter(rowId)!);\n\n  if (isRefListType(columnType)) {\n    labelMapFunc = (rowId: number) => {\n      const maybeLabels = labelGetter(rowId);\n      if (!maybeLabels) { return ''; }\n      const labels = isList(maybeLabels) ? maybeLabels.slice(1) : [maybeLabels];\n      return labels.map(l => formatter.formatAny(l));\n    };\n  } else {\n    labelMapFunc = (rowId: number) => formatter.formatAny(labelGetter(rowId));\n  }\n  return {keyMapFunc, labelMapFunc, valueMapFunc};\n}\n\n/**\n * Returns a callback function for rendering values in a filter menu.\n *\n * For example, Choice and Choice List columns will differ from other\n * column types by rendering their values as colored tokens instead of\n * text.\n */\nfunction getRenderFunc(columnType: string, fieldOrColumn: ViewFieldRec|ColumnRec) {\n  if (['Choice', 'ChoiceList'].includes(columnType)) {\n    const options = fieldOrColumn.widgetOptionsJson.peek();\n    const choiceSet: Set<string> = new Set(options.choices || []);\n    const choiceOptions: ChoiceOptions = options.choiceOptions || {};\n\n    return (_key: CellValue, value: IFilterCount) => {\n      if (value.label === '') {\n        return cssItemValue(value.label);\n      }\n\n      return choiceToken(\n        value.label,\n        {\n          fillColor: choiceOptions[value.label]?.fillColor,\n          textColor: choiceOptions[value.label]?.textColor,\n          fontBold: choiceOptions[value.label]?.fontBold ?? false,\n          fontUnderline: choiceOptions[value.label]?.fontUnderline ?? false,\n          fontItalic: choiceOptions[value.label]?.fontItalic ?? false,\n          fontStrikethrough: choiceOptions[value.label]?.fontStrikethrough ?? false,\n          invalid: !choiceSet.has(value.label),\n        },\n        dom.cls(cssToken.className),\n        testId('choice-token')\n      );\n    };\n  }\n\n  return (key: CellValue, value: IFilterCount) =>\n    cssItemValue(value.label === undefined ? String(key) : value.label);\n}\n\ninterface ICountOptions {\n  columnType: string;\n  // returns the indexing key for the filter\n  keyMapFunc?: (v: any) => any;\n  // returns the string representation of the value (can involves some formatting).\n  labelMapFunc?: (v: any) => any;\n  // returns the underlying value (useful for comparison)\n  valueMapFunc: (v: any) => any;\n  areHiddenRows?: boolean;\n}\n\n/**\n * For each row id in Iterable, adds a key mapped with `keyMapFunc` and a value object with a\n * `label` mapped with `labelMapFunc` and a `count` representing the total number of times the key\n * has been encountered and a `displayValues` mapped with `valueMapFunc`.\n *\n * The optional column type controls how complex cell values are decomposed into keys (e.g. Choice Lists have\n * the possible choices as keys).\n * Note that this logic is replicated in BaseView.prototype.filterByThisCellValue.\n */\nfunction addCountsToMap(valueMap: Map<CellValue, IFilterCount>, rowIds: UIRowId[],\n                        { keyMapFunc = identity, labelMapFunc = identity, columnType,\n                          areHiddenRows = false, valueMapFunc }: ICountOptions) {\n\n  for (const rowId of rowIds) {\n    let key = keyMapFunc(rowId);\n\n    // If row contains a list and the column is a Choice List, treat each choice as a separate key\n    if (isList(key) && (columnType === 'ChoiceList')) {\n      const list = decodeObject(key) as unknown[];\n      if (!list.length) {\n        // If the list is empty, add an item for the whole list, otherwise the row will be missing from filters.\n        addSingleCountToMap(valueMap, '', () => '', () => '', areHiddenRows);\n      }\n      for (const item of list) {\n        addSingleCountToMap(valueMap, item, () => item, () => item, areHiddenRows);\n      }\n      continue;\n    }\n\n    // If row contains a Reference List, treat each reference as a separate key\n    if (isList(key) && isRefListType(columnType)) {\n      const refIds = decodeObject(key) as unknown[];\n      if (!refIds.length) {\n        // If the list is empty, add an item for the whole list, otherwise the row will be missing from filters.\n        addSingleCountToMap(valueMap, null, () => null, () => null, areHiddenRows);\n      }\n      const refLabels = labelMapFunc(rowId);\n      const displayValues = valueMapFunc(rowId);\n      refIds.forEach((id, i) => {\n        addSingleCountToMap(valueMap, id, () => refLabels[i], () => displayValues[i], areHiddenRows);\n      });\n      continue;\n    }\n    // For complex values, serialize the value to allow them to be properly stored\n    if (Array.isArray(key)) { key = JSON.stringify(key); }\n    addSingleCountToMap(valueMap, key, () => labelMapFunc(rowId), () => valueMapFunc(rowId), areHiddenRows);\n  }\n}\n\n/**\n * Adds the `value` to `valueMap` using `labelGetter` to get the label and increments `count` unless\n * isHiddenRow is true.\n */\nfunction addSingleCountToMap(valueMap: Map<CellValue, IFilterCount>, value: any, label: () => any,\n                             displayValue: () => any, isHiddenRow: boolean) {\n  if (!valueMap.has(value)) {\n    valueMap.set(value, { label: label(), count: 0, displayValue: displayValue() });\n  }\n  if (!isHiddenRow) {\n    valueMap.get(value)!.count++;\n  }\n}\n\nfunction getCount(values: Array<[CellValue, IFilterCount]>) {\n   return values.reduce((acc, val) => acc + val[1].count, 0);\n}\n\nconst defaultPopupOptions: IPopupOptions = {\n  placement: 'bottom-start',\n  boundaries: 'viewport',\n  trigger: ['click'],\n};\n\ninterface IColumnFilterPopupOptions {\n  // Options to pass to the popup component.\n  popupOptions?: IPopupOptions;\n}\n\ntype IAttachColumnFilterMenuOptions = IColumnFilterPopupOptions & IColumnFilterMenuOptions;\n\n// Helper to attach the column filter menu.\nexport function attachColumnFilterMenu(\n  filterInfo: FilterInfo,\n  options: IAttachColumnFilterMenuOptions = {}\n): DomElementMethod {\n  const {popupOptions, ...filterMenuOptions} = options;\n  const popupOptionsWithDefaults = {...defaultPopupOptions, ...popupOptions};\n  return (elem) => {\n    const instance = filterInfo.viewSection.viewInstance();\n    if (instance && instance.createFilterMenu) { // Should be set if using BaseView\n      setPopupToCreateDom(elem, ctl => instance.createFilterMenu(\n        ctl, filterInfo, filterMenuOptions), popupOptionsWithDefaults);\n    }\n  };\n}\n\nconst cssMenu = styled('div', `\n  display: flex;\n  flex-direction: column;\n  min-width: 252px;\n  max-width: 400px;\n  max-height: 90vh;\n  outline: none;\n  background-color: ${theme.menuBg};\n  padding-top: 0;\n  padding-bottom: 12px;\n`);\nconst cssMenuHeader = styled('div', `\n  height: 40px;\n  flex-shrink: 0;\n\n  display: flex;\n  align-items: center;\n\n  margin: 0 16px;\n`);\nconst cssSelectAll = styled(textButton, `\n  --icon-color: ${theme.controlFg};\n`);\nconst cssDotSeparator = styled('span', `\n  color: ${theme.controlFg};\n  margin: 0 4px;\n  user-select: none;\n`);\nconst cssMenuDivider = styled(menuDivider, `\n  flex-shrink: 0;\n  margin: 0;\n`);\nconst cssItemList = styled('div', `\n  flex-shrink: 1;\n  overflow: auto;\n  min-height: 80px;\n  margin-top: 4px;\n  padding-bottom: 8px;\n`);\nconst cssMenuItem = styled('div', `\n  display: flex;\n  padding: 8px 16px;\n`);\nconst cssLink = textButton;\nconst cssLinkRow = styled(cssMenuItem, `\n  column-gap: 12px;\n  padding-top: 0;\n  padding-bottom: 16px;\n`);\nexport const cssItemValue = styled(cssLabelText, `\n  margin-right: 12px;\n  white-space: pre;\n`);\nconst cssItemCount = styled('div', `\n  flex-grow: 1;\n  align-self: normal;\n  text-align: right;\n  color: ${theme.lightText};\n`);\nconst cssMenuFooter = styled('div', `\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  padding-top: 4px;\n`);\nconst cssFooterButtons = styled('div', `\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 16px;\n`);\nconst cssPrimaryButton = styled(primaryButton, `\n  margin-right: 8px;\n`);\nconst cssAllFiltersButton = styled(textButton, `\n  margin-left: 8px;\n`);\nconst cssSearch = styled(input, `\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n  flex-grow: 1;\n  min-width: 1px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  font-size: ${vars.mediumFontSize};\n\n  margin: 0px 16px 0px 8px;\n  padding: 0px;\n  border: none;\n  outline: none;\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n`);\nconst cssSearchIcon = styled(icon, `\n  --icon-color: ${theme.lightText};\n  flex-shrink: 0;\n  margin-left: auto;\n  margin-right: 4px;\n`);\nconst cssNoResults = styled(cssMenuItem, `\n  font-style: italic;\n  color: ${theme.lightText};\n  justify-content: center;\n`);\nconst cssSortIcon = styled(icon, `\n  --icon-color: ${theme.controlSecondaryFg};\n  margin-left: auto;\n  &-active {\n    --icon-color: ${theme.controlFg}\n  }\n`);\nconst cssLabel = styled(cssCheckboxLabel, `\n  align-items: center;\n  font-weight: initial;   /* negate bootstrap */\n`);\nconst cssToken = styled('div', `\n  margin-left: 8px;\n  margin-right: 12px;\n`);\nconst cssRangeContainer = styled(cssMenuItem, `\n  display: flex;\n  align-items: center;\n  row-gap: 6px;\n  flex-direction: column;\n  padding: 16px 16px;\n`);\nconst cssRangeInputContainer = styled('div', `\n  position: relative;\n  width: 100%;\n  display: flex;\n  background-color: ${theme.inputBg};\n  height: 30px;\n  width: 100%;\n  border-radius: 3px;\n  border: 1px solid ${theme.inputBorder};\n  outline: none;\n  padding: 5px;\n  &.selected {\n    border: 1px solid ${theme.inputValid};\n  }\n  &-relative input {\n    padding: 0;\n    max-width: 0;\n  }\n`);\nconst cssRangeInputIcon = cssOptionRowIcon;\nconst cssRangeInput = styled(cssInput, `\n  height: unset;\n  border: none;\n  padding: 0;\n  width: unset;\n  flex-grow: 1;\n`);\nconst cssTokenToken = styled(cssTokenTokenBase, `\n  height: 18px;\n  line-height: unset;\n  align-self: center;\n  cursor: default;\n`);\nconst cssTokenContainer = styled('div', `\n  width: 100%;\n  display: flex;\n  outline: none;\n`);\n","/**\n *\n * Returns a popup control allowing to open/close a popup using as content the element returned by\n * the given func. Note that the `trigger` option is ignored by this function and that the default\n * of the `attach` option is `body` instead of `null`.\n *\n * It allows you to bind the creation of the popup to a menu item as follow:\n *   const ctl = popupControl(triggerElem, (ctl) => buildDom(ctl));\n *   ...\n *   menuItem(elem => ctl.open(), 'do stuff...')\n */\n\nimport { domDispose } from \"grainjs\";\nimport { IOpenController, IPopupDomCreator, IPopupOptions, PopupControl } from \"popweasel\";\n\nexport function popupControl(reference: Element, domCreator: IPopupDomCreator, options: IPopupOptions): PopupControl {\n\n  function openFunc(openCtl: IOpenController) {\n    const content = domCreator(openCtl);\n    function dispose() { domDispose(content); }\n    return {content, dispose};\n  }\n\n  const ctl = PopupControl.create(null);\n\n  ctl.attachElem(reference, openFunc, {\n    attach: 'body',\n    boundaries: 'viewport',\n    ...options,\n    trigger: undefined\n  });\n\n  return ctl;\n}\n","import {makeT} from 'app/client/lib/localization';\nimport type {ColumnRec} from 'app/client/models/entities/ColumnRec';\nimport type {TableRec} from 'app/client/models/entities/TableRec';\nimport {reportError} from 'app/client/models/errors';\nimport {cssRow} from 'app/client/ui/RightPanelStyles';\nimport {shadowScroll} from 'app/client/ui/shadowScroll';\nimport {basicButton, primaryButton} from \"app/client/ui2018/buttons\";\nimport {labeledSquareCheckbox} from \"app/client/ui2018/checkbox\";\nimport {testId, theme} from 'app/client/ui2018/cssVars';\nimport {icon} from \"app/client/ui2018/icons\";\nimport {menuCssClass, menuDivider} from 'app/client/ui2018/menus';\nimport {cssSelectBtn} from 'app/client/ui2018/select';\nimport {CellValue} from 'app/common/DocActions';\nimport {isEmptyList, RecalcWhen} from 'app/common/gristTypes';\nimport {nativeCompare} from 'app/common/gutil';\nimport {decodeObject, encodeObject} from 'app/plugin/objtypes';\nimport {Computed, dom, IDisposableOwner, MultiHolder, Observable, styled} from 'grainjs';\nimport {cssMenu, cssMenuItem, defaultMenuOptions, IOpenController, setPopupToCreateDom} from \"popweasel\";\nimport isEqual = require('lodash/isEqual');\n\nconst t = makeT('TriggerFormulas');\n\n/**\n * Build UI to select triggers for formulas in data columns (such for default values).\n */\nexport function buildFormulaTriggers(owner: MultiHolder, column: ColumnRec, options: {\n  notTrigger?: Observable<boolean>|null // if column is not yet a trigger,\n  disabled?: Observable<boolean>\n}) {\n  // Set up observables to translate between the UI representation of triggers, and what we\n  // actually store.\n  // - We store the pair (recalcWhen, recalcDeps). When recalcWhen is DEFAULT, recalcDeps lists\n  //   the fields to depend on; in other cases, recalcDeps is not used.\n  // - We show two checkboxes:\n  //   [] Apply to new records -- toggles between recalcWhen of NEVER and DEFAULT.\n  //   [] Apply on record changes -- when turned on, allows selecting fields to depend on. When\n  //      \"Any field\" is selected, it toggles between recalcWhen of MANUAL_UPDATES and DEFAULT.\n\n  function isApplyOnChangesChecked(recalcWhen: RecalcWhen, recalcDeps: CellValue): boolean {\n    return recalcWhen === RecalcWhen.MANUAL_UPDATES ||\n      (recalcWhen === RecalcWhen.DEFAULT && recalcDeps != null && !isEmptyList(recalcDeps));\n  }\n\n  async function toggleApplyOnChanges(value: boolean) {\n    // Whether turning on or off, we reset to the default state.\n    await setRecalc(RecalcWhen.DEFAULT, null);\n    forceApplyOnChanges.set(value);\n  }\n\n  // The state of \"Apply to new records\" checkbox. Only writable when applyOnChanges is false, so\n  // only controls if recalcWhen should be DEFAULT or NEVER.\n  const applyToNew = Computed.create(owner, use => use(column.recalcWhen) !== RecalcWhen.NEVER)\n    .onWrite(value => setRecalc(value ? RecalcWhen.DEFAULT : RecalcWhen.NEVER, null));\n\n  // If true, mark 'Apply on record changes' checkbox, overriding stored state.\n  const forceApplyOnChanges = Observable.create(owner, false);\n\n  // The actual state of the checkbox. Clicking it toggles forceApplyOnChanges, and also resets\n  // recalcWhen/recalcDeps to its default state.\n  const applyOnChanges = Computed.create(owner,\n    use => (use(forceApplyOnChanges) || isApplyOnChangesChecked(use(column.recalcWhen), use(column.recalcDeps))))\n    .onWrite(toggleApplyOnChanges);\n\n  // Helper to update column's recalcWhen and recalcDeps properties.\n  async function setRecalc(when: RecalcWhen, deps: number[]|null) {\n    if (when !== column.recalcWhen.peek() || deps !== column.recalcDeps.peek()) {\n      return column._table.sendTableAction(\n        [\"UpdateRecord\", column.id.peek(), {recalcWhen: when, recalcDeps: encodeObject(deps)}]\n      );\n    }\n  }\n\n  const docModel = column._table.docModel;\n  const summaryText = Computed.create(owner, use => {\n    if (use(column.recalcWhen) === RecalcWhen.MANUAL_UPDATES) {\n      return t(\"Any field\");\n    }\n    const deps = decodeObject(use(column.recalcDeps)) as number[]|null;\n    if (!deps || deps.length === 0) { return ''; }\n    return deps.map(dep => use(docModel.columns.getRowModel(dep)?.label)).join(\", \");\n  });\n\n\n  const changesDisabled = Computed.create(owner, use => {\n    return Boolean(\n      (options.disabled && use(options.disabled)) ||\n      (options.notTrigger && use(options.notTrigger))\n    );\n  });\n\n  const newRowsDisabled = Computed.create(owner, use => {\n    return Boolean(\n      use(applyOnChanges) || use(changesDisabled)\n    );\n  });\n\n  return [\n    cssRow(\n      labeledSquareCheckbox(\n        applyToNew,\n        t(\"Apply to new records\"),\n        dom.boolAttr('disabled', newRowsDisabled),\n        testId('field-formula-apply-to-new'),\n      ),\n    ),\n    cssRow(\n      labeledSquareCheckbox(\n        applyOnChanges,\n        dom.text(use => use(applyOnChanges) ?\n          t(\"Apply on changes to:\") :\n          t(\"Apply on record changes\")\n        ),\n        dom.boolAttr('disabled', changesDisabled),\n        testId('field-formula-apply-on-changes'),\n      ),\n    ),\n    dom.maybe(applyOnChanges, () =>\n      cssIndentedRow(\n        cssSelectBtn(\n          cssSelectSummary(dom.text(summaryText)),\n          icon('Dropdown'),\n          testId('field-triggers-select'),\n          dom.cls('disabled', use => !!options.disabled && use(options.disabled)),\n          elem => {\n            setPopupToCreateDom(elem, ctl => buildTriggerSelectors(ctl, column.table.peek(), column, setRecalc),\n              {...defaultMenuOptions, placement: 'bottom-end'});\n          }\n        )\n      )\n    )\n  ];\n}\n\nfunction buildTriggerSelectors(ctl: IOpenController, tableRec: TableRec, column: ColumnRec,\n  setRecalc: (when: RecalcWhen, deps: number[]|null) => Promise<void>\n) {\n  // ctl may be used as an owner for disposable object. Just give is a clearer name for this.\n  const owner: IDisposableOwner = ctl;\n\n  // The initial set of selected columns (as a set of rowIds).\n  const initialDeps = new Set(decodeObject(column.recalcDeps.peek()) as number[]|null);\n\n  // State of the \"Any field\" checkbox.\n  const allUpdates = Observable.create(owner, column.recalcWhen.peek() === RecalcWhen.MANUAL_UPDATES);\n\n  // Collect all the ColumnRec objects for available columns in this table.\n  const showColumns = tableRec.columns.peek().peek().filter(col => !col.isHiddenCol.peek());\n  showColumns.sort((a, b) => nativeCompare(a.label.peek(), b.label.peek()));\n\n  // Array of observables for the checkbox for each column. There should never be so many\n  // columns as to make this a performance problem.\n  const columnsState = showColumns.map(col => Observable.create(owner, initialDeps.has(col.id.peek())));\n\n  // The \"Current field\" checkbox is merely one of the column checkboxes.\n  const current = columnsState.find((col, index) => showColumns[index].id.peek() === column.id.peek())!;\n\n  // If user checks the \"Any field\" checkbox, all the others should get unchecked.\n  owner.autoDispose(allUpdates.addListener(value => {\n    if (value) {\n      columnsState.forEach(obs => obs.set(false));\n    }\n  }));\n\n  // Computed results based on current selections.\n  const when = Computed.create(owner, use => use(allUpdates) ? RecalcWhen.MANUAL_UPDATES : RecalcWhen.DEFAULT);\n  const deps = Computed.create(owner, use => {\n    return use(allUpdates) ? null :\n      showColumns.filter((col, index) => use(columnsState[index])).map(col => col.id.peek());\n  });\n\n  // Whether the selections changed, i.e. warrant saving.\n  const isChanged = Computed.create(owner, (use) => {\n    return use(when) !== use(column.recalcWhen) || !isEqual(new Set(use(deps)), initialDeps);\n  });\n\n  let shouldSave = true;\n  function close(_shouldSave: boolean) {\n    shouldSave = _shouldSave;\n    ctl.close();\n  }\n\n  function onClose() {\n    if (shouldSave && isChanged.get()) {\n      setRecalc(when.get(), deps.get()).catch(reportError);\n    }\n  }\n\n  return cssSelectorMenu(\n    { tabindex: '-1' }, // Allow menu to be focused\n    testId('field-triggers-dropdown'),\n    dom.cls(menuCssClass),\n    dom.onDispose(onClose),\n    dom.onKeyDown({\n      Enter: () => close(true),\n      Escape: () => close(false)\n    }),\n    // Set focus on open, so that keyboard events work.\n    elem => { setTimeout(() => elem.focus(), 0); },\n\n    cssItemsFixed(\n      cssSelectorItem(\n        labeledSquareCheckbox(current,\n          [t(\"Current field \"), cssSelectorNote('(data cleaning)')],\n          dom.boolAttr('disabled', allUpdates),\n        ),\n      ),\n      menuDivider(),\n      cssSelectorItem(\n        labeledSquareCheckbox(allUpdates,\n          [`${t(\"Any field\")} `, cssSelectorNote('(except formulas)')]\n        ),\n      ),\n    ),\n    cssItemsList(\n      showColumns.map((col, index) =>\n        cssSelectorItem(\n          labeledSquareCheckbox(columnsState[index],\n            col.label.peek(),\n            dom.boolAttr('disabled', allUpdates),\n          ),\n        )\n      ),\n    ),\n    cssItemsFixed(\n      cssSelectorFooter(\n        dom.maybe(isChanged, () =>\n          primaryButton(t(\"OK\"),\n            dom.on('click', () => close(true)),\n            testId('trigger-deps-apply')\n          ),\n        ),\n        basicButton(dom.text(use => use(isChanged) ? t(\"Cancel\") : t(\"Close\")),\n          dom.on('click', () => close(false)),\n          testId('trigger-deps-cancel')\n        ),\n      )\n    ),\n  );\n}\n\nconst cssIndentedRow = styled(cssRow, `\n  margin-left: 40px;\n`);\n\nconst cssSelectSummary = styled('div', `\n  flex: 1 1 0px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  &:empty::before {\n    content: \"Select fields\";\n    color: ${theme.selectButtonPlaceholderFg};\n  }\n`);\n\n\nconst cssSelectorMenu = styled(cssMenu, `\n  display: flex;\n  flex-direction: column;\n  max-height: calc(max(300px, 95vh - 300px));\n  max-width: 400px;\n  padding-bottom: 0px;\n`);\n\nconst cssItemsList = styled(shadowScroll, `\n  flex: auto;\n  min-height: 80px;\n  border-top: 1px solid ${theme.menuBorder};\n  border-bottom: 1px solid ${theme.menuBorder};\n  margin-top: 8px;\n  padding: 8px 0;\n`);\n\nconst cssItemsFixed = styled('div', `\n  flex: none;\n`);\n\nconst cssSelectorItem = styled(cssMenuItem, `\n  justify-content: flex-start;\n  align-items: center;\n  display: flex;\n  padding: 8px 16px;\n  white-space: nowrap;\n`);\n\nconst cssSelectorNote = styled('span', `\n  color: ${theme.lightText};\n`);\n\nconst cssSelectorFooter = styled(cssSelectorItem, `\n  justify-content: space-between;\n  margin: 3px 0;\n`);\n","import {makeT} from 'app/client/lib/localization';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {BEHAVIOR, ColumnRec} from 'app/client/models/entities/ColumnRec';\nimport {buildHighlightedCode, cssCodeBlock} from 'app/client/ui/CodeHighlight';\nimport {GristTooltips} from 'app/client/ui/GristTooltips';\nimport {cssBlockedCursor, cssLabel, cssRow} from 'app/client/ui/RightPanelStyles';\nimport {withInfoTooltip} from 'app/client/ui/tooltips';\nimport {buildFormulaTriggers} from 'app/client/ui/TriggerFormulas';\nimport {textButton} from 'app/client/ui2018/buttons';\nimport {testId, theme} from 'app/client/ui2018/cssVars';\nimport {textInput} from 'app/client/ui2018/editableLabel';\nimport {cssIconButton, icon} from 'app/client/ui2018/icons';\nimport {IconName} from 'app/client/ui2018/IconList';\nimport {selectMenu, selectOption, selectTitle} from 'app/client/ui2018/menus';\nimport {createFormulaErrorObs, cssError} from 'app/client/widgets/FormulaEditor';\nimport {sanitizeIdent} from 'app/common/gutil';\nimport {Theme} from 'app/common/ThemePrefs';\nimport {CursorPos} from 'app/plugin/GristAPI';\nimport {bundleChanges, Computed, dom, DomContents, DomElementArg, fromKo, MultiHolder,\n        Observable, styled} from 'grainjs';\nimport * as ko from 'knockout';\n\nconst t = makeT('FieldConfig');\n\nexport function buildNameConfig(\n  owner: MultiHolder,\n  origColumn: ColumnRec,\n  cursor: ko.Computed<CursorPos>,\n  disabled: ko.Computed<boolean> // Whether the name is editable (it's not editable for multiple selected columns).\n) {\n  const untieColId = origColumn.untieColIdFromLabel;\n\n  const editedLabel = Observable.create(owner, '');\n  const editableColId = Computed.create(owner, editedLabel, (use, edited) =>\n    '$' + (edited ? sanitizeIdent(edited) : use(origColumn.colId)));\n  const saveColId = (val: string) => origColumn.colId.saveOnly(val.startsWith('$') ? val.slice(1) : val);\n\n  const isSummaryTable = Computed.create(owner, use => Boolean(use(use(origColumn.table).summarySourceTable)));\n  // We will listen to cursor position and force a blur event on\n  // the text input, which will trigger save before the column observable\n  // will change its value.\n  // Otherwise, blur will be invoked after column change and save handler will\n  // update a different column.\n  let editor: HTMLInputElement | undefined;\n  owner.autoDispose(\n   cursor.subscribe(() => {\n     editor?.blur();\n   })\n  );\n\n  const toggleUntieColId = () => {\n    if (!origColumn.disableModify.peek() && !disabled.peek()) {\n      untieColId.saveOnly(!untieColId.peek()).catch(reportError);\n    }\n  };\n\n  return [\n    cssLabel(t(\"COLUMN LABEL AND ID\")),\n    cssRow(\n      dom.cls(cssBlockedCursor.className, origColumn.disableModify),\n      cssColLabelBlock(\n        editor = cssInput(fromKo(origColumn.label),\n          async val => { await origColumn.label.saveOnly(val); editedLabel.set(''); },\n          dom.on('input', (ev, elem) => { if (!untieColId.peek()) { editedLabel.set(elem.value); } }),\n          dom.boolAttr('readonly', use => use(origColumn.disableModify) || use(disabled)),\n          testId('field-label'),\n        ),\n        cssInput(editableColId,\n          saveColId,\n          dom.boolAttr('readonly',\n            use => use(disabled) || use(origColumn.disableModify) || !use(origColumn.untieColIdFromLabel)),\n          cssCodeBlock.cls(''),\n          {style: 'margin-top: 8px'},\n          testId('field-col-id'),\n        ),\n      ),\n      cssColTieBlock(\n        cssColTieConnectors(),\n        cssToggleButton(icon('FieldReference'),\n          cssToggleButton.cls('-selected', (use) => !use(untieColId)),\n          dom.on('click', toggleUntieColId),\n          cssToggleButton.cls(\"-disabled\", use => use(origColumn.disableModify) || use(disabled)),\n          testId('field-derive-id')\n        ),\n      )\n    ),\n    dom.maybe(isSummaryTable,\n      () => cssRow(t(\"Column options are limited in summary tables.\")))\n  ];\n}\n\nexport interface BuildEditorOptions {\n  // Element to attach to.\n  refElem: Element;\n  // Should the detach button be shown?\n  canDetach: boolean;\n  // Simulate user typing on the cell - open editor with an initial value.\n  editValue?: string;\n  // Custom save handler.\n  onSave?: SaveHandler;\n  // Custom cancel handler.\n  onCancel?: () => void;\n}\n\ntype SaveHandler = (column: ColumnRec, formula: string) => Promise<void>;\n\ntype BuildEditor = (options: BuildEditorOptions) => void;\n\nexport function buildFormulaConfig(\n  owner: MultiHolder, origColumn: ColumnRec, gristDoc: GristDoc, buildEditor: BuildEditor\n) {\n\n  // If we can't modify anything about the column.\n  const disableModify = Computed.create(owner, use => use(origColumn.disableModify));\n\n  // Intermediate state - user wants to specify formula, but haven't done yet\n  const maybeFormula = Observable.create(owner, false);\n\n  // Intermediate state - user wants to specify formula, but haven't done yet\n  const maybeTrigger = Observable.create(owner, false);\n\n  // If this column belongs to a summary table.\n  const isSummaryTable = Computed.create(owner, use => Boolean(use(use(origColumn.table).summarySourceTable)));\n\n  // Column behavior. There are 3 types of behaviors:\n  // - empty: isFormula and formula == ''\n  // - formula: isFormula and formula != ''\n  // - data: not isFormula nd formula == ''\n  const behavior = Computed.create<BEHAVIOR|null>(owner, (use) => {\n    // When no id column is invalid, show nothing.\n    if (!use(origColumn.id)) { return null; }\n    // Column is a formula column, when it is a formula column with valid formula or will be a formula.\n    if (use(origColumn.isRealFormula) || use(maybeFormula)) { return \"formula\"; }\n    // If column is not empty, or empty but wants to be a trigger\n    if (use(maybeTrigger) || !use(origColumn.isEmpty)) { return \"data\"; }\n    return \"empty\";\n  });\n\n  // Reference to current editor, we will open it when user wants to specify a formula or trigger.\n  // And close it dispose it when user opens up behavior menu.\n  let formulaField: HTMLElement|null = null;\n\n  // Helper function to clear temporary state (will be called when column changes or formula editor closes)\n  const clearState = () => bundleChanges(() => {\n    // For a detached editor, we may have already been disposed when user switched page.\n    if (owner.isDisposed()) { return; }\n    maybeFormula.set(false);\n    maybeTrigger.set(false);\n    formulaField = null;\n  });\n\n  // Clear state when column has changed\n  owner.autoDispose(origColumn.id.subscribe(clearState));\n  owner.autoDispose(origColumn.formula.subscribe(clearState));\n  owner.autoDispose(origColumn.isFormula.subscribe(clearState));\n\n  // User might have selected multiple columns, in that case all elements will be disabled, except the menu.\n  // If user has selected only empty or formula columns, we offer to reset all or to convert to data.\n  // If user has selected any data column, we offer only to reset all.\n  const viewSection = Computed.create(owner, use => {\n    return use(gristDoc.currentView)?.viewSection;\n  });\n  const isMultiSelect = Computed.create(owner, use => {\n    const vs = use(viewSection);\n    return !!vs && use(vs.selectedFields).length > 1;\n  });\n\n  // If all columns are empty or have formulas.\n  const multiType = Computed.create(owner, use => {\n    if (!use(isMultiSelect)) { return false; }\n    const vs = use(viewSection);\n    if (!vs) { return false; }\n    return use(vs.columnsBehavior);\n  });\n\n  // If all columns are empty or have formulas.\n  const isFormulaLike = Computed.create(owner, use => {\n    if (!use(isMultiSelect)) { return false; }\n    const vs = use(viewSection);\n    if (!vs) { return false; }\n    return use(vs.columnsAllIsFormula);\n  });\n\n  // Helper to get all selected columns refs.\n  const selectedColumns = () => viewSection.get()?.selectedFields.peek().map(f => f.column.peek()) || [];\n  const selectedColumnIds = () => selectedColumns().map(f => f.id.peek()) || [];\n\n   // Clear and reset all option for multiple selected columns.\n  const clearAndResetAll = () => selectOption(\n    () => Promise.all([\n      gristDoc.clearColumns(selectedColumnIds())\n    ]),\n    'Clear and reset', 'CrossSmall'\n  );\n\n  // Convert to data option for multiple selected columns.\n  const convertToDataAll = () => selectOption(\n    () => gristDoc.convertIsFormula(selectedColumnIds(), {toFormula: false, noRecalc: true}),\n    'Convert columns to data', 'Database',\n    dom.cls('disabled', isSummaryTable)\n  );\n\n  // Menu helper that will show normal menu with some default options\n  const menu = (label: DomContents, options: DomElementArg[]) =>\n    cssRow(\n      selectMenu(\n        label,\n        () => !isMultiSelect.get() ? options : [\n          isFormulaLike.get() ? convertToDataAll() : null,\n          clearAndResetAll(),\n        ],\n        testId(\"field-behaviour\"),\n        // HACK: Menu helper will add tabindex to this element, which will make\n        // this element focusable and will steal focus from clipboard. This in turn,\n        // will not dispose the formula editor when menu is clicked.\n        (el) => el.removeAttribute(\"tabindex\"),\n        dom.cls(cssBlockedCursor.className, disableModify),\n        dom.cls(\"disabled\", disableModify)),\n    );\n\n\n  // Behavior label\n  const behaviorName = Computed.create(owner, behavior, (use, type) => {\n    if (use(isMultiSelect)) {\n      const commonType = use(multiType);\n      if (commonType === 'formula') { return t('Formula Columns', {count: 2}); }\n      if (commonType === 'data') { return t('Data Columns', {count: 2}); }\n      if (commonType === 'mixed') { return t('Mixed Behavior'); }\n      return t('Empty Columns', {count: 2});\n    } else {\n      if (type === 'formula') { return t('Formula Columns', {count: 1}); }\n      if (type === 'data') { return t('Data Columns', {count: 1}); }\n      return t('Empty Columns', {count: 1});\n    }\n  });\n  const behaviorIcon = Computed.create<IconName>(owner, (use) => {\n    return use(behaviorName) === t('Data Columns', {count: 2}) ||\n           use(behaviorName) === t('Data Columns', {count: 1}) ? \"Database\" : \"Script\";\n  });\n  const behaviorLabel = () => selectTitle(behaviorName, behaviorIcon);\n\n  // Actions on select menu:\n\n  // Converts data column to formula column.\n  const convertDataColumnToFormulaOption = () => selectOption(\n    () => (maybeFormula.set(true), formulaField?.focus()),\n    t(\"Clear and make into formula\"), 'Script');\n\n  // Converts to empty column and opens up the editor. (label is the same, but this is used when we have no formula)\n  const convertTriggerToFormulaOption = () => selectOption(\n    () => gristDoc.convertIsFormula([origColumn.id.peek()], {toFormula: true, noRecalc: true}),\n    t(\"Clear and make into formula\"), 'Script');\n\n  // Convert column to data.\n  // This method is also available through a text button.\n  const convertToData = () => gristDoc.convertIsFormula([origColumn.id.peek()], {toFormula: false, noRecalc: true});\n  const convertToDataOption = () => selectOption(\n    convertToData,\n    t(\"Convert column to data\"), 'Database',\n    dom.cls('disabled', isSummaryTable)\n    );\n\n  // Clears the column\n  const clearAndResetOption = () => selectOption(\n    () => gristDoc.clearColumns([origColumn.id.peek()]),\n    t(\"Clear and reset\"), 'CrossSmall');\n\n  // Actions on text buttons:\n\n  // Tries to convert data column to a trigger column.\n  const convertDataColumnToTriggerColumn = () => {\n    maybeTrigger.set(true);\n    // Open the formula editor.\n    formulaField?.focus();\n  };\n\n  // Converts formula column to trigger formula column.\n  const convertFormulaToTrigger = () =>\n    gristDoc.convertIsFormula([origColumn.id.peek()], {toFormula: false, noRecalc: false});\n\n  const setFormula = () => (maybeFormula.set(true), formulaField?.focus());\n  const setTrigger = () => (maybeTrigger.set(true), formulaField?.focus());\n\n  // Actions on save formula. Those actions are using column that comes from FormulaEditor.\n  // Formula editor scope is broader then RightPanel, it can be disposed after RightPanel is closed,\n  // and in some cases, when window is in background, it won't be disposed at all when panel is closed.\n\n  // Converts column to formula column.\n  const onSaveConvertToFormula = async (column: ColumnRec, formula: string) => {\n    // For a detached editor, we may have already been disposed when user switched page.\n    if (owner.isDisposed()) { return; }\n    // For non formula column, we will not convert it to formula column when expression is empty,\n    // as it means we were trying to convert data column to formula column, but changed our mind.\n    const notBlank = Boolean(formula);\n    // But when the column is a formula column, empty formula expression is acceptable (it will\n    // convert column to empty column).\n    const trueFormula = column.formula.peek();\n    if (notBlank || trueFormula) { await gristDoc.convertToFormula(column.id.peek(), formula); }\n    // Clear state only when owner was not disposed\n    if (!owner.isDisposed()) {\n      clearState();\n    }\n  };\n\n  // Updates formula or convert column to trigger formula column if necessary.\n  const onSaveConvertToTrigger = async (column: ColumnRec, formula: string) => {\n    // If formula expression is not empty, and column was plain data column (without a formula)\n    if (formula && !column.hasTriggerFormula.peek()) {\n      // then convert column to a trigger formula column\n      await gristDoc.convertToTrigger(column.id.peek(), formula);\n    } else if (column.hasTriggerFormula.peek()) {\n      // else, if it was already a trigger formula column, just update formula.\n      await gristDoc.updateFormula(column.id.peek(), formula);\n    }\n    // Clear state only when owner was not disposed\n    if (!owner.isDisposed()) {\n      clearState();\n    }\n  };\n\n  // Should we disable all other action buttons and formula editor. For now\n  // we will disable them when multiple columns are selected, or any of the column selected\n  // can't be modified.\n  const disableOtherActions = Computed.create(owner, use => use(disableModify) || use(isMultiSelect));\n\n  const errorMessage = createFormulaErrorObs(owner, gristDoc, origColumn);\n  // Helper that will create different flavors for formula builder.\n  const formulaBuilder = (onSave: SaveHandler, canDetach?: boolean) => [\n    cssRow(formulaField = buildFormula(\n      origColumn,\n      buildEditor,\n      {\n        gristTheme: gristDoc.currentTheme,\n        disabled: disableOtherActions,\n        canDetach,\n        onSave,\n        onCancel: clearState,\n      })),\n    dom.maybe(errorMessage, errMsg => cssRow(cssError(errMsg), testId('field-error-count'))),\n  ];\n\n  return dom.maybe(behavior, (type: BEHAVIOR) => [\n      cssLabel(t(\"COLUMN BEHAVIOR\")),\n      ...(type === \"empty\" ? [\n        menu(behaviorLabel(), [\n          convertToDataOption(),\n        ]),\n        cssEmptySeparator(),\n        cssRow(textButton(\n          t(\"Set formula\"),\n          dom.on(\"click\", setFormula),\n          dom.prop(\"disabled\", disableOtherActions),\n          testId(\"field-set-formula\")\n        )),\n        cssRow(withInfoTooltip(\n          textButton(\n            t(\"Set trigger formula\"),\n            dom.on(\"click\", setTrigger),\n            dom.prop(\"disabled\", use => use(isSummaryTable) || use(disableOtherActions)),\n            testId(\"field-set-trigger\")\n          ),\n          GristTooltips.setTriggerFormula(),\n        )),\n        cssRow(textButton(\n          t(\"Make into data column\"),\n          dom.on(\"click\", convertToData),\n          dom.prop(\"disabled\", use => use(isSummaryTable) || use(disableOtherActions)),\n          testId(\"field-set-data\")\n        ))\n      ] : type === \"formula\" ? [\n        menu(behaviorLabel(), [\n          convertToDataOption(),\n          clearAndResetOption(),\n        ]),\n        formulaBuilder(onSaveConvertToFormula),\n        cssEmptySeparator(),\n        cssRow(textButton(\n          t(\"Convert to trigger formula\"),\n          dom.on(\"click\", convertFormulaToTrigger),\n          dom.hide(maybeFormula),\n          dom.prop(\"disabled\", use => use(isSummaryTable) || use(disableOtherActions)),\n          testId(\"field-set-trigger\")\n        ))\n      ] : /* type == 'data' */ [\n        menu(behaviorLabel(),\n          [\n            dom.domComputed(origColumn.hasTriggerFormula, (hasTrigger) => hasTrigger ?\n              // If we have trigger, we will convert it directly to a formula column\n              convertTriggerToFormulaOption() :\n              // else we will convert to empty column and open up the editor\n              convertDataColumnToFormulaOption()\n            ),\n            clearAndResetOption(),\n          ]\n        ),\n        // If data column is or wants to be a trigger formula:\n        dom.maybe((use) => use(maybeTrigger) || use(origColumn.hasTriggerFormula), () => [\n          cssLabel(t(\"TRIGGER FORMULA\")),\n          formulaBuilder(onSaveConvertToTrigger, false),\n          dom.create(buildFormulaTriggers, origColumn, {\n            disabled: disableOtherActions,\n            notTrigger: maybeTrigger,\n          })\n        ]),\n        // Else offer a way to convert to trigger formula.\n        dom.maybe((use) => !(use(maybeTrigger) || use(origColumn.hasTriggerFormula)), () => [\n          cssEmptySeparator(),\n          cssRow(withInfoTooltip(\n            textButton(\n              t(\"Set trigger formula\"),\n              dom.on(\"click\", convertDataColumnToTriggerColumn),\n              dom.prop(\"disabled\", disableOtherActions),\n              testId(\"field-set-trigger\")\n            ),\n            GristTooltips.setTriggerFormula()\n          )),\n        ])\n      ])\n  ]);\n}\n\ninterface BuildFormulaOptions {\n  gristTheme: Computed<Theme>;\n  disabled: Observable<boolean>;\n  canDetach?: boolean;\n  onSave?: SaveHandler;\n  onCancel?: () => void;\n}\n\nfunction buildFormula(\n  column: ColumnRec,\n  buildEditor: BuildEditor,\n  options: BuildFormulaOptions\n) {\n  const {gristTheme, disabled, canDetach = true, onSave, onCancel} = options;\n  return cssFieldFormula(column.formula, {gristTheme, maxLines: 2},\n    dom.cls('formula_field_sidepane'),\n    cssFieldFormula.cls('-disabled', disabled),\n    cssFieldFormula.cls('-disabled-icon', use => !use(column.formula)),\n    dom.cls('disabled'),\n    {tabIndex: '-1'},\n    // Focus event use used by a user to edit an existing formula.\n    // It can also be triggered manually to open up the editor.\n    dom.on('focus', (_, refElem) => buildEditor({\n      refElem,\n      editValue: undefined,\n      canDetach,\n      onSave,\n      onCancel,\n    })),\n  );\n}\n\nexport const cssFieldFormula = styled(buildHighlightedCode, `\n  flex: auto;\n  cursor: pointer;\n  margin-top: 4px;\n  padding-left: 24px;\n  --icon-color: ${theme.accentIcon};\n\n  &-disabled-icon.formula_field_sidepane::before {\n    --icon-color: ${theme.lightText};\n  }\n  &-disabled {\n    pointer-events: none;\n  }\n`);\n\nconst cssToggleButton = styled(cssIconButton, `\n  margin-left: 8px;\n  background-color: ${theme.rightPanelToggleButtonDisabledBg};\n  box-shadow: inset 0 0 0 1px ${theme.inputBorder};\n\n  &-selected, &-selected:hover {\n    box-shadow: none;\n    background-color: ${theme.rightPanelToggleButtonEnabledBg};\n    --icon-color: ${theme.rightPanelToggleButtonEnabledFg};\n  }\n  &-selected:hover {\n    --icon-color: ${theme.rightPanelToggleButtonEnabledHoverFg};\n  }\n  &-disabled, &-disabled:hover {\n    --icon-color: ${theme.rightPanelToggleButtonDisabledFg};\n    background-color: ${theme.rightPanelToggleButtonDisabledBg};\n  }\n`);\n\nconst cssColLabelBlock = styled('div', `\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  min-width: 80px;\n`);\n\nconst cssColTieBlock = styled('div', `\n  position: relative;\n`);\n\nconst cssColTieConnectors = styled('div', `\n  position: absolute;\n  border: 2px solid ${theme.inputBorder};\n  top: -9px;\n  bottom: -9px;\n  right: 11px;\n  left: 0px;\n  border-left: none;\n  z-index: -1;\n`);\n\nconst cssEmptySeparator = styled('div', `\n  margin-top: 16px;\n`);\n\nconst cssInput = styled(textInput, `\n  color: ${theme.inputFg};\n  background-color: ${theme.mainPanelBg};\n  border: 1px solid ${theme.inputBorder};\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n\n  &[readonly] {\n    background-color: ${theme.inputDisabledBg};\n    color: ${theme.inputDisabledFg};\n  }\n`);\n","/**\n * Utility to simplify file uploads via the browser-provided file picker. It takes care of\n * maintaining an invisible <input type=file>, to make usage very simple:\n *\n *    FileDialog.open({ multiple: true }, files => { do stuff with files });\n *\n * Promise interface allows this:\n *\n *    const fileList = await FileDialog.openFilePicker({multiple: true});\n *\n * (Note that in either case, it's possible for the callback to never be called, or for the\n * Promise to never resolve; see comments for openFilePicker.)\n *\n * Note that interacting with a file dialog is difficult with WebDriver, but\n * test/browser/gristUtils.js provides a `gu.fileDialogUpload()` to make it easy.\n */\n\nimport * as browserGlobals from 'app/client/lib/browserGlobals';\nimport dom from 'app/client/lib/dom';\nconst G = browserGlobals.get('document', 'window');\n\nexport interface FileDialogOptions {\n  multiple?: boolean;   // Whether multiple files may be selected.\n  accept?: string;      // Comma-separated list of content-type specifiers,\n                        // e.g. \".jpg,.png\", \"text/plain\", \"audio/*\", \"video/*\", \"image/*\".\n}\n\ntype FilesCB = (files: File[]) => void;\n\nfunction noop() { /* no-op */ }\n\nlet _fileForm: HTMLFormElement;\nlet _fileInput: HTMLInputElement;\nlet _currentCB: FilesCB = noop;\n\n/**\n * Opens the file picker dialog, and returns a Promise for the list of selected files.\n * WARNING: The Promise might NEVER resolve. If the user dismisses the dialog without picking a\n *          file, there is no good way to detect that in order to resolve the promise.\n *          Do NOT rely on the promise resolving, e.g. on .finally() getting called.\n *          The implementation MAY resolve with an empty list in this case, when possible.\n *\n * This does not cause indefinite memory leaks. If the dialog is opened again, the reference to\n * the previous callback is cleared, and GC can collect the forgotten promise and related memory.\n *\n * Ideally we'd know when the dialog is dismissed without a selection, but that seems impossible\n * today. See https://stackoverflow.com/questions/4628544/how-to-detect-when-cancel-is-clicked-on-file-input\n * (tricks using click, focus, blur, etc are unreliable even in one browser, much less cross-platform).\n */\nexport function openFilePicker(options: FileDialogOptions): Promise<File[]> {\n  return new Promise(resolve => open(options, resolve));\n}\n\n/**\n * Opens the file picker dialog. If files are selected, calls the provided callback.\n * If no files are selected, will call the callback with an empty list if possible, or more\n * typically not call it at all.\n */\nexport function open(options: FileDialogOptions, callback: FilesCB): void {\n  if (!_fileInput) {\n    // The IDs are only needed for the sake of browser tests.\n    _fileForm = dom('form#file_dialog_form', {style: 'position: absolute; top: 0; display: none'},\n      _fileInput = dom('input#file_dialog_input', {type: 'file'}));\n\n    G.document.body.appendChild(_fileForm);\n\n    _fileInput.addEventListener('change', (ev) => {\n      _currentCB(_fileInput.files ? Array.from(_fileInput.files) : []);\n      _currentCB = noop;\n    });\n  }\n\n  // Clear the input, to make sure that selecting the same file as previously still\n  // triggers a 'change' event.\n  _fileForm.reset();\n  _fileInput.multiple = Boolean(options.multiple);\n  _fileInput.accept = options.accept || '';\n  _currentCB = callback;\n\n  // .click() is a well-supported shorthand for dispatching a mouseclick event on input elements.\n  // We do it in a separate tick to work around a rare Firefox bug.\n  setTimeout(() => _fileInput.click(), 0);\n}\n","import { GristDoc } from \"app/client/components/GristDoc\";\nimport { NEW_FILTER_JSON } from \"app/client/models/ColumnFilter\";\nimport { ColumnRec, ViewSectionRec } from \"app/client/models/DocModel\";\nimport { FilterInfo } from \"app/client/models/entities/ViewSectionRec\";\nimport { attachColumnFilterMenu } from \"app/client/ui/ColumnFilterMenu\";\nimport { cssButton } from \"app/client/ui2018/buttons\";\nimport { testId, theme, vars } from \"app/client/ui2018/cssVars\";\nimport { icon } from \"app/client/ui2018/icons\";\nimport { dom, IDisposableOwner, IDomArgs, styled } from \"grainjs\";\nimport { IPopupOptions, PopupControl } from \"popweasel\";\nimport { makeT } from \"app/client/lib/localization\";\nimport { dropdownWithSearch } from \"app/client/ui/searchDropdown\";\n\nconst t = makeT('FilterBar');\n\nexport function filterBar(\n  _owner: IDisposableOwner,\n  gristDoc: GristDoc,\n  viewSection: ViewSectionRec\n) {\n  const popupControls = new WeakMap<ColumnRec, PopupControl>();\n  return cssFilterBar(\n    testId('filter-bar'),\n    dom.forEach(viewSection.activeFilters, (filterInfo) => makeFilterField(filterInfo, popupControls)),\n    dom.maybe(viewSection.showNestedFilteringPopup, () => {\n      return dom('div',\n        gristDoc.behavioralPromptsManager.attachTip('nestedFiltering', {\n          onDispose: () => viewSection.showNestedFilteringPopup.set(false),\n        }),\n      );\n    }),\n    makePlusButton(viewSection, popupControls),\n    cssFilterBar.cls('-hidden', use => use(viewSection.pinnedActiveFilters).length === 0),\n  );\n}\n\nfunction makeFilterField(filterInfo: FilterInfo, popupControls: WeakMap<ColumnRec, PopupControl>) {\n  const {fieldOrColumn, filter, pinned, isPinned} = filterInfo;\n  return cssFilterBarItem(\n    testId('filter-field'),\n    cssFilterBarItemButton(\n      testId('btn'),\n      cssFilterBarItemIcon('FilterSimple'),\n      cssMenuTextLabel(dom.text(fieldOrColumn.origCol().label)),\n      cssBtn.cls('-grayed', use => use(filter.isSaved) && use(pinned.isSaved)),\n      attachColumnFilterMenu(filterInfo, {\n        popupOptions: {\n          placement: 'bottom-start',\n          attach: 'body',\n          trigger: [\n            'click',\n            (_el, popupControl) => popupControls.set(fieldOrColumn.origCol(), popupControl),\n          ],\n        },\n        showAllFiltersButton: true,\n      }),\n    ),\n    cssFilterBarItem.cls('-unpinned', use => !use(isPinned)),\n  );\n}\n\nexport interface AddFilterMenuOptions {\n  /**\n   * If 'only-unfiltered', only columns without active filters will be selectable in\n   * the menu.\n   *\n   * If 'unpinned-or-unfiltered', columns that have active filters but are not pinned\n   * will also be selectable.\n   *\n   * Defaults to `only-unfiltered'.\n   */\n  allowedColumns?: 'only-unfiltered' | 'unpinned-or-unfiltered';\n  /**\n   * Options that are passed to the menu component.\n   */\n  menuOptions?: IPopupOptions;\n}\n\nexport function addFilterMenu(\n  filters: FilterInfo[],\n  popupControls: WeakMap<ColumnRec, PopupControl>,\n  options: AddFilterMenuOptions = {}\n) {\n  const {allowedColumns, menuOptions} = options;\n  return (\n    dropdownWithSearch<FilterInfo>({\n      action: (filterInfo) => openFilter(filterInfo, popupControls),\n      options: () => filters.map((filterInfo) => ({\n        label: filterInfo.fieldOrColumn.origCol().label.peek(),\n        value: filterInfo,\n        disabled: allowedColumns === 'unpinned-or-unfiltered'\n          ? filterInfo.isPinned.peek() && filterInfo.isFiltered.peek()\n          : filterInfo.isFiltered.peek()\n      })),\n      popupOptions: menuOptions,\n      placeholder: t('Search Columns'),\n    })\n  );\n}\n\nfunction openFilter(\n  {fieldOrColumn, isFiltered, viewSection}: FilterInfo,\n  popupControls: WeakMap<ColumnRec, PopupControl>,\n) {\n  viewSection.setFilter(fieldOrColumn.origCol().origColRef(), {\n    filter: isFiltered.peek() ? undefined : NEW_FILTER_JSON,\n    pinned: true,\n  });\n  popupControls.get(fieldOrColumn.origCol())?.open();\n}\n\nfunction makePlusButton(viewSectionRec: ViewSectionRec, popupControls: WeakMap<ColumnRec, PopupControl>) {\n  return dom.domComputed((use) => {\n    const filters = use(viewSectionRec.filters);\n    return cssPlusButton(\n      cssBtn.cls('-grayed'),\n      cssPlusIcon('Plus'),\n      addFilterMenu(filters, popupControls, {\n        allowedColumns: 'unpinned-or-unfiltered',\n      }),\n      testId('add-filter-btn')\n    );\n  });\n}\n\nconst cssFilterBar = styled('div.filter_bar', `\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  row-gap: 8px;\n  margin: 8px 0px 8px -4px;\n  &-hidden {\n    display: none;\n  }\n`);\nconst cssFilterBarItem = styled('div', `\n  flex: 1 1 80px;\n  min-width: 0px;\n  max-width: max-content;\n  border-radius: ${vars.controlBorderRadius};\n  margin: 0 4px;\n  &-unpinned {\n    display: none;\n  }\n`);\nconst cssFilterBarItemIcon = styled(icon, `\n  flex-shrink: 0;\n`);\nconst cssMenuTextLabel = styled('span', `\n  flex-grow: 1;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`);\nconst cssPlusIcon = styled(icon, `\n  margin-top: -3px;\n`);\nconst cssBtn = styled('div', `\n  display: flex;\n  align-items: center;\n  column-gap: 4px;\n\n  height: 24px;\n  padding: 3px 8px;\n  .${cssFilterBar.className} > & {\n    margin: 0 4px;\n  }\n  &-grayed {\n    color:        ${theme.filterBarButtonSavedFg};\n    --icon-color: ${theme.filterBarButtonSavedFg};\n    background-color: ${theme.filterBarButtonSavedBg};\n    border-color: ${theme.filterBarButtonSavedBg};\n  }\n  &-grayed:hover {\n    background-color: ${theme.filterBarButtonSavedHoverBg};\n    border-color: ${theme.filterBarButtonSavedHoverBg};\n  }\n`);\nconst cssFilterBarItemButton = (...args: IDomArgs<HTMLDivElement>) => (\n  dom('div', cssButton.cls(''), cssButton.cls('-primary'),\n      cssBtn.cls(''), ...args)\n);\nconst cssPlusButton = styled(cssFilterBarItemButton, `\n  padding: 3px 3px\n`);\n","import {makeT} from 'app/client/lib/localization';\nimport {ViewSectionRec} from 'app/client/models/DocModel';\nimport {attachColumnFilterMenu} from 'app/client/ui/ColumnFilterMenu';\nimport {addFilterMenu} from 'app/client/ui/FilterBar';\nimport {cssIcon, cssPinButton, cssRow, cssSortFilterColumn} from 'app/client/ui/RightPanelStyles';\nimport {theme} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {Computed, Disposable, dom, makeTestId, styled} from 'grainjs';\nimport {IMenuOptions} from 'popweasel';\n\nconst testId = makeTestId('test-filter-config-');\n\nconst t = makeT('SortConfig');\n\nexport interface FilterConfigOptions {\n  /** Options to pass to the menu and popup components. */\n  menuOptions?: IMenuOptions;\n}\n\n/**\n * Component that renders controls for managing filters for a view section.\n *\n * Active filters (i.e. columns that have non-blank filters set) are displayed in\n * a vertical list of pill-shaped buttons. These buttons can be clicked to open their\n * respective filter menu. Additionally, there are buttons to the right of each filter\n * for removing and pinning them.\n */\nexport class FilterConfig extends Disposable {\n  private _popupControls = new WeakMap();\n\n  private _canAddFilter = Computed.create(this, (use) => {\n    return use(this._section.filters).some(f => !use(f.isFiltered));\n  });\n\n  constructor(private _section: ViewSectionRec, private _options: FilterConfigOptions = {}) {\n    super();\n  }\n\n  public buildDom() {\n    const {menuOptions} = this._options;\n    return dom('div',\n      dom.forEach(this._section.activeFilters, (filterInfo) => {\n        const {fieldOrColumn, filter, pinned, isPinned} = filterInfo;\n        return cssRow(\n          cssSortFilterColumn(\n            cssIconWrapper(\n              cssFilterIcon('FilterSimple',\n                cssFilterIcon.cls('-accent', use => !use(filter.isSaved) || !use(pinned.isSaved)),\n                testId('filter-icon'),\n              ),\n            ),\n            cssLabel(dom.text(fieldOrColumn.label)),\n            attachColumnFilterMenu(filterInfo, {\n              popupOptions: {\n                placement: 'bottom-end',\n                ...menuOptions,\n                trigger: [\n                  'click',\n                  (_el, popupControl) => this._popupControls.set(fieldOrColumn.origCol(), popupControl)\n                ],\n              },\n            }),\n            testId('column'),\n          ),\n          cssPinFilterButton(\n            icon('PinTilted'),\n            dom.on('click', () => this._section.setFilter(fieldOrColumn.origCol().origColRef(), {\n              pinned: !isPinned.peek()\n            })),\n            cssPinButton.cls('-pinned', isPinned),\n            testId('pin-filter'),\n          ),\n          cssIconWrapper(\n            cssRemoveFilterButton('Remove',\n              dom.on('click',\n                () => this._section.setFilter(fieldOrColumn.origCol().origColRef(), {\n                  filter: '',\n                  pinned: false,\n                })),\n              testId('remove-filter'),\n            ),\n          ),\n          testId('filter'),\n        );\n      }),\n      cssRow(\n        dom.domComputed((use) => {\n          const filters = use(this._section.filters);\n          return cssTextBtn(\n            t(\"Add Column\"),\n            addFilterMenu(filters, this._popupControls, {\n              menuOptions: {\n                placement: 'bottom-end',\n                ...this._options.menuOptions,\n              },\n            }),\n            dom.on('click', (ev) => ev.stopPropagation()),\n            dom.hide(u => !u(this._canAddFilter)),\n            testId('add-filter-btn'),\n          );\n        }),\n      ),\n      testId('container'),\n    );\n  }\n}\n\nconst cssIconWrapper = styled('div', ``);\n\nconst cssLabel = styled('div', `\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  flex-grow: 1;\n`);\n\nconst cssTextBtn = styled('div', `\n  color: ${theme.controlFg};\n  cursor: pointer;\n\n  &:hover {\n    color: ${theme.controlHoverFg};\n  }\n`);\n\nconst cssFilterIcon = styled(cssIcon, `\n  flex: none;\n  margin: 0px 6px 0px 0px;\n  background-color: ${theme.controlSecondaryFg};\n\n  &-accent {\n    background-color: ${theme.accentIcon};\n  }\n`);\n\nconst cssRemoveFilterButton = styled(cssIcon, `\n  flex: none;\n  margin: 0 6px;\n  background-color: ${theme.controlSecondaryFg};\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${theme.controlSecondaryHoverFg};\n  }\n`);\n\nconst cssPinFilterButton = styled(cssPinButton, `\n  margin-left: 6px;\n`);\n","import {makeT} from 'app/client/lib/localization';\nimport {documentCursor} from 'app/client/lib/popupUtils';\nimport {hoverTooltip} from 'app/client/ui/tooltips';\nimport {isNarrowScreen, isNarrowScreenObs, theme, vars} from 'app/client/ui2018/cssVars';\nimport {IconName} from 'app/client/ui2018/IconList';\nimport {icon} from 'app/client/ui2018/icons';\nimport {Disposable, dom, DomContents, DomElementArg,\n        IDisposable, makeTestId, Observable, styled} from 'grainjs';\n\nconst POPUP_INITIAL_PADDING_PX = 16;\nconst POPUP_DEFAULT_MIN_HEIGHT = 300;\nconst POPUP_MAX_HEIGHT = 711;\nconst POPUP_HEADER_HEIGHT = 30;\n\nconst t = makeT('FloatingPopup');\n\nconst testId = makeTestId('test-floating-popup-');\n\nexport const FLOATING_POPUP_TOOLTIP_KEY = 'floatingPopupTooltip';\n\nexport interface PopupOptions {\n  title?: () => DomContents;\n  content?: () => DomContents;\n  onClose?: () => void;\n  closeButton?: boolean;\n  closeButtonIcon?: IconName;\n  closeButtonHover?: () => DomContents;\n  minimizable?: boolean;\n  autoHeight?: boolean;\n  /** Minimum height in pixels. */\n  minHeight?: number;\n  /** Defaults to false. */\n  stopClickPropagationOnMove?: boolean;\n  initialPosition?: [left: number, top: number];\n  args?: DomElementArg[];\n}\n\nexport class FloatingPopup extends Disposable {\n  protected _isMinimized = Observable.create(this, false);\n  private _closable = this._options.closeButton ?? false;\n  private _minimizable = this._options.minimizable ?? false;\n  private _minHeight = this._options.minHeight ?? POPUP_DEFAULT_MIN_HEIGHT;\n  private _isFinishingMove = false;\n  private _popupElement: HTMLElement | null = null;\n  private _popupMinimizeButtonElement: HTMLElement | null = null;\n\n  private _startX: number;\n  private _startY: number;\n  private _initialTop: number;\n  private _initialBottom: number;\n  private _initialLeft: number;\n  private _resize = false;\n  private _cursorGrab: IDisposable|null = null;\n\n  constructor(protected _options: PopupOptions = {}) {\n    super();\n\n    if (_options.stopClickPropagationOnMove){\n      // weasel.js registers a 'click' listener that closes any open popups that\n      // are outside the click target. We capture the click event here, stopping\n      // propagation in a few scenarios where closing popups is undesirable.\n      window.addEventListener('click', (ev) => {\n        if (this._isFinishingMove) {\n          ev.stopPropagation();\n          this._isFinishingMove = false;\n          return;\n        }\n\n        if (this._popupMinimizeButtonElement?.contains(ev.target as Node)) {\n          ev.stopPropagation();\n          this._minimizeOrMaximize();\n          return;\n        }\n      }, {capture: true});\n    }\n\n    this._handleMouseDown = this._handleMouseDown.bind(this);\n    this._handleMouseMove = this._handleMouseMove.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleTouchStart = this._handleTouchStart.bind(this);\n    this._handleTouchMove = this._handleTouchMove.bind(this);\n    this._handleTouchEnd = this._handleTouchEnd.bind(this);\n    this._handleWindowResize = this._handleWindowResize.bind(this);\n\n    this.autoDispose(isNarrowScreenObs().addListener(() => this._repositionPopup()));\n\n    this.onDispose(() => {\n      this._disposePopup();\n      this._cursorGrab?.dispose();\n    });\n  }\n\n  public showPopup() {\n    this._popupElement = this._buildPopup();\n    document.body.appendChild(this._popupElement);\n\n    const {initialPosition} = this._options;\n    if (initialPosition) {\n      this._setPosition(initialPosition);\n      this._repositionPopup();\n    } else {\n      const left = document.body.offsetWidth - this._popupElement.offsetWidth - POPUP_INITIAL_PADDING_PX;\n      const top = document.body.offsetHeight - this._popupElement.offsetHeight - getTopPopupPaddingPx();\n      this._setPosition([left, top]);\n    }\n  }\n\n  protected _closePopup() {\n    if (!this._closable) { return; }\n\n    this._disposePopup();\n  }\n\n  protected _buildTitle(): DomContents {\n    return this._options.title?.() ?? null;\n  }\n\n  protected _buildContent(): DomContents {\n    return this._options.content?.() ?? null;\n  }\n\n  protected _buildArgs(): any {\n    return this._options.args ?? [];\n  }\n\n  private _disposePopup() {\n    if (!this._popupElement) { return; }\n\n    document.body.removeChild(this._popupElement);\n    dom.domDispose(this._popupElement);\n    this._popupElement = null;\n  }\n\n  private _setPosition([left, top]: [left: number, top: number]) {\n    if (!this._popupElement) { return; }\n\n    this._popupElement.style.left = `${left}px`;\n    this._popupElement.style.top = `${top}px`;\n  }\n\n  private _rememberPosition() {\n    this._initialLeft = this._popupElement!.offsetLeft;\n    this._initialTop = this._popupElement!.offsetTop;\n    this._initialBottom = this._popupElement!.offsetTop + this._popupElement!.offsetHeight;\n  }\n\n  private _handleMouseDown(ev: MouseEvent) {\n    if (ev.button !== 0) { return; } // Only handle left-click.\n    this._startX = ev.clientX;\n    this._startY = ev.clientY;\n    this._rememberPosition();\n    document.addEventListener('mousemove', this._handleMouseMove);\n    document.addEventListener('mouseup', this._handleMouseUp);\n    this._forceCursor();\n  }\n\n  private _handleTouchStart(ev: TouchEvent) {\n    this._startX = ev.touches[0].clientX;\n    this._startY = ev.touches[0].clientY;\n    this._rememberPosition();\n    document.addEventListener('touchmove', this._handleTouchMove);\n    document.addEventListener('touchend', this._handleTouchEnd);\n\n    this._resize = false;\n    this._forceCursor();\n  }\n\n  private _handleTouchMove({touches}: TouchEvent) {\n    this._handleMouseMove(touches[0]);\n  }\n\n  private _handleMouseMove({clientX, clientY}: MouseEvent | Touch) {\n    if (this._resize) {\n      this._handleResize(clientY);\n    } else {\n      this._handleMove(clientX, clientY);\n    }\n  }\n\n  private _handleResize(clientY: number) {\n    const deltaY = clientY - this._startY;\n    if (this._resize && !isNarrowScreen()) {\n      // First calculate the boundaries for the new top.\n\n      // First just how much we can resize the popup.\n      let minTop = this._initialBottom - POPUP_MAX_HEIGHT;\n      let maxTop = this._initialBottom - this._minHeight;\n\n      // Now how far we can move top (leave at least some padding for mobile).\n      minTop = Math.max(minTop, getTopPopupPaddingPx());\n      // And bottom (we want the header to be visible)\n      maxTop = Math.min(document.body.offsetHeight - POPUP_HEADER_HEIGHT - 2, maxTop);\n\n      // Now get new top from those boundaries.\n      const newTop = Math.max(minTop, Math.min(maxTop, this._initialTop + deltaY));\n      // And calculate the new height.\n      const newHeight = this._initialBottom - newTop;\n      this._popupElement!.style.top = `${newTop}px`;\n      this._popupElement!.style.setProperty('--height', `${newHeight}px`);\n      return;\n    }\n  }\n\n  private _handleMove(clientX: number, clientY: number) {\n    // Last change in position (from last move).\n    const deltaX = clientX - this._startX;\n    const deltaY = clientY - this._startY;\n\n    // Available space where we can put the popup (anchored at top left corner).\n    const viewPort = {\n      right: document.body.offsetWidth,\n      bottom: document.body.offsetHeight,\n      top: getTopPopupPaddingPx(),\n      left: 0,\n    };\n\n    // Allow some extra space, where we can still move the popup outside the viewport.\n    viewPort.right += this._popupElement!.offsetWidth - (POPUP_HEADER_HEIGHT + 2) * 4;\n    viewPort.left -= this._popupElement!.offsetWidth - (POPUP_HEADER_HEIGHT + 2) * 4;\n    viewPort.bottom += this._popupElement!.offsetHeight - POPUP_HEADER_HEIGHT - 2; // 2px border top\n\n    let newLeft = this._initialLeft + deltaX;\n    let newTop = this._initialTop + deltaY;\n    const newRight = (val?: number) => {\n      if (val !== undefined) { newLeft = val - this._popupElement!.offsetWidth; }\n      return newLeft + this._popupElement!.offsetWidth;\n    };\n    const newBottom = (val?: number) => {\n      if (val !== undefined) { newTop = val - this._popupElement!.offsetHeight; }\n      return newTop + this._popupElement!.offsetHeight;\n    };\n\n    // Calculate new position in the padding area.\n    if (newLeft < viewPort.left) { newLeft = viewPort.left; }\n    if (newRight() > viewPort.right) { newRight(viewPort.right); }\n    if (newTop  < viewPort.top) { newTop = viewPort.top; }\n    if (newBottom() > viewPort.bottom) { newBottom(viewPort.bottom); }\n\n    this._popupElement!.style.left = `${newLeft}px`;\n    this._popupElement!.style.top = `${newTop}px`;\n  }\n\n  private _handleMouseUp() {\n    this._isFinishingMove = true;\n    document.removeEventListener('mousemove', this._handleMouseMove);\n    document.removeEventListener('mouseup', this._handleMouseUp);\n    document.body.removeEventListener('mouseleave', this._handleMouseUp);\n    this._handleMouseEnd();\n  }\n\n  private _handleTouchEnd() {\n    document.removeEventListener('touchmove', this._handleTouchMove);\n    document.removeEventListener('touchend', this._handleTouchEnd);\n    document.body.removeEventListener('touchcancel', this._handleTouchEnd);\n    this._handleMouseEnd();\n  }\n\n  private _handleMouseEnd() {\n    this._resize = false;\n    this._cursorGrab?.dispose();\n  }\n\n  private _handleWindowResize() {\n    this._repositionPopup();\n  }\n\n  private _repositionPopup() {\n    let newLeft = this._popupElement!.offsetLeft;\n    let newTop = this._popupElement!.offsetTop;\n\n    const topPaddingPx = getTopPopupPaddingPx();\n    if (newLeft - POPUP_INITIAL_PADDING_PX < 0) { newLeft = POPUP_INITIAL_PADDING_PX; }\n    if (newTop - topPaddingPx < 0) { newTop = topPaddingPx; }\n    if (newLeft + POPUP_INITIAL_PADDING_PX > document.body.offsetWidth - this._popupElement!.offsetWidth) {\n      newLeft = document.body.offsetWidth - this._popupElement!.offsetWidth - POPUP_INITIAL_PADDING_PX;\n    }\n    if (newTop + topPaddingPx > document.body.offsetHeight - this._popupElement!.offsetHeight) {\n      newTop = document.body.offsetHeight - this._popupElement!.offsetHeight - topPaddingPx;\n    }\n\n    this._popupElement!.style.left = `${newLeft}px`;\n    this._popupElement!.style.top = `${newTop}px`;\n  }\n\n  private _minimizeOrMaximize() {\n    if (!this._minimizable) { return; }\n\n    this._isMinimized.set(!this._isMinimized.get());\n    this._repositionPopup();\n  }\n\n  private _buildPopup() {\n    const body = cssPopup(\n      {tabIndex: '-1'},\n      cssPopup.cls('-auto', this._options.autoHeight ?? false),\n      dom.style('min-height', `${this._minHeight}px`),\n      cssPopupHeader(\n        cssBottomHandle(testId('move-handle')),\n        dom.maybe(use => !use(this._isMinimized), () => {\n          return cssResizeTopLayer(\n            cssTopHandle(testId('resize-handle')),\n            dom.on('mousedown', () => this._resize = true),\n            dom.on('dblclick', (e) => {\n              e.stopImmediatePropagation();\n              this._popupElement?.style.setProperty('--height', `${POPUP_MAX_HEIGHT}px`);\n              this._repositionPopup();\n            })\n          );\n        }),\n        dom.domComputed(this._isMinimized, isMinimized => {\n          return [\n            // Copy buttons on the left side of the header, to automatically\n            // center the title.\n            cssPopupButtons(\n              cssPopupHeaderButton(\n                icon('Maximize'),\n                dom.show(this._minimizable),\n              ),\n              cssPopupHeaderButton(\n                icon('CrossBig'),\n                dom.show(this._closable),\n              ),\n              dom.style('visibility', 'hidden'),\n            ),\n            cssPopupTitle(\n              cssPopupTitleText(this._buildTitle()),\n              testId('title'),\n            ),\n            cssPopupButtons(\n              this._popupMinimizeButtonElement = cssPopupHeaderButton(\n                isMinimized ? icon('Maximize'): icon('Minimize'),\n                hoverTooltip(isMinimized ? t('Maximize') : t('Minimize'), {\n                  key: FLOATING_POPUP_TOOLTIP_KEY,\n                }),\n                dom.on('click', () => this._minimizeOrMaximize()),\n                dom.show(this._minimizable),\n                testId('minimize-maximize'),\n              ),\n              cssPopupHeaderButton(\n                icon(this._options.closeButtonIcon ?? 'CrossBig'),\n                this._options.closeButtonHover && hoverTooltip(this._options.closeButtonHover(), {\n                  key: FLOATING_POPUP_TOOLTIP_KEY,\n                }),\n                dom.on('click', () => {\n                  this._options.onClose?.() ?? this._closePopup();\n                }),\n                dom.show(this._closable),\n                testId('close'),\n              ),\n              // Disable dragging when a button in the header is clicked.\n              dom.on('mousedown', ev => ev.stopPropagation()),\n              dom.on('touchstart', ev => ev.stopPropagation()),\n            )\n          ];\n        }),\n        dom.on('mousedown', this._handleMouseDown),\n        dom.on('touchstart', this._handleTouchStart),\n        dom.on('dblclick', () => this._minimizeOrMaximize()),\n        testId('header'),\n      ),\n      cssPopupContent(\n        this._buildContent(),\n        cssPopupContent.cls('-minimized', this._isMinimized),\n      ),\n      () => { window.addEventListener('resize', this._handleWindowResize); },\n      dom.onDispose(() => {\n        document.removeEventListener('mousemove', this._handleMouseMove);\n        document.removeEventListener('mouseup', this._handleMouseUp);\n        document.removeEventListener('touchmove', this._handleTouchMove);\n        document.removeEventListener('touchend', this._handleTouchEnd);\n        window.removeEventListener('resize', this._handleWindowResize);\n      }),\n      cssPopup.cls('-minimized', this._isMinimized),\n      cssPopup.cls('-mobile', isNarrowScreenObs()),\n      testId('window'),\n      this._buildArgs()\n    );\n\n    // For auto-height popups, we need to reposition the popup when the content changes.\n    // It is important for auto-grow and to prevent popup from going off-screen.\n    if (this._options.autoHeight) {\n      const observer = new MutationObserver(() => {\n        this._repositionPopup();\n      });\n      observer.observe(body, {childList: true, subtree: true});\n      dom.update(body,\n        dom.onDispose(() => observer.disconnect())\n      );\n    }\n\n    return body;\n  }\n\n  private _forceCursor() {\n    this._cursorGrab?.dispose();\n    const type = this._resize ? 'ns-resize' : 'grabbing';\n    this._cursorGrab = documentCursor(type);\n  }\n}\n\n\nfunction getTopPopupPaddingPx(): number {\n  // On mobile, we need additional padding to avoid blocking the top and bottom bars.\n  return POPUP_INITIAL_PADDING_PX + (isNarrowScreen() ? 50 : 0);\n}\n\nconst POPUP_HEIGHT = `min(var(--height), calc(100% - (2 * ${POPUP_INITIAL_PADDING_PX}px)))`;\nconst POPUP_HEIGHT_MOBILE = `min(var(--height), calc(100% - (2 * ${POPUP_INITIAL_PADDING_PX}px) - (2 * 50px)))`;\n\nexport const FLOATING_POPUP_MAX_WIDTH_PX = 436;\nconst POPUP_WIDTH = `min(${FLOATING_POPUP_MAX_WIDTH_PX}px, calc(100% - (2 * ${POPUP_INITIAL_PADDING_PX}px)))`;\n\nconst cssPopup = styled('div.floating-popup', `\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  border: 2px solid ${theme.accentBorder};\n  border-radius: 5px;\n  z-index: ${vars.floatingPopupZIndex};\n  --height: ${POPUP_MAX_HEIGHT}px;\n  height: ${POPUP_HEIGHT};\n  width: ${POPUP_WIDTH};\n  background-color: ${theme.popupBg};\n  box-shadow: 0 2px 18px 0 ${theme.popupInnerShadow}, 0 0 1px 0 ${theme.popupOuterShadow};\n  outline: unset;\n\n  &-mobile {\n    height: ${POPUP_HEIGHT_MOBILE};\n  }\n\n  &-minimized {\n    max-width: 225px;\n    height: unset;\n    min-height: unset;\n  }\n\n  &-minimized:not(&-mobile) {\n    max-height: ${POPUP_HEIGHT};\n  }\n\n  &-minimized&-mobile {\n    max-height: ${POPUP_HEIGHT_MOBILE};\n  }\n\n  &-auto {\n    height: auto;\n    max-height: ${POPUP_HEIGHT};\n    min-height: unset;\n  }\n\n  &-auto&-mobile {\n    max-height: ${POPUP_HEIGHT_MOBILE};\n  }\n`);\n\nconst cssPopupHeader = styled('div', `\n  color: ${theme.tutorialsPopupHeaderFg};\n  --icon-color: ${theme.tutorialsPopupHeaderFg};\n  background-color: ${theme.accentBorder};\n  align-items: center;\n  flex-shrink: 0;\n  cursor: grab;\n  padding-left: 4px;\n  padding-right: 4px;\n  height: ${POPUP_HEADER_HEIGHT}px;\n  user-select: none;\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  isolation: isolate;\n  &:active {\n    cursor: grabbing;\n  }\n`);\n\nconst cssPopupButtons = styled('div', `\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n`);\n\nconst cssPopupTitle = styled('div', `\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 600;\n  overflow: hidden;\n`);\n\nconst cssPopupTitleText = styled('div', `\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`);\n\nexport const cssPopupBody = styled('div', `\n  flex-grow: 1;\n  padding: 24px;\n  overflow: auto;\n`);\n\nconst cssPopupHeaderButton = styled('div', `\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  z-index: 1000;\n\n  &:hover {\n    background-color: ${theme.hover};\n  }\n`);\n\nconst cssResizeTopLayer = styled('div', `\n  position: absolute;\n  top: -6px;\n  left: 0;\n  right: 0;\n  bottom: 28px;\n  z-index: 500;\n  cursor: ns-resize;\n`);\n\nconst cssTopHandle = styled('div', `\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 1px;\n  height: 1px;\n  pointer-events: none;\n  user-select: none;\n  visibility: hidden;\n`);\n\nconst cssBottomHandle = styled(cssTopHandle, `\n  top: unset;\n  bottom: 0;\n  left: 0;\n`);\n\nconst cssPopupContent = styled('div', `\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow: hidden;\n\n  &-minimized {\n    display: none;\n  }\n`);\n","import {BehavioralPromptsManager} from 'app/client/components/BehavioralPromptsManager';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {makeT} from 'app/client/lib/localization';\nimport {reportError} from 'app/client/models/AppModel';\nimport {ColumnRec, TableRec, ViewSectionRec} from 'app/client/models/DocModel';\nimport {PERMITTED_CUSTOM_WIDGETS} from \"app/client/models/features\";\nimport {GristTooltips} from 'app/client/ui/GristTooltips';\nimport {linkId, NoLink} from 'app/client/ui/selectBy';\nimport {overflowTooltip, withInfoTooltip} from 'app/client/ui/tooltips';\nimport {getWidgetTypes} from \"app/client/ui/widgetTypesMap\";\nimport {bigPrimaryButton} from \"app/client/ui2018/buttons\";\nimport {theme, vars} from \"app/client/ui2018/cssVars\";\nimport {icon} from \"app/client/ui2018/icons\";\nimport {spinnerModal} from 'app/client/ui2018/modals';\nimport {isLongerThan, nativeCompare} from \"app/common/gutil\";\nimport {IAttachedCustomWidget, IWidgetType} from 'app/common/widgetTypes';\nimport {\n  computed,\n  Computed,\n  Disposable,\n  dom,\n  domComputed,\n  DomElementArg,\n  fromKo,\n  IOption,\n  makeTestId,\n  Observable,\n  onKeyDown,\n  select,\n  styled\n} from \"grainjs\";\nimport Popper from 'popper.js';\nimport {IOpenController, popupOpen, setPopupToCreateDom} from 'popweasel';\nimport without = require('lodash/without');\n\nconst t = makeT('PageWidgetPicker');\n\ntype TableId = number|'New Table'|null;\n\n// Describes a widget selection.\nexport interface IPageWidget {\n\n  // The widget type\n  type: IWidgetType;\n\n  // The table (one of the listed tables or 'New Table')\n  table: TableId;\n\n  // Whether to summarize the table (not available for \"New Table\").\n  summarize: boolean;\n\n  // some of the listed columns to use to summarize the table.\n  columns: number[];\n\n  // link\n  link: string;\n\n  // the page widget section id (should be 0 for a to-be-saved new widget)\n  section: number;\n}\n\n// Creates a IPageWidget from a ViewSectionRec.\nexport function toPageWidget(section: ViewSectionRec): IPageWidget {\n  const link = linkId({\n    srcSectionRef: section.linkSrcSectionRef.peek(),\n    srcColRef: section.linkSrcColRef.peek(),\n    targetColRef: section.linkTargetColRef.peek()\n  });\n  return {\n    type: section.parentKey.peek() as IWidgetType,\n    table: section.table.peek().summarySourceTable.peek() || section.tableRef.peek(),\n    summarize: Boolean(section.table.peek().summarySourceTable.peek()),\n    columns: section.table.peek().columns.peek().peek()\n      .filter((col) => col.summarySourceCol.peek())\n      .map((col) => col.summarySourceCol.peek()),\n    link, section: section.id.peek()\n  };\n}\n\n\nexport interface IOptions extends ISelectOptions {\n\n  // the initial selected value, we call the function when the popup get triggered\n  value?: () => IPageWidget;\n\n  // placement, directly passed to the underlying Popper library.\n  placement?: Popper.Placement;\n}\n\nconst testId = makeTestId('test-wselect-');\n\n// The picker disables some choices that do not make much sense. This function return the list of\n// compatible types given the tableId and whether user is creating a new page or not.\nfunction getCompatibleTypes(tableId: TableId, isNewPage: boolean|undefined): IWidgetType[] {\n  if (tableId !== 'New Table') {\n    return ['record', 'single', 'detail', 'chart', 'custom', 'custom.calendar'];\n  } else if (isNewPage) {\n    // New view + new table means we'll be switching to the primary view.\n    return ['record'];\n  } else {\n    // The type 'chart' makes little sense when creating a new table.\n    return ['record', 'single', 'detail'];\n  }\n}\n\n// Whether table and type make for a valid selection whether the user is creating a new page or not.\nfunction isValidSelection(table: TableId, type: IWidgetType, isNewPage: boolean|undefined) {\n  return table !== null && getCompatibleTypes(table, isNewPage).includes(type);\n}\n\nexport type ISaveFunc = (val: IPageWidget) => Promise<any>;\n\n// Delay in milliseconds, after a user click on the save btn, before we start showing a modal\n// spinner. If saving completes before this time elapses (which is likely to happen for regular\n// table) we don't show the modal spinner.\nconst DELAY_BEFORE_SPINNER_MS = 500;\n\n// Attaches the page widget picker to elem to open on 'click' on the left.\nexport function attachPageWidgetPicker(elem: HTMLElement, gristDoc: GristDoc, onSave: ISaveFunc,\n                                       options: IOptions = {}) {\n  // Overrides .placement, this is needed to enable the page widget to update position when user\n  // expand the `Group By` panel.\n  // TODO: remove .placement from the options of this method (note: breaking buildPageWidgetPicker\n  // into two steps, one for model creation and the other for building UI, seems promising. In\n  // particular listening to value.summarize to update popup position could be done directly in\n  // code).\n  options.placement = 'left';\n  const domCreator = (ctl: IOpenController) => buildPageWidgetPicker(ctl, gristDoc, onSave, options);\n  setPopupToCreateDom(elem, domCreator, {\n    placement: 'left',\n    trigger: ['click'],\n    attach: 'body',\n    boundaries: 'viewport'\n  });\n}\n\n// Open page widget widget picker on the right of element.\nexport function openPageWidgetPicker(elem: HTMLElement, gristDoc: GristDoc, onSave: ISaveFunc,\n                                     options: IOptions = {}) {\n  popupOpen(elem, (ctl) => buildPageWidgetPicker(\n    ctl, gristDoc, onSave, options\n  ), { placement: 'right' });\n}\n\n// Builds a picker to stick into the popup. Takes care of setting up the initial selected value and\n// bind various events to the popup behaviours: close popup on save, gives focus to the picker,\n// binds cancel and save to Escape and Enter keydown events. Also takes care of preventing the popup\n// to overlay the trigger element (which could happen when the 'Group By' panel is expanded for the\n// first time). When saving is taking time, show a modal spinner (see DELAY_BEFORE_SPINNER_MS).\nexport function buildPageWidgetPicker(\n  ctl: IOpenController,\n  gristDoc: GristDoc,\n  onSave: ISaveFunc,\n  options: IOptions = {}\n) {\n  const {behavioralPromptsManager, docModel} = gristDoc;\n  const tables = fromKo(docModel.visibleTables.getObservable());\n  const columns = fromKo(docModel.columns.createAllRowsModel('parentPos').getObservable());\n\n  // default value for when it is omitted\n  const defaultValue: IPageWidget = {\n    type: 'record',\n    table: null, // when creating a new widget, let's initially have no table selected\n    summarize: false,\n    columns: [],\n    link: NoLink,\n    section: 0,\n  };\n\n  // get initial value and setup state for the picker.\n  const initValue = options.value && options.value() || defaultValue;\n  const value: IWidgetValueObs = {\n    type: Observable.create(ctl, initValue.type),\n    table: Observable.create(ctl, initValue.table),\n    summarize: Observable.create(ctl, initValue.summarize),\n    columns: Observable.create(ctl, initValue.columns),\n    link: Observable.create(ctl, initValue.link),\n    section: Observable.create(ctl, initValue.section)\n  };\n\n  // calls onSave and closes the popup. Failure must be handled by the caller.\n  async function onSaveCB() {\n    ctl.close();\n    const type = value.type.get();\n    const savePromise = onSave({\n      type,\n      table: value.table.get(),\n      summarize: value.summarize.get(),\n      columns: sortedAs(value.columns.get(), columns.get().map((col) => col.id.peek())),\n      link: value.link.get(),\n      section: value.section.get(),\n    });\n    if (value.table.get() === 'New Table') {\n      // Adding empty table will show a prompt, so we don't want to wait for it.\n      await savePromise;\n    } else {\n      // If savePromise throws an error, before or after timeout, we let the error propagate as it\n      // should be handle by the caller.\n      if (await isLongerThan(savePromise, DELAY_BEFORE_SPINNER_MS)) {\n        const label = getWidgetTypes(type).label;\n        await spinnerModal(t(\"Building {{- label}} widget\", { label }), savePromise);\n      }\n    }\n  }\n\n  // whether the current selection is valid\n  function isValid() {\n    return isValidSelection(value.table.get(), value.type.get(), options.isNewPage);\n  }\n\n  // Summarizing a table causes the 'Group By' panel to expand on the right. To prevent it from\n  // overlaying the trigger, we bind an update of the popup to it when it is on the left of the\n  // trigger.\n  // WARN: This does not work when the picker is triggered from a menu item because the trigger\n  // element does not exist anymore at this time so calling update will misplace the popup. However,\n  // this is not a problem at the time or writing because the picker is never placed at the left of\n  // a menu item (currently picker is only placed at the right of a menu item and at the left of a\n  // basic button).\n  if (options.placement && options.placement === 'left') {\n    ctl.autoDispose(value.summarize.addListener((val, old) => val && ctl.update()));\n  }\n\n  // dom\n  return cssPopupWrapper(\n    dom.create(PageWidgetSelect,\n      value, tables, columns, onSaveCB, behavioralPromptsManager, options),\n\n    // gives focus and binds keydown events\n    (elem: any) => { setTimeout(() => elem.focus(), 0); },\n    onKeyDown({\n      Escape: () => ctl.close(),\n      Enter: () => isValid() && onSaveCB()\n    })\n\n  );\n}\n\n// Same as IWidgetValue but with observable values\nexport type IWidgetValueObs = {\n  [P in keyof IPageWidget]: Observable<IPageWidget[P]>;\n};\n\n\nexport interface ISelectOptions {\n  // the button's label\n  buttonLabel?: string;\n\n  // Indicates whether the section builder is in a new view\n  isNewPage?: boolean;\n\n  // A callback to provides the links that are available to a page widget. It is called any time the\n  // user changes in the selected page widget (type, table, summary ...) and we update the \"SELECT\n  // BY\" dropdown with the result list of options. The \"SELECT BY\" dropdown is hidden if omitted.\n  selectBy?: (val: IPageWidget) => Array<IOption<string>>;\n}\n\nconst registeredCustomWidgets: IAttachedCustomWidget[] =  ['custom.calendar'];\n\nconst permittedCustomWidgets: IAttachedCustomWidget[] = PERMITTED_CUSTOM_WIDGETS().get().map((widget) =>\n  widget as IAttachedCustomWidget)??[];\n// the list of widget types in the order they should be listed by the widget.\nconst finalListOfCustomWidgetToShow =  permittedCustomWidgets.filter(a=>\n  registeredCustomWidgets.includes(a));\nconst sectionTypes: IWidgetType[] = [\n  'record', 'single', 'detail', 'chart', ...finalListOfCustomWidgetToShow, 'custom'\n];\n\n\n// Returns dom that let a user select a page widget. User can select a widget type (id: 'grid',\n// 'card', ...), one of `tables` and optionally some of the `columns` of the selected table if she\n// wants to generate a summary. Clicking the `Add ...` button trigger `onSave()`. Note: this is an\n// internal method used by widgetPicker, it is only exposed for testing reason.\nexport class PageWidgetSelect extends Disposable {\n\n  // an observable holding the list of options of the `select by` dropdown\n  private _selectByOptions = this._options.selectBy ?\n    Computed.create(this, (use) => {\n      // TODO: it is unfortunate to have to convert from IWidgetValueObs to IWidgetValue. Maybe\n      // better to change this._value to be Observable<IWidgetValue> instead.\n      const val = {\n        type: use(this._value.type),\n        table: use(this._value.table),\n        summarize: use(this._value.summarize),\n        columns: use(this._value.columns),\n        // should not have a dependency on .link\n        link: this._value.link.get(),\n        section: use(this._value.section),\n      };\n      return this._options.selectBy!(val);\n    }) :\n    null;\n\n  private _isNewTableDisabled = Computed.create(this, this._value.type, (use, type) => !isValidSelection(\n    'New Table', type, this._options.isNewPage));\n\n  constructor(\n    private _value: IWidgetValueObs,\n    private _tables: Observable<TableRec[]>,\n    private _columns: Observable<ColumnRec[]>,\n    private _onSave: () => Promise<void>,\n    private _behavioralPromptsManager: BehavioralPromptsManager,\n    private _options: ISelectOptions = {}\n  ) { super(); }\n\n  public buildDom() {\n    return cssContainer(\n      testId('container'),\n      cssBody(\n        cssPanel(\n          header(t(\"Select Widget\")),\n          sectionTypes.map((value) => {\n            const {label, icon: iconName} = getWidgetTypes(value);\n            const disabled = computed(this._value.table, (use, tid) => this._isTypeDisabled(value, tid));\n            return cssEntry(\n              dom.autoDispose(disabled),\n              cssTypeIcon(iconName),\n              label,\n              dom.on('click', () => !disabled.get() && this._selectType(value)),\n              cssEntry.cls('-selected', (use) => use(this._value.type) === value),\n              cssEntry.cls('-disabled', disabled),\n              testId('type'),\n            );\n          }),\n        ),\n        cssPanel(\n          testId('data'),\n          header(t(\"Select Data\")),\n          cssEntry(\n            cssIcon('TypeTable'), 'New Table',\n            // prevent the selection of 'New Table' if it is disabled\n            dom.on('click', (ev) => !this._isNewTableDisabled.get() && this._selectTable('New Table')),\n            this._behavioralPromptsManager.attachTip('pageWidgetPicker', {\n              popupOptions: {\n                attach: null,\n                placement: 'right-start',\n              }\n            }),\n            cssEntry.cls('-selected', (use) => use(this._value.table) === 'New Table'),\n            cssEntry.cls('-disabled', this._isNewTableDisabled),\n            testId('table'),\n          ),\n          dom.forEach(this._tables, (table) => dom('div',\n            cssEntryWrapper(\n              cssEntry(cssIcon('TypeTable'),\n                       cssLabel(dom.text(table.tableNameDef), overflowTooltip()),\n                       dom.on('click', () => this._selectTable(table.id())),\n                       cssEntry.cls('-selected', (use) => use(this._value.table) === table.id()),\n                       testId('table-label')\n              ),\n              cssPivot(\n                cssBigIcon('Pivot'),\n                cssEntry.cls('-selected', (use) => use(this._value.summarize) && use(this._value.table) === table.id()),\n                dom.on('click', (ev, el) => this._selectPivot(table.id(), el as HTMLElement)),\n                testId('pivot'),\n              ),\n              testId('table'),\n            )\n          )),\n        ),\n        cssPanel(\n          header(t(\"Group by\")),\n          dom.hide((use) => !use(this._value.summarize)),\n          domComputed(\n            (use) => use(this._columns)\n              .filter((col) => !col.isHiddenCol() && col.parentId() === use(this._value.table)),\n            (cols) => cols ?\n              dom.forEach(cols, (col) =>\n                cssEntry(cssIcon('FieldColumn'), cssFieldLabel(dom.text(col.label)),\n                  dom.on('click', () => this._toggleColumnId(col.id())),\n                  cssEntry.cls('-selected', (use) => use(this._value.columns).includes(col.id())),\n                  testId('column')\n                )\n              ) :\n              null\n          ),\n        ),\n      ),\n      cssFooter(\n        cssFooterContent(\n          // If _selectByOptions exists and has more than then \"NoLinkOption\", show the selector.\n          dom.maybe((use) => this._selectByOptions && use(this._selectByOptions).length > 1, () =>\n            withInfoTooltip(\n              cssSelectBy(\n                cssSmallLabel('SELECT BY'),\n                dom.update(cssSelect(this._value.link, this._selectByOptions!),\n                          testId('selectby'))\n              ),\n              GristTooltips.selectBy(),\n              {tooltipMenuOptions: {attach: null}, domArgs: [\n                this._behavioralPromptsManager.attachTip('pageWidgetPickerSelectBy', {\n                  popupOptions: {\n                    attach: null,\n                    placement: 'bottom',\n                  }\n                }),\n              ]},\n            )\n          ),\n          dom('div', {style: 'flex-grow: 1'}),\n          bigPrimaryButton(\n            // TODO: The button's label of the page widget picker should read 'Close' instead when\n            // there are no changes.\n            this._options.buttonLabel || t(\"Add to Page\"),\n            dom.prop('disabled', (use) => !isValidSelection(\n              use(this._value.table), use(this._value.type), this._options.isNewPage)\n            ),\n            dom.on('click', () => this._onSave().catch(reportError)),\n            testId('addBtn'),\n          ),\n        ),\n      ),\n    );\n  }\n\n  private _closeSummarizePanel() {\n    this._value.summarize.set(false);\n    this._value.columns.set([]);\n  }\n\n  private _openSummarizePanel() {\n    this._value.summarize.set(true);\n  }\n\n  private _selectType(type: IWidgetType) {\n    this._value.type.set(type);\n  }\n\n  private _selectTable(tid: TableId) {\n    if (tid !== this._value.table.get()) {\n      this._value.link.set(NoLink);\n    }\n    this._value.table.set(tid);\n    this._closeSummarizePanel();\n  }\n\n  private _isSelected(el: HTMLElement) {\n    return el.classList.contains(cssEntry.className + '-selected');\n  }\n\n  private _selectPivot(tid: TableId, pivotEl: HTMLElement) {\n    if (this._isSelected(pivotEl)) {\n      this._closeSummarizePanel();\n    } else {\n      if (tid !== this._value.table.get()) {\n        this._value.columns.set([]);\n        this._value.table.set(tid);\n        this._value.link.set(NoLink);\n      }\n      this._openSummarizePanel();\n    }\n  }\n\n  private _toggleColumnId(cid: number) {\n    const ids = this._value.columns.get();\n    const newIds = ids.includes(cid) ? without(ids, cid) : [...ids, cid];\n    this._value.columns.set(newIds);\n  }\n\n  private _isTypeDisabled(type: IWidgetType, table: TableId) {\n    if (table === null) {\n      return false;\n    }\n    return !getCompatibleTypes(table, this._options.isNewPage).includes(type);\n  }\n\n}\n\nfunction header(label: string, ...args: DomElementArg[]) {\n  return cssHeader(dom('h4', label), ...args, testId('heading'));\n}\n\nconst cssContainer = styled('div', `\n  --outline: 1px solid ${theme.widgetPickerBorder};\n\n  max-height: 386px;\n  box-shadow: 0 2px 20px 0 ${theme.widgetPickerShadow};\n  border-radius: 2px;\n  display: flex;\n  flex-direction: column;\n  user-select: none;\n  background-color: ${theme.widgetPickerPrimaryBg};\n`);\n\nconst cssPopupWrapper = styled('div', `\n  &:focus {\n    outline: none;\n  }\n`);\n\nconst cssBody = styled('div', `\n  display: flex;\n  min-height: 0;\n`);\n\n// todo: try replace min-width / max-width\nconst cssPanel = styled('div', `\n  width: 224px;\n  font-size: ${vars.mediumFontSize};\n  overflow: auto;\n  padding-bottom: 18px;\n  &:nth-of-type(2n) {\n    background-color: ${theme.widgetPickerSecondaryBg};\n    outline: var(--outline);\n  }\n`);\n\nconst cssHeader = styled('div', `\n  color: ${theme.text};\n  margin: 24px 0 24px 24px;\n  font-size: ${vars.mediumFontSize};\n`);\n\nconst cssEntry = styled('div', `\n  color: ${theme.widgetPickerItemFg};\n  padding: 0 0 0 24px;\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  flex: 1 1 0px;\n  align-items: center;\n  white-space: nowrap;\n  overflow: hidden;\n  cursor: pointer;\n  &-selected {\n    background-color: ${theme.widgetPickerItemSelectedBg};\n  }\n  &-disabled {\n    color: ${theme.widgetPickerItemDisabledBg};\n    cursor: default;\n  }\n  &-disabled&-selected {\n    background-color: inherit;\n  }\n`);\n\nconst cssIcon = styled(icon, `\n  margin-right: 8px;\n  flex-shrink: 0;\n  --icon-color: ${theme.widgetPickerIcon};\n  .${cssEntry.className}-disabled > & {\n    opacity: 0.25;\n  }\n`);\n\nconst cssTypeIcon = styled(cssIcon, `\n  --icon-color: ${theme.widgetPickerPrimaryIcon};\n`);\n\nconst cssLabel = styled('span', `\n  text-overflow: ellipsis;\n  overflow: hidden;\n`);\n\nconst cssFieldLabel = styled(cssLabel, `\n  padding-right: 8px;\n`);\n\nconst cssEntryWrapper = styled('div', `\n  display: flex;\n  align-items: center;\n`);\n\nconst cssPivot = styled(cssEntry, `\n  width: 48px;\n  padding-left: 8px;\n  flex: 0 0 auto;\n`);\n\nconst cssBigIcon = styled(icon, `\n  width: 24px;\n  height: 24px;\n  background-color: ${theme.widgetPickerSummaryIcon};\n`);\n\nconst cssFooter = styled('div', `\n  display: flex;\n  border-top: var(--outline);\n`);\n\nconst cssFooterContent = styled('div', `\n  flex-grow: 1;\n  height: 65px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 24px 0 24px;\n`);\n\nconst cssSmallLabel = styled('span', `\n  color: ${theme.text};\n  font-size: ${vars.xsmallFontSize};\n  margin-right: 8px;\n`);\n\nconst cssSelect = styled(select, `\n  color: ${theme.selectButtonFg};\n  background-color: ${theme.selectButtonBg};\n  flex: 1 0 160px;\n  width: 160px;\n`);\n\nconst cssSelectBy = styled('div', `\n  display: flex;\n  align-items: center;\n`);\n\n// Returns a copy of array with its items sorted in the same order as they appear in other.\nfunction sortedAs(array: number[], other: number[]) {\n  const order: {[id: number]: number} = {};\n  for (const [index, item] of other.entries()) {\n    order[item] = index;\n  }\n  return array.slice().sort((a, b) => nativeCompare(order[a], order[b]));\n}\n","import {KoArray} from 'app/client/lib/koArray';\nimport * as koArray from 'app/client/lib/koArray';\nimport * as tableUtil from 'app/client/lib/tableUtil';\nimport {ColumnRec, DocModel, ViewFieldRec} from 'app/client/models/DocModel';\nimport {KoSaveableObservable} from 'app/client/models/modelUtil';\nimport {cssFieldEntry, cssFieldLabel} from 'app/client/ui/VisibleFieldsConfig';\nimport {colors, testId} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {menuText} from 'app/client/ui2018/menus';\nimport {FieldBuilder} from 'app/client/widgets/FieldBuilder';\nimport * as gutil from 'app/common/gutil';\nimport {Disposable, dom, fromKo, styled} from 'grainjs';\nimport ko from 'knockout';\nimport {menu, menuItem} from 'popweasel';\nimport {makeT} from 'app/client/lib/localization';\n\nconst t = makeT('RefSelect');\n\ninterface Item {\n  label: string;\n  value: string;\n}\n\n/**\n * Builder for the reference display multiselect.\n */\nexport class RefSelect extends Disposable {\n  public isForeignRefCol: ko.Computed<boolean>;\n  private _docModel: DocModel;\n  private _origColumn: ColumnRec;\n  private _colId: KoSaveableObservable<string>;\n  private _fieldObs: ko.Computed<ViewFieldRec | null>;\n  private _validCols: ko.Computed<ColumnRec[]>;\n  private _added: KoArray<Item>;\n  private _addedSet: ko.Computed<Set<string>>;\n\n  constructor(options: {\n    docModel: DocModel,\n    origColumn: ColumnRec,\n    fieldBuilder: ko.Computed<FieldBuilder | null>,\n  }) {\n    super();\n    this._docModel = options.docModel;\n    this._origColumn = options.origColumn;\n    this._colId = this._origColumn.colId;\n\n    // Indicates whether this is a ref col that references a different table.\n    // (That's the only time when RefSelect is offered.)\n    this.isForeignRefCol = this.autoDispose(ko.computed(() => {\n      const table = this._origColumn.refTable();\n      return Boolean(table && table.getRowId() !== this._origColumn.parentId());\n    }));\n\n    // Computed for the current fieldBuilder's field, if it exists.\n    this._fieldObs = this.autoDispose(ko.computed(() => {\n      const builder = options.fieldBuilder();\n      return builder ? builder.field : null;\n    }));\n\n    // List of valid cols in the currently referenced table.\n    this._validCols = this.autoDispose(ko.computed(() => {\n      const refTable = this._origColumn.refTable();\n      if (refTable) {\n        return refTable.columns().all().filter(col => !col.isHiddenCol() &&\n          !gutil.startsWith(col.type(), 'Ref:'));\n      }\n      return [];\n    }));\n\n    // Returns the array of columns added to the multiselect. Used as a helper to create a synced KoArray.\n    const _addedObs = this.autoDispose(ko.computed(() => {\n      return this.isForeignRefCol() && this._fieldObs() ?\n        this._getReferencedCols(this._fieldObs()!).map(c => ({ label: c.label(), value: c.colId() })) : [];\n    }));\n\n    // KoArray of columns displaying data from the referenced table in the current section.\n    this._added = this.autoDispose(koArray.syncedKoArray(_addedObs));\n\n    // Set of added colIds.\n    this._addedSet = this.autoDispose(ko.computed(() => new Set(this._added.all().map(item => item.value))));\n  }\n\n  /**\n   * Builds the multiselect dom to select columns to added to the table to show data from the\n   * referenced table.\n   */\n  public buildDom() {\n    return cssFieldList(\n      testId('ref-select'),\n      dom.forEach(fromKo(this._added.getObservable()), (col) =>\n        cssFieldEntry(\n          cssFieldLabel(dom.text(col.label)),\n          cssRemoveIcon('Remove',\n            dom.on('click', () => this._removeFormulaField(col)),\n            testId('ref-select-remove'),\n          ),\n          testId('ref-select-item'),\n        )\n      ),\n      cssAddLink(cssAddIcon('Plus'), t(\"Add Column\"),\n        menu(() => [\n          ...this._validCols.peek()\n            .filter((col) => !this._addedSet.peek().has(col.colId.peek()))\n            .map((col) =>\n              menuItem(() => this._addFormulaField({ label: col.label(), value: col.colId() }),\n                col.label.peek())\n            ),\n          cssEmptyMenuText(t(\"No columns to add\")),\n          testId('ref-select-menu'),\n        ]),\n        testId('ref-select-add'),\n      ),\n    );\n  }\n\n  /**\n   * Adds the column item to the multiselect. If the visibleCol is 'id', sets the visibleCol.\n   * Otherwise, adds a field which refers to the column to the table. If a column with the\n   * necessary formula exists, only adds a field to this section, otherwise adds the necessary\n   * column and field.\n   */\n  private async _addFormulaField(item: Item) {\n    const field = this._fieldObs();\n    if (!field) {\n      return;\n    }\n    const tableData = this._docModel.dataTables[this._origColumn.table().tableId()].tableData;\n    // Check if column already exists in the table\n    const cols = this._origColumn.table().columns().all();\n    const colMatch = cols.find(c => c.formula() === `$${this._colId()}.${item.value}` && !c.isHiddenCol());\n    // Get field position, so that the new field is inserted just after the current field.\n    const fields = field.viewSection().viewFields();\n    const index = fields.all()\n      .sort((a, b) => a.parentPos() > b.parentPos() ? 1 : -1)\n      .findIndex(f => f.getRowId() === field.getRowId());\n    const pos = tableUtil.fieldInsertPositions(fields, index + 1)[0];\n    let colAction: Promise<any>|undefined;\n    if (colMatch) {\n      // If column exists, use it.\n      colAction = Promise.resolve({ colRef: colMatch.getRowId(), colId: colMatch.colId() });\n    } else {\n      // If column doesn't exist, add it (without fields).\n      colAction = tableData.sendTableAction(['AddColumn', `${this._colId()}_${item.value}`, {\n        type: 'Any',\n        isFormula: true,\n        formula: `$${this._colId()}.${item.value}`,\n        _position: pos\n      }])!;\n    }\n    const colInfo = await colAction;\n    // Add field to the current section (if it isn't a raw data section - as this one will have\n    // this field already)\n    if (field.viewSection().isRaw()) { return; }\n    const fieldInfo = {\n      colRef: colInfo.colRef,\n      parentId: field.viewSection().getRowId(),\n      parentPos: pos\n    };\n    return this._docModel.viewFields.sendTableAction(['AddRecord', null, fieldInfo]);\n  }\n\n  /**\n   * Removes the column item from the multiselect. If the item is the visibleCol, clears to show\n   * row id. Otherwise, removes all fields which refer to the column from the table.\n   */\n  private _removeFormulaField(item: Item) {\n    const tableData = this._docModel.dataTables[this._origColumn.table().tableId()].tableData;\n    // Iterate through all display fields in the current section.\n    this._getReferrerFields(item.value).forEach(refField => {\n      const sectionId = this._fieldObs()!.viewSection().getRowId();\n      if (refField.column().viewFields().all()\n          .filter(field => !field.viewSection().isRaw())\n          .some(field => field.parentId() !== sectionId)) {\n        // The col has fields in other sections, remove only the fields in this section.\n        return this._docModel.viewFields.sendTableAction(['RemoveRecord', refField.getRowId()]);\n      } else {\n        // The col is only displayed in this section, remove the column.\n        return tableData.sendTableAction(['RemoveColumn', refField.column().colId()]);\n      }\n    });\n  }\n\n  /**\n   * Returns a list of fields in the current section whose formulas refer to 'colId' in the table this\n   * reference column refers to.\n   */\n  private _getReferrerFields(colId: string) {\n    const re = new RegExp(\"^\\\\$\" + this._colId() + \"\\\\.\" + colId + \"$\");\n    return this._fieldObs()!.viewSection().viewFields().all()\n      .filter(field => re.exec(field.column().formula()));\n  }\n\n  /**\n   * Returns a non-repeating list of columns in the referenced table referred to by fields in\n   * the current section.\n   */\n  private _getReferencedCols(field: ViewFieldRec) {\n    const matchesSet = this._getFormulaMatchSet(field);\n    return this._validCols().filter(c => matchesSet.has(c.colId()));\n  }\n\n  /**\n   * Helper function for getReferencedCols. Iterates through fields in\n   * the current section, returning a set of colIds which those fields' formulas refer to.\n   */\n  private _getFormulaMatchSet(field: ViewFieldRec) {\n    const fields = field.viewSection().viewFields().all();\n    const re = new RegExp(\"^\\\\$\" + this._colId() + \"\\\\.(\\\\w+)$\");\n    return new Set(fields.map(f => {\n      const found = re.exec(f.column().formula());\n      return found ? found[1] : null;\n    }));\n  }\n}\n\nconst cssFieldList = styled('div', `\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  & > .${cssFieldEntry.className} {\n    margin: 2px 0;\n  }\n`);\n\nconst cssEmptyMenuText = styled(menuText, `\n  font-size: inherit;\n  &:not(:first-child) {\n    display: none;\n  }\n`);\n\nconst cssAddLink = styled('div', `\n  display: flex;\n  cursor: pointer;\n  color: ${colors.lightGreen};\n  --icon-color: ${colors.lightGreen};\n\n  &:not(:first-child) {\n    margin-top: 8px;\n  }\n  &:hover, &:focus, &:active {\n    color: ${colors.darkGreen};\n    --icon-color: ${colors.darkGreen};\n  }\n`);\n\nconst cssAddIcon = styled(icon, `\n  margin-right: 4px;\n`);\n\nconst cssRemoveIcon = styled(icon, `\n  display: none;\n  cursor: pointer;\n  flex: none;\n  margin-left: 8px;\n  .${cssFieldEntry.className}:hover & {\n    display: block;\n  }\n`);\n","import {allCommands} from 'app/client/components/commands';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport * as kf from 'app/client/lib/koForm';\nimport {makeT} from 'app/client/lib/localization';\nimport {ColumnToMapImpl} from 'app/client/models/ColumnToMap';\nimport {ColumnRec, ViewSectionRec} from 'app/client/models/DocModel';\nimport {reportError} from 'app/client/models/errors';\nimport {cssHelp, cssLabel, cssRow, cssSeparator} from 'app/client/ui/RightPanelStyles';\nimport {cssDragRow, cssFieldEntry, cssFieldLabel} from 'app/client/ui/VisibleFieldsConfig';\nimport {basicButton, primaryButton, textButton} from 'app/client/ui2018/buttons';\nimport {theme, vars} from 'app/client/ui2018/cssVars';\nimport {cssDragger} from 'app/client/ui2018/draggableList';\nimport {textInput} from 'app/client/ui2018/editableLabel';\nimport {IconName} from 'app/client/ui2018/IconList';\nimport {icon} from 'app/client/ui2018/icons';\nimport {cssLink} from 'app/client/ui2018/links';\nimport {IOptionFull, menu, menuItem, menuText, select} from 'app/client/ui2018/menus';\nimport {AccessLevel, ICustomWidget, isSatisfied} from 'app/common/CustomWidget';\nimport {GristLoadConfig} from 'app/common/gristUrls';\nimport {unwrap} from 'app/common/gutil';\nimport {\n  bundleChanges,\n  Computed,\n  Disposable,\n  dom,\n  fromKo,\n  makeTestId,\n  MultiHolder,\n  Observable,\n  styled,\n  UseCBOwner\n} from 'grainjs';\n\nconst t = makeT('CustomSectionConfig');\n\n// Custom URL widget id - used as mock id for selectbox.\nconst CUSTOM_ID = 'custom';\nconst testId = makeTestId('test-config-widget-');\n\n/**\n * Custom Widget section.\n * Allows to select custom widget from the list of available widgets\n * (taken from /widgets endpoint), or enter a Custom URL.\n * When Custom Widget has a desired access level (in accessLevel field),\n * will prompt user to approve it. \"None\" access level is auto approved,\n * so prompt won't be shown.\n *\n * When gristConfig.enableWidgetRepository is set to false, it will only\n * allow to specify the custom URL.\n */\n\nclass ColumnPicker extends Disposable {\n  constructor(\n    private _value: Observable<number|number[]|null>,\n    private _column: ColumnToMapImpl,\n    private _section: ViewSectionRec){\n    super();\n  }\n  public buildDom() {\n    // Rewrite value to ignore old configuration when allowMultiple is switched.\n    const properValue = Computed.create(this, use => {\n      const value = use(this._value);\n      return Array.isArray(value) ? null : value;\n    });\n    properValue.onWrite(value => this._value.set(value));\n    const options = Computed.create(this, use => {\n      return use(this._section.columns)\n        .filter(col => this._column.canByMapped(use(col.pureType)))\n        .map((col) => ({value: col.getRowId(), label: use(col.label), icon: 'FieldColumn' as IconName}));\n    });\n    return [\n      cssLabel(\n        this._column.title,\n        this._column.optional ? cssSubLabel(t(\" (optional)\")) : null,\n        testId('label-for-' + this._column.name),\n      ),\n      this._column.description ? cssHelp(\n        this._column.description,\n        testId('help-for-' + this._column.name),\n      ) : null,\n      cssRow(\n        select(\n          properValue,\n          options,\n          {\n            defaultLabel: this._column.typeDesc != \"any\"\n              ? t(\"Pick a {{columnType}} column\", {\"columnType\": this._column.typeDesc})\n              : t(\"Pick a column\")\n          }\n        ),\n        testId('mapping-for-' + this._column.name),\n      ),\n    ];\n  }\n}\n\nclass ColumnListPicker extends Disposable {\n  constructor(\n    private _value: Observable<number|number[]|null>,\n    private _column: ColumnToMapImpl,\n    private _section: ViewSectionRec) {\n    super();\n  }\n  public buildDom() {\n    return dom.domComputed((use) => {\n      return [\n        cssLabel(this._column.title,\n          cssLabel.cls(\"-required\", !this._column.optional),\n          testId('label-for-' + this._column.name),\n        ),\n        this._buildDraggableList(use),\n        this._buildAddColumn()\n      ];\n    });\n  }\n  private _buildAddColumn() {\n    return [\n      cssRow(\n        cssAddMapping(\n          cssAddIcon('Plus'), t(\"Add\") + ' ' + this._column.title,\n          menu(() => {\n            const otherColumns = this._getNotMappedColumns();\n            const typedColumns = otherColumns.filter(this._typeFilter());\n            const wrongTypeCount = otherColumns.length - typedColumns.length;\n            return [\n              ...typedColumns\n              .map((col) => menuItem(\n                () => this._addColumn(col),\n                col.label.peek(),\n              )),\n              wrongTypeCount > 0 ? menuText(\n                t(\"{{wrongTypeCount}} non-{{columnType}} columns are not shown\", {\n                  wrongTypeCount,\n                  columnType: this._column.type.toLowerCase(),\n                  count: wrongTypeCount\n                }),\n                testId('map-message-' + this._column.name)\n              ) : null\n            ];\n          }),\n          testId('add-column-for-' + this._column.name),\n        )\n      ),\n    ];\n  }\n\n  // Helper method for filtering columns that can be picked by the widget.\n  private _typeFilter = (use = unwrap) => (col: ColumnRec) => this._column.canByMapped(use(col.pureType));\n\n  private _buildDraggableList(use: UseCBOwner) {\n    return dom.update(kf.draggableList(\n      this._readItems(use),\n      this._renderItem.bind(this, use),\n      {\n        itemClass: cssDragRow.className,\n        reorder: this._reorder.bind(this),\n        receive: this._addColumn.bind(this),\n        drag_indicator: cssDragger,\n      }\n    ), testId('map-list-for-' + this._column.name));\n  }\n  private _getNotMappedColumns(): ColumnRec[] {\n    // Get all columns.\n    const all = this._section.columns.peek();\n    const mapped = this._list();\n    return all.filter(col => !mapped.includes(col.id.peek()));\n  }\n  private _readItems(use: UseCBOwner): ColumnRec[] {\n    let selectedRefs = (use(this._value) || []) as number[];\n    // Ignore if configuration was changed from what it was saved.\n    if (!Array.isArray(selectedRefs)) {\n      selectedRefs = [];\n    }\n    // Filter columns by type - when column type has changed since mapping.\n    const columns = use(this._section.columns).filter(this._typeFilter(use));\n    const columnMap = new Map(columns.map(c => [c.id.peek(), c]));\n    // Remove any columns that are no longer there.\n    return selectedRefs.map(s => columnMap.get(s)!).filter(c => Boolean(c));\n  }\n  private _renderItem(use: UseCBOwner, field: ColumnRec): any {\n    return cssFieldEntry(\n      cssFieldLabel(\n        dom.text(field.label),\n        testId('ref-select-label'),\n      ),\n      cssRemoveIcon(\n        'Remove',\n        dom.on('click', () => this._remove(field)),\n        testId('ref-select-remove'),\n      ),\n    );\n  }\n\n  // Helper method that for accessing mapped columns. Can be used to set and retrieve the value.\n  private _list(value: number[]): void\n  private _list(): number[]\n  private _list(value?: number[]) {\n    if (value) {\n      this._value.set(value);\n    } else {\n      let current = (this._value.get() || []) as number[];\n      // Ignore if the saved value is not a number.\n      if (!Array.isArray(current)) {\n        current = [];\n      }\n      return current;\n    }\n  }\n\n  private _reorder(column: ColumnRec, nextColumn: ColumnRec|null): any {\n    const id = column.id.peek();\n    const nextId = nextColumn?.id.peek();\n    const currentList = this._list();\n    const indexOfId = currentList.indexOf(id);\n    // Remove element from the list.\n    currentList.splice(indexOfId, 1);\n    const indexOfNext = nextId ? currentList.indexOf(nextId) : currentList.length;\n    // Insert before next element or at the end.\n    currentList.splice(indexOfNext, 0, id);\n    this._list(currentList);\n  }\n  private _remove(column: ColumnRec): any {\n    const current = this._list();\n    this._value.set(current.filter(c => c != column.id.peek()));\n  }\n  private _addColumn(col: ColumnRec): any {\n    const current = this._list();\n    current.push(col.id.peek());\n    this._value.set(current);\n  }\n}\n\nclass CustomSectionConfigurationConfig extends Disposable{\n  // Does widget has custom configuration.\n  private readonly _hasConfiguration: Computed<boolean>;\n  constructor(private _section: ViewSectionRec) {\n    super();\n    this._hasConfiguration = Computed.create(this, use => use(_section.hasCustomOptions));\n  }\n  public buildDom() {\n    // Show prompt, when desired access level is different from actual one.\n    return dom(\n      'div',\n      dom.maybe(this._hasConfiguration, () =>\n        cssSection(\n          textButton(\n            t(\"Open configuration\"),\n            dom.on('click', () => this._openConfiguration()),\n            testId('open-configuration')\n          )\n        )\n      ),\n      dom.maybeOwned(use => use(this._section.columnsToMap), (owner, columns) => {\n        const createObs = (column: ColumnToMapImpl) => {\n          const obs = Computed.create(owner, use => {\n            const savedDefinition = use(this._section.customDef.columnsMapping) || {};\n            return savedDefinition[column.name];\n          });\n          obs.onWrite(async (value) => {\n            const savedDefinition = this._section.customDef.columnsMapping.peek() || {};\n            savedDefinition[column.name] = value;\n            await this._section.customDef.columnsMapping.setAndSave(savedDefinition);\n          });\n          return obs;\n        };\n        // Create observables for all columns to pick.\n        const mappings = columns.map(c => new ColumnToMapImpl(c)).map((column) => ({\n          value: createObs(column),\n          column\n        }));\n        return [\n          ...mappings.map(m => m.column.allowMultiple\n            ? dom.create(ColumnListPicker, m.value, m.column, this._section)\n            : dom.create(ColumnPicker, m.value, m.column, this._section))\n        ];\n      })\n    );\n  }\n  private _openConfiguration(): void {\n    allCommands.openWidgetConfiguration.run();\n  }\n\n\n}\n\nexport class CustomSectionConfig extends Disposable {\n\n  protected _customSectionConfigurationConfig: CustomSectionConfigurationConfig;\n  // Holds all available widget definitions.\n  private _widgets: Observable<ICustomWidget[]>;\n  // Holds selected option (either custom string or a widgetId).\n  private readonly _selectedId: Computed<string | null>;\n  // Holds custom widget URL.\n  private readonly _url: Computed<string>;\n  // Enable or disable widget repository.\n  private readonly _canSelect: boolean = true;\n  // When widget is changed, it sets its desired access level. We will prompt\n  // user to approve or reject it.\n  private readonly _desiredAccess: Observable<AccessLevel|null>;\n  // Current access level (stored inside a section).\n  private readonly _currentAccess: Computed<AccessLevel>;\n\n\n\n\n  constructor(protected _section: ViewSectionRec, private _gristDoc: GristDoc) {\n    super();\n    this._customSectionConfigurationConfig = new CustomSectionConfigurationConfig(_section);\n\n    // Test if we can offer widget list.\n    const gristConfig: GristLoadConfig = (window as any).gristConfig || {};\n    this._canSelect = gristConfig.enableWidgetRepository ?? true;\n\n    // Array of available widgets - will be updated asynchronously.\n    this._widgets = Observable.create(this, []);\n    this._getWidgets().catch(reportError);\n    // Request for rest of the widgets.\n\n    // Selected value from the dropdown (contains widgetId or \"custom\" string for Custom URL)\n    this._selectedId = Computed.create(this, use => {\n      if (use(_section.customDef.widgetDef)) {\n        return _section.customDef.widgetDef.peek()!.widgetId;\n      }\n      return CUSTOM_ID;\n    });\n    this._selectedId.onWrite(async value => {\n      if (value === CUSTOM_ID) {\n        // Select Custom URL\n        bundleChanges(() => {\n          // Clear url.\n          _section.customDef.url(null);\n          // Clear widget definition.\n          _section.customDef.widgetDef(null);\n          // Reset access level to none.\n          _section.customDef.access(AccessLevel.none);\n          // Clear all saved options.\n          _section.customDef.widgetOptions(null);\n          // Reset custom configuration flag.\n          _section.hasCustomOptions(false);\n          // Clear column mappings.\n          _section.customDef.columnsMapping(null);\n          _section.columnsToMap(null);\n          this._desiredAccess.set(AccessLevel.none);\n        });\n        await _section.saveCustomDef();\n      } else {\n        // Select Widget\n        const selectedWidget = this._widgets.get().find(w => w.widgetId === value);\n        if (!selectedWidget) {\n          // should not happen\n          throw new Error('Error accessing widget from the list');\n        }\n        // If user selected the same one, do nothing.\n        if (_section.customDef.widgetDef.peek()?.widgetId === value) {\n          return;\n        }\n        bundleChanges(() => {\n          // Clear access level\n          _section.customDef.access(AccessLevel.none);\n          // When widget wants some access, set desired access level.\n          this._desiredAccess.set(selectedWidget.accessLevel || AccessLevel.none);\n          // Update widget definition.\n          _section.customDef.widgetDef(selectedWidget);\n          // Update widget URL.\n          _section.customDef.url(selectedWidget.url);\n          // Clear options.\n          _section.customDef.widgetOptions(null);\n          // Clear has custom configuration.\n          _section.hasCustomOptions(false);\n          // Clear column mappings.\n          _section.customDef.columnsMapping(null);\n          _section.columnsToMap(null);\n        });\n        await _section.saveCustomDef();\n      }\n    });\n\n    // Url for the widget, taken either from widget definition, or provided by hand for Custom URL.\n    // For custom widget, we will store url also in section definition.\n    this._url = Computed.create(this, use => use(_section.customDef.url) || '');\n    this._url.onWrite(newUrl => _section.customDef.url.setAndSave(newUrl));\n\n    // Compute current access level.\n    this._currentAccess = Computed.create(\n      this,\n      use => (use(_section.customDef.access) as AccessLevel) || AccessLevel.none\n    );\n    this._currentAccess.onWrite(async newAccess => {\n      await _section.customDef.access.setAndSave(newAccess);\n    });\n    // From the start desired access level is the same as current one.\n    this._desiredAccess = fromKo(_section.desiredAccessLevel);\n\n    // Clear intermediate state when section changes.\n    this.autoDispose(_section.id.subscribe(() => this._reject()));\n  }\n\n  public buildDom() {\n    // UI observables holder.\n    const holder = new MultiHolder();\n\n    // Show prompt, when desired access level is different from actual one.\n    const prompt = Computed.create(holder, use =>\n      use(this._desiredAccess)\n      && !isSatisfied(use(this._currentAccess), use(this._desiredAccess)!));\n    // If this is empty section or not.\n    const isSelected = Computed.create(holder, use => Boolean(use(this._selectedId)));\n    // If user is using custom url.\n    const isCustom = Computed.create(holder, use => use(this._selectedId) === CUSTOM_ID || !this._canSelect);\n    // Options for the select-box (all widgets definitions and Custom URL)\n    const options = Computed.create(holder, use => [\n      {label: 'Custom URL', value: 'custom'},\n      ...use(this._widgets).map(w => ({label: w.name, value: w.widgetId})),\n    ]);\n    function buildPrompt(level: AccessLevel|null) {\n      if (!level) {\n        return null;\n      }\n      switch(level) {\n        case AccessLevel.none: return cssConfirmLine(t(\"Widget does not require any permissions.\"));\n        case AccessLevel.read_table:\n          return cssConfirmLine(t(\"Widget needs to {{read}} the current table.\", {read: dom(\"b\", \"read\")}));\n        case AccessLevel.full:\n          return cssConfirmLine(t(\"Widget needs {{fullAccess}} to this document.\", {\n            fullAccess: dom(\"b\", \"full access\")\n          }));\n        default: throw new Error(`Unsupported ${level} access level`);\n      }\n    }\n    // Options for access level.\n    const levels: IOptionFull<string>[] = [\n      {label: t(\"No document access\"), value: AccessLevel.none},\n      {label: t(\"Read selected table\"), value: AccessLevel.read_table},\n      {label: t(\"Full document access\"), value: AccessLevel.full},\n    ];\n    return dom(\n      'div',\n      dom.autoDispose(holder),\n      this.shouldRenderWidgetSelector() &&\n      this._canSelect\n        ? cssRow(\n          select(this._selectedId, options, {\n            defaultLabel: t(\"Select Custom Widget\"),\n            menuCssClass: cssMenu.className,\n          }),\n          testId('select')\n        )\n        : null,\n      dom.maybe(isCustom && this.shouldRenderWidgetSelector(), () => [\n        cssRow(\n          cssTextInput(\n            this._url,\n            async value => this._url.set(value),\n            dom.attr('placeholder', t(\"Enter Custom URL\")),\n            testId('url')\n          ),\n          this._gristDoc.behavioralPromptsManager.attachTip('customURL', {\n            popupOptions: {\n              placement: 'left-start',\n            }\n          })\n        ),\n      ]),\n      dom.maybe(prompt, () =>\n        kf.prompt(\n          {tabindex: '-1'},\n          cssColumns(\n            cssWarningWrapper(icon('Lock')),\n            dom(\n              'div',\n              cssConfirmRow(\n                dom.domComputed(this._desiredAccess, (level) => buildPrompt(level))\n              ),\n              cssConfirmRow(\n                primaryButton(\n                  'Accept',\n                  testId('access-accept'),\n                  dom.on('click', () => this._accept())\n                ),\n                basicButton(\n                  'Reject',\n                  testId('access-reject'),\n                  dom.on('click', () => this._reject())\n                )\n              )\n            )\n          )\n        )\n      ),\n      dom.maybe(\n        use => use(isSelected) || !this._canSelect,\n        () => [\n          cssLabel('ACCESS LEVEL'),\n          cssRow(select(this._currentAccess, levels), testId('access')),\n        ]\n      ),\n      cssSection(\n        cssLink(\n          dom.attr('href', 'https://support.getgrist.com/widget-custom'),\n          dom.attr('target', '_blank'),\n          t(\"Learn more about custom widgets\")\n        )\n      ),\n      cssSeparator(),\n      this._customSectionConfigurationConfig.buildDom(),\n    );\n  }\n\n  protected shouldRenderWidgetSelector(): boolean {\n    return true;\n  }\n\n  protected async _getWidgets() {\n    const api = this._gristDoc.app.topAppModel.api;\n    const wigets = await api.getWidgets();\n    // Request for rest of the widgets.\n    if (this._canSelect) {\n      // From the start we will provide single widget definition\n      // that was chosen previously.\n      if (this._section.customDef.widgetDef.peek()) {\n        wigets.push(this._section.customDef.widgetDef.peek()!);\n      }\n    }\n    this._widgets.set(wigets);\n  }\n\n\n\n  private _accept() {\n    if (this._desiredAccess.get()) {\n      this._currentAccess.set(this._desiredAccess.get()!);\n    }\n    this._reject();\n  }\n\n  private _reject() {\n    this._desiredAccess.set(null);\n  }\n}\n\nconst cssWarningWrapper = styled('div', `\n  padding-left: 8px;\n  padding-top: 6px;\n  --icon-color: ${theme.iconError}\n`);\n\nconst cssColumns = styled('div', `\n  display: flex;\n`);\n\nconst cssConfirmRow = styled('div', `\n  display: flex;\n  padding: 8px;\n  gap: 8px;\n`);\n\nconst cssConfirmLine = styled('span', `\n  white-space: pre-wrap;\n`);\n\nconst cssSection = styled('div', `\n  margin: 16px 16px 12px 16px;\n`);\n\nconst cssMenu = styled('div', `\n  & > li:first-child {\n    border-bottom: 1px solid ${theme.menuBorder};\n  }\n`);\n\nconst cssAddIcon = styled(icon, `\n  margin-right: 4px;\n`);\n\nconst cssRemoveIcon = styled(icon, `\n  display: none;\n  cursor: pointer;\n  flex: none;\n  margin-left: 8px;\n  .${cssFieldEntry.className}:hover & {\n    display: block;\n  }\n`);\n\n// Additional text in label (greyed out)\nconst cssSubLabel = styled('span', `\n  text-transform: none;\n  font-size: ${vars.xsmallFontSize};\n  color: ${theme.lightText};\n`);\n\nconst cssAddMapping = styled('div', `\n  display: flex;\n  cursor: pointer;\n  color: ${theme.controlFg};\n  --icon-color: ${theme.controlFg};\n\n  &:not(:first-child) {\n    margin-top: 8px;\n  }\n  &:hover, &:focus, &:active {\n    color: ${theme.controlHoverFg};\n    --icon-color: ${theme.controlHoverFg};\n  }\n`);\n\nconst cssTextInput = styled(textInput, `\n  flex: 1 0 auto;\n\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n\n  &:disabled {\n    color: ${theme.inputDisabledFg};\n    background-color: ${theme.inputDisabledBg};\n    pointer-events: none;\n  }\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n`);\n","import {makeT} from 'app/client/lib/localization';\nimport {KoSaveableObservable} from 'app/client/models/modelUtil';\nimport {autoGrow} from 'app/client/ui/forms';\nimport {textarea} from 'app/client/ui/inputs';\nimport {cssLabel, cssRow} from 'app/client/ui/RightPanelStyles';\nimport {testId, theme} from 'app/client/ui2018/cssVars';\nimport {CursorPos} from 'app/plugin/GristAPI';\nimport {dom, fromKo, MultiHolder, styled} from 'grainjs';\n\nconst t = makeT('DescriptionConfig');\n\nexport function buildDescriptionConfig(\n    owner: MultiHolder,\n    description: KoSaveableObservable<string>,\n    options: {\n      cursor: ko.Computed<CursorPos>,\n      testPrefix: string,\n    },\n  ) {\n\n    // We will listen to cursor position and force a blur event on\n    // the text input, which will trigger save before the column observable\n    // will change its value.\n    // Otherwise, blur will be invoked after column change and save handler will\n    // update a different column.\n    let editor: HTMLTextAreaElement | undefined;\n    owner.autoDispose(\n      options.cursor.subscribe(() => {\n        editor?.blur();\n      })\n    );\n\n    return [\n      cssLabel(t(\"DESCRIPTION\")),\n      cssRow(\n        editor = cssTextArea(fromKo(description),\n          { onInput: false },\n          { rows: '3' },\n          dom.on('blur', async (e, elem) => {\n            await description.saveOnly(elem.value);\n          }),\n          testId(`${options.testPrefix}-description`),\n          autoGrow(fromKo(description))\n        )\n      ),\n    ];\n  }\n\nconst cssTextArea = styled(textarea, `\n  color: ${theme.inputFg};\n  background-color: ${theme.mainPanelBg};\n  border: 1px solid ${theme.inputBorder};\n  width: 100%;\n  outline: none;\n  border-radius: 3px;\n  padding: 3px 7px;\n  min-height: calc(3em * 1.5);\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n\n  &[readonly] {\n    background-color: ${theme.inputDisabledBg};\n    color: ${theme.inputDisabledFg};\n  }\n`);\n","import { makeT } from 'app/client/lib/localization';\nimport { ViewSectionRec } from \"app/client/models/DocModel\";\nimport { KoSaveableObservable, setSaveValue } from \"app/client/models/modelUtil\";\nimport { cssLabel, cssRow } from \"app/client/ui/RightPanelStyles\";\nimport { squareCheckbox } from \"app/client/ui2018/checkbox\";\nimport { testId } from \"app/client/ui2018/cssVars\";\nimport { Computed, Disposable, dom, IDisposableOwner, styled } from \"grainjs\";\n\nconst t = makeT('GridOptions');\n\n/**\n * Builds the grid options.\n */\nexport class GridOptions extends Disposable {\n\n  constructor(private _section: ViewSectionRec) {\n    super();\n  }\n\n  public buildDom() {\n    const section = this._section;\n    return [\n      cssLabel(t(\"Grid Options\")),\n      dom('div', [\n        cssRow(\n          checkbox(setSaveValueFromKo(this, section.optionsObj.prop('verticalGridlines'))),\n          t(\"Vertical Gridlines\"),\n          testId('v-grid-button')\n        ),\n\n        cssRow(\n          checkbox(setSaveValueFromKo(this, section.optionsObj.prop('horizontalGridlines'))),\n          t(\"Horizontal Gridlines\"),\n          testId('h-grid-button')\n        ),\n\n        cssRow(\n          checkbox(setSaveValueFromKo(this, section.optionsObj.prop('zebraStripes'))),\n          t(\"Zebra Stripes\"),\n          testId('zebra-stripe-button')\n        ),\n\n        testId('grid-options')\n      ]),\n    ];\n  }\n\n}\n\n// Returns a grainjs observable that reflects the value of obs a knockout saveable observable. The\n// returned observable will set and save obs to the given value when written. If the obs.save() call\n// fails, then it gets reset to its previous value.\nfunction setSaveValueFromKo<T>(owner: IDisposableOwner, obs: KoSaveableObservable<T>) {\n  const ret = Computed.create(null, (use) => use(obs));\n  ret.onWrite(async (val) => {\n    await setSaveValue(obs, val);\n  });\n  return ret;\n}\n\nconst checkbox = styled(squareCheckbox, `\n  margin-right: 8px;\n`);\n","import {GristDoc} from \"../components/GristDoc\";\nimport {ViewSectionRec} from \"../models/entities/ViewSectionRec\";\nimport {CustomSectionConfig} from \"./CustomSectionConfig\";\n\nexport class PredefinedCustomSectionConfig extends CustomSectionConfig {\n\n\n  constructor(section: ViewSectionRec, gristDoc: GristDoc) {\n    super(section, gristDoc);\n  }\n\n  public buildDom() {\n    return this._customSectionConfigurationConfig.buildDom();\n  }\n\n  protected shouldRenderWidgetSelector(): boolean {\n    return false;\n  }\n\n  protected async _getWidgets(): Promise<void> {\n    // Do nothing.\n  }\n}\n","/**\n * Builds the structure of the right-side panel containing configuration and assorted tools.\n * It includes the regular tabs, to configure the Page (including several sub-tabs), and Field;\n * and allows other tools, such as Activity Feed, to be rendered temporarily in its place.\n *\n * A single RightPanel object is created in AppUI for a document page, and attached to PagePanels.\n * GristDoc registers callbacks with it to create various standard tabs. These are created as\n * needed, and destroyed when hidden.\n *\n * In addition, tools such as \"Activity Feed\" may use openTool() to replace the panel header and\n * content. The user may dismiss this panel.\n *\n * All methods above return an object which may  be disposed to close and dispose that specific\n * tab from the outside (e.g. when GristDoc is disposed).\n */\n\nimport * as commands from 'app/client/components/commands';\nimport {GristDoc, IExtraTool, TabContent} from 'app/client/components/GristDoc';\nimport {RefSelect} from 'app/client/components/RefSelect';\nimport ViewConfigTab from 'app/client/components/ViewConfigTab';\nimport {domAsync} from 'app/client/lib/domAsync';\nimport * as imports from 'app/client/lib/imports';\nimport {makeT} from 'app/client/lib/localization';\nimport {createSessionObs} from 'app/client/lib/sessionObs';\nimport {reportError} from 'app/client/models/AppModel';\nimport {ViewSectionRec} from 'app/client/models/DocModel';\nimport {CustomSectionConfig} from 'app/client/ui/CustomSectionConfig';\nimport {buildDescriptionConfig} from 'app/client/ui/DescriptionConfig';\nimport {BuildEditorOptions} from 'app/client/ui/FieldConfig';\nimport {GridOptions} from 'app/client/ui/GridOptions';\nimport {attachPageWidgetPicker, IPageWidget, toPageWidget} from 'app/client/ui/PageWidgetPicker';\nimport {PredefinedCustomSectionConfig} from \"app/client/ui/PredefinedCustomSectionConfig\";\nimport {cssLabel} from 'app/client/ui/RightPanelStyles';\nimport {linkId, selectBy} from 'app/client/ui/selectBy';\nimport {VisibleFieldsConfig} from 'app/client/ui/VisibleFieldsConfig';\nimport {widgetTypesMap} from \"app/client/ui/widgetTypesMap\";\nimport {basicButton, primaryButton} from 'app/client/ui2018/buttons';\nimport {testId, theme, vars} from 'app/client/ui2018/cssVars';\nimport {textInput} from 'app/client/ui2018/editableLabel';\nimport {IconName} from 'app/client/ui2018/IconList';\nimport {icon} from 'app/client/ui2018/icons';\nimport {select} from 'app/client/ui2018/menus';\nimport {FieldBuilder} from 'app/client/widgets/FieldBuilder';\nimport {StringUnion} from 'app/common/StringUnion';\nimport {IWidgetType} from 'app/common/widgetTypes';\nimport {\n  bundleChanges,\n  Computed,\n  Disposable,\n  dom,\n  domComputed,\n  DomContents,\n  DomElementArg,\n  DomElementMethod,\n  IDomComponent,\n  MultiHolder,\n  Observable,\n  styled,\n  subscribe\n} from 'grainjs';\nimport * as ko from 'knockout';\n\nconst t = makeT('RightPanel');\n\n// Represents a top tab of the right side-pane.\nconst TopTab = StringUnion(\"pageWidget\", \"field\");\n\n// Represents a subtab of pageWidget in the right side-pane.\nconst PageSubTab = StringUnion(\"widget\", \"sortAndFilter\", \"data\");\n\n// Returns the icon and label of a type, default to those associate to 'record' type.\nexport function getFieldType(widgetType: IWidgetType|null) {\n  // A map of widget type to the icon and label to use for a field of that widget.\n  const fieldTypes = new Map<IWidgetType, {label: string, icon: IconName, pluralLabel: string}>([\n    ['record', {label: t('Columns', { count: 1 }), icon: 'TypeCell', pluralLabel: t('Columns', { count: 2 })}],\n    ['detail', {label: t('Fields', { count: 1 }), icon: 'TypeCell', pluralLabel: t('Fields', { count: 2 })}],\n    ['single', {label: t('Fields', { count: 1 }), icon: 'TypeCell', pluralLabel: t('Fields', { count: 2 })}],\n    ['chart', {label: t('Series', { count: 1 }), icon: 'ChartLine', pluralLabel: t('Series', { count: 2 })}],\n    ['custom', {label: t('Columns', { count: 1 }), icon: 'TypeCell', pluralLabel: t('Columns', { count: 2 })}],\n  ]);\n\n  return fieldTypes.get(widgetType || 'record') || fieldTypes.get('record')!;\n}\n\nexport class RightPanel extends Disposable {\n  public readonly header: DomContents;\n  public readonly content: DomContents;\n\n  // If the panel is showing a tool, such as Action Log, instead of the usual section/field\n  // configuration, this will be set to the tool's header and content.\n  private _extraTool: Observable<IExtraTool|null>;\n\n  // Which of the two standard top tabs (page widget or field) is selected, or was last selected.\n  private _topTab = createSessionObs(this, \"rightTopTab\", \"pageWidget\", TopTab.guard);\n\n  // Which subtab is open for configuring page widget.\n  private _subTab = createSessionObs(this, \"rightPageSubTab\", \"widget\", PageSubTab.guard);\n\n  // Which type of page widget is active, e.g. \"record\" or \"chart\". This affects the names and\n  // icons in the top tab.\n  private _pageWidgetType = Computed.create<IWidgetType|null>(this, (use) => {\n    const section: ViewSectionRec = use(this._gristDoc.viewModel.activeSection);\n    return (use(section.parentKey) || null) as IWidgetType;\n  });\n\n  // Returns the active section if it's valid, null otherwise.\n  private _validSection = Computed.create(this, (use) => {\n    const sec = use(this._gristDoc.viewModel.activeSection);\n    return sec.getRowId() ? sec : null;\n  });\n\n  constructor(private _gristDoc: GristDoc, private _isOpen: Observable<boolean>) {\n    super();\n    this._extraTool = _gristDoc.rightPanelTool;\n    this.autoDispose(subscribe(this._extraTool, (_use, tool) => tool && _isOpen.set(true)));\n    this.header = this._buildHeaderDom();\n    this.content = this._buildContentDom();\n\n    this.autoDispose(commands.createGroup({\n      fieldTabOpen: () => this._openFieldTab(),\n      viewTabOpen: () => this._openViewTab(),\n      viewTabFocus: () => this._viewTabFocus(),\n      sortFilterTabOpen: () => this._openSortFilter(),\n      dataSelectionTabOpen: () => this._openDataSelection()\n    }, this, true));\n  }\n\n  private _openFieldTab() {\n    this._open('field');\n  }\n\n  private _openViewTab() {\n    this._open('pageWidget', 'widget');\n  }\n\n  private _viewTabFocus() {\n    // If the view tab is already open, focus on the first input.\n    this._focus('pageWidget');\n  }\n\n  private _openSortFilter() {\n    this._open('pageWidget', 'sortAndFilter');\n  }\n\n  private _openDataSelection() {\n    this._open('pageWidget', 'data');\n  }\n\n  private _open(topTab: typeof TopTab.type, subTab?: typeof PageSubTab.type) {\n    bundleChanges(() => {\n      this._isOpen.set(true);\n      this._topTab.set(topTab);\n      if (subTab) {\n        this._subTab.set(subTab);\n      }\n    });\n  }\n\n  private _focus(topTab: typeof TopTab.type) {\n    bundleChanges(() => {\n      if (!this._isOpen.get()) { return; }\n      this._isOpen.set(true);\n      this._topTab.set(topTab);\n    });\n  }\n\n  private _buildHeaderDom() {\n    return dom.domComputed((use) => {\n      if (!use(this._isOpen)) { return null; }\n      const tool = use(this._extraTool);\n      return tool ? this._buildToolHeader(tool) : this._buildStandardHeader();\n    });\n  }\n\n  private _buildToolHeader(tool: IExtraTool) {\n    return cssTopBarItem(cssTopBarIcon(tool.icon), tool.label,\n      cssHoverCircle(cssHoverIcon(\"CrossBig\"),\n        dom.on('click', () => this._gristDoc.showTool('none')),\n        testId('right-tool-close'),\n      ),\n      cssTopBarItem.cls('-selected', true)\n    );\n  }\n\n  private _buildStandardHeader() {\n    return dom.maybe(this._pageWidgetType, (type) => {\n      const widgetInfo = widgetTypesMap.get(type) || {label: 'Table', icon: 'TypeTable'};\n      const fieldInfo = getFieldType(type);\n      return [\n        cssTopBarItem(cssTopBarIcon(widgetInfo.icon), widgetInfo.label,\n          cssTopBarItem.cls('-selected', (use) => use(this._topTab) === 'pageWidget'),\n          dom.on('click', () => this._topTab.set(\"pageWidget\")),\n          testId('right-tab-pagewidget')),\n        cssTopBarItem(cssTopBarIcon(fieldInfo.icon), fieldInfo.label,\n          cssTopBarItem.cls('-selected', (use) => use(this._topTab) === 'field'),\n          dom.on('click', () => this._topTab.set(\"field\")),\n          testId('right-tab-field')),\n      ];\n    });\n  }\n\n  private _buildContentDom() {\n    return dom.domComputed((use) => {\n      if (!use(this._isOpen)) { return null; }\n      const tool = use(this._extraTool);\n      if (tool) { return tabContentToDom(tool.content); }\n\n      const topTab = use(this._topTab);\n      if (topTab === 'field') {\n        return dom.create(this._buildFieldContent.bind(this));\n      }\n      if (topTab === 'pageWidget' && use(this._pageWidgetType)) {\n        return dom.create(this._buildPageWidgetContent.bind(this));\n      }\n      return null;\n    });\n  }\n\n  private _buildFieldContent(owner: MultiHolder) {\n    const fieldBuilder = owner.autoDispose(ko.computed(() => {\n      const vsi = this._gristDoc.viewModel.activeSection?.().viewInstance();\n      return vsi && vsi.activeFieldBuilder();\n    }));\n\n    const selectedColumns = owner.autoDispose(ko.computed(() => {\n      const vsi = this._gristDoc.viewModel.activeSection?.().viewInstance();\n      if (vsi && vsi.selectedColumns) {\n        return vsi.selectedColumns();\n      }\n      const field = fieldBuilder()?.field;\n      return field ? [field] : [];\n    }));\n\n    const isMultiSelect = owner.autoDispose(ko.pureComputed(() => {\n      const list = selectedColumns();\n      return Boolean(list && list.length > 1);\n    }));\n\n    owner.autoDispose(selectedColumns.subscribe(cols => {\n      if (owner.isDisposed() || this._gristDoc.isDisposed() || this._gristDoc.viewModel.isDisposed()) { return; }\n      const section = this._gristDoc.viewModel.activeSection();\n      if (!section || section.isDisposed()) { return; }\n      section.selectedFields(cols || []);\n    }));\n    this._gristDoc.viewModel.activeSection()?.selectedFields(selectedColumns.peek() || []);\n\n    const docModel = this._gristDoc.docModel;\n    const origColRef = owner.autoDispose(ko.computed(() => fieldBuilder()?.origColumn.origColRef() || 0));\n    const origColumn = owner.autoDispose(docModel.columns.createFloatingRowModel(origColRef));\n    const isColumnValid = owner.autoDispose(ko.computed(() => Boolean(origColRef())));\n\n    // Builder for the reference display column multiselect.\n    const refSelect = RefSelect.create(owner, {docModel, origColumn, fieldBuilder});\n\n    // build cursor position observable\n    const cursor = owner.autoDispose(ko.computed(() => {\n      const vsi = this._gristDoc.viewModel.activeSection?.().viewInstance();\n      return vsi?.cursor.currentPosition() ?? {};\n    }));\n\n    return domAsync(imports.loadViewPane().then(ViewPane => {\n      const {buildNameConfig, buildFormulaConfig} = ViewPane.FieldConfig;\n      return dom.maybe(isColumnValid, () =>\n        buildConfigContainer(\n          cssSection(\n            dom.create(buildNameConfig, origColumn, cursor, isMultiSelect),\n          ),\n          cssSection(\n            dom.create(buildDescriptionConfig, origColumn.description, { cursor, \"testPrefix\": \"column\" }),\n          ),\n          cssSeparator(),\n          cssSection(\n            dom.create(buildFormulaConfig,\n              origColumn, this._gristDoc, this._activateFormulaEditor.bind(this)),\n          ),\n          cssSeparator(),\n          dom.maybe<FieldBuilder|null>(fieldBuilder, builder => [\n          cssLabel(t(\"COLUMN TYPE\")),\n            cssSection(\n              builder.buildSelectTypeDom(),\n            ),\n            cssSection(\n              builder.buildSelectWidgetDom(),\n            ),\n            cssSection(\n              builder.buildConfigDom(),\n            ),\n            builder.buildColorConfigDom(),\n            cssSection(\n              builder.buildSettingOptions(),\n              dom.maybe(isMultiSelect, () => disabledSection())\n            ),\n          ]),\n          cssSeparator(),\n          cssSection(\n            dom.maybe(refSelect.isForeignRefCol, () => [\n              cssLabel(t('Add referenced columns')),\n              cssRow(refSelect.buildDom()),\n              cssSeparator()\n            ]),\n            cssLabel(t(\"TRANSFORM\")),\n            dom.maybe<FieldBuilder|null>(fieldBuilder, builder => builder.buildTransformDom()),\n            dom.maybe(isMultiSelect, () => disabledSection()),\n            testId('panel-transform'),\n          ),\n          this._disableIfReadonly(),\n        )\n      );\n    }));\n  }\n\n  // Helper to activate the side-pane formula editor over the given HTML element.\n  private _activateFormulaEditor(options: BuildEditorOptions) {\n    const vsi = this._gristDoc.viewModel.activeSection().viewInstance();\n    if (!vsi) { return; }\n\n    const {refElem, editValue, canDetach, onSave, onCancel} = options;\n    const editRow = vsi.moveEditRowToCursor();\n    return vsi.activeFieldBuilder.peek().openSideFormulaEditor({\n      editRow,\n      refElem,\n      canDetach,\n      editValue,\n      onSave,\n      onCancel,\n    });\n  }\n\n  private _buildPageWidgetContent(_owner: MultiHolder) {\n    return [\n      cssSubTabContainer(\n        cssSubTab(t(\"Widget\"),\n          cssSubTab.cls('-selected', (use) => use(this._subTab) === 'widget'),\n          dom.on('click', () => this._subTab.set(\"widget\")),\n          testId('config-widget')),\n        cssSubTab(t(\"Sort & Filter\"),\n          cssSubTab.cls('-selected', (use) => use(this._subTab) === 'sortAndFilter'),\n          dom.on('click', () => this._subTab.set(\"sortAndFilter\")),\n          testId('config-sortAndFilter')),\n        cssSubTab(t(\"Data\"),\n          cssSubTab.cls('-selected', (use) => use(this._subTab) === 'data'),\n          dom.on('click', () => this._subTab.set(\"data\")),\n          testId('config-data')),\n      ),\n      dom.domComputed(this._subTab, (subTab) => (\n        dom.maybe(this._validSection, (activeSection) => (\n          buildConfigContainer(\n            subTab === 'widget' ? dom.create(this._buildPageWidgetConfig.bind(this), activeSection) :\n              subTab === 'sortAndFilter' ? dom.create(this._buildPageSortFilterConfig.bind(this)) :\n              subTab === 'data' ? dom.create(this._buildPageDataConfig.bind(this), activeSection) :\n              null\n          )\n        ))\n      ))\n    ];\n  }\n\n  private _createViewConfigTab(owner: MultiHolder): Observable<null|ViewConfigTab> {\n    const viewConfigTab = Observable.create<null|ViewConfigTab>(owner, null);\n    const gristDoc = this._gristDoc;\n    imports.loadViewPane()\n      .then(ViewPane => {\n        if (owner.isDisposed()) { return; }\n        viewConfigTab.set(owner.autoDispose(\n          ViewPane.ViewConfigTab.create({gristDoc, viewModel: gristDoc.viewModel})));\n      })\n      .catch(reportError);\n    return viewConfigTab;\n  }\n\n  private _buildPageWidgetConfig(owner: MultiHolder, activeSection: ViewSectionRec) {\n    // TODO: This uses private methods from ViewConfigTab. These methods are likely to get\n    // refactored, but if not, should be made public.\n    const viewConfigTab = this._createViewConfigTab(owner);\n    const hasCustomMapping = Computed.create(owner, use => {\n      const widgetType = use(this._pageWidgetType);\n      const isCustom = widgetType === 'custom' || widgetType?.startsWith('custom.');\n      const hasColumnMapping = use(activeSection.columnsToMap);\n      return Boolean(isCustom && hasColumnMapping);\n    });\n\n    // build cursor position observable\n    const cursor = owner.autoDispose(ko.computed(() => {\n      const vsi = this._gristDoc.viewModel.activeSection?.().viewInstance();\n      return vsi?.cursor.currentPosition() ?? {};\n    }));\n\n    return dom.maybe(viewConfigTab, (vct) => [\n      this._disableIfReadonly(),\n      cssLabel(dom.text(use => use(activeSection.isRaw) ? t(\"DATA TABLE NAME\") : t(\"WIDGET TITLE\")),\n        dom.style('margin-bottom', '14px'),\n      ),\n      cssRow(cssTextInput(\n        Computed.create(owner, (use) => use(activeSection.titleDef)),\n        val => activeSection.titleDef.saveOnly(val),\n        dom.boolAttr('disabled', use => {\n          const isRawTable = use(activeSection.isRaw);\n          const isSummaryTable = use(use(activeSection.table).summarySourceTable) !== 0;\n          return isRawTable && isSummaryTable;\n        }),\n        testId('right-widget-title')\n      )),\n\n      cssSection(\n        dom.create(buildDescriptionConfig, activeSection.description, { cursor, \"testPrefix\": \"right-widget\" }),\n      ),\n\n      dom.maybe(\n        (use) => !use(activeSection.isRaw),\n        () => cssRow(\n          primaryButton(t(\"Change Widget\"), this._createPageWidgetPicker()),\n          cssRow.cls('-top-space')\n        ),\n      ),\n\n      cssSeparator(),\n\n      dom.maybe((use) => ['detail', 'single'].includes(use(this._pageWidgetType)!), () => [\n        cssLabel(t(\"Theme\")),\n        dom('div',\n          vct._buildThemeDom(),\n          vct._buildLayoutDom())\n      ]),\n\n      domComputed((use) => {\n        if (use(this._pageWidgetType) !== 'record') { return null; }\n        return dom.create(GridOptions, activeSection);\n      }),\n\n      domComputed((use) => {\n        if (use(this._pageWidgetType) !== 'record') { return null; }\n        return [\n          cssSeparator(),\n          cssLabel(t(\"ROW STYLE\")),\n          domAsync(imports.loadViewPane().then(ViewPane =>\n            dom.create(ViewPane.ConditionalStyle, t(\"Row Style\"), activeSection, this._gristDoc)\n          ))\n        ];\n      }),\n\n      dom.maybe((use) => use(this._pageWidgetType) === 'chart', () => [\n        cssLabel(t(\"CHART TYPE\")),\n        vct._buildChartConfigDom(),\n      ]),\n\n      dom.maybe((use) => use(this._pageWidgetType) === 'custom', () => {\n        const parts = vct._buildCustomTypeItems() as any[];\n        return [\n          cssLabel(t(\"CUSTOM\")),\n          // If 'customViewPlugin' feature is on, show the toggle that allows switching to\n          // plugin mode. Note that the default mode for a new 'custom' view is 'url', so that's\n          // the only one that will be shown without the feature flag.\n          dom.maybe((use) => use(this._gristDoc.app.features).customViewPlugin,\n            () => dom('div', parts[0].buildDom())),\n          dom.maybe(use => use(activeSection.customDef.mode) === 'plugin',\n            () => dom('div', parts[2].buildDom())),\n          // In the default url mode, allow picking a url and granting/forbidding\n          // access to data.\n          dom.maybe(use => use(activeSection.customDef.mode) === 'url' && use(this._pageWidgetType) === 'custom',\n            () => dom.create(CustomSectionConfig, activeSection, this._gristDoc)),\n        ];\n      }),\n      dom.maybe((use) =>  use(this._pageWidgetType)?.startsWith('custom.'), () => {\n        return [\n          dom.create(PredefinedCustomSectionConfig, activeSection, this._gristDoc),\n        ];\n      }),\n\n      dom.maybe(\n        (use) => !(\n          use(hasCustomMapping) ||\n          use(this._pageWidgetType) === 'chart' ||\n          use(activeSection.isRaw)\n        ),\n        () => [\n          cssSeparator(),\n          dom.create(VisibleFieldsConfig, this._gristDoc, activeSection),\n        ]),\n    ]);\n  }\n\n  private _buildPageSortFilterConfig(owner: MultiHolder) {\n    const viewConfigTab = this._createViewConfigTab(owner);\n    return dom.maybe(viewConfigTab, (vct) => vct.buildSortFilterDom());\n  }\n\n  private _buildPageDataConfig(owner: MultiHolder, activeSection: ViewSectionRec) {\n    const viewConfigTab = this._createViewConfigTab(owner);\n    const viewModel = this._gristDoc.viewModel;\n    const table = activeSection.table;\n    const groupedBy = Computed.create(owner, (use) => use(use(table).groupByColumns));\n    const link = Computed.create(owner, (use) => {\n      return linkId({\n        srcSectionRef: use(activeSection.linkSrcSectionRef),\n        srcColRef: use(activeSection.linkSrcColRef),\n        targetColRef: use(activeSection.linkTargetColRef)\n      });\n    });\n\n    // This computed is not enough to make sure that the linkOptions are up to date. Indeed\n    // the selectBy function depends on a much greater number of observables. Creating that many\n    // dependencies does not seem a better approach. Instead, we refresh the list of\n    // linkOptions only when the user clicks on the dropdown. Such behavior is not supported by the\n    // weasel select function as of writing and would require a custom implementation, so we will simulate\n    // this behavior by using temporary observable that will be changed when the user clicks on the dropdown.\n    const refreshTrigger = Observable.create(owner, false);\n    const linkOptions = Computed.create(owner, (use) => {\n      void use(refreshTrigger);\n      return selectBy(\n        this._gristDoc.docModel,\n        viewModel.viewSections().all(),\n        activeSection,\n      );\n    });\n\n    link.onWrite((val) => this._gristDoc.saveLink(val));\n    return [\n      this._disableIfReadonly(),\n      cssLabel(t(\"DATA TABLE\")),\n      cssRow(\n        cssIcon('TypeTable'), cssDataLabel(t(\"SOURCE DATA\")),\n        cssContent(dom.text((use) => use(use(table).primaryTableId)),\n                   testId('pwc-table'))\n      ),\n      dom(\n        'div',\n        cssRow(cssIcon('Pivot'), cssDataLabel(t(\"GROUPED BY\"))),\n        cssRow(domComputed(groupedBy, (cols) => cssList(cols.map((c) => (\n          cssListItem(dom.text(c.label),\n                      testId('pwc-groupedBy-col'))\n        ))))),\n\n        testId('pwc-groupedBy'),\n        // hide if not a summary table\n        dom.hide((use) => !use(use(table).summarySourceTable)),\n      ),\n\n      dom.maybe((use) => !use(activeSection.isRaw), () =>\n        cssButtonRow(primaryButton(t(\"Edit Data Selection\"), this._createPageWidgetPicker(),\n          testId('pwc-editDataSelection')),\n          dom.maybe(\n            use => Boolean(use(use(activeSection.table).summarySourceTable)),\n            () => basicButton(\n              t(\"Detach\"),\n              dom.on('click', () => this._gristDoc.docData.sendAction(\n                [\"DetachSummaryViewSection\", activeSection.getRowId()])),\n              testId('detach-button'),\n            )),\n          cssRow.cls('-top-space'),\n      )),\n\n      // TODO: \"Advanced settings\" is for \"on-demand\" marking of tables. This should only be shown\n      // for raw data tables (once that's supported), should have updated UI, and should possibly\n      // be hidden for free plans.\n      dom.maybe(viewConfigTab, (vct) => cssRow(\n        dom('div', vct._buildAdvancedSettingsDom()),\n      )),\n      cssSeparator(),\n\n      dom.maybe((use) => !use(activeSection.isRaw), () => [\n        cssLabel(t(\"SELECT BY\")),\n        cssRow(\n          dom.update(\n            select(link, linkOptions, {defaultLabel: t(\"Select Widget\")}),\n            dom.on('click', () => {\n              refreshTrigger.set(!refreshTrigger.get());\n            })\n          ),\n          testId('right-select-by')\n        ),\n      ]),\n\n      domComputed((use) => {\n        const selectorFor = use(use(activeSection.linkedSections).getObservable());\n        // TODO: sections should be listed following the order of appearance in the view layout (ie:\n        // left/right - top/bottom);\n        return selectorFor.length ? [\n          cssLabel(t(\"SELECTOR FOR\"), testId('selector-for')),\n          cssRow(cssList(selectorFor.map((sec) => this._buildSectionItem(sec))))\n        ] : null;\n      }),\n    ];\n  }\n\n  private _createPageWidgetPicker(): DomElementMethod {\n    const gristDoc = this._gristDoc;\n    const section = gristDoc.viewModel.activeSection;\n    const onSave = (val: IPageWidget) => gristDoc.saveViewSection(section.peek(), val);\n    return (elem) => { attachPageWidgetPicker(elem, gristDoc, onSave, {\n      buttonLabel:  t(\"Save\"),\n      value: () => toPageWidget(section.peek()),\n      selectBy: (val) => gristDoc.selectBy(val),\n    }); };\n  }\n\n  // Returns dom for a section item.\n  private _buildSectionItem(sec: ViewSectionRec) {\n    return cssListItem(\n      dom.text(sec.titleDef),\n      testId('selector-for-entry')\n    );\n  }\n\n  // Returns a DomArg that disables the content of the panel by adding a transparent overlay on top\n  // of it.\n  private _disableIfReadonly() {\n    if (this._gristDoc.docPageModel) {\n      return dom.maybe(this._gristDoc.docPageModel.isReadonly,  () => (\n        cssOverlay(\n          testId('disable-overlay'),\n          cssBottomText(t(\"You do not have edit access to this document\")),\n        )\n      ));\n    }\n  }\n}\n\nfunction disabledSection() {\n  return cssOverlay(\n    testId('panel-disabled-section'),\n  );\n}\n\nexport function buildConfigContainer(...args: DomElementArg[]): HTMLElement {\n  return cssConfigContainer(\n    // The `position: relative;` style is needed for the overlay for the readonly mode. Note that\n    // we cannot set it on the cssConfigContainer directly because it conflicts with how overflow\n    // works. `padding-top: 1px;` prevents collapsing the top margins for the container and the\n    // first child.\n    dom('div', {style: 'position: relative; padding-top: 1px;'}, ...args),\n  );\n}\n\n// This logic is copied from SidePane.js for building DOM from TabContent.\n// TODO It may not be needed after new-ui refactoring of the side-pane content.\nfunction tabContentToDom(content: Observable<TabContent[]>|TabContent[]|IDomComponent) {\n  function buildItemDom(item: any) {\n    return dom('div.config_item',\n      dom.show(item.showObs || true),\n      item.buildDom()\n    );\n  }\n\n  if (\"buildDom\" in content) {\n    return content.buildDom();\n  }\n\n  return cssTabContents(\n    dom.forEach(content, itemOrHeader => {\n      if (itemOrHeader.header) {\n        return dom('div.config_group',\n          dom.show(itemOrHeader.showObs || true),\n          itemOrHeader.label ? dom('div.config_header', itemOrHeader.label) : null,\n          dom.forEach(itemOrHeader.items, item => buildItemDom(item)),\n        );\n      } else {\n        return buildItemDom(itemOrHeader);\n      }\n    })\n  );\n}\n\nconst cssOverlay = styled('div', `\n  background-color: ${theme.rightPanelDisabledOverlay};\n  opacity: 0.8;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 100;\n`);\n\nconst cssBottomText = styled('span', `\n  color: ${theme.text};\n  position: absolute;\n  bottom: -40px;\n  padding: 4px 16px;\n`);\n\nconst cssRow = styled('div', `\n  color: ${theme.text};\n  display: flex;\n  margin: 8px 16px;\n  align-items: center;\n  &-top-space {\n    margin-top: 24px;\n  }\n  &-disabled {\n    color: ${theme.disabledText};\n  }\n`);\n\n\nconst cssButtonRow = styled(cssRow, `\n  margin-left: 0;\n  margin-right: 0;\n  & > button {\n    margin-left: 16px;\n  }\n`);\n\nconst cssIcon = styled(icon, `\n  flex: 0 0 auto;\n  --icon-color: ${theme.lightText};\n`);\n\nconst cssTopBarItem = styled('div', `\n  flex: 1 1 0px;\n  height: 100%;\n  background-color: ${theme.rightPanelTabBg};\n  font-weight: ${vars.headerControlTextWeight};\n  color: ${theme.rightPanelTabFg};\n  --icon-color: ${theme.rightPanelTabIcon};\n  display: flex;\n  align-items: center;\n  cursor: default;\n\n  &-selected {\n    background-color: ${theme.rightPanelTabSelectedBg};\n    font-weight: initial;\n    color: ${theme.rightPanelTabSelectedFg};\n    --icon-color: ${theme.rightPanelTabSelectedFg};\n  }\n  &:not(&-selected):hover {\n    background-color: ${theme.rightPanelTabHoverBg};\n    --icon-color: ${theme.rightPanelTabIconHover};\n  }\n`);\n\nconst cssTopBarIcon = styled(icon, `\n  flex: none;\n  margin: 16px;\n  height: 16px;\n  width: 16px;\n  background-color: var(--icon-color);\n`);\n\nconst cssHoverCircle = styled('div', `\n  margin-left: auto;\n  margin-right: 8px;\n  width: 32px;\n  height: 32px;\n  background: none;\n  border-radius: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: ${theme.rightPanelTabButtonHoverBg};\n  }\n`);\n\nconst cssHoverIcon = styled(icon, `\n  height: 16px;\n  width: 16px;\n  background-color: var(--icon-color);\n`);\n\nconst cssSubTabContainer = styled('div', `\n  height: 48px;\n  flex: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`);\n\nconst cssSubTab = styled('div', `\n  color: ${theme.rightPanelSubtabFg};\n  flex: auto;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  text-align: center;\n  padding-bottom: 8px;\n  border-bottom: 1px solid ${theme.pagePanelsBorder};\n  cursor: default;\n\n  &-selected {\n    color: ${theme.rightPanelSubtabSelectedFg};\n    border-bottom: 1px solid ${theme.rightPanelSubtabSelectedUnderline};\n  }\n  &:not(&-selected):hover {\n    color: ${theme.rightPanelSubtabHoverFg};\n  }\n  &:hover {\n    border-bottom: 1px solid ${theme.rightPanelSubtabHoverUnderline};\n  }\n  .${cssSubTabContainer.className}:hover > &-selected:not(:hover) {\n    border-bottom: 1px solid ${theme.pagePanelsBorder};\n  }\n`);\n\nconst cssTabContents = styled('div', `\n  padding: 16px 8px;\n  overflow: auto;\n`);\n\nconst cssSeparator = styled('div', `\n  border-bottom: 1px solid ${theme.pagePanelsBorder};\n  margin-top: 16px;\n`);\n\nconst cssConfigContainer = styled('div.test-config-container', `\n  overflow: auto;\n  --color-list-item: none;\n  --color-list-item-hover: none;\n\n  &:after {\n    content: \"\";\n    display: block;\n    height: 40px;\n  }\n  & .fieldbuilder_settings {\n    margin: 16px 0 0 0;\n  }\n`);\n\nconst cssDataLabel = styled('div', `\n  flex: 0 0 81px;\n  color: ${theme.lightText};\n  font-size: ${vars.xsmallFontSize};\n  margin-left: 4px;\n  margin-top: 2px;\n`);\n\nconst cssContent = styled('div', `\n  flex: 0 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  min-width: 1em;\n`);\n\nconst cssList = styled('div', `\n  list-style: none;\n  width: 100%;\n`);\n\n\nconst cssListItem = styled('li', `\n  background-color: ${theme.hover};\n  border-radius: 2px;\n  margin-bottom: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  padding: 4px 8px;\n`);\n\nconst cssTextInput = styled(textInput, `\n  flex: 1 0 auto;\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n\n  &:disabled {\n    color: ${theme.inputDisabledFg};\n    background-color: ${theme.inputDisabledBg};\n    pointer-events: none;\n  }\n`);\n\nconst cssSection = styled('div', `\n  position: relative;\n`);\n","import {theme, vars} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {styled} from 'grainjs';\n\nexport const cssIcon = styled(icon, `\n  flex: 0 0 auto;\n  --icon-color: ${theme.lightText};\n`);\n\nexport const cssLabel = styled('div', `\n  color: ${theme.text};\n  text-transform: uppercase;\n  margin: 16px 16px 12px 16px;\n  font-size: ${vars.xsmallFontSize};\n`);\n\nexport const cssHelp = styled('div', `\n  margin: -8px 16px 12px 16px;\n  font-style: italic;\n  font-size: ${vars.xsmallFontSize};\n`);\n\nexport const cssRow = styled('div', `\n  display: flex;\n  margin: 8px 16px;\n  align-items: center;\n  color: ${theme.text};\n  &-top-space {\n    margin-top: 24px;\n  }\n  &-disabled {\n    color: ${theme.disabledText};\n  }\n`);\n\nexport const cssRowWrapped = styled(cssRow, `\n  flex-wrap: wrap;\n  row-gap: 5px;\n`);\n\nexport const cssSortFilterColumn = styled('div', `\n  cursor: pointer;\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  color: ${theme.text};\n  background-color: ${theme.hover};\n  overflow: hidden;\n  border-radius: 4px;\n  padding: 4px 8px;\n`);\n\nexport const cssBlockedCursor = styled('span', `\n  &, & * {\n    cursor: not-allowed !important;\n  }\n`);\n\nexport const cssButtonRow = styled(cssRowWrapped, `\n  margin-left: 0;\n  margin-right: 0;\n  & > button {\n    margin-left: 16px;\n  }\n`);\n\nexport const cssSeparator = styled('div', `\n  border-bottom: 1px solid ${theme.pagePanelsBorder};\n  margin-top: 16px;\n`);\n\nexport const cssSaveButtonsRow = styled('div', `\n  margin: 16px 16px 12px 16px;\n`);\n\nexport const cssPinButton = styled('div', `\n  cursor: pointer;\n  --icon-color: ${theme.controlSecondaryFg};\n  border-radius: ${vars.controlBorderRadius};\n  padding: 3px;\n\n  &-pinned {\n    background-color: ${theme.controlPrimaryBg};\n    --icon-color: ${theme.controlPrimaryFg};\n  }\n\n  &:not(&-pinned):hover {\n    background-color: ${theme.hover};\n  }\n`);\n","import {GristDoc} from 'app/client/components/GristDoc';\nimport koArray from 'app/client/lib/koArray';\nimport * as kf from 'app/client/lib/koForm';\nimport {makeT} from 'app/client/lib/localization';\nimport {addToSort, updatePositions} from 'app/client/lib/sortUtil';\nimport {ViewSectionRec} from 'app/client/models/DocModel';\nimport {ObjObservable} from 'app/client/models/modelUtil';\nimport {dropdownWithSearch} from 'app/client/ui/searchDropdown';\nimport {cssIcon, cssRow, cssSortFilterColumn} from 'app/client/ui/RightPanelStyles';\nimport {labeledLeftSquareCheckbox} from 'app/client/ui2018/checkbox';\nimport {theme} from 'app/client/ui2018/cssVars';\nimport {cssDragger} from 'app/client/ui2018/draggableList';\nimport {menu} from 'app/client/ui2018/menus';\nimport {Sort} from 'app/common/SortSpec';\nimport {Computed, Disposable, dom, makeTestId, MultiHolder, styled} from 'grainjs';\nimport difference = require('lodash/difference');\nimport isEqual = require('lodash/isEqual');\nimport {cssMenuItem, IMenuOptions} from 'popweasel';\n\ninterface SortableColumn {\n  label: string;\n  value: number;\n  icon: 'FieldColumn';\n  type: string;\n}\n\nexport interface SortConfigOptions {\n  /** Options to pass to all menus created by `SortConfig`. */\n  menuOptions?: IMenuOptions;\n}\n\nconst testId = makeTestId('test-sort-config-');\n\nconst t = makeT('SortConfig');\n\n/**\n * Component that renders controls for managing sorting for a view section.\n *\n * Sorted columns are displayed in a vertical list of pill-shaped buttons. These\n * buttons can be clicked to toggle their sort direction, and can be clicked and\n * dragged to re-arrange their order. Additionally, there are buttons to the right\n * of each sorted column for removing them, and opening a menu with advanced sort\n * options.\n */\nexport class SortConfig extends Disposable {\n  // Computed array of sortable columns.\n  private _columns: Computed<SortableColumn[]> = Computed.create(this, (use) => {\n    // Columns is an observable holding an observable array - must call 'use' on it 2x.\n    const cols = use(use(use(this._section.table).columns).getObservable());\n    return cols.filter(col => !use(col.isHiddenCol)).map(col => ({\n      label: use(col.label),\n      value: col.getRowId(),\n      icon: 'FieldColumn',\n      type: col.type(),\n    }));\n  });\n\n  // We only want to recreate rows, when the actual columns change.\n  private _colRefs = Computed.create(this, (use) => {\n    return use(this._section.activeSortSpec).map(col => Sort.getColRef(col));\n  });\n  private _sortRows = this.autoDispose(koArray(this._colRefs.get()));\n\n  private _changedColRefs = Computed.create(this, (use) => {\n    const changedSpecs = difference(\n      use(this._section.activeSortSpec),\n      Sort.parseSortColRefs(use(this._section.sortColRefs))\n    );\n    return new Set(changedSpecs.map(spec => Sort.getColRef(spec)));\n  });\n\n  constructor(private _section: ViewSectionRec, private _gristDoc: GristDoc, private _options: SortConfigOptions = {}) {\n    super();\n\n    this.autoDispose(this._colRefs.addListener((curr, prev) => {\n      if (!isEqual(curr, prev)){\n        this._sortRows.assign(curr);\n      }\n    }));\n  }\n\n  public buildDom() {\n    return dom('div',\n      // Sort rows.\n      kf.draggableList(this._sortRows, (colRef: number) => this._createRow(colRef), {\n        reorder: (colRef: number, nextColRef: number | null) => this._reorder(colRef, nextColRef),\n        removeButton: false,\n        drag_indicator: cssDragger,\n        itemClass: cssDragRow.className,\n      }),\n      // Add to sort btn & menu.\n      this._buildAddToSortButton(this._columns),\n      this._buildUpdateDataButton(),\n      testId('container'),\n    );\n  }\n\n  private _createRow(colRef: number) {\n    return this._buildSortRow(colRef, this._section.activeSortSpec, this._columns);\n  }\n\n  /**\n   * Builds a single row of the sort dom.\n   * Takes the colRef, current sortSpec and array of column select options to show\n   * in the column select dropdown.\n   */\n  private _buildSortRow(\n    colRef: number,\n    sortSpec: ObjObservable<Sort.SortSpec>,\n    columns: Computed<SortableColumn[]>\n  ) {\n    const holder = new MultiHolder();\n    const {menuOptions} = this._options;\n\n    const col           = Computed.create(holder, () => colRef);\n    const details       = Computed.create(holder, (use) => Sort.specToDetails(Sort.findCol(use(sortSpec), colRef)!));\n    const hasSpecs      = Computed.create(holder, details, (_, specDetails) => Sort.hasOptions(specDetails));\n    const isAscending   = Computed.create(holder, details, (_, specDetails) => specDetails.direction === Sort.ASC);\n\n    col.onWrite((newRef) => {\n      let specs = sortSpec.peek();\n      const colSpec = Sort.findCol(specs, colRef);\n      const newSpec = Sort.findCol(specs, newRef);\n      if (newSpec) {\n        // this column is already there so only swap order\n        specs = Sort.swap(specs, colRef, newRef);\n        // but keep the directions\n        specs = Sort.setSortDirection(specs, colRef, Sort.direction(newSpec));\n        specs = Sort.setSortDirection(specs, newRef, Sort.direction(colSpec!));\n      } else {\n        specs = Sort.replace(specs, colRef, Sort.createColSpec(newRef, Sort.direction(colSpec!)));\n      }\n      this._saveSort(specs);\n    });\n\n    const computedFlag = (\n      flag: keyof Sort.ColSpecDetails,\n      allowedTypes: string[] | null,\n      label: string\n    ) => {\n      const computed = Computed.create(holder, details, (_, d) => d[flag] || false);\n      computed.onWrite(value => {\n        const specs = sortSpec.peek();\n        // Get existing details\n        const specDetails = Sort.specToDetails(Sort.findCol(specs, colRef)!) as any;\n        // Update flags\n        specDetails[flag] = value;\n        // Replace the colSpec at the index\n        this._saveSort(Sort.replace(specs, Sort.getColRef(colRef), specDetails));\n      });\n      return {computed, allowedTypes, flag, label};\n    };\n    const orderByChoice = computedFlag('orderByChoice', ['Choice'], t(\"Use choice position\"));\n    const naturalSort   = computedFlag('naturalSort', ['Text'], t(\"Natural sort\"));\n    const emptyLast     = computedFlag('emptyLast', null, t(\"Empty values last\"));\n    const flags = [orderByChoice, emptyLast, naturalSort];\n\n    const column = columns.get().find(c => c.value === Sort.getColRef(colRef));\n\n    return cssSortRow(\n      dom.autoDispose(holder),\n      cssSortFilterColumn(\n        dom.domComputed(isAscending, ascending =>\n          cssSortIcon(\n            \"Sort\",\n            cssSortIcon.cls('-accent', use => use(this._changedColRefs).has(column!.value)),\n            dom.style(\"transform\", ascending ? \"scaleY(-1)\" : \"none\"),\n            testId('order'),\n            testId(ascending ? \"sort-order-asc\" : \"sort-order-desc\"),\n          )\n        ),\n        cssLabel(column!.label),\n        dom.on(\"click\", () => {\n          this._saveSort(Sort.flipSort(sortSpec.peek(), colRef));\n        }),\n        testId('column'),\n      ),\n      cssMenu(\n        cssBigIconWrapper(\n          cssIcon('Dots', dom.cls(cssBgAccent.className, hasSpecs)),\n          testId('options-icon'),\n        ),\n        menu(_ctl => flags.map(({computed, allowedTypes, flag, label}) => {\n          // when allowedTypes is null, flag can be used for every column\n          const enabled = !allowedTypes || allowedTypes.includes(column!.type);\n          return cssMenuItem(\n              labeledLeftSquareCheckbox(\n                computed as any,\n                label,\n                dom.prop('disabled', !enabled),\n              ),\n              dom.cls(cssOptionMenuItem.className),\n              dom.cls('disabled', !enabled),\n              testId('option'),\n              testId(`option-${flag}`),\n            );\n          },\n        ), menuOptions),\n      ),\n      cssSortIconBtn('Remove',\n        dom.on('click', () => {\n          const specs = sortSpec.peek();\n          if (Sort.findCol(specs, colRef)) {\n            this._saveSort(Sort.removeCol(specs, colRef));\n          }\n        }),\n        testId('remove')\n      ),\n      testId('row'),\n    );\n  }\n\n  private _buildAddToSortButton(columns: Computed<SortableColumn[]>) {\n    const available = Computed.create(null, (use) => {\n      const currentSection = this._section;\n      const currentSortSpec = use(currentSection.activeSortSpec);\n      const specRowIds = new Set(currentSortSpec.map(_sortRef => Sort.getColRef(_sortRef)));\n      return use(columns).filter(_col => !specRowIds.has(_col.value));\n    });\n    const {menuOptions} = this._options;\n    return cssButtonRow(\n      dom.autoDispose(available),\n      dom.domComputed(use => {\n        const cols = use(available);\n        return cssTextBtn(\n          t(\"Add Column\"),\n          dropdownWithSearch({\n            popupOptions: menuOptions,\n            options: () => cols.map((col) => ({label: col.label, value: col})),\n            action: (col) => addToSort(this._section.activeSortSpec, col.value, 1),\n            placeholder: t('Search Columns'),\n          }),\n          dom.on('click', (ev) => { ev.stopPropagation(); }),\n          testId('add'),\n        );\n      }),\n      dom.hide(use => !use(available).length),\n    );\n  }\n\n  private _buildUpdateDataButton() {\n    return dom.maybe(this._section.isSorted, () =>\n      cssButtonRow(\n        cssTextBtn(t(\"Update Data\"),\n          dom.on('click', () => updatePositions(this._gristDoc, this._section)),\n          testId('update'),\n          dom.show((use) => (\n            use(use(this._section.table).supportsManualSort)\n            && !use(this._gristDoc.isReadonly)\n          )),\n        ),\n      ),\n    );\n  }\n\n  private _reorder(colRef: number, nextColRef: number | null) {\n    const activeSortSpec = this._section.activeSortSpec.peek();\n    const colSpec = Sort.findCol(activeSortSpec, colRef);\n    if (colSpec === undefined) {\n      throw new Error(`Col ${colRef} not found in active sort spec`);\n    }\n\n    const newSpec = Sort.reorderSortRefs(this._section.activeSortSpec.peek(), colSpec, nextColRef);\n    this._saveSort(newSpec);\n  }\n\n  private _saveSort(sortSpec: Sort.SortSpec) {\n    this._section.activeSortSpec(sortSpec);\n  }\n}\n\nconst cssDragRow = styled('div', `\n  display: flex !important;\n  align-items: center;\n  margin: 0 16px 0px 0px;\n  & > .kf_draggable_content {\n    margin: 4px 0;\n    flex: 1 1 0px;\n    min-width: 0px;\n  }\n`);\n\nconst cssLabel = styled('div', `\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  flex-grow: 1;\n`);\n\nconst cssSortRow = styled('div', `\n  display: flex;\n  align-items: center;\n  width: 100%;\n`);\n\nconst cssTextBtn = styled('div', `\n  color: ${theme.controlFg};\n  cursor: pointer;\n\n  &:hover {\n    color: ${theme.controlHoverFg};\n  }\n`);\n\nconst cssSortIconBtn = styled(cssIcon, `\n  flex: none;\n  margin: 0 6px;\n  cursor: pointer;\n  background-color: ${theme.controlSecondaryFg};\n\n  &:hover {\n    background-color: ${theme.controlSecondaryHoverFg};\n  }\n`);\n\nconst cssSortIcon = styled(cssIcon, `\n  flex: none;\n  margin: 0px 6px 0px 0px;\n  background-color: ${theme.controlSecondaryFg};\n\n  &-accent {\n    background-color: ${theme.accentIcon};\n  }\n`);\n\nconst cssBigIconWrapper = styled('div', `\n  padding: 3px;\n  border-radius: 3px;\n  cursor: pointer;\n  user-select: none;\n`);\n\nconst cssBgAccent = styled(`div`, `\n  background: ${theme.accentIcon}\n`);\n\nconst cssMenu = styled('div', `\n  display: inline-flex;\n  cursor: pointer;\n  border-radius: 3px;\n  border: 1px solid transparent;\n  margin-left: 6px;\n  &:hover, &.weasel-popup-open {\n    background-color: ${theme.hover};\n  }\n`);\n\nconst cssOptionMenuItem = styled('div', `\n  &:hover {\n    background-color: ${theme.hover};\n  }\n  & label {\n    flex: 1;\n    cursor: pointer;\n  }\n  &.disabled * {\n    color: ${theme.menuItemDisabledFg} important;\n    cursor: not-allowed;\n  }\n`);\n\nconst cssButtonRow = styled(cssRow, `\n  margin-top: 4px;\n`);\n","import { GristDoc } from \"app/client/components/GristDoc\";\nimport { KoArray, syncedKoArray } from \"app/client/lib/koArray\";\nimport * as kf from 'app/client/lib/koForm';\nimport { makeT } from 'app/client/lib/localization';\nimport * as tableUtil from 'app/client/lib/tableUtil';\nimport { ColumnRec, ViewFieldRec, ViewSectionRec } from \"app/client/models/DocModel\";\nimport { getFieldType } from \"app/client/ui/RightPanel\";\nimport { IWidgetType } from \"../../common/widgetTypes\";\nimport { basicButton, cssButton, primaryButton } from 'app/client/ui2018/buttons';\nimport * as checkbox from \"app/client/ui2018/checkbox\";\nimport { theme, vars } from \"app/client/ui2018/cssVars\";\nimport { cssDragger } from \"app/client/ui2018/draggableList\";\nimport { icon } from \"app/client/ui2018/icons\";\nimport * as gutil from 'app/common/gutil';\nimport { Computed, Disposable, dom, IDomArgs, makeTestId, Observable, styled, subscribe } from \"grainjs\";\nimport difference = require(\"lodash/difference\");\nimport isEqual = require(\"lodash/isEqual\");\n\nconst testId = makeTestId('test-vfc-');\nconst t = makeT('VisibleFieldsConfig');\n\nexport type IField = ViewFieldRec|ColumnRec;\n\ninterface DraggableFieldsOption {\n  // an object holding options for the draggable list, see koForm.js for more detail on the accepted\n  // options.\n  draggableOptions: any;\n\n  // Allows to skip first n items. This feature is useful to separate the series from the x-axis and\n  // the group-by-column in the chart type widget.\n  skipFirst?: Observable<number>;\n\n  // Allows to filter view fields.\n  filterFunc?: (field: ViewFieldRec, index: number) => boolean;\n\n  // Allows to prevent updates of the list. This option is to be used when skipFirst option is used\n  // and it is useful to prevent the list to update during changes that only affect the skipped\n  // fields.\n  freeze?: Observable<boolean>;\n\n  // the itemCreateFunc callback passed to kf.draggableList for the visible fields.\n  itemCreateFunc(field: IField): Element|undefined;\n}\n\n/**\n * VisibleFieldsConfig builds dom for the visible/hidden fields configuration component. Usage is:\n *\n *   dom.create(VisibleFieldsConfig, gristDoc, section);\n *\n * Can also be used to build the two draggable list only:\n *\n *   const config = VisibleFieldsConfig.create(null, gristDoc, section);\n *   const [visibleFieldsDraggable, hiddenFieldsDraggable] =\n *     config.buildSectionFieldsConfigHelper({visibleFields: {itemCreateFunc: getLabelFunc},\n *                                            hiddenFields: {itemCreateFunc: getLabelFunc}});\n *\n * The later for is useful to support old ui, refer to function's doc for more detail on the\n * available options.\n */\nexport class VisibleFieldsConfig extends Disposable {\n\n  private _hiddenFields: KoArray<ColumnRec> = this.autoDispose(syncedKoArray(this._section.hiddenColumns));\n\n  private _fieldLabel = Computed.create(this, (use) => {\n    const widgetType = use(this._section.parentKey) as IWidgetType;\n    return getFieldType(widgetType).pluralLabel;\n  });\n\n  private _collapseHiddenFields = Observable.create(this, false);\n\n  /**\n   * Set if and only if the corresponding selection is empty, ie: respectively\n   * visibleFieldsSelection and hiddenFieldsSelection.\n   */\n  private _showVisibleBatchButtons = Observable.create(this, false);\n  private _showHiddenBatchButtons = Observable.create(this, false);\n\n  private _visibleFieldsSelection = new Set<number>();\n  private _hiddenFieldsSelection = new Set<number>();\n\n  constructor(private _gristDoc: GristDoc,\n              private _section: ViewSectionRec) {\n    super();\n\n    // Unselects visible fields that are hidden.\n    this.autoDispose(this._section.viewFields.peek().subscribe((ev) => {\n      unselectDeletedFields(this._visibleFieldsSelection, ev);\n      this._showVisibleBatchButtons.set(Boolean(this._visibleFieldsSelection.size));\n    }, null, 'spliceChange'));\n\n    // Unselectes hidden fields that are shown.\n    this.autoDispose(this._hiddenFields.subscribe((ev) => {\n      unselectDeletedFields(this._hiddenFieldsSelection, ev);\n      this._showHiddenBatchButtons.set(Boolean(this._hiddenFieldsSelection.size));\n    }, null, 'spliceChange'));\n  }\n\n  /**\n   * Build the draggable list components to show the visible fields of a section.\n   */\n  public buildVisibleFieldsConfigHelper(options: DraggableFieldsOption) {\n    let fields = this._section.viewFields.peek();\n\n    if (options.skipFirst || options.filterFunc) {\n      const skipFirst = options.skipFirst || Observable.create(this, -1);\n      const filterFunc = options.filterFunc || (() => true);\n\n      const freeze = options.freeze;\n      const allFields = this._section.viewFields.peek();\n      const newArray = new KoArray<ViewFieldRec>();\n\n      function update() {\n        if (freeze && freeze.get()) { return; }\n        const newValues = allFields.peek()\n          .filter((_v, i) => i + 1 > skipFirst.get())\n          .filter(filterFunc)\n        ;\n        if (isEqual(newArray.all(), newValues)) { return; }\n        newArray.assign(newValues);\n      }\n      update();\n      this.autoDispose(allFields.subscribe(update));\n      this.autoDispose(subscribe(skipFirst, update));\n      if (options.freeze) {\n        this.autoDispose(subscribe(options.freeze, update));\n      }\n      fields = newArray;\n    }\n\n    return kf.draggableList(\n      fields,\n      options.itemCreateFunc,\n      {\n        itemClass: cssDragRow.className,\n        reorder: this.changeFieldPosition.bind(this),\n        remove: this.removeField.bind(this),\n        receive: this.addField.bind(this),\n        ...options.draggableOptions,\n      }\n    );\n  }\n\n  /**\n   * Build the two draggable list components to show both the visible and the hidden fields of a\n   * section. Each draggable list can be parametrized using both `options.visibleFields` and\n   * `options.hiddenFields` options.\n   *\n   * @param {DraggableFieldsOption} options.hiddenFields options for the list of hidden fields.\n   * @param {DraggableFieldsOption} options.visibleFields options for the list of visible fields.\n   * @return {[Element, Element]} the two draggable elements (ie: koForm.draggableList) showing\n   *                              respectivelly the list of visible fields and the list of hidden\n   *                              fields of section.\n   */\n  public buildSectionFieldsConfigHelper(\n    options: {\n      visibleFields: DraggableFieldsOption,\n      hiddenFields: DraggableFieldsOption,\n    }): [HTMLElement, HTMLElement] {\n\n    const fieldsDraggable = this.buildVisibleFieldsConfigHelper(options.visibleFields);\n    const hiddenFieldsDraggable = kf.draggableList(\n      this._hiddenFields,\n      options.hiddenFields.itemCreateFunc,\n      {\n        itemClass: cssDragRow.className,\n        reorder() { throw new Error(t(\"Hidden Fields cannot be reordered\")); },\n        receive() { throw new Error(t(\"Cannot drop items into Hidden Fields\")); },\n        remove(item: ColumnRec) {\n          // Return the column object. This value is passed to the viewFields\n          // receive function as its respective item parameter\n          return item;\n        },\n        removeButton: false,\n        ...options.hiddenFields.draggableOptions,\n      }\n    );\n    kf.connectDraggableOneWay(hiddenFieldsDraggable, fieldsDraggable);\n    return [fieldsDraggable, hiddenFieldsDraggable];\n  }\n\n  public buildDom() {\n\n    const [fieldsDraggable, hiddenFieldsDraggable] = this.buildSectionFieldsConfigHelper({\n      visibleFields: {\n        itemCreateFunc: (field) => this._buildVisibleFieldItem(field as ViewFieldRec),\n        draggableOptions: {\n          removeButton: false,\n          drag_indicator: cssDragger,\n        }\n      },\n      hiddenFields: {\n        itemCreateFunc: (field) => this._buildHiddenFieldItem(field as ColumnRec),\n        draggableOptions: {\n          removeButton: false,\n          drag_indicator: cssDragger,\n        },\n      },\n    });\n    return [\n      cssHeader(\n        cssFieldListHeader(dom.text((use) => t(\"Visible {{label}}\", {label: use(this._fieldLabel)}))),\n        dom.maybe(\n          (use) => Boolean(use(use(this._section.viewFields).getObservable()).length),\n          () => (\n            cssControlLabel(\n              icon('Tick'),\n              t(\"Select All\"),\n              dom.on('click', () => this._setVisibleCheckboxes(fieldsDraggable, true)),\n              testId('visible-fields-select-all'),\n            )\n          )\n        ),\n      ),\n      dom.update(fieldsDraggable, testId('visible-fields')),\n      dom.maybe(this._showVisibleBatchButtons, () =>\n        cssRow(\n          primaryButton(\n            dom.text((use) => t(\"Hide {{label}}\", {label: use(this._fieldLabel)})),\n            dom.on('click', () => this._removeSelectedFields()),\n            testId('visible-hide')\n          ),\n          basicButton(\n            t(\"Clear\"),\n            dom.on('click', () => this._setVisibleCheckboxes(fieldsDraggable, false)),\n            testId('visible-clear')\n          ),\n          testId('visible-batch-buttons')\n        ),\n      ),\n      cssHeader(\n        cssHeaderIcon(\n          'Dropdown',\n          dom.style('transform', (use) => use(this._collapseHiddenFields) ? 'rotate(-90deg)' : ''),\n          dom.style('cursor', 'pointer'),\n          dom.on('click', () => this._collapseHiddenFields.set(!this._collapseHiddenFields.get())),\n          testId('collapse-hidden'),\n        ),\n        // TODO: show `hidden column` only when some fields are hidden\n        cssFieldListHeader(dom.text((use) => t(\"Hidden {{label}}\", {label: use(this._fieldLabel)}))),\n        dom.maybe(\n          (use) => Boolean(use(this._hiddenFields.getObservable()).length && !use(this._collapseHiddenFields)),\n          () => (\n            cssControlLabel(\n              icon('Tick'),\n              t(\"Select All\"),\n              dom.on('click', () => this._setHiddenCheckboxes(hiddenFieldsDraggable, true)),\n              testId('hidden-fields-select-all'),\n            )\n          )\n        ),\n      ),\n      dom(\n        'div',\n        dom.hide(this._collapseHiddenFields),\n        dom.update(\n          hiddenFieldsDraggable,\n          testId('hidden-fields'),\n        ),\n        dom.maybe(this._showHiddenBatchButtons, () =>\n          cssRow(\n            primaryButton(\n              dom.text((use) => t(\"Show {{label}}\", {label: use(this._fieldLabel)})),\n              dom.on('click', () => this._addSelectedFields()),\n              testId('hidden-show')\n            ),\n            basicButton(\n              t(\"Clear\"),\n              dom.on('click', () => this._setHiddenCheckboxes(hiddenFieldsDraggable, false)),\n              testId('hidden-clear')\n            ),\n            testId('hidden-batch-buttons')\n          )\n        ),\n      ),\n    ];\n  }\n\n  public async removeField(field: IField) {\n    const existing = this._section.viewFields.peek().peek()\n      .find((f) => f.column.peek().getRowId() === field.origCol.peek().id.peek());\n    if (!existing) {\n      return;\n    }\n    const id = existing.id.peek();\n    const action = ['RemoveRecord', id];\n    await this._gristDoc.docModel.viewFields.sendTableAction(action);\n  }\n\n  public async addField(column: IField, nextField: ViewFieldRec|null = null) {\n    const exists = this._section.viewFields.peek().peek()\n      .findIndex((f) => f.column.peek().getRowId() === column.id.peek());\n    if (exists !== -1) {\n      return;\n    }\n    const parentPos = getFieldNewPosition(this._section.viewFields.peek(), column, nextField);\n    const colInfo = {\n      parentId: this._section.id.peek(),\n      colRef: column.id.peek(),\n      parentPos,\n    };\n    const action = ['AddRecord', null, colInfo];\n    await this._gristDoc.docModel.viewFields.sendTableAction(action);\n  }\n\n  public changeFieldPosition(field: ViewFieldRec, nextField: ViewFieldRec|null) {\n    const parentPos = getFieldNewPosition(this._section.viewFields.peek(), field, nextField);\n    const vsfAction = ['UpdateRecord', field.id.peek(), {parentPos} ];\n    return this._gristDoc.docModel.viewFields.sendTableAction(vsfAction);\n  }\n\n  // Set all checkboxes for the visible fields.\n  private _setVisibleCheckboxes(visibleFieldsDraggable: Element, checked: boolean) {\n    this._setCheckboxesHelper(\n      visibleFieldsDraggable,\n      this._section.viewFields.peek().peek(),\n      this._visibleFieldsSelection,\n      checked\n    );\n    this._showVisibleBatchButtons.set(checked);\n\n  }\n\n  // Set all checkboxes for the hidden fields.\n  private _setHiddenCheckboxes(hiddenFieldsDraggable: Element, checked: boolean) {\n    this._setCheckboxesHelper(\n      hiddenFieldsDraggable,\n      this._hiddenFields.peek(),\n      this._hiddenFieldsSelection,\n      checked\n    );\n    this._showHiddenBatchButtons.set(checked);\n  }\n\n  // A helper to set all checkboxes. Takes care of setting all checkboxes in the dom and updating\n  // the selection.\n  private _setCheckboxesHelper(draggable: Element, fields: IField[], selection: Set<number>,\n                               checked: boolean) {\n\n    findCheckboxes(draggable).forEach((el) => el.checked = checked);\n\n    selection.clear();\n\n    if (checked) {\n      // add all ids to the selection\n      fields.forEach((field) => selection.add(field.id.peek()));\n    }\n  }\n\n  private _buildHiddenFieldItem(column: IField) {\n    const id = column.id.peek();\n    const selection = this._hiddenFieldsSelection;\n\n    return cssFieldEntry(\n      cssFieldLabel(dom.text(column.label)),\n      cssHideIcon('EyeShow',\n        dom.on('click', () => this.addField(column)),\n        testId('hide')\n      ),\n      buildCheckbox(\n        dom.prop('checked', selection.has(id)),\n        dom.on('change', (ev, el) => {\n          el.checked ? selection.add(id) : selection.delete(id);\n          this._showHiddenBatchButtons.set(Boolean(selection.size));\n        })\n      )\n    );\n  }\n\n  private _buildVisibleFieldItem(field: IField) {\n    const id = field.id.peek();\n    const selection = this._visibleFieldsSelection;\n\n    return cssFieldEntry(\n      cssFieldLabel(dom.text(field.label)),\n      // TODO: we need a \"cross-out eye\" icon here.\n      cssHideIcon('EyeHide',\n        dom.on('click', () => this.removeField(field)),\n        testId('hide')\n      ),\n      buildCheckbox(\n        dom.prop('checked', selection.has(id)),\n        dom.on('change', (ev, el) => {\n          el.checked ? selection.add(id) : selection.delete(id);\n          this._showVisibleBatchButtons.set(Boolean(selection.size));\n        })\n      )\n    );\n  }\n\n  private async _removeSelectedFields() {\n    const toRemove = Array.from(this._visibleFieldsSelection).sort(gutil.nativeCompare);\n    const action = ['BulkRemoveRecord', toRemove];\n    await this._gristDoc.docModel.viewFields.sendTableAction(action);\n  }\n\n  private async _addSelectedFields() {\n    const toAdd = Array.from(this._hiddenFieldsSelection);\n    const rowIds = gutil.arrayRepeat(toAdd.length, null);\n    const colInfo = {\n      parentId: gutil.arrayRepeat(toAdd.length, this._section.id.peek()),\n      colRef: toAdd,\n    };\n    const action = ['BulkAddRecord', rowIds, colInfo];\n    await this._gristDoc.docModel.viewFields.sendTableAction(action);\n  }\n\n}\n\nfunction getFieldNewPosition(fields: KoArray<ViewFieldRec>, item: IField,\n                             nextField: ViewFieldRec|null): number|null {\n  const index = getItemIndex(fields, nextField);\n  return tableUtil.fieldInsertPositions(fields, index, 1)[0];\n}\n\nfunction getItemIndex(collection: KoArray<ViewFieldRec>, item: ViewFieldRec|null): number {\n  if (item !== null) {\n    return collection.peek().indexOf(item);\n  }\n  return collection.peek().length;\n}\n\nfunction buildCheckbox(...args: IDomArgs<HTMLInputElement>) {\n  return checkbox.cssLabel(\n    {style: 'flex-shrink: 0;'},\n    checkbox.cssCheckboxSquare(\n      {type: 'checkbox'},\n      ...args\n    )\n  );\n}\n\n// helper to find checkboxes within a draggable list. This assumes that checkboxes are the only\n// <input> element in draggableElement.\nfunction findCheckboxes(draggableElement: Element): NodeListOf<HTMLInputElement> {\n  return draggableElement.querySelectorAll<HTMLInputElement>('input');\n}\n\n// Removes from selection the ids of the fields that appear as deleted in the splice event. Note\n// that it can happen that a field appears as deleted and yet belongs to the new array (as a result\n// of an `assign` call for instance). In which case the field is to be considered as not deleted.\nfunction unselectDeletedFields(selection: Set<number>, event: {deleted: IField[], array: IField[]}) {\n  // go though the difference between deleted fields and the new array.\n  const removed: IField[] = difference(event.deleted, event.array);\n  for (const field of removed) {\n    selection.delete(field.id.peek());\n  }\n}\n\nexport const cssDragRow = styled('div', `\n  display: flex !important;\n  align-items: center;\n  margin: 0 16px 0px 0px;\n  & > .kf_draggable_content {\n    margin: 2px 0;\n    flex: 1 1 0px;\n    min-width: 0px;\n  }\n`);\n\nexport const cssFieldEntry = styled('div', `\n  display: flex;\n  background-color: ${theme.hover};\n  width: 100%;\n  border-radius: 2px;\n  margin: 0 8px 0 0;\n  padding: 4px 8px;\n  cursor: default;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  --icon-color: ${theme.lightText};\n`);\n\nconst cssHideIcon = styled(icon, `\n  --icon-color: ${theme.lightText};\n  display: none;\n  cursor: pointer;\n  flex: none;\n  margin-right: 8px;\n  .kf_draggable:hover & {\n    display: block;\n  }\n`);\n\nexport const cssFieldLabel = styled('span', `\n  color: ${theme.text};\n  flex: 1 1 auto;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`);\n\nconst cssFieldListHeader = styled('span', `\n  color: ${theme.text};\n  flex: 1 1 0px;\n  font-size: ${vars.xsmallFontSize};\n  text-transform: uppercase;\n`);\n\nconst cssRow = styled('div', `\n  display: flex;\n  margin: 16px;\n  overflow: hidden;\n  --icon-color: ${theme.lightText};\n  & > .${cssButton.className} {\n    margin-right: 8px;\n  }\n`);\n\nconst cssControlLabel = styled('div', `\n  --icon-color: ${theme.controlFg};\n  color: ${theme.controlFg};\n  cursor: pointer;\n`);\n\nconst cssHeader = styled(cssRow, `\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n`);\n\nconst cssHeaderIcon = styled(icon, `\n  --icon-color: ${theme.lightText};\n  flex: none;\n  margin-right: 4px;\n`);\n","/**\n * Collection of styled elements to put together basic forms. Intended usage is:\n *\n *   return forms.form({method: 'POST',\n *     forms.question(\n *       forms.text('What color is the sky right now?'),\n *       forms.checkboxItem([{name: 'sky-blue'}], 'Blue'),\n *       forms.checkboxItem([{name: 'sky-orange'}], 'Orange'),\n *       forms.checkboxOther([], {name: 'sky-other', placeholder: 'Other...'}),\n *     ),\n *     forms.question(\n *       forms.text('What is the meaning of life, universe, and everything?'),\n *       forms.textBox({name: 'meaning', placeholder: 'Your answer'}),\n *     ),\n *   );\n */\nimport {cssCheckboxSquare, cssLabel} from 'app/client/ui2018/checkbox';\nimport {dom, DomArg, DomElementArg, Observable, styled} from 'grainjs';\n\nexport {\n  form,\n  cssQuestion as question,\n  cssText as text,\n  textBox,\n};\n\n\n/**\n * Create a checkbox accompanied by a label. The first argument should be the (possibly empty)\n * array of arguments to the checkbox; the rest goes into the label. E.g.\n *    checkboxItem([{name: 'ok'}], 'Check to approve');\n */\nexport function checkboxItem(\n  checkboxArgs: Array<DomArg<HTMLInputElement>>, ...labelArgs: DomElementArg[]\n): HTMLElement {\n  return cssCheckboxLabel(\n    cssCheckbox({type: 'checkbox'}, ...checkboxArgs),\n    ...labelArgs);\n}\n\n/**\n * Create a checkbox accompanied by a textbox, for a choice of \"Other\". The checkbox gets checked\n * automatically when something is typed into the textbox.\n *    checkboxOther([{name: 'choice-other'}], {name: 'other-text', placeholder: '...'});\n */\nexport function checkboxOther(checkboxArgs: DomElementArg[], ...textboxArgs: DomElementArg[]): HTMLElement {\n  let checkbox: HTMLInputElement;\n  return cssCheckboxLabel(\n    checkbox = cssCheckbox({type: 'checkbox'}, ...checkboxArgs),\n    cssTextBox(...textboxArgs,\n      dom.on('input', (e, elem) => { checkbox.checked = Boolean(elem.value); }),\n    ),\n  );\n}\n\n/**\n * Returns whether the form is fully filled, i.e. has a value for each of the provided names of\n * form elements. If a name ends with \"*\", it is treated as a prefix, and any element matching it\n * would satisfy this key (e.g. use \"foo_*\" to accept any checkbox named \"foo_<something>\").\n */\nexport function isFormFilled(formElem: HTMLFormElement, names: string[]): boolean {\n  const formData = new FormData(formElem);\n  return names.every(name => hasValue(formData, name));\n}\n\n/**\n * Returns true of the form includes a non-empty value for the given name. If the second argument\n * ends with \"-\", it is treated as a prefix, and the function returns true if the form includes\n * any value for a key that starts with that prefix.\n */\nexport function hasValue(formData: FormData, nameOrPrefix: string): boolean {\n  if (nameOrPrefix.endsWith('*')) {\n    const prefix = nameOrPrefix.slice(0, -1);\n    return [...formData.keys()].filter(k => k.startsWith(prefix)).some(k => formData.get(k));\n  } else {\n    return Boolean(formData.get(nameOrPrefix));\n  }\n}\n\nfunction resize(el: HTMLTextAreaElement) {\n  el.style.height = '5px'; // hack for triggering style update.\n  const border = getComputedStyle(el, null).borderTopWidth || \"0\";\n  el.style.height = `calc(${el.scrollHeight}px + 2 * ${border})`;\n}\n\nexport function autoGrow(text: Observable<string>) {\n  return (el: HTMLTextAreaElement) => {\n    el.addEventListener('input', () => resize(el));\n    dom.autoDisposeElem(el, text.addListener(() => resize(el)));\n    setTimeout(() => resize(el), 10);\n    dom.autoDisposeElem(el, text.addListener(val => {\n      // Changes to the text are not reflected by the input event (witch is used by the autoGrow)\n      // So we need to manually update the textarea when the text is cleared.\n      if (!val) {\n        el.style.height = '5px'; // there is a min-height css attribute, so this is only to trigger a style update.\n      }\n    }));\n  };\n}\n\nconst cssForm = styled('form', `\n  margin-bottom: 32px;\n  font-size: 14px;\n  &:focus {\n    outline: none;\n  }\n  & input:focus, & button:focus {\n    outline: none;\n    box-shadow: 0 0 1px 2px lightblue;\n  }\n`);\n\nconst cssQuestion = styled('div', `\n  margin: 32px 0;\n  padding-left: 24px;\n  & > :first-child {\n    margin-left: -24px;\n  }\n`);\n\nconst cssText = styled('div', `\n  margin: 16px 0;\n  font-size: 15px;\n`);\n\nconst cssCheckboxLabel = styled(cssLabel, `\n  font-size: 14px;\n  font-weight: normal;\n  display: flex;\n  align-items: center;\n  margin: 12px 0;\n  user-select: unset;\n`);\n\nconst cssCheckbox = styled(cssCheckboxSquare, `\n  position: relative;\n  margin-right: 12px !important;\n  border-radius: var(--radius);\n`);\n\nconst cssTextBox = styled('input', `\n  flex: auto;\n  width: 100%;\n  font-size: inherit;\n  padding: 4px 8px;\n  border: 1px solid #D9D9D9;\n  border-radius: 3px;\n\n  &-invalid {\n    color: red;\n  }\n`);\n\nconst form = cssForm.bind(null, {tabIndex: '-1'});\nconst textBox = cssTextBox.bind(null, {type: 'text'});\n","import {theme, vars} from 'app/client/ui2018/cssVars';\nimport {dom, DomElementArg, IDomArgs, IInputOptions, Observable, styled, subscribe} from 'grainjs';\n\nexport const cssInput = styled('input', `\n  font-size: ${vars.mediumFontSize};\n  height: 48px;\n  line-height: 20px;\n  width: 100%;\n  padding: 14px;\n  border: 1px solid ${theme.inputBorder};\n  border-radius: 4px;\n  outline: none;\n  display: block;\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n\n  &[type=number] {\n    -moz-appearance: textfield;\n  }\n  &[type=number]::-webkit-inner-spin-button,\n  &[type=number]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &-invalid {\n    border: 1px solid ${theme.inputInvalid};\n  }\n\n  &-valid {\n    border: 1px solid ${theme.inputValid};\n  }\n`);\n\n/**\n * Builds a text input that updates `obs` as you type.\n */\nexport function textInput(obs: Observable<string>, ...args: DomElementArg[]): HTMLInputElement {\n  return cssInput(\n    dom.prop('value', obs),\n    dom.on('input', (_e, elem) => obs.set(elem.value)),\n    ...args,\n  );\n}\n\nexport function textarea(\n  obs: Observable<string>, options: IInputOptions, ...args: IDomArgs<HTMLTextAreaElement>\n): HTMLTextAreaElement {\n\n  const isValid = options.isValid;\n\n  function setValue(elem: HTMLTextAreaElement) {\n    obs.set(elem.value);\n    if (isValid) { isValid.set(elem.validity.valid); }\n  }\n\n  return dom('textarea', ...args,\n    dom.prop('value', obs),\n    (isValid ?\n      (elem) => dom.autoDisposeElem(elem,\n        subscribe(obs, (use) => isValid.set(elem.checkValidity()))) :\n      null),\n    options.onInput ? dom.on('input', (e, elem) => setValue(elem)) : null,\n    dom.on('change', (e, elem) => setValue(elem)),\n  );\n}","import DOMPurify from 'dompurify';\n\nconst config = {\n  ADD_TAGS: ['iframe'],\n  ADD_ATTR: ['allowFullscreen'],\n};\n\nDOMPurify.addHook('uponSanitizeAttribute', (node) => {\n  if (!('target' in node)) { return; }\n\n  node.setAttribute('target', '_blank');\n});\nDOMPurify.addHook('uponSanitizeElement', (node, data) => {\n  if (data.tagName !== 'iframe') { return; }\n\n  const src = node.getAttribute('src');\n  if (src?.startsWith('https://www.youtube.com/embed/')) {\n    return;\n  }\n\n  return node.parentNode?.removeChild(node);\n});\n\nexport function sanitizeHTML(source: string | Node): string {\n  return DOMPurify.sanitize(source, config);\n}\n","// A dropdown with a search input to better navigate long list with\n// keyboard. Dropdown features a search input and reoders the list of\n// items to bring best matches at the top.\n\nimport { Disposable, dom, DomElementMethod, IOptionFull, makeTestId, Observable, styled } from \"grainjs\";\nimport { theme, vars } from 'app/client/ui2018/cssVars';\nimport { ACIndexImpl, ACItem, buildHighlightedDom, HighlightFunc, normalizeText } from \"app/client/lib/ACIndex\";\nimport { menuDivider } from \"app/client/ui2018/menus\";\nimport { icon } from \"app/client/ui2018/icons\";\nimport { cssMenuItem, defaultMenuOptions, IOpenController, IPopupOptions, setPopupToFunc } from \"popweasel\";\nimport { mergeWith } from \"lodash\";\nimport { getOptionFull, SimpleList } from \"../lib/simpleList\";\nimport { makeT } from 'app/client/lib/localization';\n\nconst t = makeT('searchDropdown');\n\nconst testId = makeTestId('test-sd-');\n\nexport type { HighlightFunc } from \"app/client/lib/ACIndex\";\n\nexport type IOption<T> = (T & string) | IOptionFull<T>;\n\nexport interface IDropdownWithSearchOptions<T> {\n\n  // the callback to trigger on selection\n  action: (value: T) => void;\n\n  // list of options\n  options: () => Array<IOption<T>>,\n\n  // place holder for the search input. Default to 'Search'\n  placeholder?: string;\n\n  // popup options\n  popupOptions?: IPopupOptions;\n}\n\nexport class OptionItem<T> implements ACItem, IOptionFull<T> {\n  public cleanText: string = normalizeText(this.label);\n  constructor(\n    public label: string,\n    public value: T,\n    public disabled?: boolean\n  ) {}\n}\n\nexport function dropdownWithSearch<T>(options: IDropdownWithSearchOptions<T>): DomElementMethod {\n  return (elem) => {\n    const popupOptions = mergeWith(\n      {}, defaultMenuOptions, options.popupOptions,\n      (_objValue: any, srcValue: any) => Array.isArray(srcValue) ? srcValue : undefined\n    );\n    setPopupToFunc(\n      elem,\n      (ctl) => DropdownWithSearch<T>.create(null, ctl, options),\n      popupOptions\n    );\n  };\n}\n\nclass DropdownWithSearch<T> extends Disposable {\n\n  private _items: Observable<OptionItem<T>[]>;\n  private _acIndex: ACIndexImpl<OptionItem<T>>;\n  private _inputElem: HTMLInputElement;\n  private _simpleList: SimpleList<T>;\n  private _highlightFunc: HighlightFunc;\n\n  constructor(private _ctl: IOpenController, private _options: IDropdownWithSearchOptions<T>) {\n    super();\n    const acItems = _options.options().map(getOptionFull).map(o => new OptionItem(o.label, o.value, o.disabled));\n    this._acIndex = new ACIndexImpl<OptionItem<T>>(acItems);\n    this._items = Observable.create<OptionItem<T>[]>(this, acItems);\n    this._highlightFunc = () => [];\n    this._simpleList = this._buildSimpleList();\n    this._simpleList.listenKeys(this._inputElem);\n    this._update();\n    // auto-focus the search input\n    setTimeout(() => this._inputElem.focus(), 1);\n  }\n\n  public get content(): HTMLElement {\n    return this._simpleList.content;\n  }\n\n  private _buildSimpleList() {\n    const action = this._action.bind(this);\n    const headerDom = this._buildHeader.bind(this);\n    const renderItem = this._buildItem.bind(this);\n    return SimpleList<T>.create(this, this._ctl, this._items, action, {headerDom, renderItem});\n  }\n\n  private _buildHeader() {\n    return [\n      cssMenuHeader(\n        cssSearchIcon('Search'),\n        this._inputElem = cssSearch(\n          {placeholder: this._options.placeholder || t('Search')},\n          dom.on('input', () => { this._update(); }),\n          dom.on('blur', () => setTimeout(() => this._inputElem.focus(), 0)),\n        ),\n\n        // Prevents click on header to close menu\n        dom.on('click', ev => ev.stopPropagation()),\n        testId('search'),\n      ),\n      cssMenuDivider(),\n    ];\n  }\n\n  private _buildItem(item: OptionItem<T>) {\n    return [\n      buildHighlightedDom(item.label, this._highlightFunc, cssMatchText),\n      testId('searchable-list-item'),\n    ];\n  }\n\n  private _update() {\n    const acResults = this._acIndex.search(this._inputElem?.value || '');\n    this._highlightFunc = acResults.highlightFunc;\n    this._items.set(acResults.items);\n    this._simpleList.setSelected(acResults.selectIndex);\n  }\n\n  private _action(value: T | null) {\n    // If value is null, simply close the menu. This happens when pressing enter with no element\n    // selected.\n    if (value) {\n      this._options.action(value);\n    }\n    this._ctl.close();\n  }\n}\n\nconst cssMatchText = styled('span', `\n  color: ${theme.autocompleteMatchText};\n  .${cssMenuItem.className}-sel > & {\n    color: ${theme.autocompleteSelectedMatchText};\n  }\n`);\nconst cssMenuHeader = styled('div', `\n  display: flex;\n  padding: 13px 17px 15px 17px;\n`);\nconst cssSearchIcon = styled(icon, `\n  --icon-color: ${theme.lightText};\n  flex-shrink: 0;\n  margin-left: auto;\n  margin-right: 4px;\n`);\nconst cssSearch = styled('input', `\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n  flex-grow: 1;\n  min-width: 1px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  font-size: ${vars.mediumFontSize};\n\n  margin: 0px 16px 0px 8px;\n  padding: 0px;\n  border: none;\n  outline: none;\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n`);\nconst cssMenuDivider = styled(menuDivider, `\n  flex-shrink: 0;\n  margin: 0;\n`);\n","import { ColumnRec, DocModel, TableRec, ViewSectionRec } from 'app/client/models/DocModel';\nimport { IPageWidget } from 'app/client/ui/PageWidgetPicker';\nimport { getReferencedTableId } from 'app/common/gristTypes';\nimport { IOptionFull } from 'grainjs';\nimport assert from 'assert';\nimport * as gutil from \"app/common/gutil\";\nimport isEqual = require('lodash/isEqual');\n\n// some unicode characters\nconst BLACK_CIRCLE = '\\u2022';\nconst RIGHT_ARROW = '\\u2192';\n\n// Describes a link\nexport interface IPageWidgetLink {\n\n  // The source section id\n  srcSectionRef: number;\n\n  // The source column id\n  srcColRef: number;\n\n  // The target col id\n  targetColRef: number;\n}\n\nexport const NoLink = linkId({\n  srcSectionRef: 0,\n  srcColRef: 0,\n  targetColRef: 0\n});\n\nconst NoLinkOption: IOptionFull<string> = {\n  label: \"Select Widget\",\n  value: NoLink\n};\n\n\ninterface LinkNode {\n  // the tableId\n  tableId: string;\n\n  // is the table a summary table\n  isSummary: boolean;\n\n  // For a summary table, the set of col refs of the groupby columns of the underlying table\n  groupbyColumns?: Set<number>;\n\n  // list of ids of the sections that are ancestors to this section according to the linked section\n  // relationship\n  ancestors: Set<number>;\n\n  // the section record. Must be the empty record sections that are to be created.\n  section: ViewSectionRec;\n\n  // the column record or undefined for the main section node (ie: the node that does not connect to\n  // any particular column)\n  column?: ColumnRec;\n\n  // the widget type\n  widgetType: string;\n}\n\n\n// Returns true if this node corresponds to the special 'group' reflist column of a summary table\nfunction isSummaryGroup(node: LinkNode): boolean {\n  return node.isSummary && node.column?.colId.peek() === \"group\";\n}\n\n\n// Returns true is the link from `source` to `target` is valid, false otherwise.\nfunction isValidLink(source: LinkNode, target: LinkNode) {\n\n  // section must not be the same\n  if (source.section.getRowId() === target.section.getRowId()) {\n    return false;\n  }\n\n  // table must match\n  if (source.tableId !== target.tableId) {\n    return false;\n  }\n\n  // Can only link to the somewhat special 'group' reflist column of summary tables\n  // with another ref/reflist column that isn't also a group column\n  // because otherwise it's equivalent to the usual summary table linking but potentially slower\n  if (\n    isSummaryGroup(source) && (!target.column || isSummaryGroup(target)) ||\n    isSummaryGroup(target)\n  ) {\n    return false;\n  }\n\n  // Cannot directly link a summary table to a column referencing the source table.\n  // Instead the ref column must link against the group column of the summary table, which is allowed above.\n  // The 'group' column name will be hidden from the options so it feels like linking using summaryness.\n  if (\n    (source.isSummary && !source.column && target.column) ||\n    (target.isSummary && !target.column && source.column)\n  ) {\n    return false;\n  }\n\n  // If the target is a summary table and we're linking based on 'summaryness' (i.e. there are no ref columns)\n  // then the source must be a less detailed summary table, i.e. having a subset of the groupby columns.\n  // (or they should be the same summary table for same-record linking, which this check allows through)\n  if (\n    !source.column &&\n    !target.column &&\n    target.isSummary && !(\n      source.isSummary &&\n      gutil.isSubset(source.groupbyColumns!, target.groupbyColumns!)\n    )\n  ) {\n    return false;\n  }\n\n  // cannot select from chart\n  if (source.widgetType === 'chart') {\n    return false;\n  }\n\n  if (source.widgetType === 'custom') {\n\n    // custom widget do not support linking by columns\n    if (source.tableId !== source.section.table.peek().primaryTableId.peek()) {\n      return false;\n    }\n\n    // custom widget must allow select by\n    if (!source.section.allowSelectBy()) {\n      return false;\n    }\n  }\n\n  // The link must not create a cycle\n  if (source.ancestors.has(target.section.getRowId())) {\n    return false;\n  }\n\n  return true;\n}\n\n// Represents the differents way to reference to a section for linking\ntype MaybeSection = ViewSectionRec|IPageWidget;\n\n\n// Returns a list of options with all links that link one of the `source` section to the `target`\n// section. Each `opt.value` is a unique identifier (see: linkId() and linkFromId() for more\n// detail), and `opt.label` is a human readable representation of the form\n// `<section_name>[.<source-col-name>][ -> <target-col-name>]` where the <source-col-name> appears\n// only when linking from a reference column, as opposed to linking from the table directly. And the\n// <target-col-name> shows only when both <section_name>[.<source-col-name>] is ambiguous.\nexport function selectBy(docModel: DocModel, sources: ViewSectionRec[],\n                         target: MaybeSection): Array<IOptionFull<string>> {\n  const sourceNodes = createNodes(docModel, sources);\n  const targetNodes = createNodes(docModel, [target]);\n\n  const options = [NoLinkOption];\n  for (const srcNode of sourceNodes) {\n    const validTargets = targetNodes.filter((tgt) => isValidLink(srcNode, tgt));\n    const hasMany = validTargets.length > 1;\n    for (const tgtNode of validTargets) {\n\n      // a unique identifier for this link\n      const value = linkId({\n        srcSectionRef: srcNode.section.getRowId(),\n        srcColRef: srcNode.column ? srcNode.column.getRowId() : 0,\n        targetColRef: tgtNode.column ? tgtNode.column.getRowId() : 0,\n      });\n\n      // a human readable description\n      let label = srcNode.section.titleDef();\n\n      // add the source node col name (except for 'group') or nothing for table node\n      if (srcNode.column && !isSummaryGroup(srcNode)) {\n        label += ` ${BLACK_CIRCLE} ${srcNode.column.label.peek()}`;\n      }\n\n      // add the target column name (except for 'group') when clarification is needed, i.e. if either:\n      // - target has multiple valid nodes, or\n      // - source col is 'group' and is thus hidden.\n      //     Need at least one column name to distinguish from simply selecting by summary table.\n      //     This is relevant when a table has a column referencing itself.\n      if (tgtNode.column && !isSummaryGroup(tgtNode) && (hasMany || isSummaryGroup(srcNode))) {\n        label += ` ${RIGHT_ARROW} ${tgtNode.column.label.peek()}`;\n      }\n\n      // add the new option\n      options.push({ label, value });\n    }\n  }\n  return options;\n}\n\nfunction isViewSectionRec(section: MaybeSection): section is ViewSectionRec {\n  return Boolean((section as ViewSectionRec).getRowId);\n}\n\n// Create all nodes for sections.\nfunction createNodes(docModel: DocModel, sections: MaybeSection[]) {\n  const nodes = [];\n  for (const section of sections) {\n    if (isViewSectionRec(section)) {\n      nodes.push(...fromViewSectionRec(section));\n    } else {\n      nodes.push(...fromPageWidget(docModel, section));\n    }\n  }\n  return nodes;\n}\n\n// Creates an array of LinkNode from a view section record.\nfunction fromViewSectionRec(section: ViewSectionRec): LinkNode[] {\n  if (section.isDisposed()) {\n    return [];\n  }\n  const table = section.table.peek();\n  const ancestors = new Set<number>();\n\n  for (let sec = section; sec.getRowId(); sec = sec.linkSrcSection.peek()) {\n    if (ancestors.has(sec.getRowId())) {\n      // tslint:disable-next-line:no-console\n      console.warn(`Links should not create a cycle - section ids: ${Array.from(ancestors)}`);\n      break;\n    }\n    ancestors.add(sec.getRowId());\n  }\n\n  const isSummary = table.primaryTableId.peek() !== table.tableId.peek();\n  const mainNode: LinkNode = {\n    tableId: table.primaryTableId.peek(),\n    isSummary,\n    groupbyColumns: isSummary ? table.summarySourceColRefs.peek() : undefined,\n    widgetType: section.parentKey.peek(),\n    ancestors,\n    section,\n  };\n\n  return fromColumns(table, mainNode);\n}\n\n// Creates an array of LinkNode from a page widget.\nfunction fromPageWidget(docModel: DocModel, pageWidget: IPageWidget): LinkNode[] {\n\n  if (typeof pageWidget.table !== 'number') { return []; }\n\n  let table = docModel.tables.getRowModel(pageWidget.table);\n  const isSummary = pageWidget.summarize;\n  const groupbyColumns = isSummary ? new Set(pageWidget.columns) : undefined;\n  let tableExists = true;\n  if (isSummary) {\n    const summaryTable = docModel.tables.rowModels.find(\n      t => t?.summarySourceTable.peek() && isEqual(t.summarySourceColRefs.peek(), groupbyColumns));\n    if (summaryTable) {\n      // The selected source table and groupby columns correspond to this existing summary table.\n      table = summaryTable;\n    } else {\n      // This summary table doesn't exist yet. `fromColumns` will be using columns from the source table.\n      // Make sure it only uses columns that are in the selected groupby columns.\n      // The resulting targetColRef will incorrectly be from the source table,\n      // but will be corrected in GristDoc.saveLink after the summary table is created.\n      tableExists = false;\n    }\n  }\n\n  const mainNode: LinkNode = {\n    tableId: table.primaryTableId.peek(),\n    isSummary,\n    groupbyColumns,\n    widgetType: pageWidget.type,\n    ancestors: new Set(),\n    section: docModel.viewSections.getRowModel(pageWidget.section),\n  };\n\n  return fromColumns(table, mainNode, tableExists);\n}\n\nfunction fromColumns(table: TableRec, mainNode: LinkNode, tableExists: boolean = true): LinkNode[] {\n  const nodes = [mainNode];\n  const columns = table.columns.peek().peek();\n  for (const column of columns) {\n    if (!tableExists && !mainNode.groupbyColumns!.has(column.getRowId())) {\n      continue;\n    }\n    const tableId = getReferencedTableId(column.type.peek());\n    if (tableId) {\n      nodes.push({...mainNode, tableId, column});\n    }\n  }\n  return nodes;\n}\n\n// Returns an identifier to uniquely identify a link. Here we adopt a simple approach where\n// {srcSectionRef: 2, srcColRef: 3, targetColRef: 3} is turned into \"[2, 3, 3]\".\nexport function linkId(link: IPageWidgetLink) {\n  return JSON.stringify([link.srcSectionRef, link.srcColRef, link.targetColRef]);\n}\n\n// Returns link's properties from its identifier.\nexport function linkFromId(linkid: string): IPageWidgetLink {\n  const [srcSectionRef, srcColRef, targetColRef] = JSON.parse(linkid);\n  return {srcSectionRef, srcColRef, targetColRef};\n}\n\nexport class LinkConfig {\n  public readonly srcSection: ViewSectionRec;\n  public readonly tgtSection: ViewSectionRec;\n  // Note that srcCol and tgtCol may be the empty column records if that column is not used.\n  public readonly srcCol: ColumnRec;\n  public readonly tgtCol: ColumnRec;\n  public readonly srcColId: string|undefined;\n  public readonly tgtColId: string|undefined;\n\n  // The constructor throws an exception if settings are invalid. When used from inside a knockout\n  // computed, the constructor subscribes to all parts relevant for linking.\n  constructor(tgtSection: ViewSectionRec) {\n    this.tgtCol = tgtSection.linkTargetCol();\n    this.srcCol = tgtSection.linkSrcCol();\n    this.srcSection = tgtSection.linkSrcSection();\n    this.tgtSection = tgtSection;\n    this.srcColId = this.srcCol.colId();\n    this.tgtColId = this.tgtCol.colId();\n    this._assertValid();\n  }\n\n  // Check if section-linking configuration is valid, and throw exception if not.\n  private _assertValid(): void {\n    // Use null for unset cols (rather than an empty ColumnRec) for easier comparisons below.\n    const srcCol = this.srcCol?.getRowId() ? this.srcCol : null;\n    const tgtCol = this.tgtCol?.getRowId() ? this.tgtCol : null;\n    const srcTableId = (srcCol ? getReferencedTableId(srcCol.type()) :\n      this.srcSection.table().primaryTableId());\n    const tgtTableId = (tgtCol ? getReferencedTableId(tgtCol.type()) :\n      this.tgtSection.table().primaryTableId());\n    const srcTableSummarySourceTable = this.srcSection.table().summarySourceTable();\n    const tgtTableSummarySourceTable = this.tgtSection.table().summarySourceTable();\n    try {\n      assert(Boolean(this.srcSection.getRowId()), \"srcSection was disposed\");\n      assert(!tgtCol || tgtCol.parentId() === this.tgtSection.tableRef(), \"tgtCol belongs to wrong table\");\n      assert(!srcCol || srcCol.parentId() === this.srcSection.tableRef(), \"srcCol belongs to wrong table\");\n      assert(this.srcSection.getRowId() !== this.tgtSection.getRowId(), \"srcSection links to itself\");\n\n      // We usually expect srcTableId and tgtTableId to be non-empty, but there's one exception:\n      // when linking two summary tables that share a source table (which we can check directly)\n      // and the source table is hidden by ACL, so its tableId is empty from our perspective.\n      if (!(srcTableSummarySourceTable !== 0 && srcTableSummarySourceTable === tgtTableSummarySourceTable)) {\n        assert(tgtTableId, \"tgtCol not a valid reference\");\n        assert(srcTableId, \"srcCol not a valid reference\");\n      }\n      assert(srcTableId === tgtTableId, \"mismatched tableIds\");\n    } catch (e) {\n      throw new Error(`LinkConfig invalid: ` +\n        `${this.srcSection.getRowId()}:${this.srcCol?.getRowId()}[${srcTableId}] -> ` +\n        `${this.tgtSection.getRowId()}:${this.tgtCol?.getRowId()}[${tgtTableId}]: ${e}`);\n    }\n  }\n}\n","import {dom, IDomArgs, Observable, styled} from 'grainjs';\n\n// Shadow css settings for member scroll top and bottom.\nconst SHADOW_TOP = 'inset 0 4px 6px 0 rgba(217,217,217,0.4)';\nconst SHADOW_BTM = 'inset 0 -4px 6px 0 rgba(217,217,217,0.4)';\n\n/**\n * Creates a scroll div used in the UserManager and moveDoc menus to display\n * shadows at the top and bottom of a list of scrollable items.\n */\nexport function shadowScroll(...args: IDomArgs<HTMLDivElement>) {\n  // Observables to indicate the scroll position.\n  const scrollTop = Observable.create(null, true);\n  const scrollBtm = Observable.create(null, true);\n  return cssScrollMenu(\n    dom.autoDispose(scrollTop),\n    dom.autoDispose(scrollBtm),\n    // Update scroll positions on init and on scroll.\n    (elem) => { setTimeout(() => scrollBtm.set(isAtScrollBtm(elem)), 0); },\n    dom.on('scroll', (_, elem) => {\n      scrollTop.set(isAtScrollTop(elem));\n      scrollBtm.set(isAtScrollBtm(elem));\n    }),\n    // Add shadows on the top/bottom if the list is scrolled away from either.\n    dom.style('box-shadow', (use) => {\n      const shadows = [use(scrollTop) ? null : SHADOW_TOP, use(scrollBtm) ? null : SHADOW_BTM];\n      return shadows.filter(css => css).join(', ');\n    }),\n    ...args\n  );\n}\n\n// Indicates that an element is currently scrolled such that the top of the element is visible.\nfunction isAtScrollTop(elem: Element): boolean {\n  return elem.scrollTop === 0;\n}\n\n// Indicates that an element is currently scrolled such that the bottom of the element is visible.\n// It is expected that the elem arg has the offsetHeight property set.\nfunction isAtScrollBtm(elem: HTMLElement): boolean {\n  return elem.scrollTop >= (elem.scrollHeight - elem.offsetHeight);\n}\n\nconst cssScrollMenu = styled('div', `\n  flex: 1 1 0;\n  width: 100%;\n  overflow-y: auto;\n`);\n","// the list of widget types with their labels and icons\nimport {IWidgetType} from \"app/common/widgetTypes\";\nimport {IconName} from \"app/client/ui2018/IconList\";\n\nexport const widgetTypesMap = new Map<IWidgetType, IWidgetTypeInfo>([\n  ['record', {label: 'Table', icon: 'TypeTable'}],\n  ['single', {label: 'Card', icon: 'TypeCard'}],\n  ['detail', {label: 'Card List', icon: 'TypeCardList'}],\n  ['chart', {label: 'Chart', icon: 'TypeChart'}],\n  ['custom', {label: 'Custom', icon: 'TypeCustom'}],\n  ['custom.calendar', {label: 'Calendar', icon: 'FieldDate'}]\n]);\n\n// Widget type info.\nexport interface IWidgetTypeInfo {\n  label: string;\n  icon: IconName;\n}\n\n// Returns the widget type info for sectionType, or the one for 'record' if sectionType is null.\nexport function getWidgetTypes(sectionType: IWidgetType | null): IWidgetTypeInfo {\n  return widgetTypesMap.get(sectionType || 'record') || widgetTypesMap.get('record')!;\n}\n","/*\n * The palettes were inspired by comparisons of a handful of popular services.\n */\nexport const swatches = [\n  // white-black\n  \"#FFFFFF\",\n  \"#DCDCDC\",\n  \"#888888\",\n  \"#000000\",\n\n  // red\n  \"#FECBCC\",\n  \"#FD8182\",\n  \"#E00A17\",\n  \"#740206\",\n\n  // brown\n  \"#F3E1D2\",\n  \"#D6A77F\",\n  \"#AA632B\",\n  \"#653008\",\n\n  // orange\n  \"#FEE7C3\",\n  \"#FECC81\",\n  \"#FD9D28\",\n  \"#B36F19\",\n\n  // yellow\n  \"#FFFACD\",\n  \"#FEF47A\",\n  \"#E8D62F\",\n  \"#928619\",\n\n  // green\n  \"#E1FEDE\",\n  \"#98FD90\",\n  \"#2AE028\",\n  \"#126E0E\",\n\n  // light blue\n  \"#CCFEFE\",\n  \"#8AFCFE\",\n  \"#24D6DB\",\n  \"#0C686A\",\n\n  // dark blue\n  \"#D3E7FE\",\n  \"#75B5FC\",\n  \"#157AFB\",\n  \"#084794\",\n\n  // violet\n  \"#E8D0FE\",\n  \"#BC77FC\",\n  \"#8725FB\",\n  \"#460D81\",\n\n  // pink\n  \"#FED6FB\",\n  \"#FD79F4\",\n  \"#E621D7\",\n  \"#760C6E\"\n];\n\n/**\n * Tells if swatch is a light color or dark (2 first are light 2 last are dark)\n */\nexport function isLight(index: number) {\n  return index % 4 <= 1;\n}\n","import {basicButton, primaryButton} from 'app/client/ui2018/buttons';\nimport {isLight, swatches} from 'app/client/ui2018/ColorPalette';\nimport {testId, theme, vars} from 'app/client/ui2018/cssVars';\nimport {textInput} from 'app/client/ui2018/editableLabel';\nimport {IconName} from 'app/client/ui2018/IconList';\nimport {icon} from 'app/client/ui2018/icons';\nimport {cssSelectBtn} from 'app/client/ui2018/select';\nimport {isValidHex} from 'app/common/gutil';\nimport {BindableValue, Computed, Disposable, dom, DomElementArg, Observable, onKeyDown, styled} from 'grainjs';\nimport {defaultMenuOptions, IOpenController, setPopupToCreateDom} from 'popweasel';\nimport {makeT} from 'app/client/lib/localization';\n\nconst t = makeT('ColorSelect');\n\nexport interface StyleOptions {\n  textColor: ColorOption,\n  fillColor: ColorOption,\n  fontBold: Observable<boolean|undefined>,\n  fontUnderline: Observable<boolean|undefined>,\n  fontItalic: Observable<boolean|undefined>,\n  fontStrikethrough: Observable<boolean|undefined>,\n}\n\nexport class ColorOption {\n  public color: Observable<string|undefined>;\n  // If the color accepts undefined/empty as a value. Controls empty selector in the picker.\n  public allowsNone: boolean = false;\n  // Default color to show when value is empty or undefined (itself can be empty).\n  public defaultColor: string = '';\n  // Text to be shown in the picker when color is not set.\n  public noneText: string = '';\n  constructor(options: {\n    color: Observable<string|undefined>,\n    allowsNone?: boolean,\n    defaultColor?: string,\n    noneText?: string\n  }) {\n    Object.assign(this, options);\n  }\n}\n\n/**\n * colorSelect allows to select color for both fill and text cell color. It allows for fast\n * selection thanks to two color palette, `lighter` and `darker`, and also to pick custom color with\n * native color picker. Pressing Escape reverts to the saved value. Caller is expected to handle\n * logging of onSave() callback rejection. In case of rejection, values are reverted to their saved one.\n */\nexport function colorSelect(\n  styleOptions: StyleOptions,\n  options: {\n    // Handler to save the style.\n    onSave: () => Promise<void>,\n    // Invoked when user opens the color picker.\n    onOpen?: () => void,\n    // Invoked when user closes the color picker without saving.\n    onRevert?: () => void,\n    placeholder?: BindableValue<string>\n  }): Element {\n  const {\n    textColor,\n    fillColor,\n  } = styleOptions;\n  const {\n    onSave,\n    onOpen,\n    onRevert,\n    placeholder = t(\"Default cell style\"),\n  } = options;\n  const selectBtn = cssSelectBtn(\n    cssContent(\n      cssButtonIcon(\n        'T',\n        dom.style('color', use => use(textColor.color) || textColor.defaultColor),\n        dom.style('background-color', (use) => use(fillColor.color)?.slice(0, 7) || fillColor.defaultColor),\n        dom.cls('font-bold', use => use(styleOptions.fontBold) ?? false),\n        dom.cls('font-italic', use => use(styleOptions.fontItalic) ?? false),\n        dom.cls('font-underline', use => use(styleOptions.fontUnderline) ?? false),\n        dom.cls('font-strikethrough', use => use(styleOptions.fontStrikethrough) ?? false),\n        cssLightBorder.cls(''),\n        testId('btn-icon'),\n      ),\n      dom.text(placeholder),\n    ),\n    icon('Dropdown'),\n    testId('color-select'),\n  );\n\n  const domCreator = (ctl: IOpenController) => {\n    onOpen?.();\n    return buildColorPicker(ctl, {styleOptions, onSave, onRevert});\n  };\n  setPopupToCreateDom(selectBtn, domCreator, {...defaultMenuOptions, placement: 'bottom-end'});\n\n  return selectBtn;\n}\n\nexport interface ColorButtonOptions {\n  styleOptions: StyleOptions;\n  colorPickerDomArgs?: DomElementArg[];\n  onSave(): Promise<void>;\n  onRevert?(): void;\n  onClose?(): void;\n}\n\nexport function colorButton(options: ColorButtonOptions): Element {\n  const { colorPickerDomArgs, ...colorPickerOptions } = options;\n  const { styleOptions } = colorPickerOptions;\n  const { textColor, fillColor } = styleOptions;\n  const iconBtn = cssIconBtn(\n    'T',\n    dom.style('color', use => use(textColor.color) || textColor.defaultColor),\n    dom.style('background-color', (use) => use(fillColor.color)?.slice(0, 7) || fillColor.defaultColor),\n    dom.cls('font-bold', use => use(styleOptions.fontBold) ?? false),\n    dom.cls('font-italic', use => use(styleOptions.fontItalic) ?? false),\n    dom.cls('font-underline', use => use(styleOptions.fontUnderline) ?? false),\n    dom.cls('font-strikethrough', use => use(styleOptions.fontStrikethrough) ?? false),\n    testId('color-button'),\n  );\n\n  const domCreator = (ctl: IOpenController) =>\n    buildColorPicker(ctl, colorPickerOptions, colorPickerDomArgs);\n  setPopupToCreateDom(iconBtn, domCreator, { ...defaultMenuOptions, placement: 'bottom-end' });\n\n  return iconBtn;\n}\n\ninterface ColorPickerOptions {\n  styleOptions: StyleOptions;\n  onSave(): Promise<void>;\n  onRevert?(): void;\n  onClose?(): void;\n}\n\nfunction buildColorPicker(\n  ctl: IOpenController,\n  options: ColorPickerOptions,\n  ...domArgs: DomElementArg[]\n): Element {\n  const {styleOptions, onSave, onRevert, onClose} = options;\n  const {\n    textColor, fillColor, fontBold, fontUnderline, fontItalic, fontStrikethrough\n  } = styleOptions;\n  const textColorModel = ColorModel.create(null, textColor.color);\n  const fillColorModel = ColorModel.create(null, fillColor.color);\n  const fontBoldModel = BooleanModel.create(null, fontBold);\n  const fontUnderlineModel = BooleanModel.create(null, fontUnderline);\n  const fontItalicModel = BooleanModel.create(null, fontItalic);\n  const fontStrikethroughModel = BooleanModel.create(null, fontStrikethrough);\n\n  const models = [textColorModel, fillColorModel, fontBoldModel, fontUnderlineModel,\n                  fontItalicModel, fontStrikethroughModel];\n\n  const notChanged = Computed.create(null, use => models.every(m => use(m.needsSaving) === false));\n\n  function revert() {\n    onRevert?.();\n    if (!onRevert) {\n      models.forEach(m => m.revert());\n    }\n    ctl.close();\n  }\n\n  ctl.onDispose(async () => {\n    if (!notChanged.get()) {\n      try {\n        // TODO: disable the trigger btn while saving\n        await onSave();\n      } catch (e) {\n        onRevert?.();\n        if (!onRevert) {\n          models.forEach(m => m.revert());\n        }\n      }\n    }\n    models.forEach(m => m.dispose());\n    notChanged.dispose();\n    onClose?.();\n  });\n\n  return cssContainer(\n    dom.create(FontComponent, {\n      fontBoldModel,\n      fontUnderlineModel,\n      fontItalicModel,\n      fontStrikethroughModel,\n    }),\n    cssVSpacer(),\n    dom.create(PickerComponent, textColorModel, {\n      title: 'text',\n      ...textColor\n    }),\n    cssVSpacer(),\n    dom.create(PickerComponent, fillColorModel, {\n      title: 'fill',\n      ...fillColor\n    }),\n    // gives focus and binds keydown events\n    (elem: any) => { setTimeout(() => elem.focus(), 0); },\n    onKeyDown({\n      Escape: () => { revert(); },\n      Enter: () => { ctl.close(); },\n    }),\n\n    cssButtonRow(\n      primaryButton(t(\"Apply\"),\n        dom.on('click', () => ctl.close()),\n        dom.boolAttr(\"disabled\", notChanged),\n        testId('colors-save')\n      ),\n      basicButton(t(\"Cancel\"),\n        dom.on('click', () => revert()),\n        testId('colors-cancel')\n      )\n    ),\n\n    // Set focus when `focusout` is bubbling from a children element. This is to allow to receive\n    // keyboard event again after user interacted with the hex box text input.\n    dom.on('focusout', (ev, elem) => (ev.target !== elem) && elem.focus()),\n\n    ...domArgs,\n  );\n}\n\n// PickerModel is a helper model that helps keep track of the server value for an observable that\n// needs to be changed locally without saving. To use, you must call `model.setValue(...)` instead\n// of `obs.set(...)`. Then it offers `model.needsSaving()` that tells you whether current value\n// needs saving, and `model.revert()` that reverts obs to the its server value.\nclass PickerModel<T extends boolean|string|undefined> extends Disposable {\n\n  // Is current value different from the server value?\n  public needsSaving: Observable<boolean>;\n  private _serverValue: Observable<T>;\n  private _localChange: boolean = false;\n  constructor(public obs: Observable<T>) {\n    super();\n    this._serverValue = Observable.create(this, this.obs.get());\n    this.needsSaving =  Computed.create(this, use => {\n      const current = use(this.obs);\n      const server = use(this._serverValue);\n      // We support booleans and strings only for now, so if current is false and server\n      // is undefined, we assume they are the same.\n      // TODO: this probably should be a strategy method.\n      return current !== (typeof current === 'boolean' ? (server ?? false) : server);\n    });\n    this.autoDispose(this.obs.addListener((val) => {\n      if (this._localChange) { return; }\n      this._serverValue.set(val);\n    }));\n  }\n\n  // Set the value picked by the user\n  public setValue(val: T) {\n    this._localChange = true;\n    this.obs.set(val);\n    this._localChange = false;\n  }\n\n  // Revert obs to its server value\n  public revert() {\n    this.obs.set(this._serverValue.get());\n  }\n}\n\nclass ColorModel extends PickerModel<string|undefined> {}\nclass BooleanModel extends PickerModel<boolean|undefined> {}\n\ninterface PickerComponentOptions {\n  title: string;\n  allowsNone: boolean;\n  // Default color to show when value is empty or undefined (itself can be empty).\n  defaultColor: string;\n  // Text to be shown in the picker when color is not set.\n  noneText: string;\n}\nclass PickerComponent extends Disposable {\n\n  private _color = Computed.create(this,\n    this._model.obs,\n    (use, val) => (val || this._options.defaultColor).toUpperCase().slice(0, 7));\n\n  constructor(\n    private _model: PickerModel<string|undefined>,\n    private _options: PickerComponentOptions) {\n    super();\n  }\n\n  public buildDom() {\n    const title = this._options.title;\n    const colorText = Computed.create(null, use => use(this._color) || this._options.noneText);\n    return [\n      cssHeaderRow(title),\n      cssControlRow(\n        cssColorPreview(\n          dom.update(\n            cssColorSquare(\n              cssLightBorder.cls(''),\n              dom.style('background-color', this._color),\n              cssNoneIcon('Empty',\n                dom.hide(use => Boolean(use(this._color)) === true)\n              ),\n            ),\n            cssColorInput(\n              {type: 'color'},\n              dom.attr('value', this._color),\n              dom.on('input', (ev, elem) => this._setValue(elem.value || undefined)),\n              testId(`${title}-input`),\n            ),\n          ),\n          cssHexBox(\n            colorText,\n            async (val) => {\n              if (!val || isValidHex(val)) {\n                this._model.setValue(val || undefined);\n              }\n            },\n            dom.autoDispose(colorText),\n            testId(`${title}-hex`),\n            // select the hex value on click. Doing it using settimeout allows to avoid some\n            // sporadically losing the selection just after the click.\n            dom.on('click', (ev, elem) => setTimeout(() => elem.select(), 0)),\n          )\n        ),\n        cssEmptyBox(\n          cssEmptyBox.cls('-selected', (use) => !use(this._color)),\n          dom.on('click', () => this._setValue(undefined)),\n          dom.hide(!this._options.allowsNone),\n          cssNoneIcon('Empty'),\n          testId(`${title}-empty`),\n        )\n      ),\n      cssPalette(\n        swatches.map((color, index) => (\n          cssColorSquare(\n            dom.style('background-color', color),\n            cssLightBorder.cls('', isLight(index)),\n            cssColorSquare.cls('-selected', (use) => use(this._color) === color),\n            dom.style('outline-color', isLight(index) ? '' : color),\n            dom.on('click', () => this._setValue(color)),\n            testId(`color-${color}`),\n          )\n        )),\n        testId(`${title}-palette`),\n      ),\n    ];\n  }\n\n  private _setValue(val: string|undefined) {\n    this._model.setValue(val);\n  }\n}\n\nclass FontComponent extends Disposable {\n  constructor(\n    private _options: {\n      fontBoldModel: BooleanModel,\n      fontUnderlineModel: BooleanModel,\n      fontItalicModel: BooleanModel,\n      fontStrikethroughModel: BooleanModel,\n    }\n  ) {\n    super();\n  }\n\n  public buildDom() {\n    function option(iconName: IconName, model: BooleanModel) {\n      return cssFontOption(\n        cssFontIcon(iconName),\n        dom.on('click', () => model.setValue(!model.obs.get())),\n        cssFontOption.cls('-selected', use => use(model.obs) ?? false),\n        testId(`font-option-${iconName}`)\n      );\n    }\n    return cssFontOptions(\n      option('FontBold', this._options.fontBoldModel),\n      option('FontUnderline', this._options.fontUnderlineModel),\n      option('FontItalic', this._options.fontItalicModel),\n      option('FontStrikethrough', this._options.fontStrikethroughModel),\n    );\n  }\n}\n\nconst cssFontOptions = styled('div', `\n  display: flex;\n  gap: 1px;\n  background: ${theme.colorSelectFontOptionsBorder};\n  border: 1px solid ${theme.colorSelectFontOptionsBorder};\n`);\n\nconst cssFontOption = styled('div', `\n  display: grid;\n  place-items: center;\n  flex-grow: 1;\n  background: ${theme.colorSelectFontOptionBg};\n  --icon-color: ${theme.colorSelectFontOptionFg};\n  height: 24px;\n  cursor: pointer;\n  &:hover:not(&-selected) {\n    background: ${theme.colorSelectFontOptionBgHover};\n  }\n  &-selected {\n    background: ${theme.colorSelectFontOptionBgSelected};\n    --icon-color: ${theme.colorSelectFontOptionFgSelected}\n  }\n`);\n\nconst cssColorInput = styled('input', `\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  border: none;\n`);\n\nconst cssColorPreview = styled('div', `\n  display: flex;\n`);\n\nconst cssControlRow = styled('div', `\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`);\n\nconst cssHeaderRow = styled('div', `\n  color: ${theme.colorSelectFg};\n  text-transform: uppercase;\n  font-size: ${vars.smallFontSize};\n  margin-bottom: 12px;\n`);\n\nconst cssPalette = styled('div', `\n  width: 236px;\n  height: calc(4 * 20px + 3 * 4px);\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-content: space-between;\n`);\n\nconst cssVSpacer = styled('div', `\n  height: 24px;\n`);\n\nconst cssContainer = styled('div', `\n  padding: 18px 16px;\n  background-color: ${theme.colorSelectBg};\n  box-shadow: 0 2px 16px 0 ${theme.colorSelectShadow};\n  z-index: 20;\n  margin: 2px 0;\n  &:focus {\n    outline: none;\n  }\n`);\n\nconst cssContent = styled('div', `\n  display: flex;\n  align-items: center;\n`);\n\nconst cssHexBox = styled(textInput, `\n  border: 1px solid ${theme.colorSelectInputBorder};\n  border-left: none;\n  font-size: ${vars.smallFontSize};\n  display: flex;\n  align-items: center;\n  color: ${theme.colorSelectInputFg};\n  background-color: ${theme.colorSelectInputBg};\n  width: 56px;\n  outline: none;\n  padding: 0 3px;\n  height: unset;\n  border-radius: unset;\n`);\n\nconst cssLightBorder = styled('div', `\n  border: 1px solid ${theme.colorSelectColorSquareBorder};\n`);\n\nconst cssColorSquare = styled('div', `\n  width: 20px;\n  height: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  &-selected {\n    outline: 1px solid ${theme.colorSelectColorSquareBorder};\n    outline-offset: 1px;\n  }\n`);\n\nconst cssEmptyBox = styled(cssColorSquare, `\n  --icon-color: ${theme.iconError};\n  border: 1px solid #D9D9D9;\n  &-selected {\n    outline: 1px solid ${theme.colorSelectColorSquareBorderEmpty};\n    outline-offset: 1px;\n  }\n`);\n\nconst cssFontIcon = styled(icon, `\n  height: 12px;\n  width: 12px;\n`);\n\nconst cssNoneIcon = styled(icon, `\n  height: 100%;\n  width: 100%;\n  --icon-color: ${theme.iconError}\n`);\n\nconst cssButtonIcon = styled(cssColorSquare, `\n  margin-right: 6px;\n  margin-left: 4px;\n`);\n\nconst cssIconBtn = styled(cssColorSquare, `\n  min-width: 18px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  display: grid;\n  place-items: center;\n`);\n\nconst cssButtonRow = styled('div', `\n  gap: 8px;\n  display: flex;\n  margin-top: 24px;\n`);\n","import {colors, testId, theme, vars} from 'app/client/ui2018/cssVars';\nimport {IconName} from 'app/client/ui2018/IconList';\nimport {icon} from 'app/client/ui2018/icons';\nimport {isColorDark} from 'app/common/gutil';\nimport {dom, DomElementArg, Observable, styled} from 'grainjs';\nimport debounce = require('lodash/debounce');\n\nexport interface ISelectorOptionFull<T> {\n  value: T;\n  label?: string;\n  icon?: IconName;\n}\n\n// For string options, we can use a string for label and value without wrapping into an object.\nexport type ISelectorOption<T> = (T & string) | ISelectorOptionFull<T>;\n\n/**\n * Creates a button select, which is a row of buttons of which only one may be selected.\n * The observable `obs` reflects the value of the selected option, and `optionArray` is an array\n * of option values and labels. These may be either strings, or {label, value, icon} objects.\n * Icons and labels are optional (but one should be included or the buttons will be blank).\n *\n * The type of value may be any type at all; it is opaque to this widget.\n *\n * A \"light\" style is supported in CSS by passing cssButtonSelect.cls('-light') as an additional\n * argument.\n *\n * A disabled state is supported by passing cssButtonSelect.cls('-disabled').\n *\n * Usage:\n *    const fruit = observable(\"apple\");\n *    buttonSelect(fruit, [\"apple\", \"banana\", \"mango\"]);\n *\n *    const alignments: ISelectorOption<string>[] = [\n *      {value: 'left',   icon: 'LeftAlign'},\n *      {value: 'center', icon: 'CenterAlign'},\n *      {value: 'right',  icon: 'RightAlign'}\n *    ];\n *    buttonSelect(obs, alignments);\n *\n */\nexport function buttonSelect<T>(\n  obs: Observable<T>,\n  optionArray: Array<ISelectorOption<T>>,\n  ...domArgs: DomElementArg[]\n) {\n  return makeButtonSelect(obs, optionArray, (val: T) => { obs.set(val); }, ...domArgs);\n}\n\n/**\n * Identical to a buttonSelect, but allows the possibility of none of the items being selected.\n * Sets the observable `obs` to null when no items are selected.\n */\nexport function buttonToggleSelect<T>(\n  obs: Observable<T|null>,\n  optionArray: Array<ISelectorOption<T>>,\n  ...domArgs: DomElementArg[]\n) {\n  const onClick = (val: T) => { obs.set(obs.get() === val ? null : val); };\n  return makeButtonSelect(obs, optionArray, onClick, ...domArgs);\n}\n\n/**\n * Pre-made text alignment selector.\n */\nexport function alignmentSelect(obs: Observable<string>, ...domArgs: DomElementArg[]) {\n  const alignments: Array<ISelectorOption<string>> = [\n    {value: 'left',   icon: 'LeftAlign'},\n    {value: 'center', icon: 'CenterAlign'},\n    {value: 'right',  icon: 'RightAlign'}\n  ];\n  return buttonSelect(obs, alignments, {}, testId('alignment-select'), ...domArgs);\n}\n\n/**\n * Color selector button. Observable should contain a hex color value, e.g. #a4ba23.\n */\nexport function colorSelect(value: Observable<string>, save: (val: string) => Promise<void>,\n                            ...domArgs: DomElementArg[]) {\n  // On some machines (seen on chrome running on a Mac) the `change` event fires as many times as\n  // the `input` event, hence the debounce. Also note that when user picks a first color and then a\n  // second before closing the picker, it will create two user actions on Chrome, and only one in FF\n  // (which should be the expected behaviour).\n  const setValue = debounce(e => value.set(e.target.value), 300);\n  const onSave = debounce(e => save(e.target.value), 300);\n\n  return cssColorBtn(\n    // TODO: When re-opening the color picker after a new color was saved on server, the picker will\n    // reset the value to what it was when the picker was last closed. To allow picker to show the\n    // latest saved value we should rebind the <input .../> element each time the value is changed\n    // by the server.\n    cssColorPicker(\n      {type: 'color'},\n      dom.attr('value', (use) => use(value).slice(0, 7)),\n      dom.on('input', setValue),\n      dom.on('change', onSave)\n    ),\n    dom.style('background-color', (use) => use(value) || '#000000'),\n    cssColorBtn.cls('-dark', (use) => isColorDark(use(value) || '#000000')),\n    cssColorIcon('Dots'),\n    ...domArgs\n  );\n}\n\nexport function makeButtonSelect<T>(\n  obs: Observable<T|null>,\n  optionArray: Array<ISelectorOption<T>>,\n  onClick: (value: T) => any,\n  ...domArgs: DomElementArg[]\n) {\n  return cssButtonSelect(\n    dom.forEach(optionArray, (option: ISelectorOption<T>) => {\n      const value = getOptionValue(option);\n      const label = getOptionLabel(option);\n      return cssSelectorBtn(\n        cssSelectorBtn.cls('-selected', (use) => use(obs) === value),\n        dom.on('click', () => onClick(value)),\n        isFullOption(option) && option.icon ? icon(option.icon) : null,\n        label ? cssSelectorLabel(label) : null,\n        testId('select-button')\n      );\n    }),\n    ...domArgs\n  );\n}\n\nfunction isFullOption<T>(option: ISelectorOption<T>): option is ISelectorOptionFull<T> {\n  return typeof option !== \"string\";\n}\n\nfunction getOptionLabel<T>(option: ISelectorOption<T>): string|undefined {\n  return isFullOption(option) ? option.label : option;\n}\n\nfunction getOptionValue<T>(option: ISelectorOption<T>): T {\n  return isFullOption(option) ? option.value : option;\n}\n\nexport const cssButtonSelect = styled('div', `\n  /* Resets */\n  position: relative;\n  outline: none;\n  border-style: none;\n  display: flex;\n\n  /* Vars */\n  color: ${theme.text};\n  flex: 1 1 0;\n`);\n\nconst cssSelectorBtn = styled('div', `\n  /* Resets */\n  position: relative;\n  outline: none;\n  border-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  /* Vars */\n  flex: 1 1 0;\n  font-size: ${vars.mediumFontSize};\n  letter-spacing: -0.08px;\n  text-align: center;\n  line-height: normal;\n  min-width: 32px;\n  white-space: nowrap;\n  padding: 4px 10px;\n\n  background-color: ${theme.buttonGroupBg};\n  border: 1px solid ${theme.buttonGroupBorder};\n  --icon-color: ${theme.buttonGroupIcon};\n\n  margin-left: -1px;\n\n  cursor: pointer;\n\n  &:first-child {\n    border-top-left-radius: ${vars.controlBorderRadius};\n    border-bottom-left-radius: ${vars.controlBorderRadius};\n    margin-left: 0;\n  }\n\n  &:last-child {\n    border-top-right-radius: ${vars.controlBorderRadius};\n    border-bottom-right-radius: ${vars.controlBorderRadius};\n  }\n\n  &:hover:not(&-selected) {\n    border: 1px solid ${theme.buttonGroupBorderHover};\n    z-index: 5;  /* Update z-index so selected borders take precedent */\n  }\n\n  &-selected {\n    color: ${theme.buttonGroupSelectedFg};\n    --icon-color: ${theme.buttonGroupSelectedFg};\n    border: 1px solid ${theme.buttonGroupSelectedBorder};\n    background-color: ${theme.buttonGroupSelectedBg};\n    z-index: 10;  /* Update z-index so selected borders take precedent */\n  }\n\n  /* Styles when container includes cssButtonSelect.cls('-light') */\n  .${cssButtonSelect.className}-light > & {\n    border: none;\n    border-radius: ${vars.controlBorderRadius};\n    margin-left: 0px;\n    padding: 8px;\n    color: ${theme.buttonGroupLightFg};\n    --icon-color: ${theme.buttonGroupLightFg};\n  }\n  .${cssButtonSelect.className}-light > &-selected {\n    border: none;\n    color: ${theme.buttonGroupLightSelectedFg};\n    --icon-color: ${theme.buttonGroupLightSelectedFg};\n    background-color: initial;\n  }\n  .${cssButtonSelect.className}-light > &:hover {\n    border: none;\n    background-color: ${theme.hover};\n  }\n  .${cssButtonSelect.className}-disabled > &,\n  .${cssButtonSelect.className}-disabled > &:hover {\n    --icon-color: ${theme.rightPanelToggleButtonDisabledFg};\n    color: ${theme.rightPanelToggleButtonDisabledFg};\n    background-color: ${theme.rightPanelToggleButtonDisabledBg};\n    border-color: ${theme.buttonGroupBorder};\n    pointer-events: none;\n  }\n`);\n\nconst cssSelectorLabel = styled('span', `\n  margin: 0 2px;\n  vertical-align: middle;\n`);\n\nconst cssColorBtn = styled('div', `\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-width: 32px;\n  max-width: 56px;\n  height: 32px;\n  border-radius: 4px;\n  border: 1px solid ${colors.darkGrey};\n\n  &:hover {\n    border: 1px solid ${colors.hover};\n  }\n\n  &-dark {\n    border: none !important;\n  }\n`);\n\nconst cssColorPicker = styled('input', `\n  position: absolute;\n  cursor: pointer;\n  opacity: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`);\n\nconst cssColorIcon = styled(icon, `\n  margin: 0 2px;\n  background-color: ${colors.slate};\n  pointer-events: none;\n\n  .${cssColorBtn.className}-dark & {\n    background-color: ${colors.light};\n  }\n`);\n","import {testId, theme} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {styled} from 'grainjs';\n\n// TODO: Update and move koForm draggableList here.\n\n// Drag icon for use in koForm draggableList.\nexport const cssDragger = styled((...args: any[]) => icon('DragDrop', testId('dragger'), ...args), `\n  --icon-color: ${theme.controlSecondaryFg};\n  visibility: hidden;\n  align-self: center;\n  flex-shrink: 0;\n  .kf_draggable:hover & {\n    visibility: visible;\n  }\n`);\n","import { makeT } from 'app/client/lib/localization';\nimport {allCommands} from 'app/client/components/commands';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {textButton} from 'app/client/ui2018/buttons';\nimport {ColorOption, colorSelect} from 'app/client/ui2018/ColorSelect';\nimport {testId, theme, vars} from 'app/client/ui2018/cssVars';\nimport {ConditionalStyle} from 'app/client/widgets/ConditionalStyle';\nimport {Computed, Disposable, dom, DomContents, fromKo, styled} from 'grainjs';\n\nconst t = makeT('CellStyle');\n\nexport class CellStyle extends Disposable {\n\n  constructor(\n    private _field: ViewFieldRec,\n    private _gristDoc: GristDoc,\n    private _defaultTextColor: string\n  ) {\n    super();\n  }\n\n  public buildDom(): DomContents {\n    const isTableWidget = this._field.viewSection().parentKey() === 'record';\n    return [\n      dom.maybe(use => isTableWidget, () => {\n        return [\n          cssLine(\n            cssLabel(t('HEADER STYLE')),\n          ),\n          cssRow(\n            testId('header-color-select'),\n            dom.domComputedOwned(fromKo(this._field.config.headerStyle), (holder, options) => {\n              const headerTextColor = fromKo(options.prop(\"headerTextColor\"));\n              const headerFillColor = fromKo(options.prop(\"headerFillColor\"));\n              const headerFontBold = fromKo(options.prop(\"headerFontBold\"));\n              const headerFontUnderline = fromKo(options.prop(\"headerFontUnderline\"));\n              const headerFontItalic = fromKo(options.prop(\"headerFontItalic\"));\n              const headerFontStrikethrough = fromKo(options.prop(\"headerFontStrikethrough\"));\n              const hasMixedStyle = Computed.create(holder, use => {\n                if (!use(this._field.config.multiselect)) { return false; }\n                const commonStyle = [\n                  use(options.mixed('headerTextColor')),\n                  use(options.mixed('headerFillColor')),\n                  use(options.mixed('headerFontBold')),\n                  use(options.mixed('headerFontUnderline')),\n                  use(options.mixed('headerFontItalic')),\n                  use(options.mixed('headerFontStrikethrough'))\n                ];\n                return commonStyle.some(Boolean);\n              });\n              return colorSelect(\n                {\n                  textColor: new ColorOption(\n                    { color: headerTextColor, defaultColor: this._defaultTextColor, noneText: 'default' }\n                  ),\n                  fillColor: new ColorOption(\n                    { color: headerFillColor, allowsNone: true, noneText: 'none' }\n                  ),\n                  fontBold: headerFontBold,\n                  fontItalic: headerFontItalic,\n                  fontUnderline: headerFontUnderline,\n                  fontStrikethrough: headerFontStrikethrough\n                }, {\n                onSave: () => options.save(),\n                onRevert: () => options.revert(),\n                placeholder: use => use(hasMixedStyle) ? t('Mixed style') : t('Default header style')\n              }\n              );\n            }),\n          )];\n      }),\n      cssLine(\n        cssLabel(t('CELL STYLE')),\n        cssButton(t('Open row styles'), dom.on('click', allCommands.viewTabOpen.run)),\n      ),\n      cssRow(\n        testId('cell-color-select'),\n        dom.domComputedOwned(fromKo(this._field.config.style), (holder, options) => {\n          const textColor = fromKo(options.prop(\"textColor\"));\n          const fillColor = fromKo(options.prop(\"fillColor\"));\n          const fontBold = fromKo(options.prop(\"fontBold\"));\n          const fontUnderline = fromKo(options.prop(\"fontUnderline\"));\n          const fontItalic = fromKo(options.prop(\"fontItalic\"));\n          const fontStrikethrough = fromKo(options.prop(\"fontStrikethrough\"));\n          const hasMixedStyle = Computed.create(holder, use => {\n            if (!use(this._field.config.multiselect)) { return false; }\n            const commonStyle = [\n              use(options.mixed('textColor')),\n              use(options.mixed('fillColor')),\n              use(options.mixed('fontBold')),\n              use(options.mixed('fontUnderline')),\n              use(options.mixed('fontItalic')),\n              use(options.mixed('fontStrikethrough'))\n            ];\n            return commonStyle.some(Boolean);\n          });\n          return colorSelect(\n            {\n              textColor: new ColorOption(\n                { color: textColor, defaultColor: this._defaultTextColor, noneText: 'default'}\n              ),\n              fillColor: new ColorOption(\n                { color: fillColor, allowsNone: true, noneText: 'none'}\n              ),\n              fontBold: fontBold,\n              fontItalic: fontItalic,\n              fontUnderline: fontUnderline,\n              fontStrikethrough: fontStrikethrough\n            }, {\n              onSave: () => options.save(),\n              onRevert: () => options.revert(),\n              placeholder: use => use(hasMixedStyle) ? t('Mixed style') : t('Default cell style')\n            }\n          );\n        }),\n      ),\n      dom.create(ConditionalStyle, t(\"Cell Style\"), this._field, this._gristDoc, fromKo(this._field.config.multiselect))\n    ];\n  }\n}\n\nconst cssLine = styled('div', `\n  display: flex;\n  margin: 16px 16px 12px 16px;\n  justify-content: space-between;\n  align-items: baseline;\n`);\n\nconst cssLabel = styled('div', `\n  color: ${theme.text};\n  text-transform: uppercase;\n  font-size: ${vars.xsmallFontSize};\n`);\n\nconst cssButton = styled(textButton, `\n  font-size: ${vars.mediumFontSize};\n`);\n\nconst cssRow = styled('div', `\n  display: flex;\n  margin: 8px 16px;\n  align-items: center;\n  &-top-space {\n    margin-top: 24px;\n  }\n  &-disabled {\n    color: ${theme.disabledText};\n  }\n`);\n","import {createGroup} from 'app/client/components/commands';\nimport {ACIndexImpl, ACItem, ACResults,\n        buildHighlightedDom, HighlightFunc, normalizeText} from 'app/client/lib/ACIndex';\nimport {IAutocompleteOptions} from 'app/client/lib/autocomplete';\nimport {IToken, TokenField, tokenFieldStyles} from 'app/client/lib/TokenField';\nimport {colors, testId, theme} from 'app/client/ui2018/cssVars';\nimport {menuCssClass} from 'app/client/ui2018/menus';\nimport {createMobileButtons, getButtonMargins} from 'app/client/widgets/EditorButtons';\nimport {EditorPlacement} from 'app/client/widgets/EditorPlacement';\nimport {FieldOptions, NewBaseEditor} from 'app/client/widgets/NewBaseEditor';\nimport {csvEncodeRow} from 'app/common/csvFormat';\nimport {CellValue} from \"app/common/DocActions\";\nimport {decodeObject, encodeObject} from 'app/plugin/objtypes';\nimport {ChoiceOptions, getRenderFillColor, getRenderTextColor} from 'app/client/widgets/ChoiceTextBox';\nimport {choiceToken, cssChoiceACItem, cssChoiceToken} from 'app/client/widgets/ChoiceToken';\nimport {icon} from 'app/client/ui2018/icons';\nimport {dom, styled} from 'grainjs';\n\nexport class ChoiceItem implements ACItem, IToken {\n  public cleanText: string = normalizeText(this.label);\n  constructor(\n    public label: string,\n    public isInvalid: boolean,  // If set, this token is not one of the valid choices.\n    public isNew?: boolean,     // If set, this is a choice to be added to the config.\n  ) {}\n}\n\nexport class ChoiceListEditor extends NewBaseEditor {\n  protected cellEditorDiv: HTMLElement;\n  protected commandGroup: any;\n\n  private _tokenField: TokenField<ChoiceItem>;\n  private _textInput: HTMLInputElement;\n  private _dom: HTMLElement;\n  private _editorPlacement!: EditorPlacement;\n  private _contentSizer: HTMLElement;   // Invisible element to size the editor with all the tokens\n  private _inputSizer!: HTMLElement;     // Part of _contentSizer to size the text input\n  private _alignment: string;\n\n  // Whether to include a button to show a new choice.\n  // TODO: Disable when the user cannot change column configuration.\n  private _enableAddNew: boolean = true;\n  private _showAddNew: boolean = false;\n\n  private _choiceOptionsByName: ChoiceOptions;\n\n  constructor(protected options: FieldOptions) {\n    super(options);\n\n    const choices: string[] = options.field.widgetOptionsJson.peek().choices || [];\n    this._choiceOptionsByName = options.field.widgetOptionsJson\n      .peek().choiceOptions || {};\n    const acItems = choices.map(c => new ChoiceItem(c, false));\n    const choiceSet = new Set(choices);\n\n    const acIndex = new ACIndexImpl<ChoiceItem>(acItems);\n    const acOptions: IAutocompleteOptions<ChoiceItem> = {\n      menuCssClass: `${menuCssClass} ${cssChoiceList.className} test-autocomplete`,\n      search: async (term: string) => this._maybeShowAddNew(acIndex.search(term), term),\n      renderItem: (item, highlightFunc) => this._renderACItem(item, highlightFunc),\n      getItemText: (item) => item.label,\n    };\n\n    this.commandGroup = this.autoDispose(createGroup(options.commands, null, true));\n    this._alignment = options.field.widgetOptionsJson.peek().alignment || 'left';\n\n    // If starting to edit by typing in a string, ignore previous tokens.\n    const cellValue = decodeObject(options.cellValue);\n    const startLabels: unknown[] = options.editValue !== undefined || !Array.isArray(cellValue) ? [] : cellValue;\n    const startTokens = startLabels.map(label => new ChoiceItem(String(label), !choiceSet.has(String(label))));\n\n    this._tokenField = TokenField.ctor<ChoiceItem>().create(this, {\n      initialValue: startTokens,\n      renderToken: item => [\n        item.label,\n        dom.style('background-color', getRenderFillColor(this._choiceOptionsByName[item.label])),\n        dom.style('color', getRenderTextColor(this._choiceOptionsByName[item.label])),\n        dom.cls('font-bold', this._choiceOptionsByName[item.label]?.fontBold ?? false),\n        dom.cls('font-underline', this._choiceOptionsByName[item.label]?.fontUnderline ?? false),\n        dom.cls('font-italic', this._choiceOptionsByName[item.label]?.fontItalic ?? false),\n        dom.cls('font-strikethrough', this._choiceOptionsByName[item.label]?.fontStrikethrough ?? false),\n        cssChoiceToken.cls('-invalid', item.isInvalid)\n      ],\n      createToken: label => new ChoiceItem(label, !choiceSet.has(label)),\n      acOptions,\n      openAutocompleteOnFocus: true,\n      readonly : options.readonly,\n      trimLabels: true,\n      styles: {cssTokenField, cssToken, cssDeleteButton, cssDeleteIcon},\n    });\n\n    this._dom = dom('div.default_editor',\n      dom.cls(\"readonly_editor\", options.readonly),\n      dom.cls(cssReadonlyStyle.className, options.readonly),\n      this.cellEditorDiv = cssCellEditor(testId('widget-text-editor'),\n        this._contentSizer = cssContentSizer(),\n        elem => this._tokenField.attach(elem),\n      ),\n      createMobileButtons(options.commands),\n    );\n\n    this._textInput = this._tokenField.getTextInput();\n    dom.update(this._tokenField.getRootElem(),\n      dom.style('justify-content', this._alignment),\n    );\n    dom.update(this._tokenField.getHiddenInput(),\n      this.commandGroup.attach(),\n    );\n    dom.update(this._textInput,\n      // Resize the editor whenever user types into the textbox.\n      dom.on('input', () => this.resizeInput(true)),\n      dom.prop('value', options.editValue || ''),\n      this.commandGroup.attach(),\n    );\n  }\n\n  public attach(cellElem: Element): void {\n    // Attach the editor dom to page DOM.\n    this._editorPlacement = EditorPlacement.create(this, this._dom, cellElem, {margins: getButtonMargins()});\n\n    // Reposition the editor if needed for external reasons (in practice, window resize).\n    this.autoDispose(this._editorPlacement.onReposition.addListener(() => this.resizeInput()));\n\n    // Update the sizing whenever the tokens change. Delay it till next tick to give a chance for\n    // DOM updates that happen around tokenObs changes, to complete.\n    this.autoDispose(this._tokenField.tokensObs.addListener(() =>\n      Promise.resolve().then(() => this.resizeInput())));\n\n    this.setSizerLimits();\n\n    // Once the editor is attached to DOM, resize it to content, focus, and set cursor.\n    this.resizeInput();\n    this._textInput.focus();\n    const pos = Math.min(this.options.cursorPos, this._textInput.value.length);\n    this._textInput.setSelectionRange(pos, pos);\n  }\n\n  public getDom(): HTMLElement {\n    return this._dom;\n  }\n\n  public getCellValue(): CellValue {\n    return encodeObject(this._tokenField.tokensObs.get().map(item => item.label));\n  }\n\n  public getTextValue() {\n    const values = this._tokenField.tokensObs.get().map(t => t.label);\n    return csvEncodeRow(values, {prettier: true});\n  }\n\n  public getCursorPos(): number {\n    return this._textInput.selectionStart || 0;\n  }\n\n  /**\n   * Updates list of valid choices with any new ones that may have been\n   * added from directly inside the editor (via the \"add new\" item in autocomplete).\n   */\n  public async prepForSave() {\n    const tokens = this._tokenField.tokensObs.get();\n    const newChoices = tokens.filter(t => t.isNew).map(t => t.label);\n    if (newChoices.length > 0) {\n      const choices = this.options.field.widgetOptionsJson.prop('choices');\n      await choices.saveOnly([...(choices.peek() || []), ...new Set(newChoices)]);\n    }\n  }\n\n  public setSizerLimits() {\n    // Set the max width of the sizer to the max we could possibly grow to, so that it knows to wrap\n    // once we reach it.\n    const rootElem = this._tokenField.getRootElem();\n    const maxSize = this._editorPlacement.calcSizeWithPadding(rootElem,\n      {width: Infinity, height: Infinity}, {calcOnly: true});\n    this._contentSizer.style.maxWidth = Math.ceil(maxSize.width) + 'px';\n  }\n\n  /**\n   * Helper which resizes the token-field to match its content.\n   */\n  protected resizeInput(onlyTextInput: boolean = false) {\n    if (this.isDisposed()) { return; }\n\n    const rootElem = this._tokenField.getRootElem();\n\n    // To size the content, we need both the tokens and the text typed into _textInput. We\n    // re-create the tokens using cloneNode(true) copies all styles and properties, but not event\n    // handlers. We can skip this step when we know that only _textInput changed.\n    if (!onlyTextInput || !this._inputSizer) {\n      this._contentSizer.innerHTML = '';\n\n      dom.update(this._contentSizer,\n        dom.update(rootElem.cloneNode(true) as HTMLElement,\n          dom.style('width', ''),\n          dom.style('height', ''),\n          this._inputSizer = cssInputSizer(),\n\n          // Remove the testId('tokenfield') from the cloned element, to simplify tests (so that\n          // selecting .test-tokenfield only returns the actual visible tokenfield container).\n          dom.cls('test-tokenfield', false),\n        )\n      );\n    }\n\n    // Use a separate sizer to size _textInput to the text inside it.\n    // \\u200B is a zero-width space; so the sizer will have height even when empty.\n    this._inputSizer.textContent = this._textInput.value + '\\u200B';\n    const rect = this._contentSizer.getBoundingClientRect();\n\n    const size = this._editorPlacement.calcSizeWithPadding(rootElem, rect);\n    rootElem.style.width = size.width + 'px';\n    rootElem.style.height = size.height + 'px';\n    this._textInput.style.width = this._inputSizer.getBoundingClientRect().width + 'px';\n  }\n\n  /**\n   * If the search text does not match anything exactly, adds 'new' item to it.\n   *\n   * Also see: prepForSave.\n   */\n  private _maybeShowAddNew(result: ACResults<ChoiceItem>, text: string): ACResults<ChoiceItem> {\n    this._showAddNew = false;\n    const trimmedText = text.trim();\n    if (!this._enableAddNew || !trimmedText) { return result; }\n\n    const addNewItem = new ChoiceItem(trimmedText, false, true);\n    if (result.items.find((item) => item.cleanText === addNewItem.cleanText)) {\n      return result;\n    }\n\n    result.items.push(addNewItem);\n    this._showAddNew = true;\n\n    return result;\n  }\n\n  private _renderACItem(item: ChoiceItem, highlightFunc: HighlightFunc) {\n    const options = this._choiceOptionsByName[item.label];\n\n    return cssChoiceACItem(\n      (item.isNew ?\n        [cssChoiceACItem.cls('-new'), cssPlusButton(cssPlusIcon('Plus'))] :\n        [cssChoiceACItem.cls('-with-new', this._showAddNew)]\n      ),\n      choiceToken(\n        buildHighlightedDom(item.label, highlightFunc, cssMatchText),\n        options || {},\n        dom.style('max-width', '100%'),\n        testId('choice-list-editor-item-label')\n      ),\n      testId('choice-list-editor-item'),\n      item.isNew ? testId('choice-list-editor-new-item') : null,\n    );\n  }\n}\n\nconst cssCellEditor = styled('div', `\n  background-color: ${theme.cellEditorBg};\n  font-family: var(--grist-font-family-data);\n  font-size: var(--grist-medium-font-size);\n`);\n\nconst cssTokenField = styled(tokenFieldStyles.cssTokenField, `\n  border: none;\n  align-items: start;\n  align-content: start;\n  padding: 0 3px;\n  height: min-content;\n  min-height: 22px;\n  color: black;\n  flex-wrap: wrap;\n`);\n\nexport const cssToken = styled(tokenFieldStyles.cssToken, `\n  padding: 1px 4px;\n  margin: 2px;\n  line-height: 16px;\n  white-space: pre;\n\n  &.selected {\n    box-shadow: inset 0 0 0 1px ${colors.lightGreen};\n  }\n`);\n\nexport const cssDeleteButton = styled(tokenFieldStyles.cssDeleteButton, `\n  position: absolute;\n  top: -8px;\n  right: -6px;\n  border-radius: 16px;\n  background-color: ${colors.dark};\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  z-index: 1;\n  display: none;\n  align-items: center;\n  justify-content: center;\n\n  .${cssToken.className}:hover & {\n    display: flex;\n  }\n  .${cssTokenField.className}.token-dragactive & {\n    cursor: unset;\n  }\n`);\n\nexport const cssDeleteIcon = styled(tokenFieldStyles.cssDeleteIcon, `\n  --icon-color: ${colors.light};\n  &:hover {\n    --icon-color: ${colors.darkGrey};\n  }\n`);\n\nconst cssContentSizer = styled('div', `\n  position: absolute;\n  left: 0;\n  top: -100px;\n  border: none;\n  visibility: hidden;\n  overflow: visible;\n  width: max-content;\n\n  & .${tokenFieldStyles.cssInputWrapper.className} {\n    display: none;\n  }\n`);\n\nconst cssInputSizer = styled('div', `\n  flex: auto;\n  min-width: 24px;\n  margin: 3px 2px;\n`);\n\n// Set z-index to be higher than the 1000 set for .cell_editor.\nexport const cssChoiceList = styled('div', `\n  z-index: 1001;\n  box-shadow: 0 0px 8px 0 ${theme.menuShadow};\n  overflow-y: auto;\n  padding: 8px 0 0 0;\n  --weaseljs-menu-item-padding: 8px 16px;\n`);\n\nconst cssReadonlyStyle = styled('div', `\n  padding-left: 16px;\n  background: white;\n`);\n\nexport const cssMatchText = styled('span', `\n  text-decoration: underline;\n`);\n\nexport const cssPlusButton = styled('div', `\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border-radius: 20px;\n  margin-right: 8px;\n  text-align: center;\n  background-color: ${colors.lightGreen};\n  color: ${colors.light};\n\n  .selected > & {\n    background-color: ${colors.darkGreen};\n  }\n`);\n\nexport const cssPlusIcon = styled(icon, `\n  background-color: ${colors.light};\n`);\n","import {IToken, TokenField} from 'app/client/lib/TokenField';\nimport {cssBlockedCursor} from 'app/client/ui/RightPanelStyles';\nimport {basicButton, primaryButton} from 'app/client/ui2018/buttons';\nimport {colorButton, ColorOption} from 'app/client/ui2018/ColorSelect';\nimport {colors, testId, theme} from 'app/client/ui2018/cssVars';\nimport {editableLabel} from 'app/client/ui2018/editableLabel';\nimport {icon} from 'app/client/ui2018/icons';\nimport {ChoiceOptionsByName, IChoiceOptions} from 'app/client/widgets/ChoiceTextBox';\nimport {Computed, Disposable, dom, DomContents, DomElementArg, Holder, MultiHolder, Observable, styled} from 'grainjs';\nimport {createCheckers, iface, ITypeSuite, opt, union} from 'ts-interface-checker';\nimport isEqual = require('lodash/isEqual');\nimport uniqBy = require('lodash/uniqBy');\n\nclass RenameMap implements Record<string, string> {\n  constructor(tokens: ChoiceItem[]) {\n    for(const {label, previousLabel: id} of tokens.filter(x=> x.previousLabel)) {\n      if (label === id) {\n        continue;\n      }\n      this[id!] = label;\n    }\n  }\n  [key: string]: string;\n}\n\n\nclass ChoiceItem implements IToken {\n  public static from(item: ChoiceItem) {\n    return new ChoiceItem(item.label, item.previousLabel, item.options);\n  }\n  constructor(\n    public label: string,\n    // We will keep the previous label value for a token, to tell us which token\n    // was renamed. For new tokens this should be null.\n    public previousLabel: string | null,\n    public options?: IChoiceOptions\n  ) {}\n\n  public rename(label: string) {\n    return new ChoiceItem(label, this.previousLabel, this.options);\n  }\n\n  public changeStyle(options: IChoiceOptions) {\n    return new ChoiceItem(this.label, this.previousLabel, {...this.options, ...options});\n  }\n}\n\nconst ChoiceItemType = iface([], {\n  label: \"string\",\n  previousLabel: union(\"string\", \"null\"),\n  options: opt(\"ChoiceOptionsType\"),\n});\n\nconst ChoiceOptionsType = iface([], {\n  textColor: opt(\"string\"),\n  fillColor: opt(\"string\"),\n  fontBold: opt(\"boolean\"),\n  fontUnderline: opt(\"boolean\"),\n  fontItalic: opt(\"boolean\"),\n  fontStrikethrough: opt(\"boolean\"),\n});\n\nconst choiceTypes: ITypeSuite = {\n  ChoiceItemType,\n  ChoiceOptionsType,\n};\n\nconst {ChoiceItemType: ChoiceItemChecker} = createCheckers(choiceTypes);\n\n/**\n * ChoiceListEntry - Editor for choices and choice colors.\n *\n * The ChoiceListEntry can be in one of two modes: edit or view (default).\n *\n * When in edit mode, it displays a custom, vertical TokenField that allows for entry\n * of new choice values. Once changes are saved, the new values become valid choices,\n * and can be used in Choice and Choice List columns. Each choice in the TokenField\n * also includes a color picker button to customize the fill/text color of the choice.\n * The same capabilities of TokenField, such as undo/redo and rich copy/paste support,\n * are present in ChoiceListEntry as well.\n *\n * When in view mode, it looks similar to edit mode, but hides the bottom input and the\n * color picker dropdown buttons. Past 6 choices, it stops rendering individual choices\n * and only shows the total number of additional choices that are hidden, and can be\n * seen when edit mode is activated.\n *\n * Usage:\n * > dom.create(ChoiceListEntry, values, options, (vals, options) => {});\n */\nexport class ChoiceListEntry extends Disposable {\n  private _isEditing: Observable<boolean> = Observable.create(this, false);\n  private _tokenFieldHolder: Holder<TokenField<ChoiceItem>> = Holder.create(this);\n\n  private _editorContainer: HTMLElement | null = null;\n  private _editorSaveButtons: HTMLElement | null = null;\n\n  constructor(\n    private _values: Observable<string[]>,\n    private _choiceOptionsByName: Observable<ChoiceOptionsByName>,\n    private _onSave: (values: string[], choiceOptions: ChoiceOptionsByName, renames: Record<string, string>) => void,\n    private _disabled: Observable<boolean>,\n    private _mixed: Observable<boolean>,\n  ) {\n    super();\n\n    // Since the saved values can be modified outside the ChoiceListEntry (via undo/redo),\n    // add a listener to update edit status on changes.\n    this.autoDispose(this._values.addListener(() => {\n      this._cancel();\n    }));\n\n    this.onDispose(() => {\n      if (!this._isEditing.get()) { return; }\n\n      this._save();\n    });\n  }\n\n  // Arg maxRows indicates the number of rows to display when the editor is inactive.\n  public buildDom(maxRows: number = 6): DomContents {\n    return dom.domComputed(this._isEditing, (editMode) => {\n      if (editMode) {\n        // If we have mixed values, we can't show any options on the editor.\n        const initialValue = this._mixed.get() ? [] : this._values.get().map(label => {\n          return new ChoiceItem(label, label, this._choiceOptionsByName.get().get(label));\n        });\n        const tokenField = TokenField.ctor<ChoiceItem>().create(this._tokenFieldHolder, {\n          initialValue,\n          renderToken: token => this._renderToken(token),\n          createToken: label => new ChoiceItem(label, null),\n          clipboardToTokens: clipboardToChoices,\n          tokensToClipboard: (tokens, clipboard) => {\n            // Save tokens as JSON for parts of the UI that support deserializing it properly (e.g. ChoiceListEntry).\n            clipboard.setData('application/json', JSON.stringify(tokens));\n            // Save token labels as newline-separated text, for general use (e.g. pasting into cells).\n            clipboard.setData('text/plain', tokens.map(t => t.label).join('\\n'));\n          },\n          openAutocompleteOnFocus: false,\n          trimLabels: true,\n          styles: {cssTokenField, cssToken, cssTokenInput, cssInputWrapper, cssDeleteButton, cssDeleteIcon},\n          keyBindings: {\n            previous: 'ArrowUp',\n            next: 'ArrowDown'\n          },\n          variant: 'vertical',\n        });\n\n        return cssVerticalFlex(\n          this._editorContainer = cssListBox(\n            {tabIndex: '-1'},\n            elem => {\n              tokenField.attach(elem);\n              this._focusOnOpen(tokenField.getTextInput());\n            },\n            dom.on('focusout', (ev) => {\n              const hasActiveElement = (\n                element: Element | null,\n                activeElement = document.activeElement\n              ) => {\n                return element?.contains(activeElement);\n              };\n\n              // Save and close the editor when it loses focus.\n              setTimeout(() => {\n                // The editor may have already been closed via keyboard shortcut.\n                if (!this._isEditing.get()) { return; }\n\n                if (\n                  // Don't close if focus hasn't left the editor.\n                  hasActiveElement(this._editorContainer) ||\n                  // Or if the token color picker has focus.\n                  hasActiveElement(document.querySelector('.token-color-picker')) ||\n                  // Or if Save or Cancel was clicked.\n                  hasActiveElement(this._editorSaveButtons, ev.relatedTarget as Element | null)\n                ) {\n                  return;\n                }\n\n                this._save();\n              }, 0);\n            }),\n            testId('choice-list-entry')\n          ),\n          this._editorSaveButtons = cssButtonRow(\n            primaryButton('Save',\n              dom.on('click', () => this._save() ),\n              testId('choice-list-entry-save')\n            ),\n            basicButton('Cancel',\n              dom.on('click', () => this._cancel()),\n              testId('choice-list-entry-cancel')\n            )\n          ),\n          dom.onKeyDown({Escape: () => this._cancel()}),\n          dom.onKeyDown({Enter: () => this._save()}),\n        );\n      } else {\n        const holder = new MultiHolder();\n        const someValues = Computed.create(holder, this._values, (_use, values) =>\n          values.length <= maxRows ? values : values.slice(0, maxRows - 1));\n        const noChoices = Computed.create(holder, someValues, (_use, values) => values.length === 0);\n\n\n        return cssVerticalFlex(\n          dom.autoDispose(holder),\n          dom.maybe(this._mixed, () => [\n            cssListBoxInactive(\n              dom.cls(cssBlockedCursor.className, this._disabled),\n              row('Mixed configuration')\n            )\n          ]),\n          dom.maybe(use => !use(this._mixed), () => [\n            cssListBoxInactive(\n              dom.cls(cssBlockedCursor.className, this._disabled),\n              dom.maybe(noChoices, () => row('No choices configured')),\n              dom.domComputed(this._choiceOptionsByName, (choiceOptions) =>\n                dom.forEach(someValues, val => {\n                  return row(\n                    cssTokenColorInactive(\n                      dom.style('background-color', getFillColor(choiceOptions.get(val)) || '#FFFFFF'),\n                      dom.style('color', getTextColor(choiceOptions.get(val)) || '#000000'),\n                      dom.cls('font-bold', choiceOptions.get(val)?.fontBold ?? false),\n                      dom.cls('font-underline', choiceOptions.get(val)?.fontUnderline ?? false),\n                      dom.cls('font-italic', choiceOptions.get(val)?.fontItalic ?? false),\n                      dom.cls('font-strikethrough', choiceOptions.get(val)?.fontStrikethrough ?? false),\n                      'T',\n                      testId('choice-list-entry-color')\n                    ),\n                    cssTokenLabel(\n                      val,\n                      testId('choice-list-entry-label')\n                    )\n                  );\n                }),\n              ),\n              // Show description row for any remaining rows\n              dom.maybe(use => use(this._values).length > maxRows, () =>\n                row(\n                  dom('span',\n                    testId('choice-list-entry-label'),\n                    dom.text((use) => `+${use(this._values).length - (maxRows - 1)} more`)\n                  )\n                )\n              ),\n              dom.on('click', () => this._startEditing()),\n              cssListBoxInactive.cls(\"-disabled\", this._disabled),\n              testId('choice-list-entry')\n            ),\n          ]),\n          dom.maybe(use => !use(this._disabled), () => [\n            cssButtonRow(\n              primaryButton(\n                dom.text(use => use(this._mixed) ? 'Reset' : 'Edit'),\n                dom.on('click', () => this._startEditing()),\n                testId('choice-list-entry-edit')\n              ),\n            ),\n          ]),\n        );\n      }\n    });\n  }\n\n  private _startEditing(): void {\n    if (!this._disabled.get()) {\n      this._isEditing.set(true);\n    }\n  }\n\n  private _save(): void {\n    const tokenField = this._tokenFieldHolder.get();\n    if (!tokenField) { return; }\n\n    const tokens = tokenField.tokensObs.get();\n    const tokenInputVal = tokenField.getTextInputValue();\n    if (tokenInputVal !== '') {\n      tokens.push(new ChoiceItem(tokenInputVal, null));\n    }\n\n    const newTokens = uniqBy(tokens, t => t.label);\n    const newValues = newTokens.map(t => t.label);\n    const newOptions: ChoiceOptionsByName = new Map();\n    const keys: Array<keyof IChoiceOptions> = [\n      'fillColor', 'textColor', 'fontBold', 'fontItalic', 'fontStrikethrough', 'fontUnderline'\n    ];\n    for (const t of newTokens) {\n      if (t.options) {\n        const options: IChoiceOptions = {};\n        keys.filter(k => t.options![k] !== undefined)\n            .forEach(k => options[k] = t.options![k] as any);\n        newOptions.set(t.label, options);\n      }\n    }\n\n    // Call user save function if the values and/or options have changed.\n    if (!isEqual(this._values.get(), newValues)\n      || !isEqual(this._choiceOptionsByName.get(), newOptions)) {\n      // Because of the listener on this._values, editing will stop if values are updated.\n      this._onSave(newValues, newOptions, new RenameMap(newTokens));\n    } else {\n      this._cancel();\n    }\n  }\n\n  private _cancel(): void {\n    this._isEditing.set(false);\n  }\n\n  private _focusOnOpen(elem: HTMLInputElement): void {\n    setTimeout(() => focus(elem), 0);\n  }\n\n  private _renderToken(token: ChoiceItem) {\n    const fillColorObs = Observable.create(null, getFillColor(token.options));\n    const textColorObs = Observable.create(null, getTextColor(token.options));\n    const fontBoldObs = Observable.create(null, token.options?.fontBold);\n    const fontItalicObs = Observable.create(null, token.options?.fontItalic);\n    const fontUnderlineObs = Observable.create(null, token.options?.fontUnderline);\n    const fontStrikethroughObs = Observable.create(null, token.options?.fontStrikethrough);\n    const choiceText = Observable.create(null, token.label);\n\n    const rename = async (to: string) => {\n      const tokenField = this._tokenFieldHolder.get();\n      if (!tokenField) { return; }\n\n      to = to.trim();\n      // If user removed the label, revert back to original one.\n      if (!to) {\n        choiceText.set(token.label);\n      } else {\n        tokenField.replaceToken(token.label, ChoiceItem.from(token).rename(to));\n        // We don't need to update choiceText, since it will be replaced (rerendered).\n      }\n    };\n\n    function stopPropagation(ev: Event) {\n      ev.stopPropagation();\n    }\n\n    const focusOnNew = () => {\n      const tokenField = this._tokenFieldHolder.get();\n      if (!tokenField) { return; }\n      focus(tokenField.getTextInput());\n    };\n\n    const tokenColorAndLabel: HTMLDivElement = cssColorAndLabel(\n      dom.autoDispose(fillColorObs),\n      dom.autoDispose(textColorObs),\n      dom.autoDispose(choiceText),\n      colorButton(\n        {\n          styleOptions: {\n            textColor: new ColorOption({color: textColorObs, defaultColor: '#000000'}),\n            fillColor: new ColorOption(\n              {color: fillColorObs, allowsNone: true, noneText: 'none', defaultColor: '#FFFFFF'}),\n            fontBold: fontBoldObs,\n            fontItalic: fontItalicObs,\n            fontUnderline: fontUnderlineObs,\n            fontStrikethrough: fontStrikethroughObs\n          },\n          onSave: async () => {\n            const tokenField = this._tokenFieldHolder.get();\n            if (!tokenField) { return; }\n\n            const fillColor = fillColorObs.get();\n            const textColor = textColorObs.get();\n            const fontBold = fontBoldObs.get();\n            const fontItalic = fontItalicObs.get();\n            const fontUnderline = fontUnderlineObs.get();\n            const fontStrikethrough = fontStrikethroughObs.get();\n            tokenField.replaceToken(token.label, ChoiceItem.from(token).changeStyle({\n              fillColor,\n              textColor,\n              fontBold,\n              fontItalic,\n              fontUnderline,\n              fontStrikethrough,\n            }));\n          },\n          onClose: () => this._editorContainer?.focus(),\n          colorPickerDomArgs: [\n            dom.cls('token-color-picker'),\n          ],\n        },\n      ),\n      editableLabel(choiceText, {\n        save: rename,\n        inputArgs: [\n          testId('token-label'),\n          // Don't bubble up keyboard events, use them for editing the text.\n          // Without this keys like Backspace, or Mod+a will propagate and modify all tokens.\n          dom.on('keydown', stopPropagation),\n          dom.on('copy', stopPropagation),\n          dom.on('cut', stopPropagation),\n          dom.on('paste', stopPropagation),\n          dom.onKeyDown({\n            // On enter, focus on the input element.\n            Enter : focusOnNew,\n            // On escape, focus on the token (i.e. the parent node of this element). That way\n            // the browser will scroll the view if needed, and a subsequent escape will close\n            // the editor.\n            Escape: () => tokenColorAndLabel.parentElement?.focus(),\n          }),\n          // Don't bubble up click, as it would change focus.\n          dom.on('click', stopPropagation),\n          dom.cls(cssEditableLabelInput.className),\n        ],\n        args: [dom.cls(cssEditableLabel.className)],\n      }),\n    );\n\n    return [\n      tokenColorAndLabel,\n      dom.onKeyDown({Escape$: () => this._cancel()}),\n    ];\n  }\n}\n\n\n// Helper to focus on the token input and select/scroll to the bottom\nfunction focus(elem: HTMLInputElement) {\n  elem.focus();\n  elem.setSelectionRange(elem.value.length, elem.value.length);\n  elem.scrollTo(0, elem.scrollHeight);\n}\n\n// Build a display row with the given DOM arguments\nfunction row(...domArgs: DomElementArg[]): Element {\n  return cssListRow(\n    ...domArgs,\n    testId('choice-list-entry-row')\n  );\n}\n\nfunction getTextColor(choiceOptions?: IChoiceOptions) {\n  return choiceOptions?.textColor;\n}\n\nfunction getFillColor(choiceOptions?: IChoiceOptions) {\n  return choiceOptions?.fillColor;\n}\n\n/**\n * Converts clipboard contents (if any) to choices.\n *\n * Attempts to convert from JSON first, if clipboard contains valid JSON.\n * If conversion is not possible, falls back to converting from newline-separated plaintext.\n */\nfunction clipboardToChoices(clipboard: DataTransfer): ChoiceItem[] {\n  const maybeTokens = clipboard.getData('application/json');\n  if (maybeTokens && isJSON(maybeTokens)) {\n    const tokens: ChoiceItem[] = JSON.parse(maybeTokens);\n    if (Array.isArray(tokens) && tokens.every((t): t is ChoiceItem => ChoiceItemChecker.test(t))) {\n      tokens.forEach(t => t.previousLabel = null);\n      return tokens;\n    }\n  }\n\n  const maybeText = clipboard.getData('text/plain');\n  if (maybeText) {\n    return maybeText.split('\\n').map(label => new ChoiceItem(label, null));\n  }\n\n  return [];\n}\n\nfunction isJSON(string: string) {\n  try {\n    JSON.parse(string);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nconst cssListBox = styled('div', `\n  width: 100%;\n  padding: 1px;\n  line-height: 1.5;\n  padding-left: 4px;\n  padding-right: 4px;\n  border: 1px solid ${theme.choiceEntryBorderHover};\n  border-radius: 4px;\n  background-color: ${theme.choiceEntryBg};\n`);\n\nconst cssListBoxInactive = styled(cssListBox, `\n  cursor: pointer;\n  border: 1px solid ${theme.choiceEntryBorder};\n\n  &:hover:not(&-disabled) {\n    border: 1px solid ${theme.choiceEntryBorderHover};\n  }\n  &-disabled {\n    opacity: 0.6;\n  }\n`);\n\nconst cssListRow = styled('div', `\n  display: flex;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  padding: 4px 8px;\n  color: ${colors.dark};\n  background-color: ${colors.mediumGreyOpaque};\n  border-radius: 3px;\n  text-overflow: ellipsis;\n`);\n\nconst cssTokenField = styled('div', `\n  &.token-dragactive {\n    cursor: grabbing;\n  }\n`);\n\nconst cssToken = styled(cssListRow, `\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  user-select: none;\n  cursor: grab;\n\n  &.selected {\n    background-color: ${colors.darkGrey};\n  }\n  &.token-dragging {\n    pointer-events: none;\n    z-index: 1;\n    opacity: 0.7;\n  }\n  .${cssTokenField.className}.token-dragactive & {\n    cursor: unset;\n  }\n  &:focus {\n    outline: none;\n  }\n`);\n\nconst cssTokenColorInactive = styled('div', `\n  flex-shrink: 0;\n  width: 18px;\n  height: 18px;\n  display: grid;\n  place-items: center;\n`);\n\nconst cssTokenLabel = styled('span', `\n  margin-left: 6px;\n  display: inline-block;\n  text-overflow: ellipsis;\n  white-space: pre;\n  overflow: hidden;\n`);\n\nconst cssEditableLabelInput = styled('input', `\n  display: inline-block;\n  text-overflow: ellipsis;\n  white-space: pre;\n  overflow: hidden;\n`);\n\nconst cssEditableLabel = styled('div', `\n  margin-left: 6px;\n  text-overflow: ellipsis;\n  white-space: pre;\n  overflow: hidden;\n`);\n\nconst cssTokenInput = styled('input', `\n  background-color: ${theme.choiceEntryBg};\n  padding-top: 4px;\n  padding-bottom: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: auto;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  border: none;\n  outline: none;\n`);\n\nconst cssInputWrapper = styled('div', `\n  margin-top: 4px;\n  margin-bottom: 4px;\n  position: relative;\n  flex: auto;\n  display: flex;\n`);\n\nconst cssFlex = styled('div', `\n  display: flex;\n`);\n\nconst cssColorAndLabel = styled(cssFlex, `\n  max-width: calc(100% - 20px);\n`);\n\nconst cssVerticalFlex = styled('div', `\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`);\n\nconst cssButtonRow = styled('div', `\n  gap: 8px;\n  display: flex;\n  margin-top: 8px;\n  margin-bottom: 16px;\n`);\n\nconst cssDeleteButton = styled('div', `\n  display: inline;\n  float: right;\n  margin-left: 4px;\n  cursor: pointer;\n  .${cssTokenField.className}.token-dragactive & {\n    cursor: unset;\n  }\n`);\n\n const cssDeleteIcon = styled(icon, `\n   --icon-color: ${colors.slate};\n   &:hover {\n     --icon-color: ${colors.dark};\n   }\n `);\n","import {makeT} from 'app/client/lib/localization';\nimport {DataRowModel} from 'app/client/models/DataRowModel';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {KoSaveableObservable} from 'app/client/models/modelUtil';\nimport {Style} from 'app/client/models/Styles';\nimport {cssLabel, cssRow} from 'app/client/ui/RightPanelStyles';\nimport {colors, testId} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {ChoiceListEntry} from 'app/client/widgets/ChoiceListEntry';\nimport {choiceToken, DEFAULT_FILL_COLOR, DEFAULT_TEXT_COLOR} from 'app/client/widgets/ChoiceToken';\nimport {NTextBox} from 'app/client/widgets/NTextBox';\nimport {Computed, dom, styled} from 'grainjs';\n\nexport type IChoiceOptions = Style\nexport type ChoiceOptions = Record<string, IChoiceOptions | undefined>;\nexport type ChoiceOptionsByName = Map<string, IChoiceOptions | undefined>;\n\nconst t = makeT('ChoiceTextBox');\n\nexport function getRenderFillColor(choiceOptions?: IChoiceOptions) {\n  return choiceOptions?.fillColor ?? DEFAULT_FILL_COLOR;\n}\n\nexport function getRenderTextColor(choiceOptions?: IChoiceOptions) {\n  return choiceOptions?.textColor ?? DEFAULT_TEXT_COLOR;\n}\n\n/**\n * ChoiceTextBox - A textbox for choice values.\n */\nexport class ChoiceTextBox extends NTextBox {\n  private _choices: KoSaveableObservable<string[]>;\n  private _choiceValues: Computed<string[]>;\n  private _choiceValuesSet: Computed<Set<string>>;\n  private _choiceOptions: KoSaveableObservable<ChoiceOptions | null | undefined>;\n  private _choiceOptionsByName: Computed<ChoiceOptionsByName>;\n\n  constructor(field: ViewFieldRec) {\n    super(field);\n    this._choices = this.options.prop('choices');\n    this._choiceOptions = this.options.prop('choiceOptions');\n    this._choiceValues = Computed.create(this, (use) => use(this._choices) || []);\n    this._choiceValuesSet = Computed.create(this, this._choiceValues, (_use, values) => new Set(values));\n    this._choiceOptionsByName = Computed.create(this, (use) => toMap(use(this._choiceOptions)));\n  }\n\n  public buildDom(row: DataRowModel) {\n    const value = row.cells[this.field.colId()];\n    const isSingle = this.field.viewSection().parentKey() === \"single\";\n    const maybeDropDownCssChoiceEditIcon = isSingle ? cssChoiceEditIcon('Dropdown') : null;\n\n    return cssChoiceField(\n      cssChoiceTextWrapper(\n        dom.style('justify-content', (use) => use(this.alignment) === 'right' ? 'flex-end' : use(this.alignment)),\n        maybeDropDownCssChoiceEditIcon,\n        dom.domComputed((use) => {\n          if (this.isDisposed() || use(row._isAddRow)) { return null; }\n\n          const formattedValue = use(this.valueFormatter).formatAny(use(value));\n          if (formattedValue === '') { return null; }\n\n          return choiceToken(\n            formattedValue,\n            {\n              ...(use(this._choiceOptionsByName).get(formattedValue) || {}),\n              invalid: !use(this._choiceValuesSet).has(formattedValue),\n            },\n            dom.cls(cssChoiceText.className),\n            testId('choice-token')\n          );\n        }),\n      ),\n    );\n  }\n\n  public buildConfigDom() {\n    const disabled = Computed.create(null,\n      use => use(this.field.disableModify)\n        || use(use(this.field.column).disableEditData)\n        || use(this.field.config.options.disabled('choices'))\n      );\n\n    const mixed = Computed.create(null,\n      use => !use(disabled)\n        && (use(this.field.config.options.mixed('choices')) || use(this.field.config.options.mixed('choiceOptions')))\n      );\n    return [\n      super.buildConfigDom(),\n      cssLabel(t('CHOICES')),\n      cssRow(\n        dom.autoDispose(disabled),\n        dom.autoDispose(mixed),\n        dom.create(\n          ChoiceListEntry,\n          this._choiceValues,\n          this._choiceOptionsByName,\n          this.save.bind(this),\n          disabled,\n          mixed\n        )\n      )\n    ];\n  }\n\n  public buildTransformConfigDom() {\n    return this.buildConfigDom();\n  }\n\n  protected getChoiceValuesSet(): Computed<Set<string>> {\n    return this._choiceValuesSet;\n  }\n\n  protected getChoiceOptions(): Computed<ChoiceOptionsByName> {\n    return this._choiceOptionsByName;\n  }\n\n  protected save(choices: string[], choiceOptions: ChoiceOptionsByName, renames: Record<string, string>) {\n    const options = {\n      choices,\n      choiceOptions: toObject(choiceOptions)\n    };\n    return this.field.config.updateChoices(renames, options);\n  }\n}\n\n// Converts a POJO containing choice options to an ES6 Map\nfunction toMap(choiceOptions?: ChoiceOptions | null): ChoiceOptionsByName {\n  if (!choiceOptions) { return new Map(); }\n\n  return new Map(Object.entries(choiceOptions));\n}\n\n// Converts an ES6 Map containing choice options to a POJO\nfunction toObject(choiceOptions: ChoiceOptionsByName): ChoiceOptions {\n  const object: ChoiceOptions = {};\n  for (const [choice, options] of choiceOptions.entries()) {\n    object[choice] = options;\n  }\n  return object;\n}\n\nconst cssChoiceField = styled('div.field_clip', `\n  padding: 0 3px;\n`);\n\nconst cssChoiceTextWrapper = styled('div', `\n  display: flex;\n  width: 100%;\n  min-width: 0px;\n  overflow: hidden;\n`);\n\nconst cssChoiceText = styled('div', `\n  margin: 2px;\n  height: min-content;\n  line-height: 16px;\n`);\n\nconst cssChoiceEditIcon = styled(icon, `\n  background-color: ${colors.slate};\n  display: block;\n  height: inherit;\n`);\n","import {Style} from 'app/client/models/Styles';\nimport {colors, theme, vars} from 'app/client/ui2018/cssVars';\nimport {dom, DomContents, DomElementArg, styled} from 'grainjs';\n\nexport const DEFAULT_FILL_COLOR = colors.mediumGreyOpaque.value!;\nexport const DEFAULT_TEXT_COLOR = '#000000';\n\nexport interface IChoiceTokenOptions extends Style {\n  invalid?: boolean;\n}\n\n/**\n * Creates a colored token representing a choice (e.g. Choice and Choice List values).\n *\n * Tokens are pill-shaped boxes that contain text, with custom fill and text\n * colors. If colors are not specified, a gray fill with black text will be used.\n *\n * Additional styles and other DOM arguments can be passed in to customize the\n * appearance and behavior of the token.\n *\n * @param {DomElementArg} label The text that will appear inside the token.\n * @param {IChoiceTokenOptions} options Options for customizing the token appearance.\n * @param {DOMElementArg[]} args Additional arguments to pass to the token.\n * @returns {DomContents} A colored choice token.\n */\nexport function choiceToken(\n  label: DomElementArg,\n  options: IChoiceTokenOptions,\n  ...args: DomElementArg[]\n): DomContents {\n  const {fillColor, textColor, fontBold, fontItalic, fontUnderline,\n         fontStrikethrough, invalid} = options;\n  return cssChoiceToken(\n    label,\n    dom.style('background-color', fillColor ?? DEFAULT_FILL_COLOR),\n    dom.style('color', textColor ?? DEFAULT_TEXT_COLOR),\n    dom.cls('font-bold', fontBold ?? false),\n    dom.cls('font-underline', fontUnderline ?? false),\n    dom.cls('font-italic', fontItalic ?? false),\n    dom.cls('font-strikethrough', fontStrikethrough ?? false),\n    invalid ? cssChoiceToken.cls('-invalid') : null,\n    ...args\n  );\n}\n\nexport const cssChoiceToken = styled('div', `\n  display: inline-block;\n  padding: 1px 4px;\n  border-radius: 3px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: pre;\n\n  &-invalid {\n    background-color: white !important;\n    box-shadow: inset 0 0 0 1px ${colors.error};\n  }\n`);\n\nconst ADD_NEW_HEIGHT = '37px';\n\nexport const cssChoiceACItem = styled('li', `\n  display: block;\n  font-family: ${vars.fontFamily};\n  white-space: pre;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  outline: none;\n  padding: var(--weaseljs-menu-item-padding, 8px 24px);\n  cursor: pointer;\n\n  &.selected {\n    background-color: ${theme.autocompleteChoiceSelectedBg};\n  }\n  &-with-new {\n    scroll-margin-bottom: ${ADD_NEW_HEIGHT};\n  }\n  &-new {\n    display: flex;\n    align-items: center;\n    position: sticky;\n    bottom: 0px;\n    height: ${ADD_NEW_HEIGHT};\n    background-color: ${theme.menuBg};\n    border-top: 1px solid ${theme.menuBorder};\n    scroll-margin-bottom: initial;\n  }\n`);\n","import {makeT} from 'app/client/lib/localization';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {ColumnRec} from 'app/client/models/DocModel';\nimport {KoSaveableObservable} from 'app/client/models/modelUtil';\nimport {RuleOwner} from 'app/client/models/RuleOwner';\nimport {Style} from 'app/client/models/Styles';\nimport {cssFieldFormula} from 'app/client/ui/FieldConfig';\nimport {GristTooltips} from 'app/client/ui/GristTooltips';\nimport {withInfoTooltip} from 'app/client/ui/tooltips';\nimport {textButton} from 'app/client/ui2018/buttons';\nimport {ColorOption, colorSelect} from 'app/client/ui2018/ColorSelect';\nimport {theme, vars} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {setupEditorCleanup} from 'app/client/widgets/FieldEditor';\nimport {cssError, openFormulaEditor} from 'app/client/widgets/FormulaEditor';\nimport {isRaisedException, isValidRuleValue} from 'app/common/gristTypes';\nimport {RowRecord} from 'app/plugin/GristData';\nimport {Computed, Disposable, dom, DomContents, makeTestId, Observable, styled} from 'grainjs';\nimport debounce = require('lodash/debounce');\n\nconst testId = makeTestId('test-widget-style-');\nconst t = makeT('ConditionalStyle');\n\nexport class ConditionalStyle extends Disposable {\n  // Holds data from currently selected record (holds data only when this field has conditional styles).\n  private _currentRecord: Computed<RowRecord | undefined>;\n  // Helper field for refreshing current record data.\n  private _dataChangeTrigger = Observable.create(this, 0);\n\n  constructor(\n    private _label: string,\n    private _ruleOwner: RuleOwner,\n    private _gristDoc: GristDoc,\n    private _disabled?: Observable<boolean>\n  ) {\n    super();\n    this._currentRecord = Computed.create(this, use => {\n      if (!use(this._ruleOwner.hasRules)) {\n        return;\n      }\n      // As we are not subscribing to data change, we will monitor actions\n      // that are sent from the server to refresh this computed observable.\n      void use(this._dataChangeTrigger);\n      const tableId = use(_ruleOwner.tableId);\n      const tableData = _gristDoc.docData.getTable(tableId)!;\n      const cursor = use(_gristDoc.cursorPosition);\n      // Make sure we are not on the new row.\n      if (!cursor || typeof cursor.rowId !== 'number') {\n        return undefined;\n      }\n      return tableData.getRecord(cursor.rowId);\n    });\n\n    // Here we will subscribe to tableActionEmitter, and update currentRecord observable.\n    // We have 'dataChangeTrigger' that is just a number that will be updated every time\n    // we received some table actions.\n    const debouncedUpdate = debounce(() => {\n      if (this._dataChangeTrigger.isDisposed()) {\n        return;\n      }\n      this._dataChangeTrigger.set(this._dataChangeTrigger.get() + 1);\n    }, 0);\n    Computed.create(this, (use) => {\n      const tableId = use(_ruleOwner.tableId);\n      const tableData = _gristDoc.docData.getTable(tableId);\n      return tableData ? use.owner.autoDispose(tableData.tableActionEmitter.addListener(debouncedUpdate)) : null;\n    });\n  }\n\n  public buildDom(): DomContents {\n    return [\n      cssRow(\n        { style: 'margin-top: 16px' },\n        withInfoTooltip(\n          textButton(\n            t('Add conditional style'),\n            testId('add-conditional-style'),\n            dom.on('click', () => this._ruleOwner.addEmptyRule()),\n            dom.prop('disabled', this._disabled),\n          ),\n          (this._label === t('Row Style')\n            ? GristTooltips.addRowConditionalStyle()\n            : GristTooltips.addColumnConditionalStyle()\n          ),\n        ),\n        dom.hide(use => use(this._ruleOwner.hasRules))\n      ),\n      dom.domComputedOwned(\n        use => use(this._ruleOwner.rulesCols),\n        (owner, rules) =>\n          cssRuleList(\n            dom.show(use => rules.length > 0 && (!this._disabled || !use(this._disabled))),\n            ...rules.map((column, ruleIndex) => {\n              const textColor = this._buildStyleOption(owner, ruleIndex, 'textColor');\n              const fillColor = this._buildStyleOption(owner, ruleIndex, 'fillColor');\n              const fontBold = this._buildStyleOption(owner, ruleIndex, 'fontBold');\n              const fontItalic = this._buildStyleOption(owner, ruleIndex, 'fontItalic');\n              const fontUnderline = this._buildStyleOption(owner, ruleIndex, 'fontUnderline');\n              const fontStrikethrough = this._buildStyleOption(owner, ruleIndex, 'fontStrikethrough');\n              const save = async () => {\n                // This will save both options.\n                await this._ruleOwner.rulesStyles.save();\n              };\n              const currentValue = Computed.create(owner, use => {\n                const record = use(this._currentRecord);\n                if (!record) {\n                  return null;\n                }\n                const value = record[use(column.colId)];\n                return value ?? null;\n              });\n              const hasError = Computed.create(owner, use => {\n                return !isValidRuleValue(use(currentValue));\n              });\n              const errorMessage = Computed.create(owner, use => {\n                const value = use(currentValue);\n                return (!use(hasError) ? '' :\n                  isRaisedException(value) ? t('Error in style rule') :\n                    t('Rule must return True or False'));\n              });\n              return dom('div',\n                testId(`conditional-rule-${ruleIndex}`),\n                testId(`conditional-rule`), // for testing\n                cssLineLabel('IF...'),\n                cssColumnsRow(\n                  cssLeftColumn(\n                    this._buildRuleFormula(column.formula, column, hasError),\n                    cssRuleError(\n                      dom.text(errorMessage),\n                      dom.show(hasError),\n                      testId(`rule-error-${ruleIndex}`),\n                    ),\n                    colorSelect(\n                      {\n                        textColor: new ColorOption({color:textColor, allowsNone: true, noneText: 'default'}),\n                        fillColor: new ColorOption({color:fillColor, allowsNone: true, noneText: 'none'}),\n                        fontBold,\n                        fontItalic,\n                        fontUnderline,\n                        fontStrikethrough\n                      }, {\n                        onSave: save,\n                        placeholder: this._label || 'Conditional Style',\n                      }\n                    )\n                  ),\n                  cssRemoveButton(\n                    'Remove',\n                    testId(`remove-rule-${ruleIndex}`),\n                    dom.on('click', () => this._ruleOwner.removeRule(ruleIndex))\n                  )\n                )\n              );\n            })\n          )\n      ),\n      cssRow(\n        textButton(t('Add another rule'),\n          dom.on('click', () => this._ruleOwner.addEmptyRule()),\n          testId('add-another-rule'),\n          dom.prop('disabled', use => this._disabled && use(this._disabled))\n        ),\n        dom.show(use => use(this._ruleOwner.hasRules))\n      ),\n    ];\n  }\n\n  private _buildStyleOption<T extends keyof Style>(owner: Disposable, index: number, option: T) {\n    const obs = Computed.create(owner, use => {\n      const styles = use(this._ruleOwner.rulesStyles);\n      return styles?.[index]?.[option];\n    });\n    obs.onWrite(value => {\n      const list = Array.from(this._ruleOwner.rulesStyles.peek() ?? []);\n      list[index] = list[index] ?? {};\n      list[index][option] = value;\n      this._ruleOwner.rulesStyles(list);\n    });\n    return obs;\n  }\n\n  private _buildRuleFormula(\n    formula: KoSaveableObservable<string>,\n    column: ColumnRec,\n    hasError: Observable<boolean>\n  ) {\n    return cssFieldFormula(\n      formula,\n      { gristTheme: this._gristDoc.currentTheme, maxLines: 1 },\n      dom.cls('formula_field_sidepane'),\n      dom.cls(cssErrorBorder.className, hasError),\n      { tabIndex: '-1' },\n      dom.on('focus', (_, refElem) => {\n        const section = this._gristDoc.viewModel.activeSection();\n        const vsi = section.viewInstance();\n        const editorHolder = openFormulaEditor({\n          gristDoc: this._gristDoc,\n          editingFormula: section.editingFormula,\n          column,\n          editRow: vsi?.moveEditRowToCursor(),\n          refElem,\n          setupCleanup: setupEditorCleanup,\n          canDetach: false,\n        });\n        // Add editor to document holder - this will prevent multiple formula editor instances.\n        this._gristDoc.fieldEditorHolder.autoDispose(editorHolder);\n      })\n    );\n  }\n}\n\nconst cssIcon = styled(icon, `\n  flex: 0 0 auto;\n`);\n\nconst cssLabel = styled('div', `\n  text-transform: uppercase;\n  margin: 16px 16px 12px 16px;\n  color: ${theme.text};\n  font-size: ${vars.xsmallFontSize};\n`);\n\nconst cssRow = styled('div', `\n  display: flex;\n  margin: 8px 16px;\n  align-items: center;\n  &-top-space {\n    margin-top: 24px;\n  }\n  &-disabled {\n    color: ${theme.disabledText};\n  }\n`);\n\nconst cssRemoveButton = styled(cssIcon, `\n  flex: none;\n  margin: 6px;\n  margin-right: 0px;\n  transform: translateY(4px);\n  cursor: pointer;\n  --icon-color: ${theme.controlSecondaryFg};\n  &:hover {\n    --icon-color: ${theme.controlFg};\n  }\n`);\n\nconst cssLineLabel = styled(cssLabel, `\n  margin-top: 0px;\n  margin-bottom: 0px;\n`);\n\nconst cssRuleList = styled('div', `\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-top: 16px;\n  margin-bottom: 12px;\n`);\n\nconst cssErrorBorder = styled('div', `\n  border-color: ${theme.inputInvalid};\n`);\n\nconst cssRuleError = styled(cssError, `\n  margin: 2px 0px 10px 0px;\n`);\n\nconst cssColumnsRow = styled(cssRow, `\n  align-items: flex-start;\n  margin-top: 0px;\n  margin-bottom: 0px;\n`);\n\nconst cssLeftColumn = styled('div', `\n  overflow: hidden;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`);\n","import { makeT } from 'app/client/lib/localization';\nimport {ACSelectItem, buildACSelect} from \"app/client/lib/ACSelect\";\nimport {Computed, IDisposableOwner, Observable} from \"grainjs\";\nimport {ACIndexImpl} from \"app/client/lib/ACIndex\";\nimport {testId} from 'app/client/ui2018/cssVars';\nimport {currencies} from 'app/common/Locales';\n\nconst t = makeT('CurrencyPicker');\n\ninterface CurrencyPickerOptions {\n  // The label to use in the select menu for the default option.\n  defaultCurrencyLabel: string;\n  disabled?: Observable<boolean>;\n}\n\nexport function buildCurrencyPicker(\n  owner: IDisposableOwner,\n  currency: Observable<string|undefined>,\n  onSave: (value: string|undefined) => void,\n  {defaultCurrencyLabel, disabled}: CurrencyPickerOptions\n) {\n  const currencyItems: ACSelectItem[] = currencies\n    .map(item => ({\n      value: item.code,\n      label: `${item.code} ${item.name}`,\n      cleanText: `${item.code} ${item.name}`.trim().toLowerCase(),\n    }));\n\n  // Add default currency label option to the very front.\n  currencyItems.unshift({\n    label : defaultCurrencyLabel,\n    value : defaultCurrencyLabel,\n    cleanText : defaultCurrencyLabel.toLowerCase(),\n  });\n  // Create a computed that will display 'Local currency' as a value and label\n  // when `currency` is undefined.\n  const valueObs = Computed.create(owner, (use) => use(currency) || defaultCurrencyLabel);\n  const acIndex = new ACIndexImpl<ACSelectItem>(currencyItems, 200, true);\n  return buildACSelect(owner,\n    {\n      acIndex, valueObs,\n      disabled,\n      save(_, item: ACSelectItem | undefined) {\n        // Save only if we have found a match\n        if (!item) {\n          throw new Error(t(\"Invalid currency\"));\n        }\n        // For default value, return undefined to use default currency for document.\n        onSave(item.value === defaultCurrencyLabel ? undefined : item.value);\n      }\n    },\n    testId(\"currency-autocomplete\")\n  );\n}\n","import {GristDoc} from 'app/client/components/GristDoc';\nimport {makeT} from 'app/client/lib/localization';\nimport {FocusLayer} from 'app/client/lib/FocusLayer';\nimport {createObsArray} from 'app/client/lib/koArrayWrap';\nimport {localStorageBoolObs} from 'app/client/lib/localStorageObs';\nimport {CellRec, ColumnRec, ViewSectionRec} from 'app/client/models/DocModel';\nimport {reportError} from 'app/client/models/errors';\nimport {RowSource, RowWatcher} from 'app/client/models/rowset';\nimport {createUserImage} from 'app/client/ui/UserImage';\nimport {basicButton, primaryButton, textButton} from 'app/client/ui2018/buttons';\nimport {labeledSquareCheckbox} from 'app/client/ui2018/checkbox';\nimport {theme, vars} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {menu, menuItem} from 'app/client/ui2018/menus';\nimport {CellInfoType} from 'app/common/gristTypes';\nimport {FullUser} from 'app/common/UserAPI';\nimport {\n  bundleChanges,\n  Computed,\n  Disposable,\n  dom,\n  DomArg,\n  DomContents,\n  DomElementArg,\n  IDomComponent,\n  makeTestId,\n  MultiHolder,\n  ObsArray,\n  Observable,\n  styled\n} from 'grainjs';\nimport {createPopper, Options as PopperOptions} from '@popperjs/core';\nimport * as ko from 'knockout';\nimport moment from 'moment';\nimport maxSize from 'popper-max-size-modifier';\nimport flatMap = require('lodash/flatMap');\nimport {autoGrow} from 'app/client/ui/forms';\n\nconst testId = makeTestId('test-discussion-');\nconst t = makeT('DiscussionEditor');\nconst COMMENTS_LIMIT = 200;\n\ninterface DiscussionPopupProps {\n  domEl: Element,\n  topic: ICellView,\n  discussionId?: number,\n  gristDoc: GristDoc,\n  closeClicked: () => void;\n}\n\ninterface ICellView {\n  comments: Observable<CellRec[]>,\n  comment(text: string): Promise<void>;\n  reply(discussion: CellRec, text: string): Promise<void>;\n  resolve(discussion: CellRec): Promise<void>;\n  update(comment: CellRec, text: string): Promise<void>;\n  open(discussion: CellRec): Promise<void>;\n  remove(comment: CellRec): Promise<void>;\n}\n\nexport class CellWithComments extends Disposable implements ICellView {\n  public comments: Observable<CellRec[]>;\n\n  constructor(protected gristDoc: GristDoc) {\n    super();\n  }\n\n  public async comment(text: string): Promise<void> {\n    // To override\n  }\n\n  public async reply(comment: CellRec, text: string): Promise<void> {\n    const author = commentAuthor(this.gristDoc);\n    await this.gristDoc.docData.bundleActions(t(\"Reply to a comment\"), () => Promise.all([\n      this.gristDoc.docModel.cells.sendTableAction([\n        \"AddRecord\",\n        null,\n        {\n          parentId: comment.id.peek(),\n          root: false,\n          type: CellInfoType.COMMENT,\n          userRef: author?.ref ?? '',\n          content: JSON.stringify({\n            userName: author?.name ?? '',\n            timeCreated: Date.now(),\n            timeUpdated: null,\n            text\n          }),\n          tableRef: comment.tableRef.peek(),\n          colRef: comment.colRef.peek(),\n          rowId: comment.rowId.peek(),\n        }\n      ])\n    ]));\n  }\n  public resolve(comment: CellRec): Promise<void> {\n    const author = commentAuthor(this.gristDoc);\n    comment.resolved(true);\n    comment.resolvedBy(author?.email ?? '');\n    return comment.timeUpdated.setAndSave((Date.now()));\n  }\n\n  public async update(comment: CellRec, text: string): Promise<void> {\n    const timeUpdated = Date.now();\n    comment.text(text.trim());\n    return comment.timeUpdated.setAndSave(timeUpdated);\n  }\n  public async open(comment: CellRec): Promise<void> {\n    comment.resolved(false);\n    comment.resolvedBy('');\n    return comment.timeUpdated.setAndSave((Date.now()));\n  }\n\n  public async remove(comment: CellRec): Promise<void> {\n    await comment._table.sendTableAction([\"RemoveRecord\", comment.id.peek()]);\n  }\n}\n\nexport class EmptyCell extends CellWithComments implements ICellView {\n  constructor(public props: {\n    gristDoc: GristDoc,\n    column: ColumnRec,\n    rowId: number,\n    tableRef: number,\n  }) {\n    super(props.gristDoc);\n    const {column, rowId} = props;\n    this.comments = Computed.create(this, use => {\n      const fromColumn = use(use(column.cells).getObservable());\n      const forRow = fromColumn.filter(d => use(d.rowId) === rowId && use(d.root) && !use(d.hidden));\n      return forRow;\n    });\n  }\n  public async comment(text: string): Promise<void> {\n    const props = this.props;\n    const author = commentAuthor(props.gristDoc);\n    const now = Date.now();\n    const addComment = [\n      \"AddRecord\",\n      \"_grist_Cells\",\n      null,\n      {\n        tableRef: props.tableRef,\n        colRef: props.column.id.peek(),\n        rowId: props.rowId,\n        type: CellInfoType.COMMENT,\n        root: true,\n        userRef: author?.ref ?? '',\n        content: JSON.stringify({\n          timeCreated: now,\n          text: text,\n          userName: author?.name ?? '',\n        })\n      }\n    ];\n    await props.gristDoc.docData.sendActions([addComment], t('Started discussion'));\n  }\n}\n\n/**\n * Discussion popup that is attached to a cell.\n */\nexport class CellDiscussionPopup extends Disposable {\n  private _isEmpty: Computed<boolean>;\n\n  constructor(public props: DiscussionPopupProps) {\n    super();\n    this._isEmpty = Computed.create(this, use => {\n      const discussions = use(props.topic.comments);\n      const notResolved = discussions.filter(d => !use(d.resolved));\n      const visible = notResolved.filter(d => !use(d.hidden));\n      return visible.length === 0;\n    });\n    const content = dom('div',\n      testId('popup'),\n      dom.domComputed(use => use(this._isEmpty), empty => {\n        if (!empty) {\n          return dom.create(CellWithCommentsView, {\n            topic: props.topic,\n            readonly: props.gristDoc.isReadonly,\n            gristDoc: props.gristDoc,\n            panel: false,\n            closeClicked: props.closeClicked,\n          });\n        } else {\n          return dom.create(EmptyCellView, {\n            closeClicked: props.closeClicked,\n            onSave: (text) => this.props.topic.comment(text),\n          });\n        }\n      })\n    );\n    buildPopup(this, props.domEl, content, cellPopperOptions, this.props.closeClicked);\n  }\n}\n\n/**\n * Component for starting discussion on a cell. Displays simple textbox and a button to start discussion.\n */\nclass EmptyCellView extends Disposable {\n  private _newText = Observable.create(this, '');\n\n  constructor(public props: {\n    closeClicked: () => void,\n    onSave: (text: string) => any\n  }) {\n    super();\n  }\n\n  public buildDom() {\n    return cssTopic(\n      testId('topic-empty'),\n      testId('topic'),\n      this._createCommentEntry(),\n      dom.onKeyDown({\n        Escape: () => this.props.closeClicked?.(),\n      })\n    );\n  }\n\n  private _createCommentEntry() {\n    return cssCommonPadding(dom.create(CommentEntry, {\n      mode: 'start',\n      text: this._newText,\n      onSave: () => this.props.onSave(this._newText.get()),\n      onCancel: () => this.props.closeClicked?.(),\n      editorArgs: [{placeholder: t('Write a comment')}],\n      mainButton: t('Comment'),\n      buttons: [t('Cancel')],\n      args: [testId('editor-start')]\n    }));\n  }\n}\n\n/**\n * Main component for displaying discussion on a popup.\n */\nclass CellWithCommentsView extends Disposable implements IDomComponent {\n  // Holder for a new comment text.\n  private _newText = Observable.create(this, '');\n  // CommentList dom - used for scrolling.\n  private _discussionList!: HTMLDivElement;\n  // Currently edited comment.\n  private _commentInEdit = Observable.create<CommentView | null>(this, null);\n  // Helper variable to mitigate some flickering when closing editor.\n  // We hide the editor before resolving discussion or clearing discussion, as\n  // actions that create discussions and comments are asynchronous, so user can see\n  // that comments elements are removed.\n  private _closing = Observable.create(this, false);\n  private _comments: Observable<CellRec[]>;\n  private _commentsToRender: Observable<CellRec[]>;\n  private _truncated: Observable<boolean>;\n\n  constructor(public props: {\n    topic: ICellView,\n    readonly: Observable<boolean>,\n    gristDoc: GristDoc,\n    panel?: boolean,\n    closeClicked?: () => void\n  }) {\n    super();\n    if (props.panel) {\n      this._comments = Computed.create(this, use =>\n        use(props.topic.comments).filter(ds => !use(ds.hidden) && use(ds.root)));\n    } else {\n      // Don't show resolved comments on a popup.\n      this._comments = Computed.create(this,\n        use => use(props.topic.comments).filter(ds => !use(ds.resolved) && !use(ds.hidden) && use(ds.root)));\n    }\n    this._commentsToRender = Computed.create(this, use => {\n      const sorted = use(this._comments).sort((a, b) => (use(a.timeCreated) ?? 0) - (use(b.timeCreated) ?? 0));\n      const start = Math.max(0, sorted.length - COMMENTS_LIMIT);\n      return sorted.slice(start);\n    });\n    this._truncated = Computed.create(this, use => use(this._comments).length > COMMENTS_LIMIT);\n  }\n\n  public buildDom() {\n    return cssTopic(\n      dom.maybe(this._truncated, () => cssTruncate(t(\"Showing last {{nb}} comments\", {nb: COMMENTS_LIMIT}))),\n      cssTopic.cls('-panel', this.props.panel),\n      domOnCustom(CommentView.EDIT, (s: CommentView) => this._onEditComment(s)),\n      domOnCustom(CommentView.CANCEL, (s: CommentView) => this._onCancelEdit()),\n      dom.hide(this._closing),\n      testId('topic'),\n      testId('topic-filled'),\n      dom.maybe(!this.props.panel, () =>\n        cssHeaderBox(\n          testId('topic-header'),\n          // NOT IMPLEMENTED YET\n          // cssHoverButton(cssRotate('Expand'), dom.on('click', () => this._remove()), {title: 'Previous discussion'}),\n          // cssHoverButton(icon('Expand'), dom.on('click', () => this._remove()), {title: 'Next discussion'}),\n          dom('div', dom.style('align-self', 'center'), \"Comments\"),\n          cssSpacer(),\n          // NOT IMPLEMENTED YET\n          // cssIconButton(\n          //   icon('Dots'),\n          //   menu(() => [], {placement: 'bottom-start'}),\n          //   dom.on('click', stopPropagation)\n          // ),\n          cssHoverButton(\n            icon('Popup'),\n            testId('topic-button-panel'),\n            dom.on('click', () => this.props.gristDoc.showTool('discussion')),\n            {title: 'Open panel'}\n          ),\n          cssHeaderBox.cls(\"-border\")\n        )),\n      this._discussionList = cssCommentList(\n        testId('topic-comments'),\n        dom.forEach(this._commentsToRender, comment => {\n          return cssDiscussionWrapper(\n            cssDiscussion(\n              cssDiscussion.cls(\"-resolved\", use => Boolean(use(comment.resolved))),\n              dom.create(CommentView, {\n                ...this.props,\n                comment\n              })\n            )\n          );\n        }\n        )\n      ),\n      !this.props.panel ? this._createCommentEntry() : null,\n      dom.onKeyDown({\n        Escape: () => this.props.closeClicked?.(),\n      })\n    );\n  }\n\n  private _onCancelEdit() {\n    if (this._commentInEdit.get()) {\n      this._commentInEdit.get()?.isEditing.set(false);\n    }\n    this._commentInEdit.set(null);\n  }\n\n  private _onEditComment(el: CommentView) {\n    if (this._commentInEdit.get()) {\n      this._commentInEdit.get()?.isEditing.set(false);\n    }\n    el.isEditing.set(true);\n    this._commentInEdit.set(el);\n  }\n\n  private async _save() {\n    try {\n      return await this.props.topic.comment(this._newText.get().trim());\n    } catch (err) {\n      return reportError(err);\n    } finally {\n      this._newText.set('');\n      this._discussionList.scrollTo(0, 10000);\n    }\n  }\n\n  private _createCommentEntry() {\n    return cssReplyBox(dom.create(CommentEntry, {\n      mode: 'comment',\n      text: this._newText,\n      onSave: () => this._save(),\n      onCancel: () => this.props.closeClicked?.(),\n      mainButton: 'Send',\n      editorArgs: [{placeholder: t('Comment')}],\n      args: [testId('editor-add')]\n    }));\n  }\n}\n\ninterface CommentProps {\n  comment: CellRec,\n  topic: ICellView,\n  gristDoc: GristDoc,\n  isReply?: boolean,\n  panel?: boolean,\n  args?: DomArg<HTMLDivElement>[]\n}\n\n/**\n * Component for displaying a single comment, either in popup or discussion panel.\n */\nclass CommentView extends Disposable {\n  // Public custom events. Those are propagated to the parent component (TopicView) to make\n  // sure only one comment is in edit mode at a time.\n  public static EDIT = 'comment-edit'; // comment is in edit mode\n  public static CANCEL = 'comment-cancel'; // edit mode was cancelled or turned off\n  public static SELECT = 'comment-select'; // comment was clicked\n  // Public modes that are modified by topic view.\n  public isEditing = Observable.create(this, false);\n  public replying = Observable.create(this, false);\n  private _replies: ObsArray<CellRec>;\n  private _hasReplies: Computed<boolean>;\n  private _expanded = Observable.create(this, false);\n  private _resolved: Computed<boolean>;\n  private _showReplies: Computed<boolean>;\n  private _bodyDom: Element;\n  constructor(\n    public props: CommentProps) {\n    super();\n    this._replies = createObsArray(this, props.comment.children());\n    this._hasReplies = Computed.create(this, use => use(this._replies).length > 0);\n    this._resolved = Computed.create(this, use => Boolean(use(props.comment.resolved)));\n    this._showReplies = Computed.create(this, use => {\n      return !this.props.isReply && use(this._replies).length > 0 &&\n        (use(this._expanded) || !use(this.props.comment.resolved));\n    });\n  }\n  public buildDom() {\n    const comment = this.props.comment;\n    const topic = this.props.topic;\n    const user = (c: CellRec) =>\n      comment.hidden() ? null : commentAuthor(this.props.gristDoc, c.userRef(), c.userName());\n    this._bodyDom = cssComment(\n      ...(this.props.args ?? []),\n      this.props.isReply ? testId('reply') : testId('comment'),\n      dom.on('click', () => {\n        if (this.props.isReply) { return; }\n        trigger(this._bodyDom, CommentView.SELECT, comment);\n        if (!this._resolved.get()) { return; }\n        this._expanded.set(!this._expanded.get());\n      }),\n      dom.maybe(use => !use(comment.hidden), () => [\n        cssColumns(\n          // 1. Column with avatar only\n          buildAvatar(user(comment), testId('comment-avatar')),\n          // 2. Column with nickname/date, menu and text\n          cssCommentHeader(\n            // User name date and buttons\n            cssCommentBodyHeader(\n              dom('div',\n                buildNick(user(comment), testId('comment-nick')),\n                dom.domComputed(use => cssTime(\n                  formatTime(use(comment.timeUpdated) ?? use(comment.timeCreated) ?? 0),\n                  testId('comment-time'),\n                )),\n              ),\n              cssSpacer(),\n              cssIconButton(\n                icon('Dots'),\n                testId('comment-menu'),\n                dom.style('margin-left', `3px`),\n                menu(() => this._menuItems(), {placement: 'bottom-start'}),\n                dom.on('click', stopPropagation)\n              )\n            ),\n          ),\n        ),\n        // Comment text\n        dom.maybe(use => !use(this.isEditing),\n          () => dom.domComputed(comment.hidden, (hidden) => {\n            if (hidden) {\n              return cssCommentCensored(\n                \"CENSORED\",\n                testId('comment-text'),\n              );\n            }\n            return cssCommentPre(\n              dom.text(use => use(comment.text) ?? ''),\n              {style: 'margin-top: 4px'},\n              testId('comment-text'),\n            );\n          })\n        ),\n        // Comment editor\n        dom.maybeOwned(this.isEditing,\n          (owner) => {\n            const text = Observable.create(owner, comment.text.peek() ?? '');\n            return dom.create(CommentEntry, {\n              text,\n              mainButton: t('Save'),\n              buttons: [t('Cancel')],\n              onSave: async () => {\n                const value = text.get();\n                text.set(\"\");\n                await topic.update(comment, value);\n                trigger(this._bodyDom, CommentView.CANCEL, this);\n                this.isEditing.set(false);\n              },\n              onCancel: () => {\n                trigger(this._bodyDom, CommentView.CANCEL, this);\n                this.isEditing.set(false);\n              },\n              mode: 'start',\n              args: [testId('editor-edit')]\n            });\n          }\n        ),\n        dom.maybe(this._showReplies, () =>\n          cssCommentReplyWrapper(\n            testId('replies'),\n            cssReplyList(\n              dom.forEach(this._replies, (commentReply) => {\n                return dom('div',\n                  dom.create(CommentView, {\n                    ...this.props,\n                    comment: commentReply,\n                    isReply: true,\n                    args: [dom.style('padding-left', '0px'), dom.style('padding-right', '0px')],\n                  })\n                );\n              }),\n            )\n          )\n        ),\n        // Reply editor or button\n        dom.maybe(use => !use(this.isEditing) && !this.props.isReply && !use(comment.resolved),\n          () => dom.domComputed(use => {\n            if (!use(this.replying)) {\n              return cssReplyButton(icon('Message'), t('Reply'),\n                testId('comment-reply-button'),\n                dom.on('click', withStop(() => this.replying.set(true))),\n                dom.style('margin-left', use2 => use2(this._hasReplies) ? '16px' : '0px'),\n              );\n            } else {\n              const text = Observable.create(null, '');\n              return dom.create(CommentEntry, {\n                text,\n                args: [dom.style('margin-top', '8px'), testId('editor-reply')],\n                mainButton: t('Reply'),\n                buttons: [t('Cancel')],\n                onSave: async () => {\n                  const value = text.get();\n                  this.replying.set(false);\n                  await topic.reply(comment, value);\n                },\n                onCancel: () => this.replying.set(false),\n                onClick: (button) => {\n                  if (button === t('Cancel')) {\n                    this.replying.set(false);\n                  }\n                },\n                mode: 'reply'\n              });\n            }\n          })\n        ),\n        // Resolved marker\n        dom.domComputed((use) => {\n          if (!use(comment.resolved) || this.props.isReply) { return null; }\n          return cssResolvedBlock(\n            testId('comment-resolved'),\n            icon('FieldChoice'),\n            cssResolvedText(dom.text(\n              t(`Marked as resolved`)\n            )));\n        }),\n      ]),\n    );\n\n    return this._bodyDom;\n  }\n  private _menuItems() {\n    const currentUser = this.props.gristDoc.app.topAppModel.appObs.get()?.currentUser?.ref;\n    const canResolve = !this.props.comment.resolved() && !this.props.isReply;\n    const comment = this.props.comment;\n    return [\n      !canResolve ? null :\n        menuItem(\n          () => this.props.topic.resolve(this.props.comment),\n          t('Resolve')\n        ),\n      !comment.resolved() ? null :\n        menuItem(\n          () => this.props.topic.open(comment),\n          t('Open')\n        ),\n      menuItem(\n        () => this.props.topic.remove(comment),\n        t('Remove'),\n        dom.cls('disabled', use => {\n          return currentUser !== use(comment.userRef);\n        })\n      ),\n      menuItem(\n        () => this._edit(),\n        t('Edit'),\n        dom.cls('disabled', use => {\n          return currentUser !== use(comment.userRef);\n        })\n      ),\n    ];\n  }\n\n  private _edit() {\n    trigger(this._bodyDom, CommentView.EDIT, this);\n    this.isEditing.set(true);\n  }\n}\n\n/**\n * Component for displaying input element for a comment (either for replying or starting a new discussion).\n */\nclass CommentEntry extends Disposable {\n  constructor(public props: {\n    text: Observable<string>,\n    mode?: 'comment' | 'start' | 'reply', // inline for reply, full for new discussion\n    onClick?: (button: string) => void,\n    onSave?: () => Promise<void>|void,\n    onCancel?: () => void, // On Escape\n    mainButton?: string, // Text for the main button (defaults to Send)\n    buttons?: string[], // Additional buttons to show.\n    editorArgs?: DomArg<HTMLTextAreaElement>[]\n    args?: DomArg<HTMLDivElement>[]\n  }) {\n    super();\n  }\n\n  public buildDom() {\n    const text = this.props.text;\n    const clickBuilder = (button: string) => dom.on('click', () => {\n      if (button === t(\"Cancel\")) {\n        this.props.onCancel?.();\n      } else {\n        this.props.onClick?.(button);\n      }\n    });\n    const onSave = async () => text.get() ? await this.props.onSave?.() : {};\n    let textArea!: HTMLElement;\n    return cssCommentEntry(\n      ...(this.props.args ?? []),\n      cssCommentEntry.cls(`-${this.props.mode ?? 'comment'}`),\n      testId('comment-input'),\n      dom.on('click', stopPropagation),\n      textArea = buildTextEditor(\n        text,\n        cssCommentEntryText.cls(\"\"),\n        cssTextArea.cls(`-${this.props.mode}`),\n        dom.onKeyDown({\n          Enter$: async (e) => {\n            // Save on ctrl+enter\n            if ((e.ctrlKey || e.metaKey) && text.get().trim()) {\n              await onSave?.();\n              e.preventDefault();\n              e.stopPropagation();\n              return;\n            }\n          },\n          Escape: (e) => {\n            this.props.onCancel?.();\n            e.preventDefault();\n            e.stopPropagation();\n          },\n        }),\n        ...(this.props.editorArgs || []),\n        testId('textarea'),\n      ),\n      elem => {\n        FocusLayer.create(this, {\n          defaultFocusElem: textArea,\n          allowFocus: (e) => (e !== document.body),\n          pauseMousetrap: true\n        });\n      },\n      cssCommentEntryButtons(\n        primaryButton(\n          this.props.mainButton ?? 'Send',\n          dom.prop('disabled', use => !use(text).trim()),\n          dom.on('click', withStop(onSave)),\n          testId('button-send'),\n        ),\n        dom.forEach(this.props.buttons || [], button => basicButton(\n          button, clickBuilder(button), testId(`button-${button}`)\n        )),\n      )\n    );\n  }\n}\n\n/**\n * Component that is rendered on the right drawer. It shows all discussions in the document or on the\n * current page. By current page, we mean comments in all currently visible rows (that are not filtered out).\n */\nexport class DiscussionPanel extends Disposable implements IDomComponent {\n  // View mode - current page or whole document.\n  private _currentPage: Observable<boolean>;\n  private _currentPageKo: ko.Observable<boolean>;\n  private _onlyMine: Observable<boolean>;\n  // Toggle to switch whether to show active discussions or all discussions (including resolved ones).\n  private _resolved: Observable<boolean>;\n  private _length = Observable.create<number>(this, 0);\n\n  constructor(private _grist: GristDoc) {\n    super();\n    const userId = _grist.app.topAppModel.appObs.get()?.currentUser?.id || 0;\n    // We store options in session storage, so that they are preserved across page reloads.\n    this._resolved = this.autoDispose(localStorageBoolObs(`u:${userId};showResolvedDiscussions`, false));\n    this._onlyMine = this.autoDispose(localStorageBoolObs(`u:${userId};showMyDiscussions`, false));\n    this._currentPage = this.autoDispose(localStorageBoolObs(`u:${userId};showCurrentPage`, true));\n    this._currentPageKo = ko.observable(this._currentPage.get());\n    this._currentPage.addListener(val => this._currentPageKo(val));\n  }\n\n  public buildDom(): DomContents {\n    const owner = new MultiHolder();\n\n    // Computed for all sections visible on the page.\n    const viewSections = Computed.create(owner, use => {\n      return use(use(this._grist.viewModel.viewSections).getObservable());\n    });\n\n    // Based on the view, we get all tables or only visible ones.\n    const tables = Computed.create(owner, use => {\n      // Filter out those tables that are not available by ACL.\n      if (use(this._currentPageKo)) {\n        return [...new Set(use(viewSections).map(vs => use(vs.table)).filter(tb => use(tb.tableId)))];\n      } else {\n        return use(this._grist.docModel.visibleTables.getObservable()).filter(tb => use(tb.tableId));\n      }\n    });\n\n    // Column filter - only show discussions in this column (depending on the mode).\n    const columnFilter = Computed.create(owner, use => {\n      if (use(this._currentPageKo)) {\n        const fieldSet = new Set<number>();\n        use(viewSections).forEach(vs => {\n          use(use(vs.viewFields).getObservable()).forEach(vf => fieldSet.add(use(vf.colRef)));\n        });\n        return (ds: CellRec) => {\n          return fieldSet.has(use(ds.colRef));\n        };\n      } else {\n        return () => true;\n      }\n    });\n\n    // Create a row filter based on user filters (rows that user actually see).\n    const watcher = RowWatcher.create(owner);\n    watcher.rowFilter.set(() => true);\n    // Now watch for viewSections (when they are changed, and then update watcher instance).\n    // Unfortunately, we can't use _viewSections here because GrainJS has a different\n    // behavior than ko when one observable changes during the evaluation. Here viewInstance\n    // will probably be set during computations. To fix this we need a ko.observable here.\n    const sources = owner.autoDispose(ko.computed(() => {\n      if (this._currentPageKo()) {\n        const list: RowSource[] = [];\n        for (const vs of this._grist.viewModel.viewSections().all()) {\n          const viewInstance = vs.viewInstance();\n          if (viewInstance) {\n            list.push(viewInstance.rowSource);\n          }\n        }\n        return list;\n      }\n      return null;\n    }));\n    sources.peek()?.forEach(source => watcher.subscribeTo(source));\n    owner.autoDispose(sources.subscribe(list => {\n      bundleChanges(() => {\n        watcher.clear();\n        if (list) {\n          list.forEach(source => watcher.subscribeTo(source));\n        } else {\n          // Page\n          watcher.rowFilter.set(() => true);\n        }\n      });\n    }));\n\n    const rowFilter = watcher.rowFilter;\n\n    const discussionFilter = Computed.create(owner, use => {\n      const filterRow = use(rowFilter);\n      const filterCol = use(columnFilter);\n      const showAll = use(this._resolved);\n      const showAnyone = !use(this._onlyMine);\n      const currentUser = use(this._grist.app.topAppModel.appObs)?.currentUser?.email ?? '';\n      const userFilter = (d: CellRec) => {\n        const replies = use(use(d.children).getObservable());\n        return use(d.userRef) === currentUser || replies.some(c => use(c.userRef) === currentUser);\n      };\n      return (ds: CellRec) =>\n        !use(ds.hidden) // filter by ACL\n        && filterRow(use(ds.rowId))\n        && filterCol(ds)\n        && (showAnyone || userFilter(ds))\n        && (showAll || !use(ds.resolved))\n      ;\n    });\n    const allDiscussions = Computed.create(owner, use => {\n      const list = flatMap(flatMap(use(tables).map(tb => {\n        const columns = use(use(tb.columns).getObservable());\n        const dList = columns.map(col => use(use(col.cells).getObservable())\n          .filter(c => use(c.root) && use(c.type) === CellInfoType.COMMENT));\n        return dList;\n      })));\n      return list;\n    });\n    const discussions = Computed.create(owner, use => {\n      const all = use(allDiscussions);\n      const filter = use(discussionFilter);\n      return all.filter(filter);\n    });\n    const topic = CellWithComments.create(owner, this._grist);\n    topic.comments = discussions;\n    owner.autoDispose(discussions.addListener((d) => this._length.set(d.length)));\n    this._length.set(discussions.get().length);\n    // Selector for page all whole document.\n    return cssDiscussionPanel(\n      dom.autoDispose(owner),\n      testId('panel'),\n      // Discussion list - actually we are showing first comment of each discussion.\n      cssDiscussionPanelList(\n        dom.create(CellWithCommentsView, {\n          readonly: this._grist.isReadonly,\n          gristDoc: this._grist,\n          topic: topic,\n          panel: true\n        })\n      ),\n      domOnCustom(CommentView.SELECT, (ds: CellRec) => {\n        this._navigate(ds).catch(() => {});\n      })\n    );\n  }\n\n  public buildMenu(): DomContents {\n    return cssPanelHeader(\n      dom('span', dom.text(use => `${use(this._length)} comments`), testId('comment-count')),\n      cssIconButtonMenu(\n        icon('Dots'),\n        testId('panel-menu'),\n        menu(() => {\n          return [cssDropdownMenu(\n            labeledSquareCheckbox(this._onlyMine, t(\"Only my threads\"), testId('my-threads')),\n            labeledSquareCheckbox(this._currentPage, t(\"Only current page\"), testId('only-page')),\n            labeledSquareCheckbox(this._resolved, t(\"Show resolved comments\"), testId('show-resolved')),\n          )];\n        }, {placement: 'bottom-start'}),\n        dom.on('click', stopPropagation)\n      ),\n    );\n  }\n\n  /**\n   * Navigates to cell on current page or opens discussion next to the panel.\n   */\n  private async _navigate(discussion: CellRec) {\n    // Try to find the cell on the current page.\n    const rowId = discussion.rowId.peek();\n    function findSection(viewSections: ViewSectionRec[]) {\n      const section = viewSections\n        .filter(s => s.tableRef.peek() === discussion.tableRef.peek())\n        .filter(s => s.viewFields.peek().all().find(f => f.colRef.peek() === discussion.colRef.peek()))[0];\n      const sectionId = section?.getRowId();\n      const fieldIndex = section?.viewFields.peek().all()\n        .findIndex(f => f.colRef.peek() === discussion.colRef.peek()) ?? -1;\n      if (fieldIndex !== -1) {\n        return {sectionId, fieldIndex};\n      }\n      return null;\n    }\n    let sectionId = 0;\n    let fieldIndex = -1;\n    const section = findSection(this._grist.viewModel.viewSections.peek().all());\n    // If we haven't found the cell on the current page, try other pages.\n    if (!section) {\n      for (const pageId of this._grist.docModel.pages.getAllRows()) {\n        const page = this._grist.docModel.pages.getRowModel(pageId);\n        const vss = page.view.peek().viewSections.peek().all();\n        const result = findSection(vss);\n        if (result) {\n          sectionId = result.sectionId;\n          fieldIndex = result.fieldIndex;\n          break;\n        }\n      }\n    } else {\n      sectionId = section.sectionId;\n      fieldIndex = section.fieldIndex;\n    }\n\n    if (!sectionId) {\n      return;\n    }\n\n    const currentPosition = this._grist.cursorPosition.get();\n\n    if (currentPosition?.sectionId === sectionId &&\n      currentPosition.fieldIndex === fieldIndex &&\n      currentPosition.rowId === rowId) {\n      return;\n    }\n\n    // Navigate cursor to the cell.\n    const ok = await this._grist.recursiveMoveToCursorPos({\n      rowId,\n      sectionId,\n      fieldIndex\n    }, true);\n    if (!ok) {\n      return;\n    }\n  }\n}\n\nfunction buildTextEditor(text: Observable<string>, ...args: DomArg<HTMLTextAreaElement>[]) {\n  const textArea = cssTextArea(\n    bindProp(text),\n    autoFocus(),\n    autoGrow(text),\n    ...args\n  );\n  return textArea;\n}\n\n\nfunction buildAvatar(user: FullUser | null, ...args: DomElementArg[]) {\n  return cssAvatar(user, 'small', ...args);\n}\n\nfunction buildNick(user: {name: string} | null, ...args: DomArg<HTMLElement>[]) {\n  return cssNick(user?.name ?? 'Anonymous', ...args);\n}\n\nfunction bindProp(text: Observable<string>) {\n  return [\n    dom.prop('value', text),\n    dom.on('input', (_, el: HTMLTextAreaElement) => text.set(el.value)),\n  ];\n}\n\nfunction autoFocus() {\n  return (el: HTMLElement) => void setTimeout(() => el.focus(), 10);\n}\n\nfunction buildPopup(\n  owner: Disposable,\n  cell: Element,\n  content: HTMLElement,\n  options: Partial<PopperOptions>,\n  closeClicked: () => void\n) {\n  const popper = createPopper(cell, content, options);\n  owner.onDispose(() => popper.destroy());\n  document.body.appendChild(content);\n  owner.onDispose(() => { dom.domDispose(content); content.remove(); });\n  owner.autoDispose(onClickOutside(content, () => closeClicked()));\n}\n\n// Helper binding function to handle click outside an element. Takes into account floating menus.\nfunction onClickOutside(content: HTMLElement, click: () => void) {\n  const onClick = (evt: MouseEvent) => {\n    const target: Node | null = evt.target as Node;\n    if (target && !content.contains(target)) {\n      // Check if any parent of target has class grist-floating-menu, if so, don't close.\n      if (target.parentElement?.closest(\".grist-floating-menu\")) {\n        return;\n      }\n      click();\n    }\n  };\n  return dom.onElem(document, 'click', onClick, {useCapture: true});\n}\n\n// Display timestamp as a relative time ago using moment.js\nfunction formatTime(timeStamp: number) {\n  const time = moment(timeStamp);\n  const now = moment();\n  const diff = now.diff(time, 'days');\n  if (diff < 1) {\n    return time.fromNow();\n  }\n  return time.format('MMM D, YYYY');\n}\n\nfunction commentAuthor(grist: GristDoc, userRef?: string, userName?: string): FullUser | null {\n  if (!userRef) {\n    const loggedInUser = grist.app.topAppModel.appObs.get()?.currentValidUser;\n    if (!loggedInUser) {\n      return {\n        name: userName || '',\n        ref: userRef || '',\n        email: '',\n        id: 0\n      };\n    }\n    if (!loggedInUser.ref) {\n      throw new Error(\"User reference is not set\");\n    }\n    return loggedInUser;\n  } else {\n    if (typeof userName !== 'string') {\n      return null;\n    }\n    return {\n      name: userName,\n      ref: userRef || '',\n      email: '',\n      id: 0\n    };\n  }\n}\n\n// Options for popper.js\nconst calcMaxSize = {\n  ...maxSize,\n  options: {padding: 4},\n};\nconst applyMaxSize: any = {\n  name: 'applyMaxSize',\n  enabled: true,\n  phase: 'beforeWrite',\n  requires: ['maxSize'],\n  fn({state}: any) {\n    // The `maxSize` modifier provides this data\n    const {height} = state.modifiersData.maxSize;\n    Object.assign(state.styles.popper, {\n      maxHeight: `${Math.min(Math.max(250, height), 600)}px`\n    });\n  }\n};\nconst cellPopperOptions: Partial<PopperOptions> = {\n  placement: 'bottom',\n  strategy: 'fixed',\n  modifiers: [\n    calcMaxSize,\n    applyMaxSize,\n    {\n      name: 'offset',\n      options: {\n        offset: [0, 4],\n      },\n    },\n    {name: \"computeStyles\", options: {gpuAcceleration: false}},\n    {name: 'eventListeners', enabled: false}\n  ],\n};\n\n\nfunction stopPropagation(ev: Event) {\n  ev.stopPropagation();\n}\n\nfunction withStop(handler: () => any) {\n  return (ev: Event) => {\n    stopPropagation(ev);\n    handler();\n  };\n}\n\nconst cssAvatar = styled(createUserImage, `\n  flex: none;\n  margin-top: 2px;\n`);\n\n\nconst cssDiscussionPanel = styled('div', `\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n  padding: 8px;\n`);\n\nconst cssDiscussionPanelList = styled('div', `\n  margin-bottom: 0px;\n`);\n\nconst cssCommonPadding = styled('div', `\n  padding: 16px;\n`);\n\nconst cssPanelHeader = styled('div', `\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n`);\n\nconst cssDropdownMenu = styled('div', `\n  display: flex;\n  padding: 12px;\n  padding-left: 16px;\n  padding-right: 16px;\n  gap: 10px;\n  flex-direction: column;\n`);\n\nconst cssReplyBox = styled(cssCommonPadding, `\n  border-top: 1px solid ${theme.commentsPopupBorder};\n`);\n\nconst cssCommentEntry = styled('div', `\n  display: grid;\n  &-comment {\n    grid-template-columns: 1fr auto;\n    grid-template-rows: 1fr;\n    gap: 8px;\n    grid-template-areas: \"text buttons\";\n  }\n  &-start, &-reply {\n    grid-template-rows: 1fr auto;\n    grid-template-columns: 1fr;\n    gap: 8px;\n    grid-template-areas: \"text\" \"buttons\";\n  }\n`);\n\nconst cssCommentEntryText = styled('div', `\n  grid-area: text;\n`);\n\nconst cssCommentEntryButtons = styled('div', `\n  grid-area: buttons;\n  display: flex;\n  align-items: flex-start;\n\n  gap: 8px;\n`);\n\nconst cssTextArea = styled('textarea', `\n  min-height: 5em;\n  border-radius: 3px;\n  padding: 4px 6px;\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n  border: 1px solid ${theme.inputBorder};\n  outline: none;\n  width: 100%;\n  resize: none;\n  max-height: 10em;\n  &-comment, &-reply {\n    min-height: 28px;\n    height: 28px;\n  }\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n`);\n\nconst cssHeaderBox = styled('div', `\n  color: ${theme.text};\n  background-color: ${theme.commentsPopupHeaderBg};\n  padding: 12px; /* 12px * 2 + 24px (size of the icon) == 48px in height */\n  padding-right: 16px;\n  display: flex;\n  gap: 8px;\n  &-border {\n    border-bottom: 1px solid ${theme.commentsPopupBorder};\n  }\n`);\n\nconst cssTopic = styled('div', `\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${theme.commentsPopupBorder};\n  border-radius: 4px;\n  background-color: ${theme.commentsPopupBodyBg};\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n  z-index: 100;\n  width: 325px;\n  overflow: hidden;\n  outline: none;\n  max-height: inherit;\n  &-disabled {\n    background-color: ${theme.commentsPanelResolvedTopicBg}\n  }\n  &-panel {\n    width: unset;\n    box-shadow: none;\n    border-radius: 0px;\n    background: unset;\n    border: 0px;\n  }\n`);\n\nconst cssDiscussionWrapper = styled('div', `\n  border-bottom: 1px solid ${theme.commentsPopupBorder};\n  &:last-child {\n    border-bottom: none;\n  }\n  .${cssTopic.className}-panel & {\n    border: 1px solid ${theme.commentsPanelTopicBorder};\n    border-radius: 4px;\n    background-color: ${theme.commentsPanelTopicBg};\n    margin-bottom: 4px;\n  }\n`);\n\nconst cssDiscussion = styled('div', `\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  &-resolved {\n    background-color: ${theme.commentsPanelResolvedTopicBg};\n    cursor: pointer;\n  }\n  &-resolved * {\n    color: ${theme.lightText} !important;\n  }\n`);\n\nconst cssCommentCensored = styled('div', `\n  color: ${theme.text};\n  margin-top: 4px;\n`);\n\nconst cssCommentPre = styled('pre', `\n  color: ${theme.text};\n  padding: 0px;\n  font-size: revert;\n  border: 0px;\n  background: inherit;\n  font-family: inherit;\n  margin: 0px;\n  white-space: break-spaces;\n  word-break: break-word;\n  word-wrap: break-word;\n`);\n\nconst cssCommentList = styled('div', `\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`);\n\nconst cssColumns = styled('div', `\n  display: flex;\n  align-items: flex-start;\n  gap: 8px;\n`);\n\nconst cssCommentReplyWrapper = styled('div', `\n  margin-top: 16px;\n`);\n\nconst cssComment = styled('div', `\n  border-bottom: 1px solid ${theme.commentsPopupBorder};\n  .${cssCommentList.className} &:last-child {\n    border-bottom: 0px;\n  }\n`);\n\nconst cssReplyList = styled('div', `\n  margin-left: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`);\n\nconst cssCommentHeader = styled('div', `\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  overflow: hidden;\n`);\n\nconst cssCommentBodyHeader = styled('div', `\n  display: flex;\n  align-items: baseline;\n  overflow: hidden;\n`);\n\nconst cssIconButton = styled('div', `\n  flex: none;\n  margin: 0 4px 0 auto;\n  height: 24px;\n  width: 24px;\n  padding: 4px;\n  line-height: 0px;\n  border-radius: 3px;\n  cursor: pointer;\n  --icon-color: ${theme.controlSecondaryFg};\n  &:hover, &.weasel-popup-open {\n    background-color: ${theme.controlSecondaryHoverBg};\n  }\n`);\n\nconst cssIconButtonMenu = styled('div', `\n  flex: none;\n  margin: 0 4px 0 auto;\n  height: 24px;\n  width: 24px;\n  padding: 4px;\n  line-height: 0px;\n  border-radius: 3px;\n  cursor: pointer;\n  --icon-color: ${theme.rightPanelTabSelectedFg};\n  &:hover, &.weasel-popup-open {\n    background-color: ${theme.rightPanelTabButtonHoverBg};\n  }\n`);\n\nconst cssReplyButton = styled(textButton, `\n  align-self: flex-start;\n  display: flex;\n  gap: 4px;\n  margin-top: 16px;\n`);\n\nconst cssTime = styled('div', `\n  color: ${theme.lightText};\n  font-size: ${vars.smallFontSize};\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  letter-spacing: 0.02em;\n  line-height: 16px;\n`);\n\nconst cssNick = styled('div', `\n  font-weight: 600;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  color: ${theme.commentsUserNameFg};\n  &-small {\n    font-size: 12px;\n  }\n`);\n\nconst cssSpacer = styled('div', `\n  flex-grow: 1;\n`);\n\nconst cssCloseButton = styled('div', `\n  padding: 4px;\n  border-radius: 4px;\n  line-height: 1px;\n  cursor: pointer;\n  --icon-color: ${theme.controlSecondaryFg};\n  &:hover {\n    background-color: ${theme.hover};\n  }\n`);\n\nconst cssHoverButton = styled(cssCloseButton, `\n  &:hover {\n    --icon-color: ${theme.controlPrimaryBg};\n  }\n`);\n\n// NOT IMPLEMENTED YET\n// const cssRotate = styled(icon, `\n//   transform: rotate(180deg);\n// `);\n\nfunction domOnCustom(name: string, handler: (args: any, event: Event, element: Element) => void) {\n  return (el: Element) => {\n    dom.onElem(el, name, (ev, target) => {\n      const cv = ev as CustomEvent;\n      handler(cv.detail.args ?? {}, ev, target);\n    });\n  };\n}\n\nfunction trigger(element: Element, name: string, args?: any) {\n  element.dispatchEvent(new CustomEvent(name, {\n    bubbles: true,\n    detail: {args}\n  }));\n}\n\nconst cssResolvedBlock = styled('div', `\n  margin-top: 5px;\n  --icon-color: ${theme.text};\n`);\n\nconst cssResolvedText = styled('span', `\n  color: ${theme.text};\n  font-size: ${vars.smallFontSize};\n  margin-left: 5px;\n`);\n\nconst cssTruncate = styled('div', `\n  position: absolute;\n  background: white;\n  inset: 0;\n  height: 2rem;\n  opacity: 57%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n`);\n","import {isDesktop} from 'app/client/lib/browserInfo';\nimport {colors} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {IEditorCommandGroup} from 'app/client/widgets/NewBaseEditor';\nimport {dom, styled} from 'grainjs';\n\n/**\n * Creates Save/Cancel icon buttons to show next to the cell editor.\n */\nexport function createMobileButtons(commands: IEditorCommandGroup) {\n  // TODO A better check may be to detect a physical keyboard or touch support.\n  return isDesktop() ? null : [\n    cssCancelBtn(cssIconWrap(cssFinishIcon('CrossSmall')), dom.on('click', commands.fieldEditCancel)),\n    cssSaveBtn(cssIconWrap(cssFinishIcon('Tick')), dom.on('click', commands.fieldEditSaveHere)),\n  ];\n}\n\nexport function getButtonMargins() {\n  return isDesktop() ? undefined : {left: 20, right: 20, top: 0, bottom: 0};\n}\n\nconst cssFinishBtn = styled('div', `\n  height: 40px;\n  width: 40px;\n  padding: 8px;\n  position: absolute;\n  top: -8px;\n  --icon-color: white;\n`);\n\nconst cssCancelBtn = styled(cssFinishBtn, `\n  --icon-background-color: ${colors.error};\n  left: -40px;\n`);\n\nconst cssSaveBtn = styled(cssFinishBtn, `\n  --icon-background-color: ${colors.lightGreen};\n  right: -40px;\n`);\n\nconst cssIconWrap = styled('div', `\n  border-radius: 20px;\n  background-color: var(--icon-background-color);\n  height: 24px;\n  width: 24px;\n`);\n\nconst cssFinishIcon = styled(icon, `\n  height: 24px;\n  width: 24px;\n`);\n","import {Disposable, dom, Emitter} from 'grainjs';\n\nexport interface ISize {\n  width: number;\n  height: number;\n}\n\ninterface ISizeOpts {\n  // Don't reposition the editor as part of the size calculation.\n  calcOnly?: boolean;\n}\n\nexport interface IMargins {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n\nexport type IRect = ISize & IMargins;\n\n\n// edgeMargin is how many pixels to leave before the edge of the browser window by default.\n// This is added to margins that may be passed into the constructor.\nconst edgeMargin = 12;\n\n// How large the editor can get when it needs to shift to the left or upwards.\nconst maxShiftWidth = 560;\nconst maxShiftHeight = 400;\n\n\n/**\n * This class implements the placement and sizing of the cell editor, such as TextEditor and\n * FormulaEditor. These try to match the size and position of the cell being edited, expanding\n * when needed.\n *\n * This class also takes care of attaching the editor DOM and destroying it on disposal.\n */\nexport class EditorPlacement extends Disposable {\n  public readonly onReposition = this.autoDispose(new Emitter());\n\n  private _editorRoot: HTMLElement;\n  private _maxRect: IRect;\n  private _cellRect: IRect;\n  private _margins: IMargins;\n\n  // - editorDom is the DOM to attach. It gets destroyed when EditorPlacement is disposed.\n  // - cellElem is the cell being mirrored by the editor; the editor generally expands to match\n  //   the size of the cell.\n  // - margins may be given to add to the default edgeMargin, to increase distance to edges of the window.\n  constructor(editorDom: HTMLElement, private _cellElem: Element, options: {margins?: IMargins} = {}) {\n    super();\n\n    this._margins = {\n      top: (options.margins?.top || 0) + edgeMargin,\n      bottom: (options.margins?.bottom || 0) + edgeMargin,\n      left: (options.margins?.left || 0) + edgeMargin,\n      right: (options.margins?.right || 0) + edgeMargin,\n    };\n\n    // Initialize _maxRect and _cellRect used for sizing the editor. We don't re-measure them\n    // while typing (e.g. OK to scroll the view away from the editor), but we re-measure them on\n    // window resize, which is only a normal occurrence on Android when virtual keyboard is shown.\n    this._maxRect = document.body.getBoundingClientRect();\n    this._cellRect = rectWithoutBorders(this._cellElem);\n\n    this.autoDispose(dom.onElem(window, 'resize', () => {\n      this._maxRect = document.body.getBoundingClientRect();\n      this._cellRect = rectWithoutBorders(this._cellElem);\n      this.onReposition.emit();\n    }));\n\n    const editorRoot = this._editorRoot = dom('div.cell_editor', editorDom);\n    // To hide from the user the incorrectly-sized element, we set visibility to hidden, and\n    // reset it in _calcEditorSize() as soon as we have the sizes.\n    editorRoot.style.visibility = 'hidden';\n\n    document.body.appendChild(editorRoot);\n    this.onDispose(() => {\n      // When the editor is destroyed, destroy and remove its DOM.\n      dom.domDispose(editorRoot);\n      editorRoot.remove();\n    });\n  }\n\n  /**\n   * Calculate the size of the full editor and shift the editor if needed to give it more space.\n   * The position and size are applied to the editor unless {calcOnly: true} option is given.\n   */\n  public calcSize(desiredSize: ISize, options: ISizeOpts = {}): ISize {\n    const maxRect = this._maxRect;\n    const margin = this._margins;\n\n    const noShiftMaxWidth = maxRect.right - margin.right - this._cellRect.left;\n    const maxWidth = Math.min(maxRect.width - margin.left - margin.right, Math.max(maxShiftWidth, noShiftMaxWidth));\n    const width = Math.min(maxWidth, Math.max(this._cellRect.width, desiredSize.width));\n    const left = Math.max(margin.left,\n      Math.min(this._cellRect.left - maxRect.left, maxRect.width - margin.right - width));\n\n    const noShiftMaxHeight = maxRect.bottom - margin.bottom - this._cellRect.top;\n    const maxHeight = Math.min(maxRect.height - margin.top - margin.bottom, Math.max(maxShiftHeight, noShiftMaxHeight));\n    const height = Math.min(maxHeight, Math.max(this._cellRect.height, desiredSize.height));\n    const top = Math.max(margin.top,\n      Math.min(this._cellRect.top - maxRect.top, maxRect.height - margin.bottom - height));\n\n    // To hide from the user the split second before things are sized correctly, we set visibility\n    // to hidden until we can get the sizes. As soon as sizes are available, restore visibility.\n    if (!options.calcOnly) {\n      Object.assign(this._editorRoot.style, {\n        visibility: 'visible',\n        left: left + 'px',\n        top: top + 'px',\n        // Set the width (but not the height) of the outer container explicitly to accommodate the\n        // particular setup where a formula may include error details below -- these should\n        // stretch to the calculated width (so need an explicit value), but may be dynamic in\n        // height. (This feels hacky, but solves the problem.)\n        width: width + 'px',\n        'max-height': maxHeight + 'px',\n      });\n    }\n\n    return {width, height};\n  }\n\n  /**\n   * Calculate the size for the editable part of the editor, given in elem. This assumes that the\n   * size of the full editor differs from the editable part only in constant padding. The full\n   * editor may be shifted as part of this call.\n   */\n  public calcSizeWithPadding(elem: HTMLElement, desiredElemSize: ISize, options: ISizeOpts = {}): ISize {\n    const rootRect = this._editorRoot.getBoundingClientRect();\n    const elemRect = elem.getBoundingClientRect();\n    const heightDelta = rootRect.height - elemRect.height;\n    const widthDelta = rootRect.width - elemRect.width;\n    const {width, height} = this.calcSize({\n      width: desiredElemSize.width + widthDelta,\n      height: desiredElemSize.height + heightDelta,\n    }, options);\n    return {\n      width: width - widthDelta,\n      height: height - heightDelta,\n    };\n  }\n}\n\n// Get the bounding rect of elem excluding borders. This allows the editor to match cellElem more\n// closely which is more visible in case of DetailView.\nfunction rectWithoutBorders(elem: Element): IRect {\n  const rect = elem.getBoundingClientRect();\n  const style = getComputedStyle(elem, null);\n  const bTop = parseFloat(style.getPropertyValue('border-top-width'));\n  const bRight = parseFloat(style.getPropertyValue('border-right-width'));\n  const bBottom = parseFloat(style.getPropertyValue('border-bottom-width'));\n  const bLeft = parseFloat(style.getPropertyValue('border-left-width'));\n  return {\n    width: rect.width - bLeft - bRight,\n    height: rect.height - bTop - bBottom,\n    top: rect.top + bTop,\n    bottom: rect.bottom - bBottom,\n    left: rect.left + bLeft,\n    right: rect.right - bRight,\n  };\n}\n","/**\n * ColumnTransform is used as a abstract base class for any classes which must build a dom for the\n * purpose of allowing the user to transform a column. It is currently extended by FormulaTransform\n * and TypeTransform.\n */\nimport * as commands from 'app/client/components/commands';\nimport * as AceEditor from 'app/client/components/AceEditor';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {ColumnRec} from 'app/client/models/entities/ColumnRec';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {TableData} from 'app/client/models/TableData';\nimport {FieldBuilder} from 'app/client/widgets/FieldBuilder';\nimport {UserAction} from 'app/common/DocActions';\nimport {GristObjCode} from 'app/plugin/GristData';\nimport {Disposable, Observable} from 'grainjs';\nimport isPlainObject from 'lodash/isPlainObject';\nimport * as ko from 'knockout';\nimport noop = require('lodash/noop');\n\n// To simplify diff (avoid rearranging methods to satisfy private/public order).\n/* eslint-disable @typescript-eslint/member-ordering */\n\ntype AceEditor = any;\n\n/**\n * Abstract class for FormulaTransform and TypeTransform to extend. Initializes properties needed\n * for both types of transform. optPureType is useful for initializing type transforms.\n */\nexport class ColumnTransform extends Disposable {\n  protected field: ViewFieldRec;\n  protected origColumn: ColumnRec;\n  protected origDisplayCol: ColumnRec;\n  protected transformColumn: ColumnRec;                 // Set in prepare()\n  protected origWidgetOptions: unknown;\n  protected isCallPending: ko.Observable<boolean>;\n  protected editor: AceEditor|null = null;              // Created when the dom is built by extending classes\n  protected formulaUpToDate = Observable.create(this, true);\n  protected _tableData: TableData;\n  protected rules: [GristObjCode.List, ...number[]]|null;\n\n  // Whether _doFinalize should execute the transform, or cancel it.\n  protected _shouldExecute: boolean = false;\n\n  // Ask DocData to finalize the action bundle by calling the finalize callback provided to\n  // startBundlingActions. Finalizing should always be triggered this way, for a uniform flow,\n  // since finalizing could be triggered either from DocData or from cancel/execute methods.\n  // This is a noop until startBundlingActions is called.\n  private _triggerFinalize: (() => void) = noop;\n\n  // This is set to true once finalize has started.\n  private _isFinalizing: boolean = false;\n\n  constructor(protected gristDoc: GristDoc, private _fieldBuilder: FieldBuilder) {\n    super();\n    this.field = _fieldBuilder.field;\n    this.origColumn = this.field.column();\n    this.origDisplayCol = this.field.displayColModel();\n    this.origWidgetOptions = this.field.widgetOptionsJson();\n    this.rules = this.origColumn.rules();\n    this.isCallPending = _fieldBuilder.isCallPending;\n\n    this._tableData = gristDoc.docData.getTable(this.origColumn.table().tableId())!;\n\n    this.autoDispose(commands.createGroup({\n      undo: this.cancel,\n      redo: noop\n    }, this, true));\n\n    this.onDispose(() => {\n      this._setTransforming(false);\n      this._fieldBuilder.columnTransform = null;\n      this.isCallPending(false);\n    });\n  }\n\n  /**\n   * Build dom function should be implemented by extending classes.\n   */\n  public buildDom() {\n    throw new Error(\"Not Implemented\");\n  }\n\n  public async finalize(): Promise<void> {\n    return this._triggerFinalize();\n  }\n\n  /**\n   * Build general transform editor dom.\n   * @param {String} optInit - Optional initial value for the editor.\n   */\n  protected buildEditorDom(optInit?: string) {\n    if (!this.editor) {\n      this.editor = this.autoDispose(AceEditor.create({\n        gristDoc: this.gristDoc,\n        observable: this.transformColumn.formula,\n        saveValueOnBlurEvent: false,\n      }));\n    }\n    return this.editor.buildDom((aceObj: any) => {\n      this.editor.adjustContentToWidth();\n      this.editor.attachSaveCommand();\n      aceObj.on('change', () => {\n        if (this.editor) {\n          this.formulaUpToDate.set(this.editor.getValue() === this.transformColumn.formula());\n        }\n      });\n      aceObj.focus();\n    });\n  }\n\n  /**\n   * Helper called by constructor to prepare the column transform.\n   * @param {String} colType: A pure or complete type for the transformed column.\n   */\n  public async prepare(optColType?: string) {\n    const colType: string = optColType || this.origColumn.type.peek();\n\n    // Start bundling all actions during the transform. The verification callback ensures\n    // no errant actions are added to the bundle; if there are, finalize is immediately called.\n    const bundlingInfo = this._tableData.docData.startBundlingActions({\n      description: `Transformed column ${this.origColumn.colId()}.`,\n      shouldIncludeInBundle: this._shouldIncludeInBundle.bind(this),\n      prepare: this._doPrepare.bind(this, colType),\n      finalize: this._doFinalize.bind(this)\n    });\n\n    // triggerFinalize tells DocData to call the finalize callback we passed above; this way\n    // DocData knows when it's finished.\n    this._triggerFinalize = bundlingInfo.triggerFinalize;\n\n    // preparePromise resolves once prepare() callback has got a chance to run and finish.\n    await bundlingInfo.preparePromise;\n  }\n\n  private async _doPrepare(colType: string) {\n    if (this.isDisposed()) { return; }\n    this.isCallPending(true);\n    try {\n      const newColRef = await this.addTransformColumn(colType);\n      // Set DocModel references\n      this.field.colRef(newColRef);\n      this.transformColumn = this.field.column();\n      this.transformColumn.origColRef(this.origColumn.getRowId());\n      this._setTransforming(true);\n      return this.postAddTransformColumn();\n    } finally {\n      this.isCallPending(false);\n    }\n  }\n\n  private _shouldIncludeInBundle(actions: UserAction[]) {\n    // Allow certain expected actions. If we encounter anything else, the user must have\n    // started doing something else, and we should finalize the transform.\n    return actions.every(action => (\n      // ['AddColumn', USER_TABLE, 'gristHelper_Transform', colInfo]\n      (action[2]?.toString().startsWith('gristHelper_Transform')) ||\n      // ['AddColumn', USER_TABLE, 'gristHelper_Converted', colInfo]\n      (action[2]?.toString().startsWith('gristHelper_Converted')) ||\n      // ['ConvertFromColumn', USER_TABLE, SOURCE_COLUMN, 'gristHelper_Converted']\n      (action[3]?.toString().startsWith('gristHelper_Converted')) ||\n      // [\"SetDisplayFormula\", USER_TABLE, ...]\n      (action[0] === 'SetDisplayFormula') ||\n      // ['UpdateRecord', '_grist_Table_column', transformColId, ...]\n      (action[1] === '_grist_Tables_column') ||\n      // ['UpdateRecord', '_grist_Views_section_field', transformColId, ...] (e.g. resize)\n      (action[1] === '_grist_Views_section_field')\n    ));\n  }\n\n  /**\n   * Adds the transform column and returns its colRef. May be overridden by derived classes to create\n   * differently-prepared transform columns.\n   * @param {String} colType: A pure or complete type for the transformed column.\n   */\n  protected async addTransformColumn(colType: string): Promise<number> {\n    // Retrieve widget options on prepare (useful for type transforms)\n    const newColInfo = await this._tableData.sendTableAction(['AddColumn', \"gristHelper_Transform\", {\n      type: colType,\n      isFormula: true,\n      formula: this.getIdentityFormula(),\n      ...(this.origWidgetOptions ? {widgetOptions: JSON.stringify(this.origWidgetOptions)} : {}),\n    }]);\n    if (this.rules) {\n      // We are in bundle, it is safe to just send another action.\n      // NOTE: We could add rules with AddColumn action, but there are some optimizations that converts array values.\n      await this.gristDoc.docData.sendActions([\n        ['UpdateRecord', '_grist_Tables_column', newColInfo.colRef, {rules: this.rules}]\n      ]);\n    }\n\n    return newColInfo.colRef;\n  }\n\n  /**\n   * A derived class can override to do some processing after this.transformColumn has been set.\n   */\n  protected postAddTransformColumn(): void {\n    // Nothing in base class.\n  }\n\n  public async cancel(): Promise<void> {\n    this._shouldExecute = false;\n    return this._triggerFinalize();\n  }\n\n  protected async execute(): Promise<void> {\n    this._shouldExecute = true;\n    return this._triggerFinalize();\n  }\n\n  // This is passed as a callback to startBundlingActions(), and should NOT be called directly.\n  // Instead, call _triggerFinalize() is used to trigger it.\n  private async _doFinalize(): Promise<void> {\n    if (this.isDisposed() || this._isFinalizing) {\n      return;\n    }\n    this._isFinalizing = true;\n\n    // Define variables used after await, since this will be disposed by then.\n    const transformColId = this.transformColumn.colId();\n    const field = this.field;\n    const origRef = this.origColumn.getRowId();\n    const tableData = this._tableData;\n    this.isCallPending(true);\n    try {\n      if (this._shouldExecute) {\n        // TODO: Values flicker during executing since transform column remains a formula as values are copied\n        // back to the original column. The CopyFromColumn useraction really ought to be \"CopyAndRemove\" since\n        // that seems the best way to avoid calculating the formula on wrong values.\n        await this.gristDoc.docData.sendActions(this.executeActions());\n      }\n    } finally {\n      // Wait until the change completed to set column back, to avoid value flickering.\n      field.colRef(origRef);\n      void tableData.sendTableAction(['RemoveColumn', transformColId]);\n      this.cleanup();\n      this.dispose();\n    }\n  }\n\n  /**\n   * The user actions to send when actually executing the transform.\n   */\n  protected executeActions(): UserAction[] {\n    const newWidgetOptions = isPlainObject(this.origWidgetOptions) ?\n     {...this.origWidgetOptions as object, ...this._fieldBuilder.options.peek()} :\n     this._fieldBuilder.options.peek();\n    return [\n      ...this.previewActions(),\n      [\n        'CopyFromColumn',\n        this._tableData.tableId,\n        this.transformColumn.colId.peek(),\n        this.origColumn.colId.peek(),\n        // Get the options from builder rather the transforming columns.\n        // Those options are supposed to be set by prepTransformColInfo(TypeTransform) and\n        // adjusted by client.\n        // TODO: is this really needed? Aren't those options already in the data-engine?\n        JSON.stringify(newWidgetOptions),\n      ],\n    ];\n  }\n\n  protected cleanup() {\n    // For overriding\n  }\n\n  protected getIdentityFormula() {\n    return 'return $' + this.origColumn.colId();\n  }\n\n  protected _setTransforming(bool: boolean) {\n    this.origColumn.isTransforming(bool);\n    this.transformColumn.isTransforming(bool);\n  }\n\n  protected isFinalizing(): boolean {\n    return this._isFinalizing;\n  }\n\n  protected preview() {\n    if (!this.editor) { return; }\n    return this.editor.writeObservable();\n  }\n\n  /**\n   * Generates final actions before executing the transform. Used only when the editor was created.\n   */\n  protected previewActions(): UserAction[] {\n    if (!this.editor) { return []; }\n    const formula = this.editor.getValue();\n    const oldFormula = this.transformColumn.formula();\n    if (formula === oldFormula) { return []; }\n    if (!formula && !oldFormula) { return []; }\n    return [\n      ['UpdateRecord', '_grist_Tables_column', this.transformColumn.getRowId(), {formula}]\n    ];\n  }\n}\n","/**\n * FormulaTransform extends ColumnTransform, creating the transform dom in the field config tab\n * used to transform a column of data using a formula. Allows the user to easily and quickly clean\n * data or change data to a more useful form.\n */\n\n// Client libraries\nimport {ColumnTransform} from 'app/client/components/ColumnTransform';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {cssButtonRow} from 'app/client/ui/RightPanelStyles';\nimport {basicButton, primaryButton} from 'app/client/ui2018/buttons';\nimport {testId} from 'app/client/ui2018/cssVars';\nimport {FieldBuilder} from 'app/client/widgets/FieldBuilder';\nimport {dom} from 'grainjs';\n\n/**\n * Creates an instance of FormulaTransform for a single field. Extends ColumnTransform.\n */\nexport class FormulaTransform extends ColumnTransform {\n  constructor(gristDoc: GristDoc, fieldBuilder: FieldBuilder) {\n    super(gristDoc, fieldBuilder);\n  }\n\n  /**\n   * Build the transform menu for a formula transform\n   */\n  public buildDom() {\n    return [\n      dom('div.transform_menu',\n        dom('div.transform_editor',\n          this.buildEditorDom(this.getIdentityFormula()),\n          testId(\"formula-transform-top\")\n        )\n      ),\n      cssButtonRow(\n        basicButton(dom.on('click', () => this.cancel()),\n          'Cancel', testId(\"formula-transform-cancel\")),\n        basicButton(dom.on('click', () => this.preview()),\n          'Preview',\n          dom.cls('disabled', this.formulaUpToDate),\n          { title: 'Update formula (Shift+Enter)' },\n          testId(\"formula-transform-update\")),\n        primaryButton(dom.on('click', () => this.execute()),\n          'Apply', testId(\"formula-transform-apply\"))\n      ),\n    ];\n  }\n}\n","/**\n * This module contains various logic for converting columns between types. It is used from\n * TypeTransform.js.\n */\n// tslint:disable:no-console\n\nimport {isString} from 'app/client/lib/sessionObs';\nimport {DocModel} from 'app/client/models/DocModel';\nimport {ColumnRec} from 'app/client/models/entities/ColumnRec';\nimport {csvDecodeRow} from 'app/common/csvFormat';\nimport * as gristTypes from 'app/common/gristTypes';\nimport {isFullReferencingType} from 'app/common/gristTypes';\nimport * as gutil from 'app/common/gutil';\nimport NumberParse from 'app/common/NumberParse';\nimport {dateTimeWidgetOptions, guessDateFormat, timeFormatOptions} from 'app/common/parseDate';\nimport {TableData} from 'app/common/TableData';\nimport {decodeObject} from 'app/plugin/objtypes';\n\ninterface ColInfo {\n  type: string;\n  isFormula: boolean;\n  formula: string;\n  visibleCol: number;\n  widgetOptions?: string;\n  rules: gristTypes.RefListValue\n}\n\n/**\n * Returns the suggested full type for `column` given a desired pure type to convert it to.\n * Specifically, a pure type of \"DateTime\" returns a full type of \"DateTime:{timezone}\", and \"Ref\"\n * returns a full type of \"Ref:{TableId}\". A `type` that's already complete is returned unchanged.\n */\nexport function addColTypeSuffix(type: string, column: ColumnRec, docModel: DocModel) {\n  switch (type) {\n    case \"Ref\":\n    case \"RefList\":\n    {\n      const refTableId = getRefTableIdFromData(docModel, column) || column.table().primaryTableId();\n      return `${type}:${refTableId}`;\n    }\n    case \"DateTime\":\n      return 'DateTime:' + docModel.docInfoRow.timezone();\n    default:\n      return type;\n  }\n}\n\n/**\n * Looks through the data of the given column to find the first value of the form\n * [R|r, <tableId>, <rowId>] (a Reference(List) value returned from a formula), and returns the tableId\n * from that.\n */\nfunction getRefTableIdFromData(docModel: DocModel, column: ColumnRec): string|null {\n  const tableData = docModel.docData.getTable(column.table().tableId());\n  const columnData = tableData && tableData.getColValues(column.colId());\n  if (columnData) {\n    for (const value of columnData) {\n      if (gristTypes.isReferencing(value)) {\n        return value[1];\n      } else if (gristTypes.isList(value)) {\n        const item = value[1];\n        if (gristTypes.isReference(item)) {\n          return item[1];\n        }\n      } else if (typeof value === 'string') {\n        // If it looks like a formatted Ref(List) value, e.g:\n        //   - Table1[123]\n        //   - [Table1[1], Table1[2], Table1[3]]\n        //   - Table1[[1, 2, 3]]\n        // and the tableId is valid,\n        // use it. (This helps if a Ref-returning formula column got converted to Text first.)\n        const match = value.match(/^\\[?(\\w+)\\[/);\n        if (match && docModel.docData.getTable(match[1])) {\n          return match[1];\n        }\n      }\n    }\n  }\n  return null;\n}\n\n\n// Given info about the original column, and the type of the new one, returns a promise for the\n// ColInfo to use for the transform column. Note that isFormula will be set to true, and formula\n// will be set to the expression to compute the new values from the old ones.\n// @param toTypeMaybeFull: Type to convert the column to, either full ('Ref:Foo') or pure ('Ref').\nexport async function prepTransformColInfo(docModel: DocModel, origCol: ColumnRec, origDisplayCol: ColumnRec,\n                                           toTypeMaybeFull: string, convertedRef: string): Promise<ColInfo> {\n  const toType = gristTypes.extractTypeFromColType(toTypeMaybeFull);\n  const tableData: TableData = docModel.docData.getTable(origCol.table().tableId())!;\n\n  const visibleCol = origCol.visibleColModel();\n  // Column used to derive previous widget options and sample values for guessing\n  const sourceCol = visibleCol.getRowId() !== 0 ? visibleCol : origCol;\n  let widgetOptions = {...(sourceCol.widgetOptionsJson() || {})};\n\n  if (isReferenceCol(origCol)) {\n    // While reference columns copy most options from their visible column, conditional style rules are kept\n    // from the original reference column for a few reasons:\n    // 1. The rule formula of the visible column is less likely to make sense after conversion,\n    //    especially if the reference points to a different table.\n    // 2. Overwriting the conditional styles of the original reference column could be annoying, whereas\n    //    most other widget options in reference columns aren't particularly valuable.\n    // 3. The `rules` column (i.e. a reflist to other formula columns) can't simply be copied because those rule columns\n    //    can't currently be shared by multiple columns.\n    // So in general we keep `rules: origCol.rules()` (further below) and the corresponding\n    // `widgetOptions.rulesOptions`.\n    // A quirk of this is that the default (non-conditional) cell style can still be copied from the visible column,\n    // so a subset of the overall cell styling can change.\n    delete widgetOptions.rulesOptions;\n    const {rulesOptions} = origCol.widgetOptionsJson() || {};\n    if (rulesOptions) {\n      widgetOptions.rulesOptions = rulesOptions;\n    }\n  }\n\n  const colInfo: ColInfo = {\n    type: addColTypeSuffix(toTypeMaybeFull, origCol, docModel),\n    isFormula: true,\n    visibleCol: 0,\n    formula: `rec.${convertedRef}`,\n    rules: origCol.rules(),\n  };\n\n  switch (toType) {\n    case 'Bool':\n      // Most types use a TextBox as the default widget.\n      // We don't want to reuse that for Toggle columns, which should be a CheckBox by default.\n      delete widgetOptions.widget;\n      break;\n    case 'Date':\n    case 'DateTime': {\n      let {dateFormat} = widgetOptions;\n      if (!dateFormat) {\n        // Guess date and time format if there aren't any already\n        const colValues = tableData.getColValues(sourceCol.colId()) || [];\n        dateFormat = guessDateFormat(colValues.map(String));\n        widgetOptions = {...widgetOptions, ...(dateTimeWidgetOptions(dateFormat, true))};\n      }\n      if (toType === 'DateTime' && !widgetOptions.timeFormat) {\n        // Ensure DateTime columns have a time format. This is needed when converting from a Date column.\n        widgetOptions.timeFormat = timeFormatOptions[0];\n        widgetOptions.isCustomTimeFormat = false;\n      }\n      break;\n    }\n    case 'Numeric':\n    case 'Int': {\n      if (![\"Numeric\", \"Int\"].includes(sourceCol.type())) {\n        const numberParse = NumberParse.fromSettings(docModel.docData.docSettings());\n        const colValues = tableData.getColValues(sourceCol.colId()) || [];\n        widgetOptions = {...widgetOptions, ...numberParse.guessOptions(colValues.filter(isString))};\n      }\n      break;\n    }\n    case 'Choice': {\n      // Use previous choices if they are set, e.g. if converting from ChoiceList\n      if (!Array.isArray(widgetOptions.choices)) {\n        // Set suggested choices. Limit to 100, since too many choices is more likely to cause\n        // trouble than desired behavior. For many choices, recommend using a Ref to helper table.\n        const columnData = tableData.getDistinctValues(sourceCol.colId(), 100);\n        if (columnData) {\n          columnData.delete(\"\");\n          columnData.delete(null);\n          widgetOptions = {...widgetOptions, choices: Array.from(columnData, String)};\n        }\n      }\n      break;\n    }\n    case 'ChoiceList': {\n      // Use previous choices if they are set, e.g. if converting from Choice\n      if (!Array.isArray(widgetOptions.choices)) {\n        // Set suggested choices. This happens before the conversion to ChoiceList, so we do some\n        // light guessing for likely choices to suggest.\n        const choices = new Set<string>();\n        for (let value of tableData.getColValues(sourceCol.colId()) || []) {\n          if (value === null) { continue; }\n          value = String(decodeObject(value)).trim();\n          const tags: unknown[] = (value.startsWith('[') && gutil.safeJsonParse(value, null)) || csvDecodeRow(value);\n          for (const tag of tags) {\n            choices.add(String(tag).trim());\n            if (choices.size > 100) { break; }    // Don't suggest excessively many choices.\n          }\n        }\n        choices.delete(\"\");\n        widgetOptions = {...widgetOptions, choices: Array.from(choices)};\n      }\n      break;\n    }\n    case 'Ref':\n    case 'RefList':\n    {\n      // Set suggested destination table and visible column.\n      // Undefined if toTypeMaybeFull is a pure type (e.g. converting to Ref before a table is chosen).\n      const optTableId = gutil.removePrefix(toTypeMaybeFull, `${toType}:`) || undefined;\n\n      let suggestedColRef: number;\n      let suggestedTableId: string;\n      const origColTypeInfo = gristTypes.extractInfoFromColType(origCol.type.peek());\n      if (!optTableId && (origColTypeInfo.type === \"Ref\" || origColTypeInfo.type === \"RefList\")) {\n        // When converting between Ref and Reflist, initially suggest the same table and visible column.\n        // When converting, if the table is the same, it's a special case.\n        // The visible column will not affect conversion.\n        // It will simply wrap the reference (row ID) in a list or extract the one element of a reference list.\n        suggestedColRef = origCol.visibleCol.peek();\n        suggestedTableId = origColTypeInfo.tableId;\n      } else {\n        // Finds a reference suggestion column and sets it as the current reference value.\n        const columnData = tableData.getDistinctValues(origDisplayCol.colId(), 100);\n        if (!columnData) { break; }\n        columnData.delete(gristTypes.getDefaultForType(origCol.type()));\n\n        // 'findColFromValues' function requires an array since it sends the values to the sandbox.\n        const matches: number[] = await docModel.docData.findColFromValues(Array.from(columnData), 2, optTableId);\n        suggestedColRef = matches.find(match => match !== origCol.getRowId())!;\n        if (!suggestedColRef) { break; }\n        const suggestedCol = docModel.columns.getRowModel(suggestedColRef);\n        suggestedTableId = suggestedCol.table().tableId();\n        if (optTableId && suggestedTableId !== optTableId) {\n          console.warn(\"Inappropriate column received from findColFromValues\");\n          break;\n        }\n      }\n      colInfo.type = `${toType}:${suggestedTableId}`;\n      colInfo.visibleCol = suggestedColRef;\n      break;\n    }\n  }\n\n  if (Object.keys(widgetOptions).length) {\n    colInfo.widgetOptions = JSON.stringify(widgetOptions);\n  }\n  return colInfo;\n}\n\n// Given the transformCol, calls (if needed) a user action to update its displayCol.\nexport async function setDisplayFormula(\n  docModel: DocModel, transformCol: ColumnRec, visibleCol?: number\n): Promise<void> {\n  const vcolRef = (visibleCol == null) ? transformCol.visibleCol() : visibleCol;\n  if (isReferenceCol(transformCol)) {\n    const vcol = getVisibleColName(docModel, vcolRef);\n    const tcol = transformCol.colId();\n    const displayFormula = (vcolRef === 0 ? '' : `$${tcol}.${vcol}`);\n    return transformCol.saveDisplayFormula(displayFormula);\n  }\n}\n\n// Returns the name of the visibleCol given its rowId.\nfunction getVisibleColName(docModel: DocModel, visibleColRef: number): string|undefined {\n  return visibleColRef ? docModel.columns.getRowModel(visibleColRef).colId() : undefined;\n}\n\n// Returns whether the given column model is of type Ref or RefList.\nfunction isReferenceCol(colModel: ColumnRec) {\n  return isFullReferencingType(colModel.type());\n}\n","/**\n * TypeTransform extends ColumnTransform, creating the transform dom prompt that is shown when the\n * user changes the type of a data column. The purpose is to aid the user in converting data to the new\n * type by allowing a formula to be applied prior to conversion. It also allows for program-generated formulas\n * to be pre-entered for certain transforms (to Reference / Date) which the user can modify via dropdown menus.\n */\n\nimport {ColumnTransform} from 'app/client/components/ColumnTransform';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport * as TypeConversion from 'app/client/components/TypeConversion';\nimport {reportError} from 'app/client/models/errors';\nimport {cssButtonRow} from 'app/client/ui/RightPanelStyles';\nimport {basicButton, primaryButton} from 'app/client/ui2018/buttons';\nimport {testId} from 'app/client/ui2018/cssVars';\nimport {FieldBuilder} from 'app/client/widgets/FieldBuilder';\nimport {ColumnRec} from 'app/client/models/DocModel';\nimport {NewAbstractWidget} from 'app/client/widgets/NewAbstractWidget';\nimport {UserAction} from 'app/common/DocActions';\nimport {Computed, dom, fromKo, Observable} from 'grainjs';\nimport {makeT} from 'app/client/lib/localization';\n\nconst t = makeT('TypeTransform');\n\n// To simplify diff (avoid rearranging methods to satisfy private/public order).\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/**\n * Creates an instance of TypeTransform for a single field. Extends ColumnTransform.\n */\nexport class TypeTransform extends ColumnTransform {\n  private _reviseTypeChange = Observable.create(this, false);\n  private _transformWidget: Computed<NewAbstractWidget|null>;\n  private _convertColumn: ColumnRec;                 // Set in prepare()\n\n  constructor(gristDoc: GristDoc, fieldBuilder: FieldBuilder) {\n    super(gristDoc, fieldBuilder);\n    this._shouldExecute = true;\n\n    // The display widget of the new transform column. Used to build the transform config menu.\n    // Only set while transforming.\n    this._transformWidget = Computed.create(this, fromKo(fieldBuilder.widgetImpl), (use, widget) => {\n      return use(this.origColumn.isTransforming) ? widget : null;\n    });\n  }\n\n  /**\n   * Build the transform menu for a type transform\n   */\n  public buildDom() {\n    // An observable to disable all buttons before the dom get removed.\n    const disableButtons = Observable.create(null, false);\n    this._reviseTypeChange.set(false);\n    return dom('div',\n      testId('type-transform-top'),\n      dom.maybe(this._transformWidget, transformWidget => transformWidget.buildTransformConfigDom()),\n      dom.maybe(this._reviseTypeChange, () =>\n        dom('div.transform_editor', this.buildEditorDom(),\n          testId(\"type-transform-formula\")\n        )\n      ),\n      cssButtonRow(\n        basicButton(dom.on('click', () => { this.cancel().catch(reportError); disableButtons.set(true); }),\n          t('Cancel'), testId(\"type-transform-cancel\"),\n          dom.cls('disabled', disableButtons)\n        ),\n        dom.domComputed(this._reviseTypeChange, revising => {\n          if (revising) {\n            return basicButton(dom.on('click', () => this.preview()),\n              t('Preview'), testId(\"type-transform-update\"),\n              dom.cls('disabled', (use) => use(disableButtons) || use(this.formulaUpToDate)),\n              { title: t('Update formula (Shift+Enter)') }\n            );\n          } else {\n            return basicButton(dom.on('click', () => { this._reviseTypeChange.set(true); }),\n              t('Revise'), testId(\"type-transform-revise\"),\n              dom.cls('disabled', disableButtons)\n            );\n          }\n        }),\n        primaryButton(dom.on('click', () => { this.execute().catch(reportError); disableButtons.set(true); }),\n          t('Apply'), testId(\"type-transform-apply\"),\n          dom.cls('disabled', disableButtons)\n        )\n      )\n    );\n  }\n\n  /**\n   * Overrides parent method to initialize the transform column with guesses as to the particular\n   * type and column options.\n   * @param {String} toType: A pure or complete type for the transformed column.\n   */\n  protected async addTransformColumn(toType: string) {\n    const docModel = this.gristDoc.docModel;\n    const newColInfos = await this._tableData.sendTableActions([\n      ['AddColumn', 'gristHelper_Converted', {type: 'Any'}],\n      ['AddColumn', 'gristHelper_Transform', {type: 'Any'}],\n    ]);\n    const gristHelper_ConvertedRef = newColInfos[0].colRef;\n    const gristHelper_TransformRef = newColInfos[1].colRef;\n    this.transformColumn = docModel.columns.getRowModel(gristHelper_TransformRef);\n    this._convertColumn = docModel.columns.getRowModel(gristHelper_ConvertedRef);\n    const colInfo = await TypeConversion.prepTransformColInfo(\n      docModel, this.origColumn,\n      this.origDisplayCol, toType, this._convertColumn.colId.peek());\n    // NOTE: We could add rules with AddColumn action, but there are some optimizations that converts array values.\n    const rules = colInfo.rules;\n    delete (colInfo as any).rules;\n    await this._tableData.sendTableActions([\n      ['ModifyColumn', this._convertColumn.colId.peek(), {...colInfo, isFormula: false, formula: ''}],\n      ['ModifyColumn', this.transformColumn.colId.peek(), colInfo],\n    ]);\n    if (rules) {\n      await this.gristDoc.docData.sendActions([\n        ['UpdateRecord', '_grist_Tables_column', gristHelper_TransformRef, { rules }]\n      ]);\n    }\n    await this.convertValues();\n    return gristHelper_TransformRef;\n  }\n\n  protected convertValuesActions(): UserAction[] {\n    const tableId = this._tableData.tableId;\n    const srcColId = this.origColumn.colId.peek();\n    const dstColId = this._convertColumn.colId.peek();\n    const type = this.transformColumn.type.peek();\n    const widgetOptions = this.transformColumn.widgetOptions.peek();\n    const visibleColRef = this.transformColumn.visibleCol.peek();\n    return [['ConvertFromColumn', tableId, srcColId, dstColId, type, widgetOptions, visibleColRef]];\n  }\n\n  protected async convertValues() {\n    await Promise.all([\n      this.gristDoc.docData.sendActions(this.convertValuesActions()),\n      TypeConversion.setDisplayFormula(this.gristDoc.docModel, this.transformColumn),\n    ]);\n  }\n\n  protected executeActions(): UserAction[] {\n    return [...this.convertValuesActions(), ...super.executeActions()];\n  }\n\n  /**\n   * Overrides parent method to subscribe to changes to the transform column.\n   */\n  protected postAddTransformColumn() {\n    // When a user-initiated change is saved to type or widgetOptions, reconvert the values\n    // Need to subscribe to both 'change' and 'save' for type which can come from setting the type itself\n    // or e.g. a change to DateTime timezone.\n    this.autoDispose(this.transformColumn.type.subscribe(this.convertValues, this, \"change\"));\n    this.autoDispose(this.transformColumn.type.subscribe(this.convertValues, this, \"save\"));\n    this.autoDispose(this.transformColumn.visibleCol.subscribe(this.convertValues, this, \"save\"));\n    this.autoDispose(this.field.widgetOptionsJson.subscribe(this.convertValues, this, \"save\"));\n  }\n\n  /**\n   * Overrides parent method to delete extra column\n   */\n  protected cleanup() {\n    void this._tableData.sendTableAction(['RemoveColumn', this._convertColumn.colId.peek()]);\n  }\n\n  /**\n   * When a type is changed, again guess appropriate column options.\n   */\n  public async setType(toType: string) {\n    const docModel = this.gristDoc.docModel;\n    const colInfo = await TypeConversion.prepTransformColInfo(\n      docModel, this.origColumn, this.origDisplayCol,\n      toType, this._convertColumn.colId.peek());\n    const tcol = this.transformColumn;\n    await tcol.updateColValues(colInfo as any);\n  }\n}\n","import {makeT} from 'app/client/lib/localization';\nimport {menuItem, menuSubHeader} from 'app/client/ui2018/menus';\nimport {dom} from 'grainjs';\n\ninterface IFieldOptions {\n  useSeparate: () => void;\n  saveAsCommon: () => void;\n  revertToCommon: () => void;\n}\n\nconst t = makeT('FieldMenus');\n\nexport function FieldSettingsMenu(useColOptions: boolean, disableSeparate: boolean, actions: IFieldOptions) {\n  useColOptions = useColOptions || disableSeparate;\n  return [\n    menuSubHeader(useColOptions ? t(\"Using common settings\") : t(\"Using separate settings\")),\n    useColOptions ? menuItem(actions.useSeparate, t(\"Use separate settings\"), dom.cls('disabled', disableSeparate)) : [\n      menuItem(actions.saveAsCommon, t(\"Save as common settings\")),\n      menuItem(actions.revertToCommon, t(\"Revert to common settings\")),\n    ]\n  ];\n}\n","import { DataRowModel } from 'app/client/models/DataRowModel';\nimport { NewAbstractWidget } from 'app/client/widgets/NewAbstractWidget';\nimport { CellValue } from 'app/common/DocActions';\nimport { isVersions } from 'app/common/gristTypes';\nimport { inlineStyle } from 'app/common/gutil';\nimport { BaseFormatter } from 'app/common/ValueFormatter';\nimport { Diff, DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT, diff_match_patch as DiffMatchPatch } from 'diff-match-patch';\nimport { Computed, dom } from 'grainjs';\n\n/**\n *\n * A special widget used for rendering cell-level comparisons and conflicts.\n *\n */\nexport class DiffBox extends NewAbstractWidget {\n\n  private _diffTool = new DiffMatchPatch();\n\n  public buildConfigDom() {\n    return dom('div');\n  }\n\n  /**\n   * Render a cell-level diff as a series of styled spans.\n   */\n  public buildDom(row: DataRowModel) {\n    const formattedValue = Computed.create(null, (use) => {\n      if (use(row._isAddRow) || this.isDisposed() || use(this.field.displayColModel).isDisposed()) {\n        // Work around JS errors during certain changes, following code in Reference.js\n        return [] as Diff[];\n      }\n      const value = use(row.cells[use(use(this.field.displayColModel).colId)]);\n      const formatter = use(this.valueFormatter);\n      return this._prepareCellDiff(value, formatter);\n    });\n    return dom(\n      'div.field_clip',\n      dom.autoDispose(formattedValue),\n      dom.style('text-align', this.options.prop('alignment')),\n      dom.cls('text_wrapping', (use) => Boolean(use(this.options.prop('wrap')))),\n      inlineStyle('--grist-diff-color', '#000000'),\n      inlineStyle('--grist-diff-background-color', '#00000000'),\n      dom.forEach(formattedValue, ([code, txt]) => {\n        if (code === DIFF_DELETE) {\n          return dom(\"span.diff-parent\", txt);\n        } else if (code === DIFF_INSERT) {\n          return dom(\"span.diff-remote\", txt);\n        } else if (code === DIFF_LOCAL) {\n          return dom(\"span.diff-local\", txt);\n        } else {\n          return dom(\"span.diff-common\", txt);\n        }\n      }),\n    );\n  }\n\n  /**\n   * Given the cell value and the formatter, construct a list of fragments in\n   * diff-match-patch format expressing the difference between versions.\n   * The format is a list of [CODE, STRING] pairs, where the possible values of\n   * CODE are:\n   *   -1  -- meaning DELETION of the parent value.\n   *    0  -- meaning text common to all versions.\n   *    1  -- meaning INSERTION of the remote value.\n   *    2  -- meaning INSERTION of the local value.\n   *\n   * When a change is made only locally or remotely, then the list returned may\n   * include common text, deletions and insertions in any order.\n   *\n   * When a change is made both locally and remotely, the list returned does not\n   * include any common text, but just reports the parent value, then the local value,\n   * then the remote value.  This may be optimized in future.\n   */\n  private _prepareCellDiff(value: CellValue, formatter: BaseFormatter): Diff[] {\n    if (!isVersions(value)) {\n      // This can happen for reference columns, where the diff widget is\n      // selected on the basis of one column, but we are displaying the\n      // content of another.  We have more version information for the\n      // reference column than for its display column.\n      return [[DIFF_EQUAL, formatter.formatAny(value)]];\n    }\n    const versions = value[1];\n    if (!('local' in versions)) {\n      // Change was made remotely only.\n      return this._prepareTextDiff(\n        formatter.formatAny(versions.parent),\n        formatter.formatAny(versions.remote));\n    } else if (!('remote' in versions)) {\n      // Change was made locally only.\n      return this._prepareTextDiff(\n        formatter.formatAny(versions.parent),\n        formatter.formatAny(versions.local))\n        .map(([code, txt]) => [code === DIFF_INSERT ? DIFF_LOCAL : code, txt]);\n    }\n    // Change was made both locally and remotely.\n    return [[DIFF_DELETE, formatter.formatAny(versions.parent)],\n            [DIFF_LOCAL, formatter.formatAny(versions.local)],\n            [DIFF_INSERT, formatter.formatAny(versions.remote)]];\n  }\n\n  // Run diff-match-patch on the text, do its cleanup, and then some extra\n  // ad-hoc cleanup of our own.  Diffs are hard to read if they are too\n  // \"choppy\".\n  private _prepareTextDiff(txt1: string, txt2: string): Diff[] {\n    const diffs = this._diffTool.diff_main(txt1, txt2);\n    this._diffTool.diff_cleanupSemantic(diffs);\n    if (diffs.length > 2 && this._notDiffWorthy(txt1, diffs.length) &&\n        this._notDiffWorthy(txt2, diffs.length)) {\n      return [[DIFF_DELETE, txt1], [DIFF_INSERT, txt2]];\n    }\n    if (diffs.length === 1 && diffs[0][0] === DIFF_DELETE) {\n      // Add an empty set symbol, since otherwise it will be ambiguous\n      // whether the deletion was done locally or remotely.\n      diffs.push([1, '\\u2205']);\n    }\n    return diffs;\n  }\n\n  // Heuristic for whether to show common parts of versions, or to treat them\n  // as entirely distinct.\n  private _notDiffWorthy(txt: string, parts: number) {\n    return txt.length < 5 * parts || this._isMostlyNumeric(txt);\n  }\n\n  // Check is text has a lot of numeric content.\n  private _isMostlyNumeric(txt: string) {\n    return [...txt].filter(c => c >= '0' && c <= '9').length > txt.length / 2;\n  }\n}\n\n// A constant marking text fragments present locally but not in parent (or remote).\n// Must be distinct from DiffMatchPatch.DIFF_* constants (-1, 0, 1).\nconst DIFF_LOCAL = 2;\n","import {CellValue} from \"app/common/DocActions\";\nimport * as commands from 'app/client/components/commands';\nimport {dragOverClass} from 'app/client/lib/dom';\nimport {selectFiles, uploadFiles} from 'app/client/lib/uploads';\nimport {cssRow} from 'app/client/ui/RightPanelStyles';\nimport {colors, testId, vars} from 'app/client/ui2018/cssVars';\nimport {NewAbstractWidget} from 'app/client/widgets/NewAbstractWidget';\nimport {encodeQueryParams} from 'app/common/gutil';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {DataRowModel} from 'app/client/models/DataRowModel';\nimport {MetaTableData} from 'app/client/models/TableData';\nimport { SingleCell } from 'app/common/TableData';\nimport {KoSaveableObservable} from 'app/client/models/modelUtil';\nimport {UploadResult} from 'app/common/uploads';\nimport { GristObjCode } from 'app/plugin/GristData';\nimport {Computed, dom, fromKo, input, onElem, styled} from 'grainjs';\nimport {extname} from 'path';\n\n\n/**\n * AttachmentsWidget - A widget for displaying attachments as image previews.\n */\nexport class AttachmentsWidget extends NewAbstractWidget {\n\n  private _attachmentsTable: MetaTableData<'_grist_Attachments'>;\n  private _height: KoSaveableObservable<string>;\n\n  constructor(field: ViewFieldRec) {\n    super(field);\n\n    // TODO: the Attachments table currently treated as metadata, and loaded on open,\n    // but should probably be loaded on demand as it contains user data, which may be large.\n    this._attachmentsTable = this._getDocData().getMetaTable('_grist_Attachments');\n\n    this._height = this.options.prop('height');\n\n    this.autoDispose(this._height.subscribe(() => {\n      this.field.viewSection().events.trigger('rowHeightChange');\n    }));\n  }\n\n  public buildDom(row: DataRowModel) {\n    // NOTE: A cellValue of the correct type includes the list encoding designator 'L' as the\n    // first element.\n    const cellValue = row.cells[this.field.colId()];\n    const values = Computed.create(null, fromKo(cellValue), (use, _cellValue) =>\n      Array.isArray(_cellValue) ? _cellValue.slice(1) as number[] : []);\n\n    const colId = this.field.colId();\n    const tableId = this.field.column().table().tableId();\n    return cssAttachmentWidget(\n      dom.autoDispose(values),\n\n      dom.cls('field_clip'),\n      dragOverClass('attachment_drag_over'),\n      cssAttachmentIcon(\n        cssAttachmentIcon.cls('-hover', (use) => use(values).length > 0),\n        dom.on('click', () => this._selectAndSave(row, cellValue)),\n        testId('attachment-icon'),\n      ),\n      dom.maybe<number>(row.id, rowId => {\n        return dom.forEach(values, (value: number) =>\n          isNaN(value) ? null : this._buildAttachment(value, values, {\n            rowId, colId, tableId,\n          }));\n      }),\n      dom.on('drop', ev => this._uploadAndSave(row, cellValue, ev.dataTransfer!.files)),\n      testId('attachment-widget'),\n    );\n  }\n\n  public buildConfigDom(): Element {\n    const options = this.field.config.options;\n    const height = options.prop('height');\n    const inputRange = input(\n      fromKo(height),\n      {onInput: true}, {\n        style: 'margin: 0 5px;',\n        type: 'range',\n        min: '16',\n        max: '96',\n        value: '36'\n      },\n      testId('pw-thumbnail-size'),\n      // When multiple columns are selected, we can only edit height when all\n      // columns support it.\n      dom.prop('disabled', use => use(options.disabled('height'))),\n    );\n    // Save the height on change event (when the user releases the drag button)\n    onElem(inputRange, 'change', (ev: Event) => {\n      height.setAndSave(inputRange.value).catch(reportError);\n    });\n    return cssRow(\n      cssSizeLabel('Size'),\n      inputRange\n    );\n  }\n\n  protected _buildAttachment(value: number, allValues: Computed<number[]>, cell: SingleCell): Element {\n    const filename = this._attachmentsTable.getValue(value, 'fileName')!;\n    const fileIdent = this._attachmentsTable.getValue(value, 'fileIdent')!;\n    const height = this._attachmentsTable.getValue(value, 'imageHeight')!;\n    const width = this._attachmentsTable.getValue(value, 'imageWidth')!;\n    const hasPreview = Boolean(height);\n    const ratio = hasPreview ? (width / height) : 1;\n\n    return cssAttachmentPreview({title: filename}, // Add a filename tooltip to the previews.\n      dom.style('height', (use) => `${use(this._height)}px`),\n      dom.style('width', (use) => `${parseInt(use(this._height), 10) * ratio}px`),\n      // TODO: Update to legitimately determine whether a file preview exists.\n      hasPreview ? dom('img', {style: 'height: 100%; min-width: 100%; vertical-align: top;'},\n        dom.attr('src', this._getUrl(value, cell))\n      ) : renderFileType(filename, fileIdent, this._height),\n      // Open editor as if with input, using it to tell it which of the attachments to show. We\n      // pass in a 1-based index. Hitting a key opens the cell, and this approach allows an\n      // accidental feature of opening e.g. second attachment by hitting \"2\".\n      dom.on('dblclick', () => commands.allCommands.input.run(String(allValues.get().indexOf(value) + 1))),\n      testId('pw-thumbnail'),\n    );\n  }\n\n  // Returns the attachment download url.\n  private _getUrl(attId: number, cell: SingleCell): string {\n    const docComm = this._getDocComm();\n    return docComm.docUrl('attachment') + '?' + encodeQueryParams({\n      ...docComm.getUrlParams(),\n      ...cell,\n      attId,\n      name: this._attachmentsTable.getValue(attId, 'fileName')\n    });\n  }\n\n  private async _selectAndSave(row: DataRowModel, value: KoSaveableObservable<CellValue>): Promise<void> {\n    const uploadResult = await selectFiles({docWorkerUrl: this._getDocComm().docWorkerUrl,\n                                            multiple: true, sizeLimit: 'attachment'});\n    return this._save(row, value, uploadResult);\n  }\n\n  private async _uploadAndSave(row: DataRowModel, value: KoSaveableObservable<CellValue>,\n        files: FileList): Promise<void> {\n    const uploadResult = await uploadFiles(Array.from(files),\n                                           {docWorkerUrl: this._getDocComm().docWorkerUrl,\n                                            sizeLimit: 'attachment'});\n    return this._save(row, value, uploadResult);\n  }\n\n  private async _save(row: DataRowModel, value: KoSaveableObservable<CellValue>,\n        uploadResult: UploadResult|null\n  ): Promise<void> {\n    if (!uploadResult) { return; }\n    const rowIds = await this._getDocComm().addAttachments(uploadResult.uploadId);\n    // Values should be saved with a leading \"L\" to fit Grist's list value encoding.\n    const formatted: CellValue = value() ? value() : [GristObjCode.List];\n    const newValue = (formatted as number[]).concat(rowIds) as CellValue;\n\n    // Move the cursor here (note that this may involve switching active section when dragging\n    // into a cell of an inactive section). Then send the 'input' command; it is normally used for\n    // key presses to open an editor; here the \"typed text\" is the new value. It is handled by\n    // AttachmentsEditor.skipEditor(), and makes the edit apply to editRow, which handles setting\n    // default values based on widget linking.\n    commands.allCommands.setCursor.run(row, this.field);\n    commands.allCommands.input.run(newValue);\n  }\n}\n\nexport function renderFileType(fileName: string, fileIdent: string, height?: ko.Observable<string>): HTMLElement {\n  // Prepend 'x' to ensure we return the extension even if the basename is empty (e.g. \".xls\").\n  // Take slice(1) to strip off the leading period.\n  const extension = extname('x' + fileName).slice(1) || extname('x' + fileIdent).slice(1) || '?';\n  return cssFileType(extension.toUpperCase(),\n    height && cssFileType.cls((use) => {\n      const size = parseFloat(use(height));\n      return size < 28 ? '-small' : size < 60 ? '-medium' : '-large';\n    }),\n  );\n}\n\nconst cssAttachmentWidget = styled('div', `\n  display: flex;\n  flex-wrap: wrap;\n  white-space: pre-wrap;\n\n  &.attachment_drag_over {\n    outline: 2px dashed #ff9a00;\n    outline-offset: -2px;\n  }\n`);\n\nconst cssAttachmentIcon = styled('div.glyphicon.glyphicon-paperclip', `\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  padding: 2px;\n  background-color: #D0D0D0;\n  color: white;\n  border-radius: 2px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 0 0 0 1px white;\n  z-index: 1;\n\n  &:hover {\n    background-color: #3290BF;\n  }\n\n  &-hover {\n    display: none;\n  }\n  .${cssAttachmentWidget.className}:hover &-hover {\n    display: inline;\n  }\n`);\n\nconst cssAttachmentPreview = styled('div', `\n  color: black;\n  background-color: white;\n  border: 1px solid #bbb;\n  margin: 0 2px 2px 0;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 0;\n  &:hover {\n    border-color: ${colors.lightGreen};\n  }\n`);\n\nconst cssSizeLabel = styled('div', `\n  color: ${colors.slate};\n  margin-right: 9px;\n`);\n\n\nconst cssFileType = styled('div', `\n  height: 100%;\n  width: 100%;\n  max-height: 80px;\n  max-width: 80px;\n  background-color: ${colors.slate};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${vars.mediumFontSize};\n  font-weight: bold;\n  color: white;\n  overflow: hidden;\n\n  &-small { font-size: ${vars.xxsmallFontSize}; }\n  &-medium { font-size: ${vars.smallFontSize}; }\n  &-large { font-size: ${vars.mediumFontSize}; }\n`);\n","// External dependencies\nimport {computed, Computed, computedArray} from 'grainjs';\nimport {MutableObsArray, obsArray, ObsArray, observable, Observable} from 'grainjs';\nimport {dom, LiveIndex, makeLiveIndex, styled} from 'grainjs';\n\n// Grist client libs\nimport {DocComm} from 'app/client/components/DocComm';\nimport {selectFiles, uploadFiles} from 'app/client/lib/uploads';\nimport {DocData} from 'app/client/models/DocData';\nimport {MetaTableData} from 'app/client/models/TableData';\nimport {basicButton, basicButtonLink, cssButtonGroup} from 'app/client/ui2018/buttons';\nimport {colors, testId, vars} from 'app/client/ui2018/cssVars';\nimport {editableLabel} from 'app/client/ui2018/editableLabel';\nimport {icon} from 'app/client/ui2018/icons';\nimport {IModalControl, modal} from 'app/client/ui2018/modals';\nimport {renderFileType} from 'app/client/widgets/AttachmentsWidget';\nimport {FieldOptions, NewBaseEditor} from 'app/client/widgets/NewBaseEditor';\nimport {CellValue} from 'app/common/DocActions';\nimport {SingleCell} from 'app/common/TableData';\nimport {clamp, encodeQueryParams} from 'app/common/gutil';\nimport {UploadResult} from 'app/common/uploads';\nimport * as mimeTypes from 'mime-types';\n\ninterface Attachment {\n  rowId: number;\n\n  // Checksum of the file content, with extension, which identifies the file data in the _gristsys_Files table.\n  fileIdent: string;\n\n  // MIME type of the data (looked up from fileIdent's extension).\n  fileType: string;\n\n  // User-defined filename of the attachment. An observable to support renaming.\n  filename: Observable<string>;\n\n  // Whether the attachment is an image, indicated by the presence of imageHeight in the record.\n  hasPreview: boolean;\n\n  // The download URL of the attachment; served with Content-Disposition of \"attachment\".\n  url: Observable<string>;\n\n  // The inline URL of the attachment; served with Content-Disposition of \"inline\".\n  inlineUrl: Observable<string>;\n}\n\n/**\n * An AttachmentsEditor shows a full-screen modal with attachment previews, and options to rename,\n * download, add or remove attachments in the edited cell.\n */\nexport class AttachmentsEditor extends NewBaseEditor {\n  public static skipEditor(typedVal: CellValue|undefined, origVal: CellValue): CellValue|undefined {\n    if (Array.isArray(typedVal)) {\n      return typedVal;\n    }\n  }\n\n  private _attachmentsTable: MetaTableData<'_grist_Attachments'>;\n  private _docComm: DocComm;\n\n  private _rowIds: MutableObsArray<number>;\n  private _attachments: ObsArray<Attachment>;\n  private _index: LiveIndex;\n  private _selected: Computed<Attachment|null>;\n\n  constructor(options: FieldOptions) {\n    super(options);\n\n    const docData: DocData = options.gristDoc.docData;\n    const cellValue: CellValue = options.cellValue;\n    const cell: SingleCell = {\n      rowId: options.rowId,\n      colId: options.field.colId(),\n      tableId: options.field.column().table().tableId(),\n    };\n\n    // editValue is abused slightly to indicate a 1-based index of the attachment.\n    const initRowIndex: number|undefined = (options.editValue && parseInt(options.editValue, 0) - 1) || 0;\n\n    this._attachmentsTable = docData.getMetaTable('_grist_Attachments');\n    this._docComm = docData.docComm;\n\n    this._rowIds = obsArray(Array.isArray(cellValue) ? cellValue.slice(1) as number[] : []);\n    this._attachments = computedArray(this._rowIds, (val: number): Attachment => {\n      const fileIdent: string = this._attachmentsTable.getValue(val, 'fileIdent')!;\n      const fileType = mimeTypes.lookup(fileIdent) || 'application/octet-stream';\n      const filename: Observable<string> =\n        observable(this._attachmentsTable.getValue(val, 'fileName')!);\n      return {\n        rowId: val,\n        fileIdent,\n        fileType,\n        filename,\n        hasPreview: Boolean(this._attachmentsTable.getValue(val, 'imageHeight')),\n        url: computed((use) => this._getUrl(cell, val, use(filename))),\n        inlineUrl: computed((use) => this._getUrl(cell, val, use(filename), true))\n      };\n    });\n    this._index = makeLiveIndex(this, this._attachments, initRowIndex);\n    this._selected = this.autoDispose(computed((use) => {\n      const index = use(this._index);\n      return index === null ? null : use(this._attachments)[index];\n    }));\n  }\n\n  // This \"attach\" is not about \"attachments\", but about attaching this widget to the page DOM.\n  public attach(cellElem: Element) {\n    modal((ctl, owner) => {\n      // If FieldEditor is disposed externally (e.g. on navigation), be sure to close the modal.\n      this.onDispose(ctl.close);\n      return [\n        cssFullScreenModal.cls(''),\n        dom.onKeyDown({\n          Enter: (ev) => { ctl.close(); this.options.commands.fieldEditSaveHere(); },\n          Escape: (ev) => { ctl.close(); this.options.commands.fieldEditCancel(); },\n          ArrowLeft$: (ev) => !isInEditor(ev) && this._moveIndex(-1),\n          ArrowRight$: (ev) => !isInEditor(ev) && this._moveIndex(1),\n        }),\n        // Close if clicking into the background. (The default modal's behavior for this isn't\n        // triggered because our content covers the whole screen.)\n        dom.on('click', (ev, elem) => { if (ev.target === elem) { ctl.close(); } }),\n        ...this._buildDom(ctl)\n      ];\n    }, {noEscapeKey: true});\n  }\n\n  public getCellValue() {\n    return [\"L\", ...this._rowIds.get()] as CellValue;\n  }\n\n  public getCursorPos(): number {\n    return 0;\n  }\n\n  public getTextValue(): string {\n    return '';\n  }\n\n  // Builds the attachment preview modal.\n  private _buildDom(ctl: IModalControl) {\n    return [\n      cssHeader(\n        cssFlexExpand(dom.text(use => {\n            const len = use(this._attachments).length;\n            return len ? `${(use(this._index) || 0) + 1} of ${len}` : '';\n          }),\n          testId('pw-counter')\n        ),\n        dom.maybe(this._selected, selected =>\n          cssTitle(\n            cssEditableLabel(selected.filename, {\n              save: (val) => this._renameAttachment(selected, val),\n              inputArgs: [testId('pw-name')],\n            }),\n          )\n        ),\n        cssFlexExpand(\n          cssFileButtons(\n            dom.maybe(this._selected, selected =>\n              basicButtonLink(cssButton.cls(''), cssButtonIcon('Download'), 'Download',\n                dom.attr('href', selected.url),\n                dom.attr('target', '_blank'),\n                dom.attr('download', selected.filename),\n                testId('pw-download')\n              ),\n            ),\n            this.options.readonly ? null : [\n              cssButton(cssButtonIcon('FieldAttachment'), 'Add',\n                dom.on('click', () => this._select()),\n                testId('pw-add')\n              ),\n              dom.maybe(this._selected, () =>\n                cssButton(cssButtonIcon('Remove'), 'Delete',\n                  dom.on('click', () => this._remove()),\n                  testId('pw-remove')\n                ),\n              )\n            ]\n          ),\n          cssCloseButton(cssBigIcon('CrossBig'), dom.on('click', () => ctl.close()),\n            testId('pw-close')),\n        )\n      ),\n      cssNextArrow(cssNextArrow.cls('-left'), cssBigIcon('Expand'), testId('pw-left'),\n        dom.hide(use => !use(this._attachments).length || use(this._index) === 0),\n        dom.on('click', () => this._moveIndex(-1))\n      ),\n      cssNextArrow(cssNextArrow.cls('-right'), cssBigIcon('Expand'), testId('pw-right'),\n        dom.hide(use => !use(this._attachments).length || use(this._index) === use(this._attachments).length - 1),\n        dom.on('click', () => this._moveIndex(1))\n      ),\n      dom.domComputed(this._selected, selected => renderContent(selected, this.options.readonly)),\n\n      // Drag-over logic\n      (elem: HTMLElement) => dragOverClass(elem, cssDropping.className),\n      cssDragArea(this.options.readonly ? null : cssWarning('Drop files here to attach')),\n      this.options.readonly ? null : dom.on('drop', ev => this._upload(ev.dataTransfer!.files)),\n      testId('pw-modal')\n    ];\n  }\n\n  private async _renameAttachment(att: Attachment, fileName: string): Promise<void> {\n    await this._attachmentsTable.sendTableAction(['UpdateRecord', att.rowId, {fileName}]);\n    // Update the observable, since it's not on its own observing changes.\n    att.filename.set(this._attachmentsTable.getValue(att.rowId, 'fileName')!);\n  }\n\n  private _getUrl(cell: SingleCell, attId: number, filename: string, inline?: boolean): string {\n    return this._docComm.docUrl('attachment') + '?' + encodeQueryParams({\n      ...this._docComm.getUrlParams(),\n      name: filename,\n      ...cell,\n      maybeNew: 1,  // The attachment may be uploaded by the user but not stored in the cell yet.\n      attId,\n      ...(inline ? {inline: 1} : {})\n    });\n  }\n\n  private _moveIndex(dir: -1|1): void {\n    const next = this._index.get()! + dir;\n    this._index.set(clamp(next, 0, this._attachments.get().length));\n  }\n\n  // Removes the attachment being previewed from the cell (but not the document).\n  private _remove(): void {\n    this._rowIds.splice(this._index.get()!, 1);\n  }\n\n  private async _select(): Promise<void> {\n    const uploadResult = await selectFiles({docWorkerUrl: this._docComm.docWorkerUrl,\n                                            multiple: true, sizeLimit: 'attachment'});\n    return this._add(uploadResult);\n  }\n\n  private async _upload(files: FileList): Promise<void> {\n    const uploadResult = await uploadFiles(Array.from(files),\n                                           {docWorkerUrl: this._docComm.docWorkerUrl,\n                                            sizeLimit: 'attachment'});\n    return this._add(uploadResult);\n  }\n\n  private async _add(uploadResult: UploadResult|null): Promise<void> {\n    if (!uploadResult) { return; }\n    const rowIds = await this._docComm.addAttachments(uploadResult.uploadId);\n    const len = this._rowIds.get().length;\n    if (rowIds.length > 0) {\n      this._rowIds.push(...rowIds);\n      this._index.set(len);\n    }\n  }\n}\n\nfunction isInEditor(ev: KeyboardEvent): boolean {\n  return (ev.target as HTMLElement).tagName === 'INPUT';\n}\n\nfunction renderContent(att: Attachment|null, readonly: boolean): HTMLElement {\n  const commonArgs = [cssContent.cls(''), testId('pw-attachment-content')];\n  if (!att) {\n    return cssWarning('No attachments', readonly ? null : cssDetails('Drop files here to attach.'), ...commonArgs);\n  } else if (att.hasPreview) {\n    return dom('img', dom.attr('src', att.url), ...commonArgs);\n  } else if (att.fileType.startsWith('video/')) {\n    return dom('video', dom.attr('src', att.inlineUrl), {autoplay: false, controls: true}, ...commonArgs);\n  } else if (att.fileType.startsWith('audio/')) {\n    return dom('audio', dom.attr('src', att.inlineUrl), {autoplay: false, controls: true}, ...commonArgs);\n  } else if (att.fileType.startsWith('text/') || att.fileType === 'application/json') {\n    // Rendering text/html is risky. Things like text/plain and text/csv we could render though,\n    // but probably not using object tag (which needs work to look acceptable).\n    return dom('div', ...commonArgs,\n      cssWarning(cssContent.cls(''), renderFileType(att.filename.get(), att.fileIdent),\n        cssDetails('Preview not available.')));\n  } else {\n    // Setting 'type' attribute is important to avoid a download prompt from Chrome.\n    return dom('object', {type: att.fileType}, dom.attr('data', att.inlineUrl), ...commonArgs,\n      cssWarning(cssContent.cls(''), renderFileType(att.filename.get(), att.fileIdent),\n        cssDetails('Preview not available.'))\n    );\n  }\n}\n\nfunction dragOverClass(target: HTMLElement, className: string): void {\n  let enterTarget: EventTarget|null = null;\n  function toggle(ev: DragEvent, onOff: boolean) {\n    enterTarget = onOff ? ev.target : null;\n    ev.stopPropagation();\n    ev.preventDefault();\n    target.classList.toggle(className, onOff);\n  }\n  dom.onElem(target, 'dragenter', (ev) => toggle(ev, true));\n  dom.onElem(target, 'dragleave', (ev) => (ev.target === enterTarget) && toggle(ev, false));\n  dom.onElem(target, 'drop', (ev) => toggle(ev, false));\n}\n\nconst cssFullScreenModal = styled('div', `\n  background-color: initial;\n  width: 100%;\n  height: 100%;\n  border: none;\n  border-radius: 0px;\n  box-shadow: none;\n  padding: 0px;\n`);\n\nconst cssHeader = styled('div', `\n  padding: 16px 24px;\n  position: fixed;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n`);\n\nconst cssCloseButton = styled('div', `\n  padding: 6px;\n  border-radius: 32px;\n  cursor: pointer;\n  background-color: ${colors.light};\n  --icon-color: ${colors.lightGreen};\n\n  &:hover {\n    background-color: ${colors.mediumGreyOpaque};\n    --icon-color: ${colors.darkGreen};\n  }\n`);\n\nconst cssBigIcon = styled(icon, `\n  padding: 10px;\n`);\n\nconst cssTitle = styled('div', `\n  display: inline-block;\n  padding: 8px 16px;\n  margin-right: 8px;\n  min-width: 0px;\n  overflow: hidden;\n\n  &:hover {\n    outline: 1px solid ${colors.slate};\n  }\n  &:focus-within {\n    outline: 1px solid ${colors.darkGreen};\n  }\n`);\n\nconst cssEditableLabel = styled(editableLabel, `\n  font-size: ${vars.mediumFontSize};\n  font-weight: bold;\n  color: white;\n`);\n\nconst cssFlexExpand = styled('div', `\n  flex: 1;\n  display: flex;\n`);\n\nconst cssFileButtons = styled(cssButtonGroup, `\n  margin-left: auto;\n  margin-right: 16px;\n  height: 32px;\n  flex: none;\n`);\n\nconst cssButton = styled(basicButton, `\n  background-color: ${colors.light};\n  font-weight: normal;\n  padding: 0 16px;\n  border-top: none;\n  border-right: none;\n  border-bottom: none;\n  border-left: 1px solid ${colors.darkGrey};\n  display: flex;\n  align-items: center;\n\n  &:first-child {\n    border: none;\n  }\n  &:hover {\n    background-color: ${colors.mediumGreyOpaque};\n    border-color: ${colors.darkGrey};\n  }\n`);\n\nconst cssButtonIcon = styled(icon, `\n  --icon-color: ${colors.slate};\n  margin-right: 4px;\n`);\n\nconst cssNextArrow = styled('div', `\n  position: fixed;\n  height: 32px;\n  margin: auto 24px;\n  top: 0px;\n  bottom: 0px;\n  z-index: 1;\n\n  padding: 6px;\n  border-radius: 32px;\n  cursor: pointer;\n  background-color: ${colors.lightGreen};\n  --icon-color: ${colors.light};\n\n  &:hover {\n    background-color: ${colors.darkGreen};\n  }\n  &-left {\n    transform: rotateY(180deg);\n    left: 0px;\n  }\n  &-right {\n    right: 0px;\n  }\n`);\n\nconst cssDropping = styled('div', '');\n\nconst cssContent = styled('div', `\n  display: block;\n  height: calc(100% - 72px);\n  width: calc(100% - 64px);\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 64px;\n  margin-bottom: 8px;\n  outline: none;\n  img& {\n    width: max-content;\n    height: unset;\n  }\n  audio& {\n    padding-bottom: 64px;\n  }\n  .${cssDropping.className} > & {\n    display: none;\n  }\n`);\n\nconst cssWarning = styled('div', `\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: ${vars.mediumFontSize};\n  font-weight: bold;\n  color: white;\n  padding: 0px;\n`);\n\nconst cssDetails = styled('div', `\n  font-weight: normal;\n  margin-top: 24px;\n`);\n\nconst cssDragArea = styled(cssContent, `\n  border: 2px dashed ${colors.mediumGreyOpaque};\n  height: calc(100% - 96px);\n  margin-top: 64px;\n  padding: 0px;\n  justify-content: center;\n  display: none;\n  .${cssDropping.className} > & {\n    display: flex;\n  }\n`);\n","import {DataRowModel} from 'app/client/models/DataRowModel';\nimport {testId} from 'app/client/ui2018/cssVars';\nimport {\n  ChoiceOptionsByName,\n  ChoiceTextBox,\n} from 'app/client/widgets/ChoiceTextBox';\nimport {CellValue} from 'app/common/DocActions';\nimport {decodeObject} from 'app/plugin/objtypes';\nimport {dom, styled} from 'grainjs';\nimport {choiceToken} from 'app/client/widgets/ChoiceToken';\n\n/**\n * ChoiceListCell - A cell that renders a list of choice tokens.\n */\nexport class ChoiceListCell extends ChoiceTextBox {\n  public buildDom(row: DataRowModel) {\n    const value = row.cells[this.field.colId.peek()];\n\n    return cssChoiceList(\n      dom.cls('field_clip'),\n      cssChoiceList.cls('-wrap', this.wrapping),\n      dom.style('justify-content', use => use(this.alignment) === 'right' ? 'flex-end' : use(this.alignment)),\n      dom.domComputed((use) => {\n        return use(row._isAddRow) ? null :\n          [\n            use(value), use(this.getChoiceValuesSet()),\n            use(this.getChoiceOptions())\n          ] as [CellValue, Set<string>, ChoiceOptionsByName];\n      }, (input) => {\n        if (!input) { return null; }\n        const [rawValue, choiceSet, choiceOptionsByName] = input;\n        const val = decodeObject(rawValue);\n        if (!val) { return null; }\n        // Handle any unexpected values we might get (non-array, or array with non-strings).\n        const tokens: unknown[] = Array.isArray(val) ? val : [val];\n        return tokens.map(token =>\n          choiceToken(\n            String(token),\n            {\n              ...(choiceOptionsByName.get(String(token)) || {}),\n              invalid: !choiceSet.has(String(token)),\n            },\n            dom.cls(cssToken.className),\n            testId('choice-list-cell-token')\n          )\n        );\n      }),\n    );\n  }\n}\n\nexport const cssChoiceList = styled('div', `\n  display: flex;\n  align-content: start;\n  align-items: start;\n  padding: 0 3px;\n\n  position: relative;\n  min-height: 22px;\n\n  &-wrap {\n    flex-wrap: wrap;\n  }\n`);\n\nexport const cssToken = styled('div', `\n  flex: 0 1 auto;\n  min-width: 0px;\n  margin: 2px;\n  line-height: 16px;\n`);\n","/**\n * This is a copy of TextEditor.js, converted to typescript.\n */\nimport {createGroup} from 'app/client/components/commands';\nimport {testId} from 'app/client/ui2018/cssVars';\nimport {createMobileButtons, getButtonMargins} from 'app/client/widgets/EditorButtons';\nimport {EditorPlacement, ISize} from 'app/client/widgets/EditorPlacement';\nimport {FieldOptions, NewBaseEditor} from 'app/client/widgets/NewBaseEditor';\nimport {CellValue} from \"app/common/DocActions\";\nimport {undef} from 'app/common/gutil';\nimport {dom, Observable} from 'grainjs';\n\nexport class NTextEditor extends NewBaseEditor {\n  // Observable with current editor state (used by drafts or latest edit/position component)\n  public readonly editorState: Observable<string>;\n\n  protected cellEditorDiv: HTMLElement;\n  protected textInput: HTMLTextAreaElement;\n  protected commandGroup: any;\n\n  private _dom: HTMLElement;\n  private _editorPlacement!: EditorPlacement;\n  private _contentSizer: HTMLElement;\n  private _alignment: string;\n\n  // Note: TextEditor supports also options.placeholder for use by derived classes, but this is\n  // easy to apply to this.textInput without needing a separate option.\n  constructor(protected options: FieldOptions) {\n    super(options);\n\n    const initialValue: string = undef(\n        options.state as string | undefined,\n        options.editValue, String(options.cellValue ?? \"\"));\n    this.editorState = Observable.create<string>(this, initialValue);\n\n    this.commandGroup = this.autoDispose(createGroup(options.commands, this, true));\n    this._alignment = options.field.widgetOptionsJson.peek().alignment || 'left';\n    this._dom =\n    dom('div.default_editor',\n      // add readonly class\n      dom.cls(\"readonly_editor\", options.readonly),\n      this.cellEditorDiv = dom('div.celleditor_cursor_editor',\n        testId('widget-text-editor'),\n        this._contentSizer = dom('div.celleditor_content_measure'),\n        this.textInput = dom('textarea',\n          dom.cls('celleditor_text_editor'),\n          dom.style('text-align', this._alignment),\n          dom.prop('value', initialValue),\n          dom.boolAttr('readonly', options.readonly),\n          this.commandGroup.attach(),\n          dom.on('input', () => this.onInput())\n        )\n      ),\n      createMobileButtons(options.commands),\n    );\n  }\n\n  public attach(cellElem: Element): void {\n    // Attach the editor dom to page DOM.\n    this._editorPlacement = EditorPlacement.create(this, this._dom, cellElem, {margins: getButtonMargins()});\n\n    // Reposition the editor if needed for external reasons (in practice, window resize).\n    this.autoDispose(this._editorPlacement.onReposition.addListener(this.resizeInput, this));\n\n    this.setSizerLimits();\n\n    // Once the editor is attached to DOM, resize it to content, focus, and set cursor.\n    this.resizeInput();\n    this.textInput.focus();\n    const pos = Math.min(this.options.cursorPos, this.textInput.value.length);\n    this.textInput.setSelectionRange(pos, pos);\n  }\n\n  public getDom(): HTMLElement {\n    return this._dom;\n  }\n\n  public getCellValue(): CellValue {\n    const valueParser = this.options.field.createValueParser();\n    return valueParser(this.getTextValue());\n  }\n\n  public getTextValue() {\n    return this.textInput.value;\n  }\n\n  public getCursorPos() {\n    return this.textInput.selectionStart;\n  }\n\n  public setSizerLimits() {\n    // Set the max width of the sizer to the max we could possibly grow to, so that it knows to wrap\n    // once we reach it.\n    const maxSize = this._editorPlacement.calcSizeWithPadding(this.textInput,\n      {width: Infinity, height: Infinity}, {calcOnly: true});\n    this._contentSizer.style.maxWidth = Math.ceil(maxSize.width) + 'px';\n  }\n\n  /**\n   * Occurs when user types text in the textarea\n   *\n   */\n  protected onInput() {\n    // Resize the textbox whenever user types in it.\n    this.resizeInput();\n\n    // notify about current state\n    this.editorState.set(String(this.getTextValue()));\n  }\n\n  /**\n   * Helper which resizes textInput to match its content. It relies on having a contentSizer element\n   * with the same font/size settings as the textInput, and on having `calcSize` helper,\n   * which is provided by the EditorPlacement class.\n   */\n  protected resizeInput() {\n    const textInput = this.textInput;\n    // \\u200B is a zero-width space; it is used so the textbox will expand vertically\n    // on newlines, but it does not add any width.\n    this._contentSizer.textContent = textInput.value + '\\u200B';\n    const rect = this._contentSizer.getBoundingClientRect();\n\n    // Allow for a bit of extra space after the cursor (only desirable when text is left-aligned).\n    if (this._alignment === \"left\") {\n      // Modifiable in modern browsers: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n      rect.width += 16;\n    }\n\n    const size = this._editorPlacement.calcSizeWithPadding(textInput, rect);\n    textInput.style.width = size.width + 'px';\n    textInput.style.height = size.height + 'px';\n\n    // Scrollbars are first visible (as the content get larger), but resizing should hide them (if there is enough\n    // space), but this doesn't work in Chrome on Windows or Ubuntu (but works on Mac). Here if scrollbars are visible,\n    // but we got same enough spaces, we will force browser to check the available space once more time.\n    if (enoughSpace(rect, size) && hasScroll(textInput)) {\n      textInput.style.overflow = \"hidden\";\n      // eslint-disable-next-line no-unused-expressions\n      textInput.clientHeight; // just access metrics is enough to repaint\n      textInput.style.overflow = \"auto\";\n    }\n  }\n}\n\nfunction enoughSpace(requested: ISize, received: ISize) {\n  return requested.width <= received.width && requested.height <= received.height;\n}\n\nfunction hasScroll(el: HTMLTextAreaElement) {\n  // This is simple check for dimensions, scrollbar will appear when scrollHeight > clientHeight\n  return el.scrollHeight > el.clientHeight || el.scrollWidth > el.clientWidth;\n}\n","import {makeT} from 'app/client/lib/localization';\nimport {FieldOptions} from 'app/client/widgets/NewBaseEditor';\nimport {NTextEditor} from 'app/client/widgets/NTextEditor';\n\nconst t = makeT('HyperLinkEditor');\n\n/**\n * HyperLinkEditor - Is the same NTextEditor but with some placeholder text to help explain\n * to the user how links should be formatted.\n */\nexport class HyperLinkEditor extends NTextEditor {\n  constructor(options: FieldOptions) {\n    super(options);\n    this.textInput.setAttribute('placeholder', t('[link label] url'));\n  }\n}\n","import { DataRowModel } from 'app/client/models/DataRowModel';\nimport { ViewFieldRec } from 'app/client/models/entities/ViewFieldRec';\nimport { constructUrl } from 'app/client/models/gristUrlState';\nimport { colors, testId } from 'app/client/ui2018/cssVars';\nimport { cssIconBackground, icon } from 'app/client/ui2018/icons';\nimport { cssHoverIn, gristLink } from 'app/client/ui2018/links';\nimport { NTextBox } from 'app/client/widgets/NTextBox';\nimport { CellValue } from 'app/common/DocActions';\nimport { Computed, dom, styled } from 'grainjs';\n\n/**\n * Creates a widget for displaying links.  Links can entered directly or following a title.\n * The last entry following a space is used as the url.\n * ie 'google https://www.google.com' would apears as 'google' to the user but link to the url.\n */\nexport class HyperLinkTextBox extends NTextBox {\n  constructor(field: ViewFieldRec) {\n    super(field, {defaultTextColor: colors.lightGreen.value});\n  }\n\n  public buildDom(row: DataRowModel) {\n    const value = row.cells[this.field.colId()];\n    const url = Computed.create(null, (use) => constructUrl(use(value)));\n    return cssFieldClip(\n      dom.autoDispose(url),\n      dom.style('text-align', this.alignment),\n      dom.cls('text_wrapping', this.wrapping),\n      dom.maybe((use) => Boolean(use(value)), () =>\n        gristLink(url,\n          cssIconBackground(\n            icon(\"FieldLink\", testId('tb-link-icon')),\n            dom.cls(cssHoverOnField.className),\n          ),\n          testId('tb-link'),\n        ),\n      ),\n      dom.text((use) => _formatValue(use(value))),\n    );\n  }\n}\n\n/**\n * Formats value like `foo bar baz` by discarding `baz` and returning `foo bar`.\n */\nfunction _formatValue(value: CellValue): string {\n  if (typeof value !== 'string') { return ''; }\n  const index = value.lastIndexOf(' ');\n  return index >= 0 ? value.slice(0, index) : value;\n}\n\nconst cssFieldClip = styled('div.field_clip', `\n  color: var(--grist-actual-cell-color, ${colors.lightGreen});\n`);\n\nconst cssHoverOnField = cssHoverIn(cssFieldClip.className);\n","/**\n * See app/common/NumberFormat for description of options we support.\n */\nimport {makeT} from 'app/client/lib/localization';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {reportError} from 'app/client/models/errors';\nimport {cssLabel, cssRow} from 'app/client/ui/RightPanelStyles';\nimport {cssButtonSelect, ISelectorOption, makeButtonSelect} from 'app/client/ui2018/buttonSelect';\nimport {testId, theme} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {buildCurrencyPicker} from 'app/client/widgets/CurrencyPicker';\nimport {NTextBox} from 'app/client/widgets/NTextBox';\nimport {clamp} from 'app/common/gutil';\nimport {buildNumberFormat, NumberFormatOptions, NumMode, NumSign} from 'app/common/NumberFormat';\nimport {BindableValue, Computed, dom, DomContents, DomElementArg,\n        fromKo, MultiHolder, Observable, styled} from 'grainjs';\nimport * as LocaleCurrency from 'locale-currency';\n\n\nconst t = makeT('NumericTextBox');\nconst modeOptions: Array<ISelectorOption<NumMode>> = [\n  {value: 'currency', label: '$'},\n  {value: 'decimal', label: ','},\n  {value: 'percent', label: '%'},\n  {value: 'scientific', label: 'Exp'}\n];\n\nconst signOptions: Array<ISelectorOption<NumSign>> = [\n  {value: 'parens', label: '(-)'},\n];\n\n/**\n * NumericTextBox - The most basic widget for displaying numeric information.\n */\nexport class NumericTextBox extends NTextBox {\n  constructor(field: ViewFieldRec) {\n    super(field);\n  }\n\n  public buildConfigDom(): DomContents {\n    // Holder for all computeds created here. It gets disposed with the returned DOM element.\n    const holder = new MultiHolder();\n\n    // Resolved options, to show default min/max decimals, which change depending on numMode.\n    const resolved = Computed.create<Intl.ResolvedNumberFormatOptions>(holder, (use) => {\n      const {numMode} = use(this.field.config.options);\n      const docSettings = use(this.field.documentSettings);\n      return buildNumberFormat({numMode}, docSettings).resolvedOptions();\n    });\n\n    // Prepare various observables that reflect the options in the UI.\n    const fieldOptions = this.field.config.options;\n    const options = fromKo(fieldOptions);\n    const docSettings = fromKo(this.field.documentSettings);\n    const numMode = Computed.create(holder, options, (use, opts) => (opts.numMode as NumMode) || null);\n    const numSign = Computed.create(holder, options, (use, opts) => opts.numSign || null);\n    const currency = Computed.create(holder, options, (use, opts) => opts.currency);\n    const disabled = Computed.create(holder, use => use(this.field.config.options.disabled('currency')));\n    const minDecimals = Computed.create(holder, options, (use, opts) => numberOrDefault(opts.decimals, ''));\n    const maxDecimals = Computed.create(holder, options, (use, opts) => numberOrDefault(opts.maxDecimals, ''));\n    const defaultMin = Computed.create(holder, resolved, (use, res) => res.minimumFractionDigits);\n    const defaultMax = Computed.create(holder, resolved, (use, res) => res.maximumFractionDigits);\n    const docCurrency = Computed.create(holder, docSettings, (use, settings) =>\n      settings.currency ?? LocaleCurrency.getCurrency(settings.locale ?? 'en-US')\n    );\n\n    // Save a value as the given property in fieldOptions observable. Set it, save, and revert\n    // on save error. This is similar to what modelUtil.setSaveValue() does.\n    const setSave = (prop: keyof NumberFormatOptions, value: unknown) => {\n      const orig = {...fieldOptions.peek()};\n      if (value !== orig[prop]) {\n        fieldOptions({...orig, [prop]: value, ...updateOptions(prop, value)});\n        fieldOptions.save().catch((err) => { reportError(err); fieldOptions(orig); });\n      }\n    };\n\n    // Prepare setters for the UI elements.\n    // Min/max fraction digits may range from 0 to 20; other values are invalid.\n    const setMinDecimals = (val?: number) => setSave('decimals', val && clamp(val, 0, 20));\n    const setMaxDecimals = (val?: number) => setSave('maxDecimals', val && clamp(val, 0, 20));\n    // Mode and Sign behave as toggles: clicking a selected on deselects it.\n    const setMode = (val: NumMode) => setSave('numMode', val !== numMode.get() ? val : undefined);\n    const setSign = (val: NumSign) => setSave('numSign', val !== numSign.get() ? val : undefined);\n    const setCurrency = (val: string|undefined) => setSave('currency', val);\n\n    const disabledStyle = cssButtonSelect.cls('-disabled', disabled);\n\n    return [\n      super.buildConfigDom(),\n      cssLabel(t('Number Format')),\n      cssRow(\n        dom.autoDispose(holder),\n        makeButtonSelect(numMode, modeOptions, setMode, disabledStyle, cssModeSelect.cls(''), testId('numeric-mode')),\n        makeButtonSelect(numSign, signOptions, setSign, disabledStyle, cssSignSelect.cls(''), testId('numeric-sign')),\n      ),\n      dom.maybe((use) => use(numMode) === 'currency', () => [\n        cssLabel(t('Currency')),\n        cssRow(\n          dom.domComputed(docCurrency, (defaultCurrency) =>\n            buildCurrencyPicker(holder, currency, setCurrency,\n              {defaultCurrencyLabel: t(`Default currency ({{defaultCurrency}})`, {defaultCurrency}), disabled})\n          ),\n          testId(\"numeric-currency\")\n        )\n      ]),\n      cssLabel(t('Decimals')),\n      cssRow(\n        decimals('min', minDecimals, defaultMin, setMinDecimals, disabled, testId('numeric-min-decimals')),\n        decimals('max', maxDecimals, defaultMax, setMaxDecimals, disabled, testId('numeric-max-decimals')),\n      ),\n    ];\n  }\n}\n\n\nfunction numberOrDefault<T>(value: unknown, def: T): number | T {\n  return value !== null && value !== undefined ? Number(value) : def;\n}\n\n// Helper used by setSave() above to reset some properties when switching modes.\nfunction updateOptions(prop: keyof NumberFormatOptions, value: unknown): Partial<NumberFormatOptions> {\n  // Reset the numSign to default when toggling mode to percent or scientific.\n  if (prop === 'numMode' && (!value || value === 'scientific' || value === 'percent')) {\n    return {numSign: undefined};\n  }\n  return {};\n}\n\nfunction decimals(\n  label: string,\n  value: Observable<number | ''>,\n  defaultValue: Observable<number>,\n  setFunc: (val?: number) => void,\n  disabled: BindableValue<boolean>,\n  ...args: DomElementArg[]\n) {\n  return cssDecimalsBox(\n    cssDecimalsBox.cls('-disabled', disabled),\n    cssNumLabel(label),\n    cssNumInput({type: 'text', size: '2', min: '0'},\n      dom.prop('value', value),\n      dom.prop('placeholder', defaultValue),\n      dom.on('change', (ev, elem) => {\n        const newVal = parseInt(elem.value, 10);\n        // Set value explicitly before its updated via setFunc; this way the value reflects the\n        // observable in the case the observable is left unchanged (e.g. because of clamping).\n        elem.value = String(value.get());\n        setFunc(Number.isNaN(newVal) ? undefined : newVal);\n        elem.blur();\n      }),\n      dom.on('focus', (ev, elem) => elem.select()),\n    ),\n    cssSpinner(\n      cssSpinnerBtn(cssSpinnerTop('DropdownUp'),\n        dom.on('click', () => setFunc(numberOrDefault(value.get(), defaultValue.get()) + 1))),\n      cssSpinnerBtn(cssSpinnerBottom('Dropdown'),\n        dom.on('click', () => setFunc(numberOrDefault(value.get(), defaultValue.get()) - 1))),\n    ),\n    ...args\n  );\n}\n\nconst cssDecimalsBox = styled('div', `\n  position: relative;\n  flex: auto;\n  --icon-color: ${theme.lightText};\n  color: ${theme.lightText};\n  font-weight: normal;\n  display: flex;\n  align-items: center;\n  &:first-child {\n    margin-right: 16px;\n  }\n  &-disabled {\n    background-color: ${theme.rightPanelToggleButtonDisabledBg};\n    pointer-events: none;\n  }\n`);\n\nconst cssNumLabel = styled('div', `\n  position: absolute;\n  padding-left: 8px;\n  pointer-events: none;\n`);\n\nconst cssNumInput = styled('input', `\n  padding: 4px 32px 4px 40px;\n  border: 1px solid ${theme.inputBorder};\n  border-radius: 3px;\n  background-color: ${theme.inputBg};\n  color: ${theme.inputFg};\n  width: 100%;\n  text-align: right;\n  appearance: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n`);\n\nconst cssSpinner = styled('div', `\n  position: absolute;\n  right: 8px;\n  width: 16px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`);\n\nconst cssSpinnerBtn = styled('div', `\n  --icon-color: ${theme.controlSecondaryFg};\n  flex: 1 1 0px;\n  min-height: 0px;\n  position: relative;\n  cursor: pointer;\n  overflow: hidden;\n  &:hover {\n    --icon-color: ${theme.controlSecondaryHoverFg};\n  }\n`);\n\nconst cssSpinnerTop = styled(icon, `\n  position: absolute;\n  top: 0px;\n`);\n\nconst cssSpinnerBottom = styled(icon, `\n  position: absolute;\n  bottom: 0px;\n`);\n\nconst cssModeSelect = styled(makeButtonSelect, `\n  flex: 4 4 0px;\n  background-color: ${theme.inputBg};\n`);\n\nconst cssSignSelect = styled(makeButtonSelect, `\n  flex: 1 1 0px;\n  background-color: ${theme.inputBg};\n  margin-left: 16px;\n`);\n","import {makeT} from 'app/client/lib/localization';\nimport {DataRowModel} from 'app/client/models/DataRowModel';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {cssLabel, cssRow} from 'app/client/ui/RightPanelStyles';\nimport {colors, hideInPrintView, testId} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {IOptionFull, select} from 'app/client/ui2018/menus';\nimport {NTextBox} from 'app/client/widgets/NTextBox';\nimport {isFullReferencingType, isVersions} from 'app/common/gristTypes';\nimport {Computed, dom, styled} from 'grainjs';\n\n\nconst t = makeT('Reference');\n\n/**\n * Reference - The widget for displaying references to another table's records.\n */\nexport class Reference extends NTextBox {\n  private _visibleColRef: Computed<number>;\n  private _validCols: Computed<Array<IOptionFull<number>>>;\n\n  constructor(field: ViewFieldRec) {\n    super(field);\n\n    this._visibleColRef = Computed.create(this, (use) => use(this.field.visibleColRef));\n    // Note that saveOnly is used here to prevent display value flickering on visible col change.\n    this._visibleColRef.onWrite((val) => this.field.visibleColRef.saveOnly(val));\n\n    this._validCols = Computed.create(this, (use) => {\n      const refTable = use(use(this.field.column).refTable);\n      if (!refTable) { return []; }\n      return use(use(refTable.columns).getObservable())\n        .filter(col => !use(col.isHiddenCol))\n        .map<IOptionFull<number>>(col => ({\n          label: use(col.label),\n          value: col.getRowId(),\n          icon: 'FieldColumn',\n          disabled: isFullReferencingType(use(col.type)) || use(col.isTransforming)\n        }))\n        .concat([{label: t('Row ID'), value: 0, icon: 'FieldColumn'}]);\n    });\n  }\n\n  public buildConfigDom() {\n    return [\n      this.buildTransformConfigDom(),\n      cssLabel(t('CELL FORMAT')),\n      super.buildConfigDom()\n    ];\n  }\n\n  public buildTransformConfigDom() {\n    const disabled = Computed.create(null, use => use(this.field.config.multiselect));\n    return [\n      cssLabel(t('SHOW COLUMN')),\n      cssRow(\n        dom.autoDispose(disabled),\n        select(this._visibleColRef, this._validCols, {\n          disabled\n        }),\n        testId('fbuilder-ref-col-select')\n      )\n    ];\n  }\n\n  public buildDom(row: DataRowModel) {\n    // Note: we require 2 observables here because changes to the cell value (reference id)\n    // and the display value (display column) are not bundled. This can cause `formattedValue`\n    // to briefly display incorrect values (e.g. [Blank] when adding a reference to an empty cell)\n    // because the cell value changes before the display column has a chance to update.\n    //\n    // TODO: Look into a better solution (perhaps updating the display formula to return [Blank]).\n    const referenceId = Computed.create(null, (use) => {\n      const id = row.cells[use(this.field.colId)];\n      return id && use(id);\n    });\n    const formattedValue = Computed.create(null, (use) => {\n      let [value, hasBlankReference] = ['', false];\n      if (use(row._isAddRow) || this.isDisposed() || use(this.field.displayColModel).isDisposed()) {\n        // Work around JS errors during certain changes (noticed when visibleCol field gets removed\n        // for a column using per-field settings).\n        return {value, hasBlankReference};\n      }\n\n      const displayValueObs = row.cells[use(use(this.field.displayColModel).colId)];\n      if (!displayValueObs) {\n        return {value, hasBlankReference};\n      }\n\n      const displayValue = use(displayValueObs);\n      value = isVersions(displayValue) ?\n        // We can arrive here if the reference value is unchanged (viewed as a foreign key)\n        // but the content of its displayCol has changed.  Postponing doing anything about\n        // this until we have three-way information for computed columns.  For now,\n        // just showing one version of the cell.  TODO: elaborate.\n        use(this.field.formatter).formatAny(displayValue[1].local || displayValue[1].parent) :\n        use(this.field.formatter).formatAny(displayValue);\n\n      hasBlankReference = referenceId.get() !== 0 && value.trim() === '';\n\n      return {value, hasBlankReference};\n    });\n\n    return cssRef(\n      dom.autoDispose(formattedValue),\n      dom.autoDispose(referenceId),\n      cssRef.cls('-blank', use => use(formattedValue).hasBlankReference),\n      dom.style('text-align', this.alignment),\n      dom.cls('text_wrapping', this.wrapping),\n      cssRefIcon('FieldReference', testId('ref-link-icon'), hideInPrintView()),\n      dom.text(use => {\n        if (use(referenceId) === 0) { return ''; }\n        if (use(formattedValue).hasBlankReference) { return '[Blank]'; }\n        return use(formattedValue).value;\n      })\n    );\n  }\n}\n\nconst cssRefIcon = styled(icon, `\n  float: left;\n  background-color: ${colors.slate};\n  margin: -1px 2px 2px 0;\n`);\n\nconst cssRef = styled('div.field_clip', `\n  &-blank {\n    color: ${colors.slate}\n  }\n`);\n","import {DocData} from 'app/client/models/DocData';\nimport {ColumnRec} from 'app/client/models/entities/ColumnRec';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {TableData} from 'app/client/models/TableData';\nimport {getReferencedTableId, isRefListType} from 'app/common/gristTypes';\nimport {BaseFormatter} from 'app/common/ValueFormatter';\n\n/**\n * Utilities for common operations involving Ref[List] fields.\n */\nexport class ReferenceUtils {\n  public readonly refTableId: string;\n  public readonly tableData: TableData;\n  public readonly visibleColFormatter: BaseFormatter;\n  public readonly visibleColModel: ColumnRec;\n  public readonly visibleColId: string;\n  public readonly isRefList: boolean;\n\n  constructor(public readonly field: ViewFieldRec, docData: DocData) {\n    const colType = field.column().type();\n    const refTableId = getReferencedTableId(colType);\n    if (!refTableId) {\n      throw new Error(\"Non-Reference column of type \" + colType);\n    }\n    this.refTableId = refTableId;\n\n    const tableData = docData.getTable(refTableId);\n    if (!tableData) {\n      throw new Error(\"Invalid referenced table \" + refTableId);\n    }\n    this.tableData = tableData;\n\n    this.visibleColFormatter = field.visibleColFormatter();\n    this.visibleColModel = field.visibleColModel();\n    this.visibleColId = this.visibleColModel.colId() || 'id';\n    this.isRefList = isRefListType(colType);\n  }\n\n  public idToText(value: unknown) {\n    if (typeof value === 'number') {\n      return this.visibleColFormatter.formatAny(this.tableData.getValue(value, this.visibleColId));\n    }\n    return String(value || '');\n  }\n\n  public autocompleteSearch(text: string) {\n    const acIndex = this.tableData.columnACIndexes.getColACIndex(this.visibleColId, this.visibleColFormatter);\n    return acIndex.search(text);\n  }\n}\n\nexport function nocaseEqual(a: string, b: string) {\n  return a.trim().toLowerCase() === b.trim().toLowerCase();\n}\n","import { ACResults, buildHighlightedDom, HighlightFunc, normalizeText } from 'app/client/lib/ACIndex';\nimport { Autocomplete } from 'app/client/lib/autocomplete';\nimport { ICellItem } from 'app/client/models/ColumnACIndexes';\nimport { reportError } from 'app/client/models/errors';\nimport { colors, testId, theme, vars } from 'app/client/ui2018/cssVars';\nimport { icon } from 'app/client/ui2018/icons';\nimport { menuCssClass } from 'app/client/ui2018/menus';\nimport { FieldOptions } from 'app/client/widgets/NewBaseEditor';\nimport { NTextEditor } from 'app/client/widgets/NTextEditor';\nimport { nocaseEqual, ReferenceUtils } from 'app/client/lib/ReferenceUtils';\nimport { undef } from 'app/common/gutil';\nimport { styled } from 'grainjs';\n\n\n/**\n * A ReferenceEditor offers an autocomplete of choices from the referenced table.\n */\nexport class ReferenceEditor extends NTextEditor {\n  private _enableAddNew: boolean;\n  private _showAddNew: boolean = false;\n  private _autocomplete?: Autocomplete<ICellItem>;\n  private _utils: ReferenceUtils;\n\n  constructor(options: FieldOptions) {\n    super(options);\n\n    const docData = options.gristDoc.docData;\n    this._utils = new ReferenceUtils(options.field, docData);\n\n    const vcol = this._utils.visibleColModel;\n    this._enableAddNew = vcol && !vcol.isRealFormula() && !!vcol.colId();\n\n    // Decorate the editor to look like a reference column value (with a \"link\" icon).\n    // But not on readonly mode - here we will reuse default decoration\n    if (!options.readonly) {\n      this.cellEditorDiv.classList.add(cssRefEditor.className);\n      this.cellEditorDiv.appendChild(cssRefEditIcon('FieldReference'));\n    }\n\n    this.textInput.value = undef(options.state, options.editValue, this._idToText());\n\n    const needReload = (options.editValue === undefined && !this._utils.tableData.isLoaded);\n\n    // The referenced table has probably already been fetched (because there must already be a\n    // Reference widget instantiated), but it's better to avoid this assumption.\n    docData.fetchTable(this._utils.refTableId).then(() => {\n      if (this.isDisposed()) { return; }\n      if (needReload && this.textInput.value === '') {\n        this.textInput.value = undef(options.state, options.editValue, this._idToText());\n        this.resizeInput();\n      }\n      if (this._autocomplete) {\n        if (options.editValue === undefined) {\n          this._autocomplete.search((items) => items.findIndex((item) => item.rowId === options.cellValue));\n        } else {\n          this._autocomplete.search();\n        }\n      }\n    })\n    .catch(reportError);\n  }\n\n  public attach(cellElem: Element): void {\n    super.attach(cellElem);\n    // don't create autocomplete for readonly mode\n    if (this.options.readonly) { return; }\n    this._autocomplete = this.autoDispose(new Autocomplete<ICellItem>(this.textInput, {\n      menuCssClass: menuCssClass + ' ' + cssRefList.className,\n      search: this._doSearch.bind(this),\n      renderItem: this._renderItem.bind(this),\n      getItemText: (item) => item.text,\n      onClick: () => this.options.commands.fieldEditSaveHere(),\n    }));\n  }\n\n  /**\n   * If the 'new' item is saved, add it to the referenced table first. See _buildSourceList\n   */\n  public async prepForSave() {\n    const selectedItem = this._autocomplete && this._autocomplete.getSelectedItem();\n    if (selectedItem &&\n        selectedItem.rowId === 'new' &&\n        selectedItem.text === this.textInput.value) {\n      const colInfo = {[this._utils.visibleColId]: this.textInput.value};\n      selectedItem.rowId = await this._utils.tableData.sendTableAction([\"AddRecord\", null, colInfo]);\n    }\n  }\n\n  public getCellValue() {\n    const selectedItem = this._autocomplete && this._autocomplete.getSelectedItem();\n\n    if (selectedItem) {\n      // Selected from the autocomplete dropdown; so we know the *value* (i.e. rowId).\n      return selectedItem.rowId;\n    } else if (nocaseEqual(this.textInput.value, this._idToText())) {\n      // Unchanged from what's already in the cell.\n      return this.options.cellValue;\n    }\n\n    return super.getCellValue();\n  }\n\n  private _idToText() {\n    return this._utils.idToText(this.options.cellValue);\n  }\n\n  /**\n   * If the search text does not match anything exactly, adds 'new' item to it.\n   *\n   * Also see: prepForSave.\n   */\n  private async _doSearch(text: string): Promise<ACResults<ICellItem>> {\n    const result = this._utils.autocompleteSearch(text);\n\n    this._showAddNew = false;\n    if (!this._enableAddNew || !text) { return result; }\n\n    const cleanText = normalizeText(text);\n    if (result.items.find((item) => item.cleanText === cleanText)) {\n      return result;\n    }\n\n    result.items.push({rowId: 'new', text, cleanText});\n    this._showAddNew = true;\n\n    return result;\n  }\n\n  private _renderItem(item: ICellItem, highlightFunc: HighlightFunc) {\n    return renderACItem(item.text, highlightFunc, item.rowId === 'new', this._showAddNew);\n  }\n}\n\nexport function renderACItem(text: string, highlightFunc: HighlightFunc, isAddNew: boolean, withSpaceForNew: boolean) {\n  if (isAddNew) {\n    return cssRefItem(cssRefItem.cls('-new'),\n      cssPlusButton(cssPlusIcon('Plus')), text,\n      testId('ref-editor-item'), testId('ref-editor-new-item'),\n    );\n  }\n  return cssRefItem(cssRefItem.cls('-with-new', withSpaceForNew),\n    buildHighlightedDom(text, highlightFunc, cssMatchText),\n    testId('ref-editor-item'),\n  );\n}\n\n\nconst cssRefEditor = styled('div', `\n  & > .celleditor_text_editor, & > .celleditor_content_measure {\n    padding-left: 18px;\n  }\n`);\n\n// Set z-index to be higher than the 1000 set for .cell_editor.\nexport const cssRefList = styled('div', `\n  z-index: 1001;\n  overflow-y: auto;\n  padding: 8px 0 0 0;\n  --weaseljs-menu-item-padding: 8px 16px;\n`);\n\n// We need to now the height of the sticky \"+\" element.\nconst addNewHeight = '37px';\n\nconst cssRefItem = styled('li', `\n  display: block;\n  font-family: ${vars.fontFamily};\n  white-space: pre;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  outline: none;\n  padding: var(--weaseljs-menu-item-padding, 8px 24px);\n  cursor: pointer;\n  color: ${theme.menuItemFg};\n\n  &.selected {\n    background-color: ${theme.menuItemSelectedBg};\n    color:            ${theme.menuItemSelectedFg};\n  }\n  &-with-new {\n    scroll-margin-bottom: ${addNewHeight};\n  }\n  &-new {\n    color: ${theme.lightText};\n    position: sticky;\n    bottom: 0px;\n    height: ${addNewHeight};\n    background-color: ${theme.menuBg};\n    border-top: 1px solid ${theme.menuBorder};\n    scroll-margin-bottom: initial;\n  }\n  &-new.selected {\n    color: ${theme.menuItemSelectedFg};\n  }\n`);\n\nexport const cssPlusButton = styled('div', `\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border-radius: 20px;\n  margin-right: 8px;\n  text-align: center;\n  background-color: ${colors.lightGreen};\n  color: ${colors.light};\n\n  .selected > & {\n    background-color: ${colors.darkGreen};\n  }\n`);\n\nexport const cssPlusIcon = styled(icon, `\n  background-color: ${colors.light};\n`);\n\nconst cssRefEditIcon = styled(icon, `\n  background-color: ${colors.slate};\n  position: absolute;\n  top: 0;\n  left: 0;\n  margin: 3px 3px 0 3px;\n`);\n\nconst cssMatchText = styled('span', `\n  color: ${theme.autocompleteMatchText};\n  .selected > & {\n    color: ${theme.autocompleteSelectedMatchText};\n  }\n`);\n","import { createGroup } from 'app/client/components/commands';\nimport { ACItem, ACResults, HighlightFunc, normalizeText } from 'app/client/lib/ACIndex';\nimport { IAutocompleteOptions } from 'app/client/lib/autocomplete';\nimport { IToken, TokenField, tokenFieldStyles } from 'app/client/lib/TokenField';\nimport { reportError } from 'app/client/models/errors';\nimport { colors, testId, theme } from 'app/client/ui2018/cssVars';\nimport { menuCssClass } from 'app/client/ui2018/menus';\nimport { cssChoiceToken } from 'app/client/widgets/ChoiceToken';\nimport { createMobileButtons, getButtonMargins } from 'app/client/widgets/EditorButtons';\nimport { EditorPlacement } from 'app/client/widgets/EditorPlacement';\nimport { FieldOptions, NewBaseEditor } from 'app/client/widgets/NewBaseEditor';\nimport { cssRefList, renderACItem } from 'app/client/widgets/ReferenceEditor';\nimport { ReferenceUtils } from 'app/client/lib/ReferenceUtils';\nimport { csvEncodeRow } from 'app/common/csvFormat';\nimport { CellValue } from \"app/common/DocActions\";\nimport { decodeObject, encodeObject } from 'app/plugin/objtypes';\nimport { dom, styled } from 'grainjs';\n\nclass ReferenceItem implements IToken, ACItem {\n  /**\n   * A slight misnomer: what actually gets shown inside the TokenField\n   * is the `text`. Instead, `label` identifies a Token in the TokenField by either\n   * its row id (if it has one) or its display text.\n   *\n   * TODO: Look into removing `label` from IToken altogether, replacing it with a solution\n   * similar to getItemText() from IAutocompleteOptions.\n   */\n  public label: string = typeof this.rowId === 'number' ? String(this.rowId) : this.text;\n  public cleanText: string = normalizeText(this.text);\n\n  constructor(\n    public text: string,\n    public rowId: number | 'new' | 'invalid',\n  ) {}\n}\n\n/**\n * A ReferenceListEditor offers an autocomplete of choices from the referenced table.\n */\nexport class ReferenceListEditor extends NewBaseEditor {\n  protected cellEditorDiv: HTMLElement;\n  protected commandGroup: any;\n\n  private _enableAddNew: boolean;\n  private _showAddNew: boolean = false;\n  private _tokenField: TokenField<ReferenceItem>;\n  private _textInput: HTMLInputElement;\n  private _dom: HTMLElement;\n  private _editorPlacement!: EditorPlacement;\n  private _contentSizer: HTMLElement;   // Invisible element to size the editor with all the tokens\n  private _inputSizer!: HTMLElement;     // Part of _contentSizer to size the text input\n  private _alignment: string;\n  private _utils: ReferenceUtils;\n\n  constructor(protected options: FieldOptions) {\n    super(options);\n\n    const docData = options.gristDoc.docData;\n    this._utils = new ReferenceUtils(options.field, docData);\n\n    const vcol = this._utils.visibleColModel;\n    this._enableAddNew = vcol && !vcol.isRealFormula() && !!vcol.colId();\n\n    const acOptions: IAutocompleteOptions<ReferenceItem> = {\n      menuCssClass: `${menuCssClass} ${cssRefList.className}`,\n      search: this._doSearch.bind(this),\n      renderItem: this._renderItem.bind(this),\n      getItemText: (item) => item.text,\n    };\n\n    this.commandGroup = this.autoDispose(createGroup(options.commands, null, true));\n    this._alignment = options.field.widgetOptionsJson.peek().alignment || 'left';\n\n    // If starting to edit by typing in a string, ignore previous tokens.\n    const cellValue = decodeObject(options.cellValue);\n    const startRowIds: unknown[] = options.editValue !== undefined || !Array.isArray(cellValue) ? [] : cellValue;\n\n    // If referenced table hasn't loaded yet, hold off on initializing tokens.\n    const needReload = (options.editValue === undefined && !this._utils.tableData.isLoaded);\n    const startTokens = needReload ?\n      [] : startRowIds.map(id => new ReferenceItem(this._utils.idToText(id), typeof id === 'number' ? id : 'invalid'));\n\n    this._tokenField = TokenField.ctor<ReferenceItem>().create(this, {\n      initialValue: startTokens,\n      renderToken: item => {\n        const isBlankReference = item.cleanText === '';\n        return [\n          isBlankReference ? '[Blank]' : item.text,\n          cssToken.cls('-blank', isBlankReference),\n          cssChoiceToken.cls('-invalid', item.rowId === 'invalid')\n        ];\n      },\n      createToken: text => new ReferenceItem(text, 'invalid'),\n      acOptions,\n      openAutocompleteOnFocus: true,\n      readonly : options.readonly,\n      trimLabels: true,\n      styles: {cssTokenField, cssToken, cssDeleteButton, cssDeleteIcon},\n    });\n\n    this._dom = dom('div.default_editor',\n      dom.cls(\"readonly_editor\", options.readonly),\n      dom.cls(cssReadonlyStyle.className, options.readonly),\n      this.cellEditorDiv = cssCellEditor(testId('widget-text-editor'),\n        this._contentSizer = cssContentSizer(),\n        elem => this._tokenField.attach(elem),\n      ),\n      createMobileButtons(options.commands),\n    );\n\n    this._textInput = this._tokenField.getTextInput();\n    dom.update(this._tokenField.getRootElem(),\n      dom.style('justify-content', this._alignment),\n    );\n    dom.update(this._tokenField.getHiddenInput(),\n      this.commandGroup.attach(),\n    );\n    dom.update(this._textInput,\n      // Resize the editor whenever user types into the textbox.\n      dom.on('input', () => this.resizeInput(true)),\n      dom.prop('value', options.editValue || ''),\n      this.commandGroup.attach(),\n    );\n\n    // The referenced table has probably already been fetched (because there must already be a\n    // Reference widget instantiated), but it's better to avoid this assumption.\n    docData.fetchTable(this._utils.refTableId).then(() => {\n      if (this.isDisposed()) { return; }\n      if (needReload) {\n        this._tokenField.setTokens(\n          startRowIds.map(id => new ReferenceItem(this._utils.idToText(id), typeof id === 'number' ? id : 'invalid'))\n        );\n        this.resizeInput();\n      }\n      const autocomplete = this._tokenField.getAutocomplete();\n      if (autocomplete) {\n        autocomplete.search();\n      }\n    })\n    .catch(reportError);\n  }\n\n  public attach(cellElem: Element): void {\n    // Attach the editor dom to page DOM.\n    this._editorPlacement = EditorPlacement.create(this, this._dom, cellElem, {margins: getButtonMargins()});\n\n    // Reposition the editor if needed for external reasons (in practice, window resize).\n    this.autoDispose(this._editorPlacement.onReposition.addListener(() => this.resizeInput()));\n\n    // Update the sizing whenever the tokens change. Delay it till next tick to give a chance for\n    // DOM updates that happen around tokenObs changes, to complete.\n    this.autoDispose(this._tokenField.tokensObs.addListener(() =>\n      Promise.resolve().then(() => this.resizeInput())));\n\n    this.setSizerLimits();\n\n    // Once the editor is attached to DOM, resize it to content, focus, and set cursor.\n    this.resizeInput();\n    this._textInput.focus();\n    const pos = Math.min(this.options.cursorPos, this._textInput.value.length);\n    this._textInput.setSelectionRange(pos, pos);\n  }\n\n  public getDom(): HTMLElement {\n    return this._dom;\n  }\n\n  public getCellValue(): CellValue {\n    const rowIds = this._tokenField.tokensObs.get().map(t => typeof t.rowId === 'number' ? t.rowId : t.text);\n    return encodeObject(rowIds);\n  }\n\n  public getTextValue(): string {\n    const rowIds = this._tokenField.tokensObs.get().map(t => typeof t.rowId === 'number' ? String(t.rowId) : t.text);\n    return csvEncodeRow(rowIds, {prettier: true});\n  }\n\n  public getCursorPos(): number {\n    return this._textInput.selectionStart || 0;\n  }\n\n  /**\n   * If any 'new' item are saved, add them to the referenced table first.\n   */\n  public async prepForSave() {\n    const tokens = this._tokenField.tokensObs.get();\n    const newValues = tokens.filter(t => t.rowId === 'new');\n    if (newValues.length === 0) { return; }\n\n    // Add the new items to the referenced table.\n    const colInfo = {[this._utils.visibleColId]: newValues.map(t => t.text)};\n    const rowIds = await this._utils.tableData.sendTableAction(\n      [\"BulkAddRecord\", new Array(newValues.length).fill(null), colInfo]\n    );\n\n    // Update the TokenField tokens with the returned row ids.\n    let i = 0;\n    const newTokens = tokens.map(t => {\n      return t.rowId === 'new' ? new ReferenceItem(t.text, rowIds[i++]) : t;\n    });\n    this._tokenField.setTokens(newTokens);\n  }\n\n  public setSizerLimits() {\n    // Set the max width of the sizer to the max we could possibly grow to, so that it knows to wrap\n    // once we reach it.\n    const rootElem = this._tokenField.getRootElem();\n    const maxSize = this._editorPlacement.calcSizeWithPadding(rootElem,\n      {width: Infinity, height: Infinity}, {calcOnly: true});\n    this._contentSizer.style.maxWidth = Math.ceil(maxSize.width) + 'px';\n  }\n\n  /**\n   * Helper which resizes the token-field to match its content.\n   */\n  protected resizeInput(onlyTextInput: boolean = false) {\n    if (this.isDisposed()) { return; }\n\n    const rootElem = this._tokenField.getRootElem();\n\n    // To size the content, we need both the tokens and the text typed into _textInput. We\n    // re-create the tokens using cloneNode(true) copies all styles and properties, but not event\n    // handlers. We can skip this step when we know that only _textInput changed.\n    if (!onlyTextInput || !this._inputSizer) {\n      this._contentSizer.innerHTML = '';\n\n      dom.update(this._contentSizer,\n        dom.update(rootElem.cloneNode(true) as HTMLElement,\n          dom.style('width', ''),\n          dom.style('height', ''),\n          this._inputSizer = cssInputSizer(),\n\n          // Remove the testId('tokenfield') from the cloned element, to simplify tests (so that\n          // selecting .test-tokenfield only returns the actual visible tokenfield container).\n          dom.cls('test-tokenfield', false),\n        )\n      );\n    }\n\n    // Use a separate sizer to size _textInput to the text inside it.\n    // \\u200B is a zero-width space; so the sizer will have height even when empty.\n    this._inputSizer.textContent = this._textInput.value + '\\u200B';\n    const rect = this._contentSizer.getBoundingClientRect();\n\n    const size = this._editorPlacement.calcSizeWithPadding(rootElem, rect);\n    rootElem.style.width = size.width + 'px';\n    rootElem.style.height = size.height + 'px';\n    this._textInput.style.width = this._inputSizer.getBoundingClientRect().width + 'px';\n  }\n\n  /**\n   * If the search text does not match anything exactly, adds 'new' item to it.\n   *\n   * Also see: prepForSave.\n   */\n   private async _doSearch(text: string): Promise<ACResults<ReferenceItem>> {\n    const {items, selectIndex, highlightFunc} = this._utils.autocompleteSearch(text);\n    const result: ACResults<ReferenceItem> = {\n      selectIndex,\n      highlightFunc,\n      items: items.map(i => new ReferenceItem(i.text, i.rowId))\n    };\n\n    this._showAddNew = false;\n    if (!this._enableAddNew || !text) { return result; }\n\n    const cleanText = normalizeText(text);\n    if (result.items.find((item) => item.cleanText === cleanText)) {\n      return result;\n    }\n\n    result.items.push(new ReferenceItem(text, 'new'));\n    this._showAddNew = true;\n\n    return result;\n  }\n\n  private _renderItem(item: ReferenceItem, highlightFunc: HighlightFunc) {\n    return renderACItem(\n      item.text,\n      highlightFunc,\n      item.rowId === 'new',\n      this._showAddNew\n    );\n  }\n}\n\nconst cssCellEditor = styled('div', `\n  background-color: ${theme.cellEditorBg};\n  font-family: var(--grist-font-family-data);\n  font-size: var(--grist-medium-font-size);\n`);\n\nconst cssTokenField = styled(tokenFieldStyles.cssTokenField, `\n  border: none;\n  align-items: start;\n  align-content: start;\n  padding: 0 3px;\n  height: min-content;\n  min-height: 22px;\n  color: black;\n  flex-wrap: wrap;\n`);\n\nconst cssToken = styled(tokenFieldStyles.cssToken, `\n  padding: 1px 4px;\n  margin: 2px;\n  line-height: 16px;\n  white-space: pre;\n\n  &.selected {\n    box-shadow: inset 0 0 0 1px ${colors.lightGreen};\n  }\n\n  &-blank {\n    color: ${colors.slate};\n  }\n`);\n\nconst cssDeleteButton = styled(tokenFieldStyles.cssDeleteButton, `\n  position: absolute;\n  top: -8px;\n  right: -6px;\n  border-radius: 16px;\n  background-color: ${colors.dark};\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  z-index: 1;\n  display: none;\n  align-items: center;\n  justify-content: center;\n\n  .${cssToken.className}:hover & {\n    display: flex;\n  }\n  .${cssTokenField.className}.token-dragactive & {\n    cursor: unset;\n  }\n`);\n\nconst cssDeleteIcon = styled(tokenFieldStyles.cssDeleteIcon, `\n  --icon-color: ${colors.light};\n  &:hover {\n    --icon-color: ${colors.darkGrey};\n  }\n`);\n\nconst cssContentSizer = styled('div', `\n  position: absolute;\n  left: 0;\n  top: -100px;\n  border: none;\n  visibility: hidden;\n  overflow: visible;\n  width: max-content;\n\n  & .${tokenFieldStyles.cssInputWrapper.className} {\n    display: none;\n  }\n`);\n\nconst cssInputSizer = styled('div', `\n  flex: auto;\n  min-width: 24px;\n  margin: 3px 2px;\n`);\n\nconst cssReadonlyStyle = styled('div', `\n  padding-left: 16px;\n  background: white;\n`);\n","import * as commands from 'app/client/components/commands';\nimport { DataRowModel } from 'app/client/models/DataRowModel';\nimport { ViewFieldRec } from 'app/client/models/entities/ViewFieldRec';\nimport { KoSaveableObservable } from 'app/client/models/modelUtil';\nimport { NewAbstractWidget, Options } from 'app/client/widgets/NewAbstractWidget';\nimport { dom } from 'grainjs';\n\n/**\n * ToggleBase - The base class for toggle widgets, such as a checkbox or a switch.\n */\nabstract class ToggleBase extends NewAbstractWidget {\n  protected _addClickEventHandler(row: DataRowModel) {\n    return dom.on('click', (event) => {\n      if (event.shiftKey) {\n        // Shift-click is for selection, don't also toggle the checkbox during it.\n        return;\n      }\n      if (!this.field.column().isRealFormula()) {\n        // Move the cursor here, and pretend that spacebar was pressed. This triggers an editing\n        // flow which is handled by CheckBoxEditor.skipEditor(). This way the edit applies to\n        // editRow, which handles setting default values based on widget linking.\n        commands.allCommands.setCursor.run(row, this.field);\n        commands.allCommands.input.run(' ');\n      }\n    });\n  }\n}\n\nexport class ToggleCheckBox extends ToggleBase {\n  constructor(field: ViewFieldRec, _options: Options = {}) {\n    super(field, {defaultTextColor: '#606060'});\n  }\n\n  public buildDom(row: DataRowModel) {\n    const value = row.cells[this.field.colId.peek()] as KoSaveableObservable<boolean>;\n    return dom('div.field_clip',\n      dom('div.widget_checkbox',\n        dom('div.widget_checkmark',\n          dom.show(value),\n          dom('div.checkmark_kick'),\n          dom('div.checkmark_stem')\n        ),\n        this._addClickEventHandler(row),\n      )\n    );\n  }\n}\n\nexport class ToggleSwitch extends ToggleBase {\n  constructor(field: ViewFieldRec, _options: Options = {}) {\n    super(field, {defaultTextColor: '#2CB0AF'});\n  }\n\n  public buildDom(row: DataRowModel) {\n    const value = row.cells[this.field.colId.peek()] as KoSaveableObservable<boolean>;\n    return dom('div.field_clip',\n      dom('div.widget_switch',\n        dom.cls('switch_on', value),\n        dom.cls('switch_transition', row._isRealChange),\n        dom('div.switch_slider'),\n        dom('div.switch_circle'),\n        this._addClickEventHandler(row),\n      )\n    );\n  }\n}\n","import {AttachmentsEditor} from 'app/client/widgets/AttachmentsEditor';\nimport {AttachmentsWidget} from 'app/client/widgets/AttachmentsWidget';\nimport CheckBoxEditor from 'app/client/widgets/CheckBoxEditor';\nimport ChoiceEditor from 'app/client/widgets/ChoiceEditor';\nimport {ChoiceListCell} from 'app/client/widgets/ChoiceListCell';\nimport {ChoiceListEditor} from 'app/client/widgets/ChoiceListEditor';\nimport {ChoiceTextBox} from 'app/client/widgets/ChoiceTextBox';\nimport DateEditor from 'app/client/widgets/DateEditor';\nimport DateTextBox from 'app/client/widgets/DateTextBox';\nimport DateTimeEditor from 'app/client/widgets/DateTimeEditor';\nimport DateTimeTextBox from 'app/client/widgets/DateTimeTextBox';\nimport {HyperLinkEditor} from 'app/client/widgets/HyperLinkEditor';\nimport {HyperLinkTextBox} from 'app/client/widgets/HyperLinkTextBox';\nimport {NewAbstractWidget} from 'app/client/widgets/NewAbstractWidget';\nimport {NewBaseEditor} from 'app/client/widgets/NewBaseEditor';\nimport {NTextBox} from 'app/client/widgets/NTextBox';\nimport {NTextEditor} from 'app/client/widgets/NTextEditor';\nimport {NumericTextBox} from 'app/client/widgets/NumericTextBox';\nimport {Reference} from 'app/client/widgets/Reference';\nimport {ReferenceEditor} from 'app/client/widgets/ReferenceEditor';\nimport {ReferenceList} from 'app/client/widgets/ReferenceList';\nimport {ReferenceListEditor} from 'app/client/widgets/ReferenceListEditor';\nimport {Spinner} from 'app/client/widgets/Spinner';\nimport {ToggleCheckBox, ToggleSwitch} from 'app/client/widgets/Toggle';\nimport {getWidgetConfiguration} from 'app/client/widgets/UserType';\nimport {GristType} from 'app/plugin/GristData';\n\n/**\n * Convert the name of a widget to its implementation.\n */\nexport const nameToWidget = {\n  'TextBox': NTextBox,\n  'TextEditor': NTextEditor,\n  'NumericTextBox': NumericTextBox,\n  'HyperLinkTextBox': HyperLinkTextBox,\n  'HyperLinkEditor': HyperLinkEditor,\n  'Spinner': Spinner,\n  'CheckBox': ToggleCheckBox,\n  'CheckBoxEditor': CheckBoxEditor,\n  'Reference': Reference,\n  'Switch': ToggleSwitch,\n  'ReferenceEditor': ReferenceEditor,\n  'ReferenceList': ReferenceList,\n  'ReferenceListEditor': ReferenceListEditor,\n  'ChoiceTextBox': ChoiceTextBox,\n  'ChoiceEditor': ChoiceEditor,\n  'ChoiceListCell': ChoiceListCell,\n  'ChoiceListEditor': ChoiceListEditor,\n  'DateTimeTextBox': DateTimeTextBox,\n  'DateTextBox': DateTextBox,\n  'DateEditor': DateEditor,\n  'AttachmentsWidget': AttachmentsWidget,\n  'AttachmentsEditor': AttachmentsEditor,\n  'DateTimeEditor': DateTimeEditor,\n};\n\n\nexport interface WidgetConstructor {create: (...args: any[]) => NewAbstractWidget}\n\n/** return a good class to instantiate for viewing a widget/type combination */\nexport function getWidgetConstructor(widget: string, type: string): WidgetConstructor {\n  const {config} = getWidgetConfiguration(widget, type as GristType);\n  return nameToWidget[config.cons as keyof typeof nameToWidget] as any;\n}\n\n/** return a good class to instantiate for editing a widget/type combination */\nexport function getEditorConstructor(widget: string, type: string): typeof NewBaseEditor {\n  const {config} = getWidgetConfiguration(widget, type as GristType);\n  return nameToWidget[config.editCons as keyof typeof nameToWidget] as any;\n}\n","import * as kf from 'app/client/lib/koForm';\nimport {DataRowModel} from 'app/client/models/DataRowModel';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {NumericTextBox} from 'app/client/widgets/NumericTextBox';\nimport {buildNumberFormat} from 'app/common/NumberFormat';\nimport {dom} from 'grainjs';\nimport * as ko from 'knockout';\n\n/**\n * Spinner - A widget with a text field and spinner.\n */\nexport class Spinner extends NumericTextBox {\n  private _stepSize: ko.Computed<number>;\n\n  constructor(field: ViewFieldRec) {\n    super(field);\n    const resolved = this.autoDispose(ko.computed(() => {\n      const {numMode} = this.options();\n      const docSettings = this.field.documentSettings();\n      return buildNumberFormat({numMode}, docSettings).resolvedOptions();\n    }));\n    this._stepSize = this.autoDispose(ko.computed(() => {\n      const extraScaling = (this.options().numMode === 'percent') ? 2 : 0;\n      return Math.pow(10, -(this.options().decimals || resolved().minimumFractionDigits) - extraScaling);\n    }));\n  }\n\n  public buildDom(row: DataRowModel) {\n    const value = row.cells[this.field.colId.peek()];\n    return dom.update(super.buildDom(row),\n      dom.cls('widget_spinner'),\n      kf.spinner(value, this._stepSize)\n    );\n  }\n}\n","import {DataRowModel} from 'app/client/models/DataRowModel';\nimport {colors, testId} from 'app/client/ui2018/cssVars';\nimport {isList} from 'app/common/gristTypes';\nimport {dom} from 'grainjs';\nimport {cssChoiceList, cssToken} from \"app/client/widgets/ChoiceListCell\";\nimport {Reference} from \"app/client/widgets/Reference\";\nimport {choiceToken} from \"app/client/widgets/ChoiceToken\";\n\n/**\n * ReferenceList - The widget for displaying lists of references to another table's records.\n */\nexport class ReferenceList extends Reference {\n  public buildDom(row: DataRowModel) {\n    return cssChoiceList(\n      dom.cls('field_clip'),\n      cssChoiceList.cls('-wrap', this.wrapping),\n      dom.style('justify-content', use => use(this.alignment) === 'right' ? 'flex-end' : use(this.alignment)),\n      dom.domComputed((use) => {\n\n        if (use(row._isAddRow) || this.isDisposed() || use(this.field.displayColModel).isDisposed()) {\n          // Work around JS errors during certain changes (noticed when visibleCol field gets removed\n          // for a column using per-field settings).\n          return null;\n        }\n        const value = row.cells[use(use(this.field.displayColModel).colId)];\n        if (!value) {\n          return null;\n        }\n        const content = use(value);\n        if (!content) { return null; }\n        // TODO: Figure out what the implications of this block are for ReferenceList.\n        // if (isVersions(content)) {\n        //   // We can arrive here if the reference value is unchanged (viewed as a foreign key)\n        //   // but the content of its displayCol has changed.  Postponing doing anything about\n        //   // this until we have three-way information for computed columns.  For now,\n        //   // just showing one version of the cell.  TODO: elaborate.\n        //   return use(this._formatValue)(content[1].local || content[1].parent);\n        // }\n        const items = isList(content) ? content.slice(1) : [content];\n        // Use field.visibleColFormatter instead of field.formatter\n        // because we're formatting each list element to render tokens, not the whole list.\n        const formatter = use(this.field.visibleColFormatter);\n        return items.map(item => formatter.formatAny(item));\n      },\n      (input) => {\n        if (!input) {\n          return null;\n        }\n        return input.map(token => {\n          const isBlankReference = token.trim() === '';\n          return choiceToken(\n            isBlankReference ? '[Blank]' : token,\n            {\n              textColor: isBlankReference ? colors.slate.value : undefined\n            },\n            dom.cls(cssToken.className),\n            testId('ref-list-cell-token')\n          );\n        });\n      }),\n    );\n  }\n}\n","import { ColumnTransform } from 'app/client/components/ColumnTransform';\nimport { Cursor } from 'app/client/components/Cursor';\nimport { FormulaTransform } from 'app/client/components/FormulaTransform';\nimport { GristDoc } from 'app/client/components/GristDoc';\nimport { addColTypeSuffix } from 'app/client/components/TypeConversion';\nimport { TypeTransform } from 'app/client/components/TypeTransform';\nimport { FloatingEditor } from 'app/client/widgets/FloatingEditor';\nimport { UnsavedChange } from 'app/client/components/UnsavedChanges';\nimport dom from 'app/client/lib/dom';\nimport { KoArray } from 'app/client/lib/koArray';\nimport * as kd from 'app/client/lib/koDom';\nimport * as kf from 'app/client/lib/koForm';\nimport * as koUtil from 'app/client/lib/koUtil';\nimport { makeT } from 'app/client/lib/localization';\nimport { reportError } from 'app/client/models/AppModel';\nimport { DataRowModel } from 'app/client/models/DataRowModel';\nimport { ColumnRec, DocModel, ViewFieldRec } from 'app/client/models/DocModel';\nimport { SaveableObjObservable, setSaveValue } from 'app/client/models/modelUtil';\nimport { CombinedStyle, Style } from 'app/client/models/Styles';\nimport { COMMENTS } from 'app/client/models/features';\nimport { FieldSettingsMenu } from 'app/client/ui/FieldMenus';\nimport { cssBlockedCursor, cssLabel, cssRow } from 'app/client/ui/RightPanelStyles';\nimport { buttonSelect, cssButtonSelect } from 'app/client/ui2018/buttonSelect';\nimport { theme } from 'app/client/ui2018/cssVars';\nimport { IOptionFull, menu, select } from 'app/client/ui2018/menus';\nimport { DiffBox } from 'app/client/widgets/DiffBox';\nimport { buildErrorDom } from 'app/client/widgets/ErrorDom';\nimport { FieldEditor, saveWithoutEditor } from 'app/client/widgets/FieldEditor';\nimport { CellDiscussionPopup, EmptyCell } from 'app/client/widgets/DiscussionEditor';\nimport { openFormulaEditor } from 'app/client/widgets/FormulaEditor';\nimport { NewAbstractWidget } from 'app/client/widgets/NewAbstractWidget';\nimport { NewBaseEditor } from \"app/client/widgets/NewBaseEditor\";\nimport * as UserType from 'app/client/widgets/UserType';\nimport * as UserTypeImpl from 'app/client/widgets/UserTypeImpl';\nimport * as gristTypes from 'app/common/gristTypes';\nimport { getReferencedTableId, isFullReferencingType } from 'app/common/gristTypes';\nimport { CellValue } from 'app/plugin/GristData';\nimport { Computed, Disposable, fromKo, dom as grainjsDom,\n         makeTestId, MultiHolder, Observable, styled, toKo } from 'grainjs';\nimport * as ko from 'knockout';\nimport * as _ from 'underscore';\n\nconst testId = makeTestId('test-fbuilder-');\nconst t = makeT('FieldBuilder');\n\n\n// Creates a FieldBuilder object for each field in viewFields\nexport function createAllFieldWidgets(gristDoc: GristDoc, viewFields: ko.Computed<KoArray<ViewFieldRec>>,\n                                      cursor: Cursor, options: { isPreview?: boolean } = {}) {\n  // TODO: Handle disposal from the map when fields are removed.\n  return viewFields().map(function(field) {\n    return new FieldBuilder(gristDoc, field, cursor, options);\n  }).setAutoDisposeValues();\n}\n\n/**\n * Returns the appropriate object from UserType.typeDefs, defaulting to Text for unknown types.\n */\nfunction getTypeDefinition(type: string | false) {\n  if (!type) { return UserType.typeDefs.Text; }\n  return UserType.typeDefs[type] || UserType.typeDefs.Text;\n}\n\ntype ComputedStyle = {style?: Style; error?: true} | null | undefined;\n\n/**\n * Builds a font option computed property.\n */\nfunction buildFontOptions(\n  builder: FieldBuilder,\n  computedRule: ko.Computed<ComputedStyle>,\n  optionName: keyof Style) {\n\n  return koUtil.withKoUtils(ko.computed(() => {\n    if (builder.isDisposed()) { return false; }\n    const style = computedRule()?.style;\n    const styleFlag = style?.[optionName] || builder.field[optionName]();\n    return styleFlag;\n  })).onlyNotifyUnequal();\n}\n\n/**\n * Creates an instance of FieldBuilder.  Used to create all column configuration DOMs, cell DOMs,\n * and cell editor DOMs for all Grist Types.\n * @param {Object} field - The field for which the DOMs are to be created.\n * @param {Object} cursor - The cursor object, used to get the cursor position while saving values.\n */\nexport class FieldBuilder extends Disposable {\n  public columnTransform: ColumnTransform | null;\n  public readonly origColumn: ColumnRec;\n  public readonly options: SaveableObjObservable<any>;\n  public readonly widget: ko.PureComputed<any>;\n  public readonly isCallPending: ko.Observable<boolean>;\n  public readonly widgetImpl: ko.Computed<NewAbstractWidget>;\n  public readonly diffImpl: NewAbstractWidget;\n\n  private readonly _availableTypes: Computed<Array<IOptionFull<string>>>;\n  private readonly _readOnlyPureType: ko.PureComputed<string>;\n  private readonly _isRightType: ko.PureComputed<(value: CellValue, options?: any) => boolean>;\n  private readonly _refTableId: ko.Computed<string | null>;\n  private readonly _isRef: ko.Computed<boolean>;\n  private readonly _rowMap: Map<DataRowModel, Element>;\n  private readonly _isTransformingFormula: ko.Computed<boolean>;\n  private readonly _isTransformingType: ko.Computed<boolean>;\n  private readonly _widgetCons: ko.Computed<{create: (...args: any[]) => NewAbstractWidget}>;\n  private readonly _docModel: DocModel;\n  private readonly _readonly: Computed<boolean>;\n  private readonly _comments: ko.Computed<boolean>;\n  private readonly _showRefConfigPopup: ko.Observable<boolean>;\n  private readonly _isEditorActive = Observable.create(this, false);\n\n  public constructor(public readonly gristDoc: GristDoc, public readonly field: ViewFieldRec,\n                     private _cursor: Cursor, private _options: { isPreview?: boolean } = {}) {\n    super();\n\n    this._docModel = gristDoc.docModel;\n    this.origColumn = field.origCol();\n    this.options = field.widgetOptionsJson;\n    this._comments = ko.pureComputed(() => toKo(ko, COMMENTS())());\n\n    this._readOnlyPureType = ko.pureComputed(() => this.field.column().pureType());\n\n    this._readonly = Computed.create(this, (use) =>\n      use(gristDoc.isReadonly) || use(field.disableEditData) || Boolean(this._options.isPreview));\n\n    // Observable with a list of available types.\n    this._availableTypes = Computed.create(this, (use) => {\n      const isFormula = use(this.origColumn.isFormula);\n      const types: Array<IOptionFull<string>> = [];\n      _.each(UserType.typeDefs, (def: any, key: string|number) => {\n        const o: IOptionFull<string> = {\n          value: key as string,\n          label: def.label,\n          icon: def.icon\n        };\n        if (key === 'Any') {\n          // User is unable to select the Any type in non-formula columns.\n          o.disabled = !isFormula;\n        }\n        types.push(o);\n      });\n      return types;\n    });\n\n    // Observable which evaluates to a *function* that decides if a value is valid.\n    this._isRightType = ko.pureComputed<(value: CellValue, options?: any) => boolean>(() => {\n      return gristTypes.isRightType(this._readOnlyPureType()) || _.constant(false);\n    });\n\n    // Returns a boolean indicating whether the column is type Reference or ReferenceList.\n    this._isRef = this.autoDispose(ko.computed(() => {\n      const type = this.field.column().type();\n      return type !== \"Attachments\" && isFullReferencingType(type);\n    }));\n\n    // Gives the table ID to which the reference points.\n    this._refTableId = this.autoDispose(ko.computed({\n      read: () => getReferencedTableId(this.field.column().type()),\n      write: val => {\n        const type = this.field.column().type();\n        if (type.startsWith('Ref:')) {\n          void this._setType(`Ref:${val}`);\n        } else {\n          void this._setType(`RefList:${val}`);\n        }\n      }\n    }));\n\n    this.widget = ko.pureComputed(() => this.field.widget());\n\n    // Whether there is a pending call that transforms column.\n    this.isCallPending = ko.observable(false);\n\n    // Maintains an instance of the transform object if the field is currently being transformed,\n    // and null if not. Gets disposed along with the transform menu dom.\n    this.columnTransform = null;\n\n    // Returns a boolean indicating whether a formula transform is in progress.\n    this._isTransformingFormula = this.autoDispose(ko.computed(() => {\n      return this.field.column().isTransforming() && this.columnTransform instanceof FormulaTransform;\n    }));\n    // Returns a boolean indicating whether a type transform is in progress.\n    this._isTransformingType = this.autoDispose(ko.computed(() => {\n      return (this.field.column().isTransforming() || this.isCallPending()) &&\n        (this.columnTransform instanceof TypeTransform);\n    }));\n\n    // Map from rowModel to cell dom for the field to which this fieldBuilder applies.\n    this._rowMap = new Map();\n\n    // Returns the constructor for the widget, and only notifies subscribers on changes.\n    this._widgetCons = this.autoDispose(koUtil.withKoUtils(ko.computed(() => {\n      return UserTypeImpl.getWidgetConstructor(this.options().widget,\n                                               this._readOnlyPureType());\n    })).onlyNotifyUnequal());\n\n    // Computed builder for the widget.\n    this.widgetImpl = this.autoDispose(koUtil.computedBuilder(() => {\n      const cons = this._widgetCons();\n      // Must subscribe to `colId` so that field.colId is rechecked on transform.\n      return cons.create.bind(cons, this.field, this.field.colId());\n    }, this).extend({ deferred: true }));\n\n    this.diffImpl = this.autoDispose(DiffBox.create(this.field));\n\n    this._showRefConfigPopup = ko.observable(false);\n  }\n\n  public buildSelectWidgetDom() {\n    return grainjsDom.maybe((use) => !use(this._isTransformingType) && use(this._readOnlyPureType), type => {\n      const typeWidgets = getTypeDefinition(type).widgets;\n      const widgetOptions = Object.keys(typeWidgets).map(label => ({\n        label,\n        value: label,\n        icon: typeWidgets[label].icon\n      }));\n      if (widgetOptions.length <= 1) { return null; }\n      // Here we need to accommodate the fact that the widget can be null, which\n      // won't be visible on a select component when disabled.\n      const defaultWidget = Computed.create(null, use => {\n        if (widgetOptions.length <= 2) {\n          return;\n        }\n        const value = use(this.field.config.widget);\n        return value;\n      });\n      defaultWidget.onWrite((value) => this.field.config.widget(value));\n      const disabled = Computed.create(null, use => !use(this.field.config.sameWidgets));\n      return [\n        cssLabel(t('CELL FORMAT')),\n        cssRow(\n          grainjsDom.autoDispose(defaultWidget),\n          widgetOptions.length <= 2 ?\n            buttonSelect(\n              fromKo(this.field.config.widget),\n              widgetOptions,\n              cssButtonSelect.cls(\"-disabled\", disabled),\n            ) :\n            select(\n              defaultWidget,\n              widgetOptions,\n              {\n                disabled,\n                defaultLabel: t('Mixed format')\n              }\n            ),\n          testId('widget-select')\n        )\n      ];\n    });\n  }\n\n  /**\n   * Build the type change dom.\n   */\n  public buildSelectTypeDom() {\n    const holder = new MultiHolder();\n    const commonType = Computed.create(holder, use => use(use(this.field.viewSection).columnsType));\n    const selectType = Computed.create(holder, (use) => {\n      const myType = use(fromKo(this._readOnlyPureType));\n      return use(commonType) === 'mixed' ? '' : myType;\n    });\n    selectType.onWrite(newType => {\n      const sameType = newType === this._readOnlyPureType.peek();\n      if (!sameType || commonType.get() === 'mixed') {\n        if (['Ref', 'RefList'].includes(newType)) {\n          this._showRefConfigPopup(true);\n        }\n        return this._setType(newType);\n      }\n    });\n    const onDispose = () => (this.isDisposed() || selectType.set(this.field.column().pureType()));\n    const allFormulas = Computed.create(holder, use => use(use(this.field.viewSection).columnsAllIsFormula));\n    return [\n      cssRow(\n        grainjsDom.autoDispose(holder),\n        select(selectType, this._availableTypes, {\n          disabled: (use) =>\n            // If we are transforming column at this moment (applying a formula to change data),\n            use(this._isTransformingFormula) ||\n            // If this is a summary column\n            use(this.origColumn.disableModifyBase) ||\n            // If there are multiple column selected, but all have different type than Any.\n            (use(this.field.config.multiselect) && !use(allFormulas)) ||\n            // If we are waiting for a server response\n            use(this.isCallPending),\n          menuCssClass: cssTypeSelectMenu.className,\n          defaultLabel: t('Mixed types'),\n          renderOptionArgs: (op) => {\n            if (['Ref', 'RefList'].includes(selectType.get())) {\n              // Don't show tip if a reference column type is already selected.\n              return;\n            }\n\n            if (op.label === 'Reference') {\n              return this.gristDoc.behavioralPromptsManager.attachTip('referenceColumns', {\n                popupOptions: {\n                  attach: `.${cssTypeSelectMenu.className}`,\n                  placement: 'left-start',\n                }\n              });\n            } else {\n              return null;\n            }\n          }\n        }),\n        testId('type-select'),\n        grainjsDom.cls('tour-type-selector'),\n        grainjsDom.cls(cssBlockedCursor.className, use =>\n          use(this.origColumn.disableModifyBase) ||\n          (use(this.field.config.multiselect) && !use(allFormulas))\n        ),\n      ),\n      grainjsDom.maybe((use) => use(this._isRef) && !use(this._isTransformingType), () => this._buildRefTableSelect()),\n      grainjsDom.maybe(this._isTransformingType, () => {\n        // Editor dom must be built before preparing transform.\n        return dom('div.type_transform_prompt',\n                   kf.prompt(\n                     dom('div',\n                         grainjsDom.maybe(this._isRef, () => this._buildRefTableSelect()),\n                         grainjsDom.maybe((use) => use(this.field.column().isTransforming),\n                                          () => this.columnTransform!.buildDom())\n                     )\n                   ),\n                   grainjsDom.onDispose(onDispose)\n        );\n      })\n    ];\n  }\n\n  // Helper function to set the column type to newType.\n  public _setType(newType: string): Promise<unknown>|undefined {\n    if (this.origColumn.isFormula()) {\n      // Do not type transform a new/empty column or a formula column. Just make a best guess for\n      // the full type, and set it. If multiple columns are selected (and all are formulas/empty),\n      // then we will set the type for all of them using full type guessed from the first column.\n      const column = this.field.column();\n      const calculatedType = addColTypeSuffix(newType, column, this._docModel);\n      // If we selected multiple empty/formula columns, make the change for all of them.\n      if (this.field.viewSection.peek().selectedFields.peek().length > 1 &&\n          ['formula', 'empty'].indexOf(this.field.viewSection.peek().columnsBehavior.peek())) {\n        return this.gristDoc.docData.bundleActions(t(\"Changing multiple column types\"), () =>\n          Promise.all(this.field.viewSection.peek().selectedFields.peek().map(f =>\n            f.column.peek().type.setAndSave(calculatedType)\n        ))).catch(reportError);\n      }\n      column.type.setAndSave(calculatedType).catch(reportError);\n    } else if (!this.columnTransform) {\n      this.columnTransform = TypeTransform.create(null, this.gristDoc, this);\n      return this.columnTransform.prepare(newType);\n    } else {\n      if (this.columnTransform instanceof TypeTransform) {\n        return this.columnTransform.setType(newType);\n      }\n    }\n  }\n\n  // Builds the reference type table selector. Built when the column is type reference.\n  public _buildRefTableSelect() {\n    const allTables = Computed.create(null, (use) =>\n                                      use(this._docModel.visibleTables.getObservable()).map(tableRec => ({\n                                        value: use(tableRec.tableId),\n                                        label: use(tableRec.tableNameDef),\n                                        icon: 'FieldTable' as const\n                                      }))\n                                     );\n    const isDisabled = Computed.create(null, use => {\n      return use(this.origColumn.disableModifyBase) || use(this.field.config.multiselect);\n    });\n    return [\n      cssLabel(t('DATA FROM TABLE'),\n        !this._showRefConfigPopup.peek() ? null : this.gristDoc.behavioralPromptsManager.attachTip(\n          'referenceColumnsConfig',\n          {\n            onDispose: () => this._showRefConfigPopup(false),\n            popupOptions: {\n              placement: 'left-start',\n            },\n          }\n        ),\n      ),\n      cssRow(\n        dom.autoDispose(allTables),\n        dom.autoDispose(isDisabled),\n        select(fromKo(this._refTableId), allTables, {\n          // Disallow changing the destination table when the column should not be modified\n          // (specifically when it's a group-by column of a summary table).\n          disabled: isDisabled,\n        }),\n        testId('ref-table-select')\n      )\n    ];\n  }\n\n  /**\n   * Build the formula transform dom\n   */\n  public buildTransformDom() {\n    const transformButton = ko.computed({\n      read: () => this.field.column().isTransforming(),\n      write: val => {\n        if (val) {\n          this.columnTransform = FormulaTransform.create(null, this.gristDoc, this);\n          return this.columnTransform.prepare();\n        } else {\n          return this.columnTransform && this.columnTransform.cancel();\n        }\n      }\n    });\n    return dom('div',\n               dom.autoDispose(transformButton),\n               dom.onDispose(() => {\n                 // When losing focus, if there's an active column transform, finalize it.\n                 if (this.columnTransform) {\n                   this.columnTransform.finalize().catch(reportError);\n                 }\n               }),\n               kf.row(\n                 15, kf.label(t('Apply Formula to Data')),\n                 3, kf.buttonGroup(\n                   kf.checkButton(transformButton,\n                     dom('span.glyphicon.glyphicon-flash'),\n                     dom.testId(\"FieldBuilder_editTransform\"),\n                     testId('edit-transform'),\n                     kd.toggleClass('disabled', () => this._isTransformingType() || this.origColumn.isFormula() ||\n                       this.origColumn.disableModifyBase())\n                   )\n                 )\n               ),\n               kd.maybe(this._isTransformingFormula, () => {\n                 return this.columnTransform!.buildDom();\n               })\n    );\n  }\n\n  /**\n   * Builds the FieldBuilder Options Config DOM. Calls the buildConfigDom function of its widgetImpl.\n   */\n  public buildConfigDom() {\n    // NOTE: adding a grainjsDom .maybe here causes the disposable order of the widgetImpl and\n    // the dom created by the widgetImpl to get out of sync.\n    return dom('div',\n      kd.maybe(() => !this._isTransformingType() && this.widgetImpl(), (widget: NewAbstractWidget) =>\n        dom('div', widget.buildConfigDom(), cssSeparator())\n      )\n    );\n  }\n\n  public buildColorConfigDom() {\n    // NOTE: adding a grainjsDom .maybe here causes the disposable order of the widgetImpl and\n    // the dom created by the widgetImpl to get out of sync.\n    return dom('div',\n      kd.maybe(() => !this._isTransformingType() && this.widgetImpl(), (widget: NewAbstractWidget) =>\n        dom('div', widget.buildColorConfigDom(this.gristDoc))\n      )\n    );\n  }\n\n  /**\n   * Builds the FieldBuilder Options Config DOM. Calls the buildConfigDom function of its widgetImpl.\n   */\n  public buildSettingOptions() {\n    // NOTE: adding a grainjsDom .maybe here causes the disposable order of the widgetImpl and\n    // the dom created by the widgetImpl to get out of sync.\n    return dom('div',\n      kd.maybe(() => !this._isTransformingType() && this.widgetImpl(), (widget: NewAbstractWidget) =>\n        dom('div',\n          // If there is more than one field for this column (i.e. present in multiple views).\n          kd.maybe(() => this.origColumn.viewFields().all().length > 1, () =>\n            dom('div.fieldbuilder_settings',\n              kf.row(\n                kd.toggleClass('fieldbuilder_settings_header', true),\n                kf.label(\n                  dom('div.fieldbuilder_settings_button',\n                      dom.testId('FieldBuilder_settings'),\n                      kd.text(() => this.field.useColOptions() ? 'Common' : 'Separate'), ' ▾',\n                      menu(() => FieldSettingsMenu(\n                        this.field.useColOptions(),\n                        this.field.viewSection().isRaw(),\n                        {\n                          useSeparate: () => this.fieldSettingsUseSeparate(),\n                          saveAsCommon: () => this.fieldSettingsSaveAsCommon(),\n                          revertToCommon: () => this.fieldSettingsRevertToCommon(),\n                        },\n                      )),\n                    ),\n                  'Field in ',\n                  kd.text(() => this.origColumn.viewFields().all().length),\n                  ' views'\n                )\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n\n  public fieldSettingsUseSeparate() {\n    return this.gristDoc.docData.bundleActions(\n      t(\"Use separate field settings for {{colId}}\", { colId: this.origColumn.colId() }), () => {\n        return Promise.all([\n          setSaveValue(this.field.widgetOptions, this.field.column().widgetOptions()),\n          setSaveValue(this.field.visibleCol, this.field.column().visibleCol()),\n          this.field.saveDisplayFormula(this.field.column()._displayColModel().formula() || '')\n        ]);\n      }\n    );\n  }\n\n  public fieldSettingsSaveAsCommon() {\n    return this.gristDoc.docData.bundleActions(\n      t(\"Save field settings for {{colId}} as common\", { colId: this.origColumn.colId() }), () => {\n        return Promise.all([\n          setSaveValue(this.field.column().widgetOptions, this.field.widgetOptions()),\n          setSaveValue(this.field.column().visibleCol, this.field.visibleCol()),\n          this.field.column().saveDisplayFormula(this.field._displayColModel().formula() || ''),\n          setSaveValue(this.field.widgetOptions, ''),\n          setSaveValue(this.field.visibleCol, 0),\n          this.field.saveDisplayFormula('')\n        ]);\n      }\n    );\n  }\n\n  public fieldSettingsRevertToCommon() {\n    return this.gristDoc.docData.bundleActions(\n      t(\"Revert field settings for {{colId}} to common\", { colId: this.origColumn.colId() }), () => {\n        return Promise.all([\n          setSaveValue(this.field.widgetOptions, ''),\n          setSaveValue(this.field.visibleCol, 0),\n          this.field.saveDisplayFormula('')\n        ]);\n      }\n    );\n  }\n\n  /**\n   * Builds the cell and editor DOM for the chosen UserType. Calls the buildDom and\n   *  buildEditorDom functions of its widgetImpl.\n   */\n  public buildDomWithCursor(row: DataRowModel, isActive: ko.Computed<boolean>, isSelected: ko.Computed<boolean>) {\n    const computedFlags = koUtil.withKoUtils(ko.pureComputed(() => {\n      return this.field.rulesColsIds().map(colRef => row.cells[colRef]?.() ?? false);\n    }, this).extend({ deferred: true }));\n    // Here we are using computedWithPrevious helper, to return\n    // the previous value of computed rule. When user adds or deletes\n    // rules there is a brief moment that rule is still not evaluated\n    // (rules.length != value.length), in this case return last value\n    // and wait for the update.\n    const computedRule = koUtil.withKoUtils(ko.pureComputed<ComputedStyle>(() => {\n      if (this.isDisposed()) { return null; }\n      // If this is add row or a blank row (not loaded yet with all fields = '')\n      // don't use rules.\n      if (row._isAddRow() || !row.id()) { return null; }\n      const styles: Style[] = this.field.rulesStyles();\n      // Make sure that rules where computed.\n      if (!Array.isArray(styles) || styles.length === 0) { return null; }\n      const flags = computedFlags();\n      // Make extra sure that all rules are up to date.\n      // If not, fallback to the previous value.\n      // We need to make sure that all rules columns are created,\n      // sometimes there are more styles for a brief moment.\n      if (styles.length < flags.length) { return/* undefined */; }\n      // We will combine error information in the same computed value.\n      // If there is an error in rules - return it instead of the style.\n      const error = flags.some(f => !gristTypes.isValidRuleValue(f));\n      if (error) {\n        return { error };\n      }\n      // Combine them into a single style option.\n      return { style : new CombinedStyle(styles, flags) };\n    }, this).extend({ deferred: true })).previousOnUndefined();\n\n    const widgetObs = koUtil.withKoUtils(ko.computed(() => {\n      // TODO: Accessing row values like this doesn't always work (row and field might not be updated\n      // simultaneously).\n      if (this.isDisposed()) { return null; }   // Work around JS errors during field removal.\n      const value = row.cells[this.field.colId()];\n      const cell = value && value();\n      if ((value as any) && this._isRightType()(cell, this.options) || row._isAddRow.peek()) {\n        return this.widgetImpl();\n      } else if (gristTypes.isVersions(cell)) {\n        return this.diffImpl;\n      } else {\n        return null;\n      }\n    }).extend({ deferred: true })).onlyNotifyUnequal();\n\n    const ruleText = koUtil.withKoUtils(ko.computed(() => {\n      if (this.isDisposed()) { return null; }\n      return computedRule()?.style?.textColor || '';\n    })).onlyNotifyUnequal();\n\n    const ruleFill = koUtil.withKoUtils(ko.computed(() => {\n      if (this.isDisposed()) { return null; }\n      return notTransparent(computedRule()?.style?.fillColor || '');\n    })).onlyNotifyUnequal();\n\n    const fontBold = buildFontOptions(this, computedRule, 'fontBold');\n    const fontItalic = buildFontOptions(this, computedRule, 'fontItalic');\n    const fontUnderline = buildFontOptions(this, computedRule, 'fontUnderline');\n    const fontStrikethrough = buildFontOptions(this, computedRule, 'fontStrikethrough');\n\n    const errorInStyle = ko.pureComputed(() => Boolean(computedRule()?.error));\n\n    const cellText = ko.pureComputed(() => this.field.textColor() || '');\n    const cellFill = ko.pureComputed(() => notTransparent(this.field.fillColor() || ''));\n\n    const hasComment = koUtil.withKoUtils(ko.computed(() => {\n      if (this.isDisposed()) { return false; }   // Work around JS errors during field removal.\n      if (!this._comments()) { return false; }\n      if (this.gristDoc.isReadonlyKo()) { return false; }\n      const rowId = row.id();\n      const discussion = this.field.column().cells().all()\n        .find(d =>\n          d.rowId() === rowId\n          && !d.resolved()\n          && d.type() === gristTypes.CellInfoType.COMMENT\n          && !d.hidden()\n          && d.root());\n      return Boolean(discussion);\n    }).extend({ deferred: true })).onlyNotifyUnequal();\n\n    const domHolder = new MultiHolder();\n    domHolder.autoDispose(hasComment);\n    domHolder.autoDispose(widgetObs);\n    domHolder.autoDispose(computedFlags);\n    domHolder.autoDispose(errorInStyle);\n    domHolder.autoDispose(cellText);\n    domHolder.autoDispose(cellFill);\n    domHolder.autoDispose(computedRule);\n    domHolder.autoDispose(fontBold);\n    domHolder.autoDispose(fontItalic);\n    domHolder.autoDispose(fontUnderline);\n    domHolder.autoDispose(fontStrikethrough);\n\n    return (elem: Element) => {\n      this._rowMap.set(row, elem);\n      dom(elem,\n          dom.autoDispose(domHolder),\n          kd.style('--grist-cell-color', cellText),\n          kd.style('--grist-cell-background-color', cellFill),\n          kd.style('--grist-rule-color', ruleText),\n          kd.style('--grist-column-rule-background-color', ruleFill),\n          this._options.isPreview ? null : kd.cssClass(this.field.formulaCssClass),\n          kd.toggleClass('field-with-comments', hasComment),\n          kd.maybe(hasComment, () => dom('div.field-comment-indicator')),\n          kd.toggleClass(\"readonly\", toKo(ko, this._readonly)),\n          kd.maybe(isSelected, () => dom('div.selected_cursor',\n                                         kd.toggleClass('active_cursor', isActive)\n                                        )),\n          kd.scope(widgetObs, (widget: NewAbstractWidget) => {\n            if (this.isDisposed()) { return null; }   // Work around JS errors during field removal.\n            const cellDom = widget ? widget.buildDom(row) : buildErrorDom(row, this.field);\n            return dom(cellDom, kd.toggleClass('has_cursor', isActive),\n                       kd.toggleClass('field-error-from-style', errorInStyle),\n                       kd.toggleClass('font-bold', fontBold),\n                       kd.toggleClass('font-underline', fontUnderline),\n                       kd.toggleClass('font-italic', fontItalic),\n                       kd.toggleClass('font-strikethrough', fontStrikethrough));\n          })\n         );\n    };\n  }\n\n  public buildEditorDom(editRow: DataRowModel, mainRowModel: DataRowModel, options: {\n    init?: string,\n    state?: any\n  }) {\n    // If the user attempts to edit a value during transform, finalize (i.e. cancel or execute)\n    // the transform.\n    if (this.columnTransform) {\n      this.columnTransform.finalize().catch(reportError);\n      return;\n    }\n\n    // Clear previous editor. Some caveats:\n    // - The floating editor has an async cleanup routine, but it promises that it won't affect as.\n    // - All other editors should be synchronous, so this line will remove all opened editors.\n    const holder = this.gristDoc.fieldEditorHolder;\n    // If the global editor is from our own field, we will dispose it immediately, otherwise we will\n    // rely on the clipboard to dispose it by grabbing focus.\n    const clearOwn = () => this.isEditorActive() && holder.clear();\n\n    // If this is censored value, don't open up the editor, unless it is a formula field.\n    const cell = editRow.cells[this.field.colId()];\n    const value = cell && cell();\n    if (gristTypes.isCensored(value) && !this.origColumn.isFormula.peek()) {\n      return clearOwn();\n    }\n\n    const editorCtor: typeof NewBaseEditor =\n      UserTypeImpl.getEditorConstructor(this.options().widget, this._readOnlyPureType());\n    // constructor may be null for a read-only non-formula field, though not today.\n    if (!editorCtor) {\n      return clearOwn();\n    }\n\n    if (this._readonly.get() && editorCtor.supportsReadonly && !editorCtor.supportsReadonly()) {\n      return clearOwn();\n    }\n\n    if (!this._readonly.get() && saveWithoutEditor(editorCtor, editRow, this.field, options.init)) {\n      return clearOwn();\n    }\n\n    const cellElem = this._rowMap.get(mainRowModel)!;\n\n    // The editor may dispose itself; the Holder will know to clear itself in this case.\n    const fieldEditor = FieldEditor.create(holder, {\n      gristDoc: this.gristDoc,\n      field: this.field,\n      cursor: this._cursor,\n      editRow,\n      cellElem,\n      editorCtor,\n      state: options.state,\n      startVal: this._readonly.get() ? undefined : options.init, // don't start with initial value\n      readonly: this._readonly.get() // readonly for editor will not be observable\n    });\n    this._isEditorActive.set(true);\n\n    // expose the active editor in a grist doc as an observable\n    fieldEditor.onDispose(() => {\n      this._isEditorActive.set(false);\n      this.gristDoc.activeEditor.set(null);\n    });\n    this.gristDoc.activeEditor.set(fieldEditor);\n  }\n\n  public buildDiscussionPopup(editRow: DataRowModel, mainRowModel: DataRowModel, discussionId?: number) {\n    const owner = this.gristDoc.fieldEditorHolder;\n    const cellElem: Element = this._rowMap.get(mainRowModel)!;\n    if (this.columnTransform) {\n      this.columnTransform.finalize().catch(reportError);\n      return;\n    }\n    if (editRow._isAddRow.peek() || this._readonly.get()) {\n      return;\n    }\n    const holder = this.gristDoc.fieldEditorHolder;\n\n    const cell = editRow.cells[this.field.colId()];\n    const value = cell && cell();\n    if (gristTypes.isCensored(value)) {\n      holder.clear();\n      return;\n    }\n\n    const tableRef = this.field.viewSection.peek()!.tableRef.peek()!;\n\n    // Reuse fieldEditor holder to make sure only one popup/editor is attached to the cell.\n    const discussionHolder = MultiHolder.create(owner);\n    const discussions = EmptyCell.create(discussionHolder, {\n      gristDoc: this.gristDoc,\n      tableRef,\n      column: this.field.column.peek(),\n      rowId: editRow.id.peek(),\n    });\n    CellDiscussionPopup.create(discussionHolder, {\n      domEl: cellElem,\n      topic: discussions,\n      discussionId,\n      gristDoc: this.gristDoc,\n      closeClicked: () => owner.clear()\n    });\n  }\n\n  public isEditorActive() {\n    const holder = this.gristDoc.fieldEditorHolder;\n    return !holder.isEmpty() && this._isEditorActive.get();\n  }\n\n  /**\n   * Open the formula editor in the side pane. It will be positioned over refElem.\n   */\n  public openSideFormulaEditor(options: {\n    editRow: DataRowModel,\n    refElem: Element,\n    canDetach: boolean,\n    editValue?: string,\n    onSave?: (column: ColumnRec, formula: string) => Promise<void>,\n    onCancel?: () => void\n  }) {\n    const {editRow, refElem, canDetach, editValue, onSave, onCancel} = options;\n\n    // Remember position when the popup was opened.\n    const position = this.gristDoc.cursorPosition.get();\n\n    // Create a controller for the floating editor. It is primarily responsible for moving the editor\n    // dom from the place where it was rendered to the popup (and moving it back).\n    const floatController = {\n      attach: async (content: HTMLElement) => {\n        // If we haven't change page and the element is still in the DOM, move the editor to the\n        // back to where it was rendered. It still has it's content, so no need to dispose it.\n        if (refElem.isConnected) {\n          formulaEditor.attach(refElem);\n        } else {\n          // Else, we will navigate to the position we left off, dispose the editor and the content.\n          formulaEditor.dispose();\n          grainjsDom.domDispose(content);\n          await this.gristDoc.recursiveMoveToCursorPos(position!, true);\n        }\n      },\n      detach() {\n        return formulaEditor.detach();\n      },\n      autoDispose(el: Disposable) {\n        return formulaEditor.autoDispose(el);\n      },\n      dispose() {\n        formulaEditor.dispose();\n      }\n    };\n\n    // Create a custom cleanup method, that won't destroy us when we loose focus while being detached.\n    function setupEditorCleanup(\n      owner: MultiHolder, gristDoc: GristDoc,\n      editingFormula: ko.Computed<boolean>, _saveEdit: () => Promise<unknown>\n    ) {\n      // Just override the behavior on focus lost.\n      const saveOnFocus = () => floatingExtension.active.get() ? void 0 : _saveEdit().catch(reportError);\n      UnsavedChange.create(owner, async () => { await saveOnFocus(); });\n      gristDoc.app.on('clipboard_focus', saveOnFocus);\n      owner.onDispose(() => {\n        gristDoc.app.off('clipboard_focus', saveOnFocus);\n        editingFormula(false);\n      });\n    }\n\n    // Get the field model from metatables, as the one provided by the caller might be some floating one, that\n    // will change when user navigates around.\n    const field = this.gristDoc.docModel.viewFields.getRowModel(this.field.getRowId());\n\n    // Finally create the editor passing only the field, which will enable detachable flavor of formula editor.\n    const formulaEditor = openFormulaEditor({\n      gristDoc: this.gristDoc,\n      field,\n      editingFormula: this.field.editingFormula,\n      setupCleanup: setupEditorCleanup,\n      editRow,\n      refElem,\n      editValue,\n      canDetach,\n      onSave,\n      onCancel\n    });\n\n    // And now create the floating editor itself. It is just a floating wrapper that will grab the dom\n    // from the editor and show it in the popup. It also overrides various parts of Grist to make smoother experience.\n    const floatingExtension = FloatingEditor.create(formulaEditor, floatController, {\n      gristDoc: this.gristDoc,\n      refElem,\n      placement: 'overlapping',\n    });\n\n    // Add editor to document holder - this will prevent multiple formula editor instances.\n    this.gristDoc.fieldEditorHolder.autoDispose(formulaEditor);\n  }\n}\n\nconst cssTypeSelectMenu = styled('div', `\n  max-height: 500px;\n`);\n\nconst cssSeparator = styled('div', `\n  border-bottom: 1px solid ${theme.pagePanelsBorder};\n  margin-top: 16px;\n`);\n\n// Simple helper that removes transparency from a HEX or rgba color.\n// User can set a transparent fill color using doc actions, but we don't want to show it well\n// when a column is frozen.\nfunction notTransparent(color: string): string {\n  if (!color) {\n    return color;\n  } else if (color.startsWith('#') && color.length === 9) {\n    return color.substring(0, 7);\n  } else if (color.startsWith('rgba')) {\n    // rgba(255, 255, 255)\n    // rgba(255, 255, 255, 0.5)\n    // rgba(255 255 255 / 0.5)\n    // rgba(255 255 255 / 50%)\n    return color.replace(/^rgba\\((\\d+)[,\\s]+(\\d+)[,\\s]+(\\d+)[/,\\s]+([\\d.%]+)\\)$/i, 'rgb($1, $2, $3)');\n  }\n  return color;\n}\n","import {DataRowModel} from 'app/client/models/DataRowModel';\n\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {getObjCode} from 'app/common/gristTypes';\nimport {formatUnknown} from 'app/common/ValueFormatter';\nimport {dom} from 'grainjs';\n\nexport function buildErrorDom(row: DataRowModel, field: ViewFieldRec) {\n  const value = row.cells[field.colId.peek()];\n  const options = field.widgetOptionsJson;\n  // The \"invalid\" class sets the pink background, as long as the error text is non-empty.\n  return dom('div.field_clip.invalid',\n    // Sets CSS class field-error-P, field-error-U, etc.\n    dom.clsPrefix('field-error-', (use) => getObjCode(use(value)) || ''),\n    dom.style('text-align', options.prop('alignment')),\n    dom.cls('text_wrapping', (use) => Boolean(use(options.prop('wrap')))),\n    dom.text((use) => formatUnknown(value ? use(value) : '???'))\n  );\n}\n","import {makeT} from 'app/client/lib/localization';\nimport {ITooltipControl, showTooltip, tooltipCloseButton} from 'app/client/ui/tooltips';\nimport {colors, testId} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {cssLink} from 'app/client/ui2018/links';\nimport {dom, styled} from 'grainjs';\n\nconst t = makeT('EditorTooltip');\n\nexport function showTooltipToCreateFormula(editorDom: HTMLElement, convert: () => void) {\n  function buildTooltip(ctl: ITooltipControl) {\n    return cssConvertTooltip(icon('Convert'),\n      cssLink(t('Convert column to formula'),\n        dom.on('mousedown', (ev) => { ev.preventDefault(); convert(); }),\n        testId('editor-tooltip-convert'),\n      ),\n      tooltipCloseButton(ctl),\n    );\n  }\n  const offerCtl = showTooltip(editorDom, buildTooltip, {key: 'col-to-formula'});\n\n  dom.onDisposeElem(editorDom, offerCtl.close);\n  const lis = dom.onElem(editorDom, 'keydown', () => {\n    lis.dispose();\n    offerCtl.close();\n  });\n}\n\nconst cssConvertTooltip = styled('div', `\n  display: flex;\n  align-items: center;\n  --icon-color: ${colors.lightGreen};\n\n  & > .${cssLink.className} {\n    margin-left: 8px;\n  }\n`);\n","import * as commands from 'app/client/components/commands';\nimport {Cursor} from 'app/client/components/Cursor';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {UnsavedChange} from 'app/client/components/UnsavedChanges';\nimport {makeT} from 'app/client/lib/localization';\nimport {DataRowModel} from 'app/client/models/DataRowModel';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {reportError} from 'app/client/models/errors';\nimport {showTooltipToCreateFormula} from 'app/client/widgets/EditorTooltip';\nimport {FormulaEditor, getFormulaError} from 'app/client/widgets/FormulaEditor';\nimport {IEditorCommandGroup, NewBaseEditor} from 'app/client/widgets/NewBaseEditor';\nimport {asyncOnce} from \"app/common/AsyncCreate\";\nimport {CellValue} from \"app/common/DocActions\";\nimport * as gutil from 'app/common/gutil';\nimport {CellPosition} from \"app/client/components/CellPosition\";\nimport {FloatingEditor} from 'app/client/widgets/FloatingEditor';\nimport {CursorPos} from 'app/plugin/GristAPI';\nimport isEqual = require('lodash/isEqual');\nimport {Disposable, dom, Emitter, Holder, MultiHolder, Observable} from 'grainjs';\n\ntype IEditorConstructor = typeof NewBaseEditor;\n\nconst t = makeT('FieldEditor');\n\n/**\n * Check if the typed-in value should change the cell without opening the cell editor, and if so,\n * saves and returns true. E.g. on typing space, CheckBoxEditor toggles the cell without opening.\n */\nexport function saveWithoutEditor(\n  editorCtor: IEditorConstructor, editRow: DataRowModel, field: ViewFieldRec, typedVal: string|undefined\n): boolean {\n  // Never skip the editor if editing a formula. Also, check that skipEditor static function\n  // exists (we don't bother adding it on old-style JS editors that don't need it).\n  if (!field.column.peek().isRealFormula.peek() && editorCtor.skipEditor) {\n    const origVal = editRow.cells[field.colId()].peek();\n    const skipEditorValue = editorCtor.skipEditor(typedVal, origVal);\n    if (skipEditorValue !== undefined) {\n      setAndSave(editRow, field, skipEditorValue).catch(reportError);\n      return true;\n    }\n  }\n  return false;\n}\n\n// Set the given field of editRow to value, only if different from the current value of the cell.\nexport async function setAndSave(editRow: DataRowModel, field: ViewFieldRec, value: CellValue): Promise<void> {\n  const obs = editRow.cells[field.colId()];\n  if (!isEqual(value, obs.peek())) {\n    return obs.setAndSave(value);\n  }\n}\n\n/**\n * Event that is fired when editor stat has changed\n */\nexport interface FieldEditorStateEvent {\n  position: CellPosition,\n  wasModified: boolean,\n  currentState: any,\n  type: string\n}\n\nexport class FieldEditor extends Disposable {\n\n  public readonly saveEmitter = this.autoDispose(new Emitter());\n  public readonly cancelEmitter = this.autoDispose(new Emitter());\n  public readonly changeEmitter = this.autoDispose(new Emitter());\n  public floatingEditor: FloatingEditor;\n\n  private _gristDoc: GristDoc;\n  private _field: ViewFieldRec;\n  private _cursor: Cursor;\n  private _editRow: DataRowModel;\n  private _cellElem: Element;\n  private _editCommands: IEditorCommandGroup;\n  private _editorCtor: IEditorConstructor;\n  private _editorHolder: Holder<NewBaseEditor> = Holder.create(this);\n  private _saveEdit = asyncOnce(() => this._doSaveEdit());\n  private _editorHasChanged = false;\n  private _isFormula = false;\n  private _readonly = false;\n  private _detached = Observable.create(this, false);\n  private _detachedAt: CursorPos|null = null;\n\n  constructor(options: {\n    gristDoc: GristDoc,\n    field: ViewFieldRec,\n    cursor: Cursor,\n    editRow: DataRowModel,\n    cellElem: Element,\n    editorCtor: IEditorConstructor,\n    startVal?: string,\n    state?: any,\n    readonly: boolean\n  }) {\n    super();\n    this._gristDoc = options.gristDoc;\n    this._field = options.field;\n    this._cursor = options.cursor;\n    this._editRow = options.editRow;\n    this._editorCtor = options.editorCtor;\n    this._cellElem = options.cellElem;\n    this._readonly = options.readonly;\n\n    const startVal = options.startVal;\n    let offerToMakeFormula = false;\n\n    const column = this._field.column();\n    this._isFormula = column.isRealFormula.peek();\n    let editValue: string|undefined = startVal;\n    if (!options.readonly && startVal && gutil.startsWith(startVal, '=')) {\n      if (this._isFormula  || this._field.column().isEmpty()) {\n        // If we typed '=' on an empty column, convert it to a formula. If on a formula column,\n        // start editing ignoring the initial '='.\n        this._isFormula  = true;\n        editValue = gutil.removePrefix(startVal, '=') as string;\n      } else {\n        // If we typed '=' on a non-empty column, only suggest to convert it to a formula.\n        offerToMakeFormula = true;\n      }\n    }\n\n    // These are the commands for while the editor is active.\n    this._editCommands = {\n      // _saveEdit disables this command group, so when we run fieldEditSave again, it triggers\n      // another registered group, if any. E.g. GridView listens to it to move the cursor down.\n      fieldEditSave: () => {\n        this._saveEdit().then((jumped: boolean) => {\n          // To avoid confusing cursor movement, do not increment the rowIndex if the row\n          // was re-sorted after editing.\n          if (!jumped) { commands.allCommands.fieldEditSave.run(); }\n        })\n        .catch(reportError);\n      },\n      fieldEditSaveHere: () => { this._saveEdit().catch(reportError); },\n      fieldEditCancel: () => { this._cancelEdit(); },\n      prevField: () => { this._saveEdit().then(commands.allCommands.prevField.run).catch(reportError); },\n      nextField: () => { this._saveEdit().then(commands.allCommands.nextField.run).catch(reportError); },\n      makeFormula: () => this._makeFormula(),\n      unmakeFormula: () => this._unmakeFormula(),\n    };\n\n    // for readonly editor rewire commands, most of this also could be\n    // done by just overriding the saveEdit method, but this is more clearer\n    if (options.readonly) {\n      this._editCommands.fieldEditSave = () => {\n        // those two lines are tightly coupled - without disposing first\n        // it will run itself in a loop. But this is needed for a GridView\n        // which navigates to the next row on save.\n        this._editCommands.fieldEditCancel();\n        commands.allCommands.fieldEditSave.run();\n      };\n      this._editCommands.fieldEditSaveHere = this._editCommands.fieldEditCancel;\n      this._editCommands.prevField = () => { this._cancelEdit(); commands.allCommands.prevField.run(); };\n      this._editCommands.nextField = () => { this._cancelEdit(); commands.allCommands.nextField.run(); };\n      this._editCommands.makeFormula = () => true; /* don't stop propagation */\n      this._editCommands.unmakeFormula = () => true;\n    }\n\n    this.rebuildEditor(editValue, Number.POSITIVE_INFINITY, options.state);\n\n    // Create a floating editor, which will be used to display the editor in a popup.\n    this.floatingEditor = FloatingEditor.create(this, this, {\n      gristDoc: this._gristDoc,\n      refElem: this._cellElem,\n      placement: 'adjacent',\n    });\n\n    if (offerToMakeFormula) {\n      this._offerToMakeFormula();\n    }\n\n    // connect this editor to editor monitor, it will restore this editor\n    // when user or server refreshes the browser\n    this._gristDoc.editorMonitor.monitorEditor(this);\n\n    // For detached editor, we don't need to cleanup anything.\n    // It will be cleanuped automatically.\n    const onCleanup = async () => {\n      if (this._detached.get()) { return; }\n      await this._saveEdit();\n    };\n\n    // for readonly field we don't need to do anything special\n    if (!options.readonly) {\n      setupEditorCleanup(this, this._gristDoc, this._field.editingFormula, onCleanup);\n    } else {\n      setupReadonlyEditorCleanup(this, this._gristDoc, this._field, () => this._cancelEdit());\n    }\n  }\n\n  // cursorPos refers to the position of the caret within the editor.\n  public rebuildEditor(editValue: string|undefined, cursorPos: number, state?: any) {\n    const editorCtor: IEditorConstructor = this._isFormula ? FormulaEditor : this._editorCtor;\n\n    const column = this._field.column();\n    const cellCurrentValue = this._editRow.cells[this._field.colId()].peek();\n    let cellValue: CellValue;\n    if (column.isFormula()) {\n      cellValue = column.formula();\n    } else if (Array.isArray(cellCurrentValue) && cellCurrentValue[0] === 'C') {\n      // This cell value is censored by access control rules\n      // Really the rules should also block editing, but in case they don't, show a blank value\n      // rather than a 'C'. However if the user tries to edit the cell and then clicks away\n      // without typing anything the empty string is saved, deleting what was there.\n      // We should probably just automatically block updates where reading is not allowed.\n      cellValue = '';\n    } else {\n      cellValue = cellCurrentValue;\n    }\n\n    const errorHolder = new MultiHolder();\n\n    const error = getFormulaError(errorHolder, {\n      gristDoc: this._gristDoc,\n      editRow: this._editRow,\n      field: this._field\n    });\n\n    // For readonly mode use the default behavior of Formula Editor\n    // TODO: cleanup this flag - it gets modified in too many places\n    if (!this._readonly){\n      // Enter formula-editing mode (e.g. click-on-column inserts its ID) only if we are opening the\n      // editor by typing into it (and overriding previous formula). In other cases (e.g. double-click),\n      // we defer this mode until the user types something.\n      const active = this._isFormula && editValue !== undefined;\n      this._field.editingFormula(active);\n    }\n\n    this._detached.set(false);\n    this._editorHasChanged = false;\n    // Replace the item in the Holder with a new one, disposing the previous one.\n    const editor = this._editorHolder.autoDispose(editorCtor.create({\n      gristDoc: this._gristDoc,\n      field: this._field,\n      column: this._field.column(), // needed for FormulaEditor\n      editingFormula: this._field.editingFormula, // needed for Formula editor\n      cellValue,\n      rowId: this._editRow.id(),\n      formulaError: error,\n      editValue,\n      cursorPos,\n      state,\n      canDetach: true,\n      commands: this._editCommands,\n      readonly : this._readonly\n    }));\n\n    editor.autoDispose(errorHolder);\n\n    // if editor supports live changes, connect it to the change emitter\n    if (editor.editorState) {\n      editor.autoDispose(editor.editorState.addListener((currentState) => {\n        this._editorHasChanged = true;\n        const event: FieldEditorStateEvent = {\n          position : this.cellPosition(),\n          wasModified : this._editorHasChanged,\n          currentState,\n          type: this._field.column.peek().pureType.peek()\n        };\n        this.changeEmitter.emit(event);\n      }));\n    }\n\n    editor.attach(this._cellElem);\n  }\n\n  public detach() {\n    this._detached.set(true);\n    this._detachedAt = this._gristDoc.cursorPosition.get()!;\n    return this._editorHolder.get()!.detach()!;\n  }\n\n  public async attach(content: HTMLElement) {\n    // If we are disconnected from the dom (maybe page was changed or something), we can't\n    // simply attach the editor back, we need to rebuild it.\n    if (!this._cellElem.isConnected) {\n      dom.domDispose(content);\n      if (await this._gristDoc.recursiveMoveToCursorPos(this._detachedAt!, true)) {\n        await this._gristDoc.activateEditorAtCursor();\n      }\n      this.dispose();\n      return;\n    }\n    this._detached.set(false);\n    this._editorHolder.get()?.attach(this._cellElem);\n    this._field.viewSection.peek().hasFocus(true);\n  }\n\n  public getDom() {\n    return this._editorHolder.get()?.getDom();\n  }\n\n  // calculate current cell's absolute position\n  public cellPosition() {\n    const rowId = this._editRow.getRowId();\n    const colRef = this._field.column.peek().origColRef.peek();\n    const sectionId = this._field.viewSection.peek().id.peek();\n    const position = {\n      rowId,\n      colRef,\n      sectionId\n    };\n    return position;\n  }\n\n  private _makeFormula() {\n    const editor = this._editorHolder.get();\n    // On keyPress of \"=\" on textInput, consider turning the column into a formula.\n    if (editor && !this._field.editingFormula.peek() && editor.getCursorPos() === 0) {\n      if (this._field.column().isEmpty()) {\n        this._isFormula = true;\n        // If we typed '=' an empty column, convert it to a formula.\n        this.rebuildEditor(editor.getTextValue(), 0);\n        return false;\n      } else {\n        // If we typed '=' on a non-empty column, only suggest to convert it to a formula.\n        this._offerToMakeFormula();\n      }\n    }\n    return true;    // don't stop propagation.\n  }\n\n  private _unmakeFormula() {\n    const editor = this._editorHolder.get();\n    if (editor instanceof FormulaEditor && editor.isDetached.get()) {\n      return true;\n    }\n\n    // Only convert to data if we are undoing a to-formula conversion. To convert formula to\n    // data, use column menu option, or delete the formula first (which makes the column \"empty\").\n    if (editor && this._field.editingFormula.peek() && editor.getCursorPos() === 0 &&\n      !this._field.column().isRealFormula()) {\n      // Restore a plain '=' character. This gives a way to enter \"=\" at the start if line. The\n      // second backspace will delete it.\n      this._isFormula = false;\n      this.rebuildEditor('=' + editor.getTextValue(), 1);\n      return false;\n    }\n    return true;    // don't stop propagation.\n  }\n\n  private _offerToMakeFormula() {\n    const editorDom = this._editorHolder.get()?.getDom();\n    if (!editorDom) { return; }\n    showTooltipToCreateFormula(editorDom, () => this._convertEditorToFormula());\n  }\n\n  private _convertEditorToFormula() {\n    const editor = this._editorHolder.get();\n    if (editor) {\n      const editValue = editor.getTextValue();\n      const formulaValue = editValue.startsWith('=') ? editValue.slice(1) : editValue;\n      this._isFormula = true;\n      this.rebuildEditor(formulaValue, 0);\n    }\n  }\n\n  // Cancels the edit\n  private _cancelEdit() {\n    if (this.isDisposed()) { return; }\n    const event: FieldEditorStateEvent = {\n      position : this.cellPosition(),\n      wasModified : this._editorHasChanged,\n      currentState : this._editorHolder.get()?.editorState?.get(),\n      type : this._field.column.peek().pureType.peek()\n    };\n    this.cancelEmitter.emit(event);\n    this.dispose();\n  }\n\n  // Returns true if Enter/Shift+Enter should NOT move the cursor, for instance if the current\n  // record got reordered (i.e. the cursor jumped), or when editing a formula.\n  private async _doSaveEdit(): Promise<boolean> {\n    const editor = this._editorHolder.get();\n    if (!editor) { return false; }\n    // Make sure the editor is save ready\n    const saveIndex = this._cursor.rowIndex();\n    await editor.prepForSave();\n    if (this.isDisposed()) {\n      // We shouldn't normally get disposed here, but if we do, avoid confusing JS errors.\n      console.warn(t(\"Unable to finish saving edited cell\"));  // tslint:disable-line:no-console\n      return false;\n    }\n\n    // Then save the value the appropriate way\n    // TODO: this isFormula value doesn't actually reflect if editing the formula, since\n    // editingFormula() is used for toggling column headers, and this is deferred to start of\n    // typing (a double-click or Enter) does not immediately set it. (This can cause a\n    // console.warn below, although harmless.)\n    const isFormula = this._field.editingFormula();\n    const col = this._field.column();\n    let waitPromise: Promise<unknown>|null = null;\n\n    if (isFormula) {\n      const formula = String(editor.getCellValue() ?? '');\n      // Bundle multiple changes so that we can undo them in one step.\n      if (isFormula !== col.isFormula.peek() || formula !== col.formula.peek()) {\n        waitPromise = this._gristDoc.docData.bundleActions(null, () => Promise.all([\n          col.updateColValues({isFormula, formula}),\n          // If we're saving a non-empty formula, then also add an empty record to the table\n          // so that the formula calculation is visible to the user.\n          (!this._detached.get() && this._editRow._isAddRow.peek() && formula !== \"\" ?\n            this._editRow.updateColValues({}) : undefined),\n        ]));\n      }\n    } else {\n      const value = editor.getCellValue();\n      if (col.isRealFormula()) {\n        // tslint:disable-next-line:no-console\n        console.warn(t(\"It should be impossible to save a plain data value into a formula column\"));\n      } else {\n        // This could still be an isFormula column if it's empty (isEmpty is true), but we don't\n        // need to toggle isFormula in that case, since the data engine takes care of that.\n        waitPromise = setAndSave(this._editRow, this._field, value);\n      }\n    }\n\n    const event: FieldEditorStateEvent = {\n      position : this.cellPosition(),\n      wasModified : this._editorHasChanged,\n      currentState : this._editorHolder.get()?.editorState?.get(),\n      type : this._field.column.peek().pureType.peek()\n    };\n    this.saveEmitter.emit(event);\n\n    const cursor = this._cursor;\n    // Deactivate the editor. We are careful to avoid using `this` afterwards.\n    this.dispose();\n    await waitPromise;\n    return isFormula || (saveIndex !== cursor.rowIndex());\n  }\n}\n\n\n/**\n * For an readonly editor, set up its cleanup:\n * - canceling on click-away (when focus returns to Grist \"clipboard\" element)\n */\nfunction setupReadonlyEditorCleanup(\n  owner: MultiHolder, gristDoc: GristDoc, field: ViewFieldRec, cancelEdit: () => any\n) {\n  // Whenever focus returns to the Clipboard component, close the editor by saving the value.\n  gristDoc.app.on('clipboard_focus', cancelEdit);\n  owner.onDispose(() => {\n    field.editingFormula(false);\n    gristDoc.app.off('clipboard_focus', cancelEdit);\n  });\n}\n\n/**\n * For an active editor, set up its cleanup:\n * - saving on click-away (when focus returns to Grist \"clipboard\" element)\n * - unset field.editingFormula mode\n * - Arrange for UnsavedChange protection against leaving the page with unsaved changes.\n */\nexport function setupEditorCleanup(\n  owner: MultiHolder, gristDoc: GristDoc, editingFormula: ko.Computed<boolean>, _saveEdit: () => Promise<unknown>\n) {\n  const saveEdit = () => _saveEdit().catch(reportError);\n\n  // Whenever focus returns to the Clipboard component, close the editor by saving the value.\n  gristDoc.app.on('clipboard_focus', saveEdit);\n\n  // TODO: This should ideally include a callback that returns true only when the editor value\n  // has changed. Currently an open editor is considered unsaved even when unchanged.\n  UnsavedChange.create(owner, async () => { await saveEdit(); });\n\n  owner.onDispose(() => {\n    gristDoc.app.off('clipboard_focus', saveEdit);\n    // Unset field.editingFormula flag when the editor closes.\n    editingFormula(false);\n  });\n}\n","import * as commands from 'app/client/components/commands';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {detachNode} from 'app/client/lib/dom';\nimport {FocusLayer} from 'app/client/lib/FocusLayer';\nimport {makeT} from 'app/client/lib/localization';\nimport {FLOATING_POPUP_MAX_WIDTH_PX, FloatingPopup} from 'app/client/ui/FloatingPopup';\nimport {theme} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {Disposable, dom, Holder, IDisposableOwner, IDomArgs,\n        makeTestId, MultiHolder, Observable, styled} from 'grainjs';\n\nconst t = makeT('FloatingEditor');\n\nconst testId = makeTestId('test-floating-editor-');\n\nexport interface IFloatingOwner extends IDisposableOwner {\n  detach(): HTMLElement;\n  attach(content: HTMLElement): Promise<void>|void;\n}\n\nexport interface FloatingEditorOptions {\n  gristDoc: GristDoc;\n  /**\n   * The element that `placement` should be relative to.\n   */\n  refElem?: Element;\n  /**\n   * How to position the editor.\n   *\n   * If \"overlapping\", the editor will be positioned on top of `refElem`, anchored\n   * to its top-left corner.\n   *\n   * If \"adjacent\", the editor will be positioned to the left or right of `refElem`,\n   * depending on available space.\n   *\n   * If \"fixed\", the editor will be positioned in the bottom-right corner of the\n   * viewport.\n   *\n   * Defaults to \"fixed\".\n   */\n  placement?: 'overlapping' | 'adjacent' | 'fixed';\n}\n\nexport class FloatingEditor extends Disposable {\n\n  public active = Observable.create<boolean>(this, false);\n\n  private _gristDoc = this._options.gristDoc;\n  private _placement = this._options.placement ?? 'fixed';\n  private _refElem = this._options.refElem;\n\n  constructor(\n    private _fieldEditor: IFloatingOwner,\n    private _options: FloatingEditorOptions\n  ) {\n    super();\n    this.autoDispose(commands.createGroup({\n      detachEditor: this.createPopup.bind(this),\n    }, this, true));\n  }\n\n  public createPopup() {\n    const editor = this._fieldEditor;\n\n    const popupOwner = Holder.create(editor);\n    const tempOwner = new MultiHolder();\n    try {\n      // Create a layer to grab the focus, when we will move the editor to the popup. Otherwise the focus\n      // will be moved to the clipboard which can destroy us (as it will be treated as a clickaway). So here\n      // we are kind of simulating always focused editor (even if it is not in the dom for a brief moment).\n      FocusLayer.create(tempOwner, { defaultFocusElem: document.activeElement as any});\n\n      // Take some data from gristDoc to create a title.\n      const cursor = this._gristDoc.cursorPosition.get()!;\n      const vs = this._gristDoc.docModel.viewSections.getRowModel(cursor.sectionId!);\n      const table = vs.tableId.peek();\n      const field = vs.viewFields.peek().at(cursor.fieldIndex!)!;\n      const title = `${table}.${field.label.peek()}`;\n\n      let content: HTMLElement;\n      // Now create the popup. It will be owned by the editor itself.\n      const popup = FloatingPopup.create(popupOwner, {\n        content: () => (content = editor.detach()), // this will be called immediately, and will move some dom between\n                                                    // existing editor and the popup. We need to save it, so we can\n                                                    // detach it on close.\n        title: () => title, // We are not reactive yet\n        closeButton: true,  // Show the close button with a hover\n        closeButtonIcon: 'Minimize',\n        closeButtonHover: () => t('Collapse Editor'),\n        onClose: async () => {\n          const layer = FocusLayer.create(null, { defaultFocusElem: document.activeElement as any});\n          try {\n            detachNode(content);\n            popupOwner.dispose();\n            await editor.attach(content);\n          } finally {\n            layer.dispose();\n          }\n        },\n        minHeight: 550,\n        initialPosition: this._getInitialPosition(),\n        args: [testId('popup')]\n      });\n      // Set a public flag that we are active.\n      this.active.set(true);\n      popup.onDispose(() => {\n        this.active.set(false);\n      });\n\n      // Show the popup with the editor.\n      popup.showPopup();\n    } finally {\n      // Dispose the focus layer, we only needed it for the time when the dom was moved between parents.\n      tempOwner.dispose();\n    }\n  }\n\n  private _getInitialPosition(): [number, number] | undefined {\n    if (!this._refElem || this._placement === 'fixed') {\n      return undefined;\n    }\n\n    const refElem = this._refElem as HTMLElement;\n    const refElemBoundingRect = refElem.getBoundingClientRect();\n    if (this._placement === 'overlapping') {\n      // Anchor the floating editor to the top-left corner of the refElement.\n      return [\n        refElemBoundingRect.left,\n        refElemBoundingRect.top,\n      ];\n    } else {\n      if (window.innerWidth - refElemBoundingRect.right >= FLOATING_POPUP_MAX_WIDTH_PX) {\n        // If there's enough space to the right of refElement, position the\n        // floating editor there.\n        return [\n          refElemBoundingRect.right,\n          refElemBoundingRect.top,\n        ];\n      } else {\n        // Otherwise position it to the left of refElement; note that it may still\n        // overlap if there isn't enough space on this side either.\n        return [\n          refElemBoundingRect.left - FLOATING_POPUP_MAX_WIDTH_PX,\n          refElemBoundingRect.top,\n        ];\n      }\n    }\n  }\n}\n\nexport function createDetachedIcon(...args: IDomArgs<HTMLDivElement>) {\n  return cssResizeIconWrapper(\n    cssSmallIcon('Maximize'),\n    dom.on('click', (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n      commands.allCommands.detachEditor.run();\n    }),\n    dom.on('mousedown', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n    }),\n    testId('detach-button'),\n    ...args\n  );\n}\n\nconst cssSmallIcon = styled(icon, `\n  width: 14px;\n  height: 14px;\n`);\n\nconst cssResizeIconWrapper = styled('div', `\n  position: absolute;\n  right: -2px;\n  top: -20px;\n  line-height: 0px;\n  cursor: pointer;\n  z-index: 10;\n  --icon-color: ${theme.cellBg};\n  background: var(--grist-theme-control-primary-bg, var(--grist-primary-fg));\n  height: 20px;\n  width: 21px;\n  --icon-color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0px;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  &:hover {\n    background: var(--grist-theme-control-primary-hover-bg, var(--grist-primary-fg-hover))\n  }\n  & > div {\n    transition: background .05s ease-in-out;\n  }\n`);\n","import {Banner, buildBannerMessage, cssBannerLink} from 'app/client/components/Banner';\nimport * as commands from 'app/client/components/commands';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {makeT} from 'app/client/lib/localization';\nimport {localStorageBoolObs, sessionStorageBoolObs} from 'app/client/lib/localStorageObs';\nimport {movable} from 'app/client/lib/popupUtils';\nimport {logTelemetryEvent} from 'app/client/lib/telemetry';\nimport {ColumnRec, ViewFieldRec} from 'app/client/models/DocModel';\nimport {ChatMessage} from 'app/client/models/entities/ColumnRec';\nimport {HAS_FORMULA_ASSISTANT, WHICH_FORMULA_ASSISTANT} from 'app/client/models/features';\nimport {getLoginOrSignupUrl, urlState} from 'app/client/models/gristUrlState';\nimport {buildHighlightedCode} from 'app/client/ui/CodeHighlight';\nimport {autoGrow} from 'app/client/ui/forms';\nimport {sanitizeHTML} from 'app/client/ui/sanitizeHTML';\nimport {createUserImage} from 'app/client/ui/UserImage';\nimport {basicButton, bigPrimaryButtonLink, primaryButton} from 'app/client/ui2018/buttons';\nimport {theme, vars} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {cssLink} from 'app/client/ui2018/links';\nimport {loadingDots} from 'app/client/ui2018/loaders';\nimport {menu, menuCssClass, menuItem} from 'app/client/ui2018/menus';\nimport {FormulaEditor} from 'app/client/widgets/FormulaEditor';\nimport {ApiError} from 'app/common/ApiError';\nimport {AssistanceResponse, AssistanceState, FormulaAssistanceContext} from 'app/common/AssistancePrompts';\nimport {isFreePlan} from 'app/common/Features';\nimport {commonUrls} from 'app/common/gristUrls';\nimport {TelemetryEvent, TelemetryMetadata} from 'app/common/Telemetry';\nimport {getGristConfig} from 'app/common/urlUtils';\nimport {Computed, Disposable, dom, DomElementArg, makeTestId, MutableObsArray,\n        obsArray, Observable, styled, subscribeElem} from 'grainjs';\nimport debounce from 'lodash/debounce';\nimport noop from 'lodash/noop';\nimport {marked} from 'marked';\nimport {v4 as uuidv4} from 'uuid';\n\nconst t = makeT('FormulaEditor');\nconst testId = makeTestId('test-formula-editor-');\n\nconst LOW_CREDITS_WARNING_BANNER_THRESHOLD = 10;\n\n/**\n * An extension or the FormulaEditor that provides assistance for writing formulas.\n * It renders itself in the detached FormulaEditor and adds some extra UI elements.\n * - Save button: a subscription for the Enter key that saves the formula and closes the assistant.\n * - Preview button: a new functionality that allows to preview the formula in a temporary column.\n * - Cancel button: a subscription for the Escape key that discards all changes and closes the assistant.\n * - A chat component: that allows to communicate with the assistant.\n */\nexport class FormulaAssistant extends Disposable {\n  private _gristDoc = this._options.gristDoc;\n  private _appModel = this._gristDoc.appModel;\n  /** Chat component */\n  private _chat: ChatHistory;\n  /** State of the user input */\n  private _userInput = Observable.create(this, '');\n  /** Dom element that holds the user input */\n  // TODO: move it to a separate component\n  private _input: HTMLTextAreaElement;\n  /** Is the formula assistant expanded */\n  private _assistantExpanded = this.autoDispose(localStorageBoolObs(\n    `u:${this._appModel.currentUser?.id ?? 0};formulaAssistantExpanded`, true));\n  /** Is the request pending */\n  private _waiting = Observable.create(this, false);\n  /** Is assistant features are enabled */\n  private _assistantEnabled: boolean;\n  /** Preview column ref */\n  private _transformColRef: string;\n  /** Preview column id */\n  private _transformColId: string;\n  /** Method to invoke when we are closed, it saves or reverts */\n  private _triggerFinalize: (() => void) = noop;\n  /** What action button was clicked, by default close without saving */\n  private _action: 'save' | 'cancel' | 'close' = 'close';\n  // Our dom element (used for resizing).\n  private _domElement: HTMLElement;\n  // Input wrapper element (used for resizing).\n  private _inputWrapper: HTMLElement;\n  /** Chat panel body element. */\n  private _chatPanelBody: HTMLElement;\n  /** Client height of the chat panel body element. */\n  private _chatPanelBodyClientHeight = Observable.create<number>(this, 0);\n  /** Set to true the first time the panel has been expanded (including by default). */\n  private _hasExpandedOnce = false;\n  /**\n   * Last known height of the chat panel.\n   *\n   * This is like `_chatPanelBodyClientHeight`, but updated only for the purposes of\n   * being able to collapse and expand the panel to a known height.\n   */\n  private _lastChatPanelHeight: number|undefined;\n  /** True if the chat panel is being resized via dragging. */\n  private _isResizing = Observable.create(this, false);\n  /** Whether the low credit limit banner should be shown. */\n  private _showApproachingLimitBanner = this.autoDispose(\n    sessionStorageBoolObs(\n      `org:${this._appModel.currentOrg?.id ?? 0};formulaAssistantShowApproachingLimitBanner`,\n      true\n    ));\n  /** Number of remaining credits. If null, assistant usage is unlimited. */\n  private _numRemainingCredits = Observable.create<number|null>(this, null);\n\n  /**\n   * Debounced version of the method that will force parent editor to resize, we call it often\n   * as we have an ability to resize the chat window.\n   */\n  private _resizeEditor = debounce(() => {\n    if (!this.isDisposed()) {\n      this._options.editor.resize();\n    }\n  }, 10);\n\n  constructor(private _options: {\n    column: ColumnRec,\n    field?: ViewFieldRec,\n    gristDoc: GristDoc,\n    editor: FormulaEditor\n  }) {\n    super();\n\n    this._assistantEnabled = HAS_FORMULA_ASSISTANT();\n\n    if (!this._options.field) {\n      // TODO: field is not passed only for rules (as there is no preview there available to the user yet)\n      // this should be implemented but it requires creating a helper column to helper column and we don't\n      // have infrastructure for that yet.\n      throw new Error('Formula assistant requires a field to be passed.');\n    }\n\n    this._chat = ChatHistory.create(this, {\n      ...this._options,\n      apply: this._apply.bind(this),\n      logTelemetryEvent: this._logTelemetryEvent.bind(this),\n    });\n\n    this.autoDispose(commands.createGroup({\n      activateAssistant: () => {\n        this._expandChatPanel();\n        setTimeout(() => {\n          this._focusChatInput();\n        }, 0);\n      }\n    }, this, true));\n\n    // Unfortunately we need to observe the size of the formula editor dom and resize it accordingly.\n    const observer = new ResizeObserver(this._resizeEditor);\n    observer.observe(this._options.editor.getDom());\n    this.onDispose(() => observer.disconnect());\n\n    // Start bundling all actions from this moment on and close the editor as soon,\n    // as user tries to do something different.\n    const bundleInfo = this._options.gristDoc.docData.startBundlingActions({\n      description: 'Formula Editor',\n      prepare: () => this._preparePreview(),\n      finalize: () => this._cleanupPreview(),\n      shouldIncludeInBundle: (actions) => {\n        if (actions.length !== 1) { return false; }\n\n        const actionName = actions[0][0];\n        if (actionName === 'ModifyColumn') {\n          const tableId = this._options.column.table.peek().tableId.peek();\n          return actions[0][1] === tableId\n            && typeof actions[0][2] === 'string'\n            && [this._transformColId, this._options.column.id.peek()].includes(actions[0][2]);\n        } else if (actionName === 'UpdateRecord') {\n          return actions[0][1] === '_grist_Tables_column' && actions[0][2] === this._transformColRef;\n        } else {\n          return false;\n        }\n      }\n    });\n\n    this._triggerFinalize = bundleInfo.triggerFinalize;\n    this.onDispose(() => {\n      if (this._hasExpandedOnce) {\n        this._logTelemetryEvent('assistantClose', false, {\n          suggestionApplied: this._chat.conversationSuggestedFormulas.get()\n            .includes(this._options.column.formula.peek()),\n          conversationLength: this._chat.conversationLength.get(),\n          conversationHistoryLength: this._chat.conversationHistoryLength.get(),\n        });\n      }\n\n      // This will be noop if already called.\n      this._triggerFinalize();\n    });\n  }\n\n  // The main dom added to the editor and the bottom (3 buttons and chat window).\n  public buildDom() {\n    // When the tools are resized, resize the editor.\n    const observer = new ResizeObserver(this._resizeEditor);\n    this._domElement = cssTools(\n      (el) => observer.observe(el),\n      dom.onDispose(() => observer.disconnect()),\n      cssButtons(\n        basicButton(t('Cancel'), dom.on('click', () => {\n          this._cancel();\n        }), testId('cancel-button')),\n        basicButton(t('Preview'), dom.on('click', async () => {\n          await this._preview();\n        }), testId('preview-button')),\n        primaryButton(t('Save'), dom.on('click', () => {\n          this._saveOrClose();\n        }), testId('save-button')),\n      ),\n      this._buildChatPanel(),\n    );\n\n    if (this._assistantEnabled) {\n      if (!this._assistantExpanded.get()) {\n        this._chatPanelBody.style.setProperty('height', '0px');\n      } else {\n        // The actual height doesn't matter too much here, so we just pick\n        // a value that guarantees the assistant will fill as much of the\n        // available space as possible.\n        this._chatPanelBody.style.setProperty('height', '999px');\n      }\n    }\n\n    if (this._assistantEnabled && this._assistantExpanded.get()) {\n      this._logTelemetryEvent('assistantOpen', true);\n      this._hasExpandedOnce = true;\n    }\n\n    return this._domElement;\n  }\n\n  private _buildChatPanel() {\n    return dom.maybe(this._assistantEnabled, () => {\n      return cssChatPanel(\n        cssChatPanelHeaderResizer(\n          movable({\n            onStart: this._onResizeStart.bind(this),\n            onMove: this._onResizeMove.bind(this),\n            onEnd: this._onResizeEnd.bind(this),\n          }),\n          cssChatPanelHeaderResizer.cls('-collapsed', use => !use(this._assistantExpanded)),\n        ),\n        this._buildChatPanelHeader(),\n        this._buildChatPanelBody(),\n      );\n    });\n  }\n\n  private _logTelemetryEvent(event: TelemetryEvent, includeContext = false, metadata: TelemetryMetadata = {}) {\n    logTelemetryEvent(event, {\n      full: {\n        docIdDigest: this._gristDoc.docId,\n        conversationId: this._chat.conversationId.get(),\n        ...(!includeContext ? {} : {context: {\n          type: 'formula',\n          tableId: this._options.column.table.peek().tableId.peek(),\n          colId: this._options.column.colId.peek(),\n        } as FormulaAssistanceContext}),\n        ...metadata,\n      },\n    });\n  }\n\n  private _buildChatPanelHeader() {\n    return cssChatPanelHeader(\n      cssChatPanelHeaderTitle(\n        icon('Robot'),\n        t('AI Assistant'),\n      ),\n      cssChatPanelHeaderButtons(\n        cssChatPanelHeaderButton(\n          dom.domComputed(this._assistantExpanded, isExpanded => isExpanded\n            ? icon('Dropdown') : icon('DropdownUp')),\n          dom.on('click', () => {\n            if (this._assistantExpanded.get()) {\n              this._collapseChatPanel();\n            } else {\n              this._expandChatPanel();\n            }\n          }),\n          testId('ai-assistant-expand-collapse'),\n        ),\n        cssChatPanelHeaderButton(\n          icon('Dots'),\n          menu(() => [\n            menuItem(\n              () => this._clear(),\n              t('Clear Conversation'),\n              testId('ai-assistant-options-clear-conversation'),\n            ),\n          ], {menuCssClass: menuCssClass + ' ' + cssChatOptionsMenu.className}),\n          testId('ai-assistant-options'),\n        ),\n      ),\n    );\n  }\n\n  private _buildChatPanelBody() {\n    setTimeout(() => {\n      if (!this.isDisposed()) {\n        // Scroll to the bottom of the chat right after it is rendered without the animation.\n        this._chat.scrollDown(false);\n      }\n      this._options.editor.resize();\n    }, 0);\n\n    const observer = new ResizeObserver(() => {\n      // Keep track of changes to the chat panel body height; its children need to know it to adjust\n      // their max heights accordingly.\n      this._chatPanelBodyClientHeight.set(this._chatPanelBody.clientHeight);\n    });\n\n    this._chatPanelBody = cssChatPanelBody(\n      dom.onDispose(() => observer.disconnect()),\n      testId('ai-assistant-chat-panel'),\n      this._buildChatPanelBanner(),\n      this._chat.buildDom(),\n      this._appModel.currentValidUser ? this._buildChatInput() : this._buildSignupNudge(),\n      cssChatPanelBody.cls('-resizing', this._isResizing),\n      // Stop propagation of mousedown events, as the formula editor will still focus.\n      dom.on('mousedown', (ev) => ev.stopPropagation()),\n    );\n\n    observer.observe(this._chatPanelBody);\n\n    return this._chatPanelBody;\n  }\n\n  private _buildChatPanelBanner() {\n    return dom.domComputed(use => {\n      const numCredits = use(this._numRemainingCredits);\n      if (\n        numCredits === null ||\n        numCredits > LOW_CREDITS_WARNING_BANNER_THRESHOLD\n      ) {\n        return null;\n      } else if (numCredits === 0) {\n        return dom.create(Banner, {\n          content: buildBannerMessage(\n            t('You have used all available credits.'),\n            ' ',\n            this._buildBannerUpgradeMessage(),\n            testId('ai-assistant-banner-message'),\n          ),\n          style: 'error',\n          bannerCssClass: cssBanner.className,\n        });\n      } else {\n        const showBanner = use(this._showApproachingLimitBanner);\n        if (!showBanner) { return null; }\n\n        return dom.create(Banner, {\n          content: buildBannerMessage(\n            t('You have {{numCredits}} remaining credits.', {numCredits}),\n            ' ',\n            this._buildBannerUpgradeMessage(),\n            testId('ai-assistant-banner-message'),\n          ),\n          style: 'warning',\n          showCloseButton: true,\n          onClose: () => { this._showApproachingLimitBanner.set(false); },\n          bannerCssClass: cssBanner.className,\n        });\n      }\n    });\n  }\n\n  private _buildBannerUpgradeMessage() {\n    const canUpgradeSite = this._appModel.isOwner()\n      && Boolean(this._appModel.planName && isFreePlan(this._appModel.planName));\n    const isBillingManager = this._appModel.isBillingManager() || this._appModel.isSupport();\n    if (!canUpgradeSite && !isBillingManager) {\n      return t('For higher limits, contact the site owner.');\n    }\n\n    return t('For higher limits, {{upgradeNudge}}.', {upgradeNudge: cssBannerLink(\n      canUpgradeSite ? t('upgrade to the Pro Team plan') : t('upgrade your plan'),\n      dom.on('click', async () => {\n        if (canUpgradeSite) {\n          this._gristDoc.appModel.showUpgradeModal();\n        } else {\n          await urlState().pushUrl({billing: 'billing'});\n        }\n      }))\n    });\n  }\n\n  /**\n   * Save button handler. We just store the action and wait for the bundler to finalize.\n   */\n  private _saveOrClose() {\n    if (this._hasExpandedOnce) {\n      this._logTelemetryEvent('assistantSave', true, {\n        oldFormula: this._options.column.formula.peek(),\n        newFormula: this._options.editor.getTextValue(),\n      });\n    }\n    this._action = 'save';\n    this._triggerFinalize();\n  }\n\n  /**\n   * Cancel button handler.\n   */\n  private _cancel() {\n    if (this._hasExpandedOnce) {\n      this._logTelemetryEvent('assistantCancel', true);\n    }\n    this._action = 'cancel';\n    this._triggerFinalize();\n  }\n\n  /**\n   * Preview button handler.\n   */\n  private async _preview() {\n    const tableId = this._options.column.table.peek().tableId.peek();\n    const formula = this._options.editor.getCellValue();\n    const isFormula = true;\n    await this._options.gristDoc.docData.sendAction(\n      ['ModifyColumn', tableId, this._transformColId, {formula, isFormula}\n    ]);\n    if (!this.isDisposed()) {\n      this._options.editor.focus();\n    }\n  }\n\n  private async _preparePreview() {\n    const docData = this._options.gristDoc.docData;\n    const tableId = this._options.column.table.peek().tableId.peek();\n\n    // Add a new column to the table, and set it as the transform column.\n    const {colRef, colId} = await docData.sendAction(['AddColumn', tableId, 'gristHelper_Transform', {\n      type: this._options.column.type.peek(),\n      label: this._options.column.colId.peek(),\n      isFormula: true,\n      formula: this._options.column.formula.peek(),\n      widgetOptions: JSON.stringify(this._options.field?.widgetOptionsJson()),\n    }]);\n\n    this._transformColRef = colRef;\n    this._transformColId = colId;\n\n    const rules = this._options.field?.rulesList();\n    if (rules) {\n      await docData.sendAction(['UpdateRecord', '_grist_Tables_column', colRef, {\n        rules: this._options.field?.rulesList(),\n      }]);\n    }\n\n    this._options.field?.colRef(colRef); // Don't save, it is only in browser.\n\n    // Update the transform column so that it points to the original column.\n    const transformColumn = this._options.field?.column.peek();\n    if (transformColumn) {\n      transformColumn.isTransforming(true);\n      this._options.column.isTransforming(true);\n      transformColumn.origColRef(this._options.column.getRowId()); // Don't save\n    }\n  }\n\n  private async _cleanupPreview() {\n    // Mark that we did finalize already.\n    this._triggerFinalize = noop;\n    const docData = this._options.gristDoc.docData;\n    const tableId = this._options.column.table.peek().tableId.peek();\n    const column = this._options.column;\n    try {\n      if (this._action === 'save') {\n        const formula = this._options.editor.getCellValue();\n        // Modify column right away, so that it looks smoother on the ui, when we\n        // switch the column for the field.\n        await docData.sendActions([\n          ['ModifyColumn', tableId, column.colId.peek(), { formula, isFormula: true}],\n        ]);\n      }\n      // Switch the column for the field, this isn't sending any actions, we are just restoring it to what it is\n      // in database. But now the column has already correct data as it was already calculated.\n      this._options.field?.colRef(column.getRowId());\n\n      // Now trigger the action in our owner that should dispose us. The save\n      // method will be no op if we saved anything.\n      if (this._action === 'save') {\n        commands.allCommands.fieldEditSaveHere.run();\n      } else if (this._action === 'cancel') {\n        commands.allCommands.fieldEditCancel.run();\n      } else {\n        if (this._action !== 'close') {\n          throw new Error('Unexpected value for _action');\n        }\n        if (!this.isDisposed()) {\n          commands.allCommands.fieldEditCancel.run();\n        }\n      }\n      await docData.sendActions([\n        ['RemoveColumn', tableId, this._transformColId]\n      ]);\n    } finally {\n      // Repeat the change, in case of an error.\n      this._options.field?.colRef(column.getRowId());\n      column.isTransforming(false);\n    }\n  }\n\n  private _collapseChatPanel() {\n    if (!this._assistantExpanded.get()) { return; }\n\n    this._assistantExpanded.set(false);\n    // The panel's height and client height may differ; to ensure the collapse transition\n    // appears linear, temporarily disable the transition and sync the height and client\n    // height.\n    this._chatPanelBody.style.setProperty('transition', 'none');\n    this._chatPanelBody.style.setProperty('height', `${this._chatPanelBody.clientHeight}px`);\n    // eslint-disable-next-line no-unused-expressions\n    this._chatPanelBody.offsetHeight; // Flush CSS changes.\n    this._chatPanelBody.style.removeProperty('transition');\n    this._chatPanelBody.style.setProperty('height', '0px');\n    this._resizeEditor();\n  }\n\n  private _expandChatPanel() {\n    if (!this._hasExpandedOnce) {\n      this._logTelemetryEvent('assistantOpen', true);\n      this._hasExpandedOnce = true;\n    }\n    if (this._assistantExpanded.get()) { return; }\n\n    this._assistantExpanded.set(true);\n    const editor = this._options.editor.getDom();\n    let availableSpace = editor.clientHeight - MIN_FORMULA_EDITOR_HEIGHT_PX\n      - FORMULA_EDITOR_BUTTONS_HEIGHT_PX - CHAT_PANEL_HEADER_HEIGHT_PX;\n    if (editor.querySelector('.error_msg')) {\n      availableSpace -= editor.querySelector('.error_msg')!.clientHeight;\n    }\n    if (editor.querySelector('.error_details')) {\n      availableSpace -= editor.querySelector('.error_details')!.clientHeight;\n    }\n    if (this._lastChatPanelHeight) {\n      const height = Math.min(Math.max(this._lastChatPanelHeight, 220), availableSpace);\n      this._chatPanelBody.style.setProperty('height', `${height}px`);\n      this._lastChatPanelHeight = height;\n    } else {\n      this._lastChatPanelHeight = availableSpace;\n      this._chatPanelBody.style.setProperty('height', `${this._lastChatPanelHeight}px`);\n    }\n    this._resizeEditor();\n  }\n\n  private _onResizeStart() {\n    this._isResizing.set(true);\n    const start = this._domElement?.clientHeight;\n    const total = this._options.editor.getDom().clientHeight;\n    return {\n      start, total\n    };\n  }\n\n  /**\n   * Resize handler for the chat window.\n   */\n  private _onResizeMove(x: number, y: number, {start, total}: {start: number, total: number}): void {\n    // The y axis includes the panel header and formula editor buttons; excluded them from the\n    // new height of the panel body.\n    const newChatPanelBodyHeight = start - y - CHAT_PANEL_HEADER_HEIGHT_PX - FORMULA_EDITOR_BUTTONS_HEIGHT_PX;\n\n    // Toggle `_isResizing` whenever the new panel body height crosses the threshold for the minimum\n    // height. As of now, the sole purpose of this observable is to control when the animation for\n    // expanding and collapsing is shown.\n    if (newChatPanelBodyHeight < MIN_CHAT_PANEL_BODY_HEIGHT_PX && this._isResizing.get()) {\n      this._isResizing.set(false);\n    } else if (newChatPanelBodyHeight >= MIN_CHAT_PANEL_BODY_HEIGHT_PX && !this._isResizing.get()) {\n      this._isResizing.set(true);\n    }\n\n    const collapseThreshold = 78;\n    if (newChatPanelBodyHeight < collapseThreshold) {\n      this._collapseChatPanel();\n    } else {\n      this._expandChatPanel();\n      const calculatedHeight = Math.max(\n        MIN_CHAT_PANEL_BODY_HEIGHT_PX,\n        Math.min(total - MIN_FORMULA_EDITOR_HEIGHT_PX, newChatPanelBodyHeight)\n      );\n      this._chatPanelBody.style.height = `${calculatedHeight}px`;\n    }\n  }\n\n  private _onResizeEnd() {\n    this._isResizing.set(false);\n    if (this._assistantExpanded.get()) {\n      this._lastChatPanelHeight = this._chatPanelBody.clientHeight;\n    }\n  }\n  /**\n   * Builds the chat input at the bottom of the chat.\n   */\n  private _buildChatInput() {\n    // Make sure we dispose the previous input.\n    if (this._input) {\n      dom.domDispose(this._input);\n    }\n\n    // Input is created by hand, as we need a finer control of the user input than what is available\n    // in generic textInput control.\n    this._input = cssInput(\n      dom.on('input', (ev: Event) => {\n        this._userInput.set((ev.target as HTMLInputElement).value);\n      }),\n      autoGrow(this._userInput),\n      dom.style('max-height', use => {\n        // Set an upper bound on the height the input can grow to, so that when the chat panel\n        // is resized, the input is automatically resized to fit and doesn't overflow.\n        const panelHeight = use(this._chatPanelBodyClientHeight);\n        // The available input height is computed by taking the the panel height, and subtracting\n        // the heights of all the other elements (except for the input).\n        const availableInputHeight = panelHeight -\n          ((this._inputWrapper?.clientHeight ?? 0) - (this._input?.clientHeight ?? 0)) -\n          MIN_CHAT_HISTORY_HEIGHT_PX;\n        return `${Math.max(availableInputHeight, MIN_CHAT_INPUT_HEIGHT_PX)}px`;\n      }),\n      dom.onKeyDown({\n        Enter$: (ev) => this._handleChatEnterKeyDown(ev),\n        Escape: () => this._cancel(),\n      }),\n      dom.autoDispose(this._userInput.addListener(value => this._input.value = value)),\n      dom.prop('disabled', this._waiting),\n      dom.prop('placeholder', use => {\n        const lastFormula  = use(this._chat.lastSuggestedFormula);\n        if (lastFormula) {\n          return t('Press Enter to apply suggested formula.');\n        } else {\n          return t('What do you need help with?');\n        }\n      }),\n      dom.autoDispose(this._waiting.addListener(value => {\n        if (!value) {\n          setTimeout(() => this._focusChatInput(), 0);\n        }\n      })),\n    );\n\n    return this._inputWrapper = cssHContainer(\n      testId('ai-assistant-chat-input'),\n      dom.cls(cssTopBorder.className),\n      dom.cls(cssVSpace.className),\n      cssInputWrapper(\n        dom.cls(cssTypography.className),\n        this._input,\n        cssInputButtonsRow(\n          cssSendMessageButton(\n            icon('FieldAny'),\n            dom.on('click', this._handleSendMessageClick.bind(this)),\n            cssSendMessageButton.cls('-disabled', use =>\n              use(this._waiting) || use(this._userInput).length === 0\n            ),\n          ),\n          dom.on('click', (ev) => {\n            ev.stopPropagation();\n            this._focusChatInput();\n          }),\n          cssInputButtonsRow.cls('-disabled', this._waiting),\n        ),\n        cssInputWrapper.cls('-disabled', this._waiting),\n      ),\n    );\n  }\n\n  /**\n   * Builds the signup nudge shown to anonymous users at the bottom of the chat.\n   */\n  private _buildSignupNudge() {\n    const {deploymentType} = getGristConfig();\n    return deploymentType === 'saas' ? buildSignupNudge() : buildAnonNudge();\n  }\n\n  private async _handleChatEnterKeyDown(ev: KeyboardEvent) {\n    // If shift is pressed, we want to insert a new line.\n    if (ev.shiftKey) { return; }\n\n    ev.preventDefault();\n    const lastFormula = this._chat.lastSuggestedFormula.get();\n    if (this._input.value === '' && lastFormula) {\n      this._apply(lastFormula).catch(reportError);\n    } else {\n      this._ask().catch(reportError);\n    }\n  }\n\n  private async _handleSendMessageClick(ev: MouseEvent) {\n    if (this._waiting.get() || this._input.value.length === 0) { return; }\n\n    await this._ask();\n  }\n\n  private async _apply(formula: string) {\n    this._options.editor.setFormula(formula);\n    this._resizeEditor();\n    await this._preview();\n  }\n\n  private async _sendMessage(description: string): Promise<ChatMessage> {\n    // Destruct options.\n    const {column, gristDoc} = this._options;\n    // Get the state of the chat from the column.\n    const conversationId = this._chat.conversationId.get();\n    const prevState = column.chatHistory.peek().get().state;\n    const {reply, suggestedActions, suggestedFormula, state, limit} = await askAI(gristDoc, {\n      conversationId,\n      column,\n      description,\n      state: prevState,\n    });\n    if (limit && limit.limit >= 0) {\n      this._numRemainingCredits.set(Math.max(limit.limit - limit.usage, 0));\n    } else {\n      this._numRemainingCredits.set(null);\n    }\n    console.debug('received formula assistant response: ', {suggestedActions, suggestedFormula, reply, state});\n    // If back-end is capable of conversation, keep its state.\n    const chatHistoryNew = column.chatHistory.peek();\n    const value = chatHistoryNew.get();\n    value.state = state;\n    // If model has a conversational skills (and maintains a history), we might get actually\n    // some markdown text back, so we need to parse it.\n    const prettyMessage = state ? (reply || suggestedFormula || '') : (suggestedFormula || reply || '');\n    // Add it to the chat.\n    return {\n      message: prettyMessage,\n      formula: suggestedFormula,\n      action: suggestedActions[0],\n      sender: 'ai',\n    };\n  }\n\n  private _focusChatInput() {\n    if (!this._input) { return; }\n\n    this._input.focus();\n    if (this._input.value.length > 0) {\n      // Make sure focus moves to the last character.\n      this._input.selectionStart = this._input.value.length;\n      this._input.scrollTop = this._input.scrollHeight;\n    }\n  }\n\n  private _clear() {\n    this._chat.clear();\n    this._userInput.set('');\n  }\n\n  private async _ask() {\n    if (this._waiting.get()) {\n      return;\n    }\n    const message = this._userInput.get();\n    if (!message) { return; }\n    this._chat.addQuestion(message);\n    this._userInput.set('');\n    await this._doAsk(message);\n  }\n\n  private async _doAsk(message: string) {\n    this._chat.thinking();\n    this._waiting.set(true);\n    try {\n      const response = await this._sendMessage(message);\n      this._chat.addResponse(response);\n    } catch (err: unknown) {\n      if (err instanceof ApiError && err.status === 429 && err.details?.limit) {\n        const {projectedValue, maximum} = err.details.limit;\n        if (projectedValue >= maximum) {\n          this._numRemainingCredits.set(0);\n          return;\n        }\n      }\n\n      throw err;\n    } finally {\n      this._chat.thinking(false);\n      this._waiting.set(false);\n    }\n  }\n}\n\n/**\n * A model for the chat panel. It is responsible for keeping the history of the chat and\n * sending messages to the AI.\n */\nclass ChatHistory extends Disposable {\n  public conversationId: Observable<string>;\n  public conversation: MutableObsArray<ChatMessage>;\n  public conversationHistory: MutableObsArray<ChatMessage>;\n  public conversationLength: Computed<number>;\n  public conversationHistoryLength: Computed<number>;\n  public conversationSuggestedFormulas: Computed<string[]>;\n  public lastSuggestedFormula: Computed<string|null>;\n\n  private _element: HTMLElement;\n\n  constructor(private _options: {\n    column: ColumnRec,\n    gristDoc: GristDoc,\n    apply: (formula: string) => void,\n    logTelemetryEvent: (event: TelemetryEvent, includeContext?: boolean, metadata?: TelemetryMetadata) => void,\n  }) {\n    super();\n\n    const column = this._options.column;\n    let conversationId = column.chatHistory.peek().get().conversationId;\n    if (!conversationId) {\n      conversationId = uuidv4();\n      const chatHistory = column.chatHistory.peek();\n      chatHistory.set({...chatHistory.get(), conversationId});\n    }\n    this.conversationId = Observable.create(this, conversationId);\n    this.autoDispose(this.conversationId.addListener((newConversationId) => {\n      // If a new conversation id was generated (e.g. on Clear Conversation), save it\n      // to the column's history.\n      const chatHistory = column.chatHistory.peek();\n      chatHistory.set({...chatHistory.get(), conversationId: newConversationId});\n    }));\n\n    // Create observable array of messages that is connected to the column's chatHistory.\n    this.conversationHistory = this.autoDispose(obsArray(column.chatHistory.peek().get().messages));\n    this.autoDispose(this.conversationHistory.addListener((cur) => {\n      const chatHistory = column.chatHistory.peek();\n      chatHistory.set({...chatHistory.get(), messages: [...cur]});\n    }));\n    this.conversation = this.autoDispose(obsArray());\n\n    this.conversationHistoryLength = Computed.create(this, use => use(this.conversationHistory).length);\n    this.conversationLength = Computed.create(this, use => use(this.conversation).length);\n\n    this.conversationSuggestedFormulas = Computed.create(this, use => {\n      return use(this.conversation)\n        .map(({formula}) => formula)\n        .filter((formula): formula is string => Boolean(formula));\n    });\n    this.lastSuggestedFormula = Computed.create(this, use => {\n      return [...use(this.conversationHistory)].reverse().find(({formula}) => formula)?.formula ?? null;\n    });\n  }\n\n  public thinking(on = true) {\n    if (!on) {\n      // Find all index of all thinking messages.\n      const messages = [...this.conversationHistory.get()].filter(m => m.message === '...');\n      // Remove all thinking messages.\n      for (const message of messages) {\n        this.conversationHistory.splice(this.conversationHistory.get().indexOf(message), 1);\n      }\n    } else {\n      this.conversationHistory.push({\n        message: '...',\n        sender: 'ai',\n      });\n      this.scrollDown();\n    }\n  }\n\n  public supportsMarkdown() {\n    return this._options.column.chatHistory.peek().get().state !== undefined;\n  }\n\n  public addResponse(message: ChatMessage) {\n    // Clear any thinking from messages.\n    this.thinking(false);\n    const entry: ChatMessage = {...message, sender: 'ai'};\n    this.conversationHistory.push(entry);\n    this.conversation.push(entry);\n    this.scrollDown();\n  }\n\n  public addQuestion(message: string) {\n    this.thinking(false);\n    const entry: ChatMessage = {message, sender: 'user'};\n    this.conversationHistory.push(entry);\n    this.conversation.push(entry);\n  }\n\n  public lastQuestion() {\n    const list = this.conversationHistory.get();\n    if (list.length === 0) {\n      return null;\n    }\n    const lastMessage = list[list.length - 1];\n    if (lastMessage?.sender === 'user') {\n      return lastMessage.message;\n    }\n    throw new Error('No last question found');\n  }\n\n  public removeLastResponse() {\n    const lastMessage = this.conversationHistory.get()[this.conversationHistory.get().length - 1];\n    if (lastMessage?.sender === 'ai') {\n      this.conversationHistory.pop();\n    }\n  }\n\n  public clear() {\n    this._options.logTelemetryEvent('assistantClearConversation', true);\n    this.conversationId.set(uuidv4());\n    this.conversationHistory.set([]);\n    const {column} = this._options;\n    // Get the state of the chat from the column.\n    const prevState = column.chatHistory.peek().get();\n    prevState.state = undefined;\n  }\n\n  public scrollDown(smooth = true) {\n    this._element.scroll({\n      top: 99999,\n      behavior: smooth ? 'smooth' : 'auto'\n    });\n  }\n\n  public buildDom() {\n    return this._element = cssHistory(\n      this._buildIntroMessage(),\n      dom.forEach(this.conversationHistory, entry => {\n        if (entry.sender === 'user') {\n          return cssMessage(\n            dom('span',\n              dom.text(entry.message),\n              testId('ai-assistant-message-user'),\n              testId('ai-assistant-message'),\n            ),\n            cssAvatar(buildAvatar(this._options.gristDoc)),\n          );\n        } else {\n          return dom('div',\n            cssAiMessage(\n              cssAvatar(cssAiImage()),\n                entry.message === '...' ? cssLoadingDots() :\n              this._render(entry.message,\n                dom.cls('formula-assistant-message'),\n                testId('ai-assistant-message-ai'),\n                testId('ai-assistant-message'),\n              ),\n            ),\n            cssAiMessageButtonsRow(\n              cssAiMessageButtons(\n                primaryButton(t('Apply'), dom.on('click', () => {\n                  this._options.apply(entry.formula!);\n                })),\n              ),\n              dom.show(Boolean(entry.formula)),\n            ),\n          );\n        }\n      }),\n    );\n  }\n\n  private _buildIntroMessage() {\n    return cssAiIntroMessage(\n      cssAvatar(cssAiImage()),\n      dom('div',\n        cssAiMessageParagraph(t(`Hi, I'm the Grist Formula AI Assistant.`)),\n        cssAiMessageParagraph(t(`There are some things you should know when working with me:`)),\n        cssAiMessageParagraph(\n          cssAiMessageBullet(\n            cssTickIcon('Tick'),\n            t('I can only help with formulas. I cannot build tables, columns, and views, or write access rules.'),\n          ),\n          cssAiMessageBullet(\n            cssTickIcon('Tick'),\n            t(\n              'Talk to me like a person. No need to specify tables and column names. For example, you can ask ' +\n              '\"Please calculate the total invoice amount.\"'\n            ),\n          ),\n          (WHICH_FORMULA_ASSISTANT() === 'OpenAI') ? cssAiMessageBullet(\n            cssTickIcon('Tick'),\n            dom('div',\n              t(\n                'When you talk to me, your questions and your document structure (visible in {{codeView}}) ' +\n                'are sent to OpenAI. {{learnMore}}.',\n                {\n                  codeView: cssLink(t('Code View'), urlState().setLinkUrl({docPage: 'code'})),\n                  learnMore: cssLink(t('Learn more'), {href: commonUrls.helpAssistantDataUse, target: '_blank'}),\n                }\n              ),\n            ),\n          ) : null,\n        ),\n        cssAiMessageParagraph(\n          t(\n            'For more help with formulas, check out our {{functionList}} and {{formulaCheatSheet}}, ' +\n            'or visit our {{community}} for more help.',\n            {\n              functionList: cssLink(t('Function List'), {href: commonUrls.functions, target: '_blank'}),\n              formulaCheatSheet: cssLink(t('Formula Cheat Sheet'), {href: commonUrls.formulaSheet, target: '_blank'}),\n              community: cssLink(t('Community'), {href: commonUrls.community, target: '_blank'}),\n            }\n          ),\n        ),\n      ),\n      testId('ai-assistant-message-intro'),\n    );\n  }\n\n  /**\n   * Renders the message as markdown if possible, otherwise as a code block.\n   */\n  private _render(message: string, ...args: DomElementArg[]) {\n    const doc = this._options.gristDoc;\n    if (this.supportsMarkdown()) {\n      return dom('div',\n        (el) => subscribeElem(el, doc.currentTheme, () => {\n          const content = sanitizeHTML(marked(message, {\n            highlight: (code) => {\n              const codeBlock = buildHighlightedCode(code, {\n                gristTheme: doc.currentTheme,\n                maxLines: 60,\n              });\n              return codeBlock.innerHTML;\n            },\n          }));\n          el.innerHTML = content;\n        }),\n        ...args\n      );\n    } else {\n      return buildHighlightedCode(message, {\n        gristTheme: doc.currentTheme,\n        maxLines: 100,\n      });\n    }\n  }\n}\n\n/**\n * Sends the message to the backend and returns the response.\n */\nasync function askAI(grist: GristDoc, options: {\n  column: ColumnRec,\n  description: string,\n  conversationId: string,\n  state?: AssistanceState\n}): Promise<AssistanceResponse> {\n  const {column, description, conversationId, state} = options;\n  const tableId = column.table.peek().tableId.peek();\n  const colId = column.colId.peek();\n  return await grist.docApi.getAssistance({\n    conversationId,\n    context: {type: 'formula', tableId, colId},\n    text: description,\n    state,\n  });\n}\n\n/** Builds avatar image for user or assistant. */\nfunction buildAvatar(grist: GristDoc) {\n  const user = grist.app.topAppModel.appObs.get()?.currentUser || null;\n  if (user) {\n    return (createUserImage(user, 'medium'));\n  } else {\n    // TODO: this will not happen, as this should be only for logged in users.\n    return (dom('div', ''));\n  }\n}\n\nfunction buildSignupNudge() {\n  return cssSignupNudgeWrapper(\n    cssSignupNudgeParagraph(\n      t('Sign up for a free Grist account to start using the Formula AI Assistant.'),\n    ),\n    cssSignupNudgeButtonsRow(\n      bigPrimaryButtonLink(\n        t('Sign Up for Free'),\n        {href: getLoginOrSignupUrl()},\n        testId('ai-assistant-sign-up'),\n      ),\n    ),\n  );\n}\n\nfunction buildAnonNudge() {\n  return cssSignupNudgeWrapper(\n    cssSignupNudgeWrapper.cls('-center'),\n    cssSignupNudgeParagraph(\n      t('Formula AI Assistant is only available for logged in users.'),\n    ),\n  );\n}\n\nconst MIN_FORMULA_EDITOR_HEIGHT_PX = 100;\n\nconst FORMULA_EDITOR_BUTTONS_HEIGHT_PX = 42;\n\nconst MIN_CHAT_HISTORY_HEIGHT_PX = 160;\n\nconst MIN_CHAT_PANEL_BODY_HEIGHT_PX = 180;\n\nconst CHAT_PANEL_HEADER_HEIGHT_PX = 30;\n\nconst MIN_CHAT_INPUT_HEIGHT_PX = 42;\n\nconst cssChatPanel = styled('div', `\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  overflow:hidden;\n  flex-grow: 1;\n`);\n\nconst cssChatPanelHeader = styled('div', `\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-shrink: 0;\n  padding: 0px 8px 0px 8px;\n  background-color: ${theme.formulaAssistantHeaderBg};\n  height: ${CHAT_PANEL_HEADER_HEIGHT_PX}px;\n  border-top: 1px solid ${theme.formulaAssistantBorder};\n  border-bottom: 1px solid ${theme.formulaAssistantBorder};\n`);\n\nconst cssChatPanelHeaderTitle = styled('div', `\n  display: flex;\n  align-items: center;\n  color: ${theme.lightText};\n  --icon-color: ${theme.accentIcon};\n  column-gap: 8px;\n  user-select: none;\n`);\n\nconst cssChatPanelHeaderButtons = styled('div', `\n  display: flex;\n  align-items: center;\n  column-gap: 8px;\n`);\n\nconst cssChatPanelHeaderButton = styled('div', `\n  --icon-color: ${theme.controlSecondaryFg};\n  border-radius: 3px;\n  padding: 3px;\n  cursor: pointer;\n  user-select: none;\n  &:hover, &.weasel-popup-open {\n    background-color: ${theme.hover};\n  }\n`);\n\nconst cssChatPanelHeaderResizer = styled('div', `\n  position: absolute;\n  top: -3px;\n  height: 7px;\n  width: 100%;\n  cursor: ns-resize;\n`);\n\nconst cssChatPanelBody = styled('div', `\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  transition: height 0.4s;\n\n  &-resizing {\n    transition: unset;\n  }\n`);\n\nconst cssTopBorder = styled('div', `\n  border-top: 1px solid ${theme.formulaAssistantBorder};\n`);\n\nconst cssVSpace = styled('div', `\n  padding-top: 18px;\n  padding-bottom: 18px;\n`);\n\nconst cssHContainer = styled('div', `\n  margin-top: auto;\n  padding-left: 18px;\n  padding-right: 18px;\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n`);\n\nconst cssTypography = styled('div', `\n  color: ${theme.inputFg};\n`);\n\nconst cssHistory = styled('div', `\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  color: ${theme.inputFg};\n`);\n\nconst cssInputWrapper = styled('div', `\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${theme.inputBorder};\n  border-radius: 3px;\n  align-items: center;\n  --icon-color: ${theme.controlSecondaryFg};\n  &-disabled {\n    background-color: ${theme.inputDisabledBg};\n  }\n  & > input {\n    outline: none;\n    padding: 0px;\n    align-self: stretch;\n    flex: 1;\n    border: none;\n    background-color: inherit;\n  }\n`);\n\nconst cssMessage = styled('div', `\n  display: grid;\n  grid-template-columns: 1fr 60px;\n  border-top: 1px solid ${theme.formulaAssistantBorder};\n  padding: 20px 0px 20px 20px;\n`);\n\nconst cssAiMessage = styled('div', `\n  position: relative;\n  display: grid;\n  grid-template-columns: 60px 1fr;\n  border-top: 1px solid ${theme.formulaAssistantBorder};\n  padding: 20px 20px 20px 0px;\n\n  & pre {\n    border: none;\n    background: ${theme.formulaAssistantPreformattedTextBg};\n    font-size: 10px;\n  }\n\n  & pre .ace-chrome, & pre .ace-dracula {\n    background: ${theme.formulaAssistantPreformattedTextBg} !important;\n  }\n\n  & p > code {\n    background: #FFFFFF;\n    border: 1px solid #E1E4E5;\n    color: #333333;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n  }\n`);\n\nconst cssAiIntroMessage = styled(cssAiMessage, `\n  border-top: unset;\n`);\n\nconst cssAvatar = styled('div', `\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n`);\n\nconst cssAiImage = styled('div', `\n  flex: none;\n  height: 32px;\n  width: 32px;\n  border-radius: 50%;\n  background-color: white;\n  background-image: var(--icon-GristLogo);\n  background-size: 22px 22px;\n  background-repeat: no-repeat;\n  background-position: center;\n`);\n\nconst cssButtons = styled('div', `\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n  padding: 8px;\n`);\n\nconst cssTools = styled('div._tools_container', `\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`);\n\nconst cssInputButtonsRow = styled('div', `\n  padding-top: 8px;\n  width: 100%;\n  justify-content: flex-end;\n  cursor: text;\n  display: flex;\n\n  &-disabled {\n    cursor: default;\n  }\n`);\n\nconst cssSendMessageButton = styled('div', `\n  padding: 3px;\n  border-radius: 4px;\n  align-self: flex-end;\n  margin-bottom: 6px;\n  margin-right: 6px;\n\n  &-disabled {\n    --icon-color: ${theme.controlSecondaryFg};\n  }\n\n  &:not(&-disabled) {\n    cursor: pointer;\n    --icon-color: ${theme.controlPrimaryFg};\n    color: ${theme.controlPrimaryFg};\n    background-color: ${theme.controlPrimaryBg};\n  }\n\n  &:hover:not(&-disabled) {\n    background-color: ${theme.controlPrimaryHoverBg};\n  }\n`);\n\nconst cssInput = styled('textarea', `\n  border: 0px;\n  flex-grow: 1;\n  outline: none;\n  width: 100%;\n  padding: 4px 6px;\n  padding-top: 6px;\n  resize: none;\n  min-height: ${MIN_CHAT_INPUT_HEIGHT_PX}px;\n  background: transparent;\n\n  &:disabled {\n    background-color: ${theme.inputDisabledBg};\n    color: ${theme.inputDisabledFg};\n  }\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n`);\n\nconst cssChatOptionsMenu = styled('div', `\n  z-index: ${vars.floatingPopupMenuZIndex};\n`);\n\nconst cssAiMessageButtonsRow = styled('div', `\n  display: flex;\n  justify-content: flex-end;\n  padding: 8px;\n`);\n\nconst cssAiMessageButtons = styled('div', `\n  display: flex;\n  column-gap: 8px;\n`);\n\nconst cssAiMessageParagraph = styled('div', `\n  margin-bottom: 8px;\n`);\n\nconst cssAiMessageBullet = styled('div', `\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 6px;\n`);\n\nconst cssTickIcon = styled(icon, `\n  --icon-color: ${theme.accentIcon};\n  margin-right: 8px;\n  flex-shrink: 0;\n`);\n\nconst cssLoadingDots = styled(loadingDots, `\n  --dot-size: 5px;\n  align-items: center;\n`);\n\nconst cssSignupNudgeWrapper = styled('div', `\n  border-top: 1px solid ${theme.formulaAssistantBorder};\n  padding: 16px;\n  margin-top: auto;\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  &-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`);\n\nconst cssSignupNudgeParagraph = styled('div', `\n  font-size: ${vars.mediumFontSize};\n  font-weight: 500;\n  margin-bottom: 12px;\n  text-align: center;\n`);\n\nconst cssSignupNudgeButtonsRow = styled('div', `\n  display: flex;\n  justify-content: center;\n`);\n\nconst cssBanner = styled('div', `\n  padding: 6px 8px 6px 8px;\n`);\n","import * as AceEditor from 'app/client/components/AceEditor';\nimport {CommandName} from 'app/client/components/commandList';\nimport * as commands from 'app/client/components/commands';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {makeT} from 'app/client/lib/localization';\nimport {DataRowModel} from 'app/client/models/DataRowModel';\nimport {ColumnRec} from 'app/client/models/DocModel';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {reportError} from 'app/client/models/errors';\nimport {HAS_FORMULA_ASSISTANT} from 'app/client/models/features';\nimport {hoverTooltip} from 'app/client/ui/tooltips';\nimport {textButton} from 'app/client/ui2018/buttons';\nimport {colors, testId, theme, vars} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {createMobileButtons, getButtonMargins} from 'app/client/widgets/EditorButtons';\nimport {EditorPlacement, ISize} from 'app/client/widgets/EditorPlacement';\nimport {createDetachedIcon} from 'app/client/widgets/FloatingEditor';\nimport {FormulaAssistant} from 'app/client/widgets/FormulaAssistant';\nimport {NewBaseEditor, Options} from 'app/client/widgets/NewBaseEditor';\nimport {asyncOnce} from 'app/common/AsyncCreate';\nimport {CellValue} from 'app/common/DocActions';\nimport {isRaisedException} from 'app/common/gristTypes';\nimport {undef} from 'app/common/gutil';\nimport {decodeObject, RaisedException} from 'app/plugin/objtypes';\nimport {Computed, Disposable, dom, Holder, MultiHolder, Observable, styled, subscribe} from 'grainjs';\nimport debounce = require('lodash/debounce');\n\n// How wide to expand the FormulaEditor when an error is shown in it.\nconst minFormulaErrorWidth = 400;\nconst t = makeT('FormulaEditor');\n\nexport interface IFormulaEditorOptions extends Options {\n  cssClass?: string;\n  editingFormula: ko.Computed<boolean>;\n  column: ColumnRec;\n  field?: ViewFieldRec;\n  canDetach?: boolean;\n}\n\n\n/**\n * Required parameters:\n * @param {RowModel} options.field: ViewSectionField (i.e. column) being edited.\n * @param {Object} options.cellValue: The value in the underlying cell being edited.\n * @param {String} options.editValue: String to be edited.\n * @param {Number} options.cursorPos: The initial position where to place the cursor.\n * @param {Object} options.commands: Object mapping command names to functions, to enable as part\n *  of the command group that should be activated while the editor exists.\n * @param {Boolean} options.omitBlurEventForObservableMode: Flag to indicate whether ace editor\n *  should save the value on `blur` event.\n */\nexport class FormulaEditor extends NewBaseEditor {\n  public isDetached = Observable.create(this, false);\n  protected options: IFormulaEditorOptions;\n\n  private _aceEditor: any;\n  private _dom: HTMLElement;\n  private _editorPlacement!: EditorPlacement;\n  private _placementHolder = Holder.create(this);\n  private _canDetach: boolean;\n  private _isEmpty: Computed<boolean>;\n\n  constructor(options: IFormulaEditorOptions) {\n    super(options);\n\n    const editingFormula = options.editingFormula;\n\n    const initialValue = undef(options.state as string | undefined, options.editValue, String(options.cellValue));\n    // create editor state observable (used by draft and latest position memory)\n    this.editorState = Observable.create(this, initialValue);\n\n    this._isEmpty = Computed.create(this, this.editorState, (_use, state) => state === '');\n\n    this._aceEditor = AceEditor.create({\n      // A bit awkward, but we need to assume calcSize is not used until attach() has been called\n      // and _editorPlacement created.\n      column: options.column,\n      calcSize: this._calcSize.bind(this),\n      gristDoc: options.gristDoc,\n      saveValueOnBlurEvent: !options.readonly,\n      editorState : this.editorState,\n      readonly: options.readonly\n    });\n\n\n    // For editable editor we will grab the cursor when we are in the formula editing mode.\n    const cursorCommands = options.readonly ? {} : { setCursor: this._onSetCursor };\n    const isActive = Computed.create(this, use => Boolean(use(editingFormula)));\n    const commandGroup = this.autoDispose(commands.createGroup(cursorCommands, this, isActive));\n\n    // We will create a group of editor commands right away.\n    const editorGroup = this.autoDispose(commands.createGroup({\n      ...options.commands,\n    }, this, true));\n\n    // Merge those two groups into one.\n    const aceCommands: any = {\n      knownKeys: {...commandGroup.knownKeys, ...editorGroup.knownKeys},\n      commands: {...commandGroup.commands, ...editorGroup.commands},\n    };\n\n    // Tab, Shift + Tab, Enter should be handled by the editor itself when we are in the detached mode.\n    // We will create disabled group, but will push those commands to the editor directly.\n    const passThrough = (name: CommandName) => () => {\n      if (this.isDetached.get()) {\n        // For detached editor, just leave the default behavior.\n        return true;\n      }\n      // Else invoke regular command.\n      return commands.allCommands[name]?.run() ?? false;\n    };\n    const detachedCommands = this.autoDispose(commands.createGroup({\n      nextField: passThrough('nextField'),\n      prevField: passThrough('prevField'),\n      fieldEditSave: passThrough('fieldEditSave'),\n    }, this, false /* don't activate, we're just borrowing constructor */));\n\n    Object.assign(aceCommands.knownKeys, detachedCommands.knownKeys);\n    Object.assign(aceCommands.commands, detachedCommands.commands);\n\n    const hideErrDetails = Observable.create(this, true);\n    const raisedException = Computed.create(this, use => {\n      if (!options.formulaError || !use(options.formulaError)) {\n        return null;\n      }\n      const error = isRaisedException(use(options.formulaError)!) ?\n                    decodeObject(use(options.formulaError)!) as RaisedException:\n                    new RaisedException([\"Unknown error\"]);\n      return error;\n    });\n    const errorText = Computed.create(this, raisedException, (_, error) => {\n      if (!error) {\n        return \"\";\n      }\n      return error.message ? `${error.name} : ${error.message}` : error.name;\n    });\n    const errorDetails = Computed.create(this, raisedException, (_, error) => {\n      if (!error) {\n        return \"\";\n      }\n      return error.details ?? \"\";\n    });\n\n    // Once the exception details are available, update the sizing. The extra delay is to allow\n    // the DOM to update before resizing.\n    this.autoDispose(errorDetails.addListener(() => setTimeout(this.resize.bind(this), 0)));\n\n    this._canDetach = Boolean(options.canDetach && !options.readonly);\n\n    this.autoDispose(this._aceEditor);\n\n    // Show placeholder text when the formula is blank.\n    this._isEmpty.addListener(() => this._updateEditorPlaceholder());\n\n    // Disable undo/redo while the editor is detached.\n    this.isDetached.addListener((isDetached) => {\n      // TODO: look into whether we can support undo/redo while the editor is detached.\n      if (isDetached) {\n        options.gristDoc.getUndoStack().disable();\n      } else {\n        options.gristDoc.getUndoStack().enable();\n      }\n    });\n\n    this.onDispose(() => {\n      options.gristDoc.getUndoStack().enable();\n    });\n\n    this._dom = cssFormulaEditor(\n      // switch border shadow\n      dom.cls(\"readonly_editor\", options.readonly),\n      createMobileButtons(options.commands),\n      options.cssClass ? dom.cls(options.cssClass) : null,\n\n      // This shouldn't be needed, but needed for tests.\n      dom.on('mousedown', (ev) => {\n        // If we are detached, allow user to click and select error text.\n        if (this.isDetached.get()) {\n          // If we clicked on input element in our dom, don't do anything. We probably clicked on chat input, in AI\n          // tools box.\n          const clickedOnInput = ev.target instanceof HTMLInputElement || ev.target instanceof HTMLTextAreaElement;\n          if (clickedOnInput && this._dom.contains(ev.target)) {\n            // By not doing anything special here we assume that the input element will take the focus.\n            return;\n          }\n        }\n        // Allow clicking the error message.\n        if (ev.target instanceof HTMLElement && (\n          ev.target.classList.contains('error_msg') ||\n              ev.target.classList.contains('error_details_inner')\n        )) {\n          return;\n        }\n        ev.preventDefault();\n        this.focus();\n      }),\n      !this._canDetach ? null : createDetachedIcon(\n        hoverTooltip(t('Expand Editor')),\n        dom.hide(this.isDetached),\n      ),\n      cssFormulaEditor.cls('-detached', this.isDetached),\n      dom('div.formula_editor.formula_field_edit', testId('formula-editor'),\n        this._aceEditor.buildDom((aceObj: any) => {\n          aceObj.setFontSize(11);\n          aceObj.setHighlightActiveLine(false);\n          aceObj.getSession().setUseWrapMode(false);\n          aceObj.renderer.setPadding(0);\n          const val = initialValue;\n          const pos = Math.min(options.cursorPos, val.length);\n          this._aceEditor.setValue(val, pos);\n          this._aceEditor.attachCommandGroup(aceCommands);\n\n          // enable formula editing if state was passed\n          if (options.state || options.readonly) {\n            editingFormula(true);\n          }\n          if (options.readonly) {\n            this._aceEditor.enable(false);\n            aceObj.gotoLine(0, 0); // By moving, ace editor won't highlight anything\n          }\n          // This catches any change to the value including e.g. via backspace or paste.\n          aceObj.once(\"change\", () => {\n            editingFormula?.(true);\n          });\n\n          if (val === '') {\n            // Show placeholder text if the formula is blank.\n            this._updateEditorPlaceholder();\n          }\n        })\n      ),\n      dom.maybe(options.formulaError, () => [\n        dom('div.error_msg', testId('formula-error-msg'),\n          dom.attr('tabindex', '-1'),\n          dom.maybe(errorDetails, () =>\n            dom.domComputed(hideErrDetails, (hide) => cssCollapseIcon(\n              hide ? 'Expand' : 'Collapse',\n              testId('formula-error-expand'),\n              dom.on('click', () => {\n                if (errorDetails.get()){\n                  hideErrDetails.set(!hideErrDetails.get());\n                  this._aceEditor.resize();\n                }\n              })\n            ))\n          ),\n          dom.text(errorText),\n        ),\n        dom.maybe(use => Boolean(use(errorDetails) && !use(hideErrDetails)), () =>\n          dom('div.error_details',\n            dom.attr('tabindex', '-1'),\n            dom('div.error_details_inner',\n              dom.text(errorDetails),\n            ),\n            testId('formula-error-details'),\n          )\n        )\n      ]),\n      dom.maybe(this.isDetached, () => {\n        return dom.create(FormulaAssistant, {\n          column: this.options.column,\n          field: this.options.field,\n          gristDoc: this.options.gristDoc,\n          editor: this,\n        });\n      }),\n    );\n  }\n\n  public attach(cellElem: Element): void {\n    this.isDetached.set(false);\n    this._editorPlacement = EditorPlacement.create(\n      this._placementHolder, this._dom, cellElem, {margins: getButtonMargins()});\n    // Reposition the editor if needed for external reasons (in practice, window resize).\n    this.autoDispose(this._editorPlacement.onReposition.addListener(this._aceEditor.resize, this._aceEditor));\n    this._aceEditor.onAttach();\n    this._updateEditorPlaceholder();\n    this._aceEditor.resize();\n    this.focus();\n  }\n\n  public getDom(): HTMLElement {\n    return this._dom;\n  }\n\n  public setFormula(formula: string) {\n    this._aceEditor.setValue(formula);\n  }\n\n  public getCellValue() {\n    const value = this._aceEditor.getValue();\n    // Strip the leading \"=\" sign, if any, in case users think it should start the formula body (as\n    // it does in Excel, and because the equal sign is also used for formulas in Grist UI).\n    return (value[0] === '=') ? value.slice(1) : value;\n  }\n\n  public getTextValue() {\n    return this._aceEditor.getValue();\n  }\n\n  public getCursorPos() {\n    const aceObj = this._aceEditor.getEditor();\n    return aceObj.getSession().getDocument().positionToIndex(aceObj.getCursorPosition());\n  }\n\n  public focus() {\n    if (this.isDisposed()) { return; }\n    this._aceEditor.getEditor().focus();\n  }\n\n  public resize() {\n    if (this.isDisposed()) { return; }\n    this._aceEditor.resize();\n  }\n\n  public detach() {\n    // Remove the element from the dom (to prevent any autodispose) from happening.\n    this._dom.parentNode?.removeChild(this._dom);\n    // First mark that we are detached, to show the buttons,\n    // and halt the autosizing mechanism.\n    this.isDetached.set(true);\n    // Finally, destroy the normal inline placement helper.\n    this._placementHolder.clear();\n    // We are going in the full formula edit mode right away.\n    this.options.editingFormula(true);\n    this._updateEditorPlaceholder();\n    // Set the focus in timeout, as the dom is added after this function.\n    setTimeout(() => !this.isDisposed() && this._aceEditor.resize(), 0);\n    // Return the dom, it will be moved to the floating editor.\n    return this._dom;\n  }\n\n  private _updateEditorPlaceholder() {\n    const editor = this._aceEditor.getEditor();\n    const shouldShowPlaceholder = editor.session.getValue().length === 0;\n    if (editor.renderer.emptyMessageNode) {\n      // Remove the current placeholder if one is present.\n      editor.renderer.scroller.removeChild(editor.renderer.emptyMessageNode);\n    }\n    if (!shouldShowPlaceholder) {\n      editor.renderer.emptyMessageNode = null;\n    } else {\n      const withAiButton = this._canDetach && !this.isDetached.get() && HAS_FORMULA_ASSISTANT();\n      editor.renderer.emptyMessageNode = cssFormulaPlaceholder(\n          !withAiButton\n          ? t('Enter formula.')\n          : t('Enter formula or {{button}}.', {\n            button: cssUseAssistantButton(\n              t('use AI Assistant'),\n              dom.on('click', (ev) => this._handleUseAssistantButtonClick(ev)),\n              testId('formula-editor-use-ai-assistant'),\n            ),\n          }),\n      );\n      editor.renderer.scroller.appendChild(editor.renderer.emptyMessageNode);\n    }\n  }\n\n  private _handleUseAssistantButtonClick(ev: MouseEvent) {\n    ev.stopPropagation();\n    ev.preventDefault();\n    commands.allCommands.detachEditor.run();\n    commands.allCommands.activateAssistant.run();\n  }\n\n  private _calcSize(elem: HTMLElement, desiredElemSize: ISize) {\n    if (this.isDetached.get()) {\n      // If we are detached, we will stop autosizing.\n      return {\n        height: 0,\n        width: 0\n      };\n    }\n\n    const placeholder: HTMLElement | undefined = this._aceEditor.getEditor().renderer.emptyMessageNode;\n    if (placeholder) {\n      // If we are showing the placeholder, fit it all on the same line.\n      return this._editorPlacement.calcSizeWithPadding(elem, {\n        width: placeholder.scrollWidth,\n        height: placeholder.scrollHeight,\n      });\n    }\n\n    const errorBox: HTMLElement|null = this._dom.querySelector('.error_details');\n    const errorBoxStartHeight = errorBox?.getBoundingClientRect().height || 0;\n    const errorBoxDesiredHeight = errorBox?.scrollHeight || 0;\n\n    // If we have an error to show, ask for a larger size for formulaEditor.\n    const desiredSize = {\n      width: Math.max(desiredElemSize.width, (this.options.formulaError.get() ? minFormulaErrorWidth : 0)),\n      // Ask for extra space for the error; we'll decide how to allocate it below.\n      height: desiredElemSize.height + (errorBoxDesiredHeight - errorBoxStartHeight),\n    };\n    const result = this._editorPlacement.calcSizeWithPadding(elem, desiredSize);\n    if (errorBox) {\n      // Note that result.height does not include errorBoxStartHeight, but includes any available\n      // extra space that we requested.\n      const availableForError = errorBoxStartHeight + (result.height - desiredElemSize.height);\n      // This is the key calculation: if space is available, use it; if not, give 64px to error\n      // (it'll scroll within that), but don't use more than desired.\n      const errorBoxEndHeight = Math.min(errorBoxDesiredHeight, Math.max(availableForError, 64));\n      errorBox.style.height = `${errorBoxEndHeight}px`;\n      result.height -= (errorBoxEndHeight - errorBoxStartHeight);\n    }\n    return result;\n  }\n\n  // TODO: update regexes to unicode?\n  private _onSetCursor(row?: DataRowModel, col?: ViewFieldRec) {\n    // Don't do anything when we are readonly.\n    if (this.options.readonly) { return; }\n    // If we don't have column information, we can't insert anything.\n    if (!col) { return; }\n\n    const colId = col.origCol.peek().colId.peek();\n\n    if (col.tableId.peek() !== this.options.column.table.peek().tableId.peek()) {\n      // Fall back to default behavior if cursor didn't move to a column in the same table.\n      this.options.gristDoc.onSetCursorPos(row, col).catch(reportError);\n      return;\n    }\n\n    const aceObj = this._aceEditor.getEditor();\n    if (!aceObj.selection.isEmpty()) {\n      // If text selected, replace whole selection\n      aceObj.session.replace(aceObj.selection.getRange(), '$' + colId);\n    } else {\n      // Not a selection, gotta figure out what to replace\n      const pos = aceObj.getCursorPosition();\n      const line = aceObj.session.getLine(pos.row);\n      const result = _isInIdentifier(line, pos.column); // returns {start, end, id} | null\n      if (!result) {\n        // Not touching an identifier, insert colId as normal\n        aceObj.insert('$' + colId);\n        // We are touching an identifier\n      } else if (result.ident.startsWith('$')) {\n        // If ident is a colId, replace it\n        const idRange = AceEditor.makeRange(pos.row, result.start, pos.row, result.end);\n        aceObj.session.replace(idRange, '$' + colId);\n      }\n      // Else touching a normal identifier, don't mangle it\n    }\n    // Resize editor in case it is needed.\n    this._aceEditor.resize();\n\n    // This focus method will try to focus a textarea immediately and again on setTimeout. But\n    // other things may happen by the setTimeout time, messing up focus. The reason the immediate\n    // call doesn't usually help is that this is called on 'mousedown' before its corresponding\n    // focus/blur occur. We can do a bit better by restoring focus immediately after blur occurs.\n    aceObj.focus();\n    const lis = dom.onElem(aceObj.textInput.getElement(), 'blur', e => { lis.dispose(); aceObj.focus(); });\n    // If no blur right away, clear the listener, to avoid unexpected interference.\n    setTimeout(() => lis.dispose(), 0);\n  }\n}\n\n// returns whether the column in that line is inside or adjacent to an identifier\n// if yes, returns {start, end, ident}, else null\nfunction _isInIdentifier(line: string, column: number) {\n    // If cursor is in or after an identifier, scoot back to the start of it\n    const prefix = line.slice(0, column);\n    let startOfIdent = prefix.search(/[$A-Za-z0-9_]+$/);\n    if (startOfIdent < 0) { startOfIdent = column; } // if no match, maybe we're right before it\n\n    // We're either before an ident or nowhere near one. Try to match to its end\n    const match = line.slice(startOfIdent).match(/^[$a-zA-Z0-9_]+/);\n    if (match) {\n        const ident = match[0];\n        return { ident, start: startOfIdent, end: startOfIdent + ident.length};\n    } else {\n        return null;\n    }\n}\n\n/**\n * Open a formula editor. Returns a Disposable that owns the editor.\n */\nexport function openFormulaEditor(options: {\n  gristDoc: GristDoc,\n  // Associated formula from a different column (for example style rule).\n  column?: ColumnRec,\n  // Associated formula from a view field. If provided together with column, this field is used\n  field?: ViewFieldRec,\n  editingFormula?: ko.Computed<boolean>,\n  // Needed to get exception value, if any.\n  editRow?: DataRowModel,\n  // Element over which to position the editor.\n  refElem: Element,\n  editValue?: string,\n  onSave?: (column: ColumnRec, formula: string) => Promise<void>,\n  onCancel?: () => void,\n  canDetach?: boolean,\n  // Called after editor is created to set up editor cleanup (e.g. saving on click-away).\n  setupCleanup: (\n    owner: Disposable,\n    doc: GristDoc,\n    editingFormula: ko.Computed<boolean>,\n    save: () => Promise<void>\n  ) => void,\n}): FormulaEditor {\n  const {gristDoc, editRow, refElem, setupCleanup} = options;\n  const attachedHolder = new MultiHolder();\n\n  if (options.field) {\n    options.column = options.field.origCol();\n  } else if (options.canDetach) {\n    throw new Error('Field is required for detached editor');\n  }\n\n  // We can't rely on the field passed in, we need to create our own.\n  const column = options.column ?? options.field?.column();\n\n  if (!column) {\n    throw new Error('Column or field is required');\n  }\n\n  // AsyncOnce ensures it's called once even if triggered multiple times.\n  const saveEdit = asyncOnce(async () => {\n    const detached = editor.isDetached.get();\n    if (detached) {\n      editor.dispose();\n      return;\n    }\n    const formula = String(editor.getCellValue());\n    if (formula !== column.formula.peek()) {\n      if (options.onSave) {\n        await options.onSave(column, formula);\n      } else {\n        await column.updateColValues({formula});\n      }\n      editor.dispose();\n    } else {\n      editor.dispose();\n      options.onCancel?.();\n    }\n  });\n\n  // These are the commands for while the editor is active.\n  const editCommands = {\n    fieldEditSave: () => { saveEdit().catch(reportError); },\n    fieldEditSaveHere: () => { saveEdit().catch(reportError); },\n    fieldEditCancel: () => { editor.dispose(); options.onCancel?.(); },\n  };\n\n  const formulaError = editRow ? getFormulaError(attachedHolder, {\n    gristDoc,\n    editRow,\n    column,\n    field: options.field,\n  }) : undefined;\n  const editor = FormulaEditor.create(null, {\n    gristDoc,\n    column,\n    field: options.field,\n    editingFormula: options.editingFormula,\n    rowId: editRow ? editRow.id() : 0,\n    cellValue: column.formula(),\n    formulaError,\n    editValue: options.editValue,\n    cursorPos: Number.POSITIVE_INFINITY,    // Position of the caret within the editor.\n    commands: editCommands,\n    cssClass: 'formula_editor_sidepane',\n    readonly : false,\n    canDetach: options.canDetach\n  } as IFormulaEditorOptions) as FormulaEditor;\n  editor.autoDispose(attachedHolder);\n  editor.attach(refElem);\n\n  const editingFormula = options.editingFormula ?? options?.field?.editingFormula;\n\n  if (!editingFormula) {\n    throw new Error(t('editingFormula is required'));\n  }\n\n  // When formula is empty enter formula-editing mode (highlight formula icons; click on a column inserts its ID).\n  // This function is used for primarily for switching between different column behaviors, so we want to enter full\n  // edit mode right away.\n  // TODO: consider converting it to parameter, when this will be used in different scenarios.\n  if (!column.formula()) {\n    editingFormula(true);\n  }\n  setupCleanup(editor, gristDoc, editingFormula, saveEdit);\n  return editor;\n}\n\n/**\n * If the cell at the given row and column is a formula value containing an exception, return an\n * observable with this exception, and fetch more details to add to the observable.\n */\nexport function getFormulaError(owner: Disposable, options: {\n  gristDoc: GristDoc,\n  editRow: DataRowModel,\n  column?: ColumnRec,\n  field?: ViewFieldRec,\n}): Observable<CellValue|undefined> {\n  const {gristDoc, editRow} = options;\n  const formulaError = Observable.create(owner, undefined as any);\n  // When we don't have a field information we don't need to be reactive at all.\n  if (!options.field) {\n    const column = options.column!;\n    const colId = column.colId.peek();\n    const onValueChange = errorMonitor(gristDoc, column, editRow, owner, formulaError);\n    const subscription = editRow.cells[colId].subscribe(onValueChange);\n    owner.autoDispose(subscription);\n    onValueChange(editRow.cells[colId].peek());\n    return formulaError;\n  } else {\n\n    // We can't rely on the editRow we got, as this is owned by the view. When we will be detached the view will be\n    // gone. So, we will create our own observable that will be updated when the row is updated.\n    const errorRow: DataRowModel = gristDoc.getTableModel(options.field.tableId.peek()).createFloatingRowModel() as any;\n    errorRow.assign(editRow.getRowId());\n    owner.autoDispose(errorRow);\n\n    // When we have a field information we will grab the error from the column that is currently connected to the field.\n    // This will change when user is using the preview feature in detached editor, where a new column is created, and\n    // field starts showing it instead of the original column.\n    Computed.create(owner, use => {\n      // This pattern creates a subscription using compute observable.\n\n      // Create an holder for everything that is created during recomputation. It will be returned as the value\n      // of the computed observable, and will be disposed when the value changes.\n      const holder = MultiHolder.create(use.owner);\n\n      // Now subscribe to the column in the field, this is the part that will be changed when user creates a preview.\n      const column = use(options.field!.column);\n      const colId = use(column.colId);\n      const onValueChange = errorMonitor(gristDoc, column, errorRow, holder, formulaError);\n      // Unsubscribe when computed is recomputed.\n      holder.autoDispose(errorRow.cells[colId].subscribe(onValueChange));\n      // Trigger the subscription to get the initial value.\n      onValueChange(errorRow.cells[colId].peek());\n\n      // Return the holder, it will be disposed when the value changes.\n      return holder;\n    });\n  }\n  return formulaError;\n}\n\nfunction errorMonitor(\n  gristDoc: GristDoc,\n  column: ColumnRec,\n  editRow: DataRowModel,\n  holder: Disposable,\n  formulaError: Observable<CellValue|undefined> ) {\n  return  function onValueChange(cellCurrentValue: CellValue) {\n    const isFormula = column.isFormula() || column.hasTriggerFormula();\n    if (isFormula && isRaisedException(cellCurrentValue)) {\n      if (!formulaError.get()) {\n        // Don't update it when there is already an error (to avoid flickering).\n        formulaError.set(cellCurrentValue);\n      }\n      gristDoc.docData.getFormulaError(column.table().tableId(), column.colId(), editRow.getRowId())\n        .then(value => {\n          if (holder.isDisposed()) { return; }\n          formulaError.set(value);\n        })\n        .catch((er) => {\n          if (!holder.isDisposed()) {\n            reportError(er);\n          }\n        });\n    } else {\n      formulaError.set(undefined);\n    }\n  };\n}\n\n/**\n * Create and return an observable for the count of errors in a column, which gets updated in\n * response to changes in origColumn and in user data.\n */\nexport function createFormulaErrorObs(owner: MultiHolder, gristDoc: GristDoc, origColumn: ColumnRec) {\n  const errorMessage = Observable.create(owner, '');\n\n  // Count errors in origColumn when it's a formula column. Counts get cached by the\n  // tableData.countErrors() method, and invalidated on relevant data changes.\n  function countErrors() {\n    if (owner.isDisposed()) { return; }\n    const tableData = gristDoc.docData.getTable(origColumn.table.peek().tableId.peek());\n    const isFormula = origColumn.isRealFormula.peek() || origColumn.hasTriggerFormula.peek();\n    if (tableData && isFormula) {\n      const colId = origColumn.colId.peek();\n      const numCells = tableData.getColValues(colId)?.length || 0;\n      const numErrors = tableData.countErrors(colId) || 0;\n      errorMessage.set(\n        (numErrors === 0) ? '' :\n        (numCells === 1) ? t(`Error in the cell`) :\n        (numErrors === numCells) ? t(`Errors in all {{numErrors}} cells`, {numErrors}) :\n        t(`Errors in {{numErrors}} of {{numCells}} cells`, {numErrors, numCells})\n      );\n    } else {\n      errorMessage.set('');\n    }\n  }\n\n  // Debounce the count calculation to defer it to the end of a bundle of actions.\n  const debouncedCountErrors = debounce(countErrors, 0);\n\n  // If there is an update to the data in the table, count errors again. Since the same UI is\n  // reused when different page widgets are selected, we need to re-create this subscription\n  // whenever the selected table changes. We use a Computed to both react to changes and dispose\n  // the previous subscription when it changes.\n  Computed.create(owner, (use) => {\n    const tableData = gristDoc.docData.getTable(use(use(origColumn.table).tableId));\n    return tableData ? use.owner.autoDispose(tableData.tableActionEmitter.addListener(debouncedCountErrors)) : null;\n  });\n\n  // The counts depend on the origColumn and its isRealFormula status, but with the debounced\n  // callback and subscription to data, subscribe to relevant changes manually (rather than using\n  // a Computed).\n  owner.autoDispose(subscribe(use => { use(origColumn.id); use(origColumn.isRealFormula); debouncedCountErrors(); }));\n  return errorMessage;\n}\n\nconst cssCollapseIcon = styled(icon, `\n  margin: -3px 4px 0 4px;\n  --icon-color: ${colors.slate};\n  cursor: pointer;\n  position: sticky;\n  top: 0px;\n  flex-shrink: 0;\n`);\n\nexport const cssError = styled('div', `\n  color: ${theme.errorText};\n`);\n\nconst cssFormulaEditor = styled('div.default_editor.formula_editor_wrapper', `\n  &-detached {\n    height: 100%;\n    position: relative;\n    box-shadow: none;\n  }\n  &-detached .formula_editor {\n    flex-grow: 1;\n    min-height: 100px;\n  }\n\n  &-detached .error_msg, &-detached .error_details {\n    max-height: 100px;\n    flex-shrink: 0;\n  }\n\n  &-detached .code_editor_container {\n    height: 100%;\n    width: 100%;\n  }\n\n  &-detached .ace_editor {\n    height: 100% !important;\n    width: 100% !important;\n  }\n`);\n\nconst cssFormulaPlaceholder = styled('div', `\n  color: ${theme.lightText};\n  font-style: italic;\n  white-space: nowrap;\n`);\n\nconst cssUseAssistantButton = styled(textButton, `\n  font-size: ${vars.smallFontSize};\n`);\n","import { fromKoSave } from 'app/client/lib/fromKoSave';\nimport { DataRowModel } from 'app/client/models/DataRowModel';\nimport { ViewFieldRec } from 'app/client/models/entities/ViewFieldRec';\nimport { cssRow } from 'app/client/ui/RightPanelStyles';\nimport { alignmentSelect, cssButtonSelect, makeButtonSelect } from 'app/client/ui2018/buttonSelect';\nimport { testId } from 'app/client/ui2018/cssVars';\nimport { makeLinks } from 'app/client/ui2018/links';\nimport { NewAbstractWidget, Options } from 'app/client/widgets/NewAbstractWidget';\nimport { Computed, dom, DomContents, fromKo, Observable } from 'grainjs';\nimport { makeT } from 'app/client/lib/localization';\n\nconst t = makeT('NTextBox');\n\n/**\n * TextBox - The most basic widget for displaying text information.\n */\nexport class NTextBox extends NewAbstractWidget {\n  protected alignment: Observable<string>;\n  protected wrapping: Observable<boolean>;\n\n  constructor(field: ViewFieldRec, options: Options = {}) {\n    super(field, options);\n\n    this.alignment = fromKo(this.options.prop('alignment'));\n    this.wrapping = fromKo(this.field.wrap);\n\n    this.autoDispose(this.wrapping.addListener(() => {\n      this.field.viewSection().events.trigger('rowHeightChange');\n    }));\n  }\n\n  public buildConfigDom(): DomContents {\n    const toggle = () => {\n      const newValue = !this.field.config.wrap.peek();\n      this.field.config.wrap.setAndSave(newValue).catch(reportError);\n    };\n    const options = this.field.config.options;\n    // Some options might be disabled, as more than one column is selected.\n    // Prop observable is owned by the options object.\n    const alignmentDisabled = Computed.create(this, use => use(options.disabled('alignment')));\n    const wrapDisabled = Computed.create(this, (use) => use(options.disabled('wrap')));\n    return [\n      cssRow(\n        alignmentSelect(\n          fromKoSave(this.field.config.alignment),\n          cssButtonSelect.cls('-disabled', alignmentDisabled),\n        ),\n        dom('div', {style: 'margin-left: 8px;'},\n          makeButtonSelect(\n            fromKo(this.field.config.wrap),\n            [{value: true, icon: 'Wrap'}],\n            toggle,\n            cssButtonSelect.cls('-disabled', wrapDisabled),\n            ),\n          testId('tb-wrap-text')\n        )\n      )\n    ];\n  }\n\n  public buildDom(row: DataRowModel) {\n    const value = row.cells[this.field.colId.peek()];\n    return dom('div.field_clip',\n      dom.style('text-align', this.alignment),\n      dom.cls('text_wrapping', this.wrapping),\n      dom.domComputed((use) => use(row._isAddRow) || this.isDisposed() ?\n        null :\n        makeLinks(use(this.valueFormatter).formatAny(use(value), t)))\n    );\n  }\n}\n","/**\n * NewAbstractWidget is equivalent to AbstractWidget for outside code, but is in typescript, and\n * so is friendlier and clearer to derive TypeScript classes from.\n */\nimport {DocComm} from 'app/client/components/DocComm';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {DocData} from 'app/client/models/DocData';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {SaveableObjObservable} from 'app/client/models/modelUtil';\nimport {CellStyle} from 'app/client/widgets/CellStyle';\nimport {BaseFormatter} from 'app/common/ValueFormatter';\nimport {\n  Disposable,\n  dom,\n  DomContents,\n  fromKo,\n  IDisposableOwnerT,\n  Observable,\n} from 'grainjs';\n\nexport interface Options {\n  // A hex value to set the default widget text color. Default to '#000000' if omitted.\n  defaultTextColor?: string;\n}\n\n/**\n * NewAbstractWidget - The base of the inheritance tree for widgets.\n * @param {Function} field - The RowModel for this view field.\n */\nexport abstract class NewAbstractWidget extends Disposable {\n  /**\n   * Override the create() method to match the parameters of create() expected by FieldBuilder.\n   */\n  // We copy Disposable.create() signature (the second one) to pacify typescript, but code must\n  // use the first signature, which is compatible with old-style constructors.\n  public static create<T extends new (...args: any[]) => any>(field: ViewFieldRec): InstanceType<T>;\n  public static create<T extends new (...args: any[]) => any>(\n    this: T, owner: IDisposableOwnerT<InstanceType<T>>|null, ...args: ConstructorParameters<T>): InstanceType<T>;\n  public static create(...args: any[]) {\n    return Disposable.create.call(this as any, null, ...args);\n  }\n\n  protected options: SaveableObjObservable<any>;\n  protected valueFormatter: Observable<BaseFormatter>;\n  protected textColor: Observable<string>;\n  protected fillColor: Observable<string>;\n  protected readonly defaultTextColor: string;\n\n  constructor(protected field: ViewFieldRec, opts: Options = {}) {\n    super();\n    this.options = field.widgetOptionsJson;\n    this.valueFormatter = fromKo(field.formatter);\n    this.defaultTextColor = opts?.defaultTextColor || '#000000';\n  }\n\n  /**\n   * Builds the DOM showing configuration buttons and fields in the sidebar.\n   */\n  public buildConfigDom(): DomContents {\n    return null;\n  }\n\n  /**\n   * Builds the transform prompt config DOM in the few cases where it is necessary.\n   * Child classes need not override this function if they do not require transform config options.\n   */\n  public buildTransformConfigDom(): DomContents {\n    return null;\n  }\n\n  public buildColorConfigDom(gristDoc: GristDoc): DomContents {\n    return dom.create(CellStyle, this.field, gristDoc, this.defaultTextColor);\n  }\n\n  /**\n   * Builds the data cell DOM.\n   * @param {DataRowModel} row - The rowModel object.\n   */\n  public abstract buildDom(row: any): Element;\n\n  /**\n   * Returns the DocData object to which this field belongs.\n   */\n  protected _getDocData(): DocData {\n    // TODO: There should be a better way to access docData and docComm, or better yet GristDoc.\n    return this.field._table.tableData.docData;\n  }\n\n  /**\n   * Returns the docComm object for communicating with the server.\n   */\n  protected _getDocComm(): DocComm {\n    return this._getDocData().docComm;\n  }\n}\n","/**\n * NewBaseEditor is equivalent to BaseEditor for outside code, but is in typescript, and\n * so is friendlier and clearer to derive TypeScript classes from.\n */\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {ViewFieldRec} from 'app/client/models/entities/ViewFieldRec';\nimport {CellValue} from \"app/common/DocActions\";\nimport {Disposable, IDisposableOwner, Observable} from 'grainjs';\n\nexport interface IEditorCommandGroup {\n  fieldEditCancel: () => void;\n  fieldEditSaveHere: () => void;\n  [cmd: string]: () => void;\n}\n\nexport interface Options {\n  gristDoc: GristDoc;\n  cellValue: CellValue;\n  rowId: number;\n  formulaError: Observable<CellValue|undefined>;\n  editValue?: string;\n  cursorPos: number;\n  commands: IEditorCommandGroup;\n  state?: any;\n  readonly: boolean;\n}\n\nexport interface FieldOptions extends Options {\n  field: ViewFieldRec;\n}\n\n/**\n * Required parameters:\n * @param {RowModel} options.field: ViewSectionField (i.e. column) being edited.\n * @param {String} options.cellValue: The value in the underlying cell being edited.\n * @param {String} options.editValue: String to be edited, or undefined to use cellValue.\n * @param {Number} options.cursorPos: The initial position where to place the cursor.\n * @param {Object} options.commands: Object mapping command names to functions, to enable as part\n *  of the command group that should be activated while the editor exists.\n */\nexport abstract class NewBaseEditor extends Disposable {\n  /**\n   * Override the create() method to allow the parameters of create() expected by old-style\n   * Editors and provided by FieldBuilder. TODO: remove this method once all editors have been\n   * updated to new-style Disposables.\n   */\n  public static create<Opt extends Options>(owner: IDisposableOwner|null, options: Opt): NewBaseEditor;\n  public static create<Opt extends Options>(options: Opt): NewBaseEditor;\n  public static create(ownerOrOptions: any, options?: any): NewBaseEditor {\n    return options ?\n      Disposable.create.call(this as any, ownerOrOptions, options) :\n      Disposable.create.call(this as any, null, ownerOrOptions);\n  }\n\n  /**\n   * Check if the typed-in value should change the cell without opening the editor, and if so,\n   * returns the value to save. E.g. on typing \" \", CheckBoxEditor toggles value without opening.\n   */\n  public static skipEditor(typedVal: string|undefined, origVal: CellValue): CellValue|undefined {\n    return undefined;\n  }\n\n  /**\n   * Check if editor supports readonly mode (default: true)\n   */\n  public static supportsReadonly(): boolean {\n    return true;\n  }\n\n  /**\n   * Current state of the editor. Optional, not all editors will report theirs current state.\n   */\n  public editorState?: Observable<any>;\n\n  constructor(protected options: Options) {\n    super();\n  }\n\n  /**\n   * Called after the editor is instantiated to attach its DOM to the page.\n   * - cellElem: The element representing the cell that this editor should match\n   *   in size and position. Used by derived classes, e.g. to construct an EditorPlacement object.\n   */\n  public abstract attach(cellElem: Element): void;\n\n  /**\n   * Called to detach the editor and show it in the floating popup.\n   */\n  public detach(): HTMLElement|null { return null; }\n\n  /**\n   * Returns DOM container with the editor, typically present and attached after attach() has been\n   * called.\n   */\n  public getDom(): HTMLElement|null { return null; }\n\n  /**\n   * Called to get the value to save back to the cell.\n   */\n  public abstract getCellValue(): CellValue;\n\n  /**\n   * Used if an editor needs perform any actions before a save\n   */\n  public prepForSave(): void | Promise<void> {\n    // No-op by default.\n  }\n\n  /**\n   * Called to get the text in the editor, used when switching between editing data and formula.\n   */\n  public abstract getTextValue(): string;\n\n  /**\n   * Called to get the position of the cursor in the editor. Used when switching between editing\n   * data and formula.\n   */\n  public abstract getCursorPos(): number;\n}\n","import {MomentTimezone} from 'app/client/lib/imports';\nimport {ACIndexImpl} from 'app/client/lib/ACIndex';\nimport {ACSelectItem, buildACSelect} from 'app/client/lib/ACSelect';\nimport {testId} from \"app/client/ui2018/cssVars\";\nimport {nativeCompare} from 'app/common/gutil';\nimport {IDisposableOwner, Observable} from 'grainjs';\n\n/**\n * Returns the ordered list of offsets for names at time timestamp. See timezoneOptions for details\n * on the sorting order.\n */\n// exported for testing\nexport function timezoneOptionsImpl(\n  timestamp: number, names: string[], moment: MomentTimezone\n): ACSelectItem[] {\n  // What we want is moment(timestamp) but the dynamic import with our compiling settings produces\n  // \"moment is not a function\". The following is equivalent, and easier than fixing import setup.\n  const m = moment.unix(timestamp / 1000);\n\n  const options = names.map((value) => ({\n    cleanText: value.toLowerCase().trim(),\n    value,\n    label: `(GMT${m.tz(value).format('Z')}) ${value}`,\n    // A quick test reveal that it is a bit more efficient (~0.02ms) to get the offset using\n    // `moment.tz.Zone#parse` than creating a Moment instance for each zone and then getting the\n    // offset with `moment#utcOffset`.\n    offset: -moment.tz.zone(value)!.parse(timestamp)\n  }));\n  options.sort((a, b) => nativeCompare(a.offset, b.offset) || nativeCompare(a.value, b.value));\n  return options;\n}\n\n/**\n * Returns the array of IOptionFull<string> expected by `select` to create the list of timezones\n * options. The returned list is sorted based on the current offset (GMT-11:00 before GMT-10:00),\n * and then on alphabetical order of the name.\n */\nfunction timezoneOptions(moment: MomentTimezone): ACSelectItem[] {\n  return timezoneOptionsImpl(Date.now(), moment.tz.names(), moment);\n}\n\n/**\n * Creates a textbox with an autocomplete dropdown to select a time zone.\n * Usage: dom.create(buildTZAutocomplete, momentModule, valueObs, saveCallback)\n */\nexport function buildTZAutocomplete(\n  owner: IDisposableOwner,\n  moment: MomentTimezone,\n  valueObs: Observable<string>,\n  save: (value: string) => Promise<void>|void,\n  options?: { disabled?: Observable<boolean> }\n) {\n  // Set a large maxResults, since it's sometimes nice to see all supported timezones (there are\n  // fewer than 1000 in practice).\n  const acIndex = new ACIndexImpl<ACSelectItem>(timezoneOptions(moment), 1000, true);\n\n  // Only save valid time zones. If there is no selected item, we'll auto-select and save only\n  // when there is a good match.\n  const saveTZ = (value: string, item: ACSelectItem|undefined) => {\n    if (!item) {\n      const results = acIndex.search(value);\n      if (results.selectIndex >= 0 && results.items.length > 0) {\n        item = results.items[results.selectIndex];\n        value = item.value;\n      }\n    }\n    if (!item) { throw new Error(\"Invalid time zone\"); }\n    if (value !== valueObs.get()) {\n      return save(value);\n    }\n  };\n  return buildACSelect(owner,\n    {...options, acIndex, valueObs, save: saveTZ},\n    testId(\"tz-autocomplete\")\n  );\n}\n","import _ from 'underscore';\n\n/**\n * Given a widget name and a type, return the name of the widget that would\n * actually be used for that type (hopefully the same, unless falling back\n * on a default if widget name is unlisted), and all default configuration\n * information for that widget/type combination.\n * Returns something of form:\n * {\n *   name:\"WidgetName\",\n *   config: {\n *     cons: \"NameOfWidgetClass\",\n *     editCons: \"NameOfEditorClass\",\n *     options: { ... default options for widget ... }\n *   }\n * }\n */\nexport function getWidgetConfiguration(widgetName: string, type: string) {\n  const oneTypeDef = typeDefs[type] || typeDefs.Text;\n  if (!(widgetName in oneTypeDef.widgets)) {\n    widgetName = oneTypeDef.default;\n  }\n  return {\n    name: widgetName,\n    config: oneTypeDef.widgets[widgetName]\n  };\n}\n\nexport function mergeOptions(options: any, type: string) {\n  const {name, config} = getWidgetConfiguration(options.widget, type);\n  return _.defaults({widget: name}, options, config.options);\n}\n\n// Contains the list of types with their storage types, possible widgets, default widgets,\n// and defaults for all widget settings\n// The names of widgets are used, instead of the actual classes needed, in order to limit\n// the spread of dependencies.  See ./UserTypeImpl for actual classes.\nexport const typeDefs: any = {\n  // TODO : translate labels (can not use classic makeT function)\n  Any: {\n    label: 'Any',\n    icon: 'FieldAny',\n    widgets: {\n      TextBox: {\n        cons: 'TextBox',\n        editCons: 'TextEditor',\n        icon: 'FieldTextbox',\n        options: {\n          alignment: 'left',\n          wrap: undefined,\n        }\n      }\n    },\n    default: 'TextBox'\n  },\n  Text: {\n    label: 'Text',\n    icon: 'FieldText',\n    widgets: {\n      TextBox: {\n        cons: 'TextBox',\n        editCons: 'TextEditor',\n        icon: 'FieldTextbox',\n        options: {\n          alignment: 'left',\n          wrap: undefined,\n        }\n      },\n      HyperLink: {\n        cons: 'HyperLinkTextBox',\n        editCons: 'HyperLinkEditor',\n        icon: 'FieldLink',\n        options: {\n          alignment: 'left',\n          wrap: undefined,\n        }\n      }\n    },\n    default: 'TextBox'\n  },\n  Numeric: {\n    label: 'Numeric',\n    icon: 'FieldNumeric',\n    widgets: {\n      TextBox: {\n        cons: 'NumericTextBox',\n        editCons: 'TextEditor',\n        icon: 'FieldTextbox',\n        options: {\n          alignment: 'right',\n          wrap: undefined,\n          decimals: undefined,\n          maxDecimals: undefined,\n          numMode: undefined,\n          numSign: undefined,\n          currency: undefined,\n        }\n      },\n      Spinner: {\n        cons: 'Spinner',\n        editCons: 'TextEditor',\n        icon: 'FieldSpinner',\n        options: {\n          alignment: 'right',\n          wrap: undefined,\n          decimals: undefined,\n          maxDecimals: undefined,\n          numMode: undefined,\n          numSign: undefined,\n          currency: undefined,\n        }\n      }\n    },\n    default: 'TextBox'\n  },\n  Int: {\n    label: 'Integer',\n    icon: 'FieldInteger',\n    widgets: {\n      TextBox: {\n        cons: 'NumericTextBox',\n        editCons: 'TextEditor',\n        icon: 'FieldTextbox',\n        options: {\n          decimals: 0,\n          alignment: 'right',\n          wrap: undefined,\n          maxDecimals: undefined,\n          numMode: undefined,\n          numSign: undefined,\n          currency: undefined,\n        }\n      },\n      Spinner: {\n        cons: 'Spinner',\n        editCons: 'TextEditor',\n        icon: 'FieldSpinner',\n        options: {\n          decimals: 0,\n          alignment: 'right',\n          wrap: undefined,\n          maxDecimals: undefined,\n          numMode: undefined,\n          numSign: undefined,\n          currency: undefined,\n        }\n      }\n    },\n    default: 'TextBox'\n  },\n  Bool: {\n    label: 'Toggle',\n    icon: 'FieldToggle',\n    widgets: {\n      TextBox: {\n        cons: 'TextBox',\n        editCons: 'TextEditor',\n        icon: 'FieldTextbox',\n        options: {\n          alignment: 'center',\n          wrap: undefined,\n        }\n      },\n      CheckBox: {\n        cons: 'CheckBox',\n        editCons: 'CheckBoxEditor',\n        icon: 'FieldCheckbox',\n        options: {}\n      },\n      Switch: {\n        cons: 'Switch',\n        editCons: 'CheckBoxEditor',\n        icon: 'FieldSwitcher',\n        options: {}\n      }\n    },\n    default: 'CheckBox'\n  },\n  Date: {\n    label: 'Date',\n    icon: 'FieldDate',\n    widgets: {\n      TextBox: {\n        cons: 'DateTextBox',\n        editCons: 'DateEditor',\n        icon: 'FieldTextbox',\n        options: {\n          dateFormat: 'YYYY-MM-DD',\n          isCustomDateFormat: false,\n          alignment: 'left'\n        }\n      }\n    },\n    default: 'TextBox'\n  },\n  DateTime: {\n    label: 'DateTime',\n    icon: 'FieldDateTime',\n    widgets: {\n      TextBox: {\n        cons: 'DateTimeTextBox',\n        editCons: 'DateTimeEditor',\n        icon: 'FieldTextbox',\n        options: {\n          dateFormat: 'YYYY-MM-DD',   // Default to ISO standard: https://xkcd.com/1179/\n          timeFormat: 'h:mma',\n          isCustomDateFormat: false,\n          isCustomTimeFormat: false,\n          alignment: 'left'\n        }\n      }\n    },\n    default: 'TextBox'\n  },\n  Choice: {\n    label: 'Choice',\n    icon: 'FieldChoice',\n    widgets: {\n      TextBox: {\n        cons: 'ChoiceTextBox',\n        editCons: 'ChoiceEditor',\n        icon: 'FieldTextbox',\n        options: {\n          alignment: 'left',\n          wrap: undefined,\n          choices: undefined,\n          choiceOptions: undefined\n        }\n      }\n    },\n    default: 'TextBox'\n  },\n  ChoiceList: {\n    label: 'Choice List',\n    icon: 'FieldChoice',\n    widgets: {\n      TextBox: {\n        cons: 'ChoiceListCell',\n        editCons: 'ChoiceListEditor',\n        icon: 'FieldTextbox',\n        options: {\n          alignment: 'left',\n          wrap: undefined,\n          choices: undefined,\n          choiceOptions: undefined\n        }\n      }\n    },\n    default: 'TextBox'\n  },\n  Ref: {\n    label: 'Reference',\n    icon: 'FieldReference',\n    widgets: {\n      Reference: {\n        cons: 'Reference',\n        editCons: 'ReferenceEditor',\n        icon: 'FieldReference',\n        options: {\n          alignment: 'left',\n          wrap: undefined,\n        }\n      }\n    },\n    default: 'Reference'\n  },\n  RefList: {\n    label: 'Reference List',\n    icon: 'FieldReference',\n    widgets: {\n      Reference: {\n        cons: 'ReferenceList',\n        editCons: 'ReferenceListEditor',\n        icon: 'FieldReference',\n        options: {\n          alignment: 'left',\n          wrap: undefined\n        }\n      }\n    },\n    default: 'Reference'\n  },\n  Attachments: {\n    label: 'Attachment',\n    icon: 'FieldAttachment',\n    widgets: {\n      Attachments: {\n        cons: 'AttachmentsWidget',\n        editCons: 'AttachmentsEditor',\n        icon: 'FieldAttachment',\n        options: {\n          height: '36'\n        }\n      }\n    },\n    default: 'Attachments'\n  }\n};\n","import { Rpc } from \"grain-rpc\";\n\n/**\n * ActionRouter allows to choose what actions to send over rpc. Action are posted as message `{type:\n * \"docAction\", action }` over rpc.\n */\nexport class ActionRouter {\n\n  private _subscribedTables: Set<string> = new Set();\n\n  constructor(private _rpc: Rpc) {}\n\n  /**\n   * Subscribe to send all actions related to a table. Keeps sending actions if table is renamed.\n   */\n  public subscribeTable(tableId: string): Promise<void> {\n    this._subscribedTables.add(tableId);\n    return Promise.resolve();\n  }\n\n  /**\n   * Stop sending all message related to a table.\n   */\n  public unsubscribeTable(tableId: string): Promise<void> {\n    this._subscribedTables.delete(tableId);\n    return Promise.resolve();\n  }\n\n  /**\n   * Process a action updates subscription set in case of table rename and table remove, and post\n   * action if it matches a subscriptions.\n   */\n  public process(action: any[]): Promise<void> {\n    const tableId = action[1];\n    if (!this._subscribedTables.has(tableId)) {\n      return Promise.resolve();\n    }\n    switch (action[0]) {\n      case \"RemoveTable\":\n        this._subscribedTables.delete(tableId);\n        break;\n      case \"RenameTable\":\n        this._subscribedTables.delete(tableId);\n        this._subscribedTables.add(action[2]);\n        break;\n    }\n    return this._rpc.postMessage({type: \"docAction\", action});\n  }\n}\n","import {CellDelta, TabularDiff, TabularDiffs} from 'app/common/TabularDiff';\nimport toPairs = require('lodash/toPairs');\n\n/**\n * An ActionSummary represents the overall effect of changes that took place\n * during a period of history.\n *   - Only net changes are represented.  Intermediate changes within the period are\n *     not represented.  Changes that are done and undone within the period are not\n *     represented.\n *   - Net addition, removal, and renaming of tables is represented.  The names\n *     of tables, for ActionSummary purposes are their tableIds, the database-safe\n *     version of their names.\n *   - Net addition, removal, and renaming of columns is represented.  As for tables,\n *     the names of columns for ActionSummary purposes are their colIds.\n *   - Net additions and removals of rows are partially represented.  The rowIds of added\n *     and removed rows are represented fully.  The *values* of cells in the rows that\n *     were added or removed are stored in some cases.  There is a threshold on the\n *     number of rows whose values will be cached for each DocAction scanned.\n *   - Net updates of rows are partially represented.  The rowIds of updated rows are\n *     represented fully, but the *values* of updated cells partially, as for additions/\n *     removals.\n *   - Cell value changes affecting _grist_* tables are always represented in full,\n *     even if they are bulk changes.\n *\n * The representation of table name changes and column name changes is the same,\n * simply a list of name pairs [before, after].  We represent the addition of a\n * a table (or column) as the special name pair [null, initialName], and the\n * removal of a table (or column) as the special name pair [finalName, null].\n *\n * An ActionSummary contains two fields:\n *   - tableRenames: a list of table name changes (including addition/removal).\n *   - tableDeltas: a dictionary of changes within a table.\n *\n * The key of the tableDeltas dictionary is the name of a table at the end of the\n * period of history covered by the ActionSummary.\n *   - For example, if we add a table called N, we use the key N for it.\n *   - If we rename a table from N1 to N2, we use the key N2 for it.\n *   - If we add a table called N1, then rename it to N2, we use the key N2 for it.\n * If the table was removed during that period, we use its name at the beginning\n * of the period, preceded by \"-\".\n *   - If we remove a table called N, we use the key -N for it.\n *   - If we add a table called N, then remove it, there is no net change to represent.\n *   - If we remove a table called N, then add a new table called N, we use the key -N\n *     for the first, and the key N for the second.\n *\n * The changes within a table are represented as a TableDelta, which has the following\n * fields:\n *   - columnRenames: a list of column name changes (including addition/removal).\n *   - columnDeltas: a dictionary of changes within a column.\n *   - updateRows, removeRows, addRows: lists of affected rows.\n *\n * The columnRenames/columnDeltas pair work just like tableRenames/tableDeltas, just\n * on the scope of columns within a table rather than tables within a document.\n *\n * The changes within a column are represented as a ColumnDelta, which is a dictionary\n * keyed by rowIds.  It contains CellDelta values.  CellDelta values represent before\n * and after values of a particular cell.\n *   - a CellDelta of [null, [value]] represents a cell that was non-existent coming into\n *     existence with the given value.\n *   - a CellDelta of [[value], null] represents an existing cell with the given value that\n *     is removed.\n *   - a CellDelta of [[value1], [value2]] represents a change in value of a cell between\n *     two known values.\n *   - a CellDelta of ['?', [value2]] represents a change in value of a cell from an\n *     unknown value to a known value.  Unknown values happen when we know a cell was\n *     implicated in a bulk change but its value didn't happen to be stored.\n *   - a CellDelta of [[value1], '?'] represents a change in value of a cell from an\n *     known value to an unknown value.\n * The CellDelta itself does not tell you whether the rowId has the same identity before\n * and after -- for example it may have been removed and then added.  That information\n * is available by consulting the removeRows and addRows fields.\n *\n */\n\n/**\n * A collection of changes related to a set of tables.\n */\nexport interface ActionSummary {\n  tableRenames: LabelDelta[];  /** a list of table renames/additions/removals */\n  tableDeltas: {[tableId: string]: TableDelta};  /** changes within an individual table */\n}\n\n/**\n * A collection of changes related to rows and columns of a single table.\n */\nexport interface TableDelta {\n  updateRows: number[];  /** rowIds of rows that exist before+after and were changed during */\n  removeRows: number[];  /** rowIds of rows that existed before but were removed during */\n  addRows: number[];     /** rowIds of rows that were added during, and exist after */\n  /** Partial record of cell-level changes - large bulk changes not included. */\n  columnDeltas: {[colId: string]: ColumnDelta};\n  columnRenames: LabelDelta[];  /** a list of column renames/additions/removals */\n}\n\n/**\n * Pairs of before/after names of tables and columns.  Null represents non-existence,\n * so the addition and removal of tables/columns can be represented.\n */\nexport type LabelDelta = [string|null, string|null];\n\n/**\n * A collection of changes related to cells in a specific column.\n */\nexport interface ColumnDelta {\n  [rowId: number]: CellDelta;\n}\n\n\n/** Create an ActionSummary for a period with no action */\nexport function createEmptyActionSummary(): ActionSummary {\n  return { tableRenames: [], tableDeltas: {} };\n}\n\n/** Create a TableDelta for a period with no action */\nexport function createEmptyTableDelta(): TableDelta {\n  return {\n    updateRows: [],\n    removeRows: [],\n    addRows: [],\n    columnDeltas: {},\n    columnRenames: []\n  };\n}\n\n\n/**\n * Distill a summary further, into tabular form, for ease of rendering.\n */\nexport function asTabularDiffs(summary: ActionSummary): TabularDiffs {\n  const allChanges: TabularDiffs = {};\n  for (const [tableId, td] of toPairs(summary.tableDeltas)) {\n    const tableChanges: TabularDiff = allChanges[tableId] = {\n      header: [],\n      cells: [],\n    };\n    // swap order to row-dominant for visualization purposes\n    const perRow: {[row: number]: {[name: string]: any}} = {};\n    const activeCols = new Set<string>();\n    // iterate through the column-dominant representation grist prefers internally\n    for (const [col, perCol] of toPairs(td.columnDeltas)) {\n      activeCols.add(col);\n      // iterate through the rows for that column, writing out the row-dominant\n      // results we want for visualization.\n      for (const row of Object.keys(perCol)) {\n        if (!perRow[row as any]) { perRow[row as any] = {}; }\n        perRow[row as any][col] = perCol[row as any];\n      }\n    }\n    // TODO: recover order of columns; recover row numbers (as opposed to rowIds)\n    const activeColsWithoutManualSort = [...activeCols].filter(c => c !== 'manualSort');\n    tableChanges.header = activeColsWithoutManualSort;\n    const addedRows = new Set(td.addRows);\n    const removedRows = new Set(td.removeRows);\n    const updatedRows = new Set(td.updateRows);\n    const rowIds = Object.keys(perRow).map(row => parseInt(row, 10));\n    const presentRows = new Set(rowIds);\n    const droppedRows = [...addedRows, ...removedRows, ...updatedRows]\n      .filter(x => !presentRows.has(x))\n      .sort((a, b) => a - b);\n\n    // Now that we have pulled together rows of changes, we will add a summary cell\n    // to each row to show whether they were caused by row updates, additions or removals.\n    // We also at this point make sure the cells of the row are output in a consistent\n    // order with a header.\n    for (const rowId of rowIds) {\n      if (droppedRows.length > 0) {\n        // Bulk additions/removals/updates may result in just some rows being saved.\n        // We signal this visually with a \"...\" row.  The order of where this should\n        // go isn't well defined at this point (there's a row number TODO above).\n        if (rowId > droppedRows[0]) {\n          tableChanges.cells.push(['...', droppedRows[0],\n                                   activeColsWithoutManualSort.map(x => [null, null] as [null, null])]);\n          while (rowId > droppedRows[0]) {\n            droppedRows.shift();\n          }\n        }\n      }\n      // For each rowId, we need to issue either 1 or 2 rows.  We issue 2 rows\n      // if the rowId is both added and removed - in this scenario, the rows\n      // before and after are unrelated.  In all other cases, the before and\n      // after values refer to the same row.\n      const versions: Array<[string, (diff: CellDelta) => CellDelta]> = [];\n      if (addedRows.has(rowId) && removedRows.has(rowId)) {\n        versions.push(['-', (diff) => [diff[0], null]]);\n        versions.push(['+', (diff) => [null, diff[1]]]);\n      } else {\n        let code: string = '...';\n        if (updatedRows.has(rowId)) { code = '→'; }\n        if (addedRows.has(rowId))   { code = '+';  }\n        if (removedRows.has(rowId)) { code = '-';  }\n        versions.push([code, (diff) => diff]);\n      }\n      for (const [code, transform] of versions) {\n        const acc: CellDelta[] = [];\n        const perCol = perRow[rowId];\n        activeColsWithoutManualSort.forEach(col => {\n          const diff = perCol ? perCol[col] : null;\n          if (!diff) {\n            acc.push([null, null]);\n          } else {\n            acc.push(transform(diff));\n          }\n        });\n        tableChanges.cells.push([code, rowId, acc]);\n      }\n    }\n  }\n  return allChanges;\n}\n\n/**\n * Return a suitable key for a removed table/column.  We cannot use their id directly\n * since it could clash with an added table/column of the same name.\n */\nexport function defunctTableName(id: string): string {\n  return `-${id}`;\n}\n\nexport function rootTableName(id: string): string {\n  return id.replace('-', '');\n}\n\n/**\n * Returns a list of all tables changed by the summarized action.  Changes include\n * schema or data changes.  Tables are identified by their post-action name.\n * Deleted tables are identified by their pre-action name, with \"-\" prepended.\n */\nexport function getAffectedTables(summary: ActionSummary): string[] {\n  return [\n    // Tables added, renamed, or removed in this action.\n    ...summary.tableRenames.map(pair => pair[1] || defunctTableName(pair[0] || \"\")),\n    // Tables modified in this action.\n    ...Object.keys(summary.tableDeltas)\n  ];\n}\n\n/**\n * Given a tableId from after the specified renames, figure out what the tableId was before\n * the renames.  Returns null if table didn't exist.\n */\nexport function getTableIdBefore(renames: LabelDelta[], tableIdAfter: string|null): string|null {\n  if (tableIdAfter === null) { return tableIdAfter; }\n  const rename = renames.find(_rename => _rename[1] === tableIdAfter);\n  return rename ? rename[0] : tableIdAfter;\n}\n\n/**\n * Given a tableId from before the specified renames, figure out what the tableId is after\n * the renames.  Returns null if there is no valid tableId to return.\n */\nexport function getTableIdAfter(renames: LabelDelta[], tableIdBefore: string|null): string|null {\n  if (tableIdBefore === null) { return tableIdBefore; }\n  const rename = renames.find(_rename => _rename[0] === tableIdBefore);\n  const tableIdAfter = rename ? rename[1] : tableIdBefore;\n  if (tableIdAfter?.startsWith('-')) { return null; }\n  return tableIdAfter;\n}\n","/**\n * Implements a pattern for creating objects requiring asynchronous construction. The given\n * asynchronous createFunc() is called on the .get() call, and the result is cached on success.\n * On failure, the result is cleared, so that subsequent calls attempt the creation again.\n *\n * Usage:\n *  this._obj = new AsyncCreate<MyObject>(asyncCreateFunc);\n *  obj = await this._obj.get();    // calls asyncCreateFunc\n *  obj = await this._obj.get();    // uses cached object if asyncCreateFunc succeeded, else calls it again.\n *\n * Note that multiple calls while createFunc() is running will return the same promise, and will\n * succeed or fail together.\n */\nexport class AsyncCreate<T> {\n  private _value?: Promise<T> = undefined;\n\n  constructor(private _createFunc: () => Promise<T>) {}\n\n  /**\n   * Returns createFunc() result, returning the cached promise if createFunc() succeeded, or if\n   * another call to it is currently pending.\n   */\n  public get(): Promise<T> {\n    return this._value || (this._value = this._clearOnError(this._createFunc.call(null)));\n  }\n\n  /** Clears the cached promise, forcing createFunc to be called again on next get(). */\n  public clear(): void {\n    this._value = undefined;\n  }\n\n  /** Returns a boolean indicating whether the object is created. */\n  public isSet(): boolean {\n    return Boolean(this._value);\n  }\n\n  /** Returns the value if it's set and successful, or undefined otherwise. */\n  public async getIfValid(): Promise<T|undefined> {\n    return this._value ? this._value.catch(() => undefined) : undefined;\n  }\n\n  // Helper which clears this AsyncCreate if the given promise is rejected.\n  private _clearOnError(p: Promise<T>): Promise<T> {\n    p.catch(() => this.clear());\n    return p;\n  }\n}\n\n\n/**\n * A simpler version of AsyncCreate: given an async function f, returns another function that will\n * call f once, and cache and return its value. On failure the result is cleared, so that\n * subsequent calls will attempt calling f again.\n */\nexport function asyncOnce<T>(createFunc: () => Promise<T>): () => Promise<T> {\n  let value: Promise<T>|undefined;\n  function clearOnError(p: Promise<T>): Promise<T> {\n    p.catch(() => { value = undefined; });\n    return p;\n  }\n  return () => (value || (value = clearOnError(createFunc.call(null))));\n}\n\n\n/**\n * Supports a usage similar to AsyncCreate in a Map. Returns map.get(key) if it is set to a\n * resolved or pending promise. Otherwise, calls creator(key) to create and return a new promise,\n * and sets the key to it. If the new promise is rejected, the key will be removed from the map,\n * so that subsequent calls would call creator() again.\n *\n * As with AsyncCreate, while the promise for a key is pending, multiple calls to that key will\n * return the same promise, and will succeed or fail together.\n */\nexport function mapGetOrSet<K, V>(map: Map<K, Promise<V>>, key: K, creator: (key: K) => Promise<V>): Promise<V> {\n  return map.get(key) || mapSetOrClear(map, key, creator(key));\n}\n\n/**\n * Supports a usage similar to AsyncCreate in a Map. Sets the given key in a map to the given\n * promise, and removes it later if the promise is rejected. Returns the same promise.\n */\nexport function mapSetOrClear<K, V>(map: Map<K, Promise<V>>, key: K, pvalue: Promise<V>): Promise<V> {\n  pvalue.catch(() => map.delete(key));\n  map.set(key, pvalue);\n  return pvalue;\n}\n\n/**\n * A Map implementation that allows for expiration of old values.\n */\nexport class MapWithTTL<K, V> extends Map<K, V> {\n  private _timeouts = new Map<K, NodeJS.Timer>();\n\n  /**\n   * Create a map with keys that will be automatically deleted _ttlMs\n   * milliseconds after they have been last set.  Precision of timing\n   * may vary.\n   */\n  constructor(private _ttlMs: number) {\n    super();\n  }\n\n  /**\n   * Set a key, with expiration.\n   */\n  public set(key: K, value: V): this {\n    return this.setWithCustomTTL(key, value, this._ttlMs);\n  }\n\n  /**\n   * Set a key, with custom expiration.\n   */\n  public setWithCustomTTL(key: K, value: V, ttlMs: number): this {\n    const curr = this._timeouts.get(key);\n    if (curr) { clearTimeout(curr); }\n    super.set(key, value);\n    this._timeouts.set(key, setTimeout(this.delete.bind(this, key), ttlMs));\n    return this;\n  }\n\n  /**\n   * Remove a key.\n   */\n  public delete(key: K): boolean {\n    const result = super.delete(key);\n    const timeout = this._timeouts.get(key);\n    if (timeout) {\n      clearTimeout(timeout);\n      this._timeouts.delete(key);\n    }\n    return result;\n  }\n\n  /**\n   * Forcibly expire everything.\n   */\n  public clear(): void {\n    for (const timeout of this._timeouts.values()) {\n      clearTimeout(timeout);\n    }\n    this._timeouts.clear();\n    super.clear();\n  }\n}\n\n/**\n * Sometimes it is desirable to cache either fulfilled or rejected\n * outcomes.  This method wraps a promise so that it never throws.\n * The result has an unfreeze method which, when called, is either\n * fulfilled or rejected.\n */\nexport async function freezeError<T>(promise: Promise<T>): Promise<ErrorOrValue<T>> {\n  try {\n    const value = await promise;\n    return { unfreeze: async () => value };\n  } catch (error) {\n    return { unfreeze: async () => { throw error; } };\n  }\n}\n\nexport interface ErrorOrValue<T> {\n  unfreeze(): Promise<T>;\n}\n","import {CellValue} from \"app/common/DocActions\";\nimport {FilterState, IRangeBoundType, isRangeFilter, makeFilterState} from \"app/common/FilterState\";\nimport {decodeObject} from \"app/plugin/objtypes\";\nimport moment, { Moment } from \"moment-timezone\";\nimport {extractInfoFromColType, isDateLikeType, isList, isListType, isNumberType} from \"app/common/gristTypes\";\nimport {isRelativeBound, relativeDateToUnixTimestamp} from \"app/common/RelativeDates\";\nimport {noop} from \"lodash\";\n\nexport type ColumnFilterFunc = (value: CellValue) => boolean;\n\n// Returns a filter function for a particular column: the function takes a cell value and returns\n// whether it's accepted according to the given FilterState.\nexport function makeFilterFunc(state: FilterState,\n                               columnType: string = ''): ColumnFilterFunc {\n\n  if (isRangeFilter(state)) {\n    let {min, max} = state;\n    if (isNumberType(columnType) || isDateLikeType(columnType)) {\n\n      if (isDateLikeType(columnType)) {\n        const info = extractInfoFromColType(columnType);\n        const timezone = (info.type === 'DateTime' && info.timezone) || 'utc';\n        min = changeTimezone(min, timezone, m => m.startOf('day'));\n        max = changeTimezone(max, timezone, m => m.endOf('day'));\n      }\n\n      return (val) => {\n        if (typeof val !== 'number') { return false; }\n        return (\n          (max === undefined ? true : val <= max) &&\n            (min === undefined ? true : min <= val)\n        );\n      };\n    } else {\n      // Although it is not possible to set a range filter for non numeric columns, this still can\n      // happen as a result of a column type conversion. In this case, let's include all values.\n      return () => true;\n    }\n  }\n\n  const {include, values} = state;\n\n  // NOTE: This logic results in complex values and their stringified JSON representations as equivalent.\n  // For example, a TypeError in the formula column and the string '[\"E\",\"TypeError\"]' would be seen as the same.\n  // TODO: This narrow corner case seems acceptable for now, but may be worth revisiting.\n  return (val: CellValue) => {\n    if (isList(val) && columnType && isListType(columnType)) {\n      const list = decodeObject(val) as unknown[];\n      if (list.length) {\n        return list.some(item => values.has(item as any) === include);\n      }\n      // If the list is empty, filter instead by an empty value for the whole list\n      val = columnType === \"ChoiceList\" ? \"\" : null;\n    }\n    return (values.has(Array.isArray(val) ? JSON.stringify(val) : val) === include);\n  };\n}\n\n// Given a JSON string, returns a ColumnFilterFunc\nexport function buildColFilter(filterJson: string | undefined,\n                               columnType?: string): ColumnFilterFunc | null {\n  return filterJson ? makeFilterFunc(makeFilterState(filterJson), columnType) : null;\n}\n\n// Returns the unix timestamp for date in timezone. Function support relative date. Also support\n// optional mod argument that let you modify date as a moment instance.\nfunction changeTimezone(date: IRangeBoundType,\n                        timezone: string,\n                        mod: (m: Moment) => void = noop): number|undefined {\n  if (date === undefined) { return undefined; }\n  const val = isRelativeBound(date) ? relativeDateToUnixTimestamp(date) : date;\n  const m = moment.tz(val * 1000, timezone);\n  mod(m);\n  return Math.floor(m.valueOf() / 1000);\n}\n","/**\n * Custom widget manifest definition.\n */\nexport interface ICustomWidget {\n  /**\n   * Widget friendly name, used on the UI.\n   */\n  name: string;\n  /**\n   * Widget unique id, probably in npm package format @gristlabs/custom-widget-name.\n   */\n  widgetId: string;\n  /**\n   * Custom widget main page URL.\n   */\n  url: string;\n  /**\n   * Optional desired access level.\n   */\n  accessLevel?: AccessLevel;\n}\n\n/**\n * Widget access level.\n */\nexport enum AccessLevel {\n  /**\n   * Default, no access to Grist.\n   */\n  none = \"none\",\n  /**\n   * Read only access to table the widget is based on.\n   */\n  read_table = \"read table\",\n  /**\n   * Full access to document on user's behalf.\n   */\n  full = \"full\",\n}\n\nexport function isSatisfied(current: AccessLevel, minimum: AccessLevel) {\n  function ordered(level: AccessLevel) {\n    switch(level) {\n      case AccessLevel.none: return 0;\n      case AccessLevel.read_table: return 1;\n      case AccessLevel.full: return 2;\n      default: throw new Error(`Unrecognized access level ${level}`);\n    }\n  }\n  return ordered(current) >= ordered(minimum);\n}\n","/**\n * A base class which combines grainjs Disposable with mixed-in backbone Events. It includes the\n * backbone Events methods, and when disposed, stops backbone listeners started with listenTo().\n */\nimport {Events as BackboneEvents, EventsHash} from 'backbone';\nimport {Disposable} from 'grainjs';\n\n// In Typescript, mixins are awkward. This follows the recommendation here\n// https://www.typescriptlang.org/docs/handbook/mixins.html\nexport class DisposableWithEvents extends Disposable implements BackboneEvents {\n  public on: (eventName: string|EventsHash, callback?: (...args: any[]) => void, context?: any) => any;\n  public off: (eventName?: string, callback?: (...args: any[]) => void, context?: any) => any;\n  public trigger: (eventName: string, ...args: any[]) => any;\n  public bind: (eventName: string, callback: (...args: any[]) => void, context?: any) => any;\n  public unbind: (eventName?: string, callback?: (...args: any[]) => void, context?: any) => any;\n\n  public once: (events: string, callback: (...args: any[]) => void, context?: any) => any;\n  public listenTo: (object: any, events: string, callback: (...args: any[]) => void) => any;\n  public listenToOnce: (object: any, events: string, callback: (...args: any[]) => void) => any;\n  public stopListening: (object?: any, events?: string, callback?: (...args: any[]) => void) => any;\n\n  // DisposableWithEvents knows also how to stop any backbone listeners started with listenTo().\n  constructor() {\n    super();\n    this.onDispose(this.stopListening, this);\n  }\n}\nObject.assign(DisposableWithEvents.prototype, BackboneEvents);\n","import { CellValue } from \"app/common/DocActions\";\nimport { IRelativeDateSpec, isEquivalentRelativeDate, isRelativeBound } from \"app/common/RelativeDates\";\n\nexport type { IRelativeDateSpec } from \"app/common/RelativeDates\";\nexport { isRelativeBound } from \"app/common/RelativeDates\";\n\n// Filter object as stored in the db\nexport interface FilterSpec {\n  included?: CellValue[];\n  excluded?: CellValue[];\n  min?: number|IRelativeDateSpec;\n  max?: number|IRelativeDateSpec;\n}\n\nexport type IRangeBoundType = undefined|number|IRelativeDateSpec;\n\nexport type FilterState = ByValueFilterState | RangeFilterState\n\n// A more efficient representation of filter state for a column than FilterSpec.\ninterface ByValueFilterState {\n  include: boolean;\n  values: Set<CellValue>;\n}\n\ninterface RangeFilterState {\n  min?: number|IRelativeDateSpec;\n  max?: number|IRelativeDateSpec;\n}\n\n// Creates a FilterState. Accepts spec as a json string or a FilterSpec.\nexport function makeFilterState(spec: string | FilterSpec): FilterState {\n  if (typeof (spec) === 'string') {\n    return makeFilterState((spec && JSON.parse(spec)) || {});\n  }\n  if (spec.min !== undefined || spec.max !== undefined) {\n    return {min: spec.min, max: spec.max};\n  }\n  return {\n    include: Boolean(spec.included),\n    values: new Set(spec.included || spec.excluded || []),\n  };\n}\n\n// Returns true if state and spec are equivalent, false otherwise.\nexport function isEquivalentFilter(state: FilterState, spec: FilterSpec): boolean {\n  const other = makeFilterState(spec);\n  if (!isRangeFilter(state) && !isRangeFilter(other)) {\n    if (state.include !== other.include) { return false; }\n    if (state.values.size !== other.values.size) { return false; }\n    if (other.values) {\n      for (const val of other.values) { if (!state.values.has(val)) { return false; } }\n    }\n  } else {\n    if (isRangeFilter(state) && isRangeFilter(other)) {\n      if (state.min !== other.min || state.max !== other.max) { return false; }\n    } else {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isRangeFilter(state: FilterState): state is RangeFilterState {\n  const {min, max} = state as any;\n  return min !== undefined || max !== undefined;\n}\n\nexport function isEquivalentBound(a: IRangeBoundType, b: IRangeBoundType) {\n  if (isRelativeBound(a) && isRelativeBound(b)) {\n    return isEquivalentRelativeDate(a, b);\n  }\n  if (isRelativeBound(a) || isRelativeBound(b)) {\n    return false;\n  }\n  return a === b;\n}\n","/**\n * Here are the most relevant formats we want to support.\n *   -1234.56     Plain\n *   -1,234.56    Number (with separators)\n *   12.34%       Percent\n *   1.23E3       Scientific\n *   $(1,234.56)  Accounting\n *   (1,234.56)   Financial\n *   -$1,234.56   Currency\n *\n * We implement a button-based UI, using one selector button to choose mode:\n *    none  = NumMode undefined (plain number, no thousand separators)\n *    `$`   = NumMode 'currency'\n *    `,`   = NumMode 'decimal' (plain number, with thousand separators)\n *    `%`   = NumMode 'percent'\n *    `Exp` = NumMode 'scientific'\n * A second toggle button is `(-)` for Sign, to use parentheses rather than \"-\" for negative\n * numbers. It is Ignored and disabled when mode is 'scientific'.\n */\n\nimport {clamp} from 'app/common/gutil';\nimport {StringUnion} from 'app/common/StringUnion';\nimport * as LocaleCurrency from \"locale-currency\";\nimport {FormatOptions} from 'app/common/ValueFormatter';\nimport {DocumentSettings} from 'app/common/DocumentSettings';\n\n// Options for number formatting.\nexport const NumMode = StringUnion('currency', 'decimal', 'percent', 'scientific');\nexport type NumMode = typeof NumMode.type;\nexport type NumSign = 'parens';\n\nexport interface NumberFormatOptions extends FormatOptions {\n  numMode?: NumMode|null;\n  numSign?: NumSign|null;\n  decimals?: number|null;      // aka minimum fraction digits\n  maxDecimals?: number|null;\n  currency?: string|null;\n}\n\nexport function getCurrency(options: NumberFormatOptions, docSettings: DocumentSettings): string {\n  return options.currency || docSettings.currency || LocaleCurrency.getCurrency(docSettings.locale ?? 'en-US');\n}\n\nexport function buildNumberFormat(options: NumberFormatOptions, docSettings: DocumentSettings): Intl.NumberFormat {\n  const currency = getCurrency(options, docSettings);\n  const nfOptions: Intl.NumberFormatOptions = parseNumMode(options.numMode, currency);\n  // numSign is implemented outside of Intl.NumberFormat since the latter's similar 'currencySign'\n  // option is not well-supported, and doesn't apply to non-currency formats.\n\n  if (options.decimals !== undefined && options.decimals !== null) {\n    // Should be at least 0\n    nfOptions.minimumFractionDigits = clamp(Number(options.decimals), 0, 20);\n  }\n\n  // maximumFractionDigits must not be less than the minimum, so we need to know the minimum\n  // implied by numMode.\n  const tmp = new Intl.NumberFormat(docSettings.locale, nfOptions).resolvedOptions();\n\n  if (options.maxDecimals !== undefined && options.maxDecimals !== null) {\n    // Should be at least 0 and at least minimumFractionDigits.\n    nfOptions.maximumFractionDigits = clamp(Number(options.maxDecimals), tmp.minimumFractionDigits || 0, 20);\n  } else if (!options.numMode) {\n    // For the default format, keep max digits at 10 as we had before.\n    nfOptions.maximumFractionDigits = clamp(10, tmp.minimumFractionDigits || 0, 20);\n  }\n\n  return new Intl.NumberFormat(docSettings.locale, nfOptions);\n}\n\n// Safari 13 and some other browsers don't support narrowSymbol option:\n// https://github.com/mdn/browser-compat-data/issues/8985\n// https://caniuse.com/?search=currencyDisplay\nconst currencyDisplay = (function(){\n  try {\n    new Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD', currencyDisplay: 'narrowSymbol'});\n    return 'narrowSymbol';\n  } catch(err) {\n    return 'symbol';\n  }\n})();\n\nexport function parseNumMode(numMode?: NumMode|null, currency?: string): Intl.NumberFormatOptions {\n  switch (numMode) {\n    case 'currency': return {style: 'currency', currency, currencyDisplay};\n    case 'decimal': return {useGrouping: true};\n    case 'percent': return {style: 'percent'};\n    // TODO 'notation' option (and therefore numMode 'scientific') works on recent Firefox and\n    // Chrome, not on Safari or Node 10.\n    case 'scientific': return {notation: 'scientific'} as Intl.NumberFormatOptions;\n    default: return {useGrouping: false};\n  }\n}\n","/**\n * Counterpart of NumberFormat.ts.\n * Generic functionality for parsing numbers formatted by Intl.NumberFormat,\n * not tied to documents or anything.\n */\n\nimport {DocumentSettings} from 'app/common/DocumentSettings';\nimport {getDistinctValues} from 'app/common/gutil';\nimport {getCurrency, NumberFormatOptions, NumMode, parseNumMode} from 'app/common/NumberFormat';\nimport escapeRegExp = require('lodash/escapeRegExp');\nimport last = require('lodash/last');\n\n// Possible values of Intl.NumberFormat.formatToParts[i].type\n// Seems Intl.NumberFormatPartTypes is not quite complete\ntype NumberFormatPartTypes = Intl.NumberFormatPartTypes | 'exponentSeparator';\n\n/**\n * Returns a map converting the decimal digits used in the given formatter\n * to the digits 0123456789.\n * Excludes digits which don't need conversion, so for many locales this is empty.\n */\nfunction getDigitsMap(locale: string) {\n  const formatter = Intl.NumberFormat(locale);\n  const result = new Map<string, string>();\n  for (let i = 0; i < 10; i++) {\n    const digit = String(i);\n    const localeDigit = formatter.format(i);\n    if (localeDigit !== digit) {\n      result.set(localeDigit, digit);\n    }\n  }\n  return result;\n}\n\ninterface ParsedOptions {\n  isPercent: boolean;\n  isCurrency: boolean;\n  isParenthesised: boolean;\n  hasDigitGroupSeparator: boolean;\n  isScientific: boolean;\n}\n\nexport default class NumberParse {\n  // Regex for whitespace and some control characters we need to remove\n  // 200e = Left-to-right mark\n  // 200f = Right-to-left mark\n  // 061c = Arabic letter mark\n  public static readonly removeCharsRegex = /[\\s\\u200e\\u200f\\u061c]/g;\n\n  public static fromSettings(docSettings: DocumentSettings, options: NumberFormatOptions = {}) {\n    return new NumberParse(docSettings.locale, getCurrency(options, docSettings));\n  }\n\n  // Many attributes are public for easy testing.\n  public readonly currencySymbol: string;\n  public readonly percentageSymbol: string;\n  public readonly digitGroupSeparator: string;\n  public readonly digitGroupSeparatorCurrency: string;\n  public readonly exponentSeparator: string;\n  public readonly decimalSeparator: string;\n  public readonly minusSign: string;\n  public readonly defaultNumDecimalsCurrency: number;\n\n  public readonly digitsMap: Map<string, string>;\n\n  public readonly currencyEndsInMinusSign: boolean;\n\n  private readonly _exponentSeparatorRegex: RegExp;\n  private readonly _digitGroupSeparatorRegex: RegExp;\n\n  // Function which replaces keys of digitsMap (i.e. locale-specific digits)\n  // with corresponding digits from 0123456789.\n  private readonly _replaceDigits: (s: string) => string;\n\n  constructor(locale: string, currency: string) {\n    const parts = new Map<NumMode, Intl.NumberFormatPart[]>();\n    for (const numMode of NumMode.values) {\n      const formatter = Intl.NumberFormat(locale, parseNumMode(numMode, currency));\n      const formatParts = formatter.formatToParts(-1234567.5678);\n      parts.set(numMode, formatParts);\n    }\n\n    function getPart(partType: NumberFormatPartTypes, numMode: NumMode = \"decimal\"): string {\n      const part = parts.get(numMode)!.find(p => p.type === partType);\n      // Only time we expect `part` to be undefined is for digitGroupSeparatorCurrency\n      return part?.value || '';\n    }\n\n    this.currencySymbol = getPart('currency', 'currency');\n    this.percentageSymbol = getPart('percentSign', 'percent');\n    this.exponentSeparator = getPart('exponentSeparator', 'scientific');\n    this.minusSign = getPart('minusSign');\n    this.decimalSeparator = getPart('decimal');\n\n    // Separators for groups of digits, typically groups of 3, i.e. 'thousands separators'.\n    // A few locales have different separators for currency and non-currency.\n    // We check for both but don't check which one is used, currency or not.\n    this.digitGroupSeparator = getPart('group');\n    this.digitGroupSeparatorCurrency = getPart('group', 'currency');\n\n    // A few locales format negative currency amounts ending in '-', e.g. '€ 1,00-'\n    this.currencyEndsInMinusSign = last(parts.get('currency'))!.type === 'minusSign';\n\n    // Default number of fractional digits for currency,\n    // e.g. this is 2 for USD because 1 is formatted as $1.00\n    this.defaultNumDecimalsCurrency = getPart(\"fraction\", \"currency\")?.length || 0;\n\n    // Since JS and Python allow both e and E for scientific notation, it seems fair that other\n    // locales should be case insensitive for this.\n    this._exponentSeparatorRegex = new RegExp(escapeRegExp(this.exponentSeparator), 'i');\n\n    // Overall the parser is quite lax about digit separators.\n    // We only require that the separator is followed by at least 2 digits,\n    // because India groups digits in pairs after the first 3.\n    // More careful checking is probably more complicated than is worth it.\n    this._digitGroupSeparatorRegex = new RegExp(\n      `[${escapeRegExp(\n        this.digitGroupSeparator +\n        this.digitGroupSeparatorCurrency\n      )}](\\\\d\\\\d)`,\n      'g'\n    );\n\n    const digitsMap = this.digitsMap = getDigitsMap(locale);\n    if (digitsMap.size === 0) {\n      this._replaceDigits = (s: string) => s;\n    } else {\n      const digitsRegex = new RegExp([...digitsMap.keys()].join(\"|\"), \"g\");\n      this._replaceDigits = (s: string) => s.replace(digitsRegex, d => digitsMap.get(d) || d);\n    }\n  }\n\n  /**\n   * If the string looks like a number formatted by Grist using this parser's locale and currency (or at least close)\n   * then returns an object where:\n   *   - `result` is that number, the only thing most callers need\n   *   - `cleaned` is a string derived from `value` which can be parsed directly by Number, although `result`\n   *      is still processed a bit further than that, e.g. dividing by 100 for percentages.\n   *   - `options` describes how the number was apparently formatted.\n   *\n   * Returns null otherwise.\n   */\n  public parse(value: string): { result: number, cleaned: string, options: ParsedOptions } | null {\n    // Remove characters before checking for parentheses on the ends of the string.\n    const [value2, isCurrency] = removeSymbol(value, this.currencySymbol);\n    const [value3, isPercent] = removeSymbol(value2, this.percentageSymbol);\n\n    // Remove whitespace and special characters, after currency because some currencies contain spaces.\n    value = value3.replace(NumberParse.removeCharsRegex, \"\");\n\n    const isParenthesised = value[0] === \"(\" && value[value.length - 1] === \")\";\n    if (isParenthesised) {\n      value = value.substring(1, value.length - 1);\n    }\n\n    // Must check for empty string directly because Number('') is 0 :facepalm:\n    // Check early so we can return early for performance.\n    // Nothing after this should potentially produce an empty string.\n    if (value === '') {\n      return null;\n    }\n\n    // Replace various symbols with the standard versions recognised by JS Number.\n    // Note that this also allows the 'standard' symbols ('e', '.', '-', and '0123456789')\n    // even if the locale doesn't use them when formatting,\n    // although '.' will still be removed if it's a digit separator.\n\n    // Check for exponent separator before replacing digits\n    // because it can contain locale-specific digits representing '10' as in 'x10^'.\n    const withExponent = value;\n    value = value.replace(this._exponentSeparatorRegex, \"e\");\n    const isScientific = withExponent !== value;\n\n    value = this._replaceDigits(value);\n\n    // Must come after replacing digits because the regex uses \\d\n    // which doesn't work for locale-specific digits.\n    // This simply removes the separators, $1 is a captured group of digits which we keep.\n    const withSeparators = value;\n    value = value.replace(this._digitGroupSeparatorRegex, \"$1\");\n    const hasDigitGroupSeparator = withSeparators !== value;\n\n    // Must come after the digit separator replacement\n    // because the digit separator might be '.'\n    value = value.replace(this.decimalSeparator, '.');\n\n    // .replace with a string only replaces once,\n    // and a number can contain two minus signs when using scientific notation\n    value = value.replace(this.minusSign, \"-\");\n    value = value.replace(this.minusSign, \"-\");\n\n    // Move '-' from the end to the beginning when appropriate (which is rare)\n    if (isCurrency && this.currencyEndsInMinusSign && value.endsWith(\"-\")) {\n      value = \"-\" + value.substring(0, value.length - 1);\n    }\n\n    // Number is more strict than parseFloat which allows extra trailing characters.\n    let result = Number(value);\n    if (isNaN(result)) {\n      return null;\n    }\n\n    // Parentheses represent a negative number, e.g. (123) -> -123\n    // (-123) is treated as an error\n    if (isParenthesised) {\n      if (result <= 0) {\n        return null;\n      }\n      result = -result;\n    }\n\n    if (isPercent) {\n      result *= 0.01;\n    }\n\n    return {\n      result,\n      cleaned: value,\n      options: {isCurrency, isPercent, isParenthesised, hasDigitGroupSeparator, isScientific}\n    };\n  }\n\n  public guessOptions(values: Array<string | null>): NumberFormatOptions {\n    // null: undecided\n    // true: negative numbers should be parenthesised\n    // false: they should not\n    let parens: boolean | null = null;\n\n    // If any of the numbers have thousands separators, that's enough to guess that option\n    let anyHasDigitGroupSeparator = false;\n\n    // Minimum number of decimal places, guessed by looking for trailing 0s after the decimal point\n    let decimals = 0;\n    const decimalsRegex = /\\.\\d+/;\n    // Maximum number of decimal places. We never actually guess a value for this option,\n    // but for currencies we need to check if there are fewer decimal places than the default.\n    let maxDecimals = 0;\n\n    // Keep track of the number of modes seen to pick the most common\n    const modes = {} as Record<NumMode, number>;\n    for (const mode of NumMode.values) {\n      modes[mode] = 0;\n    }\n\n    for (const value of getDistinctValues(values)) {\n      if (!value) {\n        continue;\n      }\n      const parsed = this.parse(value);\n      if (!parsed) {\n        continue;\n      }\n      const {\n        result,\n        cleaned,\n        options: {isCurrency, isPercent, isParenthesised, hasDigitGroupSeparator, isScientific}\n      } = parsed;\n\n      if (result < 0 && !isParenthesised) {\n        // If we see a negative number not surrounded by parens, assume that any other parens mean something else\n        parens = false;\n      } else if (parens === null && isParenthesised) {\n        // If we're still unsure about parens (i.e. the above case hasn't been encountered)\n        // then one parenthesised number is enough to guess that the parens option should be used.\n        parens = true;\n      }\n\n      // If any of the numbers have thousands separators, that's enough to guess that option\n      anyHasDigitGroupSeparator = anyHasDigitGroupSeparator || hasDigitGroupSeparator;\n\n      let mode: NumMode = \"decimal\";\n      if (isCurrency) {\n        mode = \"currency\";\n      } else if (isPercent) {\n        mode = \"percent\";\n      } else if (isScientific) {\n        mode = \"scientific\";\n      }\n      modes[mode] += 1;\n\n      const decimalsMatch = decimalsRegex.exec(cleaned);\n      if (decimalsMatch) {\n        // Number of digits after the '.' (which is part of the match, hence the -1)\n        const numDecimals = decimalsMatch[0].length - 1;\n        maxDecimals = Math.max(maxDecimals, numDecimals);\n        if (decimalsMatch[0].endsWith(\"0\")) {\n          decimals = Math.max(decimals, numDecimals);\n        }\n      }\n    }\n\n    const maxCount = Math.max(...Object.values(modes));\n    if (maxCount === 0) {\n      // No numbers parsed at all, so don't guess any options\n      return {};\n    }\n\n    const result: NumberFormatOptions = {};\n\n    // Find the most common mode.\n    const maxMode: NumMode = NumMode.values.find((k) => modes[k] === maxCount)!;\n\n    // 'decimal' is the default mode above when counting,\n    // but only guess it as an actual option if digit separators were used at least once.\n    if (maxMode !== \"decimal\" || anyHasDigitGroupSeparator) {\n      result.numMode = maxMode;\n    }\n\n    if (parens) {\n      result.numSign = \"parens\";\n    }\n\n    // Specify minimum number of decimal places if we saw any trailing 0s after '.'\n    // Otherwise explicitly set it to 0 if needed to suppress the default for that currency.\n    if (decimals > 0 || maxMode === \"currency\" && maxDecimals < this.defaultNumDecimalsCurrency) {\n      result.decimals = decimals;\n    }\n\n    return result;\n  }\n}\n\n/**\n * Returns a tuple [removed, wasPresent]\n * - `removed` is the given string `value` with `symbol` removed at most once.\n * - `wasPresent` is `true` if `symbol` was present in `value` and was thus removed.\n */\nfunction removeSymbol(value: string, symbol: string): [string, boolean] {\n  const removed = value.replace(symbol, \"\");\n  const wasPresent = removed.length < value.length;\n  return [removed, wasPresent];\n}\n","import {IForwarderDest, IMessage, IMsgCustom, IMsgRpcCall, IRpcLogger, MsgType, Rpc} from 'grain-rpc';\nimport {Checker} from \"ts-interface-checker\";\n\nimport {InactivityTimer} from 'app/common/InactivityTimer';\nimport {LocalPlugin} from 'app/common/plugin';\nimport {BarePlugin} from 'app/plugin/PluginManifest';\n\nimport {Implementation} from 'app/plugin/PluginManifest';\nimport {RenderOptions, RenderTarget} from 'app/plugin/RenderOptions';\n\n\nexport type ComponentKind = \"safeBrowser\" | \"safePython\" | \"unsafeNode\";\n\n// Describes a function that appends some html content to `containerElement` given some\n// options. Useful for provided by a plugin.\nexport type TargetRenderFunc = (containerElement: HTMLElement, options?: RenderOptions) => void;\n\n/**\n * The `BaseComponent` is the base implementation for a plugins' component. It exposes methods\n * related to its activation. It provides basic features including the inactivity timer, activated\n * state for the component. A custom component must override the `deactivateImplementation`,\n * `activeImplementation` and `useRemoteAPI` methods.\n */\nexport abstract class BaseComponent implements IForwarderDest {\n\n  public inactivityTimer: InactivityTimer;\n  private _activated: boolean = false;\n\n  constructor(plugin: BarePlugin, private _logger: IRpcLogger) {\n    const deactivate = plugin.components.deactivate;\n    const delay = (deactivate && deactivate.inactivitySec) ? deactivate.inactivitySec : 300;\n    this.inactivityTimer = new InactivityTimer(() => this.deactivate(), delay * 1000);\n  }\n\n  /**\n   * Wether the Component component have been activated.\n   */\n  public activated(): boolean {\n    return this._activated;\n  }\n\n  /**\n   * Activates the component.\n   */\n  public async activate(): Promise<void> {\n    if (this._logger.info) { this._logger.info(\"Activating plugin component\"); }\n    await this.activateImplementation();\n    this._activated = true;\n    this.inactivityTimer.enable();\n  }\n\n  /**\n   * Force deactivate the component.\n   */\n  public async deactivate(): Promise<void> {\n    if (this._activated) {\n      if (this._logger.info) { this._logger.info(\"Deactivating plugin component\"); }\n      this._activated = false;\n      // Cancel the timer to ensure we don't have an unnecessary hanging timeout (in tests it will\n      // prevent node from exiting, but also it's just wasteful).\n      this.inactivityTimer.disable();\n      try {\n        await this.deactivateImplementation();\n      } catch (e) {\n        // If it fails, we warn and swallow the exception (or it would be an unhandled rejection).\n        if (this._logger.warn) { this._logger.warn(`Deactivate failed: ${e.message}`); }\n      }\n    }\n  }\n\n  public async forwardCall(c: IMsgRpcCall): Promise<any> {\n    if (!this._activated) { await this.activate(); }\n    return await this.inactivityTimer.disableUntilFinish(this.doForwardCall(c));\n  }\n\n  public async forwardMessage(msg: IMsgCustom): Promise<any> {\n    if (!this._activated) { await this.activate(); }\n    this.inactivityTimer.ping();\n    this.doForwardMessage(msg); // eslint-disable-line @typescript-eslint/no-floating-promises\n  }\n\n  protected abstract doForwardCall(c: IMsgRpcCall): Promise<any>;\n\n  protected abstract doForwardMessage(msg: IMsgCustom): Promise<any>;\n\n  protected abstract deactivateImplementation(): Promise<void>;\n\n  protected abstract activateImplementation(): Promise<void>;\n}\n\n\n/**\n * Node Implementation for the PluginElement interface. A PluginInstance take care of activation of\n * the the plugins's components (activating, timing and deactivating), and create the api's for each contributions.\n *\n * Do not try to instantiate yourself, PluginManager does it for you. Instead use the\n * PluginManager.getPlugin(id) method that get instances for you.\n *\n */\nexport class PluginInstance {\n\n  public rpc: Rpc;\n  public safeBrowser?: BaseComponent;\n  public unsafeNode?: BaseComponent;\n  public safePython?: BaseComponent;\n\n  private  _renderTargets: Map<RenderTarget, TargetRenderFunc> = new Map();\n\n  private _nextRenderTargetId = 0;\n\n  constructor(public definition: LocalPlugin, rpcLogger: IRpcLogger) {\n\n    const rpc = this.rpc = new Rpc({logger: rpcLogger});\n    rpc.setSendMessage((mssg: any) => rpc.receiveMessage(mssg));\n\n    this._renderTargets.set(\"fullscreen\", renderFullScreen);\n  }\n\n  /**\n   * Create an instance for the implementation, this implementation is specific to node environment.\n   */\n  public getStub<Iface>(implementation: Implementation, checker: Checker): Iface {\n    const components: any = this.definition.manifest.components;\n    // the component forwarder was registered under the same relative path that was used to declare\n    // it in the manifest\n    const forwardName = components[implementation.component];\n    return this.rpc.getStubForward<Iface>(forwardName, implementation.name, checker);\n  }\n\n  /**\n   * Stop and clean up all components of this plugin.\n   */\n  public async shutdown(): Promise<void> {\n    await Promise.all([\n      this.safeBrowser && this.safeBrowser.deactivate(),\n      this.safePython && this.safePython.deactivate(),\n      this.unsafeNode && this.unsafeNode.deactivate(),\n      ]);\n  }\n\n  /**\n   * Create a render target and return its identifier. When a plugin calls `render` with `inline`\n   * mode and this identifier, it will append the safe browser process to `element`.\n   */\n  public addRenderTarget(renderPluginContent: TargetRenderFunc): number {\n    const id = this._nextRenderTargetId++;\n    this._renderTargets.set(id, renderPluginContent);\n    return id;\n  }\n\n  /**\n   * Get the function that render an HTML element based on RenderTarget and RenderOptions.\n   */\n  public getRenderTarget(target: RenderTarget, options?: RenderOptions): TargetRenderFunc {\n    const targetRenderPluginContent =  this._renderTargets.get(target);\n    if (!targetRenderPluginContent) {\n      throw new Error(`Unknown render target ${target}`);\n    }\n    return (containerElement, opts) => targetRenderPluginContent(containerElement, opts || options);\n  }\n\n  /**\n   * Removes the render target.\n   */\n  public removeRenderTarget(target: RenderTarget): boolean {\n    return this._renderTargets.delete(target);\n  }\n\n}\n\n/**\n * Renders safe browser plugin in fullscreen.\n */\nfunction renderFullScreen(element: Element) {\n  element.classList.add(\"plugin_instance_fullscreen\");\n  document.body.appendChild(element);\n}\n\n// Basically the union of relevant interfaces of console and server log.\nexport interface BaseLogger {\n  log?(message: string, ...args: any[]): void;\n  debug?(message: string, ...args: any[]): void;\n  warn?(message: string, ...args: any[]): void;\n}\n\n/**\n * Create IRpcLogger which logs to console or server log with the given prefix. Specifically will\n * warn using baseLog.warn, and log info using baseLog.debug or baseLog.log, as available.\n */\nexport function createRpcLogger(baseLog: BaseLogger, prefix: string): IRpcLogger {\n  const info = baseLog.debug || baseLog.log;\n  const warn = baseLog.warn;\n  return {\n    warn: warn && ((msg: string) => warn(\"%s %s\", prefix, msg)),\n    info: info && ((msg: string) => info(\"%s %s\", prefix, msg)),\n  };\n}\n\n/**\n * If msec milliseconds pass without receiving a Ready message, print the given message as a\n * warning.\n * TODO: I propose making it a method of rpc itself, as rpc.warnIfNotReady(msec, message). Until\n * we have that, this implements it via an ugly hack.\n */\nexport function warnIfNotReady(rpc: Rpc, msec: number, message: string): void {\n  if (!(rpc as any)._logger.warn) { return; }\n  const timer = setTimeout(() => (rpc as any)._logger.warn(message), msec);\n  const origDispatch = (rpc as any)._dispatch;\n  (rpc as any)._dispatch = (msg: IMessage) => {\n    if (msg.mtype === MsgType.Ready) { clearTimeout(timer); }\n    origDispatch.call(rpc, msg);\n  };\n}\n","// Relative date spec describes a date that is distant to the current date by a series of jumps in\n// time defined as a series of periods. Hence, starting from the current date, each one of the\n// periods gets applied successively which eventually yields to the final date. Typical relative\n\nimport { isEqual, isNumber, isUndefined, omitBy } from \"lodash\";\nimport moment from \"moment-timezone\";\nimport getCurrentTime from \"app/common/getCurrentTime\";\n\n// Relative date uses one or two periods. When relative dates are defined by two periods, they are\n// applied successively to the start date to resolve the target date. In practice in grist, as of\n// the time of writing, relative date never uses more than 2 periods and the second period's unit is\n// always day.\nexport type IRelativeDateSpec = IPeriod[];\n\n// IPeriod describes a period of time: when used along with a start date, it allows to target a new\n// date. It allows to encode simple periods such as `30 days ago` as `{quantity: -30, unit:\n// 'day'}`. Or `The last day of last week` as `{quantity: -1, unit: 'week', endOf: true}`. Not that\n// .endOf flag is only relevant when the unit is one of 'week', 'month' or 'year'. When `endOf` is\n// false or missing then it will target the first day (of the week, month or year).\nexport interface IPeriod {\n  quantity: number;\n  unit: 'day'|'week'|'month'|'year';\n  endOf?: boolean;\n}\n\nexport const CURRENT_DATE: IRelativeDateSpec = [{quantity: 0, unit: 'day'}];\n\n\nexport function isRelativeBound(bound?: number|IRelativeDateSpec): bound is IRelativeDateSpec {\n  return !isUndefined(bound) && !isNumber(bound);\n}\n\n// Returns the number of seconds between 1 January 1970 00:00:00 UTC and the given bound, may it be\n// a relative date.\nexport function relativeDateToUnixTimestamp(bound: IRelativeDateSpec): number {\n  const localDate = getCurrentTime().startOf('day');\n  const date = moment.utc(localDate.toObject());\n  const periods = Array.isArray(bound) ? bound : [bound];\n\n  for (const period of periods) {\n    const {quantity, unit, endOf} = period;\n\n    date.add(quantity, unit);\n    if (endOf) {\n      date.endOf(unit);\n\n      // date must have \"hh:mm:ss\" set to \"00:00:00\"\n      date.startOf('day');\n    } else {\n      date.startOf(unit);\n    }\n  }\n  return Math.floor(date.valueOf() / 1000);\n}\n\n// Format a relative date.\nexport function formatRelBounds(periods: IPeriod[]): string {\n\n  // if 2nd period is moot revert to one single period\n  periods = periods[1]?.quantity ? periods : [periods[0]];\n\n  if (periods.length === 1) {\n    const {quantity, unit, endOf} = periods[0];\n    if (unit === 'day') {\n      if (quantity === 0) { return 'Today'; }\n      if (quantity === -1) { return 'Yesterday'; }\n      if (quantity === 1) { return 'Tomorrow'; }\n      return formatReference(periods[0]);\n    }\n\n    if (endOf) {\n      return `Last day of ${formatReference(periods[0])}`;\n    } else {\n      return `1st day of ${formatReference(periods[0])}`;\n    }\n  }\n\n  if (periods.length === 2) {\n    let dayQuantity = periods[1].quantity;\n\n    // If the 1st period has the endOf flag, we're already 1 day back.\n    if (periods[0].endOf) { dayQuantity -= 1; }\n\n    let startOrEnd = '';\n    if (periods[0].unit === 'week') {\n      if (periods[1].quantity === 0) {\n        startOrEnd = 'start ';\n      } else if (periods[1].quantity === 6) {\n        startOrEnd = 'end ';\n      }\n    }\n\n    return `${formatDay(dayQuantity, periods[0].unit)} ${startOrEnd}of ${formatReference(periods[0])}`;\n  }\n\n  throw new Error(\n    `Relative date spec does not support more that 2 periods: ${periods.length}`\n  );\n}\n\n/**\n * Returns a new timestamp that is the UTC equivalent of the original local `timestamp`, offset\n * according to the delta between`timezone` and UTC.\n */\nexport function localTimestampToUTC(timestamp: number, timezone: string): number {\n  return moment.unix(timestamp).utc().tz(timezone, true).unix();\n}\n\nfunction formatDay(quantity: number, refUnit: IPeriod['unit']): string {\n\n  if (refUnit === 'week') {\n    const n = (quantity + 7) % 7;\n    return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][n];\n  }\n\n  const ord = (n: number) => moment.localeData().ordinal(n);\n  if (quantity < 0) {\n    if (quantity === -1) {\n      return 'Last day';\n    }\n    return `${ord(-quantity)} to last day`;\n  } else {\n    return `${ord(quantity + 1)} day`;\n  }\n}\n\nfunction formatReference(period: IPeriod): string {\n  const {quantity, unit} = period;\n  if (quantity === 0) {\n    return `this ${unit}`;\n  }\n\n  if (quantity === -1) {\n    return `last ${unit}`;\n  }\n\n  if (quantity === 1) {\n    return `next ${unit}`;\n  }\n\n  const n = Math.abs(quantity);\n  const plurals = n > 1 ? 's' : '';\n  return `${n} ${unit}${plurals} ${quantity < 1 ? 'ago' : 'from now'}`;\n}\n\nexport function isEquivalentRelativeDate(a: IPeriod|IPeriod[], b: IPeriod|IPeriod[]) {\n  a = Array.isArray(a) ? a : [a];\n  b = Array.isArray(b) ? b : [b];\n  if (a.length === 2 && a[1].quantity === 0) { a = [a[0]]; }\n  if (b.length === 2 && b[1].quantity === 0) { b = [b[0]]; }\n\n  const compactA = a.map(period => omitBy(period, isUndefined));\n  const compactB = b.map(period => omitBy(period, isUndefined));\n\n  return isEqual(compactA, compactB);\n}\n\n\n// Get the difference in unit of measurement. If unit is week, makes sure that two dates that are in\n// two different weeks are always at least 1 number apart. Same for month and year.\nexport function diffUnit(a: moment.Moment, b: moment.Moment, unit: 'day'|'week'|'month'|'year') {\n  return a.clone().startOf(unit).diff(b.clone().startOf(unit), unit);\n}\n","import {CellValue} from \"app/common/DocActions\";\nimport {ColumnFilterFunc} from \"app/common/ColumnFilterFunc\";\nimport {FilterColValues} from 'app/common/ActiveDocAPI';\nimport {isList} from 'app/common/gristTypes';\nimport {decodeObject} from 'app/plugin/objtypes';\nimport {ColumnGettersByColId} from 'app/common/ColumnGetters';\n\nexport type RowFilterFunc<T> = (row: T) => boolean;\n\n// Builds RowFilter for a single column\nexport function buildRowFilter<T>(\n  getter: RowValueFunc<T> | null,\n  filterFunc: ColumnFilterFunc | null): RowFilterFunc<T> {\n  if (!getter || !filterFunc) {\n    return () => true;\n  }\n  return (rowId: T) => filterFunc(getter(rowId));\n}\n\nexport type RowValueFunc<T> = (rowId: T) => CellValue;\n\n// Filter rows for the purpose of linked widgets\nexport function getLinkingFilterFunc(\n  columnGetters: ColumnGettersByColId, {filters, operations}: FilterColValues\n): RowFilterFunc<number> {\n  const colFuncs = Object.keys(filters).sort().map(\n    (colId) => {\n      const getter = columnGetters.getColGetterByColId(colId);\n      if (!getter) { return () => true; }\n      const values = new Set(filters[colId]);\n      switch (operations[colId]) {\n        case \"intersects\":\n          return (rowId: number) => {\n            const value = getter(rowId) as CellValue;\n            return isList(value) &&\n              (decodeObject(value) as unknown[]).some(v => values.has(v));\n          };\n        case \"empty\":\n          return (rowId: number) => {\n            const value = getter(rowId);\n            // `isList(value) && value.length === 1` means `value == ['L']` i.e. an empty list\n            return !value || isList(value) && value.length === 1;\n          };\n        case \"in\":\n          return (rowId: number) => values.has(getter(rowId));\n      }\n    });\n  return (rowId: number) => colFuncs.every(f => f(rowId));\n}\n","/**\n * SortFunc class interprets the sortSpec (as saved in viewSection.sortColRefs), exposing a\n * compare(rowId1, rowId2) function that can be used to actually sort rows in a view.\n *\n * TODO: When an operation (such as a paste) would cause rows to jump in the sort order, this\n * class should support freezing of row positions until the user chooses to re-sort. This is not\n * currently implemented.\n */\nimport {ColumnGetter, ColumnGetters} from 'app/common/ColumnGetters';\nimport {localeCompare, nativeCompare} from 'app/common/gutil';\nimport {Sort} from 'app/common/SortSpec';\n\n// Function that will amend column getter to return entry index instead\n// of entry value. Result will be a string padded with zeros, so the ordering\n// between types is preserved.\nexport function choiceGetter(getter: ColumnGetter, choices: string[]): ColumnGetter {\n  return rowId => {\n    const value = getter(rowId);\n    const index = choices.indexOf(value);\n    return index >= 0 ? String(index).padStart(5, \"0\") : value;\n  };\n}\n\ntype Comparator = (val1: any, val2: any) => number;\n\n/**\n * Natural comparator based on built in method.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\n */\nconst collator = new Intl.Collator(undefined, {numeric: true});\nfunction naturalCompare(val1: any, val2: any) {\n  if (typeof val1 === 'string' && typeof val2 === 'string') {\n    return collator.compare(val1, val2);\n  }\n  return typedCompare(val1, val2);\n}\n\n/**\n * Empty comparator will treat empty values as last.\n */\nexport const emptyCompare = (next: Comparator) => (val1: any, val2: any) => {\n  const isEmptyValue1 = !val1 && typeof val1 !== 'number';\n  const isEmptyValue2 = !val2 && typeof val2 !== 'number';\n\n  // If both values are empty values, rely on next to compare.\n  if (isEmptyValue1 && !isEmptyValue2) {\n    return 1;\n  }\n  if (isEmptyValue2 && !isEmptyValue1) {\n    return -1;\n  }\n  return next(val1, val2);\n};\n\n\n/**\n * Compare two cell values, paying attention to types and values. Note that native JS comparison\n * can't be used for sorting because it isn't transitive across types (e.g. both 1 < \"2\" and \"2\" <\n * \"a\" are true, but 1 < \"a\" is false.). In addition, we handle complex values represented in\n * Grist as arrays.\n *\n * Note that we need to handle different types of values regardless of the column type,\n * because e.g. a numerical column may contain text (alttext) or null values.\n */\nexport function typedCompare(val1: any, val2: any): number {\n  let result: number, type1: string, array1: boolean;\n  // tslint:disable-next-line:no-conditional-assignment\n  if ((result = nativeCompare(type1 = typeof val1, typeof val2)) !== 0) {\n    return result;\n  }\n  // We need to worry about Array comparisons because formulas returning Any may return null or\n  // object values represented as arrays (e.g. ['D', ...] for dates). Comparing those without\n  // distinguishing types would break the sort. Also, arrays need a special comparator.\n  if (type1 === 'object') {\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((result = nativeCompare(array1 = val1 instanceof Array, val2 instanceof Array)) !== 0) {\n      return result;\n    }\n    if (array1) {\n      return _arrayCompare(val1, val2);\n    }\n  }\n  if (type1 === 'string') {\n    return localeCompare(val1, val2);\n  }\n  return nativeCompare(val1, val2);\n}\n\nfunction _arrayCompare(val1: any[], val2: any[]): number {\n  for (let i = 0; i < val1.length; i++) {\n    if (i >= val2.length) {\n      return 1;\n    }\n    const value = typedCompare(val1[i], val2[i]);\n    if (value) {\n      return value;\n    }\n  }\n  return val1.length === val2.length ? 0 : -1;\n}\n\n/**\n * getters is an implementation of app.common.ColumnGetters\n */\nexport class SortFunc {\n  // updateSpec() or updateGetters() can populate these fields, used by the compare() method.\n  private _colGetters: ColumnGetter[] = [];  // Array of column getters (mapping rowId to column value)\n  private _directions: number[] = [];           // Array of 1 (ascending) or -1 (descending) flags.\n  private _comparators: Comparator[] = [];\n\n  constructor(private _getters: ColumnGetters) {}\n\n  public updateSpec(sortSpec: Sort.SortSpec): void {\n    // Prepare an array of column getters for each column in sortSpec.\n    this._colGetters = sortSpec.map(colSpec => {\n      return this._getters.getColGetter(colSpec);\n    }).filter(getter => getter) as ColumnGetter[];\n\n    // Collect \"ascending\" flags as an array of 1 or -1, one for each column.\n    this._directions = sortSpec.map(colSpec => Sort.direction(colSpec));\n\n    // Collect comparator functions\n    this._comparators = sortSpec.map(colSpec => {\n      const details = Sort.specToDetails(colSpec);\n      let comparator = typedCompare;\n      if (details.naturalSort) {\n        comparator = naturalCompare;\n      }\n      // Empty decorator should be added last, as first we want to compare\n      // empty values\n      if (details.emptyLast) {\n        comparator = emptyCompare(comparator);\n      }\n      return comparator;\n    });\n\n    const manualSortGetter = this._getters.getManualSortGetter();\n    if (manualSortGetter) {\n      this._colGetters.push(manualSortGetter);\n      this._directions.push(1);\n      this._comparators.push(typedCompare);\n    }\n  }\n\n  /**\n   * Returns 1 or -1 depending on whether rowId1 should be shown before rowId2.\n   */\n  public compare(rowId1: number, rowId2: number): number {\n    for (let i = 0, len = this._colGetters.length; i < len; i++) {\n      const getter = this._colGetters[i];\n      const val1 = getter(rowId1);\n      const val2 = getter(rowId2);\n      const comparator = this._comparators[i];\n      const result = comparator(val1, val2);\n      if (result !== 0 /* not equal */) {\n        return result * this._directions[i];\n      }\n    }\n    return nativeCompare(rowId1, rowId2);\n  }\n}\n","/**\n * Sort namespace provides helper function to work with sort expression.\n *\n * Sort expression is a list of column sort expressions, each describing how to\n * sort particular column. Column expression can be either:\n *\n * - Positive number: column with matching id will be sorted in ascending order\n * - Negative number: column will be sorted in descending order\n * - String containing a positive number: same as above\n * - String containing a negative number: same as above\n * - String containing a number and sorting options:\n *   '1:flag1;flag2;flag3'\n *   '-1:flag1;flag2;flag3'\n *   Sorting options modifies the sorting algorithm, supported options are:\n *   - orderByChoice: For choice column sorting function will use choice item order\n *                    instead of choice label text.\n *   - emptyLast:     Treat empty values as greater than non empty (default is empty values first).\n *   - naturalSort:   For text based columns, sorting function will compare strings with numbers\n *                    taking their numeric value rather then text representation ('a2' before 'a11)\n */\nexport namespace Sort {\n  /**\n   * Object base representation for column expression.\n   */\n  export interface ColSpecDetails {\n    colRef: number;\n    direction: Direction;\n    orderByChoice?: boolean;\n    emptyLast?: boolean;\n    naturalSort?: boolean;\n  }\n  /**\n   * Column expression type.\n   */\n  export type ColSpec = number | string;\n  /**\n   * Sort expression type, for example [1,-2, '3:emptyLast', '-4:orderByChoice']\n   */\n  export type SortSpec = Array<ColSpec>;\n  export type Direction = 1 | -1;\n  export const ASC: Direction = 1;\n  export const DESC: Direction = -1;\n\n  const NOT_FOUND = -1;\n\n  // Flag separator\n  const FLAG_SEPARATOR = \";\";\n  // Separator between colRef and sorting options.\n  const OPTION_SEPARATOR = \":\";\n\n  /**\n   * Checks if column expression has any sorting options.\n   */\n  export function hasOptions(colSpec: ColSpec | ColSpecDetails): boolean {\n    if (typeof colSpec === \"number\") {\n      return false;\n    }\n    const details = typeof colSpec !== \"object\" ? specToDetails(colSpec) : colSpec;\n    return Boolean(details.emptyLast || details.naturalSort || details.orderByChoice);\n  }\n\n  /**\n   * Converts column sort expression from object representation to encoded form.\n   */\n  export function detailsToSpec(d: ColSpecDetails): ColSpec {\n    const head = `${d.direction === ASC ? \"\" : \"-\"}${d.colRef}`;\n    const tail = [];\n    if (d.emptyLast) {\n      tail.push(\"emptyLast\");\n    }\n    if (d.naturalSort) {\n      tail.push(\"naturalSort\");\n    }\n    if (d.orderByChoice) {\n      tail.push(\"orderByChoice\");\n    }\n    if (!tail.length) {\n      return +head;\n    }\n    return head + (tail.length ? OPTION_SEPARATOR : \"\") + tail.join(FLAG_SEPARATOR);\n  }\n\n  /**\n   * Converts column expression to object representation.\n   */\n  export function specToDetails(colSpec: ColSpec): ColSpecDetails {\n    return typeof colSpec === \"number\"\n      ? {\n          colRef: Math.abs(colSpec),\n          direction: colSpec >= 0 ? ASC: DESC,\n        }\n      : parseColSpec(colSpec);\n  }\n\n  function parseColSpec(colString: string): ColSpecDetails {\n    const REGEX = /^(-)?(\\d+)(:([\\w\\d;]+))?$/;\n    const match = colString.match(REGEX);\n    if (!match) {\n      throw new Error(\"Error parsing sort expression \" + colString);\n    }\n    const [, sign, colRef, , flag] = match;\n    const flags = flag?.split(\";\");\n    return {\n      colRef: +colRef,\n      direction: sign === \"-\" ? DESC : ASC,\n      orderByChoice: flags?.includes(\"orderByChoice\"),\n      emptyLast: flags?.includes(\"emptyLast\"),\n      naturalSort: flags?.includes(\"naturalSort\"),\n    };\n  }\n\n  /**\n   * Extracts colRef (column row id) from column sorting expression.\n   */\n  export function getColRef(colSpec: ColSpec) {\n    if (typeof colSpec === \"number\") {\n      return Math.abs(colSpec);\n    }\n    return parseColSpec(colSpec).colRef;\n  }\n\n  /**\n   * Swaps column expressions.\n   */\n  export function swap(spec: SortSpec, colA: ColSpec, colB: ColSpec): SortSpec {\n    const aIndex = findColIndex(spec, colA);\n    const bIndex = findColIndex(spec, colB);\n    if (aIndex === NOT_FOUND || bIndex === NOT_FOUND) {\n      throw new Error(`Column expressions can be found (${colA} or ${colB})`);\n    }\n    const clone = spec.slice();\n    clone[aIndex] = spec[bIndex];\n    clone[bIndex] = spec[aIndex];\n    return clone;\n  }\n\n  /**\n   * Converts column expression order.\n   */\n  export function setColDirection(colSpec: ColSpec, dir: Direction): ColSpec {\n    if (typeof colSpec === \"number\") {\n      return Math.abs(colSpec) * dir;\n    }\n    return detailsToSpec({ ...parseColSpec(colSpec), direction: dir });\n  }\n\n  /**\n   * Creates simple column expression.\n   */\n  export function createColSpec(colRef: number, dir: Direction): ColSpec {\n    return colRef * dir;\n  }\n\n  /**\n   * Checks if a column expression is already included in sorting spec. Doesn't check sorting options.\n   */\n  export function contains(spec: SortSpec, colSpec: ColSpec, dir: Direction) {\n    const existing = findCol(spec, colSpec);\n    return !!existing && getColRef(existing) === getColRef(colSpec) && direction(existing) === dir;\n  }\n\n  export function containsOnly(spec: SortSpec, colSpec: ColSpec, dir: Direction) {\n    return spec.length === 1 && contains(spec, colSpec, dir);\n  }\n\n  /**\n   * Checks if a column is sorted in ascending order.\n   */\n  export function isAscending(colSpec: ColSpec): boolean {\n    if (typeof colSpec === \"number\") {\n      return colSpec >= 0;\n    }\n    return parseColSpec(colSpec).direction === ASC;\n  }\n\n  export function direction(colSpec: ColSpec): Direction {\n    return isAscending(colSpec) ? ASC : DESC;\n  }\n\n  /**\n   * Checks if two column expressions refers to the same column.\n   */\n  export function sameColumn(colSpec: ColSpec, colRef: ColSpec): boolean {\n    return getColRef(colSpec) === getColRef(colRef);\n  }\n\n  /**\n   * Swaps column id in column expression. Primary use for display columns.\n   */\n  export function swapColRef(colSpec: ColSpec, colRef: number): ColSpec {\n    if (typeof colSpec === \"number\") {\n      return colSpec >= 0 ? colRef : -colRef;\n    }\n    const spec = parseColSpec(colSpec);\n    return detailsToSpec({...spec, colRef});\n  }\n\n  /**\n   * Finds an index of column expression in a sorting expression.\n   */\n  export function findColIndex(sortSpec: SortSpec, colRef: ColSpec): number {\n    return sortSpec.findIndex(colSpec => sameColumn(colSpec, colRef));\n  }\n\n  export function removeCol(sortSpec: SortSpec, colRef: ColSpec): SortSpec {\n    return sortSpec.filter(col => getColRef(col) !== getColRef(colRef));\n  }\n\n  /**\n   * Finds a column expression in sorting expression (regardless sorting option).\n   */\n  export function findCol(sortSpec: SortSpec, colRef: ColSpec): ColSpec | undefined {\n    const result = sortSpec.find(colSpec => sameColumn(colSpec, colRef));\n    return result;\n  }\n\n  /**\n   * Inserts new column sort options at the index of an existing column options (and removes the old one).\n   * If the old column can't be found it does nothing.\n   * @param colRef Column id to remove\n   * @param newSpec New column sort options to put in place of the old one.\n   */\n  export function replace(sortSpec: SortSpec, colRef: number, newSpec: ColSpec | ColSpecDetails): SortSpec {\n    const index = findColIndex(sortSpec, colRef);\n    if (index >= 0) {\n      const updated = sortSpec.slice();\n      updated[index] = typeof newSpec === \"object\" ? detailsToSpec(newSpec) : newSpec;\n      return updated;\n    }\n    return sortSpec;\n  }\n\n  /**\n   * Flips direction for a single column, returns a new object.\n   */\n  export function flipCol(colSpec: ColSpec): ColSpec {\n    if (typeof colSpec === \"number\") {\n      return -colSpec;\n    }\n    const spec = parseColSpec(colSpec);\n    return detailsToSpec({ ...spec, direction: spec.direction === ASC ? DESC : ASC });\n  }\n\n  // Takes an activeSortSpec and sortRef to flip and returns a new\n  // activeSortSpec with that sortRef flipped (or original spec if sortRef not found).\n  export function flipSort(spec: SortSpec, colSpec: ColSpec): SortSpec {\n    const idx = findColIndex(spec, getColRef(colSpec));\n    if (idx !== NOT_FOUND) {\n      const newSpec = Array.from(spec);\n      newSpec[idx] = flipCol(newSpec[idx]);\n      return newSpec;\n    }\n    return spec;\n  }\n\n  export function setSortDirection(spec: SortSpec, colSpec: ColSpec, dir: Direction): SortSpec {\n    const idx = findColIndex(spec, getColRef(colSpec));\n    if (idx !== NOT_FOUND) {\n      const newSpec = Array.from(spec);\n      newSpec[idx] = setColDirection(newSpec[idx], dir);\n      return newSpec;\n    }\n    return spec;\n  }\n\n  // Parses the sortColRefs string, defaulting to an empty array on invalid input.\n  export function parseSortColRefs(sortColRefs: string): SortSpec {\n    try {\n      return JSON.parse(sortColRefs);\n    } catch (err) {\n      return [];\n    }\n  }\n\n  // Given the current sort spec, moves colSpec to be immediately before nextColSpec. Moves v\n  // to the end of the sort spec if nextColSpec is null.\n  // If the given colSpec or nextColSpec cannot be found, return sortSpec unchanged.\n  // ColSpec are identified only by colRef (order or options don't matter).\n  export function reorderSortRefs(spec: SortSpec, colSpec: ColSpec, nextColSpec: ColSpec | null): SortSpec {\n    const updatedSpec = spec.slice();\n\n    // Remove sortRef from sortSpec.\n    const _idx = findColIndex(updatedSpec, colSpec);\n    if (_idx === NOT_FOUND) {\n      return spec;\n    }\n    updatedSpec.splice(_idx, 1);\n\n    // Add sortRef to before nextSortRef\n    const _nextIdx = nextColSpec ? findColIndex(updatedSpec, nextColSpec) : updatedSpec.length;\n    if (_nextIdx === NOT_FOUND) {\n      return spec;\n    }\n    updatedSpec.splice(_nextIdx, 0, colSpec);\n\n    return updatedSpec;\n  }\n\n  // Helper function for query based sorting, which uses column names instead of columns ids.\n  // Translates expressions like -Pet, to an colRef expression like -1.\n  // NOTE: For column with zero index, it will return a string.\n  export function parseNames(sort: string[], colIdToRef: Map<string, number>): SortSpec {\n    const COL_SPEC_REG = /^(-)?([\\w]+)(:.+)?/;\n    return sort.map((colSpec) => {\n      const match = colSpec.match(COL_SPEC_REG);\n      if (!match) {\n        throw new Error(`unknown key ${colSpec}`);\n      }\n      const [, sign, key, options] = match;\n      let colRef = Number(key);\n      if (!isNaN(colRef)) {\n        // This might be valid colRef\n        if (![...colIdToRef.values()].includes(colRef)) {\n          throw new Error(`invalid column id ${key}`);\n        }\n      } else if (!colIdToRef.has(key)) {\n        throw new Error(`unknown key ${key}`);\n      } else {\n        colRef = colIdToRef.get(key)!;\n      }\n      return `${sign || \"\"}${colRef}${options ?? \"\"}`;\n    });\n  }\n}\n","// tslint:disable:max-classes-per-file\n\nimport {csvEncodeRow} from 'app/common/csvFormat';\nimport {CellValue} from 'app/common/DocActions';\nimport {DocData} from 'app/common/DocData';\nimport {DocumentSettings} from 'app/common/DocumentSettings';\nimport * as gristTypes from 'app/common/gristTypes';\nimport {getReferencedTableId, isList} from 'app/common/gristTypes';\nimport * as gutil from 'app/common/gutil';\nimport {isHiddenTable} from 'app/common/isHiddenTable';\nimport {buildNumberFormat, NumberFormatOptions} from 'app/common/NumberFormat';\nimport {createParserOrFormatterArguments, ReferenceParsingOptions} from 'app/common/ValueParser';\nimport {GristObjCode} from 'app/plugin/GristData';\nimport {decodeObject, GristDateTime} from 'app/plugin/objtypes';\nimport moment from 'moment-timezone';\nimport isPlainObject = require('lodash/isPlainObject');\n\nexport {PENDING_DATA_PLACEHOLDER} from 'app/plugin/objtypes';\n\nexport interface FormatOptions {\n  [option: string]: any;\n}\n\n/**\n * Formats a value of any type generically (with no type-specific options).\n */\nexport function formatUnknown(value: CellValue): string {\n  return formatDecoded(decodeObject(value));\n}\n\n/**\n * Returns true if the array contains other arrays or structured objects,\n * indicating that the list should be formatted like JSON rather than CSV.\n */\nfunction hasNestedObjects(value: any[]) {\n  return value.some(v => typeof v === 'object' && v && (Array.isArray(v) || isPlainObject(v)));\n}\n\n/**\n * Formats a decoded Grist value for displaying it. For top-level values, formats them the way we\n * like to see them in a cell or in, say, CSV export.\n * For top-level lists containing only simple values like strings and dates, formats them as a CSV row.\n * Nested lists and objects are formatted slightly differently, with quoted strings and ISO format for dates.\n */\nexport function formatDecoded(value: unknown, isTopLevel: boolean = true): string {\n  if (typeof value === 'object' && value) {\n    if (Array.isArray(value)) {\n      if (!isTopLevel || hasNestedObjects(value)) {\n        return '[' + value.map(v => formatDecoded(v, false)).join(', ') + ']';\n      } else {\n        return csvEncodeRow(value.map(v => formatDecoded(v, true)), {prettier: true});\n      }\n    } else if (isPlainObject(value)) {\n      const obj: any = value;\n      const items = Object.keys(obj).map(k => `${JSON.stringify(k)}: ${formatDecoded(obj[k], false)}`);\n      return '{' + items.join(', ') + '}';\n    } else if (isTopLevel && value instanceof GristDateTime) {\n      return moment(value).tz(value.timezone).format(\"YYYY-MM-DD HH:mm:ssZ\");\n    }\n    return String(value);\n  }\n  if (isTopLevel) {\n    return (value == null ? \"\" : String(value));\n  }\n  return JSON.stringify(value);\n}\n\nexport type IsRightTypeFunc = (value: CellValue) => boolean;\n\nexport class BaseFormatter {\n  protected isRightType: IsRightTypeFunc;\n\n  constructor(public type: string, public widgetOpts: FormatOptions, public docSettings: DocumentSettings) {\n    this.isRightType = gristTypes.isRightType(gristTypes.extractTypeFromColType(type)) ||\n      gristTypes.isRightType('Any')!;\n  }\n\n  /**\n   * Formats using this.format() if a value is of the right type for this formatter, or using\n   * AnyFormatter otherwise. This method the recommended API. There is no need to override it.\n   */\n  public formatAny(value: any, translate?: (val: string) => string): string {\n    return this.isRightType(value) ? this.format(value, translate) : formatUnknown(value);\n  }\n\n  /**\n   * Formats a value that matches the type of this formatter. This should be overridden by derived\n   * classes to handle values in formatter-specific ways.\n   */\n  protected format(value: any, _translate?: (val: string) => string): string {\n    return String(value);\n  }\n}\n\nexport class BoolFormatter extends BaseFormatter {\n  public format(value: boolean | 0 | 1, translate?: (val: string) => string): string {\n    if (typeof value === 'boolean' && translate) {\n      return translate(String(value));\n    }\n    return super.format(value, translate);\n  }\n}\n\nclass AnyFormatter extends BaseFormatter {\n  public format(value: any): string {\n    return formatUnknown(value);\n  }\n}\n\nexport class NumericFormatter extends BaseFormatter {\n  private _numFormat: Intl.NumberFormat;\n  private _formatter: (val: number) => string;\n\n  constructor(type: string, options: NumberFormatOptions, docSettings: DocumentSettings) {\n    super(type, options, docSettings);\n    this._numFormat = buildNumberFormat(options, docSettings);\n    this._formatter = (options.numSign === 'parens') ? this._formatParens : this._formatPlain;\n  }\n\n  public format(value: any): string {\n    return value === null ? '' : this._formatter(value);\n  }\n\n  public _formatPlain(value: number): string {\n    return this._numFormat.format(value);\n  }\n\n  public _formatParens(value: number): string {\n    // Surround positive numbers with spaces to align them visually to parenthesized numbers.\n    return (value >= 0) ?\n      ` ${this._numFormat.format(value)} ` :\n      `(${this._numFormat.format(-value)})`;\n  }\n}\n\nclass IntFormatter extends NumericFormatter {\n  constructor(type: string, opts: FormatOptions, docSettings: DocumentSettings) {\n    super(type, {decimals: 0, ...opts}, docSettings);\n  }\n}\n\nexport interface DateFormatOptions {\n  dateFormat?: string;\n}\n\nclass DateFormatter extends BaseFormatter {\n  protected _dateTimeFormat: string;\n  private _timezone: string;\n\n  constructor(type: string, widgetOpts: DateFormatOptions, docSettings: DocumentSettings, timezone: string = 'UTC') {\n    super(type, widgetOpts, docSettings);\n    // Allow encoded dates/datetimes ([d, number] or [D, number, timezone])\n    // which are found in formula columns of type Any,\n    // particularly reference display columns which are formatted here according to the visible column\n    // which will have the correct column type and options.\n    // Since these encoded objects are not expected in a Date/Datetime column and require\n    // being handled differently from just a number,\n    // we don't change `gristTypes.isRightType` which is used elsewhere.\n    this.isRightType = (value: any) => (\n      value === null ||\n      typeof value === \"number\" ||\n      Array.isArray(value) && (\n        value[0] === GristObjCode.Date ||\n        value[0] === GristObjCode.DateTime\n      )\n    );\n    this._dateTimeFormat = widgetOpts.dateFormat || 'YYYY-MM-DD';\n    this._timezone = timezone;\n  }\n\n  public format(value: any): string {\n    if (value === null) {\n      return '';\n    }\n\n    // For a DateTime object in an Any column, use the provided timezone (`value[2]`)\n    // Otherwise use the timezone configured for a DateTime column.\n    let timezone = this._timezone;\n    if (Array.isArray(value)) {\n      timezone = value[2] || timezone;\n      value = value[1];\n    }\n    // Now `value` is a number\n\n    const time = moment.tz(value * 1000, timezone);\n    return time.format(this._dateTimeFormat);\n  }\n}\n\nexport interface DateTimeFormatOptions extends DateFormatOptions {\n  timeFormat?: string;\n}\n\nclass DateTimeFormatter extends DateFormatter {\n  constructor(type: string, widgetOpts: DateTimeFormatOptions, docSettings: DocumentSettings) {\n    const timezone = gutil.removePrefix(type, \"DateTime:\") || '';\n    // Pass up the original widgetOpts. It's helpful to have them available; e.g. ExcelFormatter\n    // takes options from an initialized ValueFormatter.\n    super(type, widgetOpts, docSettings, timezone);\n    const timeFormat = widgetOpts.timeFormat === undefined ? 'h:mma' : widgetOpts.timeFormat;\n    this._dateTimeFormat = (widgetOpts.dateFormat || 'YYYY-MM-DD') + \" \" + timeFormat;\n  }\n}\n\nclass RowIdFormatter extends BaseFormatter {\n  public widgetOpts: { tableId: string };\n\n  public format(value: number): string {\n    return value > 0 ? `${this.widgetOpts.tableId}[${value}]` : \"\";\n  }\n}\n\ninterface ReferenceFormatOptions {\n  visibleColFormatter?: BaseFormatter;\n}\n\nclass ReferenceFormatter extends BaseFormatter {\n  public widgetOpts: ReferenceFormatOptions;\n  protected visibleColFormatter: BaseFormatter;\n\n  constructor(type: string, widgetOpts: ReferenceFormatOptions, docSettings: DocumentSettings) {\n    super(type, widgetOpts, docSettings);\n    // widgetOpts.visibleColFormatter shouldn't be undefined, but it can be if a referencing column\n    // is displaying another referencing column, which is partially prohibited in the UI but still possible.\n    this.visibleColFormatter = widgetOpts.visibleColFormatter ||\n      createFormatter('Id', {tableId: getReferencedTableId(type)}, docSettings);\n  }\n\n  public formatAny(value: any): string {\n    /*\n    An invalid value in a referencing column is saved as a string and becomes AltText in the data engine.\n    Then the display column formula (e.g. $person.first_name) raises an InvalidTypedValue trying to access\n    an attribute of that AltText.\n    This would normally lead to the formatter displaying `#Invalid Ref[List]: ` before the string value.\n    That's inconsistent with how the cell is displayed (just the string value in pink)\n    and with how invalid values in other columns are formatted (just the string).\n    It's just a result of the formatter receiving a value from the display column, not the actual column.\n    It's also likely to inconvenience users trying to import/migrate/convert data.\n    So we suppress the error here and just show the text.\n    It's still technically possible for the column to display an actual InvalidTypedValue exception from a formula\n    and this will suppress that too, but this is unlikely and seems worth it.\n    */\n    if (\n      Array.isArray(value)\n      && value[0] === GristObjCode.Exception\n      && value[1] === \"InvalidTypedValue\"\n      && value[2]?.startsWith?.(\"Ref\")\n    ) {\n      return value[3];\n    }\n    return this.formatNotInvalidRef(value);\n  }\n\n  protected formatNotInvalidRef(value: any) {\n    return this.visibleColFormatter.formatAny(value);\n  }\n}\n\nclass ReferenceListFormatter extends ReferenceFormatter {\n  protected formatNotInvalidRef(value: any): string {\n    // Part of this repeats the logic in BaseFormatter.formatAny which is overridden in ReferenceFormatter\n    // It also ensures that complex lists (e.g. if this RefList is displaying a ChoiceList)\n    // are formatted as JSON instead of CSV.\n    if (!isList(value) || hasNestedObjects(decodeObject(value) as CellValue[])) {\n      return formatUnknown(value);\n    }\n    // In the most common case, lists of simple objects like strings or dates\n    // are formatted like a CSV.\n    // This is similar to formatUnknown except the inner values are\n    // formatted according to the visible column options.\n    const formattedValues = value.slice(1).map(v => super.formatNotInvalidRef(v));\n    return csvEncodeRow(formattedValues, {prettier: true});\n  }\n}\n\nconst formatters: { [name: string]: typeof BaseFormatter } = {\n  Numeric: NumericFormatter,\n  Int: IntFormatter,\n  Bool: BoolFormatter,\n  Date: DateFormatter,\n  DateTime: DateTimeFormatter,\n  Ref: ReferenceFormatter,\n  RefList: ReferenceListFormatter,\n  Id: RowIdFormatter,\n  // We don't list anything that maps to AnyFormatter, since that's the default.\n};\n\n/**\n * Takes column type, widget options and document settings, and returns a constructor\n * with a format function that can properly convert a value passed to it into the\n * right format for that column.\n */\nexport function createFormatter(type: string, widgetOpts: FormatOptions, docSettings: DocumentSettings): BaseFormatter {\n  const ctor = formatters[gristTypes.extractTypeFromColType(type)] || AnyFormatter;\n  return new ctor(type, widgetOpts, docSettings);\n}\n\nexport interface FullFormatterArgs {\n  docData: DocData;\n  type: string;\n  widgetOpts: FormatOptions;\n  visibleColType: string;\n  visibleColWidgetOpts: FormatOptions;\n  docSettings: DocumentSettings;\n}\n\n/**\n * Returns a constructor\n * with a format function that can properly convert a value passed to it into the\n * right format for that column.\n *\n * Pass fieldRef (a row ID of _grist_Views_section_field) to use the settings of that view field\n * instead of the table column.\n */\nexport function createFullFormatterFromDocData(\n  docData: DocData,\n  colRef: number,\n  fieldRef?: number,\n): BaseFormatter {\n  const [type, widgetOpts, docSettings] = createParserOrFormatterArguments(docData, colRef, fieldRef);\n  const {visibleColType, visibleColWidgetOpts} = widgetOpts as ReferenceParsingOptions;\n  return createFullFormatterRaw({\n    docData,\n    type,\n    widgetOpts,\n    visibleColType,\n    visibleColWidgetOpts,\n    docSettings,\n  });\n}\n\nexport function createFullFormatterRaw(args: FullFormatterArgs) {\n  const {type, widgetOpts, docSettings} = args;\n  const visibleColFormatter = createVisibleColFormatterRaw(args);\n  return createFormatter(type, {...widgetOpts, visibleColFormatter}, docSettings);\n}\n\nexport function createVisibleColFormatterRaw(\n  {\n    docData,\n    docSettings,\n    type,\n    visibleColType,\n    visibleColWidgetOpts,\n    widgetOpts\n  }: FullFormatterArgs\n): BaseFormatter {\n  let referencedTableId = gristTypes.getReferencedTableId(type);\n  if (!referencedTableId) {\n    return createFormatter(type, widgetOpts, docSettings);\n  } else if (visibleColType) {\n    return createFormatter(visibleColType, visibleColWidgetOpts, docSettings);\n  } else {\n    // This column displays the Row ID, e.g. Table1[2]\n    // Make referencedTableId empty if the table is hidden\n    const tablesData = docData.getMetaTable(\"_grist_Tables\");\n    const tableRef = tablesData.findRow(\"tableId\", referencedTableId);\n    if (isHiddenTable(tablesData, tableRef)) {\n      referencedTableId = \"\";\n    }\n    return createFormatter('Id', {tableId: referencedTableId}, docSettings);\n  }\n}\n","import {csvDecodeRow} from 'app/common/csvFormat';\nimport {BulkColValues, CellValue, ColValues, UserAction} from 'app/common/DocActions';\nimport {DocData} from 'app/common/DocData';\nimport {DocumentSettings} from 'app/common/DocumentSettings';\nimport * as gristTypes from 'app/common/gristTypes';\nimport {getReferencedTableId, isFullReferencingType} from 'app/common/gristTypes';\nimport * as gutil from 'app/common/gutil';\nimport {safeJsonParse} from 'app/common/gutil';\nimport {NumberFormatOptions} from 'app/common/NumberFormat';\nimport NumberParse from 'app/common/NumberParse';\nimport {parseDateStrict, parseDateTime} from 'app/common/parseDate';\nimport {MetaRowRecord, TableData} from 'app/common/TableData';\nimport {DateFormatOptions, DateTimeFormatOptions, formatDecoded, FormatOptions} from 'app/common/ValueFormatter';\nimport {encodeObject} from 'app/plugin/objtypes';\nimport flatMap = require('lodash/flatMap');\nimport mapValues = require('lodash/mapValues');\n\n\nexport class ValueParser {\n  constructor(public type: string, public widgetOpts: FormatOptions, public docSettings: DocumentSettings) {\n  }\n\n  public cleanParse(value: string): any {\n    if (!value) {\n      return value;\n    }\n    return this.parse(value) ?? value;\n  }\n\n  public parse(value: string): any {\n    return value;\n  }\n\n}\n\nclass IdentityParser extends ValueParser {\n}\n\nexport class NumericParser extends ValueParser {\n  private _parse: NumberParse;\n\n  constructor(type: string, options: NumberFormatOptions, docSettings: DocumentSettings) {\n    super(type, options, docSettings);\n    this._parse = NumberParse.fromSettings(docSettings, options);\n  }\n\n  public parse(value: string): number | null {\n    return this._parse.parse(value)?.result ?? null;\n  }\n}\n\nclass DateParser extends ValueParser {\n  public parse(value: string): any {\n    return parseDateStrict(value, (this.widgetOpts as DateFormatOptions).dateFormat!);\n  }\n}\n\nclass DateTimeParser extends ValueParser {\n  constructor(type: string, widgetOpts: DateTimeFormatOptions, docSettings: DocumentSettings) {\n    super(type, widgetOpts, docSettings);\n    const timezone = gutil.removePrefix(type, \"DateTime:\") || '';\n    this.widgetOpts = {...widgetOpts, timezone};\n  }\n\n  public parse(value: string): any {\n    return parseDateTime(value, this.widgetOpts);\n  }\n}\n\n\nclass ChoiceListParser extends ValueParser {\n  public cleanParse(value: string): string[] | null {\n    value = value.trim();\n    const result = (\n      this._parseJson(value) ||\n      this._parseCsv(value)\n    ).map(v => v.trim())\n      .filter(v => v);\n    if (!result.length) {\n      return null;\n    }\n    return [\"L\", ...result];\n  }\n\n  private _parseJson(value: string): string[] | undefined {\n    // Don't parse JSON non-arrays\n    if (value[0] === \"[\") {\n      const arr: unknown[] | null = safeJsonParse(value, null);\n      return arr\n        // Remove nulls and empty strings\n        ?.filter(v => v || v === 0)\n        // Convert values to strings, formatting nested JSON objects/arrays as JSON\n        .map(v => formatDecoded(v));\n    }\n  }\n\n  private _parseCsv(value: string): string[] {\n    // Split everything on newlines which are not allowed by the choice editor.\n    return flatMap(value.split(/[\\n\\r]+/), row => {\n      return csvDecodeRow(row)\n        .map(v => v.trim());\n    });\n  }\n}\n\n/**\n * This is different from other widget options which are simple JSON\n * stored on the field. These have to be specially derived\n * for referencing columns. See createParser.\n */\nexport interface ReferenceParsingOptions {\n  visibleColId: string;\n  visibleColType: string;\n  visibleColWidgetOpts: FormatOptions;\n\n  // If this is provided and loaded, the ValueParser will look up values directly.\n  // Otherwise an encoded lookup will be produced for the data engine to handle.\n  tableData?: TableData;\n}\n\nexport class ReferenceParser extends ValueParser {\n  public widgetOpts: ReferenceParsingOptions;\n  public tableData = this.widgetOpts.tableData;\n  public visibleColParser = createParserRaw(\n    this.widgetOpts.visibleColType,\n    this.widgetOpts.visibleColWidgetOpts,\n    this.docSettings,\n  );\n\n  protected _visibleColId = this.widgetOpts.visibleColId;\n\n  public parse(raw: string): any {\n    const value = this.visibleColParser.cleanParse(raw);\n    return this.lookup(value, raw);\n  }\n\n  public lookup(value: any, raw: string): any {\n    if (value == null || value === \"\" || !raw) {\n      return 0;  // default value for a reference column\n    }\n\n    if (this._visibleColId === 'id') {\n      const n = Number(value);\n      if (Number.isInteger(n)) {\n        value = n;\n        // Don't return yet because we need to check that this row ID exists\n      } else {\n        return raw;\n      }\n    }\n\n    if (!this.tableData?.isLoaded) {\n      const options: { column: string, raw?: string } = {column: this._visibleColId};\n      if (value !== raw) {\n        options.raw = raw;\n      }\n      return ['l', value, options];\n    }\n\n    return this.tableData.findMatchingRowId({[this._visibleColId]: value}) || raw;\n  }\n}\n\nexport class ReferenceListParser extends ReferenceParser {\n  public parse(raw: string): any {\n    let values: any[] | null;\n    try {\n      values = JSON.parse(raw);\n    } catch {\n      values = null;\n    }\n    if (!Array.isArray(values)) {\n      // csvDecodeRow should never raise an exception\n      values = csvDecodeRow(raw);\n    }\n    values = values.map(v => typeof v === \"string\" ? this.visibleColParser.cleanParse(v) : encodeObject(v));\n\n    if (!values.length || !raw) {\n      return null;  // null is the default value for a reference list column\n    }\n\n    if (this._visibleColId === 'id') {\n      const numbers = values.map(Number);\n      if (numbers.every(Number.isInteger)) {\n        values = numbers;\n        // Don't return yet because we need to check that these row IDs exist\n      } else {\n        return raw;\n      }\n    }\n\n    if (!this.tableData?.isLoaded) {\n      const options: { column: string, raw?: string } = {column: this._visibleColId};\n      if (!(values.length === 1 && values[0] === raw)) {\n        options.raw = raw;\n      }\n      return ['l', values, options];\n    }\n\n    const rowIds: number[] = [];\n    for (const value of values) {\n      const rowId = this.tableData.findMatchingRowId({[this._visibleColId]: value});\n      if (rowId) {\n        rowIds.push(rowId);\n      } else {\n        // There's no matching value in the visible column, i.e. this is not a valid reference.\n        // We need to return a string which will become AltText.\n        return raw;\n      }\n    }\n    return ['L', ...rowIds];\n  }\n}\n\nexport const valueParserClasses: { [type: string]: typeof ValueParser } = {\n  Numeric: NumericParser,\n  Int: NumericParser,\n  Date: DateParser,\n  DateTime: DateTimeParser,\n  ChoiceList: ChoiceListParser,\n  Ref: ReferenceParser,\n  RefList: ReferenceListParser,\n  Attachments: ReferenceListParser,\n};\n\n/**\n * Returns a ValueParser which can parse strings into values appropriate for\n * a specific widget field or table column.\n * widgetOpts is usually the field/column's widgetOptions JSON\n * but referencing columns need more than that, see ReferenceParsingOptions above.\n */\nexport function createParserRaw(\n  type: string, widgetOpts: FormatOptions, docSettings: DocumentSettings\n): ValueParser {\n  const cls = valueParserClasses[gristTypes.extractTypeFromColType(type)] || IdentityParser;\n  return new cls(type, widgetOpts, docSettings);\n}\n\n/**\n * Returns a ValueParser which can parse strings into values appropriate for\n * a specific widget field or table column.\n *\n * Pass fieldRef (a row ID of _grist_Views_section_field) to use the settings of that view field\n * instead of the table column.\n */\nexport function createParser(\n  docData: DocData,\n  colRef: number,\n  fieldRef?: number,\n): ValueParser {\n  return createParserRaw(...createParserOrFormatterArguments(docData, colRef, fieldRef));\n}\n\n/**\n * Returns arguments suitable for createParserRaw or createFormatter. Only for internal use.\n *\n * Pass fieldRef (a row ID of _grist_Views_section_field) to use the settings of that view field\n * instead of the table column.\n */\nexport function createParserOrFormatterArguments(\n  docData: DocData,\n  colRef: number,\n  fieldRef?: number,\n): [string, object, DocumentSettings] {\n  const columnsTable = docData.getMetaTable('_grist_Tables_column');\n  const fieldsTable = docData.getMetaTable('_grist_Views_section_field');\n\n  const col = columnsTable.getRecord(colRef)!;\n  let fieldOrCol: MetaRowRecord<'_grist_Tables_column' | '_grist_Views_section_field'> = col;\n  if (fieldRef) {\n    const field = fieldsTable.getRecord(fieldRef);\n    fieldOrCol = field?.widgetOptions ? field : col;\n  }\n\n  return createParserOrFormatterArgumentsRaw(docData, col.type, fieldOrCol.widgetOptions, fieldOrCol.visibleCol);\n}\n\nexport function createParserOrFormatterArgumentsRaw(\n  docData: DocData,\n  type: string,\n  widgetOptions: string,\n  visibleColRef: number,\n): [string, object, DocumentSettings] {\n  const columnsTable = docData.getMetaTable('_grist_Tables_column');\n  const widgetOpts = safeJsonParse(widgetOptions, {});\n\n  if (isFullReferencingType(type)) {\n    const vcol = columnsTable.getRecord(visibleColRef);\n    widgetOpts.visibleColId = vcol?.colId || 'id';\n    widgetOpts.visibleColType = vcol?.type;\n    widgetOpts.visibleColWidgetOpts = safeJsonParse(vcol?.widgetOptions || '', {});\n    widgetOpts.tableData = docData.getTable(getReferencedTableId(type)!);\n  }\n\n  return [type, widgetOpts, docData.docSettings()];\n}\n\n/**\n * Returns a copy of `colValues` with string values parsed according to the type and options of each column.\n * `bulk` should be `true` if `colValues` is of type `BulkColValues`.\n */\nfunction parseColValues<T extends ColValues | BulkColValues>(\n  tableId: string, colValues: T, docData: DocData, bulk: boolean\n): T {\n  const columnsTable = docData.getMetaTable('_grist_Tables_column');\n  const tablesTable = docData.getMetaTable('_grist_Tables');\n  const tableRef = tablesTable.findRow('tableId', tableId);\n  if (!tableRef) {\n    return colValues;\n  }\n\n  return mapValues(colValues, (values, colId) => {\n    const colRef = columnsTable.findMatchingRowId({colId, parentId: tableRef});\n    if (!colRef) {\n      // Column not found - let something else deal with that\n      return values;\n    }\n\n    const parser = createParser(docData, colRef);\n\n    // Optimisation: If there's no special parser for this column type, do nothing\n    if (parser instanceof IdentityParser) {\n      return values;\n    }\n\n    function parseIfString(val: any) {\n      return typeof val === \"string\" ? parser.cleanParse(val) : val;\n    }\n\n    if (bulk) {\n      if (!Array.isArray(values)) {  // in case of bad input\n        return values;\n      }\n      // `colValues` is of type `BulkColValues`\n      return (values as CellValue[]).map(parseIfString);\n    } else {\n      // `colValues` is of type `ColValues`, `values` is just one value\n      return parseIfString(values);\n    }\n  });\n}\n\nexport function parseUserAction(ua: UserAction, docData: DocData): UserAction {\n  switch (ua[0]) {\n    case 'AddRecord':\n    case 'UpdateRecord':\n      return _parseUserActionColValues(ua, docData, false);\n    case 'BulkAddRecord':\n    case 'BulkUpdateRecord':\n    case 'ReplaceTableData':\n      return _parseUserActionColValues(ua, docData, true);\n    case 'AddOrUpdateRecord':\n      // Parse `require` (2) and `col_values` (3). The action looks like:\n      // ['AddOrUpdateRecord', table_id, require, col_values, options]\n      // (`col_values` is called `fields` in the API)\n      ua = _parseUserActionColValues(ua, docData, false, 2);\n      ua = _parseUserActionColValues(ua, docData, false, 3);\n      return ua;\n    case 'BulkAddOrUpdateRecord':\n      ua = _parseUserActionColValues(ua, docData, true, 2);\n      ua = _parseUserActionColValues(ua, docData, true, 3);\n      return ua;\n    default:\n      return ua;\n  }\n}\n\n// Returns a copy of the user action with one element parsed, by default the last one\nfunction _parseUserActionColValues(ua: UserAction, docData: DocData, parseBulk: boolean, index?: number\n): UserAction {\n  ua = ua.slice();\n  const tableId = ua[1] as string;\n  if (index === undefined) {\n    index = ua.length - 1;\n  }\n  const colValues = ua[index] as ColValues | BulkColValues;\n  ua[index] = parseColValues(tableId, colValues, docData, parseBulk);\n  return ua;\n}\n","import moment from \"moment-timezone\";\n\n/**\n * Returns the current local time. Allows overriding via a \"currentTime\" URL parameter, for the sake\n * of tests.\n */\nexport default function getCurrentTime(): moment.Moment {\n  const getDefault = () => moment();\n  if (typeof window === 'undefined' || !window) { return getDefault(); }\n  const searchParams = new URLSearchParams(window.location.search);\n\n  return searchParams.has('currentTime') ? moment(searchParams.get('currentTime') || undefined) : getDefault();\n}\n","import { CellValue, CellVersions } from 'app/common/DocActions';\nimport { GristObjCode, GristType } from 'app/plugin/GristData';\nimport isString = require('lodash/isString');\nimport { removePrefix } from \"./gutil\";\n\n// tslint:disable:object-literal-key-quotes\n\nexport type GristTypeInfo =\n  {type: 'DateTime', timezone: string} |\n  {type: 'Ref', tableId: string} |\n  {type: 'RefList', tableId: string} |\n  {type: Exclude<GristType, 'DateTime'|'Ref'|'RefList'>};\n\nexport const MANUALSORT = 'manualSort';\n\n// Whether a column is internal and should be hidden.\nexport function isHiddenCol(colId: string): boolean {\n  return colId.startsWith('gristHelper_') || colId === MANUALSORT;\n}\n\n// This mapping includes both the default value, and its representation for SQLite.\nconst _defaultValues: {[key in GristType]: [CellValue, string]} = {\n  'Any':              [ null,  \"NULL\"  ],\n  'Attachments':      [ null,  \"NULL\"  ],\n  'Blob':             [ null,  \"NULL\"  ],\n  // Bool is only supported by SQLite as 0 and 1 values.\n  'Bool':             [ false, \"0\" ],\n  'Choice':           [ '',    \"''\"    ],\n  'ChoiceList':       [ null,  \"NULL\"  ],\n  'Date':             [ null,  \"NULL\"  ],\n  'DateTime':         [ null,  \"NULL\"  ],\n  'Id':               [ 0,     \"0\"     ],\n  'Int':              [ 0,     \"0\"     ],\n  // Note that \"1e999\" is a way to store Infinity into SQLite. This is verified by \"Defaults\"\n  // tests in DocStorage.js. See also http://sqlite.1065341.n5.nabble.com/Infinity-td55327.html.\n  'ManualSortPos':    [ Number.POSITIVE_INFINITY, \"1e999\" ],\n  'Numeric':          [ 0,     \"0\"     ],\n  'PositionNumber':   [ Number.POSITIVE_INFINITY, \"1e999\" ],\n  'Ref':              [ 0,     \"0\"     ],\n  'RefList':          [ null,  \"NULL\"  ],\n  'Text':             [ '',    \"''\"    ],\n};\n\n\n/**\n * Given a grist column type (e.g Text, Numeric, ...) returns the default value for that type.\n * If options.sqlFormatted is true, returns the representation of the value for SQLite.\n */\nexport function getDefaultForType(colType: string, options: {sqlFormatted?: boolean} = {}) {\n  const type = extractTypeFromColType(colType);\n  return (_defaultValues[type as GristType] || _defaultValues.Any)[options.sqlFormatted ? 1 : 0];\n}\n\n/**\n * Convert a type like 'Numeric', 'DateTime:America/New_York', or 'Ref:Table1' to a GristTypeInfo\n * object.\n */\nexport function extractInfoFromColType(colType: string): GristTypeInfo {\n  if (colType === \"Attachments\") {\n    return {type: \"RefList\", tableId: \"_grist_Attachments\"};\n  }\n  const colon = colType.indexOf(':');\n  const [type, arg] = (colon === -1) ? [colType] : [colType.slice(0, colon), colType.slice(colon + 1)];\n  return (type === 'Ref') ? {type, tableId: String(arg)} :\n    (type === 'RefList')  ? {type, tableId: String(arg)} :\n    (type === 'DateTime') ? {type, timezone: String(arg)} :\n    {type} as GristTypeInfo;\n}\n\n/**\n * Re-encodes a CellValue of a given Grist type as a value suitable to use in an Any column. E.g.\n *    reencodeAsAny(123, 'Numeric') -> 123\n *    reencodeAsAny(123, 'Date') -> ['d', 123]\n *    reencodeAsAny(123, 'Reference', 'Table1') -> ['R', 'Table1', 123]\n */\nexport function reencodeAsAny(value: CellValue, typeInfo: GristTypeInfo): CellValue {\n  if (typeof value === 'number') {\n    switch (typeInfo.type) {\n      case 'Date': return [GristObjCode.Date, value];\n      case 'DateTime': return [GristObjCode.DateTime, value, typeInfo.timezone];\n      case 'Ref': return [GristObjCode.Reference, typeInfo.tableId, value];\n    }\n  }\n  return value;\n}\n\n\n/**\n * Returns whether a value (as received in a DocAction) represents a custom object.\n */\nexport function isObject(value: CellValue): value is [GristObjCode, any?] {\n  return Array.isArray(value);\n}\n\n/**\n * Returns GristObjCode of the value if the value is an object, or null otherwise.\n * The return type includes any string, since we should not assume we can only get valid codes.\n */\nexport function getObjCode(value: CellValue): GristObjCode|string|null {\n  return Array.isArray(value) ? value[0] : null;\n}\n\n/**\n * Returns whether a value (as received in a DocAction) represents a raised exception.\n */\nexport function isRaisedException(value: CellValue): boolean {\n  return getObjCode(value) === GristObjCode.Exception;\n}\n\n/**\n * Returns whether a value (as received in a DocAction) represents a group of versions for\n * a comparison or conflict.\n */\nexport function isVersions(value: CellValue): value is [GristObjCode.Versions, CellVersions] {\n  return getObjCode(value) === GristObjCode.Versions;\n}\n\nexport function isSkip(value: CellValue): value is [GristObjCode.Skip] {\n  return getObjCode(value) === GristObjCode.Skip;\n}\n\nexport function isCensored(value: CellValue): value is [GristObjCode.Censored] {\n  return getObjCode(value) === GristObjCode.Censored;\n}\n\n/**\n * Returns whether a value (as received in a DocAction) represents a list.\n */\nexport function isList(value: CellValue): value is [GristObjCode.List, ...CellValue[]] {\n  return Array.isArray(value) && value[0] === GristObjCode.List;\n}\n\n/**\n * Returns whether a value (as received in a DocAction) represents a reference to a record.\n */\nexport function isReference(value: CellValue): value is [GristObjCode.Reference, string, number] {\n  return Array.isArray(value) && value[0] === GristObjCode.Reference;\n}\n\n/**\n * Returns whether a value (as received in a DocAction) represents a reference list (RecordSet).\n */\nexport function isReferenceList(value: CellValue): value is [GristObjCode.ReferenceList, string, number[]] {\n  return Array.isArray(value) && value[0] === GristObjCode.ReferenceList;\n}\n\n/**\n * Returns whether a value (as received in a DocAction) represents a reference or reference list.\n */\nexport function isReferencing(value: CellValue):\n  value is [GristObjCode.ReferenceList|GristObjCode.Reference, string, number[]|number]\n{\n  return Array.isArray(value) &&\n    (value[0] === GristObjCode.ReferenceList || value[0] === GristObjCode.Reference);\n}\n\n/**\n * Returns whether a value (as received in a DocAction) represents a list or is null,\n * which is a valid value for list types in grist.\n */\nexport function isListOrNull(value: CellValue): boolean {\n  return value === null || isList(value);\n}\n\n/**\n * Returns whether a value (as received in a DocAction) represents an empty list.\n */\nexport function isEmptyList(value: CellValue): boolean {\n  return Array.isArray(value) && value.length === 1 && value[0] === GristObjCode.List;\n}\n\nfunction isNumber(v: CellValue) { return typeof v === 'number' || typeof v === 'boolean'; }\nfunction isNumberOrNull(v: CellValue) { return isNumber(v) || v === null; }\nfunction isBoolean(v: CellValue) { return typeof v === 'boolean' || v === 1 || v === 0; }\n\n// These values are not regular cell values, even in a column of type Any.\nconst abnormalValueTypes: string[] = [GristObjCode.Exception, GristObjCode.Pending, GristObjCode.Skip,\n                                      GristObjCode.Unmarshallable, GristObjCode.Versions];\n\nfunction isNormalValue(value: CellValue) {\n  return !abnormalValueTypes.includes(getObjCode(value)!);\n}\n\n/**\n * Map of Grist type to an \"isRightType\" checker function, which determines if a given values type\n * matches the declared type of the column.\n */\nconst rightType: {[key in GristType]: (value: CellValue) => boolean} = {\n  Any:            isNormalValue,\n  Attachments:    isListOrNull,\n  Text:           isString,\n  Blob:           isString,\n  Int:            isNumberOrNull,\n  Bool:           isBoolean,\n  Date:           isNumberOrNull,\n  DateTime:       isNumberOrNull,\n  Numeric:        isNumberOrNull,\n  Id:             isNumber,\n  PositionNumber: isNumber,\n  ManualSortPos:  isNumber,\n  Ref:            isNumber,\n  RefList:        isListOrNull,\n  Choice:         isString,\n  ChoiceList:     isListOrNull,\n};\n\nexport function isRightType(type: string): undefined | ((value: CellValue, options?: any) => boolean) {\n  return rightType[type as GristType];\n}\n\nexport function extractTypeFromColType(type: string): string {\n  if (!type) { return type; }\n  const colon = type.indexOf(':');\n  return (colon === -1 ? type : type.slice(0, colon));\n}\n\n/**\n * Enum for values of columns' recalcWhen property, corresponding to Python definitions in\n * schema.py.\n */\nexport enum RecalcWhen {\n  DEFAULT = 0,         // Calculate on new records or when any field in recalcDeps changes.\n  NEVER = 1,           // Don't calculate automatically (but user can trigger manually)\n  MANUAL_UPDATES = 2,  // Calculate on new records and on manual updates to any data field.\n}\n\n\n/**\n * Converts SQL type strings produced by the Sequelize library into its corresponding\n * Grist type. The list of types is based on an analysis of SQL type string outputs\n * produced by the Sequelize library (mostly covered in lib/data-types.js). Some\n * additional engine/dialect specific types are detailed in dialect directories.\n *\n * TODO: A handful of exotic SQL types (mostly from PostgreSQL) will currently throw an\n * Error, rather than returning a type. Further testing is required to determine\n * whether Grist can manage those data types.\n *\n * @param  {String} sqlType A string produced by Sequelize's describeTable query\n * @return {String}         The corresponding Grist type string\n * @throws {Error}          If the sqlType is unrecognized or unsupported\n */\nexport function sequelizeToGristType(sqlType: string): GristType {\n  // Sequelize type strings can include parens (e.g., `CHAR(10)`). This function\n  // ignores those additional details when determining the Grist type.\n  let endMarker = sqlType.length;\n  const parensMarker = sqlType.indexOf('(');\n  endMarker = parensMarker > 0 ? parensMarker : endMarker;\n\n  // Type strings might also include a space after the basic type description.\n  // The type `DOUBLE PRECISION` is one such example, but modifiers or attributes\n  // relevant to the type might also appear after the type itself (e.g., UNSIGNED,\n  // NONZERO). These are ignored when determining the Grist type.\n  const spaceMarker = sqlType.indexOf(' ');\n  endMarker = spaceMarker > 0 && spaceMarker < endMarker ? spaceMarker : endMarker;\n\n  switch (sqlType.substring(0, endMarker)) {\n    case 'INTEGER':\n    case 'BIGINT':\n    case 'SMALLINT':\n    case 'INT':\n      return 'Int';\n    case 'NUMBER':\n    case 'FLOAT':\n    case 'DECIMAL':\n    case 'NUMERIC':\n    case 'REAL':\n    case 'DOUBLE':\n    case 'DOUBLE PRECISION':\n      return 'Numeric';\n    case 'BOOLEAN':\n    case 'TINYINT':\n      return 'Bool';\n    case 'STRING':\n    case 'CHAR':\n    case 'TEXT':\n    case 'UUID':\n    case 'UUIDV1':\n    case 'UUIDV4':\n    case 'VARCHAR':\n    case 'NVARCHAR':\n    case 'TINYTEXT':\n    case 'MEDIUMTEXT':\n    case 'LONGTEXT':\n    case 'ENUM':\n      return 'Text';\n    case 'TIME':\n    case 'DATE':\n    case 'DATEONLY':\n    case 'DATETIME':\n    case 'NOW':\n      return 'Text';\n    case 'BLOB':\n    case 'TINYBLOB':\n    case 'MEDIUMBLOB':\n    case 'LONGBLOB':\n      // TODO: Passing binary data to the Sandbox is throwing Errors. Proper support\n      // for these Blob data types requires some more investigation.\n      throw new Error('SQL type: `' + sqlType + '` is currently unsupported');\n    case 'NONE':\n    case 'HSTORE':\n    case 'JSON':\n    case 'JSONB':\n    case 'VIRTUAL':\n    case 'ARRAY':\n    case 'RANGE':\n    case 'GEOMETRY':\n      throw new Error('SQL type: `' + sqlType + '` is currently untested');\n    default:\n      throw new Error('Unrecognized datatype: `' + sqlType + '`');\n  }\n}\n\nexport function getReferencedTableId(type: string) {\n  if (type === \"Attachments\") {\n    return \"_grist_Attachments\";\n  }\n  return removePrefix(type, \"Ref:\") || removePrefix(type, \"RefList:\");\n}\n\nexport function isRefListType(type: string) {\n  return type === \"Attachments\" || type?.startsWith('RefList:');\n}\n\nexport function isListType(type: string) {\n  return type === \"ChoiceList\" || isRefListType(type);\n}\n\nexport function isNumberType(type: string|undefined) {\n  return ['Numeric', 'Int'].includes(type || '');\n}\n\nexport function isDateLikeType(type: string) {\n  return type === 'Date' || type.startsWith('DateTime');\n}\n\nexport function isFullReferencingType(type: string) {\n  return type.startsWith('Ref:') || isRefListType(type);\n}\n\nexport function isValidRuleValue(value: CellValue|undefined) {\n  // We want to strictly test if a value is boolean, when the value is 0 or 1 it might\n  // indicate other number in the future.\n  return value === null || typeof value === 'boolean';\n}\n\nexport type RefListValue = [GristObjCode.List, ...number[]]|null;\n\n/**\n * Type of cell metadata information.\n */\nexport enum CellInfoType {\n  COMMENT = 1,\n}\n","import {TableData} from 'app/common/TableData';\nimport {UIRowId} from 'app/plugin/GristAPI';\n\n/**\n * Return whether a table (identified by the rowId of its metadata record) should\n * normally be hidden from the user (e.g. as an option in the page-widget picker).\n */\nexport function isHiddenTable(tablesData: TableData, tableRef: UIRowId): boolean {\n  const tableId = tablesData.getValue(tableRef, 'tableId') as string|undefined;\n  // The `!tableId` check covers the case of censored tables (see isTableCensored() below).\n  return !tableId || isSummaryTable(tablesData, tableRef) || tableId.startsWith('GristHidden_');\n}\n\n/**\n * Return whether a table (identified by the rowId of its metadata record) is a\n * summary table.\n */\nexport function isSummaryTable(tablesData: TableData, tableRef: UIRowId): boolean {\n  return tablesData.getValue(tableRef, 'summarySourceTable') !== 0;\n}\n\n// Check if a table record (from _grist_Tables) is censored.\n// Metadata records get censored by clearing certain of their fields, so it's expected that a\n// record may exist even though various code should consider it as hidden.\nexport function isTableCensored(tablesData: TableData, tableRef: UIRowId): boolean {\n  const tableId = tablesData.getValue(tableRef, 'tableId');\n  return !tableId;\n}\n","import escapeRegExp = require('lodash/escapeRegExp');\nimport last = require('lodash/last');\nimport memoize = require('lodash/memoize');\nimport {getDistinctValues, isNonNullish} from 'app/common/gutil';\n// Simply importing 'moment-guess' inconsistently imports bundle.js or bundle.esm.js depending on environment\nimport guessFormat from '@gristlabs/moment-guess/dist/bundle.js';\nimport moment from 'moment-timezone';\n\n// When using YY format, use a consistent interpretation in datepicker and in moment parsing: add\n// 2000 if the result is at most 10 years greater than the current year; otherwise add 1900. See\n// https://bootstrap-datepicker.readthedocs.io/en/latest/options.html#assumenearbyyear and\n// \"Parsing two digit years\" in https://momentjs.com/docs/#/parsing/string-format/.\nexport const TWO_DIGIT_YEAR_THRESHOLD = 10;\nconst MAX_TWO_DIGIT_YEAR = new Date().getFullYear() + TWO_DIGIT_YEAR_THRESHOLD - 2000;\n\n// Moment suggests that overriding this is fine, but we need to force TypeScript to allow it.\n(moment as any).parseTwoDigitYear = function(yearString: string): number {\n  const year = parseInt(yearString, 10);\n  return year + (year > MAX_TWO_DIGIT_YEAR ? 1900 : 2000);\n};\n\n\n// Order of formats to try if the date cannot be parsed as the currently set format.\n// Formats are parsed in momentjs strict mode, but separator matching and the MM/DD\n// two digit requirement are ignored. Also, partial completion is permitted, so formats\n// may match even if only beginning elements are provided.\n// TODO: These should be affected by the user's locale/settings.\n// TODO: We may want to consider adding default time formats as well to support more\n//  time formats.\nconst PARSER_FORMATS: string[] = [\n  'M D YYYY',\n  'M D YY',\n  'M D',\n  'M',\n  'MMMM D YYYY',\n  'MMMM D',\n  'MMMM Do YYYY',\n  'MMMM Do',\n  'D MMMM YYYY',\n  'D MMMM',\n  'Do MMMM YYYY',\n  'Do MMMM',\n  'MMMM',\n  'MMM D YYYY',\n  'MMM D',\n  'MMM Do YYYY',\n  'MMM Do',\n  'D MMM YYYY',\n  'D MMM',\n  'Do MMM YYYY',\n  'Do MMM',\n  'MMM',\n  'YYYY M D',\n  'YYYY M',\n  'YYYY',\n  'D M YYYY',\n  'D M YY',\n  'D M',\n  'D'\n];\n\nconst UNAMBIGUOUS_FORMATS = [\n  'YYYY M D',\n  ...PARSER_FORMATS.filter(f => f.includes(\"MMM\")),\n];\n\nconst TIME_REGEX = /(?:^|\\s+|T)(?:(\\d\\d?)(?::(\\d\\d?)(?::(\\d\\d?))?)?|(\\d\\d?)(\\d\\d))\\s*([ap]m?)?$/i;\n// [^a-zA-Z] because no letters are allowed directly before the abbreviation\nconst UTC_REGEX = /[^a-zA-Z](UTC?|GMT|Z)$/i;\nconst NUMERIC_TZ_REGEX = /([+-]\\d\\d?)(?::?(\\d\\d))?$/i;\n\n// Not picky about separators, so replace them in the date and format strings to be spaces.\nconst SEPARATORS = /[\\W_]+/g;\n\nconst tzAbbreviations = memoize((tzName: string): RegExp => {\n  // Some abbreviations are just e.g. +05\n  // and escaping the + seems better than filtering\n  const abbreviations = new Set(moment.tz.zone(tzName)!.abbrs.map(escapeRegExp));\n\n  const union = [...abbreviations].join('|');\n\n  // [^a-zA-Z] because no letters are allowed directly before the abbreviation\n  // so for example CEST won't match even if EST does\n  return new RegExp(`[^a-zA-Z](${union})$`, 'i');\n});\n\ninterface ParseOptions {\n  time?: string;\n  dateFormat?: string;\n  timeFormat?: string;\n  timezone?: string;\n}\n\n/**\n * parseDate - Attempts to parse a date string using several common formats. Returns the\n *  timestamp of the parsed date in seconds since epoch, or returns null on failure.\n * @param {String} date - The date string to parse.\n * @param {String} options.dateFormat - The preferred momentjs format to use to parse the\n *  date. This is attempted before the default formats.\n * @param {String} options.time - The time string to parse.\n * @param {String} options.timeFormat - The momentjs format to use to parse the time. This\n *  must be given if options.time is given.\n * @param {String} options.timezone - The timezone string for the date/time, which affects\n *  the resulting timestamp.\n */\nexport function parseDate(date: string, options: ParseOptions = {}): number | null {\n  // If no date, return null.\n  if (!date) {\n    return null;\n  }\n  const dateFormat = options.dateFormat || \"YYYY-MM-DD\";\n  const dateFormats = [..._buildVariations(dateFormat, date), ...PARSER_FORMATS];\n  const cleanDate = date.replace(SEPARATORS, ' ');\n  let datetime = cleanDate.trim();\n  let timeformat = '';\n  let time = options.time;\n  if (time) {\n    const parsedTimeZone = parseTimeZone(time, options.timezone!);\n    const parsedTime = standardizeTime(parsedTimeZone.remaining);\n    if (!parsedTime || parsedTime.remaining) {\n      return null;\n    }\n    time = parsedTime.time;\n    const {tzOffset} = parsedTimeZone;\n    datetime += ' ' + time + tzOffset;\n    timeformat = ' HH:mm:ss' + (tzOffset ? 'Z' : '');\n  }\n  for (const f of dateFormats) {\n    const fullFormat = f + timeformat;\n    const m = moment.tz(datetime, fullFormat, true, options.timezone || 'UTC');\n    if (m.isValid()) {\n      return m.valueOf() / 1000;\n    }\n  }\n  return null;\n}\n\n/**\n * Similar to parseDate, with these differences:\n * - Only for a date (no time part)\n * - Only falls back to UNAMBIGUOUS_FORMATS, not the full PARSER_FORMATS\n * - Optionally adds all dates which match some format to `results`, otherwise returns first match.\n * This is safer so it can be used for parsing when pasting a large number of dates\n * and won't silently swap around day and month.\n */\nexport function parseDateStrict(\n  date: string, dateFormat: string | null, results?: Set<number>, timezone: string = 'UTC'\n): number | undefined {\n  if (!date) {\n    return;\n  }\n  dateFormat = dateFormat || \"YYYY-MM-DD\";\n  const dateFormats = [..._buildVariations(dateFormat, date), ...UNAMBIGUOUS_FORMATS];\n  const cleanDate = date.replace(SEPARATORS, ' ').trim();\n  for (const format of dateFormats) {\n    const m = moment.tz(cleanDate, format, true, timezone);\n    if (m.isValid()) {\n      const value = m.valueOf() / 1000;\n      if (results) {\n        results.add(value);\n      } else {\n        return value;\n      }\n    }\n  }\n}\n\nexport function parseDateTime(dateTime: string, options: ParseOptions): number | undefined {\n  dateTime = dateTime.trim();\n  if (!dateTime) {\n    return;\n  }\n\n  const dateFormat = options.dateFormat || \"YYYY-MM-DD\";\n  const timezone = options.timezone || \"UTC\";\n\n  const dateOnly = parseDateStrict(dateTime, dateFormat, undefined, timezone);\n  if (dateOnly) {\n    return dateOnly;\n  }\n\n  const parsedTimeZone = parseTimeZone(dateTime, timezone);\n  let tzOffset = '';\n  if (parsedTimeZone) {\n    tzOffset = parsedTimeZone.tzOffset;\n    dateTime = parsedTimeZone.remaining;\n  }\n\n  const parsedTime = standardizeTime(dateTime);\n  if (!parsedTime) {\n    return;\n  }\n\n  dateTime = parsedTime.remaining;\n  const date = parseDateStrict(dateTime, dateFormat);\n\n  if (!date) {\n    return;\n  }\n\n  // date is a timestamp of midnight in UTC, so to get a formatted representation (for parsing\n  // together with time), take care to interpret it in UTC.\n  const dateString = moment.unix(date).utc().format(\"YYYY-MM-DD\");\n  dateTime = dateString + ' ' + parsedTime.time + tzOffset;\n  const fullFormat = \"YYYY-MM-DD HH:mm:ss\" + (tzOffset ? 'Z' : '');\n  return moment.tz(dateTime, fullFormat, true, timezone).valueOf() / 1000;\n}\n\n\n// Helper function to get the partial format string based on the input. Momentjs has a feature\n// which allows defaulting to the current year, month and/or day if not accounted for in the\n// parser. We remove any parts of the parser not given in the input to take advantage of this\n// feature.\nfunction _getPartialFormat(input: string, format: string): string {\n  // Define a regular expression to match contiguous non-separators.\n  const re = /Y+|M+o?|D+o?|[a-zA-Z0-9]+/ig;\n  // Count the number of meaningful parts in the input.\n  const numInputParts = input.match(re)?.length || 0;\n\n  // Count the number of parts in the format string.\n  let numFormatParts = format.match(re)?.length || 0;\n\n  if (numFormatParts > numInputParts) {\n    // Remove year from format first, to default to current year.\n    if (/Y+/.test(format)) {\n      format = format.replace(/Y+/, ' ').trim();\n      numFormatParts -= 1;\n    }\n    if (numFormatParts > numInputParts) {\n      // Remove month from format next.\n      format = format.replace(/M+/, ' ').trim();\n    }\n  }\n  return format;\n}\n\n// Moment non-strict mode is considered bad, as it's far too lax. But moment's strict mode is too\n// strict. We want to allow YY|YYYY for either year specifier, as well as M for MMM or MMMM month\n// specifiers. It's silly that we need to create multiple format variations to support this.\nfunction _buildVariations(dateFormat: string, date: string) {\n  // Momentjs has an undesirable feature in strict mode where MM and DD\n  // matches require two digit numbers. Change MM, DD to M, D.\n  let format = dateFormat.replace(/MM+/g, m => (m === 'MM' ? 'M' : m))\n    .replace(/DD+/g, m => (m === 'DD' ? 'D' : m))\n    .replace(SEPARATORS, ' ')\n    .trim();\n\n  // Allow the input date to end with a 4-digit year even if the format doesn't mention the year\n  if (\n    format.includes(\"M\") &&\n    format.includes(\"D\") &&\n    !format.includes(\"Y\")\n  ) {\n    format += \" YYYY\";\n  }\n\n  format = _getPartialFormat(date, format);\n\n  // Consider some alternatives to the preferred format.\n  const variations = new Set<string>([format]);\n  const otherYear = format.replace(/Y{2,4}/, (m) => (m === 'YY' ? 'YYYY' : (m === 'YYYY' ? 'YY' : m)));\n  variations.add(otherYear);\n  variations.add(format.replace(/MMM+/, 'M'));\n  if (otherYear !== format) {\n    variations.add(otherYear.replace(/MMM+/, 'M'));\n  }\n  return variations;\n}\n\n\n// Based on private calculateOffset in moment source code.\nfunction calculateOffset(tzMatch: string[]): string {\n  const [, hhOffset, mmOffset] = tzMatch;\n  const sign = hhOffset.slice(0, 1);\n  return sign + hhOffset.slice(1).padStart(2, '0') + ':' + (mmOffset || '0').padStart(2, '0');\n}\n\nfunction parseTimeZone(str: string, timezone: string): { remaining: string, tzOffset: string } {\n  str = str.trim();\n\n  let tzMatch = UTC_REGEX.exec(str);\n  let matchStart = 0;\n  let tzOffset = '';\n  if (tzMatch) {\n    tzOffset = '+00:00';\n    matchStart = tzMatch.index + 1;  // skip [^a-zA-Z] at regex start\n  } else {\n    tzMatch = NUMERIC_TZ_REGEX.exec(str);\n    if (tzMatch) {\n      tzOffset = calculateOffset(tzMatch);\n      matchStart = tzMatch.index;\n    } else if (timezone) {\n      // Abbreviations are simply stripped and ignored, so tzOffset is not set in this case\n      tzMatch = tzAbbreviations(timezone).exec(str);\n      if (tzMatch) {\n        matchStart = tzMatch.index + 1;  // skip [^a-zA-Z] at regex start\n      }\n    }\n  }\n\n  if (tzMatch) {\n    str = str.slice(0, matchStart).trim();\n  }\n\n  return {remaining: str, tzOffset};\n}\n\n// Parses time of the form, roughly, HH[:MM[:SS]][am|pm]. Returns the time in the\n// standardized HH:mm:ss format.\n// This turns out easier than coaxing moment to parse time sensibly and flexibly.\nfunction standardizeTime(timeString: string): { remaining: string, time: string } | undefined {\n  const match = TIME_REGEX.exec(timeString);\n  if (!match) {\n    return;\n  }\n  let hours = parseInt(match[1] || match[4], 10);\n  const mm = (match[2] || match[5] || '0').padStart(2, '0');\n  const ss = (match[3] || '0').padStart(2, '0');\n  const ampm = (match[6] || '').toLowerCase();\n  if (hours < 12 && hours > 0 && ampm.startsWith('p')) {\n    hours += 12;\n  } else if (hours === 12 && ampm.startsWith('a')) {\n    hours = 0;\n  }\n  const hh = String(hours).padStart(2, '0');\n  return {remaining: timeString.slice(0, match.index).trim(), time: `${hh}:${mm}:${ss}`};\n}\n\n/**\n * Guesses a full date[time] format that best matches the given strings.\n * If several formats match equally well, picks the last one lexicographically to match the old date guessing.\n * This means formats with an early Y and/or M are favoured.\n * If no formats match, returns the default YYYY-MM-DD.\n */\nexport function guessDateFormat(values: Array<string | null>, timezone: string = 'UTC'): string {\n  const formats = guessDateFormats(values, timezone);\n  if (!formats) {\n    return \"YYYY-MM-DD\";\n  }\n  return last(formats)!;\n}\n\n/**\n * Returns all full date[time] formats that best match the given strings.\n * If several formats match equally well, returns them all.\n * May return null if there are no matching formats or choosing one is too expensive.\n */\nexport function guessDateFormats(values: Array<string | null>, timezone: string = 'UTC'): string[] | null {\n  const dateStrings: string[] = values.filter(isNonNullish);\n  const sample = getDistinctValues(dateStrings, 100);\n  const formats: Record<string, number> = {};\n  for (const dateString of sample) {\n    let guessed: string | string[];\n    try {\n      guessed = guessFormat(dateString);\n    } catch {\n      continue;\n    }\n    if (typeof guessed === \"string\") {\n      guessed = [guessed];\n    }\n    for (const guess of guessed) {\n      formats[guess] = 0;\n    }\n  }\n  const formatKeys = Object.keys(formats);\n  if (!formatKeys.length || formatKeys.length > 10) {\n    return null;\n  }\n\n  for (const format of formatKeys) {\n    for (const dateString of dateStrings) {\n      const m = moment.tz(dateString, format, true, timezone);\n      if (m.isValid()) {\n        formats[format] += 1;\n      }\n    }\n  }\n\n  const maxCount = Math.max(...Object.values(formats));\n  // Return all formats that tied for first place.\n  // Sort lexicographically for consistency in tests and with the old dateguess.py.\n  return formatKeys.filter(format => formats[format] === maxCount).sort();\n}\n\nexport const dateFormatOptions = [\n  'YYYY-MM-DD',\n  'MM-DD-YYYY',\n  'MM/DD/YYYY',\n  'MM-DD-YY',\n  'MM/DD/YY',\n  'DD MMM YYYY',\n  'MMMM Do, YYYY',\n  'DD-MM-YYYY',\n];\n\nexport const timeFormatOptions = [\n  'h:mma',\n  'h:mma z',\n  'HH:mm',\n  'HH:mm z',\n  'HH:mm:ss',\n  'HH:mm:ss z',\n];\n\n/**\n * Construct widget options for a Date or DateTime column based on a single moment string\n * which may or may not contain both date and time parts.\n * If defaultTimeFormat is true, fallback to a non-empty default time format when none is found in fullFormat.\n */\nexport function dateTimeWidgetOptions(fullFormat: string, defaultTimeFormat: boolean) {\n  const index = fullFormat.match(/[hHkaAmsSzZT]|$/)!.index!;\n  const dateFormat = fullFormat.substr(0, index).trim();\n  const timeFormat = fullFormat.substr(index).trim() || (defaultTimeFormat ? timeFormatOptions[0] : \"\");\n  return {\n    dateFormat,\n    timeFormat,\n    isCustomDateFormat: !dateFormatOptions.includes(dateFormat),\n    isCustomTimeFormat: !timeFormatOptions.includes(timeFormat),\n  };\n}\n","/**\n * Given a 2D array of strings, encodes them in tab-separated format.\n * Certain values are quoted; when quoted, internal quotes get doubled. The behavior attempts to\n * match Excel's tsv encoding and parsing when using copy-paste.\n */\nexport function tsvEncode(data: any[][]): string {\n  return data.map(row => row.map(value => encode(value)).join(\"\\t\")).join(\"\\n\");\n}\n\nfunction encode(rawValue: any): string {\n  // For encoding-decoding symmetry, we should also encode any values that start with '\"',\n  // but neither Excel nor Google Sheets do it. They both decode such values to something\n  // different than what produced them (e.g. `\"foo\"\"bar\"` is encoded into `\"foo\"\"bar\"`, and\n  // that is decoded into `foo\"bar`).\n  const value: string = typeof rawValue === 'string' ? rawValue :\n    (rawValue == null ? \"\" : String(rawValue));\n  if (value.includes(\"\\t\") || value.includes(\"\\n\")) {\n    return '\"' + value.replace(/\"/g, '\"\"') + '\"';\n  }\n  return value;\n}\n\n/**\n * Given a tab-separated string, decodes it and returns a 2D array of strings.\n * TODO: This does not yet deal with Windows line endings (\\r or \\r\\n).\n */\nexport function tsvDecode(tsvString: string): string[][] {\n  const lines: string[][] = [];\n  let row: string[] = [];\n\n  // This is a complex regexp but it does the job of a lot of parsing code. Here are the parts:\n  //  A: [^\\t\\n]*         Sequence of character that does not require the field to get quoted.\n  //  B: ([^\"]*\"\")*[^\"]*  Sequence of characters containing all double-quotes in pairs (i.e. `\"\"`)\n  //  C: \"B\"(?!\")         Quoted sequence, with all double-quotes inside paired up, and ending in a single quote.\n  //  D: C?A              A value for one field, a relaxation of C|A (to cope with not-quite expected data)\n  //  E: D(\\t|\\n|$)       Field value with field, line, or file terminator.\n  const fieldRegexp = /((\"([^\"]*\"\")*[^\"]*\"(?!\"))?[^\\t\\n]*)(\\t|\\n|$)/g;\n  for (;;) {\n    const m = fieldRegexp.exec(tsvString);\n    if (!m) { break; }\n    const sep = m[4];\n    let value = m[1];\n    if (value.startsWith('\"')) {\n      // It's a quoted value, so doubled-up quotes should became individual quotes, and individual\n      // quotes should be removed.\n      value = value.replace(/\"([^\"]*\"\")*[^\"]*\"(?!\")/, q => q.slice(1, -1).replace(/\"\"/g, '\"'));\n    }\n    row.push(value);\n    if (sep !== '\\t') {\n      lines.push(row);\n      row = [];\n      if (sep === '') {\n        break;\n      }\n    }\n  }\n  return lines;\n}\n","/**\n * This file defines the interface for the grist api exposed to SafeBrowser plugins. Grist supports\n * various ways to require it to cover various scenarios. If writing the main safeBrowser module\n * (the one referenced by the components.safeBrowser key of the manifest) use\n * `self.importScript('grist');`, if writing a view include the script in the html `<script src=\"grist\"></script>`\n *\n *\n * Example usage (let's assume that Grist let's plugin contributes to a Foo API defined as follow ):\n *\n * interface Foo {\n *   foo(name: string): Promise<string>;\n * }\n *\n * > main.ts:\n * class MyFoo {\n *   public foo(name: string): Promise<string> {\n *     return new Promise<string>( async resolve => {\n *       grist.rpc.onMessage( e => {\n *         resolve(e.data + name);\n *       });\n *       grist.ready();\n *       await grist.api.render('view1.html', 'fullscreen');\n *     });\n *   }\n * }\n * grist.rpc.registerImpl<Foo>('grist', new MyFoo()); // can add 3rd arg with type information\n *\n * > view1.html includes:\n * grist.api.render('static/view2.html', 'fullscreen').then( view => {\n *   grist.rpc.onMessage(e => grist.rpc.postMessageForward(\"main.ts\", e.data));\n * });\n *\n * > view2.html includes:\n * grist.rpc.postMessage('view1.html', 'foo ');\n *\n */\n\nimport {RenderOptions, RenderTarget} from './RenderOptions';\n\n// This is the row ID used in the client, but it's helpful to have available in some common code\n// as well, which is why it's declared here. Note that for data actions and stored data,\n// 'new' is not used.\n/**\n * Represents the id of a row in a table. The value of the `id` column. Might be a number or 'new' value for a new row.\n */\nexport type UIRowId = number | 'new';\n\n/**\n * Represents the position of an active cursor on a page.\n */\nexport interface CursorPos {\n  /**\n   * The rowId (value of the `id` column) of the current cursor position, or 'new' if the cursor is on a new row.\n   */\n  rowId?: UIRowId;\n  /**\n   * The index of the current row in the current view.\n   */\n  rowIndex?: number;\n  /**\n   * The index of the selected field in the current view.\n   */\n  fieldIndex?: number;\n  /**\n   * The id of a section that this cursor is in. Ignored when setting a cursor position for a particular view.\n   */\n  sectionId?: number;\n}\n\nexport type ComponentKind = \"safeBrowser\" | \"safePython\" | \"unsafeNode\";\n\nexport const RPC_GRISTAPI_INTERFACE = '_grist_api';\n\nexport interface GristAPI {\n  /**\n   * Render the file at `path` into the `target` location in Grist. `path` must be relative to the\n   * root of the plugin's directory and point to an html that is contained within the plugin's\n   * directory. `target` is a predefined location of the Grist UI, it could be `fullscreen` or\n   * identifier for an inline target. Grist provides inline target identifiers in certain call\n   * plugins. E.g. ImportSourceAPI.getImportSource is given a target identifier to allow rende UI\n   * inline in the import dialog. Returns the procId which can be used to dispose the view.\n   */\n  render(path: string, target: RenderTarget, options?: RenderOptions): Promise<number>;\n\n  /**\n   * Dispose the process with id procId. If the process was embedded into the UI, removes the\n   * corresponding element from the view.\n   */\n  dispose(procId: number): Promise<void>;\n\n  // Subscribes to actions for `tableId`. Actions of all subscribed tables are send as rpc's\n  // message.\n  // TODO: document format of messages that can be listened on `rpc.onMessage(...);`\n  subscribe(tableId: string): Promise<void>;\n\n  // Unsubscribe from actions for `tableId`.\n  unsubscribe(tableId: string): Promise<void>;\n\n}\n\n/**\n * Allows getting information from and interacting with the Grist document to which a plugin or widget is attached.\n */\nexport interface GristDocAPI {\n  /**\n   * Returns an identifier for the document.\n   */\n  getDocName(): Promise<string>;\n\n  /**\n   * Returns a sorted list of table IDs.\n   */\n  listTables(): Promise<string[]>;\n\n  /**\n   * Returns a complete table of data as [[RowRecords]], including the\n   * 'id' column. Do not modify the returned arrays in-place, especially if used\n   * directly (not over RPC).\n   */\n  fetchTable(tableId: string): Promise<any>;\n  // TODO: return type is Promise{[colId: string]: CellValue[]}> but cannot be specified\n  // because ts-interface-builder does not properly support index-signature.\n\n  /**\n   * Applies an array of user actions.\n   */\n  applyUserActions(actions: any[][], options?: any): Promise<any>;\n  // TODO: return type should be Promise<ApplyUAResult>, but this requires importing\n  // modules from `app/common` which is not currently supported by the build.\n\n  /**\n   * Get a token for out-of-band access to the document.\n   */\n  getAccessToken(options: AccessTokenOptions): Promise<AccessTokenResult>;\n}\n\n/**\n * Interface for the data backing a single widget.\n */\nexport interface GristView {\n  /**\n   * Like [[GristDocAPI.fetchTable]], but gets data for the custom section specifically, if there is any.\n   */\n  fetchSelectedTable(): Promise<any>;\n  // TODO: return type is Promise{[colId: string]: CellValue[]}> but cannot be specified\n  // because ts-interface-builder does not properly support index-signature.\n\n  /**\n   * Fetches selected record by its `rowId`.\n   */\n  fetchSelectedRecord(rowId: number): Promise<any>;\n  // TODO: return type is Promise{[colId: string]: CellValue}> but cannot be specified\n  // because ts-interface-builder does not properly support index-signature.\n\n  /**\n   * Deprecated now. It was used for filtering selected table by `setSelectedRows` method.\n   * Now the preferred way it to use ready message.\n   */\n  allowSelectBy(): Promise<void>;\n\n  /**\n   * Set the list of selected rows to be used against any linked widget.\n   */\n  setSelectedRows(rowIds: number[]|null): Promise<void>;\n\n  /**\n   * Sets the cursor position to a specific row and field. `sectionId` is ignored. Used for widget linking.\n   */\n  setCursorPos(pos: CursorPos): Promise<void>\n}\n\n/**\n * Options when creating access tokens.\n */\nexport interface AccessTokenOptions {\n  /** Restrict use of token to reading only */\n  readOnly?: boolean;\n}\n\n/**\n * Access token information, including the token string itself, a base URL for\n * API calls for which the access token can be used, and the time-to-live the\n * token was created with.\n */\nexport interface AccessTokenResult {\n  /**\n   * The token string, which can currently be provided in an api call as a\n   * query parameter called \"auth\"\n   */\n  token: string;\n\n  /**\n   * The base url of the API for which the token can be used. Currently tokens\n   * are associated with a single document, so the base url will be something\n   * like `https://..../api/docs/DOCID`\n   *\n   * Access tokens currently only grant access to endpoints dealing with the\n   * internal content of a document (such as tables and cells) and not its\n   * metadata (such as the document name or who it is shared with).\n   */\n  baseUrl: string;\n\n  /**\n   * Number of milliseconds the access token will remain valid for\n   * after creation. This will be several minutes.\n   */\n  ttlMsecs: number;\n}\n","/**\n * Letter codes for CellValue types encoded as [code, args...] tuples.\n */\nexport enum GristObjCode {\n  List            = 'L',\n  LookUp          = 'l',\n  Dict            = 'O',\n  DateTime        = 'D',\n  Date            = 'd',\n  Skip            = 'S',\n  Censored        = 'C',\n  Reference       = 'R',\n  ReferenceList   = 'r',\n  Exception       = 'E',\n  Pending         = 'P',\n  Unmarshallable  = 'U',\n  Versions        = 'V',\n}\n\n/**\n * Possible types of cell content.\n */\nexport type CellValue = number|string|boolean|null|[GristObjCode, ...unknown[]];\nexport interface BulkColValues { [colId: string]: CellValue[]; }\n\n/**\n * Map of column ids to `CellValue`s.\n *\n * ### CellValue\n *\n * Each `CellValue` may either be a primitive (e.g. `true`, `123`, `\"hello\"`, `null`)\n * or a tuple (JavaScript Array) representing a Grist object. The first element of the tuple\n * is a string character representing the object code. For example, `[\"L\", \"foo\", \"bar\"]`\n * is a `CellValue` of a Choice List column, where `\"L\"` is the type, and `\"foo\"` and\n * `\"bar\"` are the choices.\n *\n * ### Grist Object Types\n *\n * | Code | Type           |\n * | ---- | -------------- |\n * | L    | List           |\n * | l    | LookUp         |\n * | O    | Dict           |\n * | D    | DateTime       |\n * | d    | Date           |\n * | C    | Censored       |\n * | R    | Reference      |\n * | r    | ReferenceList  |\n * | E    | Exception      |\n * | P    | Pending        |\n * | U    | Unmarshallable |\n * | V    | Version        |\n */\nexport interface RowRecord {\n  id: number;\n  [colId: string]: CellValue;\n}\n\n/**\n * Map of column ids to `CellValue` arrays, where array indexes correspond to\n * rows.\n *\n * ### CellValue\n *\n * Each `CellValue` may either be a primitive (e.g. `true`, `123`, `\"hello\"`, `null`)\n * or a tuple (JavaScript Array) representing a Grist object. The first element of the tuple\n * is a string character representing the object code. For example, `[\"L\", \"foo\", \"bar\"]`\n * is a `CellValue` of a Choice List column, where `\"L\"` is the type, and `\"foo\"` and\n * `\"bar\"` are the choices.\n *\n * ### Grist Object Types\n *\n * | Code | Type           |\n * | ---- | -------------- |\n * | L    | List           |\n * | l    | LookUp         |\n * | O    | Dict           |\n * | D    | DateTime       |\n * | d    | Date           |\n * | C    | Censored       |\n * | R    | Reference      |\n * | r    | ReferenceList  |\n * | E    | Exception      |\n * | P    | Pending        |\n * | U    | Unmarshallable |\n * | V    | Version        |\n */\nexport interface RowRecords {\n  id: number[];\n  [colId: string]: CellValue[];\n}\n\nexport type GristType = 'Any' | 'Attachments' | 'Blob' | 'Bool' | 'Choice' | 'ChoiceList' |\n  'Date' | 'DateTime' |\n  'Id' | 'Int' | 'ManualSortPos' | 'Numeric' | 'PositionNumber' | 'Ref' | 'RefList' | 'Text';\n","import {BasicType, createCheckers, ICheckerSuite} from 'ts-interface-checker';\nimport CustomSectionAPITI from './CustomSectionAPI-ti';\nimport FileParserAPITI from './FileParserAPI-ti';\nimport GristAPITI from './GristAPI-ti';\nimport GristTableTI from './GristTable-ti';\nimport ImportSourceAPITI from './ImportSourceAPI-ti';\nimport InternalImportSourceAPITI from './InternalImportSourceAPI-ti';\nimport RenderOptionsTI from './RenderOptions-ti';\nimport StorageAPITI from './StorageAPI-ti';\nimport WidgetAPITI from './WidgetAPI-ti';\n\n/**\n * The ts-interface-checker type suites are all exported with the \"TI\" suffix.\n */\nexport {\n  CustomSectionAPITI, FileParserAPITI, GristAPITI, GristTableTI, ImportSourceAPITI,\n  InternalImportSourceAPITI, RenderOptionsTI, StorageAPITI, WidgetAPITI};\n\nconst allTypes = [\n  CustomSectionAPITI, FileParserAPITI, GristAPITI, GristTableTI, ImportSourceAPITI,\n  InternalImportSourceAPITI, RenderOptionsTI, StorageAPITI, WidgetAPITI,\n];\n\n// Ensure Buffer can be handled if mentioned in the interface descriptions, even if not supported\n// in the current environment (i.e. browser).\nif (typeof Buffer === 'undefined') {\n  allTypes.push({Buffer: new BasicType((v) => false, \"Buffer is not supported\")});\n}\n\nfunction checkDuplicates(types: Array<{[key: string]: object}>) {\n  const seen = new Set<string>();\n  for (const t of types) {\n    for (const key of Object.keys(t)) {\n      if (seen.has(key)) { throw new Error(`TypeCheckers: Duplicate type name ${key}`); }\n      seen.add(key);\n      // Uncomment the line below to generate updated list of included types.\n      // console.log(`'${key}' |`);\n    }\n  }\n}\n\ncheckDuplicates(allTypes);\n\n/**\n * We also create and export a global checker object that includes all of the types above.\n */\nexport const checkers = createCheckers(...allTypes) as (\n  // The following Pick typecast ensures that Typescript can only use correct properties of the\n  // checkers object (e.g. checkers.GristAPI will compile, but checkers.GristApi will not).\n  // TODO: The restrictive type of ICheckerSuite should be generated automatically. (Currently\n  // generated by commenting out console.log() in checkDuplicates() above.)\n  Pick<ICheckerSuite,\n  'CustomSectionAPI' | 'EditOptionsAPI' | 'ParseFileAPI' | 'ParseOptions' | 'ParseOptionSchema' |\n  'FileSource' | 'ParseFileResult' | 'ComponentKind' | 'GristAPI' | 'GristDocAPI' | 'GristTable' |\n  'GristTables' | 'GristColumn' | 'GristView' | 'ImportSourceAPI' | 'ImportProcessorAPI' | 'FileContent' |\n  'FileListItem' | 'URL' | 'ImportSource' | 'InternalImportSourceAPI' | 'RenderTarget' |\n  'RenderOptions' | 'Storage' | 'WidgetAPI'\n  >);\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const ColumnToMap = t.iface([], {\n  \"name\": \"string\",\n  \"title\": t.opt(t.union(\"string\", \"null\")),\n  \"description\": t.opt(t.union(\"string\", \"null\")),\n  \"type\": t.opt(\"string\"),\n  \"optional\": t.opt(\"boolean\"),\n  \"allowMultiple\": t.opt(\"boolean\"),\n});\n\nexport const ColumnsToMap = t.array(t.union(\"string\", \"ColumnToMap\"));\n\nexport const InteractionOptionsRequest = t.iface([], {\n  \"requiredAccess\": t.opt(\"string\"),\n  \"hasCustomOptions\": t.opt(\"boolean\"),\n  \"columns\": t.opt(\"ColumnsToMap\"),\n  \"allowSelectBy\": t.opt(\"boolean\"),\n});\n\nexport const InteractionOptions = t.iface([], {\n  \"accessLevel\": \"string\",\n});\n\nexport const WidgetColumnMap = t.iface([], {\n  [t.indexKey]: t.union(\"string\", t.array(\"string\"), \"null\"),\n});\n\nexport const CustomSectionAPI = t.iface([], {\n  \"configure\": t.func(\"void\", t.param(\"customOptions\", \"InteractionOptionsRequest\")),\n  \"mappings\": t.func(t.union(\"WidgetColumnMap\", \"null\")),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  ColumnToMap,\n  ColumnsToMap,\n  InteractionOptionsRequest,\n  InteractionOptions,\n  WidgetColumnMap,\n  CustomSectionAPI,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const EditOptionsAPI = t.iface([], {\n  \"getParseOptions\": t.func(\"ParseOptions\", t.param(\"parseOptions\", \"ParseOptions\", true)),\n});\n\nexport const ParseFileAPI = t.iface([], {\n  \"parseFile\": t.func(\"ParseFileResult\", t.param(\"file\", \"FileSource\"), t.param(\"parseOptions\", \"ParseOptions\", true)),\n});\n\nexport const ParseOptions = t.iface([], {\n  \"NUM_ROWS\": t.opt(\"number\"),\n  \"SCHEMA\": t.opt(t.array(\"ParseOptionSchema\")),\n  \"WARNING\": t.opt(\"string\"),\n});\n\nexport const ParseOptionSchema = t.iface([], {\n  \"name\": \"string\",\n  \"label\": \"string\",\n  \"type\": \"string\",\n  \"visible\": \"boolean\",\n});\n\nexport const FileSource = t.iface([], {\n  \"path\": \"string\",\n  \"origName\": \"string\",\n});\n\nexport const ParseFileResult = t.iface([\"GristTables\"], {\n  \"parseOptions\": \"ParseOptions\",\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  EditOptionsAPI,\n  ParseFileAPI,\n  ParseOptions,\n  ParseOptionSchema,\n  FileSource,\n  ParseFileResult,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const UIRowId = t.union(\"number\", t.lit('new'));\n\nexport const CursorPos = t.iface([], {\n  \"rowId\": t.opt(\"UIRowId\"),\n  \"rowIndex\": t.opt(\"number\"),\n  \"fieldIndex\": t.opt(\"number\"),\n  \"sectionId\": t.opt(\"number\"),\n});\n\nexport const ComponentKind = t.union(t.lit(\"safeBrowser\"), t.lit(\"safePython\"), t.lit(\"unsafeNode\"));\n\nexport const GristAPI = t.iface([], {\n  \"render\": t.func(\"number\", t.param(\"path\", \"string\"), t.param(\"target\", \"RenderTarget\"), t.param(\"options\", \"RenderOptions\", true)),\n  \"dispose\": t.func(\"void\", t.param(\"procId\", \"number\")),\n  \"subscribe\": t.func(\"void\", t.param(\"tableId\", \"string\")),\n  \"unsubscribe\": t.func(\"void\", t.param(\"tableId\", \"string\")),\n});\n\nexport const GristDocAPI = t.iface([], {\n  \"getDocName\": t.func(\"string\"),\n  \"listTables\": t.func(t.array(\"string\")),\n  \"fetchTable\": t.func(\"any\", t.param(\"tableId\", \"string\")),\n  \"applyUserActions\": t.func(\"any\", t.param(\"actions\", t.array(t.array(\"any\"))), t.param(\"options\", \"any\", true)),\n  \"getAccessToken\": t.func(\"AccessTokenResult\", t.param(\"options\", \"AccessTokenOptions\")),\n});\n\nexport const GristView = t.iface([], {\n  \"fetchSelectedTable\": t.func(\"any\"),\n  \"fetchSelectedRecord\": t.func(\"any\", t.param(\"rowId\", \"number\")),\n  \"allowSelectBy\": t.func(\"void\"),\n  \"setSelectedRows\": t.func(\"void\", t.param(\"rowIds\", t.union(t.array(\"number\"), \"null\"))),\n  \"setCursorPos\": t.func(\"void\", t.param(\"pos\", \"CursorPos\")),\n});\n\nexport const AccessTokenOptions = t.iface([], {\n  \"readOnly\": t.opt(\"boolean\"),\n});\n\nexport const AccessTokenResult = t.iface([], {\n  \"token\": \"string\",\n  \"baseUrl\": \"string\",\n  \"ttlMsecs\": \"number\",\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  UIRowId,\n  CursorPos,\n  ComponentKind,\n  GristAPI,\n  GristDocAPI,\n  GristView,\n  AccessTokenOptions,\n  AccessTokenResult,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const GristTable = t.iface([], {\n  \"table_name\": t.union(\"string\", \"null\"),\n  \"column_metadata\": t.array(\"GristColumn\"),\n  \"table_data\": t.array(t.array(\"any\")),\n});\n\nexport const GristTables = t.iface([], {\n  \"tables\": t.array(\"GristTable\"),\n});\n\nexport const GristColumn = t.iface([], {\n  \"id\": \"string\",\n  \"type\": \"string\",\n});\n\nexport const APIType = t.enumtype({\n  \"ImportSourceAPI\": 0,\n  \"ImportProcessorAPI\": 1,\n  \"ParseOptionsAPI\": 2,\n  \"ParseFileAPI\": 3,\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  GristTable,\n  GristTables,\n  GristColumn,\n  APIType,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const ImportSourceAPI = t.iface([], {\n  \"getImportSource\": t.func(t.union(\"ImportSource\", \"undefined\")),\n});\n\nexport const ImportProcessorAPI = t.iface([], {\n  \"processImport\": t.func(t.array(\"GristTable\"), t.param(\"source\", \"ImportSource\")),\n});\n\nexport const FileContent = t.iface([], {\n  \"content\": \"any\",\n  \"name\": \"string\",\n});\n\nexport const FileListItem = t.iface([], {\n  \"kind\": t.lit(\"fileList\"),\n  \"files\": t.array(\"FileContent\"),\n});\n\nexport const URL = t.iface([], {\n  \"kind\": t.lit(\"url\"),\n  \"url\": \"string\",\n});\n\nexport const ImportSource = t.iface([], {\n  \"item\": t.union(\"FileListItem\", \"URL\"),\n  \"options\": t.opt(t.union(\"string\", \"Buffer\")),\n  \"description\": t.opt(\"string\"),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  ImportSourceAPI,\n  ImportProcessorAPI,\n  FileContent,\n  FileListItem,\n  URL,\n  ImportSource,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const InternalImportSourceAPI = t.iface([], {\n  \"getImportSource\": t.func(t.union(\"ImportSource\", \"undefined\"), t.param(\"inlineTarget\", \"RenderTarget\")),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  InternalImportSourceAPI,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const RenderTarget = t.union(t.lit(\"fullscreen\"), \"number\");\n\nexport const RenderOptions = t.iface([], {\n  \"height\": t.opt(\"string\"),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  RenderTarget,\n  RenderOptions,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const Storage = t.iface([], {\n  \"getItem\": t.func(\"any\", t.param(\"key\", \"string\")),\n  \"hasItem\": t.func(\"boolean\", t.param(\"key\", \"string\")),\n  \"setItem\": t.func(\"void\", t.param(\"key\", \"string\"), t.param(\"value\", \"any\")),\n  \"removeItem\": t.func(\"void\", t.param(\"key\", \"string\")),\n  \"clear\": t.func(\"void\"),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  Storage,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const WidgetAPI = t.iface([], {\n  \"getOptions\": t.func(t.union(\"object\", \"null\")),\n  \"setOptions\": t.func(\"void\", t.param(\"options\", t.iface([], {\n    [t.indexKey]: \"any\",\n  }))),\n  \"clearOptions\": t.func(\"void\"),\n  \"setOption\": t.func(\"void\", t.param(\"key\", \"string\"), t.param(\"value\", \"any\")),\n  \"getOption\": t.func(\"any\", t.param(\"key\", \"string\")),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  WidgetAPI,\n};\nexport default exportedTypeSuite;\n","/**\n * Encodes and decodes Grist encoding of values, mirroring similar Python functions in\n * sandbox/grist/objtypes.py.\n */\n// tslint:disable:max-classes-per-file\n\nimport { CellValue, GristObjCode } from './GristData';\nimport isPlainObject = require('lodash/isPlainObject');\n\n// The text to show on cells whose values are pending.\nexport const PENDING_DATA_PLACEHOLDER = \"Loading...\";\n\n/**\n * A GristDate is just a JS Date object whose toString() method returns YYYY-MM-DD.\n */\nexport class GristDate extends Date {\n  public static fromGristValue(epochSec: number): GristDate {\n    return new GristDate(epochSec * 1000);\n  }\n\n  public toString() {\n    return this.toISOString().slice(0, 10);\n  }\n}\n\n/**\n * A GristDateTime is a JS Date with an added timezone field. Its toString() returns the date in\n * ISO format. To create a timezone-aware momentjs object, use:\n *\n *    moment(d).tz(d.timezone)\n */\nexport class GristDateTime extends Date {\n  public static fromGristValue(epochSec: number, timezone: string): GristDateTime {\n    return Object.assign(new GristDateTime(epochSec * 1000), {timezone});\n  }\n\n  public timezone: string;\n  public toString() { return this.toISOString(); }\n}\n\n/**\n * A Reference represents a reference to a row in a table. It is simply a pair of a string tableId\n * and a numeric rowId.\n */\nexport class Reference {\n  constructor(public tableId: string, public rowId: number) {}\n\n  public toString(): string {\n    return `${this.tableId}[${this.rowId}]`;\n  }\n}\n\n/**\n * A ReferenceList represents a reference to a number of rows in a table. It is simply a pair of a string tableId\n * and a numeric array rowIds.\n */\nexport class ReferenceList {\n  constructor(public tableId: string, public rowIds: number[]) {}\n\n  public toString(): string {\n    return `${this.tableId}[[${this.rowIds}]]`;\n  }\n}\n\n/**\n * A RaisedException represents a formula error. It includes the exception name, message, and\n * optional details.\n */\nexport class RaisedException {\n  public name: string;\n  public details?: string;\n  public message?: string;\n  public user_input?: CellValue;\n\n  constructor(list: any[]) {\n    if (!list.length) {\n      throw new Error(\"RaisedException requires a name as first element\");\n    }\n    list = [...list];\n    this.name = list.shift();\n    this.message = list.shift();\n    this.details = list.shift();\n    this.user_input = list.shift()?.u;\n  }\n\n  /**\n   * This is designed to look somewhat similar to Excel, e.g. #VALUE or #DIV/0!\"\n   */\n  public toString() {\n    switch (this.name) {\n      case 'ZeroDivisionError': return '#DIV/0!';\n      case 'UnmarshallableError': return this.details || ('#' + this.name);\n      case 'InvalidTypedValue': return `#Invalid ${this.message}: ${this.details}`;\n    }\n    return '#' + this.name;\n  }\n}\n\n/**\n * An UnknownValue is a fallback for values that we don't handle otherwise, e.g. of a Python\n * formula returned a function object, or a value we fail to decode.\n * It is typically the Python repr() string of the value.\n */\nexport class UnknownValue {\n  // When encoding an unknown value, get a best-effort string form of it.\n  public static safeRepr(value: unknown): string {\n    try {\n      return String(value);\n    } catch (e) {\n      return `<${typeof value}>`;\n    }\n  }\n\n  constructor(public value: unknown) {}\n  public toString() {\n    return String(this.value);\n  }\n}\n\n/**\n * A trivial placeholder for a value that's not yet available.\n */\nexport class PendingValue {\n  public toString() {\n    return PENDING_DATA_PLACEHOLDER;\n  }\n}\n\n/**\n * A trivial placeholder for a value that won't be shown.\n */\nexport class SkipValue {\n  public toString() {\n    return '...';\n  }\n}\n\n/**\n * A placeholder for a value hidden by access control rules.\n * Depending on the types of the columns involved, copying\n * a censored value and pasting elsewhere will either use\n * CensoredValue.__repr__ (python) or CensoredValue.toString (typescript)\n * so they should match\n */\nexport class CensoredValue {\n  public toString() {\n    return 'CENSORED';\n  }\n}\n\n/**\n * Produces a Grist-encoded version of the value, e.g. turning a Date into ['d', timestamp].\n * Returns ['U', repr(value)] if it fails to encode otherwise.\n *\n * TODO Add tests. This is not yet used for anything.\n */\nexport function encodeObject(value: unknown): CellValue {\n  try {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        return value;\n    }\n    if (value == null) {\n      return null;\n    } else if (value instanceof Reference) {\n      return [GristObjCode.Reference, value.tableId, value.rowId];\n    } else if (value instanceof ReferenceList) {\n      return [GristObjCode.ReferenceList, value.tableId, value.rowIds];\n    } else if (value instanceof Date) {\n      const timestamp = value.valueOf() / 1000;\n      if ('timezone' in value) {\n        return [GristObjCode.DateTime, timestamp, (value as GristDateTime).timezone];\n      } else {\n        // TODO Depending on how it's used, may want to return ['d', timestamp] for UTC midnight.\n        return [GristObjCode.DateTime, timestamp, 'UTC'];\n      }\n    } else if (value instanceof CensoredValue) {\n      return [GristObjCode.Censored];\n    } else if (value instanceof RaisedException) {\n      return [GristObjCode.Exception, value.name, value.message, value.details];\n    } else if (Array.isArray(value)) {\n      return [GristObjCode.List, ...value.map(encodeObject)];\n    } else if (isPlainObject(value)) {\n      return [GristObjCode.Dict, mapValues(value as any, encodeObject, {sort: true})];\n    }\n  } catch (e) {\n    // Fall through to return a best-effort representation.\n  }\n  // We either don't know how to convert the value, or failed during the conversion. Instead we\n  // return an \"UnmarshallableValue\" object, with repr() of the value to show to the user.\n  return [GristObjCode.Unmarshallable, UnknownValue.safeRepr(value)];\n}\n\n\n/**\n * Given a Grist-encoded value, returns an object represented by it.\n * If the type code is unknown, or construction fails for any reason, returns an UnknownValue.\n */\nexport function decodeObject(value: CellValue): unknown {\n  if (!Array.isArray(value)) {\n    return value;\n  }\n  const code: string = value[0];\n  const args: any[] = value.slice(1);\n  let err: Error|undefined;\n  try {\n    switch (code) {\n      case 'D': return GristDateTime.fromGristValue(args[0], String(args[1]));\n      case 'd': return GristDate.fromGristValue(args[0]);\n      case 'E': return new RaisedException(args);\n      case 'L': return (args as CellValue[]).map(decodeObject);\n      case 'O': return mapValues(args[0] as {[key: string]: CellValue}, decodeObject, {sort: true});\n      case 'P': return new PendingValue();\n      case 'r': return new ReferenceList(String(args[0]), args[1]);\n      case 'R': return new Reference(String(args[0]), args[1]);\n      case 'S': return new SkipValue();\n      case 'C': return new CensoredValue();\n      case 'U': return new UnknownValue(args[0]);\n    }\n  } catch (e) {\n    err = e;\n  }\n  // If we can't decode, return an UnknownValue with some attempt to represent what we couldn't\n  // decode as long as some info about the error if any.\n  return new UnknownValue(`${code}(${JSON.stringify(args).slice(1, -1)})` +\n    (err ? `#${err.name}(${err.message})` : ''));\n}\n\n// Like lodash's mapValues, with support for sorting keys, for friendlier output.\nexport function mapValues<A, B>(\n  sourceObj: {[key: string]: A}, mapper: (value: A) => B, options: {sort?: boolean} = {}\n): {[key: string]: B} {\n  const result: {[key: string]: B} = {};\n  const keys = Object.keys(sourceObj);\n  if (options.sort) {\n    keys.sort();\n  }\n  for (const key of keys) {\n    result[key] = mapper(sourceObj[key]);\n  }\n  return result;\n}\n","var ace = require('ace-builds');\nvar _ = require('underscore');\n// ace-builds also has a minified build (src-min-noconflict), but we don't\n// use it since webpack already handles minification.\nrequire('ace-builds/src-noconflict/mode-python');\nrequire('ace-builds/src-noconflict/theme-chrome');\nrequire('ace-builds/src-noconflict/theme-dracula');\nrequire('ace-builds/src-noconflict/ext-language_tools');\nvar {setupAceEditorCompletions} = require('./AceEditorCompletions');\nvar {getGristConfig} = require('../../common/urlUtils');\nvar dom = require('../lib/dom');\nvar dispose = require('../lib/dispose');\nvar modelUtil = require('../models/modelUtil');\n\n/**\n * A class to help set up the ace editor with standard formatting and convenience functions\n * @param {Observable} options.observable: If given, creates a 2-way binding between the observable\n *  and the value of the editor.\n * @param {Boolean} options.saveValueOnBlurEvent: Flag to indicate whether ace editor\n *  should save the value on `blur` event.\n * @param {Function} options.calcSize: Optional function used to resize the editor. It is called\n *  with (elem, desiredSize) as arguments, and should return the actual size to use for the\n *  element. Both desiredSize and the return value are objects with 'width' and 'height' members.\n */\nfunction AceEditor(options) {\n  options = options || {};\n  // Observable subscription is not created until the dom is built\n  this.observable = options.observable || null;\n  this.saveValueOnBlurEvent = !(options.saveValueOnBlurEvent === false);\n  this.calcSize = options.calcSize || ((_elem, size) => size);\n  this.gristDoc = options.gristDoc || null;\n  this.column = options.column || null;\n  this.editorState = options.editorState || null;\n  this._readonly = options.readonly || false;\n\n  this.editor = null;\n  this.editorDom = null;\n  this.session = null;\n  this._setupCallback = null;\n  this._setupTimer = null;\n\n  this.textPadding = 10; // Space after cursor when not using wrap mode\n}\ndispose.makeDisposable(AceEditor);\n\n// Builds editor dom with additional setup possible in function `optSetupCallback`.\n// May be called multiple times by an instance of AceEditor.\nAceEditor.prototype.buildDom = function(optSetupCallback) {\n  this._fullDom = dom('div.code_editor_container',\n    this.editorDom = dom('div')\n  );\n  this._setupCallback = optSetupCallback;\n  this._setupTimer = setTimeout(() => this._setup(), 0);\n  return this._fullDom;\n};\n\n/**\n * You may optionally call this once the DOM returned from buildDom is attached to the document to\n * make setup and sizing more immediate.\n */\nAceEditor.prototype.onAttach = function() {\n  if (this._setupTimer) {\n    clearTimeout(this._setupTimer);\n    this._setupTimer = null;\n    this._setup();\n  }\n};\n\nAceEditor.prototype.writeObservable = function() {\n  if (this.observable) {\n    modelUtil.setSaveValue(this.observable, this.getValue());\n  }\n};\n\nAceEditor.prototype.getEditor = function() {\n  return this.editor;\n};\n\nAceEditor.prototype.getValue = function() {\n  return this.editor && this.editor.getValue();\n};\n\n/**\n * @param {String} val: The new value to set the editor to.\n * @param {Number} optCursorPos: Position where to place the cursor: at the end if omitted.\n */\nAceEditor.prototype.setValue = function(val, optCursorPos) {\n  // Note that underlying setValue() has a special meaning for second parameter:\n  // undefined or 0 is selectAll, -1 is at the document start, and 1 is at the end.\n  this.editor.setValue(val, optCursorPos === 0 ? -1 : 1);\n  if (optCursorPos > 0 && optCursorPos < val.length) {\n    var pos = this.session.getDocument().indexToPosition(optCursorPos);\n    this.editor.moveCursorTo(pos.row, pos.column);\n  }\n};\n\nAceEditor.prototype.isBuilt = function() {\n  return this.editor !== null;\n};\n\n// Enables or disables the AceEditor\nAceEditor.prototype.enable = function(bool) {\n  var editor = this.editor;\n  editor.setReadOnly(!bool);\n  editor.renderer.$cursorLayer.element.style.opacity = bool ? 100 : 0;\n  editor.gotoLine(Infinity, Infinity); // Prevents text selection on disable\n};\n\n/**\n *  Commands must be added specially to the ace editor.\n *  Attaching commands to the textarea using commandGroup.attach() only\n *  works for certain keys.\n *\n *  Note: Commands to the aceEditor are always enabled.\n *  Note: Ace defers to standard behavior when false is returned.\n */\nAceEditor.prototype.attachCommandGroup = function(commandGroup) {\n  _.each(commandGroup.knownKeys, (commandName, key) => {\n    this.editor.commands.addCommand({\n      name: commandName,\n      // We are setting readonly as true to enable all commands\n      // in a readonly mode.\n      // Because FieldEditor in readonly mode will rewire all commands that\n      // modify state, we are safe to enable them.\n      readOnly: this._readonly,\n      bindKey: {\n        win: key,\n        mac: key,\n        sender: 'editor|cli'\n      },\n      // AceEditor wants a command to return true if it got handled, whereas our command returns\n      // true to avoid stopPropagation/preventDefault, i.e. if it hasn't been handled.\n      exec: () => !commandGroup.commands[commandName]()\n    });\n  });\n};\n\n/**\n *  Attaches a command to the editor which saves the current editor\n *  contents to the attached observable on 'Shift+Enter'.\n *  Throws error if there is no attached observable.\n *  TODO: Use instead of custom save command for more implementations of AceEditor\n */\nAceEditor.prototype.attachSaveCommand = function() {\n  if (!this.observable) {\n    throw new Error(\"Cannot attach save command to editor with no bound observable\");\n  }\n  this.editor.commands.addCommand({\n    name: 'saveFormula',\n    bindKey: {\n      sender: 'editor|cli'\n    },\n    // AceEditor wants a command to return true if it got handled\n    exec: () => {\n      this.writeObservable();\n      return true;\n    }\n  });\n};\n\n// Wraps words to the current width of the editor\nAceEditor.prototype.adjustContentToWidth = function() {\n  var characterWidth = this.editor.renderer.characterWidth;\n  var contentWidth = this.editor.renderer.scroller.clientWidth;\n\n  if(contentWidth > 0) {\n    this.editor.getSession().setWrapLimit(parseInt(contentWidth/characterWidth, 10) - 1);\n  }\n};\n\n/**\n * Provides opportunity to execute some functionality when value in the editor has changed.\n * Happens every time user types something to the control.\n */\nAceEditor.prototype.onChange = function() {\n  if (this.editorState) this.editorState.set(this.getValue());\n  this.resize();\n};\n\nAceEditor.prototype.setFontSize = function(pxVal) {\n  this.editor.setFontSize(pxVal);\n  this.resize();\n};\n\nAceEditor.prototype._setup = function() {\n  // Standard editor setup\n  this.editor = this.autoDisposeWith('destroy', ace.edit(this.editorDom));\n  if (this.gristDoc && this.column) {\n    const getSuggestions = (prefix) => {\n      const section = this.gristDoc.viewModel.activeSection();\n      // If section is disposed or is pointing to an empty row, don't try to autocomplete.\n      if (!section?.getRowId()) {\n        return [];\n      }\n      const tableId = section.table().tableId();\n      const columnId = this.column.colId();\n      const rowId = section.activeRowId();\n      return this.gristDoc.docComm.autocomplete(prefix, tableId, columnId, rowId);\n    };\n    setupAceEditorCompletions(this.editor, {getSuggestions});\n  }\n  this.editor.setOptions({\n    enableLiveAutocompletion: true,   // use autocompletion without needing special activation.\n  });\n  this.session = this.editor.getSession();\n  this.session.setMode('ace/mode/python');\n\n  const gristTheme = this.gristDoc?.currentTheme;\n  this._setAceTheme(gristTheme?.get());\n  if (!getGristConfig().enableCustomCss && gristTheme) {\n    this.autoDispose(gristTheme.addListener((theme) => {\n      this._setAceTheme(theme);\n    }));\n  }\n\n  // Default line numbers to hidden\n  this.editor.renderer.setShowGutter(false);\n  this.session.setTabSize(2);\n  this.session.setUseWrapMode(true);\n\n  this.editor.on('change', this.onChange.bind(this));\n  this.editor.$blockScrolling = Infinity;\n  this.editor.setFontSize(11);\n  this.resize();\n\n  // Set up the bound observable if supplied\n  if (this.observable) {\n    var subscription = this.observable.subscribeInit(val => {if (val !== undefined) {this.setValue(val);}});\n    // Dispose with dom since subscription is created when dom is created\n    dom(this.editorDom,\n      dom.autoDispose(subscription)\n    );\n\n    if (this.saveValueOnBlurEvent) {\n      this.editor.on('blur', () => {\n        this.writeObservable();\n      });\n    }\n  }\n\n  if (this._setupCallback) {\n    this._setupCallback.call(null, this.editor);\n    this._setupCallback = null;\n  }\n};\n\nAceEditor.prototype.resize = function() {\n  var wrap = this.session.getUseWrapMode();\n  var contentWidth = wrap ? 0 : this._getContentWidth();\n  var contentHeight = this._getContentHeight();\n  var desiredSize = {\n    width: wrap ? 0 : contentWidth + this.textPadding,\n    height: contentHeight,\n  };\n  var size = this.calcSize(this._fullDom, desiredSize);\n  if (size.height < contentHeight) {\n    // Editor will show a vertical scrollbar, so recalculate to make space for it.\n    desiredSize.width += 20;\n    size = this.calcSize(this._fullDom, desiredSize);\n  }\n  if (size.width < contentWidth) {\n    // Editor will show a horizontal scrollbar, so recalculate to make space for it.\n    desiredSize.height += 20;\n    size = this.calcSize(this._fullDom, desiredSize);\n  }\n\n  // Setting height or width to number like 100.00000005 won't work (it will be truncated).\n  // Unfortunately ace editor will do the same math we do, and will expect the height or width\n  // of the container to be 100.0000005, and when it finds out that it is only 100px will show\n  // scrollbars. To fix this issue we will make the container a little bit bigger.\n  // This won't help for zooming (where the same problem occurs but in many more places), but will\n  // help for Windows users who have different pixel ratio.\n  this.editorDom.style.width = size.width ? Math.ceil(size.width) + 'px' : 'auto';\n  this.editorDom.style.height = size.height ? Math.ceil(size.height) + 'px' : 'auto';\n  this.editor.resize();\n};\n\nAceEditor.prototype._getContentWidth = function() {\n  return this.session.getScreenWidth() * this.editor.renderer.characterWidth;\n};\n\nAceEditor.prototype._getContentHeight = function() {\n  return Math.max(1, this.session.getScreenLength()) * this.editor.renderer.lineHeight;\n};\n\nAceEditor.prototype._setAceTheme = function(gristTheme) {\n  const {enableCustomCss} = getGristConfig();\n  const gristAppearance = gristTheme?.appearance;\n  const aceTheme = gristAppearance === 'dark' && !enableCustomCss ? 'dracula' : 'chrome';\n  this.editor.setTheme(`ace/theme/${aceTheme}`);\n};\n\nlet _RangeConstructor = null; //singleton, load it lazily\nAceEditor.makeRange = function(a, b, c, d) {\n  _RangeConstructor = _RangeConstructor || ace.require('ace/range').Range;\n  return new _RangeConstructor(a, b, c, d);\n};\n\nmodule.exports = AceEditor;\n","/**\n * This is the base class for components. The purpose is to abstract away several\n * common idioms to make derived components simpler.\n *\n * Usage:\n *    function Component(gristDoc) {\n *      Base.call(this, gristDoc);\n *      ...\n *    }\n *    Base.setBaseFor(Component);\n *\n * To create an object:\n *    var obj = Component.create(constructor_args...);\n */\n\n/* global $ */\n\nvar dispose = require('../lib/dispose');\n\n/**\n * gristDoc may be null when there is no active document.\n */\nfunction Base(gristDoc) {\n  this.gristDoc = gristDoc;\n\n  this._debugName = this.constructor.name + '[' + Base._nextObjectId + ']';\n  // TODO: devise a logging system that allows turning on/off different debug tags and levels.\n  //console.log(this._debugName, \"Base constructor\");\n\n  this._eventNamespace = '.Events_' + (Base._nextObjectId++);\n  this._eventSources = [];\n\n  this.autoDisposeCallback(this.clearEvents);\n}\n\nBase._nextObjectId = 1;\n\n/**\n * Sets ctor to inherit prototype methods from Base.\n * @param {function} ctor Constructor function which needs to inherit Base's prototype.\n */\nBase.setBaseFor = function(ctor) {\n  ctor.prototype = Object.create(Base.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  dispose.makeDisposable(ctor);\n};\n\n\n/**\n * Subscribe to eventType on source, similarly to $(source).on(eventType, optSelector, method).\n * In fact, this uses JQuery internally. The convenience is that it allows unsubscribing in bulk.\n * Also, method is called with the context of `this`.\n */\nBase.prototype.onEvent = function(source, eventType, optSelector, method) {\n  if (typeof optSelector != 'string') {\n    method = optSelector;\n    optSelector = null;\n  }\n  if (this._eventSources.indexOf(source) === -1)\n    this._eventSources.push(source);\n\n  var self = this;\n  $(source).on(eventType + this._eventNamespace, optSelector, function(event_args) {\n    Array.prototype.unshift.call(arguments, this);    // Unshift is generic enough for 'arguments'.\n    if (self._eventSources)\n      return method.apply(self, arguments);\n  });\n};\n\n/**\n * Unsubscribes this object from eventType on source, similarly to $(source).off(eventType).\n */\nBase.prototype.clearEvent = function(source, eventType) {\n  $(source).off(eventType + this._eventNamespace);\n};\n\n/**\n * Unsubscribes this object from all events that it subscribed to via onEvent().\n */\nBase.prototype.clearEvents = function() {\n  var sources = this._eventSources;\n  for (var i = 0; i < sources.length; i++) {\n    $(sources[i]).off(this._eventNamespace);\n  }\n  this._eventSources.length = 0;\n};\n\nmodule.exports = Base;\n","/* globals KeyboardEvent */\n\nconst _ = require('underscore');\nconst ko = require('knockout');\nconst moment = require('moment-timezone');\nconst {nativeCompare, roundDownToMultiple, waitObs} = require('app/common/gutil');\nconst gutil = require('app/common/gutil');\nconst MANUALSORT  = require('app/common/gristTypes').MANUALSORT;\nconst gristTypes = require('app/common/gristTypes');\nconst tableUtil = require('../lib/tableUtil');\nconst {DataRowModel} = require('../models/DataRowModel');\nconst {DynamicQuerySet} = require('../models/QuerySet');\nconst {SortFunc} = require('app/common/SortFunc');\nconst rowset = require('../models/rowset');\nconst Base = require('./Base');\nconst {Cursor} = require('./Cursor');\nconst FieldBuilder = require('../widgets/FieldBuilder');\nconst commands = require('./commands');\nconst BackboneEvents = require('backbone').Events;\nconst {ClientColumnGetters} = require('app/client/models/ClientColumnGetters');\nconst {reportError, reportSuccess} = require('app/client/models/errors');\nconst {urlState} = require('app/client/models/gristUrlState');\nconst {SectionFilter} = require('app/client/models/SectionFilter');\nconst {copyToClipboard} = require('app/client/lib/clipboardUtils');\nconst {setTestState} = require('app/client/lib/testState');\nconst {ExtraRows} = require('app/client/models/DataTableModelWithDiff');\nconst {createFilterMenu} = require('app/client/ui/ColumnFilterMenu');\nconst {closeRegisteredMenu} = require('app/client/ui2018/menus');\nconst {COMMENTS} = require('app/client/models/features');\nconst {DismissedPopup} = require('app/common/Prefs');\nconst {markAsSeen} = require('app/client/models/UserPrefs');\nconst {buildConfirmDelete, reportUndo} = require('app/client/components/modals');\n\n/**\n * BaseView forms the basis for ViewSection classes.\n * @param {Object} viewSectionModel - The model for the viewSection represented.\n * @param {Boolean} options.isPreview - Whether the view is a read-only preview (e.g. Importer view).\n * @param {Boolean} options.addNewRow - Whether to include an add row in the model.\n */\nfunction BaseView(gristDoc, viewSectionModel, options) {\n  Base.call(this, gristDoc);\n\n  this.options = options || {};\n  this.viewSection = viewSectionModel;\n  this._name = this.viewSection.titleDef.peek();\n\n  //--------------------------------------------------\n  // Observable models mapped to the document\n\n  // Instantiate the models for the view metadata and for the data itself.\n  // The table should never change for a given view, so no need to watch the table() observable.\n  this.schemaModel = this.viewSection.table();\n\n  // Check if we are making a comparison with another document.\n  this.comparison = this.gristDoc.comparison;\n\n  // TODO: but accessing by tableId identifier may be problematic when the table is renamed.\n  this.tableModel = this.gristDoc.getTableModelMaybeWithDiff(this.schemaModel.tableId());\n  this.extraRows = new ExtraRows(this.schemaModel.tableId(), this.comparison && this.comparison.details);\n\n  // We use a DynamicQuerySet as the underlying RowSource, with ColumnFilters applies on top of\n  // it. It filters based on section linking, re-querying as needed in case of onDemand tables.\n  this._queryRowSource = DynamicQuerySet.create(this, gristDoc.querySetManager, this.tableModel);\n  this._mainRowSource = this._queryRowSource;\n\n  if (this.comparison) {\n    // Assign extra row ids for any rows added in the remote (right) table or removed in the\n    // local (left) table.\n    const extraRowIds = this.extraRows.getExtraRows();\n    this._mainRowSource = rowset.ExtendedRowSource.create(this, this._mainRowSource, extraRowIds);\n  }\n\n  // Create a section filter and a filtered row source that subscribes to its changes.\n  // `sectionFilter` also provides an `addTemporaryRow()` to allow views to display newly inserted rows,\n  // and `setFilterOverride()` to allow controlling a filter from a column menu.\n  this._sectionFilter = SectionFilter.create(this, this.viewSection, this.tableModel.tableData);\n  this._filteredRowSource = rowset.FilteredRowSource.create(this, this._sectionFilter.sectionFilterFunc.get());\n  this._filteredRowSource.subscribeTo(this._mainRowSource);\n  this.autoDispose(this._sectionFilter.sectionFilterFunc.addListener(filterFunc => {\n    this._filteredRowSource.updateFilter(filterFunc);\n  }));\n\n  this.rowSource = this._filteredRowSource;\n\n  // Sorted collection of all rows to show in this view.\n  this.sortedRows = rowset.SortedRowSet.create(this, null, this.tableModel.tableData);\n\n  // Re-sort when sortSpec changes.\n  this.sortFunc = new SortFunc(new ClientColumnGetters(this.tableModel, {unversioned: true}));\n  this.autoDispose(this.viewSection.activeDisplaySortSpec.subscribeInit(function(spec) {\n    this.sortFunc.updateSpec(spec);\n    this.sortedRows.updateSort((rowId1, rowId2) => {\n      var value = nativeCompare(rowId1 === \"new\", rowId2 === \"new\");\n      return value || this.sortFunc.compare(rowId1, rowId2);\n    });\n  }, this));\n\n  // Here we are subscribed to the bulk of the data (main table, possibly filtered).\n  this.sortedRows.subscribeTo(this._filteredRowSource);\n\n  // We create a special one-row RowSource for the \"Add new\" row, in case we need it.\n  this.newRowSource = rowset.RowSource.create(this);\n  this.newRowSource.getAllRows = function() { return ['new']; };\n\n  // This is the LazyArrayModel containing DataRowModels, for rendering, e.g. with scrolly.\n  this.viewData = this.autoDispose(this.tableModel.createLazyRowsModel(this.sortedRows));\n\n  // Floating row model that is not destroyed when the row is scrolled out of view. It must be\n  // assigned manually to a rowId. Additionally, we override the saving of field values with a\n  // custom method that handles better positioning of cursor on adding a new row.\n  this.editRowModel = this.autoDispose(this.tableModel.createFloatingRowModel());\n  this.editRowModel._saveField =\n    (colName, value) => this._saveEditRowField(this.editRowModel, colName, value);\n\n  // Reset heights of rows when there is an action that affects them.\n  this.listenTo(this.viewData, 'rowModelNotify', rowModels => this.onRowResize(rowModels));\n\n  this.listenTo(this.viewSection.events, 'rowHeightChange', this.onResize );\n\n  // Create a command group for keyboard shortcuts common to all views.\n  this.autoDispose(commands.createGroup(BaseView.commonCommands, this, this.viewSection.hasFocus));\n\n  //--------------------------------------------------\n  // Prepare logic for linking with other sections.\n\n  // A computed for the rowId of the row selected by section linking.\n  this.linkedRowId = this.autoDispose(ko.computed(() => {\n    let linking = this.viewSection.linkingState();\n    return linking && linking.cursorPos ? linking.cursorPos() : null;\n  }).extend({deferred: true}));\n\n  // Update the cursor whenever linkedRowId() changes (but only if we have any linking).\n  this.autoDispose(this.linkedRowId.subscribe(rowId => {\n    if (this.viewSection.linkingState.peek()) {\n      this.setCursorPos({rowId: rowId || 'new'});\n    }\n  }));\n\n  this.isLinkSource = this.autoDispose(ko.pureComputed(() => this.viewSection.linkedSections().all().length > 0));\n\n  // Indicated whether editing the section should be disabled given the current linking state.\n  this.disableEditing = this.autoDispose(ko.computed(() => {\n    const linking = this.viewSection.linkingState();\n    return linking && linking.disableEditing();\n  }));\n\n  this.isPreview = this.options.isPreview ?? false;\n\n  this.enableAddRow = this.autoDispose(ko.computed(() => this.options.addNewRow &&\n    !this.viewSection.disableAddRemoveRows() && !this.disableEditing()));\n\n  // Hide the add row if editing is disabled via filter linking.\n  this.autoDispose(this.enableAddRow.subscribeInit(_enableAddRow => {\n    if (_enableAddRow) {\n      this.sortedRows.subscribeTo(this.newRowSource);\n    } else {\n      this.sortedRows.unsubscribeFrom(this.newRowSource);\n    }\n  }));\n\n  //--------------------------------------------------\n  // Observables local to this view\n  this._isLoading = ko.observable(true);\n  this._pendingCursorPos = this.viewSection.lastCursorPos;\n\n  // Initialize the cursor with the previous cursor position indices, if they exist.\n  console.log(\"%s BaseView viewSection %s (%s) lastCursorPos %s\", this._debugName, this.viewSection.getRowId(),\n    this.viewSection.table().tableId(), JSON.stringify(this.viewSection.lastCursorPos));\n  this.cursor = this.autoDispose(Cursor.create(null, this, this.viewSection.lastCursorPos));\n\n  this.currentColumn = this.autoDispose(ko.pureComputed(() =>\n    this.viewSection.viewFields().at(this.cursor.fieldIndex()).column()\n  ).extend({rateLimit: 0}));     // TODO Test this without the rateLimit\n\n  this.currentEditingColumnIndex = ko.observable(-1);\n\n  // A koArray of FieldBuilder objects, one for each view-section field.\n  this.fieldBuilders = this.autoDispose(\n    FieldBuilder.createAllFieldWidgets(this.gristDoc, this.viewSection.viewFields, this.cursor, {\n      isPreview: this.isPreview,\n    })\n  );\n\n  // An observable evaluating to the FieldBuilder for the field where the cursor is.\n  this.activeFieldBuilder = this.autoDispose(ko.pureComputed(() =>\n    this.fieldBuilders.at(this.cursor.fieldIndex())\n  ));\n\n  // By default, a view doesn't support selectedColumns, but it can be overridden.\n  this.selectedColumns = null;\n\n  // Observable for whether the data in this view is truncated, i.e. not all rows are included\n  // (this can only be true for on-demand tables).\n  this.isTruncated = ko.observable(false);\n\n  // This computed's purpose is the side-effect of calling makeQuery() initially and when any\n  // dependency changes.\n  this.autoDispose(ko.computed(() => {\n    this._isLoading(true);\n    const linkingFilter = this.viewSection.linkingFilter();\n    this._queryRowSource.makeQuery(linkingFilter.filters, linkingFilter.operations, (err) => {\n      if (this.isDisposed()) { return; }\n      if (err) { reportError(err); }\n      this.onTableLoaded();\n    });\n  }));\n\n  // Reset cursor to the first row when filtering changes.\n  this.autoDispose(this.viewSection.linkingFilter.subscribe((x) => this.onLinkFilterChange()));\n\n  // When sorting changes, reset the cursor to the first row. (The alternative of moving the\n  // cursor to stay at the same record is sometimes better, but sometimes more annoying.)\n  this.autoDispose(this.viewSection.activeSortSpec.subscribe(() => this.setCursorPos({rowIndex: 0})));\n\n  this.copySelection = ko.observable(null);\n\n  // Whether parts needed for printing should be rendered now.\n  this._isPrinting = ko.observable(false);\n}\nBase.setBaseFor(BaseView);\n_.extend(Base.prototype, BackboneEvents);\n\n/**\n * These commands are common to GridView and DetailView.\n */\nBaseView.commonCommands = {\n  input: function(init) {\n    this.scrollToCursor(true).catch(reportError);\n    this.activateEditorAtCursor({init});\n  },\n  editField: function() { closeRegisteredMenu(); this.scrollToCursor(true); this.activateEditorAtCursor(); },\n\n  insertRecordBefore: function() { this.insertRow(this.cursor.rowIndex()); },\n  insertRecordAfter: function() { this.insertRow(this.cursor.rowIndex() + 1); },\n\n  insertCurrentDate: function() { this.insertCurrentDate(false); },\n  insertCurrentDateTime: function() { this.insertCurrentDate(true); },\n\n  copyLink: function() { this.copyLink().catch(reportError); },\n\n  deleteRecords: function(source) { this.deleteRecords(source); },\n\n  filterByThisCellValue: function() { this.filterByThisCellValue(); },\n  duplicateRows: function() { this._duplicateRows().catch(reportError); },\n  openDiscussion: function() { this.openDiscussionAtCursor(); },\n};\n\nBaseView.prototype.selectedRows = function() {\n  return [];\n};\n\nBaseView.prototype.deleteRows = function(rowIds) {\n  return this.tableModel.sendTableAction(['BulkRemoveRecord', rowIds]);\n};\n\nBaseView.prototype.deleteRecords = function(source) {\n  const rowIds = this.selectedRows();\n  if (this.viewSection.disableAddRemoveRows() || rowIds.length === 0){\n    return;\n  }\n  const isKeyboard = source instanceof KeyboardEvent;\n  const popups = this.gristDoc.docPageModel.appModel.dismissedPopups;\n  const popupName = DismissedPopup.check('deleteRecords');\n  const onSave = async (remember) => {\n    if (remember) {\n      markAsSeen(popups, popupName);\n    }\n    return this.deleteRows(rowIds);\n  };\n  if (isKeyboard && !popups.get().includes(popupName)) {\n    // If we can't find it, use viewPane itself\n    this.scrollToCursor();\n    const selectedCell = this.viewPane.querySelector(\".selected_cursor\") || this.viewPane;\n    buildConfirmDelete(selectedCell, onSave, rowIds.length <= 1);\n  } else {\n    onSave().then(() => {\n      reportUndo(this.gristDoc, `You deleted ${rowIds.length} row${rowIds.length > 1 ? 's' : ''}.`);\n      return true;\n    });\n  }\n};\n\n/**\n * Sets the cursor to the given position, deferring if necessary until the current query finishes\n * loading.\n */\nBaseView.prototype.setCursorPos = function(cursorPos) {\n  if (this.isDisposed()) {\n    return;\n  }\n  if (!this._isLoading.peek()) {\n    this.cursor.setCursorPos(cursorPos);\n  } else {\n    // This is the first step; the second happens in onTableLoaded.\n    this._pendingCursorPos = cursorPos;\n    this.cursor.setLive(false);\n  }\n};\n\n/**\n * Returns a promise that's resolved when the query being loaded finishes loading.\n * If no query is being loaded, it will resolve immediately.\n */\nBaseView.prototype.getLoadingDonePromise = function() {\n  return waitObs(this._isLoading, (value) => !value);\n};\n\n/**\n * Start editing the selected cell.\n * @param {String} input: If given, initialize the editor with the given input (rather than the\n *    original content of the cell).\n */\nBaseView.prototype.activateEditorAtCursor = function(options) {\n  var builder = this.activeFieldBuilder();\n  if (builder.isEditorActive()) {\n    return;\n  }\n  var rowId = this.viewData.getRowId(this.cursor.rowIndex());\n  // LazyArrayModel row model which is also used to build the cell dom. Needed since\n  // it may be used as a key to retrieve the cell dom, which is useful for editor placement.\n  var lazyRow = this.getRenderedRowModel(rowId);\n  if (!lazyRow) {\n    // TODO scroll into view. For now, just don't activate the editor.\n    return;\n  }\n  this.editRowModel.assign(rowId);\n  builder.buildEditorDom(this.editRowModel, lazyRow, options || {});\n};\n\n\n/**\n * Opens discussion panel at the cursor position. Returns true if discussion panel was opened.\n */\n BaseView.prototype.openDiscussionAtCursor = function(id) {\n  if (!COMMENTS().get()) { return false; }\n  var builder = this.activeFieldBuilder();\n  if (builder.isEditorActive()) {\n    return false;\n  }\n  var rowId = this.viewData.getRowId(this.cursor.rowIndex());\n  // LazyArrayModel row model which is also used to build the cell dom. Needed since\n  // it may be used as a key to retrieve the cell dom, which is useful for editor placement.\n  var lazyRow = this.getRenderedRowModel(rowId);\n  if (!lazyRow) {\n    // TODO scroll into view. For now, just don't start discussion.\n    return false;\n  }\n  this.editRowModel.assign(rowId);\n  builder.buildDiscussionPopup(this.editRowModel, lazyRow, id);\n  return true;\n};\n\n\n/**\n * Move the floating RowModel for editing to the current cursor position, and return it.\n *\n * This is used for opening the formula editor in the side panel; the current row is used to get\n * possible exception info from the formula.\n */\nBaseView.prototype.moveEditRowToCursor = function() {\n  var rowId = this.viewData.getRowId(this.cursor.rowIndex());\n  this.editRowModel.assign(rowId);\n  return this.editRowModel;\n};\n\n// Get an anchor link for the current cell and a given view section to the clipboard.\nBaseView.prototype.getAnchorLinkForSection = function(sectionId) {\n  const rowId = this.viewData.getRowId(this.cursor.rowIndex())\n      // If there are no visible rows (happens in some widget linking situations),\n      // pick an arbitrary row which will hopefully be close to the top of the table.\n      || this.tableModel.tableData.findMatchingRowId({})\n      // If there are no rows at all, return the 'new record' row ID.\n      // Note that this case only happens in combination with the widget linking mentioned.\n      // If the table is empty but the 'new record' row is selected, the `viewData.getRowId` line above works.\n      || 'new';\n  // The `fieldIndex` will be null if there are no visible columns.\n  const fieldIndex = this.cursor.fieldIndex.peek();\n  const field = fieldIndex !== null ? this.viewSection.viewFields().peek()[fieldIndex] : null;\n  const colRef = field?.colRef.peek();\n  return {hash: {sectionId, rowId, colRef}};\n}\n\n// Copy an anchor link for the current row to the clipboard.\nBaseView.prototype.copyLink = async function() {\n  const sectionId = this.viewSection.getRowId();\n  const anchorUrlState = this.getAnchorLinkForSection(sectionId);\n  try {\n    const link = urlState().makeUrl(anchorUrlState);\n    await copyToClipboard(link);\n    setTestState({clipboard: link});\n    reportSuccess('Link copied to clipboard', {key: 'clipboard'});\n  } catch (e) {\n    throw new Error('cannot copy to clipboard');\n  }\n};\n\nBaseView.prototype.filterByThisCellValue = function() {\n  const rowId = this.viewData.getRowId(this.cursor.rowIndex());\n  const col = this.viewSection.viewFields().peek()[this.cursor.fieldIndex()].column();\n  let value = this.tableModel.tableData.getValue(rowId, col.colId.peek());\n\n  // This mimics the logic in ColumnFilterMenu.addCountsToMap\n  // ChoiceList and Reflist values get 'flattened' out so we filter by each element within.\n  // In any other column type, complex values (even lists) get converted to JSON.\n  let filterValues;\n  const colType = col.type.peek();\n  if (gristTypes.isList(value) && gristTypes.isListType(colType)) {\n    filterValues = value.slice(1);\n    if (!filterValues.length) {\n      // If the list is empty, filter instead by an empty value for the whole list\n      filterValues = [colType === \"ChoiceList\" ? \"\" : null];\n    }\n  } else {\n    if (Array.isArray(value)) {\n      value = JSON.stringify(value);\n    }\n    filterValues = [value];\n  }\n  this.viewSection.setFilter(col.getRowId(), {filter: JSON.stringify({included: filterValues})});\n};\n\n/**\n * Insert a new row immediately before the row at the given index if given an Integer. Otherwise\n * insert a new row at the end.\n */\nBaseView.prototype.insertRow = function(index) {\n  if (this.viewSection.disableAddRemoveRows() || this.disableEditing()) {\n    return;\n  }\n  var rowId = this.viewData.getRowId(index);\n  var insertPos = Number.isInteger(rowId) ?\n    this.tableModel.tableData.getValue(rowId, 'manualSort') : null;\n\n  return this.sendTableAction(['AddRecord', null, { 'manualSort': insertPos }])\n  .then(rowId => {\n    if (!this.isDisposed()) {\n      this._sectionFilter.addTemporaryRow(rowId);\n      this.setCursorPos({rowId});\n    }\n    return rowId;\n  });\n};\n\nBaseView.prototype._getDefaultColValues = function() {\n  const linkingState = this.viewSection.linkingState.peek();\n  if (!linkingState) {\n    return {};\n  }\n  return linkingState.getDefaultColValues();\n};\n\n/**\n * Enhances [Bulk]AddRecord actions to include the default values determined by the current\n * section-linking filter.\n */\nBaseView.prototype._enhanceAction = function(action) {\n  if (action[0] === 'AddRecord' || action[0] === 'BulkAddRecord') {\n    let colValues = this._getDefaultColValues();\n    let rowIds = action[1];\n    if (action[0] === 'BulkAddRecord') {\n      colValues = _.mapObject(colValues, v => rowIds.map(() => v));\n    }\n    Object.assign(colValues, action[2]);\n    return [action[0], rowIds, colValues];\n  } else {\n    return action;\n  }\n};\n\n/**\n * Enhances a list of table actions and turns them from implicit-table actions into\n * proper actions.\n */\nBaseView.prototype.prepTableActions = function(actions) {\n  actions = actions.map(a => this._enhanceAction(a));\n  actions.forEach(action_ => {\n    action_.splice(1, 0, this.tableModel.tableData.tableId);\n  });\n  return actions;\n};\n\n/**\n * Shortcut for `.tableModel.tableData.sendTableActions`, which also sets default values\n * determined by the current section-linking filter, if any.\n */\nBaseView.prototype.sendTableActions = function(actions, optDesc) {\n  return this.tableModel.sendTableActions(actions.map(a => this._enhanceAction(a)), optDesc);\n};\n\n\n/**\n * Shortcut for `.tableModel.tableData.sendTableAction`, which also sets default values\n * determined by the current section-linking filter, if any.\n */\nBaseView.prototype.sendTableAction = function(action, optDesc) {\n  return action ? this.tableModel.sendTableAction(this._enhanceAction(action), optDesc) : null;\n};\n\n\n/**\n * Inserts the current date/time into the selected cell if the cell is of a compatible type\n * (Text/Date/DateTime/Any).\n * @param {Boolean} withTime: Whether to include the time in addition to the date. This is ignored\n *    for Date columns (assumed false) and for DateTime (assumed true).\n */\nBaseView.prototype.insertCurrentDate = function(withTime) {\n  let column = this.currentColumn();\n  if (column.isRealFormula()) {\n    // Ignore the shortcut when in a formula column.\n    return;\n  }\n  let type = column.pureType();\n  let value, now = Date.now();\n  const docTimezone = this.gristDoc.docInfo.timezone.peek();\n  if (type === 'Text' || type === 'Any') {\n    // Use document timezone. Don't forget to use uppercase HH for 24-hour time.\n    value = moment.tz(now, docTimezone).format('YYYY-MM-DD' + (withTime ? ' HH:mm:ss' : ''));\n  } else if (type === 'Date') {\n    // Get UTC midnight for the current date (as seen in docTimezone). This is a bit confusing. If\n    // it's \"2019-11-14 23:30 -05:00\", then it's \"2019-11-15 04:30\" in UTC. Since we measure time\n    // from Epoch UTC, we want the UTC time to have the correct date, so need to add the offset\n    // (-05:00) to get \"2019-11-14 23:30\" in UTC, and then round down to midnight.\n    const offsetMinutes = moment.tz(now, docTimezone).utcOffset();\n    value = roundDownToMultiple(now / 1000 + offsetMinutes * 60, 24*3600);\n  } else if (type === 'DateTime') {\n    value = now / 1000;\n  } else {\n    // Ignore the shortcut when in a column of an inappropriate type.\n    return;\n  }\n  var rowId = this.viewData.getRowId(this.cursor.rowIndex());\n  this.editRowModel.assign(rowId);\n  this.editRowModel[column.colId()].setAndSave(value);\n};\n\n\n/**\n * Override the saving of field values to add some extra processing:\n * - If a new row is saved, then we may need to adjust the row where the cursor is.\n * - We add the edited or added row to ensure it's displayed regardless of current columnFilters.\n * - We change the main view's row observables to see the new value immediately.\n * TODO: When saving a formula in the addRow, the cursor moves down instead of staying in place.\n *       To fix that behavior, propose to factor out the `isAddRow` overrides from here\n *       into a `setNewRowColValues` on the editRowModel and have `FieldBuilder._saveEdit` call\n *       that instead of `updateColValues`.\n */\nBaseView.prototype._saveEditRowField = function(editRowModel, colName, value) {\n  if (editRowModel._isAddRow.peek()) {\n    this.cursor.setLive(false);\n    const colValues = this._getDefaultColValues();\n    colValues[colName] = value;\n\n    return editRowModel.updateColValues(colValues)\n    // Once we know the new row's rowId, add it to column filters to make sure it's displayed.\n    .then(rowId => {\n      if (!this.isDisposed()) {\n        this._sectionFilter.addTemporaryRow(rowId);\n        this.setCursorPos({rowId});\n      }\n      return rowId;\n    })\n    .finally(() => !this.isDisposed() && this.cursor.setLive(true));\n  } else {\n    var rowId = editRowModel.getRowId();\n    // We are editing the floating \"edit\" rowModel, but to ensure that we see data in the main view\n    // (when the editor closes), we immediately update the main view's rowModel, if such exists.\n    var mainRowModel = this.getRenderedRowModel(rowId);\n    if (mainRowModel) {\n      mainRowModel[colName](value);\n    }\n    const ret = DataRowModel.prototype._saveField.call(editRowModel, colName, value)\n      // Display this rowId, even if it doesn't match the filter,\n      // unless the filter is on a Bool column\n      .then((result) => {\n        if (!this.isDisposed() && this.currentColumn().pureType() !== 'Bool') {\n          this._sectionFilter.addTemporaryRow(rowId);\n        }\n        return result;\n      })\n      .finally(() => !this.isDisposed() && mainRowModel && mainRowModel._assignColumn(colName));\n    return this.viewSection.isSorted() ? ret : null;\n    // Do not return the saveField call in the case that the column is unsorted: in this case,\n    // we assumes optimistically that the action is successful and browser events can\n    // continue being processed immediately without waiting.\n    // When sorted, we wait on the saveField call so we may determine where the row ends\n    // up for cursor movement purposes.\n  }\n};\n\n/**\n * Uses the current cursor selection to return a rich paste object with a reference to the data,\n * and the selection ranges.  See CopySelection.js\n *\n * @returns {pasteObj} - Paste object\n */\nBaseView.prototype.copy = function(selection) {\n  // Clear the previous copy selection, if any.\n  commands.allCommands.clearCopySelection.run();\n\n  this.copySelection(selection);\n\n  return {\n    data: this.tableModel.tableData,\n    selection: selection\n  };\n};\n\n/**\n * Uses the current cursor selection to return a rich paste object with a reference to the data,\n * the selection ranges and a callback that when called performs all of the actions needed for a cut.\n *\n * @returns {pasteObj} - Paste object\n */\nBaseView.prototype.cut = function(selection) {\n  // Clear the previous copy selection, if any.\n  commands.allCommands.clearCopySelection.run();\n\n  this.copySelection(selection);\n\n  return {\n    data: this.tableModel.tableData,\n    selection: selection,\n    cutCallback: () => tableUtil.makeDeleteAction(selection)\n  };\n};\n\n/**\n * Helper to send paste actions from the cutCallback and a list of paste actions.\n */\nBaseView.prototype.sendPasteActions = function(cutCallback, actions) {\n  let cutAction = null;\n  // If this is a cut -> paste, add the cut action and a description.\n  if (cutCallback) {\n    cutAction = cutCallback();\n    // If the cut occurs on an edit restricted cell, there may be no cut action.\n    if (cutAction) { actions.unshift(cutAction); }\n  }\n  return this.gristDoc.docData.sendActions(actions);\n};\n\nBaseView.prototype.buildDom = function() {\n  throw new Error(\"Not Implemented\");\n};\n\n/**\n * Called by ViewLayout to return view-specific controls to add into its ViewSection's title bar.\n * By default builds nothing. Derived views may override.\n */\nBaseView.prototype.buildTitleControls = function() {\n  return null;\n};\n\n/**\n * Called when table data gets loaded (if already loaded, then called immediately after the\n * constructor). Derived views may override.\n */\nBaseView.prototype.onTableLoaded = function() {\n  // Complete the setting of a pending cursor position (see setCursorPos() for the first half).\n  if (this._pendingCursorPos) {\n    this.cursor.setCursorPos(this._pendingCursorPos);\n    this._pendingCursorPos = null;\n  }\n  this._isLoading(false);\n  this.isTruncated(this._queryRowSource.isTruncated);\n  this.cursor.setLive(true);\n};\n\n/**\n * Called when view gets resized. Derived views may override.\n */\nBaseView.prototype.onResize = function() {\n};\n\n/**\n * Called when rows have changed and may potentially need resizing. Derived views may override.\n * @param {Array<DataRowModel>} rowModels: Array of row models whose size may have changed.\n */\nBaseView.prototype.onRowResize = function(rowModels) {\n};\n\n/**\n * Called when user selects a different row which drives the link-filtering of this section.\n */\nBaseView.prototype.onLinkFilterChange = function(rowId) {\n  // If this section is linked, go to the first row as the row previously selected may no longer\n  // be visible.\n  if (this.viewSection.linkingState.peek()) {\n    this.setCursorPos({rowIndex: 0});\n  }\n};\n\n/**\n * Called before and after printing this section.\n */\nBaseView.prototype.prepareToPrint = function(onOff) {\n  this._isPrinting(onOff);\n};\n\n/**\n * Called to obtain the rowModel for the given rowId. Returns a rowModel if it belongs to the\n * section and is rendered, otherwise returns null.\n * Useful to tie a rendered row to the row being edited. Derived views may override.\n */\nBaseView.prototype.getRenderedRowModel = function(rowId) {\n  return this.viewData.getRowModel(rowId);\n};\n\n/**\n * Returns the index of the last non-AddNew row in the grid.\n */\nBaseView.prototype.getLastDataRowIndex = function() {\n  let last = this.viewData.peekLength - 1;\n  return (last >= 0 && this.viewData.getRowId(last) === 'new') ? last - 1 : last;\n};\n\n/**\n * Creates and opens ColumnFilterMenu for a given field/column, and returns its PopupControl.\n */\nBaseView.prototype.createFilterMenu = function(openCtl, filterInfo, options) {\n  const {showAllFiltersButton, onClose} = options;\n  return createFilterMenu({\n    openCtl,\n    sectionFilter: this._sectionFilter,\n    filterInfo,\n    rowSource: this._mainRowSource,\n    tableData: this.tableModel.tableData,\n    gristDoc: this.gristDoc,\n    showAllFiltersButton,\n    onClose,\n  });\n};\n\n/**\n * Whether the rows shown by this view are a proper subset of all rows in the table.\n */\nBaseView.prototype.isFiltered = function() {\n  return this._filteredRowSource.getNumRows() < this.tableModel.tableData.numRecords();\n};\n\n/**\n * Makes sure that active record is in the view.\n * @param {Boolean} sync If the scroll should be performed synchronously. For typing we should scroll synchronously,\n * for other cases asynchronously as there might be some other operations pending (see doScrollChildIntoView in koDom).\n */\nBaseView.prototype.scrollToCursor = function() {\n  // to override\n  return Promise.resolve();\n};\n\n/**\n * Return a list of manual sort positions so that inserting {numInsert} rows\n * with the returned positions will place them in between index-1 and index.\n * when the GridView is sorted by MANUALSORT\n **/\nBaseView.prototype._getRowInsertPos = function(index, numInserts) {\n  var rowId = this.viewData.getRowId(index);\n  var insertPos = this.tableModel.tableData.getValue(rowId, MANUALSORT);\n  return Array(numInserts).fill(insertPos);\n};\n\n/**\n * Duplicates selected row(s) and returns inserted rowIds\n */\nBaseView.prototype._duplicateRows = async function() {\n  if (this.viewSection.disableAddRemoveRows() || this.disableEditing()) {\n    return;\n  }\n  // Get current selection (we need only rowIds).\n  const selection = this.getSelection();\n  const rowIds = selection.rowIds;\n  const length = rowIds.length;\n  // Start assembling action.\n  const action = ['BulkAddRecord'];\n  // Put nulls as rowIds.\n  action.push(gutil.arrayRepeat(length, null));\n  const columns = {};\n  action.push(columns);\n  // Calculate new positions for rows using helper function. It requires\n  // index where we want to put new rows (it accepts new row index).\n  const lastSelectedIndex = this.viewData.getRowIndex(rowIds[length-1]);\n  columns.manualSort = this._getRowInsertPos(lastSelectedIndex + 1, length);\n  // Now copy all visible data.\n  for(const col of this.viewSection.columns.peek()) {\n    // But omit all formula columns (and empty ones).\n    const colId = col.colId.peek();\n    if (col.isFormula.peek()) {\n      continue;\n    }\n    columns[colId] = rowIds.map(id => this.tableModel.tableData.getValue(id, colId));\n    // If all values in a column are censored, remove this column,\n    if (columns[colId].every(gristTypes.isCensored)) {\n      delete columns[colId]\n    } else {\n      // else remove only censored values\n      columns[colId].forEach((val, i) => {\n        if (gristTypes.isCensored(val)) {\n          columns[colId][i] = null;\n        }\n      })\n    }\n  }\n  const result = await this.sendTableAction(action, `Duplicated rows ${rowIds}`);\n  return result;\n}\n\n\nmodule.exports = BaseView;\n","/**\n * dispose.js provides tools to components that needs to dispose of resources, such as\n * destroy DOM, and unsubscribe from events. The motivation with examples is presented here:\n *\n *    https://phab.getgrist.com/w/disposal/\n */\n\n\nvar ko = require('knockout');\nvar util = require('util');\nvar _ = require(\"underscore\");\n\n// Use the browser globals in a way that allows replacing them with mocks in tests.\nvar G = require('./browserGlobals').get('DocumentFragment', 'Node');\n\n/**\n * Disposable is a base class for components that need cleanup (e.g. maintain DOM, listen to\n * events, subscribe to anything). It provides a .dispose() method that should be called to\n * destroy the component, and .autoDispose() method that the component should use to take\n * responsibility for other pieces that require cleanup.\n *\n * To define a disposable prototype:\n *    function Foo() { ... }\n *    dispose.makeDisposable(Foo);\n *\n * To define a disposable ES6 class:\n *    class Foo extends dispose.Disposable { create() {...} }\n *\n *    NB: Foo should not have its construction logic in a constructor but in a `create` method\n *    instead. If Foo defines a constructor (for taking advantage of type checking) the constructor\n *    should only call super `super(arg1, arg2 ...)`. Any way calling `new Foo(...args)` safely\n *    construct the component.\n *\n * In Foo's constructor or methods, take ownership of other objects:\n *    this.bar = this.autoDispose(Bar.create(...));\n * The argument will get disposed when `this` is disposed. If it's a DOM node, it will get removed\n * using ko.removeNode(). If it has a `dispose` method, it will be called.\n *\n * For more customized disposal:\n *    this.baz = this.autoDisposeWith('destroy', new Baz());\n *    this.elem = this.autoDisposeWith(ko.cleanNode, document.createElement(...));\n * When `this` is disposed, will call this.baz.destroy(), and ko.cleanNode(this.elem).\n *\n * To call another method on disposal (e.g. to add custom disposal logic):\n *    this.autoDisposeCallback(this.myUnsubscribeAllMethod);\n * The method will be called with `this` as context, and no arguments.\n *\n * To create Foo:\n *    var foo = Foo.create(args...);\n * `Foo.create` ensures that if the constructor throws an exception, any calls to .autoDispose()\n * that happened before that are honored.\n *\n * To dispose of Foo:\n *    foo.dispose();\n * Owned objects will be disposed in reverse order from which `autoDispose` were called. Note that\n * `foo` is no longer usable afterwards, and all its properties are wiped.\n * If Foo has a `stopListening` method (e.g. inherits from Backbone.Events), `dispose` will call\n * it automatically, as if it were added with `this.autoDisposeCallback(this.stopListening)`.\n *\n * To release an owned object:\n *    this.disposeRelease(this.bar);\n *\n * To dispose of an owned object early:\n *    this.disposeDiscard(this.bar);\n *\n * To determine if a reference refers to object that has already been disposed:\n *    foo.isDisposed()\n */\nclass Disposable {\n  /**\n   * A safe constructor which calls dispose() in case the creation throws an exception.\n   */\n  constructor(...args) {\n    safelyConstruct(this.create, this, args);\n  }\n\n  /**\n   * Static method to allow rewriting old classes into ES6 without modifying their\n   * instantiation to use `new Foo()` (i.e. you can continue to use `Foo.create()`).\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n}\n\nObject.assign(Disposable.prototype, {\n  /**\n   * Take ownership of `obj`, and dispose it when `this.dispose` is called.\n   * @param {Object} obj: Object to take ownership of. It can be a DOM node or an object with a\n   *    `dispose` method.\n   * @returns {Object} obj\n   */\n  autoDispose: function(obj) {\n    return this.autoDisposeWith(defaultDisposer, obj);\n  },\n\n  /**\n   * As for autoDispose, but we receive a promise of an object.  We wait for it to\n   * resolve and then take ownership of it.  We return a promise that resolves to\n   * the object, or to null if the owner is disposed in the meantime.\n   */\n  autoDisposePromise: function(objPromise) {\n    return objPromise.then(obj => {\n      if (this.isDisposed()) {\n        defaultDisposer(obj);\n        return null;\n      }\n      this.autoDispose(obj);\n      return obj;\n    });\n  },\n\n  /**\n   * Take ownership of `obj`, and dispose it when `this.dispose` is called by calling the\n   * specified function.\n   * @param {Function|String} disposer: If a function, disposer(obj) will be called to dispose the\n   *    object, with `this` as the context. If a string, then obj[disposer]() will be called. E.g.\n   *        this.autoDisposeWith('destroy', a);     // will call a.destroy()\n   *        this.autoDisposeWith(ko.cleanNode, b);  // will call ko.cleanNode(b)\n   * @param {Object} obj: Object to take ownership of, on which `disposer` will be called.\n   * @returns {Object} obj\n   */\n  autoDisposeWith: function(disposer, obj) {\n    var list = this._disposalList || (this._disposalList = []);\n    list.push({ obj: obj,\n                disposer: typeof disposer === 'string' ? methodDisposer(disposer) : disposer });\n    return obj;\n  },\n\n  /**\n   * Adds the given callback to be called when `this.dispose` is called.\n   * @param {Function} callback: Called on disposal with `this` as the context and no arguments.\n   * @returns nothing\n   */\n  autoDisposeCallback: function(callback) {\n    this.autoDisposeWith(callFuncHelper, callback);\n  },\n\n  /**\n   * Remove `obj` from the list of owned objects; it will not be disposed on `this.dispose`.\n   * @param {Object} obj: Object to release.\n   * @returns {Object} obj\n   */\n  disposeRelease: function(obj) {\n    removeObjectToDispose(this._disposalList, obj);\n    return obj;\n  },\n\n  /**\n   * Dispose of an owned object `obj` now, and remove it from the list of owned objects.\n   * @param {Object} obj: Object to release.\n   * @returns nothing\n   */\n  disposeDiscard: function(obj) {\n    var entry = removeObjectToDispose(this._disposalList, obj);\n    if (entry) {\n      entry.disposer.call(this, obj);\n    }\n  },\n\n  /**\n   * Returns whether this object has already been disposed.\n   */\n  isDisposed: function() {\n    return this._disposalList === WIPED_VALUE;\n  },\n\n  /**\n   * Clean up `this` by disposing of all owned objects, and calling `stopListening()` if defined.\n   */\n  dispose: function() {\n    if (this.isDisposed()) {\n      return;\n    }\n\n    var disposalList = this._disposalList;\n    this._disposalList = WIPED_VALUE; // This makes isDisposed() true.\n    if (disposalList) {\n      // Go backwards through the disposal list, and dispose of everything.\n      for (var i = disposalList.length - 1; i >= 0; i--) {\n        var entry = disposalList[i];\n        disposeHelper(this, entry.disposer, entry.obj);\n      }\n    }\n\n    // Call stopListening if it exists. This is a convenience when using Backbone.Events. It's\n    // equivalent to calling this.autoDisposeCallback(this.stopListening) in constructor.\n    if (typeof this.stopListening === 'function') {\n      // Wrap in disposeHelper so that errors get caught.\n      disposeHelper(this, callFuncHelper, this.stopListening);\n    }\n\n    // Finish by wiping out the object, since nothing should use it after dispose().\n    // See https://phab.getgrist.com/w/disposal/ for more motivation.\n    wipeOutObject(this);\n  }\n});\nexports.Disposable = Disposable;\n\n\n/**\n * The recommended way to make an object disposable. It simply adds the methods of `Disposable` to\n * its prototype, and also adds a `Class.create()` function, for a safer way to construct objects\n * (see `safeCreate` for explanation). For instance,\n *    function Foo(args...) {...}\n *    dispose.makeDisposable(Foo);\n * Now you can create Foo objects with:\n *    var foo = Foo.create(args...);\n * And dispose of them with:\n *    foo.dispose();\n */\nfunction makeDisposable(Constructor) {\n  Object.assign(Constructor.prototype, Disposable.prototype);\n  Constructor.create = safeConstructor;\n}\nexports.makeDisposable = makeDisposable;\n\n\n/**\n * Helper to create and construct an object safely: `safeCreate(Foo, ...)` is similar to `new\n * Foo(...)`. The difference is that in case of an exception in the constructor, the dispose()\n * method will be called on the partially constructed object.\n * If you call makeDisposable(Foo), then Foo.create(...) is equivalent and more convenient.\n * @returns {Object} the newly constructed object.\n */\nfunction safeCreate(Constructor, varArgs) {\n  return safeConstructor.apply(Constructor, Array.prototype.slice.call(arguments, 1));\n}\nexports.safeCreate = safeCreate;\n\n\n/**\n * Helper used by makeDisposable() for the `create` property of a disposable class. E.g. when\n * assigned to Foo.create, the call `Foo.create(args)` becomes similar to `new Foo(args)`, but\n * calls dispose() in case the constructor throws an exception.\n */\nvar safeConstructor = function(varArgs) {\n  var Constructor = this;\n  var obj = Object.create(Constructor.prototype);\n  return safelyConstruct(Constructor, obj, arguments);\n};\n\nvar safelyConstruct = function(Constructor, obj, args) {\n  try {\n    Constructor.apply(obj, args);\n    return obj;\n  } catch (e) {\n    // Be a bit more helpful and concise in reporting errors: print error as an object (that\n    // includes its stacktrace in FF and Chrome), and avoid printing it multiple times as it\n    // bubbles up through the stack of safeConstructor calls.\n    if (!e.printed) {\n      let name = obj.constructor.name || Constructor.name;\n      console.error(\"Error constructing %s:\", name, e);\n      // assigning printed to a string throws: TypeError: Cannot create property 'printed' on [...]\n      if (_.isObject(e)) {\n        e.printed = true;\n      }\n    }\n    obj.dispose();\n    throw e;\n  }\n};\n\n// It doesn't matter what the value is, but some values cause more helpful errors than others.\n// E.g. if x = \"disposed\", then x.foo() throws \"undefined is not a function\", while when x = null,\n// x.foo() throws \"Cannot read property 'foo' of null\", which seems more helpful.\nvar WIPED_VALUE = null;\n\n\n/**\n * Wipe out the given object by setting each property to a dummy value. This is helpful for\n * objects that are disposed and should be ready to be garbage-collected. The goals are:\n * - If anything still refers to the object and uses it, we'll get an early error, rather than\n *   silently keep going, potentially doing useless work (or worse) and wasting resources.\n * - If anything still refers to the object but doesn't use it, the fields of the object can\n *   still be garbage-collected.\n * - If there are circular references between the object and its properties, they get broken,\n *   making the job easier for the garbage collector.\n */\nfunction wipeOutObject(obj) {\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      obj[k] = WIPED_VALUE;\n    }\n  }\n}\n\n/**\n * Internal helper used by disposeDiscard() and disposeRelease(). It finds, removes, and returns\n * an entry from the given disposalList.\n */\nfunction removeObjectToDispose(disposalList, obj) {\n  if (disposalList) {\n    for (var i = 0; i < disposalList.length; i++) {\n      if (disposalList[i].obj === obj) {\n        var entry = disposalList[i];\n        disposalList.splice(i, 1);\n        return entry;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Internal helper to allow adding cleanup callbacks to the disposalList. It acts as the\n * \"disposer\" for callback, by simply calling them with the same context that it is called with.\n */\nvar callFuncHelper = function(callback) {\n  callback.call(this);\n};\n\n/**\n * Internal helper to dispose objects that need a differently-named method to be called on them.\n * It's used by `autoDisposeWith` when the disposer is a string method name.\n */\nfunction methodDisposer(methodName) {\n  return function(obj) {\n    obj[methodName]();\n  };\n}\n\n/**\n * Internal helper to call a disposer on an object. It swallows errors (but reports them) to make\n * sure that when we dispose of an object, an error in disposing of one owned part doesn't stop\n * the disposal of the other parts.\n */\nfunction disposeHelper(owner, disposer, obj) {\n  try {\n    disposer.call(owner, obj);\n  } catch (e) {\n    console.error(\"While disposing %s, error disposing %s: %s\",\n      describe(owner), describe(obj), e);\n  }\n}\n\n/**\n * Helper for reporting errors during disposal. Try to report the type of the object.\n */\nfunction describe(obj) {\n  return (obj && obj.constructor && obj.constructor.name ? obj.constructor.name :\n    util.inspect(obj, {depth: 1}));\n}\n\n/**\n * Internal helper that implements the default disposal for an object. It just supports removing\n * DOM nodes with ko.removeNode, and calling dispose() on any part that has a `dispose` method.\n */\nfunction defaultDisposer(obj) {\n  if (obj instanceof G.Node) {\n    // This does both knockout- and jquery-related cleaning, and removes the node from the DOM.\n    ko.removeNode(obj);\n  } else if (typeof obj.dispose === 'function') {\n    obj.dispose();\n  } else {\n    throw new Error(\"Object has no 'dispose' method\");\n  }\n}\n\n/**\n * Removes all children of the given node, and all knockout bindings. You can use it as\n *    this.autoDisposeWith(dispose.emptyNode, node);\n */\nfunction emptyNode(node) {\n  ko.virtualElements.emptyNode(node);\n  ko.cleanNode(node);\n}\n\nexports.emptyNode = emptyNode;\n","/**\n * Our version of knockout's ko.observableArray(), similar but more efficient. It\n * supports fewer methods (mainly because we don't need other methods at the moment). Instead of\n * emitting 'arrayChange' events, it emits 'spliceChange' events.\n */\n\n\nvar ko = require('knockout');\nvar Promise = require('bluebird');\nvar dispose = require('./dispose');\nvar gutil = require('app/common/gutil');\n\nrequire('./koUtil');   // adds subscribeInit method to observables.\n\n/**\n * Event indicating that a koArray has been modified. This reflects changes to which objects are\n * in the array, not the state of those objects. A `spliceChange` event is emitted after the array\n * has been modified.\n * @event spliceChange\n * @property {Array} data - The underlying array, already modified.\n * @property {Number} start - The start index at which items were inserted or deleted.\n * @property {Number} added - The number of items inserted.\n * @property {Array} deleted - The array of items that got deleted.\n */\n\n/**\n * Creates and returns a new koArray, either empty or with the given initial values.\n * Unlike a ko.observableArray(), you access the values using array.all(), and set values using\n * array.assign() (or better, by using push() and splice()).\n */\nfunction koArray(optInitialValues) {\n  return KoArray.create(optInitialValues);\n}\n\n// The koArray function is the main export.\nmodule.exports = exports = koArray;\nexports.default = koArray;\n\n/**\n * Checks if an object is an instance of koArray.\n */\nkoArray.isKoArray = function(obj) {\n  return (obj && typeof obj.subscribe === 'function' && typeof obj.all === 'function');\n};\nexports.isKoArray = koArray.isKoArray;\n\n/**\n * Given an observable which evaluates to different arrays or koArrays, returns a single koArray\n * observable which mirrors whichever array is the current value of the observable. If a callback\n * is given, all elements are mapped through it. See also map().\n * @param {ko.observable} koArrayObservable: observable whose value is a koArray or plain array.\n * @param {Function} optCallback: If given, maps elements from original arrays.\n * @param {Object} optCallbackTarget: If callback is given, this becomes the `this` value for it.\n * @returns {koArray} a single koArray that mirrors the current value of koArrayObservable,\n *    optionally mapping them through optCallback.\n */\nkoArray.syncedKoArray = function(koArrayObservable, optCallback, optCallbackTarget) {\n  var ret = koArray();\n  optCallback = optCallback || identity;\n  ret.autoDispose(koArrayObservable.subscribeInit(function(currentArray) {\n    if (koArray.isKoArray(currentArray)) {\n      ret.syncMap(currentArray, optCallback, optCallbackTarget);\n    } else if (currentArray) {\n      ret.syncMapDisable();\n      ret.assign(currentArray.map(function(item, i) {\n        return optCallback.call(optCallbackTarget, item, i);\n      }));\n    }\n  }));\n  return ret;\n};\nexports.syncedKoArray = koArray.syncedKoArray;\n\n\nfunction SyncedState(constructFunc, key) {\n  constructFunc(this, key);\n}\ndispose.makeDisposable(SyncedState);\n\n/**\n * Create and return a new Map that's kept in sync with koArrayObj. The keys are the array items\n * themselves. The values are constructed using constructFunc(state, item), where state is a new\n * Disposable object, allowing to associate other disposable state with the item. The returned Map\n * should itself be disposed when no longer needed.\n * @param {KoArray} koArrayObj: A KoArray object to watch.\n * @param {Function} constructFunc(state, item): called for each item in the array, with a new\n *    disposable state object, on which all Disposable methods are available. The state object\n *    will be disposed when an item is removed or the returned map itself disposed.\n * @param [Number] options.addDelay: (optional) If numeric, delay calls to add items\n *    by this many milliseconds (except initialization, which is always immediate).\n * @return {Map} map object mapping array items to state objects, and with a dispose() method.\n */\nkoArray.syncedMap = function(koArrayObj, constructFunc, options) {\n  var map = new Map();\n  var sub = koArrayObj.subscribeForEach({\n    add: item => map.set(item, SyncedState.create(constructFunc, item)),\n    remove: item => gutil.popFromMap(map, item).dispose(),\n    addDelay: options && options.addDelay\n  });\n  map.dispose = () => {\n    sub.dispose();\n    map.forEach((stateObj, item) => stateObj.dispose());\n  };\n  return map;\n};\n\n\n/**\n * The actual constructor for koArray. To create a new instance, simply use koArray() (without\n * `new`). The constructor might be needed, however, to inherit from this class.\n */\nfunction KoArray(initialValues) {\n  this._array = ko.observable(initialValues || []);\n  this._preparedSpliceEvent = null;\n  this._syncSubscription = null;\n  this._disposeElements = noop;\n\n  this.autoDispose(this._array.subscribe(this._emitPreparedEvent, this, 'spectate'));\n\n  this.autoDisposeCallback(function() {\n    this._disposeElements(this.peek());\n  });\n}\nexports.KoArray = KoArray;\n\ndispose.makeDisposable(KoArray);\n\n/**\n * If called on a koArray, it will dispose of its contained items as they are removed or when the\n * array is itself disposed.\n * @returns {koArray} itself.\n */\nKoArray.prototype.setAutoDisposeValues = function() {\n  this._disposeElements = this._doDisposeElements;\n  return this;\n};\n\n/**\n * Returns the underlying array, creating a dependency when used from a computed observable.\n * Note that you must not modify the returned array directly; you should use koArray methods.\n */\nKoArray.prototype.all = function() {\n  return this._array();\n};\n\n/**\n * Returns the underlying array without creating a dependency on it.\n * Note that you must not modify the returned array directly; you should use koArray methods.\n */\nKoArray.prototype.peek = function() {\n  return this._array.peek();\n};\n\n/**\n * Returns the underlying observable whose value is a plain array.\n */\nKoArray.prototype.getObservable = function() {\n  return this._array;\n};\n\n/**\n * The `peekLength` property evaluates to the length of the underlying array. Using it does NOT\n * create a dependency on the array. Use array.all().length to create a dependency.\n */\nObject.defineProperty(KoArray.prototype, 'peekLength', {\n  configurable: false,\n  enumerable: false,\n  get: function() { return this._array.peek().length; },\n});\n\n/**\n * A shorthand for the itemModel at a given index. Returns null if the index is invalid or out of\n * range. Create a dependency on the array itself.\n */\nKoArray.prototype.at = function(index) {\n  var arr = this._array();\n  return index >= 0 && index < arr.length ? arr[index] : null;\n};\n\n/**\n * Assigns a new underlying array. This is analogous to observableArray(newValues).\n */\nKoArray.prototype.assign = function(newValues) {\n  var oldArray = this.peek();\n  this._prepareSpliceEvent(0, newValues.length, oldArray);\n  this._array(newValues.slice());\n  this._disposeElements(oldArray);\n};\n\n\n/**\n * Subscribe to events for this koArray. To be notified of splice details, subscribe to\n * 'spliceChange', which will always follow the plain 'change' events.\n */\nKoArray.prototype.subscribe = function(callback, callbackTarget, event) {\n  return this._array.subscribe(callback, callbackTarget, event);\n};\n\n\n/**\n * @private\n * Internal method to prepare a 'spliceChange' event.\n */\nKoArray.prototype._prepareSpliceEvent = function(start, numAdded, deleted) {\n  this._preparedSpliceEvent = {\n    array: null,\n    start: start,\n    added: numAdded,\n    deleted: deleted\n  };\n};\n\n/**\n * @private\n * Internal method to emit and reset a prepared 'spliceChange' event, if there is one.\n */\nKoArray.prototype._emitPreparedEvent = function() {\n  var event = this._preparedSpliceEvent;\n  if (event) {\n    event.array = this.peek();\n    this._preparedSpliceEvent = null;\n    this._array.notifySubscribers(event, 'spliceChange');\n  }\n};\n\n/**\n * @private\n * Internal method called before the underlying array is modified. This copies how knockout emits\n * its default events internally.\n */\nKoArray.prototype._preChange = function() {\n  this._array.valueWillMutate();\n};\n\n/**\n * @private\n * Internal method called before the underlying array is modified. This copies how knockout emits\n * its default events internally.\n */\nKoArray.prototype._postChange = function() {\n  this._array.valueHasMutated();\n};\n\n/**\n * @private\n * Internal method to call dispose() for each item in the passed-in array. It's only used when\n * autoDisposeValues option is given to koArray.\n */\nKoArray.prototype._doDisposeElements = function(elements) {\n  for (var i = 0; i < elements.length; i++) {\n    elements[i].dispose();\n  }\n};\n\n/**\n * The standard array `push` method, which emits all expected events.\n */\nKoArray.prototype.push = function() {\n  var array = this.peek();\n  var start = array.length;\n\n  this._preChange();\n  var ret = array.push.apply(array, arguments);\n  this._prepareSpliceEvent(start, arguments.length, []);\n  this._postChange();\n  return ret;\n};\n\n/**\n * The standard array `unshift` method, which emits all expected events.\n */\nKoArray.prototype.unshift = function() {\n  var array = this.peek();\n  this._preChange();\n  var ret = array.unshift.apply(array, arguments);\n  this._prepareSpliceEvent(0, arguments.length, []);\n  this._postChange();\n  return ret;\n};\n\n/**\n * The standard array `splice` method, which emits all expected events.\n */\nKoArray.prototype.splice = function(start, optDeleteCount) {\n  return this.arraySplice(start, optDeleteCount, Array.prototype.slice.call(arguments, 2));\n};\n\nKoArray.prototype.arraySplice = function(start, optDeleteCount, arrToInsert) {\n  var array = this.peek();\n  var len = array.length;\n  var startIndex = Math.min(len, Math.max(0, start < 0 ? len + start : start));\n\n  this._preChange();\n  var ret = (optDeleteCount === void 0 ? array.splice(start) :\n             array.splice(start, optDeleteCount));\n  gutil.arraySplice(array, startIndex, arrToInsert);\n  this._prepareSpliceEvent(startIndex, arrToInsert.length, ret);\n  this._postChange();\n  this._disposeElements(ret);\n  return ret;\n};\n\n/**\n * The standard array `slice` method. Creates a dependency when used from a computed observable.\n */\nKoArray.prototype.slice = function() {\n  var array = this.all();\n  return array.slice.apply(array, arguments);\n};\n\n\n/**\n * Returns a new KoArray instance, subscribed to the current one to stay parallel to it. The new\n * element are set to the result of calling `callback(orig, i)` on each original element. Note\n * that the index argument is only correct as of the time the callback got called.\n */\nKoArray.prototype.map = function(callback, optThis) {\n  var newArray = new KoArray();\n  newArray.syncMap(this, callback, optThis);\n  return newArray;\n};\n\n\nfunction noop() {}\nfunction identity(x) { return x; }\n\n/**\n * Keep this array in sync with another koArray, optionally mapping all elements through the given\n * callback. If callback is omitted, the current array will just mirror otherKoArray.\n * See also map().\n *\n * The subscription is disposed when the koArray is disposed.\n */\nKoArray.prototype.syncMap = function(otherKoArray, optCallback, optCallbackTarget) {\n  this.syncMapDisable();\n\n  optCallback = optCallback || identity;\n\n  this.assign(otherKoArray.peek().map(function(item, i) {\n    return optCallback.call(optCallbackTarget, item, i);\n  }));\n\n  this._syncSubscription = this.autoDispose(otherKoArray.subscribe(function(splice) {\n    var arr = splice.array;\n    var newValues = [];\n    for (var i = splice.start, n = 0; n < splice.added; i++, n++) {\n      newValues.push(optCallback.call(optCallbackTarget, arr[i], i));\n    }\n    this.arraySplice(splice.start, splice.deleted.length, newValues);\n  }, this, 'spliceChange'));\n};\n\n/**\n * Disable previously created syncMap subscription, if any.\n */\nKoArray.prototype.syncMapDisable = function() {\n  if (this._syncSubscription) {\n    this.disposeDiscard(this._syncSubscription);\n    this._syncSubscription = null;\n  }\n};\n\n\n/**\n * Analog to forEach for regular arrays, but that stays in sync with array changes.\n * @param {Function} options.add: func(item, index, koarray) is called for each item present,\n *    and whenever an item is added.\n * @param {Function} options.remove: func(item, koarray) is called whenever an item is removed.\n * @param [Object] options.context: (optional) `this` value to use in add/remove callbacks.\n * @param [Number] options.addDelay: (optional) If numeric, delay calls to the add\n *    callback by this many milliseconds (except initialization calls which are always immediate).\n */\nKoArray.prototype.subscribeForEach = function(options) {\n  var context = options.context;\n  var onAdd = options.add || noop;\n  var onRemove = options.remove || noop;\n  var shouldDelay = (typeof options.addDelay === 'number');\n\n  var subscription = this.subscribe(function(splice) {\n    var i, arr = splice.array;\n    for (i = 0; i < splice.deleted.length; i++) {\n      onRemove.call(context, splice.deleted[i], this);\n    }\n    var callAdd = () => {\n      var end = splice.start + splice.added;\n      for (i = splice.start; i < end; i++) {\n        onAdd.call(context, arr[i], i, this);\n      }\n    };\n    if (!shouldDelay) {\n      callAdd();\n    } else if (options.addDelay > 0) {\n      setTimeout(callAdd, options.addDelay);\n    } else {\n      // Promise library invokes the callback much sooner than setTimeout does, i.e. it's much\n      // closer to \"nextTick\", which is what we want here.\n      Promise.resolve(null).then(callAdd);\n    }\n  }, this, 'spliceChange');\n\n  this.peek().forEach(function(item, i) {\n    onAdd.call(context, item, i, this);\n  }, this);\n\n  return subscription;\n};\n\n/**\n * Given a numeric index, returns an index that's valid for this array, clamping it if needed.\n * If the array is empty, returns null. If the index given is null, treats it as 0.\n */\nKoArray.prototype.clampIndex = function(index) {\n  var len = this.peekLength;\n  return len === 0 ? null : gutil.clamp(index || 0, 0, len - 1);\n};\n\n/**\n * Returns a new observable representing an index into this array. It can be read and written, and\n * its value is clamped to be a valid index. The index is only null if the array is empty.\n *\n * As the array changes, the index is adjusted to continue pointing to the same element. If the\n * pointed element is deleted, the index is adjusted to after the deletion point.\n *\n * The returned observable has an additional .setLive(bool) method. While set to false, the\n * observale will not be adjusted as the array changes, except to keep it valid.\n */\nKoArray.prototype.makeLiveIndex = function(optInitialIndex) {\n  // The underlying observable index. Not exposed directly.\n  var index = ko.observable(this.clampIndex(optInitialIndex));\n  var isLive = true;\n\n  // Adjust the index when data is spliced before it.\n  this.subscribe(function(splice) {\n    var idx = index.peek();\n    if (!isLive) {\n      index(this.clampIndex(idx));\n    } else if (idx === null) {\n      index(this.clampIndex(0));\n    } else if (idx >= splice.start + splice.deleted.length) {\n      // Adjust the index if it was beyond the deleted region.\n      index(this.clampIndex(idx + splice.added - splice.deleted.length));\n    } else if (idx >= splice.start + splice.added) {\n      // Adjust the index if it was inside the deleted region (and not replaced).\n      index(this.clampIndex(splice.start + splice.added));\n    }\n  }, this, 'spliceChange');\n\n  // The returned value, which is a writable computable, constraining the value to the valid range\n  // (or null if the range is empty).\n  var ret = ko.pureComputed({\n    read: index,\n    write: function(val) { index(this.clampIndex(val)); },\n    owner: this\n  });\n  ret.setLive = (val => { isLive = val; });\n  return ret;\n};\n","/**\n * koDom.js is an analog to Knockout.js bindings that works with our dom.js library.\n * koDom provides a suite of bindings between the DOM and knockout observables.\n *\n * For example, here's how we can create som DOM with some bindings, given a view-model object vm:\n *    dom(\n *      'div',\n *      kd.toggleClass('active', vm.isActive),\n *      kd.text(function() {\n *        return vm.data()[vm.selectedRow()][part.value.index()];\n *      })\n *    );\n */\n\n\n/**\n * Use the browser globals in a way that allows replacing them with mocks in tests.\n */\nvar G = require('./browserGlobals').get('document', 'Node');\n\nvar ko = require('knockout');\nvar dom = require('./dom');\nvar koArray = require('./koArray');\n\n/**\n * Creates a binding between a DOM element and an observable value, making sure that\n * updaterFunc(elem, value) is called whenever the observable changes. It also registers disposal\n * callbacks on the element so that the binding is cleared when the element is disposed with\n * ko.cleanNode() or ko.removeNode().\n *\n * @param {Node} elem: DOM element.\n * @param {Object} valueOrFunc: Either an observable, a function (to create ko.computed() with),\n *      or a constant value.\n * @param {Function} updaterFunc: Called both initially and whenever the value changes as\n *      updaterFunc(elem, value). The value is already unwrapped (so is not an observable).\n */\nfunction setBinding(elem, valueOrFunc, updaterFunc) {\n  var subscription;\n  if (ko.isObservable(valueOrFunc)) {\n    subscription = valueOrFunc.subscribe(function(v) { updaterFunc(elem, v); });\n    ko.utils.domNodeDisposal.addDisposeCallback(elem, function() {\n      subscription.dispose();\n    });\n    updaterFunc(elem, valueOrFunc.peek());\n  } else if (typeof valueOrFunc === 'function') {\n    valueOrFunc = ko.computed(valueOrFunc);\n    subscription = valueOrFunc.subscribe(function(v) { updaterFunc(elem, v); });\n    ko.utils.domNodeDisposal.addDisposeCallback(elem, function() {\n      subscription.dispose();\n      valueOrFunc.dispose();\n    });\n    updaterFunc(elem, valueOrFunc.peek());\n  } else {\n    updaterFunc(elem, valueOrFunc);\n  }\n}\nexports.setBinding = setBinding;\n\n/**\n * Internal helper to create a binding. Used by most simple bindings.\n * @param {Object} valueOrFunc: Either an observable, a function (to create ko.computed() with),\n *      or a constant value.\n * @param {Function} updaterFunc: Called both initially and whenever the value changes as\n *      updaterFunc(elem, value). The value is already unwrapped (so is not an observable).\n * @returns {Function} Function suitable to pass as an argument to dom(); i.e. one that takes an\n *      DOM element, and adds the bindings to it. It also registers disposal callbacks on the\n *      element, so that bindings are cleaned up when the element is disposed with ko.cleanNode()\n *      or ko.removeNode().\n */\nfunction makeBinding(valueOrFunc, updaterFunc) {\n  return function(elem) {\n    setBinding(elem, valueOrFunc, updaterFunc);\n  };\n}\nexports.makeBinding = makeBinding;\n\n/**\n * Keeps the text content of a DOM element in sync with an observable value.\n * Just like knockout's `text` binding.\n * @param {Object} valueOrFunc An observable, a constant, or a function for a computed observable.\n */\nfunction text(valueOrFunc) {\n  return function(elem) {\n    // Since setting textContent property of an element removes all its other children, we insert\n    // a new text node, and change the content of that. However, we tie the binding to the parent\n    // elem, i.e. make it disposed along with elem, because text nodes don't get cleaned by\n    // ko.removeNode / ko.cleanNode.\n    var textNode = G.document.createTextNode(\"\");\n    setBinding(elem, valueOrFunc, function(elem, value) {\n      textNode.nodeValue = value;\n    });\n\n    elem.appendChild(textNode);\n  };\n}\nexports.text = text;\n\n// Used for replacing the static token span created by bootstrap tokenfield with the the same token\n// but with its text content tied to an observable.\n// To use bootstrapToken:\n// 1) Get the token to make a clone of and the observable desired.\n// 2) Create the new token by calling this function.\n// 3) Replace the original token with this newly created token in the DOM by doing\n// Ex:   var newToken = bootstrapToken(originalToken, observable);\n//       parentElement.replaceChild(originalToken, newToken);\n// TODO: Make templateToken optional. If not given, bind the observable to a manually created token.\nfunction bootstrapToken(templateToken, valueOrFunc) {\n  var clone = templateToken.cloneNode();\n  setBinding(clone, valueOrFunc, function(e, value) {\n    clone.textContent = value;\n  });\n  return clone;\n}\nexports.bootstrapToken = bootstrapToken;\n\n/**\n * Keeps the attribute `attrName` of a DOM element in sync with an observable value.\n * Just like knockout's `attr` binding. Removes the attribute when the value is null or undefined.\n * @param {String} attrName The name of the attribute to bind, e.g. 'href'.\n * @param {Object} valueOrFunc An observable, a constant, or a function for a computed observable.\n */\nfunction attr(attrName, valueOrFunc) {\n  return makeBinding(valueOrFunc, function(elem, value) {\n    if (value === null || value === undefined) {\n      elem.removeAttribute(attrName);\n    } else {\n      elem.setAttribute(attrName, value);\n    }\n  });\n}\nexports.attr = attr;\n\n/**\n * Sets or removes a boolean attribute of a DOM element. According to the spec, empty string is a\n * valid true value for the attribute, and the false value is indicated by the attribute's absence.\n * @param {String} attrName The name of the attribute to bind, e.g. 'href'.\n * @param {Object} valueOrFunc An observable, a constant, or a function for a computed observable.\n */\nfunction boolAttr(attrName, valueOrFunc) {\n  return makeBinding(valueOrFunc, function(elem, value) {\n    if (!value) {\n      elem.removeAttribute(attrName);\n    } else {\n      elem.setAttribute(attrName, '');\n    }\n  });\n}\nexports.boolAttr = boolAttr;\n\n/**\n * Keeps the style property `property` of a DOM element in sync with an observable value.\n * Just like knockout's `style` binding.\n * @param {String} property The name of the style property to bind, e.g. 'fontWeight'.\n * @param {Object} valueOrFunc An observable, a constant, or a function for a computed observable.\n */\nfunction style(property, valueOrFunc) {\n  return makeBinding(valueOrFunc, function(elem, value) {\n    // `style.setProperty` must be use to set custom property (ie: properties starting with '--').\n    // However since it does not support camelCase property, we still need to use the other form\n    // `elem.style[prop] = val;` for other properties.\n    if (property.startsWith('--')) {\n      elem.style.setProperty(property, value);\n    } else {\n      elem.style[property] = value;\n    }\n  });\n}\nexports.style = style;\n\n\n/**\n * Shows or hides the element depending on a boolean value. Note that the element must be visible\n * initially (i.e. unsetting style.display should show it).\n * @param {Object} boolValueOrFunc An observable, a constant, or a function for a computed\n *      observable. The value is treated as a boolean.\n */\nfunction show(boolValueOrFunc) {\n  return makeBinding(boolValueOrFunc, function(elem, value) {\n    elem.style.display = value ? '' : 'none';\n  });\n}\nexports.show = show;\n\n/**\n * The opposite of show, equivalent to show(function() { return !value(); }).\n * @param {Object} boolValueOrFunc An observable, a constant, or a function for a computed\n *      observable. The value is treated as a boolean.\n */\nfunction hide(boolValueOrFunc) {\n  return makeBinding(boolValueOrFunc, function(elem, value) {\n    elem.style.display = value ? 'none' : '';\n  });\n}\nexports.hide = hide;\n\n/**\n * Associates some data with the DOM element, using ko.utils.domData.\n */\nfunction domData(key, valueOrFunc) {\n  return makeBinding(valueOrFunc, function(elem, value) {\n    ko.utils.domData.set(elem, key, value);\n  });\n}\nexports.domData = domData;\n\n/**\n * Keeps the value of the given DOM form element in sync with an observable value.\n * Just like knockout's `value` binding, except that it is one-directional (for now).\n */\nfunction value(valueOrFunc) {\n  return makeBinding(valueOrFunc, function(elem, value) {\n    // This conditional shouldn't be necessary, but on Electron 1.7,\n    // setting unchanged value cause cursor to jump\n    if (elem.value !== value) { elem.value = value; }\n  });\n}\nexports.value = value;\n\n/**\n * Toggles a css class `className` according to the truthiness of an observable value.\n * Similar to knockout's `css` binding with a static class.\n * @param {String} className The name of the class to toggle.\n * @param {Object} boolValueOrFunc An observable, a constant, or a function for a computed\n *      observable. The value is treated as a boolean.\n */\nfunction toggleClass(className, boolValueOrFunc) {\n  return makeBinding(boolValueOrFunc, function(elem, value) {\n    elem.classList.toggle(className, !!value);\n  });\n}\nexports.toggleClass = toggleClass;\n\n\n/**\n * Toggles the `disabled` attribute on when boolValueOrFunc evaluates true. When\n * it evaluates false, the attribute is removed.\n * @param  {[type]} boolValueOrFunc boolValueOrFunc An observable, a constant, or a function for a computed\n *                                  observable. The value is treated as a boolean.\n */\nfunction toggleDisabled(boolValueOrFunc) {\n  return makeBinding(boolValueOrFunc, function(elem, disabled) {\n    if (disabled) {\n      elem.setAttribute('disabled', 'disabled');\n    } else {\n      elem.removeAttribute('disabled');\n    }\n  });\n}\nexports.toggleDisabled = toggleDisabled;\n\n/**\n * Adds a css class (one or many) named by an observable value. If the value changes, the previous class will be\n * removed and the new one added. The value may be empty to avoid adding any class.\n * Similar to knockout's `css` binding with a dynamic class.\n * @param {Object} valueOrFunc An observable, a constant, or a function for a computed observable.\n */\nfunction cssClass(valueOrFunc) {\n  var prevClass;\n  return makeBinding(valueOrFunc, function(elem, value) {\n    if (prevClass) {\n      for(const name of prevClass.split(' ')) {\n        elem.classList.remove(name);\n      }\n    }\n    prevClass = value;\n    if (value) {\n      for (const name of value.split(' ')) {\n        elem.classList.add(name);\n      }\n    }\n  });\n}\nexports.cssClass = cssClass;\n\n/**\n * Scrolls a child element into view. The value should be the index of the child element to\n * consider. This function supports scrolly, and is mainly useful for scrollable container\n * elements, with a `foreach` or a `scrolly` inside.\n * @param {Object} valueOrFunc An observable, a constant, or a function for a computed observable\n *    whose value is the index of the child element to keep scrolled into view.\n */\nfunction scrollChildIntoView(valueOrFunc) {\n  return makeBinding(valueOrFunc, doScrollChildIntoView);\n}\n// Key at which we will store the index to scroll for async scrolling.\nconst indexKey = Symbol();\nfunction doScrollChildIntoView(elem, index, sync) {\n  if (index === null) {\n    return Promise.resolve();\n  }\n  const scrolly = ko.utils.domData.get(elem, \"scrolly\");\n  if (scrolly) {\n    if (sync) {\n      scrolly.scrollRowIntoView(index);\n      // Clear async index for scrolling.\n      elem[indexKey] = null;\n      return Promise.resolve();\n    } else {\n      // Delay this in case it's triggered while other changes are processed (e.g. splices).\n\n      // Scrolling is asynchronous, so in case there is already\n      // active scroll queued, we will change the target index.\n      // For example:\n      // doScrollChildIntoView(el, 10, false) # sets the index to 10 and queues a Promise1\n      // doScrollChildIntoView(el, 20, false) # updates index to 20 and queues a Promise2\n      // ....\n      // Promise1 moves to 20, and clears the index.\n      // Promise2 checks the index is null and just returns.\n      elem[indexKey] = index;\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          try {\n            // If scroll was cancelled (there was another call after, that finished\n            // and cleared the index) return.\n            if (elem[indexKey] === null) {\n              resolve();\n              return;\n            }\n            if (!scrolly.isDisposed()) {\n              scrolly.scrollRowIntoView(elem[indexKey]);\n            }\n            resolve();\n          } catch(err) {\n            reject(err);\n          } finally {\n            // Clear the index, any subsequent async scrolls will be cancelled (on the if test above).\n            elem[indexKey] = null;\n          }\n        }, 0);\n      });\n    }\n  } else {\n    const child = elem.children[index];\n    if (child) {\n      if (index === 0) {\n        // Scroll the container all the way if showing the first child.\n        elem.scrollTop = 0;\n      }\n      const childRect = child.getBoundingClientRect();\n      const parentRect = elem.getBoundingClientRect();\n      if (childRect.top < parentRect.top) {\n        child.scrollIntoView(true);             // Align with top if scrolling up..\n      } else if (childRect.bottom > parentRect.bottom) {\n        child.scrollIntoView(false);              // ..bottom if scrolling down.\n      }\n    }\n  }\n  return Promise.resolve();\n}\nexports.scrollChildIntoView = scrollChildIntoView;\nexports.doScrollChildIntoView = doScrollChildIntoView;\n\n\n/**\n * Adds to a DOM element the content returned by `contentFunc` called with the value of the given\n * observable. The content may be a Node, an array of Nodes, text, null or undefined.\n * Similar to knockout's `with` binding.\n * @param {Object} valueOrFunc An observable, a constant, or a function for a computed observable.\n * @param {Function} contentFunc Called with the value of `valueOrFunc` whenever that value\n *    changes. The returned content will replace previous content among the children of the bound\n *    DOM element in the place where the scope() call was present among arguments to dom().\n */\nfunction scope(valueOrFunc, contentFunc) {\n  var marker, contentNodes = [];\n  return makeBinding(valueOrFunc, function(elem, value) {\n    // We keep a comment marker, so that we know where to insert the content, and numChildren, so\n    // that we know how many children are part of that content.\n    if (!marker) {\n      marker = elem.appendChild(G.document.createComment(\"\"));\n    }\n\n    // Create the new content before destroying the old, so that it is OK for the new content to\n    // include the old (by reattaching inside the new content). If we did it after, the old\n    // content would get destroyed before it gets moved. (Note that \"destroyed\" here means\n    // clearing associated bindings and event handlers, so it's not easily visible.)\n    var content = dom.frag(contentFunc(value));\n\n    // Remove any children added last time, cleaning associated data.\n    for (var i = 0; i < contentNodes.length; i++) {\n      if (contentNodes[i].parentNode === elem) {\n        ko.removeNode(contentNodes[i]);\n      }\n    }\n    contentNodes.length = 0;\n    var next = marker.nextSibling;\n    elem.insertBefore(content, next);\n    // Any number of children may have gotten added if content was a DocumentFragment.\n    for (var n = marker.nextSibling; n !== next; n = n.nextSibling) {\n      contentNodes.push(n);\n    }\n  });\n}\nexports.scope = scope;\n\n\n/**\n * Conditionally adds to a DOM element the content returned by `contentFunc()` depending on the\n * boolean value of the given observable. The content may be a Node, an array of Nodes, text, null\n * or undefined.\n * Similar to knockout's `if` binding.\n * @param {Object} boolValueOrFunc An observable, a constant, or a function for a computed\n *    observable. The value is checked as a boolean, and passed to the content function.\n * @param {Function} contentFunc A function called with the value of `boolValueOrFunc` whenever\n *    the observable changes from false to true. The returned content is added to the bound DOM\n *    element in the place where the maybe() call was present among arguments to dom().\n */\nfunction maybe(boolValueOrFunc, contentFunc) {\n  return scope(boolValueOrFunc, function(yesNo) {\n    return yesNo ? contentFunc(yesNo) : null;\n  });\n}\nexports.maybe = maybe;\n\n\n/**\n * Observes an observable array (koArray), and creates and adds as many children to the bound DOM\n * element as there are items in it. As the array is changed, children are added or removed. Also\n * works for a plain data array, creating a static list of children.\n *\n * Elements are typically added and removed by splicing data into or out of the data koArray. When\n * an item is removed, the corresponding node is removed using ko.removeNode (which also runs any\n * disposal tied to the node). If the caller retains a reference to a Node item, and removes it\n * from its parent, foreach will cope with it fine, but will not call ko.removeNode on that node\n * when the item from which it came is spliced out.\n *\n * @param {koArray} data An koArray instance.\n * @param {Function} itemCreateFunc A function called as `itemCreateFunc(item)` for each\n *    array element. Note: `index` is not passed to itemCreateFunc as it is only correct at the\n *    time the item is created, and does not reflect further changes to the array.\n */\nfunction foreach(data, itemCreateFunc) {\n  var marker;\n  var children = [];\n  return function(elem) {\n    if (!marker) {\n      marker = elem.appendChild(G.document.createComment(\"\"));\n    }\n    var spliceFunc = function(splice) {\n      var i, start = splice.start;\n\n      // Remove the elements that are gone.\n      var deletedElems = children.splice(start, splice.deleted.length);\n      for (i = 0; i < deletedElems.length; i++) {\n        // Some nodes may be null, or may have been removed elsewhere in the program. The latter\n        // are no longer our responsibility, and we should not clean them up.\n        if (deletedElems[i] && deletedElems[i].parentNode === elem) {\n          ko.removeNode(deletedElems[i]);\n        }\n      }\n\n      if (splice.added > 0) {\n        // Create and insert new elements.\n        var frag = G.document.createDocumentFragment();\n        var spliceArgs = [start, 0];\n        for (i = 0; i < splice.added; i++) {\n          var itemModel = splice.array[start + i];\n          var insertEl = itemCreateFunc(itemModel);\n          if (insertEl) {\n            ko.utils.domData.set(insertEl, \"itemModel\", itemModel);\n            frag.appendChild(insertEl);\n          }\n          spliceArgs.push(insertEl);\n        }\n\n        // Add new elements to the children array we maintain.\n        Array.prototype.splice.apply(children, spliceArgs);\n\n        // Find a valid child immediately preceding the start of the splice, for DOM insertion.\n        var baseElem = marker;\n        for (i = start - 1; i >= 0; i--) {\n          if (children[i] && children[i].parentNode === elem) {\n            baseElem = children[i];\n            break;\n          }\n        }\n        elem.insertBefore(frag, baseElem.nextSibling);\n      }\n    };\n\n    var array = data;\n    if (koArray.isKoArray(data)) {\n      var subscription = data.subscribe(spliceFunc, null, 'spliceChange');\n      ko.utils.domNodeDisposal.addDisposeCallback(elem, function() {\n        subscription.dispose();\n      });\n\n      array = data.all();\n    } else if (!Array.isArray(data)) {\n      throw new Error(\"koDom.foreach applied to non-array: \" + data);\n    }\n    spliceFunc({ array: array, start: 0, added: array.length, deleted: [] });\n  };\n}\nexports.foreach = foreach;\n","/**\n * koForm provides a number of styled elements (buttons, checkbox, etc) that are tied to\n * observables to simplify and standardize the way we construct UI elements (e.g. forms).\n *\n * TODO: There is some divergence in class names that we use throughout Grist. For example,\n *    active vs mod-active and disabled vs mod-disabled. We should standardize.\n */\n\n// Use the browser globals in a way that allows replacing them with mocks in tests.\nvar G = require('./browserGlobals').get('$', 'window', 'document');\n\nconst identity = require('lodash/identity');\nconst defaults = require('lodash/defaults');\nconst debounce = require('lodash/debounce');\nconst pick     = require('lodash/pick');\nvar ko      = require('knockout');\nvar Promise = require('bluebird');\n\nvar gutil = require('app/common/gutil');\n\nvar commands = require('../components/commands');\n\nvar dom      = require('./dom');\nvar kd       = require('./koDom');\nvar koArray  = require('./koArray');\n\nvar modelUtil = require('../models/modelUtil');\n\nvar setSaveValue = modelUtil.setSaveValue;\n\n\n/**\n * Creates a button-looking div inside a buttonGroup; when clicked, clickFunc() will be called.\n * The button is not clickable if it contains the class 'disabled'.\n */\nexports.button = function(clickFunc, ...moreContentArgs) {\n  return dom('div.kf_button.flexitem',\n    dom.on('click', function() {\n      if (!this.classList.contains('disabled')) {\n        clickFunc();\n      }\n    }),\n    moreContentArgs\n  );\n};\n\n/**\n * Creates a button with an accented appearance.\n * The button is not clickable if it contains the class 'disabled'.\n */\nexports.accentButton = function(clickFunc, ...moreContentArgs) {\n  return this.button(clickFunc,\n    {'class': 'kf_button flexitem accent'},\n    moreContentArgs\n  );\n};\n\n/**\n * Creates a button with a minimal appearance for use in prompts.\n * The button is not clickable if it contains the class 'disabled'.\n */\nexports.liteButton = function(clickFunc, ...moreContentArgs) {\n  return this.button(clickFunc,\n    {'class': 'kf_button flexitem lite'},\n    moreContentArgs\n  );\n};\n\n/**\n * Creates a bigger button with a logo, used for \"sign in with google/github/etc\" buttons.\n * The button is not clickable if it contains the class 'disabled'.\n */\nexports.logoButton = function(clickFunc, logoUrl, text, ...moreContentArgs) {\n  return this.button(clickFunc,\n    {'class': 'kf_button kf_logo_button flexitem flexhbox'},\n    dom('div.kf_btn_logo', { style: `background-image: url(${logoUrl})` }),\n    dom('div.kf_btn_text', text),\n    moreContentArgs\n  );\n};\n\n/**\n * Creates a button group. Arguments should be `button` and `checkButton` objects.\n */\nexports.buttonGroup = function(moreButtonArgs) {\n  return dom('div.kf_button_group.kf_elem.flexhbox',\n    dom.fwdArgs(arguments, 0));\n};\n\n/**\n * Creates a button group with an accented appearance.\n * Arguments should be `button` and `checkButton` objects.\n */\nexports.accentButtonGroup = function(moreButtonArgs) {\n  return this.buttonGroup(\n    [{'class': 'kf_button_group kf_elem flexhbox accent'}].concat(dom.fwdArgs(arguments, 0))\n  );\n};\n\n/**\n * Creates a button group with a minimal appearance.\n * Arguments should be `button` and `checkButton` objects.\n */\nexports.liteButtonGroup = function(moreButtonArgs) {\n  return this.buttonGroup(\n    [{'class': 'kf_button_group kf_elem flexhbox lite'}].concat(dom.fwdArgs(arguments, 0))\n  );\n};\n\n/**\n * Creates a button-looking div that acts as a checkbox, toggling `valueObservable` on click.\n */\nexports.checkButton = function(valueObservable, moreContentArgs) {\n  return dom('div.kf_button.kf_check_button.flexitem',\n    kd.toggleClass('active', valueObservable),\n    dom.on('click', function() {\n      if (!this.classList.contains('disabled')) {\n        setSaveValue(valueObservable, !valueObservable());\n      }\n    }),\n    dom.fwdArgs(arguments, 1));\n};\n\n/**\n * Creates a button-looking div that acts as a checkbox, toggling `valueObservable` on click.\n * Very similar to `checkButton` but looks flat and does not need to be in a group.\n *\n * TODO: checkButton and flatCheckButton are identical in function but differ in style and\n *    class name conventions. We should reconcile them.\n */\nexports.flatCheckButton = function(valueObservable, moreContentArgs) {\n  return dom('div.flexnone',\n    kd.toggleClass('mod-active', valueObservable),\n    dom.on('click', function() {\n      if (!this.classList.contains('mod-disabled')) {\n        setSaveValue(valueObservable, !valueObservable());\n      }\n    }),\n    dom.fwdArgs(arguments, 1));\n};\n\n/**\n * Creates a group of buttons of which only one may be chosen. Arguments should be `optionButton`\n * objects. The single `valueObservable` reflects the value of the selected `optionButton`.\n */\nexports.buttonSelect = function(valueObservable, moreButtonArgs) {\n  var groupElem = dom('div.kf_button_group.kf_elem.flexhbox', dom.fwdArgs(arguments, 1));\n\n  // TODO: Is adding \":not(.disabled)\" the best way to avoid execution?\n  G.$(groupElem).on('click', '.kf_button:not(.disabled)', function() {\n      setSaveValue(valueObservable, ko.utils.domData.get(this, 'kfOptionValue'));\n  });\n\n  kd.makeBinding(valueObservable, function(groupElem, value) {\n    Array.prototype.forEach.call(groupElem.querySelectorAll('.kf_button'), function(elem, i) {\n      var v = ko.utils.domData.get(elem, 'kfOptionValue');\n      elem.classList.toggle('active', v === value);\n    });\n  })(groupElem);\n\n  return groupElem;\n};\n\n/**\n * Creates a button-like div to use inside a `buttonSelect` group. The `value` will become the\n * value of the `buttonSelect` observable when this button is selected.\n */\nexports.optionButton = function(value, moreContentArgs) {\n  return dom('div.kf_button.flexitem',\n    function(elem) { ko.utils.domData.set(elem, 'kfOptionValue', value); },\n    dom.fwdArgs(arguments, 1));\n};\n\n/**\n * Creates a speech-bubble-like div intended to give more information and options affecting\n * its parent when hovered.\n */\nexports.toolTip = function(contentArgs) {\n  return dom('div.kf_tooltip',\n    dom('div.kf_tooltip_pointer'),\n    dom('div.kf_tooltip_content', dom.fwdArgs(arguments, 0)),\n    dom.defer(function(elem) {\n      var elemWidth = elem.getBoundingClientRect().width;\n      var parentRect = elem.parentNode.getBoundingClientRect();\n      elem.style.left = (-elemWidth/2 + parentRect.width/2) + 'px';\n      elem.style.top = parentRect.height + 'px';\n    })\n  );\n};\n\n/**\n * Creates a prompt to provide feedback or request more information in the sidepane.\n */\nexports.prompt = function(contentArgs) {\n  return dom('div.kf_prompt',\n    dom('div.kf_prompt_pointer'),\n    dom('div.kf_prompt_pointer_overlap'),\n    dom('div.kf_prompt_content', dom.fwdArgs(arguments, 0))\n  );\n};\n\n/**\n * Checkbox which toggles `valueObservable`. Other arguments become part of the clickable label.\n */\nexports.checkbox = function(valueObservable, moreContentArgs) {\n  return dom('label.kf_checkbox_label.kf_elem',\n    dom('input.kf_checkbox', {type: 'checkbox'},\n      kd.makeBinding(valueObservable, function(elem, value) {\n        elem.checked = value;\n      }),\n      dom.on('change', function() {\n        setSaveValue(valueObservable, this.checked);\n      })\n    ),\n    dom.fwdArgs(arguments, 1));\n};\n\n\n/**\n * Radio button for a particular value of the given observable. It is checked when the observable\n * matches the value, and selecting it sets the observable to the value. Other arguments become\n * part of the clickable label.\n */\nexports.radio = function(value, valueObservable, ...domArgs) {\n  return dom('label.kf_radio_label',\n    dom('input.kf_radio', {type: 'radio'},\n      kd.makeBinding(valueObservable, (elem, val) => { elem.checked = (val === value); }),\n      dom.on('change', function() {\n        if (this.checked) {\n          setSaveValue(valueObservable, value);\n        }\n      })\n    ),\n    ...domArgs\n  );\n};\n\n/**\n * Create and return DOM for a spinner widget.\n *  valueObservable: observable for the value, may have save interface.\n *      This value is not displayed by the created widget.\n *  getNewValue(value, dir): called with the current value and 1 or -1 direction,\n *      should return the new value for valueObservable.\n *  shouldDisable(value, dir): called with current value and 1 or -1 direction,\n *      should return whether the button in that direction should be enabled.\n */\nfunction genSpinner(valueObservable, getNewValue, shouldDisable) {\n  let timeout = null;\n  let origValue = null;\n\n  function startChange(elem, direction) {\n    stopAutoRepeat();\n    G.$(G.window).on('mouseup', onMouseUp);\n    origValue = valueObservable.peek();\n    doChange(direction, true);\n  }\n\n  function onMouseUp() {\n    G.$(G.window).off('mouseup', onMouseUp);\n    stopAutoRepeat();\n    setSaveValue(valueObservable, valueObservable.peek(), origValue);\n  }\n  function doChange(direction, isFirst) {\n    const newValue = getNewValue(valueObservable.peek(), direction);\n    if (newValue !== valueObservable.peek()) {\n      valueObservable(newValue);\n      timeout = setTimeout(doChange, isFirst ? 600 : 100, direction, false);\n    }\n  }\n  function stopAutoRepeat() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  }\n\n  return dom('div.kf_spinner',\n    dom('div.kf_spinner_half', dom('div.kf_spinner_arrow.up'),\n      kd.toggleClass('disabled', () => shouldDisable(valueObservable(), 1)),\n      dom.on('mousedown', () => { startChange(this, 1); })\n    ),\n    dom('div.kf_spinner_half', dom('div.kf_spinner_arrow.down'),\n      kd.toggleClass('disabled', () => shouldDisable(valueObservable(), -1)),\n      dom.on('mousedown', () => { startChange(this, -1); })\n    ),\n    dom.on('dblclick', () => false)\n  );\n}\n\n/**\n * Creates a spinner item linked to `valueObservable`.\n * @param {Number} optMin - Optional spinner lower bound\n * @param {Number} optMax - Optional spinner upper bound\n */\nexports.spinner = function(valueObservable, stepSizeObservable, optMin, optMax) {\n  var max = optMax !== undefined ? optMax : Infinity;\n  var min = optMin !== undefined ? optMin : -Infinity;\n\n  function getNewValue(value, direction) {\n    const step = (ko.unwrap(stepSizeObservable) || 1) * direction;\n    // Adding step quickly accumulates floating-point errors. We want to keep the value a multiple\n    // of step, as well as only keep significant decimal digits. The latter is done by converting\n    // to string and back using 15 digits of precision (max guaranteed to be significant).\n    value = value || 0;\n    value = Math.round(value / step) * step + step;\n    value = parseFloat(value.toPrecision(15));\n    return gutil.clamp(value, min, max);\n  }\n  function shouldDisable(value, direction) {\n    return (direction > 0) ? (value >= max) : (value <= min);\n  }\n  return genSpinner(valueObservable, getNewValue, shouldDisable);\n};\n\n/**\n * Creates a select spinner item to loop through the `optionObservable` array,\n * setting visible value to `valueObservable`.\n */\nexports.selectSpinner = function(valueObservable, optionObservable) {\n  function getNewValue(value, direction) {\n    const choices = optionObservable.peek();\n    const index = choices.indexOf(value);\n    const newIndex = gutil.mod(index + direction, choices.length);\n    return choices[newIndex];\n  }\n  function shouldDisable(value, direction) {\n    return optionObservable().length <= 1;\n  }\n  return genSpinner(valueObservable, getNewValue, shouldDisable);\n};\n\n/**\n * Creates an alignment selector linked to `valueObservable`.\n */\nexports.alignmentSelector = function(valueObservable) {\n  return this.buttonSelect(valueObservable,\n    this.optionButton(\"left\", dom('span.glyphicon.glyphicon-align-left'),\n      dom.testId('koForm_alignLeft')),\n    this.optionButton(\"center\", dom('span.glyphicon.glyphicon-align-center'),\n      dom.testId('koForm_alignCenter')),\n    this.optionButton(\"right\", dom('span.glyphicon.glyphicon-align-right'),\n      dom.testId('koForm_alignRight'))\n  );\n};\n\n/**\n * Label with a collapser triangle in front, which may be clicked to toggle `isCollapsedObs`\n * observable.\n */\nexports.collapserLabel = function(isCollapsedObs, moreContentArgs) {\n  return dom('div.kf_collapser.kf_elem',\n    dom('span.kf_triangle_toggle',\n      kd.text(function() {\n        return isCollapsedObs() ? '\\u25BA' : '\\u25BC';\n      })\n    ),\n    dom.on('click', function() {\n      isCollapsedObs(!isCollapsedObs.peek());\n    }),\n    dom.fwdArgs(arguments, 1));\n};\n\n/**\n * Creates a collapsible section. The argument must be a function which takes a boolean observable\n * (isCollapsed) as input, and should return an array of elements. The first element is always\n * shown, while the rest will be toggled by `isCollapsed` observable. The isMountedCollapsed\n * parameter controls the initial state of the collapsible. When true or omitted, the collapsible\n * will be closed on load. Otherwise, the collapsible will initialize expanded/uncollapsed.\n *\n *    kf.collapsible(function(isCollapsed) {\n *      return [\n *        kf.collapserLabel(isCollapsed, 'Indents'),\n *        kf.row(...),\n *        kf.row(...)\n *      ];\n *    });\n *  Returns an array of two items: the always-shown element, and a div containing the rest.\n */\nexports.collapsible = function(contentFunc, isMountedCollapsed) {\n  var isCollapsed = ko.observable(isMountedCollapsed === undefined ? true : isMountedCollapsed);\n  var content = contentFunc(isCollapsed);\n  return [\n    content[0],\n    dom('div',\n      kd.hide(isCollapsed),\n      dom.fwdArgs(content, 1))\n  ];\n};\n\n\n/**\n * Creates a draggable list of rows. The contentArray argument must be an observable array.\n * The callbackObj argument should include some or all of the following methods:\n * reorder, remove, and receive.\n * The reorder callback is executed if an item is dragged and dropped to a new position\n * within the same collection or draggable container. The remove and receive callbacks\n * are executed together only when an item from one collection is dropped on a different\n * collection. The remove callback may be executed alone when users click on the \"minus\" icon\n * for draggable items. The connectAllDraggables function must be called on draggables to\n * enable the remove/receive operation between separate draggables.\n *\n * Each callback must update the respective model tied to the draggable component,\n * or the equivalency between the UI and the observable array may be broken. When\n * a method is implemented, but the callback cannot update the model for any reason\n * (e.g., failure), then this failure should be communicated to the component either\n * by throwing an Error in the callback, or by returning a rejected Promise.\n *\n *\n *   reorder(item, nextItem)\n *     @param   {Object} item     The item being relocated/moved\n *     @param   {Object} nextItem The next item immediately following the new position,\n *                                or null, when the item is moved to the end of the collection.\n *   remove(item)\n *     @param   {Object} item     The item that should be removed from the collection.\n *     @returns {Object}          The item removed from the observable array. This\n *                                    value is passed to the receive function as the\n *                                    its item parameter. This value must include all the\n *                                    necessary data required for connected draggables\n *                                    to successfully insert the new value within their\n *                                    respective receive functions.\n *   receive(item, nextItem)\n *     @param   {Object} item      The item to insert in the collection.\n *     @param   {Object} nextItem  The next item from item's new position. This value\n *                                 will be null when item is moved to the end of the list.\n *\n * @param {Array}    contentArray         KoArray of model items\n * @param {Function} itemCreateFunc       Identical to koDom.foreach's itemCreateFunc, this\n *                                        function is called as `itemCreateFunc(item)` for each\n *                                        array element. Must return a single Node, or null or\n *                                        undefined to omit that node.\n * @param {Object}   options              An object containing the reorder, remove, receive\n *                                        callback functions, and all other draggable configuration\n *                                        options --\n * @param {Boolean}  options.removeButton Controls whether the clickable remove/minus icon is\n *                                        displayed. If true, this button triggers the remove\n *                                        function on click.\n * @param {String}   options.axis         Determines if the list is displayed vertically 'y' or\n *                                        horizontally 'x'.\n * @param {Boolean|Function} drag_indicator Include the drag indicator. Defaults to true. Accepts\n *                                          also a function that returns a dom element. In which\n *                                          case, it will be used to create the drag indicator.\n * @returns {Node} The DOM Node for the draggable container\n */\nexports.draggableList = function(contentArray, itemCreateFunc, options) {\n  options = options || {};\n  defaults(options, {\n    removeButton: true,\n    axis: \"y\",\n    drag_indicator: true,\n    itemClass: 'kf_draggable__item'\n  });\n\n  var reorderFunc, removeFunc;\n  itemCreateFunc = itemCreateFunc || identity;\n  var list = dom('div.kf_drag_container',\n    function(elem) {\n      if (options.reorder) {\n        reorderFunc = Promise.method(options.reorder);\n        ko.utils.domData.set(elem, 'reorderFunc', reorderFunc);\n      }\n      if (options.remove) {\n        removeFunc = Promise.method(options.remove);\n        ko.utils.domData.set(elem, 'removeFunc', removeFunc);\n      }\n      if (options.receive) {\n        ko.utils.domData.set(elem, 'receiveFunc', Promise.method(options.receive));\n      }\n    },\n    kd.foreach(contentArray, item => {\n      var row = itemCreateFunc(item);\n      if (row) {\n        return dom('div.kf_draggable',\n          // Fix for JQueryUI bug where mousedown on draggable elements fail to blur\n          // active element. See: https://bugs.jqueryui.com/ticket/4261\n          dom.on('mousedown', () => G.document.activeElement.blur()),\n          kd.cssClass(options.itemClass),\n          (options.drag_indicator ?\n           (typeof options.drag_indicator === 'boolean' ?\n            dom('span.kf_drag_indicator.glyphicon.glyphicon-option-vertical') :\n            options.drag_indicator()\n           ) : null),\n          kd.style('display', options.axis === 'x' ? 'inline-block' : 'block'),\n          kd.domData('model', item),\n          kd.maybe(removeFunc !== undefined && options.removeButton, function() {\n            return dom('span.drag_delete.glyphicon.glyphicon-remove',\n              dom.on('click', function() {\n                removeFunc(item)\n                .catch(function(err) {\n                  console.warn('Failed to remove item', err);\n                });\n              })\n            );\n          }),\n          dom('span.kf_draggable_content.flexauto', row));\n      } else {\n        return null;\n      }\n    })\n  );\n\n  G.$(list).sortable({\n    axis: options.axis,\n    tolerance: \"pointer\",\n    forcePlaceholderSize: true,\n    placeholder: 'kf_draggable__placeholder--' + (options.axis === 'x' ? 'horizontal' : 'vertical')\n  });\n  if (reorderFunc === undefined) {\n    G.$(list).sortable(\"option\", {disabled: true});\n  }\n\n  G.$(list).on('sortstart', function(e, ui) {\n    ko.utils.domData.set(ui.item[0], 'originalParent', ui.item.parent());\n    ko.utils.domData.set(ui.item[0], 'originalPrev', ui.item.prev());\n  });\n  G.$(list).on('sortstop', function(e, ui) {\n    if (!ko.utils.domData.get(ui.item[0], 'crossedContainers')) {\n      handleReorderStop.bind(null, list).call(this, e, ui);\n    } else {\n      handleConnectedStop.call(list, e, ui);\n    }\n  });\n\n  return list;\n};\n\nfunction handleReorderStop(container, e, ui) {\n  var reorderFunc = ko.utils.domData.get(container, 'reorderFunc');\n  var originalPrev = ko.utils.domData.get(ui.item[0], 'originalPrev');\n  if (reorderFunc && !ui.item.prev().is(originalPrev)) {\n    var movingItem = ko.utils.domData.get(ui.item[0], 'model');\n    reorderFunc(movingItem, getNextDraggableItemModel(ui.item))\n    .catch(function(err) {\n      console.warn('Failed to reorder item', err);\n      G.$(container).sortable('cancel');\n    });\n  }\n  resetDraggedItem(ui.item[0]);\n}\n\n\nfunction handleConnectedStop(e, ui) {\n  var originalParent = ko.utils.domData.get(ui.item[0], 'originalParent');\n  var removeOriginal = ko.utils.domData.get(originalParent[0], 'removeFunc');\n  var receive = ko.utils.domData.get(ui.item.parent()[0], 'receiveFunc');\n\n  if (removeOriginal && receive) {\n    removeOriginal(ko.utils.domData.get(ui.item[0], 'model'))\n    .then(function(removedItem) {\n      return receive(removedItem, getNextDraggableItemModel(ui.item))\n      .then(function() {\n        ui.item.remove();\n      })\n      .catch(revertRemovedItem.bind(null, ui, originalParent, removedItem));\n    })\n    .catch(function(err) {\n      console.warn('Error removing item', err);\n      G.$(originalParent).sortable('cancel');\n    })\n    .finally(function() {\n      resetDraggedItem(ui.item[0]);\n    });\n  } else {\n    console.warn('Missing remove or receive');\n  }\n}\n\nfunction revertRemovedItem(ui, parent, item, err) {\n  console.warn('Error receiving item. Trying to return removed item.', err);\n  var originalReceiveFunc = ko.utils.domData.get(parent[0], 'receiveFunc');\n  if (originalReceiveFunc) {\n    var originalPrev = ko.utils.domData.get(ui.item[0], 'originalPrev');\n    var originalNextItem = originalPrev.length > 0 ?\n      getNextDraggableItemModel(originalPrev) :\n      getDraggableItemModel(parent.children('.kf_draggable').first());\n    originalReceiveFunc(item, originalNextItem)\n    .catch(function(err) {\n      console.warn('Failed to receive item in original collection.', err);\n    }).finally(function() {\n      ui.item.remove();\n    });\n  }\n}\n\nfunction getDraggableItemModel(elem) {\n  if (elem.length && elem.length > 0) {\n    return ko.utils.domData.get(elem[0], 'model');\n  }\n  return null;\n}\n\nfunction getNextDraggableItemModel(elem) {\n  return elem.next ? getDraggableItemModel(elem.next('.kf_draggable')) : null;\n}\n\nfunction resetDraggedItem(elem) {\n  ko.utils.domData.set(elem, 'originalPrev', null);\n  ko.utils.domData.set(elem, 'originalParent', null);\n  ko.utils.domData.set(elem, 'crossedContainers', false);\n}\n\nfunction enableDraggableConnection(draggable) {\n  G.$(draggable).on('sortremove', function(e, ui) {\n    ko.utils.domData.set(ui.item[0], 'crossedContainers', true);\n    ko.utils.domData.set(ui.item[0], 'stopIndex', ui.item.index());\n  });\n\n  if (G.$(draggable).sortable(\"option\", \"disabled\") && (\n      ko.utils.domData.get(draggable, 'receiveFunc') ||\n      ko.utils.domData.get(draggable, 'removeFunc')\n      )) {\n    G.$(draggable).sortable( \"option\", { disabled: false });\n  }\n}\n\nfunction connectDraggableToClass(draggable, className) {\n  enableDraggableConnection(draggable);\n  G.$(draggable).addClass(className);\n  G.$(draggable).sortable(\"option\", {connectWith: \".\" + className});\n}\n\n/**\n * Connects 2 or more draggableList components together. This connection allows any of the\n * draggable components to drag & drop items into and out of any other connected draggable.\n * @param  {Object} draggableArgs 2 or more draggableList objects\n */\nvar connectedDraggables = 0;\nexports.connectAllDraggables = function(draggableArgs) {\n  if (draggableArgs.length < 2) {\n    console.warn('connectAllDraggables requires at least 2 draggable components');\n  }\n  var className = \"connected-draggable-\" + connectedDraggables++;\n  for (var i=0; i<arguments.length; i++) {\n    connectDraggableToClass(arguments[i], className);\n  }\n};\n\n/**\n * Connects 1 draggable to another, without the inverse. Elements may be dragged from\n * the fromDraggable to the toDraggable, but not in the other direction.\n * @param  {Object} fromDraggable A source draggableList object\n * @param  {Object} toDraggable   A destination draggableList object\n */\nexports.connectDraggableOneWay = function(fromDraggable, toDraggable) {\n  fromDraggable.id  = \"connected-draggable-\" + connectedDraggables++;\n  toDraggable.id    = \"connected-draggable-\" + connectedDraggables++;\n  enableDraggableConnection(fromDraggable);\n  enableDraggableConnection(toDraggable);\n  G.$(fromDraggable).sortable(\"option\", {connectWith: \"#\" + toDraggable.id});\n};\n\n/**\n * A bold label. Typically takes a string argument, but accepts any children.\n */\nexports.label = function(moreContentArgs) {\n  return dom('div.kf_label.kf_elem', dom.fwdArgs(arguments, 0));\n};\n\n/**\n * A regular (not bold) label. Typically takes a string argument, but accepts any children.\n */\nexports.lightLabel = function(moreContentArgs) {\n  return dom('div.kf_light_label.kf_elem', dom.fwdArgs(arguments, 0));\n};\n\n\n/**\n * Creates a set of tabs, with a look suitable for the middle of a pane. It takes no arguments,\n * and should be followed by `midTab()` calls under the same DOM element.\n * @param {Observable} optObservable The observable for the index of the selected tab, will be\n *    created if omitted.\n */\nexports.midTabs = function(optObservable) {\n  return _initTabs(optObservable, '.kf_mid_tab_label',\n    dom('div.flexitem.kf_mid_tabs',\n      dom('div.flexhbox.flexnone.kf_mid_tab_labels'),\n      exports.scrollable()\n    )\n  );\n};\n\n/**\n * Adds a tab to the `midTabs` container created previously under the same DOM element. The\n * `label` is a label or Node for the tab label; the rest is the content of the tab.\n * The content is created once, but is hidden when a different tab is selected.\n */\nexports.midTab = function(label, moreContentArgs) {\n  return _addTab('.kf_mid_tabs',\n    dom('div.kf_mid_tab_label.flexitem', label),\n    dom('div.kf_mid_tab_content', dom.fwdArgs(arguments, 1)));\n};\n\n\n/**\n * A textbox for entering numbers, although the tied `valueObservable` is a string.\n * We may want to replace it with a widget with up-down arrows to change the values, and support\n * for units (such as px, in, %, etc).\n * @param {Object} options.placeholder  Placeholder text for the textbox\n * @param {Object} options.min  The minimum (numeric or date-time) value for the item, which must not be greater than its maximum (max attribute) value.\n * @param {Object} options.max The maximum (numeric or date-time) value for this item, which must not be less than its minimum (min attribute) value.\n */\nexports.numText = function(valueObservable, options) {\n  var attr = {type: 'number'};\n  options = options || {};\n  if (options.placeholder) attr.placeholder = options.placeholder;\n  if (typeof options.min !== 'undefined') attr.min = options.min;\n  if (typeof options.max !== 'undefined') attr.max = options.max;\n  return dom('div.kf_elem', dom('input.kf_num_text', attr,\n    kd.value(valueObservable),\n    // while 'change' seems better suited, sometimes it does not fire when user click on the spinner\n    // arrow before it moves the cursor away.\n    dom.on('input', function() {\n      setSaveValue(valueObservable, Number(this.value));\n    })\n  ));\n};\n\n/**\n * Helper function for textboxes tied to `valueObservable`.\n * @param {Number}    [options.maxSize]             The max length of the text, which\n *                                                  also affects the box size.\n * @param {String}    [options.placeholder]         Placeholder text for the textbox\n * @param {Function}  [options.disabled]            Plain boolean or observable\n *                                                  boolean value or Function returning\n *                                                  a Boolean that controls whether\n *                                                  the \"disabled\" attribute is true or false\n *                                                  for the input element.\n * @param {Number}    [option.delay]                Wait interval in milliseconds until user stops\n *                                                  typing before save its input. Using this options\n *                                                  allows user to not change focus for saving input.\n * @return  {Object}                                Constructed DOM\n */\nfunction textInput(valueObservable, options, moreArgs) {\n  var attr = {};\n  if (options) {\n    if (options.type) {\n      attr.type = options.type;\n    }\n    if (options.maxSize) {\n      attr.maxlength = options.maxSize;\n      attr.style = 'max-width: ' + (options.maxSize + 2) + 'em';\n    }\n    if (options.placeholder) {\n      attr.placeholder = options.placeholder;\n    }\n  }\n\n  var saveValue = e => setSaveValue(valueObservable, e.target.value);\n  var debounced = debounce(saveValue, options.delay);\n\n  var setValue = elem => {\n    if (options && options.delay) {\n      dom(elem,\n        dom.on('input', debounced),\n        dom.on('change', e => {\n          debounced(e);\n          debounced.flush();\n        }));\n    } else {\n      dom(elem, dom.on('change', saveValue));\n    }\n  };\n\n  return dom('div.kf_elem',\n    dom('input.kf_text',\n      attr,\n      kd.toggleDisabled(options.disabled || false),\n      kd.value(valueObservable),\n      setValue,\n      dom.fwdArgs(arguments, 2))\n  );\n}\n\n\n/**\n * A regular textbox tied to `valueObservable`.\n */\nexports.text = function(valueObservable, options, ...moreArgs) {\n  options = Object.assign({type: 'text'}, options || {});\n  return textInput(valueObservable, options, moreArgs);\n};\n\n/**\n * A color picker tied to `valueObservable`.\n */\nexports.color = function(valueObservable, ...moreArgs) {\n  // On some machine (seen on chrome running on a Mac) the `change` event fires as many times as the `input` event, hence debounce.\n  const saveValue = debounce(e => setSaveValue(valueObservable, e.target.value), 300);\n  return dom('div.kf_elem',\n    dom('input.kf_color',\n      {type: 'color'},\n      kd.value(valueObservable),\n      dom.on('change', saveValue),\n      ...moreArgs\n    ));\n};\n\n/**\n * Identical to koForm.text, but with input type=password\n */\nexports.password = function(valueObservable, options, ...moreArgs) {\n  options = Object.assign({type: 'password'}, options || {});\n  return textInput(valueObservable, options, moreArgs);\n};\n\n/**\n * A status panel which reflects 1 of 4 possible states based on the value of valueObservable.\n * Users provide a mapping between possible valueObservable values and the 4 possible states\n * of this status panel: `success`, `info`, `warning`, and `error`. The status panel\n * displays circle icon or indicator reflecting the state of valueObservable (success=green,\n * info=blue, warning=orange, error=red).\n *\n * Users may provide either a strings or an objects with \"value\" and \"label\" properties\n * for each of the state properties. Each of these strings (or object.value properties)\n * must represent a possible value of valueObservable.\n *\n * For example:\n *   statusPanel(\n *     ko.observable('OK'),\n *     {\n *       success: 'OK',\n *       info: {value: 'Unknown', label: 'Status unknown'}\n *     }\n *   )\n *\n * @param  {string}         valueObservable A knockout observable containing a string\n * @param  {string|Object}  options.success\n * @param  {string|Object}  options.info\n * @param  {string|Object}  options.warning\n * @param  {string|Object}  options.error\n * @param  {string}         options.heading When present, the heading string appears\n *                                          as a header within the panel above the\n *                                          status label (if any).\n * @return {Object}                         DOM\n */\nexports.statusPanel = function(valueObservable, options) {\n  var statusMap = {};\n  ['success', 'info', 'warning', 'error'].forEach(function(key) {\n    var statusLookupValue;\n    if (options[key]) {\n      statusLookupValue = options[key].value !== undefined ? options[key].value : options[key];\n      statusMap[statusLookupValue] = {};\n      statusMap[statusLookupValue].className = 'kf_status_' + key;\n      statusMap[statusLookupValue].label = options[key].label || null;\n    }\n  });\n  var hasLabel = ko.pureComputed(function() {\n    return statusMap[valueObservable()].label !== undefined;\n  });\n  return dom('div.kf_status_panel.flexhbox',\n    dom.autoDispose(hasLabel),\n    dom('div.kf_status_indicator.flexauto',\n      kd.cssClass(function() {\n        if (statusMap[valueObservable()]) {\n          return statusMap[valueObservable()].className;\n        }\n        console.error('Status must match an available status code', Object.keys(statusMap));\n      }),\n      '\\u25CF' // solid circle\n    ),\n    dom('div.kf_status_detail.flexauto',\n      kd.maybe(options.heading, function() {\n        return exports.row(exports.label(options.heading));\n      }),\n      kd.maybe(hasLabel, function() {\n        return exports.row(exports.lightLabel(\n          kd.text(ko.pureComputed(function() {\n            return statusMap[valueObservable()].label;\n          }))\n        ));\n      })\n    )\n  );\n};\n\n/**\n * A label which can have editing turned on and off\n * When clicked a input area is created on top of the text.\n * The Enter key or a blur event calls save() on the observable.\n * The input area is removed if the user presses Esc without triggering any change.\n * @param {Observable} valueObservable - If the observable has a save interface it will be used to\n *   save changes.  see modelUtil.addSaveInterface\n * @param {Observable} optToggleObservable - If another observable is provided, it will be used to\n *   toggle whether or not the field is editable. It will also prevent clicks from affecting whether\n *   the label is editable.\n */\nexports.editableLabel = function(valueObservable, optToggleObservable) {\n  var isEditing = optToggleObservable || ko.observable(false);\n  var cancelEdit = false;\n\n  var editingCommands = {\n    cancel: function() {\n      cancelEdit = true;\n      isEditing(false);\n    },\n    accept: function() {\n      cancelEdit = false;\n      isEditing(false);\n    }\n  };\n\n  var contentSizer;\n  return dom('div.kf_editable_label',\n    dom('div.kf_elabel_text',\n      kd.text(valueObservable),\n      kd.hide(isEditing)\n    ),\n    contentSizer = dom('div.elabel_content_measure'),\n    (!optToggleObservable ? dom.on('click', () => isEditing(true)) : null),\n    kd.maybe(isEditing, function() {\n      var commandGroup = commands.createGroup(editingCommands, this, true);\n      return dom('input.kf_elabel_input', {type: 'text'},\n        elem => dom.hide(elem), // Don't display until we've had a chance to resize\n        kd.value(valueObservable),\n        dom.autoDispose(commandGroup),\n        commandGroup.attach(),\n        dom.on('blur', function() { isEditing(false); }),\n        dom.on('change', function() { isEditing(false); }),\n        dom.on('input', function() {\n          // Resize the textbox whenever user types in it.\n          _resizeElem(this, contentSizer);\n        }),\n        dom.onDispose(elem => {\n          if (!cancelEdit && valueObservable() !== elem.value) {\n            setSaveValue(valueObservable, elem.value);\n          }\n        }),\n        dom.defer(function(elem) {\n          cancelEdit = false;\n          _resizeElem(elem, contentSizer);\n          dom.show(elem); // Once resized, display the input\n          elem.focus();\n          elem.select();\n        })\n      );\n    })\n  );\n};\n\nfunction _resizeElem(elem, contentSizer) {\n  contentSizer.textContent = elem.value;\n  var rect = contentSizer.getBoundingClientRect();\n  elem.style.width = Math.ceil(rect.width) + 'px';\n}\n\n/**\n * Accepts any number of children. If an argument is numeric, it specifies the number of columns\n * the next child should occupy (defaults to 1). All columns are equally spaced.\n */\nexports.row = function(childOrColSpanArgs) {\n  var colSpan = 1;\n  var elem = dom('div.kf_row.flexhbox');\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n    if (typeof arg === 'number') {\n      colSpan = arg;\n    } else if (typeof arg === 'function') {\n      arg(elem);\n    } else if (typeof arg !== 'undefined') {\n      if (typeof arg === 'string' || Array.isArray(arg)) {\n        arg = dom('div', arg);\n      }\n      arg.style.flex = arg.style.webkitFlex = colSpan + \" 1 0px\";\n      elem.appendChild(arg);\n      colSpan = 1;\n    }\n  }\n  return elem;\n};\n\n/**\n * Creates a row of help labels. Takes the same arguments as `row()`, but the content is typically\n * short descriptive strings. Use it immediately after a `row()` call, with same column-span\n * values, to place descriptions under the elements of the row.\n */\nexports.helpRow = function(childOrColSpan) {\n  var elem = exports.row.apply(null, arguments);\n  elem.classList.add('kf_help_row');\n  return elem;\n};\n\n/**\n * Creates a scrollable pane, with a shadow over the top edge.\n */\nexports.scrollable = function(contentArgs) {\n  var elem, shadow;\n  return [\n    dom('div.flexnone.kf_scroll_shadow_outer',\n      shadow = dom('div.kf_scroll_shadow', dom.hide)\n    ),\n    elem = dom('div.flexitem.kf_scrollable',\n      dom.on('scroll', function() {\n        shadow.style.display = (elem.scrollTop > 0 ? '' : 'none');\n      }),\n      dom.fwdArgs(arguments, 0)\n    )\n  ];\n};\n\n/**\n * Creates a select (or dropdown) widget. The `valueObservable` reflects the value of the selected\n * option, `optionArray` is an array (regular or observable) of option values and labels.\n * may be either strings (used for both values and labels) or objects with \"value\", \"label\", and\n * \"disabled\" properties.\n *\n * @param {observable} valueObservable - An observable whose value will be set to the value of the\n *    corresponding option from `optionArray` when the selection changes, or an array of sorted\n *    values if `options.multiple` is enabled. A string representation of the value is also made\n *    accessible as in the <option>'s value attribute, and is what would be submitted if, for\n *    example, the element is used in a submitted form.\n * @param {Array<string|Object>} optionArray - Array of options as strings or objects. If string,\n *    the same value will be used for key (i.e. value) and label. If object, its properties will be\n *    used to populate `value`, `label`, and `disabled`. A koArray may be used.\n * @property {Any} value - Value of the option that, when selected, will be set as the value of\n *    valueObservable (or included into an array of selected values with `multiple: true`).\n *    The string representation of this value will also be set on the `<option>` DOM, but\n *    valueObservable will receive the raw JavaScript value. This should not mutate.\n * @property {string|observable} label - Visible label for the option. Can be an observable.\n * @property {boolean|observable} disabled - Optional disabled flag. Can be an observable.\n *\n * @param {Object} options\n * @property {Number}  [options.size]       The number of rows in the select list that\n * @property {Boolean} [options.disabled]   Whether the select control is disabled.\n * @property {Boolean} [options.multiple]   Whether the select control supports multiple selection.\n *    If true, `valueObservable` should be an array of values.\n */\nexports.select = function(valueObservable, optionArray, options) {\n  // Wrap the returned element into a div, since otherwise it doesn't respect\n  // dimensions as well.\n  options = options || {};\n  // Sets elem.value to value. Useful for setting the displayed multiselect value.\n  var setValue = (elem, value) => {\n    let valuesSet = new Set(options.multiple ? value : [value]);\n    for (let option of elem.querySelectorAll('option')) {\n      option.selected = valuesSet.has(ko.utils.domData.get(option, 'value'));\n    }\n  };\n  return dom('div.kf_elem',\n    dom('div.kf_select_arrow',\n      dom('select.kf_select',\n        pick(options, ['size', 'multiple']),\n        kd.toggleDisabled(options.disabled || false),\n        kd.foreach(optionArray, function(option) {\n          if (!option) {\n            return null;\n          }\n\n          let value = (typeof option === 'string' ? option : option.value);\n          let label = (typeof option === 'string' ? option : option.label);\n          let disabled = (typeof option === 'string' ? false : option.disabled);\n\n          return dom(\n            'option',\n            { value }, // To keep older browser tests from breaking, store stringified value in DOM\n            kd.domData('value', value),\n            kd.toggleDisabled(disabled),\n            kd.text(label)\n          );\n        }),\n        // If the optionArray changes, the selected option may become different than the\n        // option displayed. This is fixed by re-setting elem.value on optionArray changes.\n        kd.makeBinding(koArray.isKoArray(optionArray) ? optionArray.getObservable() : optionArray,\n          elem => setValue(elem, valueObservable())),\n        kd.makeBinding(valueObservable, (elem, value) => setValue(elem, value)),\n        dom.on('change', function() {\n          let valuesArray = [];\n          let optionElements = this.querySelectorAll('option');\n          for (let i = 0; i < optionElements.length; i++) {\n            if (optionElements[i].selected) {\n              let value = ko.utils.domData.get(optionElements[i], 'value');\n              valuesArray.push(value);\n              if (!options.multiple) { break; }\n            }\n          }\n          valuesArray.sort();\n          setSaveValue(valueObservable, options.multiple ? valuesArray : valuesArray[0]);\n        })\n      )\n    )\n  );\n};\n\n/**\n * A separator (thin horizontal line).\n */\nexports.separator = function() {\n  return dom('hr.kf_separator');\n};\n\n/**\n * Creates a set of tabs for the top of a pane. It takes no arguments, and should be followed by\n * `topTab()` calls under the same DOM element.\n * @param {Observable} optObservable The observable for the index of the selected tab, will be\n *    created if omitted.\n */\nexports.topTabs = function(optObservable) {\n  return _initTabs(optObservable, '.kf_top_tab_label',\n    dom('div.flexvbox.kf_top_tabs',\n      dom('div.flexhbox.flexnone.kf_top_tab_labels'),\n      dom('div.flexitem.kf_top_tab_container')\n    )\n  );\n};\n\n/**\n * Adds a tab to the `topTabs` container created previously under the same DOM element. The\n * `label` is a label or Node for the tab label; the rest is the content of the tab.\n * The content is created once, but is hidden when a different tab is selected.\n */\nexports.topTab = function(label, moreContentArgs) {\n  return _addTab('.kf_top_tabs',\n    dom('div.kf_top_tab_label.flexitem', label),\n    dom('div.kf_top_tab_content.flexvbox', dom.fwdArgs(arguments, 1)));\n};\n\n/**\n * Helper function for creating a set of tabs.\n * @param {Observable} optObservable The observable for the index of the selected tab, will be\n *    created if omitted.\n * @param {String} labelSelector The selector (e.g. \".className\") for the tab label elements that\n *    will be given to _addTab.\n * @param {Node} elem The tabs container element. Its first child must be the container for the\n *    labels, and its last child, the container for the content panes.\n */\nfunction _initTabs(optObservable, labelSelector, elem) {\n  var selectedTab = optObservable || ko.observable(0);\n  G.$(elem).on('click', labelSelector, function() {\n    selectedTab(dom.childIndex(this));\n  });\n  ko.utils.domData.set(elem, 'kfSelectedTab', selectedTab);\n  return elem;\n}\n\n/**\n * Helper function for adding a tab to a set of tabs created with _initTabs.\n * @param {String} tabsSelector The selector of the tabs container that was given to _initTab.\n *    It's needed to find that element.\n * @param {Node} labelElem The label element to add to the container of labels.\n * @param {Node} contentElem The content element to add to the container of content panes.\n */\nfunction _addTab(tabsSelector, labelElem, contentElem) {\n  return function(elem) {\n    var tabsEl = dom.findLastChild(elem, tabsSelector);\n    if (!tabsEl) {\n      console.log(\"koForm: Attempting to add tab without an existing tabs container\");\n      return;\n    }\n    var selectedTab = ko.utils.domData.get(tabsEl, 'kfSelectedTab');\n    var labels = tabsEl.firstChild;\n    var container = tabsEl.lastChild;\n    var index = labels.childNodes.length;\n    var isSelected = ko.computed(function() { return selectedTab() === index; });\n\n    // These methods are indended to be used as arguments to dom() function, so they return a\n    // function that should be applied to the target element.\n    kd.toggleClass('active', isSelected)(labelElem);\n    dom.autoDispose(labelElem, isSelected);\n    kd.show(isSelected)(contentElem);\n\n    labels.appendChild(labelElem);\n    container.appendChild(contentElem);\n  };\n}\n","var _ = require('underscore');\nvar ko = require('knockout');\n\n/**\n * This is typed to declare that the observable/computed supports subscribable.fn methods\n * added in this utility.\n */\nfunction withKoUtils(obj) {\n  return obj;\n}\nexports.withKoUtils = withKoUtils;\n\n/**\n * subscribeInit is a convenience method, equivalent to knockout's observable.subscribe(), but\n * also calls the callback immediately with the observable's current value.\n *\n * It is added to the prototype for all observables, as long as this module is included anywhere.\n */\nko.subscribable.fn.subscribeInit = function(callback, target, event) {\n  var sub = this.subscribe(callback, target, event);\n  callback.call(target, this.peek());\n  return sub;\n};\n\n/**\n * Add a named method `assign` to knockout subscribables (including observables) to assign a new\n * value. This way we can move away from using callable objects for everything, since callable\n * objects require hacking at prototypes.\n */\nko.subscribable.fn.assign = function(value) {\n  this(value);\n};\n\n\n/**\n * Convenience method to modify a non-primitive value and assign it back. E.g. if foo() is an\n * observable whose value is an array, then\n *\n *    foo.modifyAssign(function(array) { array.push(\"test\"); });\n *\n * is one-liner equivalent to:\n *\n *    var array = foo.peek();\n *    array.push(\"text\");\n *    foo(array);\n *\n * Whenever using a non-primitive value, be careful that it's not shared with other code, which\n * might modify it without any observable subscriptions getting triggered.\n */\nko.subscribable.fn.modifyAssign = function(modifierFunc) {\n  var value = this.peek();\n  modifierFunc(value);\n  this(value);\n};\n\n\n/**\n * Tells a computed observable which may return non-primitive values (e.g. objects) that it should\n * only notify subscribers when the computed value is not equal to the last one (using \"===\").\n */\nko.subscribable.fn.onlyNotifyUnequal = function() {\n  this.equalityComparer = function(a, b) { return a === b; };\n  return this;\n};\n\n/**\n * Notifies only about distinct defined values. If the first value is undefined it will still be\n * returned.\n */\nko.subscribable.fn.previousOnUndefined = function() {\n  this.equalityComparer = function(a, b) { return a === b || b === undefined; };\n  return this;\n};\n\nlet _handlerFunc = (err) => {};\nlet _origKoComputed = ko.computed;\n\n/**\n * If setComputedErrorHandler is used, this wrapper catches and swallows errors from the\n * evaluation of any computed. Any exception gets passed to _handlerFunc, and the computed\n * evaluates successfully to its previous value (or _handlerFunc may rethrow the error).\n */\nfunction _wrapComputedRead(readFunc) {\n  let lastValue;\n  return function() {\n    try {\n      return (lastValue = readFunc.call(this));\n    } catch (err) {\n      console.error(\"ERROR in ko.computed: %s\", err);\n      _handlerFunc(err);\n      return lastValue;\n    }\n  };\n}\n\n\n/**\n * If called, exceptions thrown while evaluating any ko.computed observable will get passed to\n * handlerFunc and swallowed. Unless the handlerFunc rethrows them, the computed will evaluate\n * successfully to its previous value.\n *\n * Note that this is merely an attempt to do the best we can to keep going in the face of\n * application bugs. The returned value is not actually correct, and relying on this incorrect\n * value may cause even worse bugs elsewhere in the application. It is important that any errors\n * caught via this mechanism get reported, debugged, and fixed.\n */\nfunction setComputedErrorHandler(handlerFunc) {\n  _handlerFunc = handlerFunc;\n\n  // Note that ko.pureComputed calls to ko.computed, so doesn't need its own override.\n  ko.computed = function(funcOrOptions, funcTarget, options) {\n    if (typeof funcOrOptions === 'function') {\n      funcOrOptions = _wrapComputedRead(funcOrOptions);\n    } else {\n      funcOrOptions.read = _wrapComputedRead(funcOrOptions.read);\n    }\n    return _origKoComputed(funcOrOptions, funcTarget, options);\n  };\n}\nexports.setComputedErrorHandler = setComputedErrorHandler;\n\n\n/**\n * Returns an observable which mirrors the passed-in argument, but returns a default value if the\n * underlying field is falsy and has non-boolean type. Writes to the returned observable translate\n * directly to writes to the underlying one. The default may be a function, evaluated as for computed\n * observables, with optContext as the context.\n */\nfunction observableWithDefault(obs, defaultOrFunc, optContext) {\n  if (typeof defaultOrFunc !== 'function') {\n    var def = defaultOrFunc;\n    defaultOrFunc = function() { return def; };\n  }\n  return ko.pureComputed({\n    read: function() {\n      const value = obs();\n      if (typeof value === 'boolean') {\n        return value;\n      }\n      return value || defaultOrFunc.call(this);\n    },\n    write: function(val) { obs(val); },\n    owner: optContext\n  });\n}\nexports.observableWithDefault = observableWithDefault;\n\n/**\n * Return an observable which mirrors the passed-in argument, but convert to Number value. Write to\n * to the returned observable translate to write to the underlying one a Number value.\n */\nfunction observableNumber(obs) {\n  return ko.pureComputed({\n    read: () =>  Number(obs()),\n    write: (val) => {\n      obs(Number(val));\n    }\n  });\n}\nexports.observableNumber = observableNumber;\n\n/**\n * Same interface as ko.computed(), except that it disposes the values it evaluates to. If an\n * observable is set to values which are created on the fly and need to be disposed (e.g.\n * components), use foo = computedAutoDispose(...). Whenever the value of foo() changes (and when\n * foo itself is disposed), the previous value's `dispose` method gets called.\n */\nfunction computedAutoDispose(optionsOrReadFunc, target, options) {\n  // Note: this isn't quite possible to do as a knockout extender, specifically to get correct the\n  // pure vs non-pure distinction (sometimes the computed must be pure to avoid evaluation;\n  // sometimes it has side-effects and must not be pure).\n  var value = null;\n  function setNewValue(newValue) {\n    if (value && value !== newValue) {\n      ko.ignoreDependencies(value.dispose, value);\n    }\n    value = newValue;\n    return newValue;\n  }\n\n  var origRead;\n  if (typeof optionsOrReadFunc === \"object\") {\n    // Single-parameter syntax.\n    origRead = optionsOrReadFunc.read;\n    options = _.clone(optionsOrReadFunc);\n  } else {\n    origRead = optionsOrReadFunc;\n    options = _.defaults({ owner: target }, options || {});\n  }\n  options.read = function() {\n    return setNewValue(origRead.call(this));\n  };\n\n  var result = ko.computed(options);\n  var origDispose = result.dispose;\n  result.dispose = function() {\n    setNewValue(null);\n    origDispose.call(result);\n  };\n  return result;\n}\nexports.computedAutoDispose = computedAutoDispose;\n\n\n/**\n * Helper for building disposable components that depend on a few observables. The callback is\n * evaluated as for a knockout computed observable, which creates dependencies on any observables\n * mentioned in it. But the return value of the callback should be a function (\"builder\"), which\n * is called to build the resulting value. Observables mentioned in the evaluation of the builder\n * do NOT create dependencies. In addition, the built value gets disposed automatically when it\n * changes.\n *\n * The optContext argument serves as the context for the callback.\n *\n * For example,\n *    var foo = ko.observable();\n *    koUtil.computedBuilder(function() {\n *      return MyComponent.create.bind(MyComponent, foo());\n *    }, this);\n *\n * In this case, whenever foo() changes, MyComponent.create(foo()) gets called, and\n * previously-returned component gets disposed. Observables mentioned during MyComponent's\n * construction do not trigger its rebuilding (as they would if a plain ko.computed() were used).\n */\nfunction computedBuilder(callback, optContext) {\n  return computedAutoDispose(function() {\n    var builder = callback.call(optContext);\n    return builder ? ko.ignoreDependencies(builder) : null;\n  }, null, { pure: false });\n}\nexports.computedBuilder = computedBuilder;\n","var _ = require('underscore');\nvar ko = require('knockout');\n\nvar gutil = require('app/common/gutil');\n\nvar dispose = require('../lib/dispose');\n\nvar modelUtil = require('./modelUtil');\n\n\n/**\n * BaseRowModel is an observable model for a record (or row) of a data (DataRowModel) or meta\n * (MetaRowModel) table. It takes a reference to the containing TableModel, and a list of\n * column names, and creates an observable for each field.\n * TODO: We need to have a way to dispose RowModels, and have them dispose individual fields,\n * which should in turn unsubscribe from various events on disposal. And it all should be tested.\n *\n */\nfunction BaseRowModel(tableModel, colNames) {\n  this._table  = tableModel;\n  this._fields = colNames.slice(0);\n  this._index  = ko.observable(null);    // The index in the observable to which it belongs.\n  this._rowId  = null;\n\n  // Create a field for everything in `_fields`.\n  this._fields.forEach(function(colName) {\n    this._createField(colName);\n  }, this);\n}\ndispose.makeDisposable(BaseRowModel);\n\n// This adds the dispatchAction() method to RowModel.\n_.extend(BaseRowModel.prototype, modelUtil.ActionDispatcher);\n\n/**\n * Returns the rowId to which this RowModel is assigned. This is also normally available as the\n * `rowModel.id` observable.\n */\nBaseRowModel.prototype.getRowId = function() {\n  return this._rowId;\n};\n\n/**\n * Creates a field for colName. This is either a top level observable like this[colName]\n * for MetaRowModels or a property field like this[name][prop] for DataRowModels\n */\nBaseRowModel.prototype._createField = function(colName) {\n  this[colName] = modelUtil.addSaveInterface(ko.observable(), v => this._saveField(colName, v));\n};\n\n/**\n * Helper method to send a user action to save a field of the current row to the server.\n */\nBaseRowModel.prototype._saveField = function(colName, value) {\n  var colValues = {};\n  colValues[colName] = value;\n  return this.updateColValues(colValues);\n};\n\n/**\n * Send an update to the server to update multiple columns for this row.\n * @param {Object} colValues: Maps colIds to values.\n * @returns {Promise} Resolved when the update succeeds.\n */\nBaseRowModel.prototype.updateColValues = function(colValues) {\n  return this._table.sendTableAction([\"UpdateRecord\", this._rowId, colValues]);\n};\n\n/**\n * Assigns the field of this RowModel named by `colName` to its corresponding value.\n */\nBaseRowModel.prototype._assignColumn = function(colName) {\n  throw new Error(\"Not Implemented\");\n};\n\n//----------------------------------------------------------------------\n\n/**\n * Implements the interface expected by modelUtil.ActionDispatcher. We only implement the\n * actions that affect individual rows. Note that BulkUpdateRecord needs to be translated to individual\n * UpdateRecords for RowModel to know what to do. Messages not here must be implemented by subclasses.\n * Some of these require helper methods defined in subclasses\n */\n\nBaseRowModel.prototype._process_RemoveColumn = function(action, tableId, colId) {\n  if (!gutil.arrayRemove(this._fields, colId)) {\n    console.error(\"RowModel #RemoveColumn %s %s: column not found\", tableId, colId);\n  }\n  delete this[colId];\n};\n\nBaseRowModel.prototype._process_ModifyColumn = function(action, tableId, colId, colInfo) {\n  // No-op for us, because we don't care about any of the column properties.\n};\n\nBaseRowModel.prototype._process_UpdateRecord = function(action, tableId, rowId, columnValues) {\n  for (var colName in columnValues) {\n    this._assignColumn(colName);\n  }\n};\n\nBaseRowModel.prototype._process_BulkUpdateRecord = function(action, tableId, rowId, columnValues) {\n  // We get notified when a BulkUpdateRecord affects us, but since we just update all fields from\n  // the underlying data, we don't need to find our row in the action.\n  for (var colName in columnValues) {\n    this._assignColumn(colName);\n  }\n};\n\n// TODO: if AddColumn messages aren't sent for properties, we will need to find a different\n// way to create and set the properties than here\nBaseRowModel.prototype._process_AddColumn = function(action, tableId, colId, colInfo) {\n  this._fields.push(colId);\n  this._createField(colId);\n  this._assignColumn(colId);\n};\n\nBaseRowModel.prototype._process_RenameColumn = function(action, tableId, oldColId, newColId) {\n  // handle standard renames differently\n  if (this._fields.indexOf(newColId) !== -1) {\n    console.error(\"RowModel #RenameColumn %s %s %s: already exists\", tableId, oldColId, newColId);\n    return;\n  }\n  var index = this._fields.indexOf(oldColId);\n  if (index === -1) {\n    console.error(\"RowModel #RenameColumn %s %s %s: not found\", tableId, oldColId, newColId);\n    return;\n  }\n  this._fields[index] = newColId;\n\n  // Reuse the old observable, but replace its \"save\" family of functions.\n  this[newColId] = this[oldColId];\n  modelUtil.addSaveInterface(this[newColId], this._saveField.bind(this, newColId));\n  this._assignColumn(newColId);\n  delete this[oldColId];\n};\n\nmodule.exports = BaseRowModel;\n","var _ = require('underscore');\nvar assert = require('assert');\nvar BackboneEvents = require('backbone').Events;\n\n// Common\nvar gutil      = require('app/common/gutil');\n\n// Libraries\nvar dispose = require('../lib/dispose');\nvar koArray = require('../lib/koArray');\n\n// Models\nvar rowset       = require('./rowset');\nvar TableModel   = require('./TableModel');\nvar {DataRowModel} = require('./DataRowModel');\nconst {TableQuerySets} = require('./QuerySet');\n\n/**\n * DataTableModel maintains the model for an arbitrary data table of a Grist document.\n */\nfunction DataTableModel(docModel, tableData, tableMetaRow) {\n  TableModel.call(this, docModel, tableData);\n\n  this.tableMetaRow = tableMetaRow;\n\n  this.tableQuerySets = new TableQuerySets(this.tableData);\n\n  // New RowModels are created by copying fields from this._newRowModel template. This way we can\n  // update the template on schema changes in the same way we update individual RowModels.\n  // Note that tableMetaRow is incomplete when we get a new table, so we don't rely on it here.\n  var fields = tableData.getColIds();\n  assert(fields.includes('id'), \"Expecting tableData columns to include `id`\");\n\n  // This row model gets schema actions via rowNotify, and is used as a template for new rows.\n  this._newRowModel = this.autoDispose(new DataRowModel(this, fields));\n\n  // TODO: Disposed rows should be removed from the set.\n  this._floatingRows = new Set();\n\n  // Listen for notifications that affect all rows, and apply them to the template row.\n  this.listenTo(this, 'rowNotify', function(rows, action) {\n    // TODO: (Important) Updates which affect a subset of rows should be handled more efficiently\n    // for _floatingRows.\n    // Ideally this._floatingRows would be a Map from rowId to RowModel, like in the LazyArrayModel.\n    if (rows === rowset.ALL) {\n      this._newRowModel.dispatchAction(action);\n      this._floatingRows.forEach(row => {\n        row.dispatchAction(action);\n      });\n    } else {\n      this._floatingRows.forEach(row => {\n        if (rows.includes(row.getRowId())) { row.dispatchAction(action); }\n      });\n    }\n  });\n\n  // TODO: In the future, we may need RowModel to support fields such as SubRecordList, containing\n  // collections of records from another table (probably using RowGroupings as in MetaTableModel).\n  // We'll need to pay attention to col.type() for that.\n}\n\ndispose.makeDisposable(DataTableModel);\n_.extend(DataTableModel.prototype, TableModel.prototype);\n\n/**\n * Creates and returns a LazyArrayModel of RowModels for the rows in the given sortedRowSet.\n * @param {Function} optRowModelClass: Class to use for a RowModel in place of DataRowModel.\n */\nDataTableModel.prototype.createLazyRowsModel = function(sortedRowSet, optRowModelClass) {\n  var RowModelClass = optRowModelClass || DataRowModel;\n  var self = this;\n  return new LazyArrayModel(sortedRowSet, function makeRowModel() {\n    return new RowModelClass(self, self._newRowModel._fields);\n  });\n};\n\n/**\n * Returns a new rowModel created using `optRowModelClass` or default `DataRowModel`.\n * It is the caller's responsibility to dispose of the returned rowModel.\n */\nDataTableModel.prototype.createFloatingRowModel = function(optRowModelClass) {\n  var RowModelClass = optRowModelClass || DataRowModel;\n  var model = new RowModelClass(this, this._newRowModel._fields);\n  this._floatingRows.add(model);\n  model.autoDisposeCallback(() => {\n    this._floatingRows.delete(model);\n  });\n  return model;\n};\n\n//----------------------------------------------------------------------\n\n/**\n * LazyArrayModel inherits from koArray, and stays parallel to sortedRowSet.getKoArray(),\n * maintaining RowModels for only *some* items, with nulls for the rest.\n *\n * It's tailored for use with koDomScrolly.\n *\n * You must not modify LazyArrayModel, but are free to use non-modifying koArray methods on it.\n * It also exposes methods:\n *    makeItemModel()\n *    setItemModel(rowModel, index)\n * And it takes responsibility for maintaining\n *    rowModel._index() - An observable equal to the current index of this item in the array.\n *\n * @param {rowset.SortedRowSet} sortedRowSet: SortedRowSet to mirror.\n * @param {Function} makeRowModelFunc: A function that creates and returns a DataRowModel.\n *\n * @event rowModelNotify(rowModels, action):\n *    Forwards the action from 'rowNotify' event, but with a list of affected RowModels rather\n *    than a list of affected rowIds. Only instantiated RowModels are included.\n */\nfunction LazyArrayModel(sortedRowSet, makeRowModelFunc) {\n  // The underlying koArray contains some rowModels, and nulls for other elements. We keep it in\n  // sync with rowIdArray. First, initialize a koArray of proper length with all nulls.\n  koArray.KoArray.call(this, sortedRowSet.getKoArray().peek().map(function(r) { return null; }));\n  this._rowIdArray = sortedRowSet.getKoArray();\n  this._makeRowModel = makeRowModelFunc;\n\n  this._assignedRowModels = new Map();    // Assigned rowModels by rowId.\n  this._allRowModels = new Set();         // All instantiated rowModels.\n\n  this.autoDispose(this._rowIdArray.subscribe(this._onSpliceChange, this, 'spliceChange'));\n  this.listenTo(sortedRowSet, 'rowNotify', this.onRowNotify);\n\n  // On disposal, dispose each instantiated RowModel.\n  this.autoDisposeCallback(function() {\n    for (let r of this._allRowModels) {\n      // TODO: Ideally, row models should be disposable.\n      if (typeof r.dispose === 'function') {\n        r.dispose();\n      }\n    }\n  });\n}\n\n/**\n * LazyArrayModel inherits from koArray.\n */\nLazyArrayModel.prototype = Object.create(koArray.KoArray.prototype);\ndispose.makeDisposable(LazyArrayModel);\n_.extend(LazyArrayModel.prototype, BackboneEvents);\n\n\n/**\n * Returns a new item model, as needed by setItemModel(). It is the only way for a new item\n * model to get instantiated.\n */\nLazyArrayModel.prototype.makeItemModel = function() {\n  var rowModel = this._makeRowModel();\n  this._allRowModels.add(rowModel);\n  return rowModel;\n};\n\n/**\n * Unassigns a given rowModel, removing it from the LazyArrayModel.\n * @returns {Boolean} True if rowModel got unset, false if it was already unset.\n */\nLazyArrayModel.prototype.unsetItemModel = function(rowModel) {\n  this.setItemModel(rowModel, null);\n};\n\n/**\n * Assigns a given rowModel to the given index. If the rowModel was previously assigned to a\n * different index, the old index reverts to null. If index is null, unsets the rowModel.\n */\nLazyArrayModel.prototype.setItemModel = function(rowModel, index) {\n  var arr = this.peek();\n\n  // Remove the rowModel from its old index in the observable array, and in _assignedRowModels.\n  var oldIndex = rowModel._index.peek();\n  if (oldIndex !== null && arr[oldIndex] === rowModel) {\n    arr[oldIndex] = null;\n  }\n  if (rowModel._rowId !== null) {\n    this._assignedRowModels.delete(rowModel._rowId);\n  }\n\n  // Handles logic to set the rowModel to the given index.\n  this._setItemModel(rowModel, index);\n\n  if (index !== null && arr.length !== 0) {\n    // Ensure that index is in-range.\n    index = gutil.clamp(index, 0, arr.length - 1);\n\n    // If there is already a model at the destination index, unassign that one.\n    if (arr[index] !== null && arr[index] !== rowModel) {\n      this.unsetItemModel(arr[index]);\n    }\n\n    // Add the newly-assigned model in its place in the array and in _assignedRowModels.\n    arr[index] = rowModel;\n    this._assignedRowModels.set(rowModel._rowId, rowModel);\n  }\n};\n\n/**\n * Assigns a given floating rowModel to the given index.\n * If index is null, unsets the floating rowModel.\n */\nLazyArrayModel.prototype.setFloatingRowModel = function(rowModel, index) {\n  this._setItemModel(rowModel, index);\n};\n\n/**\n * Helper function to assign a given rowModel to the given index. Used by setItemModel\n * and setFloatingRowModel. Does not interact with the array, only the model itself.\n */\nLazyArrayModel.prototype._setItemModel = function(rowModel, index) {\n  var arr = this.peek();\n\n  if (index === null || arr.length === 0) {\n    // Unassign the rowModel if index is null or if there is no valid place to assign it to.\n    rowModel._index(null);\n    rowModel.assign(null);\n  } else {\n    // Otherwise, ensure that index is in-range.\n    index = gutil.clamp(index, 0, arr.length - 1);\n\n    // Assign the rowModel and set its index.\n    rowModel._index(index);\n    rowModel.assign(this._rowIdArray.peek()[index]);\n  }\n};\n\n/**\n * Called for any updates to rows, including schema changes. This may affect some or all of the\n * rows; in the latter case, rows will be the constant rowset.ALL.\n */\nLazyArrayModel.prototype.onRowNotify = function(rows, action) {\n  if (rows === rowset.ALL) {\n    for (let rowModel of this._allRowModels) {\n      rowModel.dispatchAction(action);\n    }\n    this.trigger('rowModelNotify', this._allRowModels);\n  } else {\n    var affectedRowModels = [];\n    for (let r of rows) {\n      var rowModel = this._assignedRowModels.get(r);\n      if (rowModel) {\n        rowModel.dispatchAction(action);\n        affectedRowModels.push(rowModel);\n      }\n    }\n    this.trigger('rowModelNotify', affectedRowModels);\n  }\n};\n\n/**\n * Internal helper called on any change in the underlying _rowIdArray. We mirror each new rowId\n * with a null. Removed rows are unassigned. We also update subsequent indices.\n */\nLazyArrayModel.prototype._onSpliceChange = function(splice) {\n  var numDeleted = splice.deleted.length;\n  var i, n;\n\n  // Unassign deleted models, and leave for the garbage collector to find.\n  var arr = this.peek();\n  for (i = splice.start, n = 0; n < numDeleted; i++, n++) {\n    if (arr[i]) {\n      this.unsetItemModel(arr[i]);\n    }\n  }\n\n  // Update indices for other affected elements.\n  var delta = splice.added - numDeleted;\n  if (delta !== 0) {\n    var firstToAdjust = splice.start + numDeleted;\n    for (let rowModel of this._assignedRowModels.values()) {\n      var index = rowModel._index.peek();\n      if (index >= firstToAdjust) {\n        rowModel._index(index + delta);\n      }\n    }\n  }\n\n  // Construct the arguments for the splice call to apply to ourselves.\n  var newSpliceArgs = new Array(2 + splice.added);\n  newSpliceArgs[0] = splice.start;\n  newSpliceArgs[1] = numDeleted;\n  for (i = 2; i < newSpliceArgs.length; i++) {\n    newSpliceArgs[i] = null;\n  }\n\n  // Apply the splice to ourselves, inserting nulls for the newly-added items.\n  this.arraySplice(splice.start, numDeleted, gutil.arrayRepeat(splice.added, null));\n};\n\n/**\n * Returns the rowId at the given index from the rowIdArray. (Subscribes if called in a computed.)\n */\nLazyArrayModel.prototype.getRowId = function(index) {\n  return this._rowIdArray.at(index);\n};\n\n/**\n * Returns the index of the given rowId, or -1 if not found. (Does not subscribe to array.)\n */\nLazyArrayModel.prototype.getRowIndex = function(rowId) {\n  return this._rowIdArray.peek().indexOf(rowId);\n};\n\n/**\n * Returns the index of the given rowId, or -1 if not found. (Subscribes if called in a computed.)\n */\nLazyArrayModel.prototype.getRowIndexWithSub = function(rowId) {\n  return this._rowIdArray.all().indexOf(rowId);\n};\n\n/**\n * Returns the rowModel for the given rowId.\n * Returns undefined when there is no rowModel for the given rowId, which is often the case\n *  when it is scrolled out of view.\n */\nLazyArrayModel.prototype.getRowModel = function(rowId) {\n  return this._assignedRowModels.get(rowId);\n};\n\nmodule.exports = DataTableModel;\n","/**\n * TableModel maintains the model for an arbitrary data table of a Grist document.\n */\n\n\nvar _ = require('underscore');\nvar ko = require('knockout');\nvar dispose = require('../lib/dispose');\nvar rowset = require('./rowset');\nvar modelUtil = require('./modelUtil');\n\nfunction TableModel(docModel, tableData) {\n  this.docModel = docModel;\n  this.tableData = tableData;\n\n  // Maps groupBy fields to RowGrouping objects.\n  this.rowGroupings = {};\n\n  this.isLoaded = ko.observable(tableData.isLoaded);\n  this.autoDispose(tableData.dataLoadedEmitter.addListener(this.onDataLoaded, this));\n  this.autoDispose(tableData.tableActionEmitter.addListener(this.dispatchAction, this));\n}\n\ndispose.makeDisposable(TableModel);\n_.extend(TableModel.prototype, rowset.RowSource.prototype, modelUtil.ActionDispatcher);\n\nTableModel.prototype.fetch = function(force) {\n  if (this.isLoaded.peek() && force) {\n    this.isLoaded(false);\n  }\n  return this.tableData.docData.fetchTable(this.tableData.tableId, force);\n};\n\nTableModel.prototype.getAllRows = function() {\n  return this.tableData.getRowIds();\n};\n\nTableModel.prototype.getNumRows = function() {\n  return this.tableData.numRecords();\n};\n\nTableModel.prototype.getRowGrouping = function(groupByCol) {\n  var grouping = this.rowGroupings[groupByCol];\n  if (!grouping) {\n    grouping = rowset.RowGrouping.create(null, this.tableData.getRowPropFunc(groupByCol));\n    grouping.subscribeTo(this);\n    this.rowGroupings[groupByCol] = grouping;\n  }\n  return grouping;\n};\n\nTableModel.prototype.onDataLoaded = function(oldRowIds, newRowIds) {\n  this.trigger('rowChange', 'remove', oldRowIds);\n  this.trigger('rowChange', 'add', newRowIds);\n  this.isLoaded(true);\n};\n\n/**\n * Shortcut for `.tableData.sendTableActions`. See documentation in TableData.js.\n */\nTableModel.prototype.sendTableActions = function(actions, optDesc) {\n  return this.tableData.sendTableActions(actions, optDesc);\n};\n\n/**\n * Shortcut for `.tableData.sendTableAction`. See documentation in TableData.js.\n */\nTableModel.prototype.sendTableAction = function(action, optDesc) {\n  return this.tableData.sendTableAction(action, optDesc);\n};\n\n//----------------------------------------------------------------------\n/**\n * Called via `this.dispatchAction`.\n */\n\nTableModel.prototype._process_AddRecord = function(action, tableId, rowId, columnValues) {\n  this.trigger('rowChange', 'add', [rowId]);\n};\nTableModel.prototype._process_RemoveRecord = function(action, tableId, rowId) {\n  this.trigger('rowChange', 'remove', [rowId]);\n};\nTableModel.prototype._process_UpdateRecord = function(action, tableId, rowId, columnValues) {\n  this.trigger('rowChange', 'update', [rowId]);\n  this.trigger('rowNotify', [rowId], action);\n};\n\nTableModel.prototype._process_ReplaceTableData = function() {\n  // No-op because TableData.js already translates ReplaceTableData to a 'dataLoaded' event.\n};\n\nTableModel.prototype._process_BulkAddRecord = function(action, tableId, rowIds, columns) {\n  this.trigger('rowChange', 'add', rowIds);\n};\nTableModel.prototype._process_BulkRemoveRecord = function(action, tableId, rowIds) {\n  this.trigger('rowChange', 'remove', rowIds);\n};\nTableModel.prototype._process_BulkUpdateRecord = function(action, tableId, rowIds, columns) {\n  this.trigger('rowChange', 'update', rowIds);\n  this.trigger('rowNotify', rowIds, action);\n};\n\n// All schema changes to this table should be forwarded to each row.\n// TODO: we may need to worry about groupings (e.g. recreate the grouping function) once we do row\n// groupings of user data. Metadata isn't subject to schema changes, so that doesn't matter.\nTableModel.prototype.applySchemaAction = function(action) {\n  this.trigger('rowNotify', rowset.ALL, action);\n};\n\nTableModel.prototype._process_AddColumn = function(action) { this.applySchemaAction(action); };\nTableModel.prototype._process_RemoveColumn = function(action) { this.applySchemaAction(action); };\nTableModel.prototype._process_RenameColumn = function(action) { this.applySchemaAction(action); };\nTableModel.prototype._process_ModifyColumn = function(action) { this.applySchemaAction(action); };\n\nTableModel.prototype._process_RenameTable = _.noop;\nTableModel.prototype._process_RemoveTable = _.noop;\n\nmodule.exports = TableModel;\n","var _ = require('underscore');\nvar Promise = require('bluebird');\nvar assert = require('assert');\nvar gutil = require('app/common/gutil');\nvar ko = require('knockout');\nvar koUtil = require('../lib/koUtil');\n\n\n/**\n * Adds a family of 'save' methods to an observable. It accepts a callback for saving a value\n * (presumably to the server), and adds the following methods:\n * @method save()           Saves the current value of the observable to the server.\n * @method saveOnly(obj)    Saves the given value, without changing the observable's value.\n * @method setAndSave(obj)  Sets a new value for the observable and saves it.\n * @returns {Observable} Returns the passed-on observable.\n */\nfunction addSaveInterface(observable, saveFunc) {\n  observable.saveOnly = function(value) {\n    // Calls saveFunc and notifies subscribers of 'save' events.\n    return Promise.try(() => saveFunc.call(this, value))\n    .tap(() => observable.notifySubscribers(value, \"save\"));\n  };\n  observable.save = function() {\n    return this.saveOnly(this.peek());\n  };\n  observable.setAndSave = function(value) {\n    this(value);\n    return this.saveOnly(value);\n  };\n  return observable;\n}\nexports.addSaveInterface = addSaveInterface;\n\n\n/**\n * Creates a pureComputed with a read/write/save interface. The argument is an object with two\n * properties: `read` is the same as for a computed or a pureComputed. `write` is different: it is\n * a callback called as write(setter, value), where `setter(obs, value)` can be used with another\n * observable to write or save to it. E.g. if `foo` is an observable:\n *\n *  let bar = savingComputed({\n *    read: () => foo(),\n *    write: (setter, val) => setter(foo, val.toUpperCase())\n *  })\n *\n * Now `bar()` has the value of foo, calling `bar(\"hello\")` will call `foo(\"HELLO\")`, and\n * `bar.saveOnly(\"hello\")` will call `foo.saveOnly(\"HELLO\")`.\n */\nfunction savingComputed(options) {\n  return addSaveInterface(ko.pureComputed({\n    read: options.read,\n    write: val => options.write(_writeSetter, val)\n  }), val => options.write(_saveSetter, val));\n}\nexports.savingComputed = savingComputed;\n\nfunction _writeSetter(obs, val) { return obs(val); }\nfunction _saveSetter(obs, val) { return obs.saveOnly(val); }\n\n\n/**\n * Set and save the observable to the given value if it would change the value of the observable.\n * If the observable has no .save() interface, then the saving is skipped. If the save() call\n * fails, then the observable gets reset to its previous value.\n * @param {Observable} observable: Observable which may support the 'save' interface.\n * @param {Object} value: An arbitrary value. If identical to the current value of the observable,\n *    then the call is a no-op.\n * @param {Object} optOrigValue: If given, will use it as the original value of the observable: if\n *    it matches value, will skip saving; if save fails, will revert to this original.\n * @returns {undefined|Promise} If saving, a promise for when save() completes, else undefined.\n */\nfunction setSaveValue(observable, value, optOrigValue) {\n  let orig = (optOrigValue === undefined) ? observable.peek() : optOrigValue;\n  if (value !== orig) {\n    observable(value);\n    if (observable.save) {\n      return Promise.try(() => observable.save())\n      .catch(err => {\n        console.warn(\"setSaveValue %s -> %s failed: %s\", orig, value, err);\n        observable(orig);\n        throw err;\n      });\n    }\n  }\n}\nexports.setSaveValue = setSaveValue;\n\n\n/**\n * Creates an observable for a field value. It accepts a callback for saving its value to the\n * server, and adds a family of 'save' methods to the returned observable (see docs for\n * addSaveInterface() above).\n */\nfunction createField(saveFunc) {\n  return addSaveInterface(ko.observable(), saveFunc);\n}\nexports.createField = createField;\n\n/**\n * Returns an observable that mirrors another one but returns a default value if the underlying\n * field is falsy. Supports writing and saving, which translates directly to writing to the\n * underlying field. If the default value is a function, it's evaluated as in `computed()`, with\n * the given context.\n */\nfunction fieldWithDefault(fieldObs, defaultOrFunc, optContext) {\n  var obsWithDef = koUtil.observableWithDefault(fieldObs, defaultOrFunc, optContext);\n  if (fieldObs.saveOnly) {\n    addSaveInterface(obsWithDef, fieldObs.saveOnly);\n  }\n  return obsWithDef;\n}\nexports.fieldWithDefault = fieldWithDefault;\n\n\n/**\n * Helper to create an observable for a single property of a jsonObservable. It updates whenever\n * the jsonObservable is updated, and it allows setting the property, which sets the entire object\n * of the jsonObservable. Also supports 'save' methods.\n */\nfunction _createJsonProp(jsonObservable, propName) {\n  var jsonProp = ko.pureComputed({\n    read: function() { return jsonObservable()[propName]; },\n    write: function(value) {\n      var obj = jsonObservable.peek();\n      obj[propName] = value;\n      jsonObservable(obj);\n    }\n  });\n\n  // Add save methods (if underlying jsonObservable supports them)\n  if (jsonObservable.saveOnly) {\n    addSaveInterface(jsonProp, function(value) {\n      var obj = _.clone(jsonObservable.peek());\n      obj[propName] = value;\n      return jsonObservable.saveOnly(obj);\n    });\n  }\n  return jsonProp;\n}\n\n\n/**\n * Creates an observable for an object represented by an observable JSON string. It automatically\n * parses the JSON string when it changes, and stringifies on setting the object. It also supports\n * 'save' methods, forwarding calls to the .saveOnly function of the underlying string observable.\n *\n * @param {observable[String]} stringObservable: observable for a string that should contain JSON.\n * @param [Function] modifierFunc: function called with parsed object, which can modify it\n *    at will, e.g. to set defaults. It's OK to modify in-place; only the return value is used.\n * @param [Object] optContext: Optionally a context to call modifierFunc with.\n *\n * The returned observable supports these methods:\n * @method save()           Saves the current value of the observable to the server.\n * @method saveOnly(obj)    Saves the given value, without changing the observable's value.\n * @method setAndSave(obj)  Sets a new value for the observable and saves it.\n * @method update(obj)      Updates json with new properties (caller can .save() afterwards).\n * @method prop(name)       Returns an observable for the given property of the JSON object,\n *    which also supports saving. Multiple calls to prop('foo') return the same observable.\n */\nfunction jsonObservable(stringObservable, modifierFunc, optContext) {\n  modifierFunc = modifierFunc || function(obj) { return obj || {}; };\n\n  // Create the jsonObservable itself\n  var obs = ko.pureComputed({\n    read: function() { // reads the underlying string, parses, and passes through modFunc\n      var json = stringObservable();\n      return modifierFunc.call(optContext, json ? JSON.parse(json) : null);\n    },\n    write: function(obj) { // stringifies the given obj and sets the underlying string to that\n      stringObservable(JSON.stringify(obj));\n    }\n  });\n\n  // Create save interface if possible\n  if (stringObservable.saveOnly) {\n    addSaveInterface(obs, function(obj) {\n      return stringObservable.saveOnly(JSON.stringify(obj));\n    });\n  }\n\n  return objObservable(obs);\n}\nexports.jsonObservable = jsonObservable;\n\n/**\n * Creates an observable for an object.\n *\n * @param {observable[Object]} objectObservable: observable for an object.\n *\n * The returned observable supports these methods:\n * @method update(obj)      Updates object with new properties.\n * @method prop(name)       Returns an observable for the given property of the object.\n */\nfunction objObservable(objectObservable) {\n  objectObservable.update = function(obj) {\n    this(_.extend(this.peek(), obj)); // read self, _.extend, writeback\n  };\n  objectObservable._props = {};\n  objectObservable.prop = function(propName) {\n    // If created, return cached prop. Else _createJsonProp\n    return this._props[propName] || (this._props[propName] = _createJsonProp(this, propName));\n  };\n  return objectObservable;\n}\nexports.objObservable = objObservable;\n\n// Special value that indicates that a customValueField isn't set and is using the saved value.\nvar _sentinel = {};\n\n/**\n * Creates a observable that reflects savedObservable() but may diverge from it when set, and has\n * a methods to revert to the saved value. Additionally, the saving methods\n * (.save/.saveOnly/.setAndSave) save savedObservable() and synchronize the values.\n */\nfunction customValue(savedObservable) {\n  var options = { read: () => savedObservable() };\n  if (savedObservable.saveOnly) {\n    options.save = (val => savedObservable.saveOnly(val));\n  }\n  return customComputed(options);\n}\nexports.customValue = customValue;\n\n/**\n * Creates an observable whose value defaults to options.read() but may diverge from it when set,\n * and has a method to revert to the default value. If options.save(val) is provided, the saving\n * methods (.save/.saveOnly/.setAndSave) call it and reset the observable to its default value.\n * @param {Function} options.read: Returns the default value for the observable.\n * @param {Function} options.save(val): Saves a new value of the observable. May return a Promise.\n *\n * @returns {Observable} A writable observable value with some extra properties:\n *   @property {Observable} isSaved: Computed for whether customComputed() has its default value.\n *   @method revert(): Revert the customComputed() to its default value.\n *   @method save(val): If val is different from the current value of read(), call\n *      options.save(val), then revert the observable to its (possibly new) default value.\n */\nfunction customComputed(options) {\n  var current = ko.observable(_sentinel);\n  var read = options.read;\n  var save = options.save;\n\n  // This is our main interface: just an observable, which defaults to the one at fieldName.\n  var active = ko.pureComputed({\n    read: () => (current() !== _sentinel ? current() : read()),\n    write: val => current(val !== read() ? val : _sentinel),\n  });\n\n  // .isSaved is an observable that returns whether the saved value has not been overridden.\n  active.isSaved = ko.pureComputed(() => (current() === _sentinel));\n\n  // .revert reverts to the saved value, discarding whatever custom value was set.\n  active.revert = function() { current(_sentinel); };\n\n  // When any of the .save/.saveOnly/.setAndSave functions are called on the customValueField,\n  // they save the underlying value and (when that resolves), discard the current value.\n  if (save) {\n    addSaveInterface(active, val => (\n      Promise.try(() => val !== read() ? save(val) : null).finally(active.revert)\n    ));\n  }\n  return active;\n}\nexports.customComputed = customComputed;\n\n\nfunction bulkActionExpand(bulkAction, callback, context) {\n  assert(gutil.startsWith(bulkAction[0], \"Bulk\"));\n\n  var rowIds = bulkAction[2];\n  var columnValues = bulkAction[3];\n  var indivAction = bulkAction.slice(0);\n  indivAction[0] = indivAction[0].slice(4);\n  var colValues = indivAction[3] = columnValues && _.clone(columnValues);\n  for (var i = 0; i < rowIds.length; i++) {\n    indivAction[2] = rowIds[i];\n    if (colValues) {\n      for (var col in colValues) {\n        colValues[col] = columnValues[col][i];\n      }\n    }\n    callback.call(context, indivAction);\n  }\n}\nexports.bulkActionExpand = bulkActionExpand;\n\n\n/**\n * Helper class which provides a `dispatchAction` method that can be subscribed to listen to\n * actions received from the server. It dispatches each action to `this._process_{ActionType}`\n * method, e.g. `this._process_UpdateRecord`.\n *\n * Implementation methods `_process_*` are called with the action as the first argument, and with\n * the action arguments as additional method arguments, for convenience.\n */\nvar ActionDispatcher = {\n  dispatchAction: function(action) {\n    console.assert(!(typeof this.isDisposed === 'function' && this.isDisposed()),\n      `Dispatching action ${action[0]} on disposed object`, this);\n\n    var methodName = \"_process_\" + action[0];\n    var func = this[methodName];\n    if (typeof func === 'function') {\n      var args = action.slice(0);\n      args[0] = action;\n      return func.apply(this, args);\n    } else {\n      console.warn(\"Received unknown action %s\", action[0]);\n    }\n  },\n\n  /**\n   * Generic handler for bulk actions (Bulk{Add,Remove,Update}Record) which forwards the bulk call\n   * to multiple per-record calls. Intended to be used as:\n   *    Foo.prototype._process_BulkUpdateRecord = Foo.prototype.dispatchBulk;\n   */\n  dispatchBulk: function(action, tableId, rowIds, columnValues) {\n    bulkActionExpand(action, this.dispatchAction, this);\n  },\n};\nexports.ActionDispatcher = ActionDispatcher;\n","var dispose = require('../lib/dispose');\nconst {CellStyle} = require('app/client/widgets/CellStyle');\nconst {dom} = require('grainjs');\n\n/**\n * AbstractWidget - The base of the inheritance tree for widgets.\n * @param {Function} field - The RowModel for this view field.\n * @param {string|undefined} options.defaultTextColor - A hex value to set the default text color\n * for the widget. Omit defaults to '#000000'.\n */\nfunction AbstractWidget(field, opts = {}) {\n  this.field = field;\n  this.options = field.widgetOptionsJson;\n  const {defaultTextColor = '#000000'} = opts;\n  this.defaultTextColor = defaultTextColor;\n  this.valueFormatter = this.field.visibleColFormatter;\n  this.defaultTextColor = opts.defaultTextColor || '#000000';\n}\ndispose.makeDisposable(AbstractWidget);\n\n/**\n * Builds the DOM showing configuration buttons and fields in the sidebar.\n */\nAbstractWidget.prototype.buildConfigDom = function() {\n  throw new Error(\"Not Implemented\");\n};\n\n/**\n * Builds the transform prompt config DOM in the few cases where it is necessary.\n * Child classes need not override this function if they do not require transform config options.\n */\nAbstractWidget.prototype.buildTransformConfigDom = function() {\n  return null;\n};\n\n/**\n * Builds the data cell DOM.\n * @param {DataRowModel} row - The rowModel object.\n */\nAbstractWidget.prototype.buildDom = function(row) {\n  throw new Error(\"Not Implemented\");\n};\n\nAbstractWidget.prototype.buildColorConfigDom = function(gristDoc) {\n  return dom.create(CellStyle, this.field, gristDoc, this.defaultTextColor);\n};\n\nmodule.exports = AbstractWidget;\n","/**\n * Required parameters:\n * @param {RowModel} options.field: ViewSectionField (i.e. column) being edited.\n * @param {Object} options.cellValue: The value in the underlying cell being edited.\n * @param {String} options.editValue: String to be edited, or undefined to use cellValue.\n * @param {Number} options.cursorPos: The initial position where to place the cursor.\n * @param {Object} options.commands: Object mapping command names to functions, to enable as part\n *  of the command group that should be activated while the editor exists.\n */\nfunction BaseEditor(options) {\n}\n\n/**\n * Called after the editor is instantiated to attach its DOM to the page.\n * - cellElem: The element representing the cell that this editor should match\n *   in size and position. Used by derived classes, e.g. to construct an EditorPlacement object.\n */\nBaseEditor.prototype.attach = function(cellElem) {\n  // No-op by default.\n};\n\n/**\n * Returns DOM container with the editor, typically present and attached after attach() has been\n * called.\n */\nBaseEditor.prototype.getDom = function() {\n  return null;\n};\n\n/**\n * Called to get the value to save back to the cell.\n */\nBaseEditor.prototype.getCellValue = function() {\n  throw new Error(\"Not Implemented\");\n};\n\n/**\n * Used if an editor needs perform any actions before a save\n */\nBaseEditor.prototype.prepForSave = function() {\n  // No-op by default.\n};\n\n/**\n * Called to get the text in the editor, used when switching between editing data and formula.\n */\nBaseEditor.prototype.getTextValue = function() {\n  throw new Error(\"Not Implemented\");\n};\n\n/**\n * Called to get the position of the cursor in the editor. Used when switching between editing\n * data and formula.\n */\nBaseEditor.prototype.getCursorPos = function() {\n  throw new Error(\"Not Implemented\");\n};\n\nmodule.exports = BaseEditor;\n","var dispose = require('../lib/dispose');\nvar _ = require('underscore');\nvar TextEditor = require('./TextEditor');\n\n\nfunction CheckBoxEditor(options) {\n  TextEditor.call(this, options);\n}\ndispose.makeDisposable(CheckBoxEditor);\n_.extend(CheckBoxEditor.prototype, TextEditor.prototype);\n\n// For documentation, see NewBaseEditor.ts\nCheckBoxEditor.skipEditor = function(typedVal, cellVal) {\n  if (typedVal === ' ') {\n    // This is a special case when user hits <space>. We return the toggled value to save, and by\n    // this indicate that the editor should not open.\n    return !cellVal;\n  }\n}\n\n// For documentation, see NewBaseEditor.ts\nCheckBoxEditor.supportsReadonly = function() { return false; }\n\nmodule.exports = CheckBoxEditor;\n","var _ = require('underscore');\nvar dispose = require('app/client/lib/dispose');\nvar TextEditor = require('app/client/widgets/TextEditor');\n\nconst {Autocomplete} = require('app/client/lib/autocomplete');\nconst {ACIndexImpl, buildHighlightedDom} = require('app/client/lib/ACIndex');\nconst {ChoiceItem, cssChoiceList, cssMatchText, cssPlusButton,\n       cssPlusIcon} = require('app/client/widgets/ChoiceListEditor');\nconst {menuCssClass} = require('app/client/ui2018/menus');\nconst {testId, colors} = require('app/client/ui2018/cssVars');\nconst {choiceToken, cssChoiceACItem} = require('app/client/widgets/ChoiceToken');\nconst {dom, styled} = require('grainjs');\nconst {icon} = require('../ui2018/icons');\n\n/**\n * ChoiceEditor - TextEditor with a dropdown for possible choices.\n */\nfunction ChoiceEditor(options) {\n  TextEditor.call(this, options);\n\n  this.choices = options.field.widgetOptionsJson.peek().choices || [];\n  this.choiceOptions = options.field.widgetOptionsJson.peek().choiceOptions || {};\n  if (!options.readonly && options.field.viewSection().parentKey() === \"single\") {\n    this.cellEditorDiv.classList.add(cssChoiceEditor.className);\n    this.cellEditorDiv.appendChild(cssChoiceEditIcon('Dropdown'));\n  }\n  // Whether to include a button to show a new choice.\n  // TODO: Disable when the user cannot change column configuration.\n  this.enableAddNew = true;\n}\n\ndispose.makeDisposable(ChoiceEditor);\n_.extend(ChoiceEditor.prototype, TextEditor.prototype);\n\nChoiceEditor.prototype.getCellValue = function() {\n  const selectedItem = this.autocomplete && this.autocomplete.getSelectedItem();\n  return selectedItem ? selectedItem.label : TextEditor.prototype.getCellValue.call(this);\n}\n\nChoiceEditor.prototype.renderACItem = function(item, highlightFunc) {\n  const options = this.choiceOptions[item.label];\n\n  return cssChoiceACItem(\n    (item.isNew ?\n      [cssChoiceACItem.cls('-new'), cssPlusButton(cssPlusIcon('Plus')), testId('choice-editor-new-item')] :\n      [cssChoiceACItem.cls('-with-new', this.showAddNew)]\n    ),\n    choiceToken(\n      buildHighlightedDom(item.label, highlightFunc, cssMatchText),\n      options || {},\n      dom.style('max-width', '100%'),\n      testId('choice-editor-item-label')\n    ),\n    testId('choice-editor-item'),\n  );\n}\n\nChoiceEditor.prototype.attach = function(cellElem) {\n  TextEditor.prototype.attach.call(this, cellElem);\n  // Don't create autocomplete if readonly.\n  if (this.options.readonly) { return; }\n\n  const acItems = this.choices.map(c => new ChoiceItem(c, false));\n  const acIndex = new ACIndexImpl(acItems);\n  const acOptions = {\n    popperOptions: {\n      placement: 'bottom'\n    },\n    menuCssClass: `${menuCssClass} ${cssChoiceList.className} test-autocomplete`,\n    search: (term) => this.maybeShowAddNew(acIndex.search(term), term),\n    renderItem: (item, highlightFunc) => this.renderACItem(item, highlightFunc),\n    getItemText: (item) => item.label,\n    onClick: () => this.options.commands.fieldEditSave(),\n  };\n\n  this.autocomplete = Autocomplete.create(this, this.textInput, acOptions);\n}\n\n/**\n * Updates list of valid choices with any new ones that may have been\n * added from directly inside the editor (via the \"add new\" item in autocomplete).\n */\nChoiceEditor.prototype.prepForSave = async function() {\n  const selectedItem = this.autocomplete && this.autocomplete.getSelectedItem();\n  if (selectedItem && selectedItem.isNew) {\n    const choices = this.options.field.widgetOptionsJson.prop('choices');\n    await choices.saveOnly([...(choices.peek() || []), selectedItem.label]);\n  }\n}\n\n/**\n * If the search text does not match anything exactly, adds 'new' item to it.\n *\n * Also see: prepForSave.\n */\nChoiceEditor.prototype.maybeShowAddNew = function(result, text) {\n  // TODO: This logic is also mostly duplicated in ChoiceListEditor and ReferenceEditor.\n  // See if there's anything common we can factor out and re-use.\n  this.showAddNew = false;\n  const trimmedText = text.trim();\n  if (!this.enableAddNew || !trimmedText) { return result; }\n\n  const addNewItem = new ChoiceItem(trimmedText, false, true);\n  if (result.items.find((item) => item.cleanText === addNewItem.cleanText)) {\n    return result;\n  }\n\n  result.items.push(addNewItem);\n  this.showAddNew = true;\n\n  return result;\n}\n\nconst cssChoiceEditIcon = styled(icon, `\n  background-color: ${colors.slate};\n  position: absolute;\n  top: 0;\n  left: 0;\n  margin: 3px 3px 0 3px;\n`);\n\nconst cssChoiceEditor = styled('div', `\n  & > .celleditor_text_editor, & > .celleditor_content_measure {\n    padding-left: 18px;\n  }\n`);\n\nmodule.exports = ChoiceEditor;\n","/* global $, document */\nconst moment = require('moment-timezone');\nconst _ = require('underscore');\nconst gutil = require('app/common/gutil');\nconst commands = require('../components/commands');\nconst dispose = require('../lib/dispose');\nconst dom = require('../lib/dom');\nconst kd = require('../lib/koDom');\nconst TextEditor = require('./TextEditor');\nconst { parseDate, TWO_DIGIT_YEAR_THRESHOLD } = require('app/common/parseDate');\n\n// DatePicker unfortunately requires an <input> (not <textarea>). But textarea is better for us,\n// because sometimes it's taller than a line, and an <input> looks worse. The following\n// unconsionable hack tricks Datepicker into thinking anything it's attached to is an input.\n// It's more reasonable to just modify boostrap-datepicker, but that has its own downside (with\n// upgrading and minification). This hack, however, is simpler than other workarounds.\nvar Datepicker = $.fn.datepicker.Constructor;\n// datepicker.isInput can now be set to anything, but when read, always returns true. Tricksy.\nObject.defineProperty(Datepicker.prototype, 'isInput', {\n  get: function() { return true; },\n  set: function(v) {},\n});\n\n/**\n * DateEditor - Editor for Date type. Includes a dropdown datepicker.\n *  See reference: http://bootstrap-datepicker.readthedocs.org/en/latest/index.html\n *\n * @param {String} options.timezone: Optional timezone to use instead of UTC.\n */\nfunction DateEditor(options) {\n  // A string that is always `UTC` in the DateEditor, eases DateTimeEditor inheritance.\n  this.timezone = options.timezone || 'UTC';\n\n  this.dateFormat = options.field.widgetOptionsJson.peek().dateFormat;\n  this.locale = options.field.documentSettings.peek().locale;\n\n  // Update moment format string to represent a date unambiguously.\n  this.safeFormat = makeFullMomentFormat(this.dateFormat);\n\n  // Use the default local timezone to format the placeholder date.\n  const defaultTimezone = moment.tz.guess();\n  let placeholder = moment.tz(defaultTimezone).format(this.safeFormat);\n  if (options.readonly) {\n    // clear placeholder for readonly mode\n    placeholder = null;\n  }\n  TextEditor.call(this, _.defaults(options, { placeholder: placeholder }));\n\n  const cellValue = this.formatValue(options.cellValue, this.safeFormat, true);\n\n  // Set the edited value, if not explicitly given, to the formatted version of cellValue.\n  this.textInput.value = gutil.undef(options.state, options.editValue, cellValue);\n\n  if (!options.readonly) {\n    // Indicates whether keyboard navigation is active for the datepicker.\n    this._keyboardNav = false;\n\n    // Attach the datepicker.\n    this._datePickerWidget = $(this.textInput).datepicker({\n      keyboardNavigation: false,\n      forceParse: false,\n      todayHighlight: true,\n      todayBtn: 'linked',\n      assumeNearbyYear: TWO_DIGIT_YEAR_THRESHOLD,\n      // Datepicker supports most of the languages. They just need to be included in the bundle\n      // or by script tag, i.e.\n      // <script src=\"bootstrap-datepicker/dist/locales/bootstrap-datepicker.pl.min.js\"></script>\n      language : this.getLanguage(),\n      // Use the stripped format converted to one suitable for the datepicker.\n      format: {\n        toDisplay: (date, format, language) => moment.utc(date).format(this.safeFormat),\n        toValue: (date, format, language) => {\n          const timestampSec = parseDate(date, {\n            dateFormat: this.safeFormat,\n            // datepicker reads date in utc (ie: using date.getUTCDate()).\n            timezone: 'UTC',\n          });\n          return (timestampSec === null) ? null : new Date(timestampSec * 1000);\n        },\n      },\n    });\n    this.autoDisposeCallback(() => this._datePickerWidget.datepicker('destroy'));\n\n    // NOTE: Datepicker interferes with normal enter and escape functionality. Add an event handler\n    // to the DatePicker to prevent interference with normal behavior.\n    this._datePickerWidget.on('keydown', e => {\n      // If enter or escape is pressed, destroy the datepicker and re-dispatch the event.\n      if (e.keyCode === 13 || e.keyCode === 27) {\n        this._datePickerWidget.datepicker('destroy');\n        // The current target of the event will be the textarea.\n        setTimeout(() => e.currentTarget.dispatchEvent(e.originalEvent), 0);\n      }\n    });\n\n    // When the up/down arrow is pressed, modify the datepicker options to take control of\n    // the arrow keys for date selection.\n    let datepickerCommands = Object.assign({}, options.commands, {\n      datepickerFocus: () => { this._allowKeyboardNav(true); }\n    });\n    this._datepickerCommands = this.autoDispose(commands.createGroup(datepickerCommands, this, true));\n\n    this._datePickerWidget.on('show', () => {\n      // A workaround to allow clicking in the datepicker without losing focus.\n      dom(document.querySelector('.datepicker'),\n        kd.attr('tabIndex', 0),                   // allows datepicker to gain focus\n        kd.toggleClass('clipboard_focus', true)   // tells clipboard to not steal focus from us\n      );\n      // Attach command group to the input to allow switching keyboard focus to the datepicker.\n      dom(this.textInput,\n        // If the user inputs text into the textbox, take keyboard focus from the datepicker.\n        dom.on('input', () => { this._allowKeyboardNav(false); }),\n        this._datepickerCommands.attach()\n      );\n    });\n  }\n}\n\ndispose.makeDisposable(DateEditor);\n_.extend(DateEditor.prototype, TextEditor.prototype);\n\n/** @inheritdoc */\nDateEditor.prototype.getCellValue = function() {\n  let timestamp = parseDate(this.textInput.value, {\n    dateFormat: this.safeFormat,\n    timezone: this.timezone\n  });\n  return timestamp !== null ? timestamp : this.textInput.value;\n};\n\n// Helper to allow/disallow keyboard navigation within the datepicker.\nDateEditor.prototype._allowKeyboardNav = function(bool) {\n  if (this._keyboardNav !== bool) {\n    this._keyboardNav = bool;\n    $(this.textInput).data().datepicker.o.keyboardNavigation = bool;\n    // Force parse must be turned on with keyboard navigation, since it forces the highlighted date\n    // to be used when enter is pressed. Otherwise, keyboard date selection will have no effect.\n    $(this.textInput).data().datepicker.o.forceParse = bool;\n  }\n};\n\n// Moment value formatting helper.\nDateEditor.prototype.formatValue = function(value, formatString, shouldFallBackToValue) {\n  if (_.isNumber(value) && formatString) {\n    return moment.tz(value*1000, this.timezone).format(formatString);\n  } else {\n    // If value is AltText, return it unchanged. This way we can see it and edit in the editor.\n    return (shouldFallBackToValue && typeof value === 'string') ? value : \"\";\n  }\n};\n\n// Gets the language based on the current locale.\nDateEditor.prototype.getLanguage = function() {\n  // this requires a polyfill, i.e. https://www.npmjs.com/package/@formatjs/intl-locale\n  // more info about ts: https://github.com/microsoft/TypeScript/issues/37326\n  // return new Intl.Locale(locale).language;\n  return this.locale.substr(0, this.locale.indexOf(\"-\"));\n}\n\n// Updates the given Moment format to specify a complete date, so that the datepicker sees an\n// unambiguous date in the textbox input. If the format is incomplete, fall back to YYYY-MM-DD.\nfunction makeFullMomentFormat(mFormat) {\n  let safeFormat = mFormat;\n  if (!safeFormat.includes('Y')) {\n    safeFormat += \" YYYY\";\n  }\n  if (!safeFormat.includes('D') || !safeFormat.includes('M')) {\n    safeFormat = 'YYYY-MM-DD';\n  }\n  return safeFormat;\n}\n\nmodule.exports = DateEditor;\n","var _ = require('underscore');\nvar ko = require('knockout');\nvar dom = require('../lib/dom');\nvar dispose = require('../lib/dispose');\nvar kd = require('../lib/koDom');\nvar kf = require('../lib/koForm');\nvar AbstractWidget = require('./AbstractWidget');\n\nconst {fromKoSave} = require('app/client/lib/fromKoSave');\nconst {alignmentSelect, cssButtonSelect} = require('app/client/ui2018/buttonSelect');\nconst {cssRow, cssLabel} = require('app/client/ui/RightPanelStyles');\nconst {cssTextInput} = require(\"app/client/ui2018/editableLabel\");\nconst {styled, fromKo} = require('grainjs');\nconst {select} = require('app/client/ui2018/menus');\nconst {dateFormatOptions} = require('app/common/parseDate');\n\n/**\n * DateTextBox - The most basic widget for displaying simple date information.\n */\nfunction DateTextBox(field) {\n  AbstractWidget.call(this, field);\n\n  this.alignment = this.options.prop('alignment');\n\n  // These properties are only used in configuration.\n  this.dateFormat = this.field.config.options.prop('dateFormat');\n  this.isCustomDateFormat = this.field.config.options.prop('isCustomDateFormat');\n  this.mixedDateFormat = ko.pureComputed(() => this.dateFormat() === null || this.isCustomDateFormat() === null);\n\n  // Helper to set 'dateFormat' and 'isCustomDateFormat' from the set of default date format strings.\n  this.standardDateFormat = this.autoDispose(ko.computed({\n    owner: this,\n    read: function() { return this.mixedDateFormat() ? null : this.isCustomDateFormat() ? 'Custom' : this.dateFormat(); },\n    write: function(val) {\n      if (val === 'Custom') { this.isCustomDateFormat.setAndSave(true); }\n      else {\n        this.field.config.options.update({isCustomDateFormat: false, dateFormat: val});\n        this.field.config.options.save();\n      }\n    }\n  }));\n\n  // An observable that always returns `UTC`, eases DateTimeEditor inheritance.\n  this.timezone = ko.observable('UTC');\n}\ndispose.makeDisposable(DateTextBox);\n_.extend(DateTextBox.prototype, AbstractWidget.prototype);\n\nDateTextBox.prototype.buildDateConfigDom = function() {\n  const disabled = this.field.config.options.disabled('dateFormat');\n  return dom('div',\n    cssLabel(\"Date Format\"),\n    cssRow(dom(select(\n      fromKo(this.standardDateFormat),\n      [...dateFormatOptions, \"Custom\"],\n      { disabled, defaultLabel: \"Mixed format\" },\n    ), dom.testId(\"Widget_dateFormat\"))),\n    kd.maybe(() => !this.mixedDateFormat() && this.isCustomDateFormat(), () => {\n      return cssRow(dom(\n        textbox(this.dateFormat, { disabled }),\n      dom.testId(\"Widget_dateCustomFormat\")));\n    })\n  );\n};\n\nDateTextBox.prototype.buildConfigDom = function() {\n  return dom('div',\n    this.buildDateConfigDom(),\n    cssRow(\n      alignmentSelect(\n        fromKoSave(this.field.config.options.prop('alignment')),\n        cssButtonSelect.cls('-disabled', this.field.config.options.disabled('alignment')),\n      ),\n    )\n  );\n};\n\nDateTextBox.prototype.buildTransformConfigDom = function() {\n  return this.buildDateConfigDom();\n};\n\nDateTextBox.prototype.buildDom = function(row) {\n  let value = row[this.field.colId()];\n  return dom('div.field_clip',\n    kd.style('text-align', this.alignment),\n    kd.text(() => row._isAddRow() || this.isDisposed() ? '' : this.valueFormatter().format(value()))\n  );\n};\n\n// clean up old koform styles\nconst cssClean = styled('div', `\n  flex: 1;\n  margin: 0px;\n`)\n\n// override focus - to look like modern ui\nconst cssFocus = styled('div', `\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 3px 2px var(--grist-color-cursor);\n    border: 1px solid transparent;\n  }\n`)\n\n// helper method to create old style textbox that looks like a new one\nfunction textbox(value, options) {\n  const textDom = kf.text(value, options ?? {});\n  const tzInput = textDom.querySelector('input');\n  dom(tzInput,\n    kd.cssClass(cssTextInput.className),\n    kd.cssClass(cssFocus.className)\n  );\n  dom(textDom,\n    kd.cssClass(cssClean.className)\n  );\n  return textDom;\n}\n\nmodule.exports = DateTextBox;\n","/* global document */\nconst moment = require('moment-timezone');\nconst _ = require('underscore');\nconst dom = require('../lib/dom');\nconst dispose = require('../lib/dispose');\nconst kd = require('../lib/koDom');\nconst DateEditor = require('./DateEditor');\nconst gutil = require('app/common/gutil');\nconst { parseDate } = require('app/common/parseDate');\nconst TextEditor = require('./TextEditor');\n\n/**\n * DateTimeEditor - Editor for DateTime type. Includes a dropdown datepicker.\n *  See reference: http://bootstrap-datepicker.readthedocs.org/en/latest/index.html\n */\nfunction DateTimeEditor(options) {\n  // Get the timezone from the end of the type string.\n  options.timezone = gutil.removePrefix(options.field.column().type(), \"DateTime:\");\n\n  // Adjust the command group.\n  var origCommands = options.commands;\n\n  // don't modify navigation for readonly mode\n  if (!options.readonly) {\n    options.commands = Object.assign({}, origCommands, {\n      prevField: () => this._focusIndex() === 1 ? this._setFocus(0) : origCommands.prevField(),\n      nextField: () => this._focusIndex() === 0 ? this._setFocus(1) : origCommands.nextField(),\n    });\n  }\n\n  // Call the superclass.\n  DateEditor.call(this, options);\n\n  this._timeFormat = options.field.widgetOptionsJson.peek().timeFormat;\n\n  // To reuse code, this knows all about the DOM that DateEditor builds (using TextEditor), and\n  // modifies that to be two side-by-side textareas.\n  this._dateSizer = this.contentSizer;    // For consistency with _timeSizer and _timeInput.\n  this._dateInput = this.textInput;\n\n  const isValid = _.isNumber(options.cellValue);\n  const formatted = this.formatValue(options.cellValue, this._timeFormat, false);\n  // Use a placeholder of 12:00am, since that is the autofill time value.\n  const placeholder = moment.tz('0', 'H', this.timezone).format(this._timeFormat);\n\n  // for readonly\n  if (options.readonly) {\n    if (!isValid) {\n      // do nothing - DateEditor will show correct error\n    } else {\n      // append time format or a placeholder\n      const time = (formatted || placeholder);\n      const sep = time ? ' ' : '';\n      this.textInput.value = this.textInput.value + sep + time;\n    }\n  } else {\n    dom(this.dom, kd.toggleClass('celleditor_datetime', true));\n    dom(this.dom.firstChild, kd.toggleClass('celleditor_datetime_editor', true));\n    this.dom.appendChild(\n      dom('div.celleditor_cursor_editor.celleditor_datetime_editor',\n        this._timeSizer = dom('div.celleditor_content_measure'),\n        this._timeInput = dom('textarea.celleditor_text_editor',\n          kd.attr('placeholder', placeholder),\n          kd.value(formatted),\n          this.commandGroup.attach(),\n          dom.on('input', () => this.onChange())\n        )\n      )\n    );\n  }\n\n  // If the edit value is encoded json, use those values as a starting point\n  if (typeof options.state == 'string') {\n    try {\n      const { date, time } = JSON.parse(options.state);\n      this._dateInput.value = date;\n      this._timeInput.value = time;\n      this.onChange();\n    } catch(e) {\n      console.error(\"DateTimeEditor can't restore its previous state\")\n    }\n  }\n}\n\ndispose.makeDisposable(DateTimeEditor);\n_.extend(DateTimeEditor.prototype, DateEditor.prototype);\n\nDateTimeEditor.prototype.setSizerLimits = function() {\n  var maxSize = this.editorPlacement.calcSize({width: Infinity, height: Infinity}, {calcOnly: true});\n  if (this.options.readonly) {\n    return;\n  }\n  this._dateSizer.style.maxWidth =\n    this._timeSizer.style.maxWidth = Math.ceil(maxSize.width / 2 - 6) + 'px';\n};\n\n/**\n * Returns which element has focus: 0 if date, 1 if time, null if neither.\n */\nDateTimeEditor.prototype._focusIndex = function() {\n  return document.activeElement === this._dateInput ? 0 :\n    (document.activeElement === this._timeInput ? 1 : null);\n};\n\n/**\n * Sets focus to date if index is 0, or time if index is 1.\n */\nDateTimeEditor.prototype._setFocus = function(index) {\n  var elem = (index === 0 ? this._dateInput : (index === 1 ? this._timeInput : null));\n  if (elem) {\n    elem.focus();\n    elem.selectionStart = 0;\n    elem.selectionEnd = elem.value.length;\n  }\n};\n\n/**\n * Occurs when user types something into the editor\n */\nDateTimeEditor.prototype.onChange = function() {\n  this._resizeInput();\n\n  // store editor state as an encoded JSON string\n  const date = this._dateInput.value;\n  const time = this._timeInput.value;\n  this.editorState.set(JSON.stringify({ date, time}));\n}\n\nDateTimeEditor.prototype.getCellValue = function() {\n  let date = this._dateInput.value;\n  let time = this._timeInput.value;\n  let timestamp = parseDate(date, {\n    dateFormat: this.safeFormat,\n    time: time,\n    timeFormat: this._timeFormat,\n    timezone: this.timezone\n  });\n  return timestamp !== null ? timestamp :\n    (date && time ? `${date} ${time}` : date || time);\n};\n\n/**\n * Overrides the resizing function in TextEditor.\n */\nDateTimeEditor.prototype._resizeInput = function() {\n\n  // for readonly field, we will use logic from a super class\n  if (this.options.readonly) {\n    TextEditor.prototype._resizeInput.call(this);\n    return;\n  }\n  // Use the size calculation provided in options.calcSize (that takes into account cell size and\n  // screen size), with both date and time parts as the input. The resulting size is applied to\n  // the parent (containing date + time), with date and time each expanding or shrinking from the\n  // measured sizes using flexbox logic.\n  this._dateSizer.textContent = this._dateInput.value;\n  this._timeSizer.textContent = this._timeInput.value;\n  var dateRect = this._dateSizer.getBoundingClientRect();\n  var timeRect = this._timeSizer.getBoundingClientRect();\n  // Textboxes get 3px of padding on left/right/top (see TextEditor.css); we specify it manually\n  // since editorPlacement can't do a good job figuring it out with the flexbox arrangement.\n  var size = this.editorPlacement.calcSize({\n    width: dateRect.width + timeRect.width + 12,\n    height: Math.max(dateRect.height, timeRect.height) + 3\n  });\n  this.dom.style.width = size.width + 'px';\n  this._dateInput.parentNode.style.flexBasis = (dateRect.width + 6) + 'px';\n  this._timeInput.parentNode.style.flexBasis = (timeRect.width + 6) + 'px';\n  this._dateInput.style.height = Math.ceil(size.height - 3) + 'px';\n  this._timeInput.style.height = Math.ceil(size.height - 3) + 'px';\n};\n\nmodule.exports = DateTimeEditor;\n","var _ = require('underscore');\nvar ko = require('knockout');\nvar moment = require('moment-timezone');\nvar dom = require('../lib/dom');\nvar dispose = require('../lib/dispose');\nvar kd = require('../lib/koDom');\nvar kf = require('../lib/koForm');\nvar DateTextBox = require('./DateTextBox');\nvar gutil = require('app/common/gutil');\n\nconst {fromKoSave} = require('app/client/lib/fromKoSave');\nconst {alignmentSelect, cssButtonSelect} = require('app/client/ui2018/buttonSelect');\nconst {cssRow, cssLabel} = require('app/client/ui/RightPanelStyles');\nconst {cssTextInput} = require(\"app/client/ui2018/editableLabel\");\nconst {dom: gdom, styled, fromKo} = require('grainjs');\nconst {select} = require('app/client/ui2018/menus');\nconst {buildTZAutocomplete} = require('app/client/widgets/TZAutocomplete');\nconst {timeFormatOptions} = require(\"app/common/parseDate\");\n\n\n/**\n * DateTimeTextBox - The most basic widget for displaying date and time information.\n */\nfunction DateTimeTextBox(field) {\n  DateTextBox.call(this, field);\n\n  // Returns the timezone from the end of the type string\n  this._timezone = this.autoDispose(ko.computed(() =>\n    gutil.removePrefix(field.column().type(), \"DateTime:\")));\n\n  this._setTimezone = (val) => field.column().type.setAndSave('DateTime:' + val);\n\n  this.timeFormat = this.field.config.options.prop('timeFormat');\n  this.isCustomTimeFormat = this.field.config.options.prop('isCustomTimeFormat');\n  this.mixedTimeFormat = ko.pureComputed(() => this.timeFormat() === null || this.isCustomTimeFormat() === null);\n\n  // Helper to set 'timeFormat' and 'isCustomTimeFormat' from the set of default time format strings.\n  this.standardTimeFormat = this.autoDispose(ko.computed({\n    owner: this,\n    read: function() { return this.isCustomTimeFormat() ? 'Custom' : this.timeFormat(); },\n    write: function(val) {\n      if (val === 'Custom') { this.isCustomTimeFormat.setAndSave(true); }\n      else {\n        this.isCustomTimeFormat.setAndSave(false);\n        this.timeFormat.setAndSave(val);\n      }\n    }\n  }));\n}\ndispose.makeDisposable(DateTimeTextBox);\n_.extend(DateTimeTextBox.prototype, DateTextBox.prototype);\n\n/**\n * Builds the config dom for the DateTime TextBox. If isTransformConfig is true,\n * builds only the necessary dom for the transform config menu.\n */\nDateTimeTextBox.prototype.buildConfigDom = function(isTransformConfig) {\n  const disabled = ko.pureComputed(() => {\n    return this.field.config.options.disabled('timeFormat')() || this.field.column().disableEditData();\n  });\n  const alignment = fromKoSave(this.field.config.options.prop('alignment'));\n  return dom('div',\n    cssLabel(\"Timezone\"),\n    cssRow(\n      gdom.create(buildTZAutocomplete, moment, fromKo(this._timezone), this._setTimezone,\n        { disabled : fromKo(disabled)}),\n      ),\n    this.buildDateConfigDom(),\n    cssLabel(\"Time Format\"),\n    cssRow(dom(\n      select(\n        fromKo(this.standardTimeFormat),\n        [...timeFormatOptions, \"Custom\"],\n        { disabled : fromKo(disabled), defaultLabel: 'Mixed format' }\n      ),\n      dom.testId(\"Widget_timeFormat\")\n    )),\n    kd.maybe(() => !this.mixedTimeFormat() && this.isCustomTimeFormat(), () => {\n      return cssRow(\n        dom(\n          textbox(this.timeFormat, { disabled: this.field.config.options.disabled('timeFormat')}),\n          dom.testId(\"Widget_timeCustomFormat\")\n        )\n      );\n    }),\n    isTransformConfig ? null : cssRow(\n      alignmentSelect(\n        alignment,\n        cssButtonSelect.cls('-disabled', this.field.config.options.disabled('alignment')),\n      )\n    )\n  );\n};\n\nDateTimeTextBox.prototype.buildTransformConfigDom = function() {\n  return this.buildConfigDom(true);\n};\n\n// clean up old koform styles\nconst cssClean = styled('div', `\n  flex: 1;\n  margin: 0px;\n`)\n\n// override focus - to look like modern ui\nconst cssFocus = styled('div', `\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 3px 2px #5e9ed6;\n    border: 1px solid transparent;\n  }\n`)\n\n\n// helper method to create old style textbox that looks like a new one\nfunction textbox(value, options) {\n  const textDom = kf.text(value, options || {});\n  const tzInput = textDom.querySelector('input');\n  dom(tzInput,\n    kd.cssClass(cssTextInput.className),\n    kd.cssClass(cssFocus.className)\n  );\n  dom(textDom,\n    kd.cssClass(cssClean.className)\n  );\n  return textDom;\n}\n\nmodule.exports = DateTimeTextBox;\n","var _ = require('underscore');\nvar gutil = require('app/common/gutil');\nvar dom = require('../lib/dom');\nvar kd = require('../lib/koDom');\nvar dispose = require('../lib/dispose');\nvar BaseEditor = require('./BaseEditor');\nvar commands = require('../components/commands');\nconst {testId} = require('app/client/ui2018/cssVars');\nconst {createMobileButtons, getButtonMargins} = require('app/client/widgets/EditorButtons');\nconst {EditorPlacement} = require('app/client/widgets/EditorPlacement');\nconst {observable} = require('grainjs');\n\n/**\n * Required parameters:\n * @param {RowModel} options.field: ViewSectionField (i.e. column) being edited.\n * @param {Object} options.cellValue: The value in the underlying cell being edited.\n * @param {String} options.editValue: String to be edited, or undefined to use cellValue.\n * @param {Number} options.cursorPos: The initial position where to place the cursor.\n * @param {Object} options.commands: Object mapping command names to functions, to enable as part\n *  of the command group that should be activated while the editor exists.\n *\n * Optional parameters:\n * @param {String} options.placeholder: Optional placeholder for the textarea.\n *\n * TextEditor exposes the following members, which derived classes may use:\n * @member {Object} this.options: Options as passed into the constructor.\n * @member {Node} this.dom: The DOM element for the editor.\n * @member {Node} this.textInput: The textarea element of the editor (contained within this.dom).\n * @member {Object} this.commandGroup: The CommandGroup created from options.commands.\n */\nfunction TextEditor(options) {\n  this.options = options;\n  this.commandGroup = this.autoDispose(commands.createGroup(options.commands, null, true));\n  this._alignment = options.field.widgetOptionsJson.peek().alignment || 'left';\n  // calculate initial value (state, requested edited value or a current cell value)\n  const initialValue = gutil.undef(options.state, options.editValue, String(options.cellValue == null ? \"\" : options.cellValue));\n  // create observable with current state\n  this.editorState = this.autoDispose(observable(initialValue));\n\n  this.dom = dom('div.default_editor',\n    kd.toggleClass(\"readonly_editor\", options.readonly),\n    this.cellEditorDiv = dom('div.celleditor_cursor_editor', dom.testId('TextEditor_editor'),\n      testId('widget-text-editor'),   // new-style testId matches NTextEditor, for more uniform tests.\n      this.contentSizer = dom('div.celleditor_content_measure'),\n      this.textInput = dom('textarea.celleditor_text_editor',\n        kd.attr('placeholder', options.placeholder || ''),\n        kd.style('text-align', this._alignment),\n        kd.boolAttr('readonly', options.readonly),\n        kd.value(initialValue),\n        this.commandGroup.attach(),\n\n        // Resize the textbox whenever user types in it.\n        dom.on('input', () => this.onChange())\n      )\n    ),\n    createMobileButtons(options.commands),\n  );\n}\n\ndispose.makeDisposable(TextEditor);\n_.extend(TextEditor.prototype, BaseEditor.prototype);\n\nTextEditor.prototype.attach = function(cellElem) {\n  // Attach the editor dom to page DOM.\n  this.editorPlacement = EditorPlacement.create(this, this.dom, cellElem, {margins: getButtonMargins()});\n\n  // Reposition the editor if needed for external reasons (in practice, window resize).\n  this.autoDispose(this.editorPlacement.onReposition.addListener(this._resizeInput, this));\n\n  this.setSizerLimits();\n\n  // Once the editor is attached to DOM, resize it to content, focus, and set cursor.\n  this._resizeInput();\n  this.textInput.focus();\n  var pos = Math.min(this.options.cursorPos, this.textInput.value.length);\n  this.textInput.setSelectionRange(pos, pos);\n};\n\nTextEditor.prototype.getDom = function() {\n  return this.dom;\n};\n\nTextEditor.prototype.setSizerLimits = function() {\n  // Set the max width of the sizer to the max we could possibly grow to, so that it knows to wrap\n  // once we reach it.\n  const maxSize = this.editorPlacement.calcSizeWithPadding(this.textInput,\n    {width: Infinity, height: Infinity}, {calcOnly: true});\n  this.contentSizer.style.maxWidth = Math.ceil(maxSize.width) + 'px';\n};\n\nTextEditor.prototype.getCellValue = function() {\n  return this.textInput.value;\n};\n\nTextEditor.prototype.onChange = function() {\n  if (this.editorState)\n    this.editorState.set(this.getTextValue());\n  this._resizeInput()\n}\n\nTextEditor.prototype.getTextValue = function() {\n  return this.textInput.value;\n};\n\nTextEditor.prototype.getCursorPos = function() {\n  return this.textInput.selectionStart;\n};\n\n/**\n * Helper which resizes textInput to match its content. It relies on having a contentSizer element\n * with the same font/size settings as the textInput, and on having `calcSize` helper,\n * which is provided by the EditorPlacement class.\n */\nTextEditor.prototype._resizeInput = function() {\n  var textInput = this.textInput;\n  // \\u200B is a zero-width space; it is used so the textbox will expand vertically\n  // on newlines, but it does not add any width.\n  this.contentSizer.textContent = textInput.value + '\\u200B';\n  var rect = this.contentSizer.getBoundingClientRect();\n\n  // Allow for a bit of extra space after the cursor (only desirable when text is left-aligned).\n  if (this._alignment === 'left') {\n    rect.width += 16;\n  }\n\n  var size = this.editorPlacement.calcSizeWithPadding(textInput, rect);\n  textInput.style.width = size.width + 'px';\n  textInput.style.height = size.height + 'px';\n};\n\nmodule.exports = TextEditor;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 49674;\nmodule.exports = webpackEmptyContext;"],"names":["completionOptions","WeakMap","setupAceEditorCompletions","editor","options","_initialized","prefixMatchRegex","getCompletionPrefix","pos","getCursorPosition","match","session","getLine","row","slice","column","aceLanguageTools","setCompleters","addCompleter","async","prefix","callback","get","length","wordRange","getWordRange","token","getTokenAt","end","nextToken","isRenamingFunc","includes","type","completions","getSuggestions","map","suggestionWithValue","suggestion","example","Array","isArray","funcname","argSpec","value","caption","score","captionLengths","filter","c","sharedPadding","Math","min","MAX_RELATIVE_SHARED_PADDING","max","MAX_ABSOLUTE_SHARED_PADDING","numSpaces","BASE_PADDING","repeat","initCustomCompleter","set","Autocomplete","completer","autoSelect","_gristShouldRefreshCompletions","start","this","getTextRange","toLowerCase","endsWith","bind","originalUpdate","updateCompletions","keepPopupPosition","base","originalInsertMatch","insertMatch","result","apply","arguments","showPopup","init","$init","popup","customizeAceCompleterPopup","aceCompleterAddHelpLinks","on","detach","destroy","container","remove","origTokenize","bgTokenizer","$tokenizeRow","tokens","rowData","dot","lastIndexOf","linkStart","linkEnd","newTokens","href","exampleStart","push","console","warn","position","t","lStart","lEnd","beforeLink","inLink","newType","afterLink","retokenizeAceCompleterRow","data","removeAllListeners","e","domEvent","tgt","target","matches","dest","parentElement","querySelector","window","open","textContent","maybeAceCompleterLinkClick","stop","testId","makeTestId","Banner","Disposable","constructor","_options","super","_isExpanded","Observable","cssBanner","class","bannerCssClass","cls","style","_buildContent","_buildButtons","content","contentSmall","dom","use","isExpanded","isNarrowScreenObs","cssButtons","showExpandButton","_buildExpandButton","showCloseButton","_buildCloseButton","cssButton","onClose","cssExpandButton","buildBannerMessage","domArgs","cssBannerMessage","cssIcon","cssLightlyBoldedText","styled","colors","cssBannerLink","icon","cssIconAndText","range","uniqBy","flatten","sortByXValues","series","xValues","values","indices","val","i","sort","a","b","typedCompare","s","splitValuesByIndex","index","decoded","si","splitByValue","entries","concat","fill","consolidateValues","xvalues","xval","splice","j","formatPercent","floor","clamp","debounce","defaults","defaultsDeep","isNumber","merge","sum","union","Plotly","makeT","isPieLike","chartType","isNumericOnly","isNumericLike","col","unwrap","colType","pureType","visibleColModel","visibleColType","getSeriesName","haveMultiple","group","label","groupName","String","LIST_TYPES","ChartView","_sortSpec","viewSection","activeSortSpec","peek","gristDoc","viewSectionModel","_chartDom","autoDispose","buildDom","_resize","Delay","_resizeChart","viewPane","_chartType","chartTypeDef","optionsObj","_formatterComp","field","viewFields","at","visibleColFormatter","_update","_updateView","subs","subscribe","forEach","sub","dispose","displayColModel","listenTo","sortedRows","getKoArray","currentTheme","addListener","onOff","relayout","catch","reportError","args","isDisposed","chartFunc","chartTypes","fields","all","rowIds","startIndexForYAxis","prop","_isCompatibleSeries","colId","getter","tableModel","tableData","getRowPropFunc","fullGetter","r","Date","toISOString","dateGetter","isInSortSpec","Boolean","Sort","colRef","v","dataOptions","plotData","totalFormatter","multiseries","shouldSort","nseries","groupColumn","valueSeries","Map","maxGroups","groupValues","Set","groupSeries","from","gSeries","part","layout","_getPlotlyLayout","config","displayModeBar","react","parentNode","display","getComputedStyle","Plots","resize","yaxis","automargin","title","standoff","logYAxis","invertYAxis","autorange","margin","l","pad","xaxis","stacked","barmode","_getPlotlyTheme","appModel","docPageModel","paper_bgcolor","plot_bgcolor","color","font","legend","bgcolor","prototype","Object","assign","_gristDoc","_section","_configFieldsHelper","VisibleFieldsConfig","_xAxisFieldIndex","Computed","fromKo","_optionsObj","_use","isUndefined","_groupDataColId","getObservable","onWrite","_setGroupDataColumn","_freezeXAxis","_freezeYAxis","_xAxis","freeze","_setXAxis","_isValueAggregated","_isSummaryTable","_setAggregation","_columnsOptions","_getSummarySourceColumns","_getColumns","isHiddenCol","_groupDataOptions","_groupDataForce","_groupData","force","_firstFieldLabel","firstFieldIsLabels","docData","bundleActions","saveOnly","_instanceMap","parentKey","cssRow","select","cssCheckboxRowObs","cssCheckboxRow","cssRowLabel","linkSelect","fromKoSave","defaultLabel","owner","cssSlideRow","save","input","func","fvalue","parseFloat","isFinite","Infinity","cssNumberWithSpinner","cssNumberInput","_ev","el","onChange","ArrowDown","ArrowUp","cssSpinners","step","cssNumberWithSpinnerRow","cssRowHelp","cssSeparator","cssLabel","cssHintRow","_buildYAxis","cssAddYAxis","cssAddIcon","menu","hiddenColumns","filterFunc","nonNumericCount","menuItem","addField","menuText","findColumn","find","removeField","setSaveValue","fieldIndex","findIndex","f","setAndSave","splitColId","cols","_setGroupByColumns","xAxisField","changeFieldPosition","xAxisColId","nestInActiveBundle","table","columns","summarySource","cssRemoveIcon","skipFirst","buildVisibleFieldsConfigHelper","itemCreateFunc","_buildField","draggableOptions","removeButton","drag_indicator","_doAggregation","_undoAggregation","_toggleSummaryTable","summarySourceTable","colIds","pageWidget","summarize","_getColumnIds","_ensureValidLinkingIfAny","newSection","saveViewSection","groupByCols","linkSrcSection","getRowId","srcPageWidget","id","ChartConfig","cssRangeInput","Number","basicPlot","trimNonNumericData","errorBars","symmetric","array","arrayminus","thickness","width","extractErrorBars","n","indexToKeep","line","_val","has","uniqXValues","axis1","axis2","orientation","stackgroup","firstNonZero","name","replaceEmptyLabels","makeRelativeStackGroup","text","bar","connectgaps","lineConnectGaps","mode","lineMarkers","area","shape","scatter","textposition","pie","labels","donut","hole","donutHoleSize","annotations","showTotal","formatAny","showarrow","size","textSize","kaplan_meier","categoryList","valueList","groups","cat","groupIntoSeries","points","survivalValues","dist","distinctValues","keys","nativeCompare","y","x","kaplanMeierPlot","p","_","some","theme","vars","className","nullAsUndefined","baseView","optCursorPos","_isLive","viewData","_sectionId","_rowId","rowId","rowIndex","read","clampIndex","getRowIndexWithSub","write","makeLiveIndex","editorCommands","hasFocus","_properRowId","activeRowId","onDispose","lastCursorPos","getCursorPos","currentPosition","sectionId","cursorPos","getRowIndex","isLive","Cursor","cursorUp","cursorDown","cursorLeft","cursorRight","skipUp","skipDown","pageUp","pageDown","prevField","nextField","moveToFirstRecord","moveToLastRecord","moveToFirstField","moveToLastField","escapeRegExp","deburr","split","normalizeText","trim","wordSepRegexp","highlightNone","ACIndexImpl","items","_maxResults","_keepOrder","_allItems","allWords","words","cleanText","w","word","localeCompare","_words","searchText","cleanedSearchText","searchWords","myMatches","k","searchWord","itemIndex","_findOverlaps","startsWith","sortedMatches","itemIndices","highlightFunc","selectIndex","highlightMatches","indexOf","item","regexp","RegExp","join","test","startsWithText","searchWordPos","insertIndex","sortedIndex","scored","wordEntry","itemScore","pow","buildHighlightedDom","highlight","wordSepRegexpParen","source","textParts","outputs","separator","prefixLen","findLongestPrefixLen","chars","choices","reduce","choice","text1","text2","findCommonPrefixLength","buildACSelect","acIndex","valueObs","acHolder","Holder","textInput","isOpen","isEmpty","acOpen","acOptions","finish","clear","blur","revert","commitOrRevert","commitIfValid","openOrCommit","getSelectedItem","disabled","menuCssClass","search","term","renderItem","cssSelectItem","cssMatchText","getItemText","onClick","cssSelectBtn","cssInput","ev","elem","Escape","Enter","Tab","preventDefault","focus","CustomSectionElement","plugins","acc","plugin","customSections","definition","manifest","contributions","pluginId","sectionIds","section","sectionName","safeBrowser","createViewProcess","path","_timeoutId","ms","cb","optContext","ctx","setTimeout","reqId","requestAnimationFrame","cancelAnimationFrame","autoDisposeCallback","cancel","clearTimeout","optArgs","G","SafeBrowser","_plugin","_clientScope","_untrustedContentOrigin","_mainPath","_baseLogger","rpcLogger","_viewProcesses","_viewCount","_pluginId","_pluginRpc","rpc","src","WorkerProcess","isRunningUnderElectron","WebviewProcess","IframeProcess","_createViewProcess","action","view","receiveAction","proc","viewId","getRenderTarget","renderFunc","element","_mainProcess","procId","delete","forwardCall","Error","forwardMessage","_createRpc","createWorker","url","location","origin","process","createView","registerForwarder","unregisterForwarder","Rpc","logger","queueOutgoingUntilReadyMessage","servePlugin","ClientProcess","_safeBrowser","_src","_actionRouter","gristAPI","subscribeTable","unsubscribe","unsubscribeTable","render","renderImpl","disposeImpl","registerImpl","unregisterImpl","err","create","worker","Worker","getOriginUrl","addEventListener","receiveMessage","setSendMessage","postMessage","terminate","ViewProcess","iframe","listener","event","contentWindow","removeEventListener","msg","webview","allowpopups","partition","channel","send","copyToClipboard","txt","navigator","clipboard","writeText","stash","document","createElement","setAttribute","left","body","appendChild","selection","getSelection","rangeCount","getRangeAt","execCommand","removeChild","removeAllRanges","addRange","copyTextToClipboard","copyDataToClipboard","readTextFromClipboard","readText","readDataFromClipboard","domAsync","promiseForDomContents","onError","markerPre","markerPost","disposed","then","contents","replaceContent","onDisposeElem","wrappers","koObs","KoSaveWrapObs","KoWrapObs","_koObs","createObsArray","koArray","setDisposeOwner","KoWrapObsArray","MutableObsArray","_koArray","_koSub","newValues","added","deleted","documentCursor","cursorStyle","innerHTML","head","isConnected","movable","startX","startY","md","button","clientX","clientY","state","onStart","holder","MultiHolder","mv","dx","dy","onMove","onEnd","stopPropagation","useCapture","createSessionObs","key","_default","isValid","_pauseSaving","storage","obs","parsed","safeJsonParse","fromString","getItem","stored","JSON","stringify","toString","removeItem","setItem","pauseSaving","yesNo","isBoolean","isString","SimpleList","_ctl","_items","_action","opt","_selectedIndex","getOptionFull","cssMenuWrap","cssMenu","cssMenuExt","headerDom","_menuContent","cssMenuList","cssOptionRow","cssMenuItem","_doAction","setSelected","_mouseOver","attachMouseOverOnMove","_findTargetItem","close","_getNextSelectable","_getSelectedData","children","prev","_selected","clsName","classList","add","scrollIntoView","block","reset","findAncestorChild","contains","call","xsize","next","_getNext","addToSort","sortSpecObs","direction","spec","sortBy","colSpec","updatePositions","tableId","getTableModel","sortFunc","SortFunc","ClientColumnGetters","unversioned","updateSpec","activeDisplaySortSpec","compare","subscribeTo","sortedRowIds","colInfo","MANUALSORT","sendActions","sortColRefs","activeSortJson","zipObject","fieldInsertPositions","numInserts","rightPos","peekLength","parentPos","makePasteText","fmtGetter","tsvEncode","getDocIdHash","docId","gristDocPageModel","currentDocId","makePasteHtml","includeColHeaders","rowStyle","colStyle","border","cellspacing","idx","_styleAttr","colRefs","getColType","rawValue","rawGetter","fmtValue","outerHTML","parsePasteHtml","DOMParser","parseFromString","docIdHash","getAttribute","querySelectorAll","cell","colIdx","o","displayValue","hasAttribute","makeDeleteAction","blankRow","isRealFormula","disableEditData","setTestState","testGrist","noop","trimStart","IMPORTABLE_EXTENSIONS","selectFiles","onProgress","electronSelectFiles","resOptions","filters","properties","extensions","multiple","getElectronOptions","files","accept","getFileDialogOptions","uploadFiles","fileList","formData","FormData","file","append","gristConfig","maxUploadSizeImport","maxUploadSizeAttachment","sizeLimit","UserError","byteString","Promise","resolve","reject","xhr","XMLHttpRequest","docUrl","docWorkerUrl","setRequestHeader","withCredentials","upload","lengthComputable","loaded","total","status","responseText","error","parse","fetchURL","docComm","isDriveUrl","response","fetch","log","message","fileName","basename","mimeType","headers","fileOptions","fileObj","File","blob","exec","_tableModel","rowModel","docModel","getRowModel","mayHaveVersions","valueGetter","versions","parent","local","remote","orderByChoice","widgetOptionsJson","choiceGetter","manualSortCol","tableMetaRow","getColGetter","ClientColumnGettersByColId","_tableData","ColumnFilter","_initialFilterJson","_columnType","visibleColumnType","_allValues","isInclusionFilter","_include","_getState","isRange","_isRange","setState","_updateState","columnType","initialFilterJson","filterJson","_values","include","addMany","_toValues","deleteMany","makeFilterJson","minMax","included","excluded","ALL_INCLUSIVE_FILTER_JSON","NEW_FILTER_JSON","ColumnToMapImpl","def","description","optional","typeDesc","allowMultiple","DataRowModel","dataTableModel","colNames","cells","allValidationsList","validations","_isAddRow","_isRealChange","_validationFailures","validation","getValidationNameFromId","colValues","_table","sendTableAction","_assignColumn","_fields","colName","hasOwnProperty","getValue","ExtraRows","comparison","remoteTableId","getRemoteTableId","leftTableDelta","leftChanges","tableDeltas","rightTableDelta","rightChanges","rightAddRows","addRows","rightRemoveRows","removeRows","leftAddRows","leftRemoveRows","DataTableModelWithDiff","core","tableQuerySets","TableDataWithDiff","isLoaded","_wrappedModel","sortedRowSet","optRowModelClass","createLazyRowsModel","createFloatingRowModel","getAllRows","getNumRows","groupByCol","getRowGrouping","actions","optDesc","sendTableActions","dataLoadedEmitter","tableActionEmitter","_leftRemovals","_rightRemovals","_updates","updateRows","getColIds","fn","columnDeltas","right","oldValue","newValue","interpretRowId","numRecords","delta","parentTableId","tableRenames","QuerySetManager","_docModel","_queryMap","query","QuerySet","querySet","gracePeriodMs","queryKey","queryRefs","tableRec","dataTables","colRefsByColId","filterTuples","operations","tableRef","convertQueryToRefs","querySetRefCount","purgeKey","testSetGracePeriodMs","DynamicQuerySet","RowSource","_querySetManager","_holder","_updateQuerySetDebounced","_updateQuerySet","_querySet","isTruncated","newQuerySet","useQuerySet","fetchPromise","nextQuerySet","oldQuerySet","stopListening","trigger","BaseFilteredRowSource","qsm","decodeQuery","dataTablesByRef","operation","convertQueryFromRefs","getFilterFunc","isInvalid","tableFlag","tables","_isDeleted","colFlags","makeQueryInvalidComputed","invalid","maxParams","onDemand","tableQS","limit","disposeQuerySet","querySubId","removeQuerySet","addQuerySet","TableQuerySets","_querySets","loadPartial","unusedRowIds","qs","unloadPartial","getTable","colGetters","rowFilterFunc","SectionFilter","_openFilterOverride","_tempRows","obsArray","columnFilterFunc","openFilter","openFilterFilterFunc","colFilter","_buildPlainFilterFunc","fieldOrColumn","origCol","sectionFilterFunc","tempRows","_addRowsToFilter","override","rows","funcs","every","CombinedStyle","rules","flags","textColor","fillColor","fontBold","fontUnderline","fontItalic","fontStrikethrough","ALL","Symbol","_changeTypes","update","RowListener","rowSource","onAddRows","changeType","onRowNotify","onRemoveRows","notifyValue","ArrayRowSource","_rows","MappedRowSource","parentRowSource","mapperFunc","_mapperFunc","ExtendedRowSource","extras","_filterFunc","_matchingRows","outputRows","_addExcludedRow","_deleteExcludedRow","changes","_updateRowsHelper","removes","updates","adds","FilteredRowSource","_excludedRows","RowGroupHelper","groupValue","_addToMapOfArrays","arr","RowGrouping","_groupFunc","_rowsToValues","_valuesToGroups","rowGroupHelper","groupedRows","groupRows","getGroup","_addAll","_removeAll","updateGroup","removeGroup","insertGroup","SortedRowSet","_compareFunc","_skippableRows","_allRows","_isPaused","_keepFunc","getKeepFunc","doPause","compareFunc","_canChangeIncrementally","_keep","allRows","last","_isIndexInOrder","_allRowsSorted","isSmallChange","nContext","keeping","edge","skipping","skipRowId","getSkipRowId","RowWatcher","rowFilter","_rowCounter","buildHighlightedCode","code","gristTheme","placeholder","maxLines","enableCustomCss","getGristConfig","highlighter","PythonMode","Mode","aceDom","chrome","dracula","codeText","codeTheme","aceThemeName","aceTheme","lines","appearance","html","css","importCssString","cssHighlightedCode","subscribeElem","newCodeText","updateHighlightedCode","newCodeTheme","cssCodeBlock","isNull","Intl","Collator","numeric","ColumnFilterMenuModel","_params","columnFilter","filterInfo","initialPinned","isPinned","limitShown","limitShow","searchValue","isSortedByCount","filterSet","searchRegex","showAllOptions","valueCount","count","filteredValues","isShownFirst","isNaN","comparator","otherValues","filteredKeys","valuesBeyondLimit","DEPS","getCurrentTime","DEFAULT_OPTION_LIST","quantity","unit","endOf","relativeDateOptionsSpec","date","res","relDate","getMatchingDoubleRelativeDate","abs","month","clone","dateValue","option","dateNow","m","year","now","startOf","dayQuantity","formatBoundOption","bound","valueFormatter","ColumnFilterCalendarView","_opts","_moveToSelected","_setRange","selectedBoundObs","cssContainer","cssLinkRow","cssLink","_$el","datepicker","_getCurrentTime","_cleanup","cssDatepickerContainer","$el","$","defaultViewDate","todayHighlight","_onChangeDate","_getRange","getBoundsValue","toDate","d","valueOf","_updateBoundValue","UTC","relativeDate","periods","updateRelativeDate","elements","textButton","RelativeDatesMenu","ctl","_obs","_opt","_dropdownList","listenKeys","getTriggerElem","_getOptions","DateRangeOptions","identity","tail","columnFilterMenu","opts","model","doCancel","doSave","renderValue","valueParser","showAllFiltersButton","checkboxMap","filterListener","checked","searchValueObs","isAboveLimitObs","isSearchingObs","showRangeFilter","isNumberType","isDateLikeType","isDateFilter","viewTypeObs","isMinSelected","isMaxSelected","searchInput","tabindex","FocusLayer","defaultFocusElem","pauseMousetrap","cssRangeContainer","rangeInput","isSelected","nextSelected","shiftKey","attach","cssMenuDivider","viewType","cssMenuHeader","cssSearchIcon","cssSearch","onInput","Escape$","allSpec","noneSpec","cssSelectAll","cssDotSeparator","cssSortIcon","cssItemList","cssNoResults","cssItemCount","toLocaleString","cssMenuFooter","isAboveLimit","anyOtherValues","buildSummary","cssFooterButtons","cssPrimaryButton","basicButton","cssAllFiltersButton","commands","cssPinButton","pinned","behavioralPromptsManager","attachTip","popupOptions","modifiers","flip","behavior","placement","buildInput","cssTokenContainer","cssTokenToken","cssDeleteButton","cssDeleteIcon","relativeToken","numericInput","cssRangeInputContainer","cssRangeInputIcon","popupCtl","reference","domCreator","PopupControl","attachElem","openCtl","domDispose","boundaries","popupControl","relativeDatesControl","onValueChange","toggle","Enter$","attachRelativeDatesOptions","Backspace$","formatValue","inputEl","editMode","onBlur","flush","inputmode","Tab$","switchFilterType","checkboxState","subOptions","getState","first","formatUniqueCount","getCount","formatCount","createFilterMenu","params","sectionFilter","keyMapFunc","labelMapFunc","valueMapFunc","labelGetter","formatter","isRefListType","maybeLabels","isList","getMapFuncs","createValueParser","colFormatter","extractTypeFromColType","docSettings","widgetOpts","buildFilterFunc","hiddenRows","valueCounts","getEmptyCountMap","addCountsToMap","areHiddenRows","valueCountsArr","setFilterOverride","setFilter","origColRef","resetTemporaryRows","pinnedActiveFilters","showNestedFilteringPopup","revertFilter","initialFilter","getRenderFunc","choiceSet","choiceOptions","_key","cssItemValue","choiceToken","cssToken","valueMap","list","addSingleCountToMap","refIds","refLabels","displayValues","isHiddenRow","defaultPopupOptions","attachColumnFilterMenu","filterMenuOptions","popupOptionsWithDefaults","instance","viewInstance","setPopupToCreateDom","menuDivider","primaryButton","cssOptionRowIcon","isEqual","buildFormulaTriggers","applyToNew","recalcWhen","RecalcWhen","setRecalc","forceApplyOnChanges","applyOnChanges","recalcDeps","isEmptyList","when","deps","summaryText","dep","changesDisabled","notTrigger","newRowsDisabled","cssIndentedRow","cssSelectSummary","initialDeps","allUpdates","showColumns","columnsState","current","isChanged","shouldSave","_shouldSave","cssSelectorMenu","cssItemsFixed","cssSelectorItem","cssSelectorNote","cssItemsList","cssSelectorFooter","buildTriggerSelectors","defaultMenuOptions","shadowScroll","buildNameConfig","origColumn","cursor","untieColId","untieColIdFromLabel","editedLabel","editableColId","edited","sanitizeIdent","isSummaryTable","cssBlockedCursor","disableModify","cssColLabelBlock","cssColTieBlock","cssColTieConnectors","cssToggleButton","buildFormulaConfig","buildEditor","maybeFormula","maybeTrigger","formulaField","clearState","bundleChanges","formula","isFormula","currentView","isMultiSelect","vs","selectedFields","multiType","columnsBehavior","isFormulaLike","columnsAllIsFormula","selectedColumnIds","selectedColumns","selectMenu","selectOption","convertIsFormula","toFormula","noRecalc","clearColumns","removeAttribute","behaviorName","commonType","behaviorIcon","behaviorLabel","selectTitle","convertToData","convertToDataOption","clearAndResetOption","convertDataColumnToTriggerColumn","convertFormulaToTrigger","setFormula","setTrigger","onSaveConvertToFormula","notBlank","trueFormula","convertToFormula","onSaveConvertToTrigger","hasTriggerFormula","convertToTrigger","updateFormula","disableOtherActions","errorMessage","formulaBuilder","onSave","canDetach","buildFormula","onCancel","errMsg","cssEmptySeparator","withInfoTooltip","GristTooltips","hasTrigger","cssFieldFormula","tabIndex","refElem","editValue","cssIconButton","_fileForm","_fileInput","_currentCB","openFilePicker","click","filterBar","_owner","popupControls","cssFilterBar","activeFilters","cssFilterBarItem","cssFilterBarItemButton","cssFilterBarItemIcon","cssMenuTextLabel","cssBtn","isSaved","_el","makeFilterField","viewSectionRec","cssPlusButton","cssPlusIcon","addFilterMenu","allowedColumns","makePlusButton","menuOptions","isFiltered","FilterConfig","_popupControls","_canAddFilter","cssSortFilterColumn","cssIconWrapper","cssFilterIcon","cssPinFilterButton","cssRemoveFilterButton","cssTextBtn","u","POPUP_INITIAL_PADDING_PX","FLOATING_POPUP_TOOLTIP_KEY","FloatingPopup","_isMinimized","_closable","closeButton","_minimizable","minimizable","_minHeight","minHeight","_isFinishingMove","_popupElement","_popupMinimizeButtonElement","_cursorGrab","stopClickPropagationOnMove","_minimizeOrMaximize","capture","_handleMouseDown","_handleMouseMove","_handleMouseUp","_handleTouchStart","_handleTouchMove","_handleTouchEnd","_handleWindowResize","_repositionPopup","_disposePopup","_buildPopup","initialPosition","_setPosition","offsetWidth","top","offsetHeight","getTopPopupPaddingPx","_initialLeft","offsetLeft","_initialTop","offsetTop","_initialBottom","_startX","_startY","_rememberPosition","_forceCursor","touches","_handleResize","_handleMove","deltaY","isNarrowScreen","minTop","maxTop","newTop","newHeight","setProperty","deltaX","viewPort","bottom","newLeft","newRight","newBottom","_handleMouseEnd","topPaddingPx","cssPopup","autoHeight","cssPopupHeader","cssBottomHandle","cssResizeTopLayer","cssTopHandle","stopImmediatePropagation","isMinimized","cssPopupButtons","cssPopupHeaderButton","cssPopupTitle","cssPopupTitleText","_buildTitle","hoverTooltip","closeButtonIcon","closeButtonHover","_closePopup","cssPopupContent","_buildArgs","observer","MutationObserver","observe","childList","subtree","disconnect","POPUP_HEIGHT","POPUP_HEIGHT_MOBILE","FLOATING_POPUP_MAX_WIDTH_PX","POPUP_WIDTH","cssPopupBody","without","toPageWidget","link","srcSectionRef","linkSrcSectionRef","srcColRef","linkSrcColRef","targetColRef","linkTargetColRef","summarySourceCol","getCompatibleTypes","isNewPage","isValidSelection","attachPageWidgetPicker","buildPageWidgetPicker","openPageWidgetPicker","popupOpen","visibleTables","createAllRowsModel","defaultValue","initValue","savePromise","sortedAs","isLongerThan","spinnerModal","old","cssPopupWrapper","PageWidgetSelect","onSaveCB","onKeyDown","registeredCustomWidgets","sectionTypes","PERMITTED_CUSTOM_WIDGETS","widget","_value","_tables","_columns","_onSave","_behavioralPromptsManager","_selectByOptions","selectBy","_isNewTableDisabled","cssBody","cssPanel","header","iconName","computed","tid","_isTypeDisabled","cssEntry","cssTypeIcon","_selectType","_selectTable","cssEntryWrapper","tableNameDef","overflowTooltip","cssPivot","cssBigIcon","_selectPivot","domComputed","parentId","cssFieldLabel","_toggleColumnId","cssFooter","cssFooterContent","cssSelectBy","cssSmallLabel","cssSelect","tooltipMenuOptions","bigPrimaryButton","buttonLabel","_closeSummarizePanel","pivotEl","_isSelected","_openSummarizePanel","cid","ids","newIds","cssHeader","other","order","RefSelect","_origColumn","_colId","isForeignRefCol","refTable","_fieldObs","builder","fieldBuilder","_validCols","gutil","_addedObs","_getReferencedCols","_added","syncedKoArray","_addedSet","cssFieldList","_removeFormulaField","cssAddLink","_addFormulaField","cssEmptyMenuText","colMatch","tableUtil","colAction","_position","isRaw","fieldInfo","_getReferrerFields","refField","re","matchesSet","_getFormulaMatchSet","found","CUSTOM_ID","ColumnPicker","_column","properValue","canByMapped","cssSubLabel","cssHelp","ColumnListPicker","_typeFilter","_buildDraggableList","_buildAddColumn","cssAddMapping","otherColumns","_getNotMappedColumns","typedColumns","wrongTypeCount","_addColumn","_readItems","_renderItem","itemClass","reorder","_reorder","receive","mapped","_list","selectedRefs","columnMap","_remove","nextColumn","nextId","currentList","indexOfId","indexOfNext","CustomSectionConfigurationConfig","_hasConfiguration","hasCustomOptions","cssSection","_openConfiguration","columnsToMap","createObs","customDef","columnsMapping","savedDefinition","ColumnToMap","allCommands","CustomSectionConfig","_canSelect","_customSectionConfigurationConfig","enableWidgetRepository","_widgets","_getWidgets","_selectedId","widgetDef","widgetId","access","widgetOptions","_desiredAccess","saveCustomDef","selectedWidget","accessLevel","_url","newUrl","_currentAccess","newAccess","desiredAccessLevel","_reject","prompt","isCustom","levels","shouldRenderWidgetSelector","cssTextInput","cssColumns","cssWarningWrapper","cssConfirmRow","level","cssConfirmLine","fullAccess","buildPrompt","_accept","api","app","topAppModel","wigets","getWidgets","buildDescriptionConfig","cssTextArea","testPrefix","GridOptions","setSaveValueFromKo","ret","PredefinedCustomSectionConfig","TopTab","StringUnion","PageSubTab","getFieldType","widgetType","fieldTypes","pluralLabel","RightPanel","_isOpen","_topTab","guard","_subTab","_pageWidgetType","viewModel","activeSection","_validSection","sec","_extraTool","rightPanelTool","tool","_buildHeaderDom","_buildContentDom","createGroup","fieldTabOpen","_openFieldTab","viewTabOpen","_openViewTab","viewTabFocus","_viewTabFocus","sortFilterTabOpen","_openSortFilter","dataSelectionTabOpen","_openDataSelection","_open","_focus","topTab","subTab","_buildToolHeader","_buildStandardHeader","cssTopBarItem","cssTopBarIcon","cssHoverCircle","cssHoverIcon","showTool","widgetInfo","widgetTypesMap","showObs","cssTabContents","itemOrHeader","buildItemDom","tabContentToDom","_buildFieldContent","_buildPageWidgetContent","vsi","activeFieldBuilder","isColumnValid","refSelect","imports","ViewPane","FieldConfig","buildConfigContainer","_activateFormulaEditor","buildSelectTypeDom","buildSelectWidgetDom","buildConfigDom","buildColorConfigDom","buildSettingOptions","disabledSection","buildTransformDom","_disableIfReadonly","editRow","moveEditRowToCursor","openSideFormulaEditor","cssSubTabContainer","cssSubTab","_buildPageWidgetConfig","_buildPageSortFilterConfig","_buildPageDataConfig","viewConfigTab","ViewConfigTab","_createViewConfigTab","hasCustomMapping","hasColumnMapping","vct","titleDef","isRawTable","_createPageWidgetPicker","_buildThemeDom","_buildLayoutDom","ConditionalStyle","_buildChartConfigDom","parts","_buildCustomTypeItems","features","customViewPlugin","buildSortFilterDom","groupedBy","groupByColumns","refreshTrigger","linkOptions","viewSections","saveLink","cssDataLabel","cssContent","primaryTableId","cssList","cssListItem","cssButtonRow","sendAction","_buildAdvancedSettingsDom","selectorFor","linkedSections","_buildSectionItem","isReadonly","cssOverlay","cssBottomText","cssConfigContainer","cssRowWrapped","cssSaveButtonsRow","difference","SortConfig","_colRefs","_sortRows","_changedColRefs","changedSpecs","curr","_createRow","nextColRef","cssDragRow","_buildAddToSortButton","_buildUpdateDataButton","_buildSortRow","sortSpec","details","hasSpecs","specDetails","isAscending","newRef","specs","newSpec","_saveSort","computedFlag","flag","allowedTypes","naturalSort","cssSortRow","ascending","cssBigIconWrapper","cssBgAccent","enabled","cssOptionMenuItem","cssSortIconBtn","available","currentSortSpec","specRowIds","_sortRef","_col","isSorted","supportsManualSort","_hiddenFields","_fieldLabel","_collapseHiddenFields","_showVisibleBatchButtons","_showHiddenBatchButtons","_visibleFieldsSelection","_hiddenFieldsSelection","unselectDeletedFields","allFields","_v","newArray","KoArray","fieldsDraggable","visibleFields","hiddenFieldsDraggable","hiddenFields","buildSectionFieldsConfigHelper","_buildVisibleFieldItem","_buildHiddenFieldItem","cssFieldListHeader","cssControlLabel","_setVisibleCheckboxes","_removeSelectedFields","cssHeaderIcon","_setHiddenCheckboxes","_addSelectedFields","existing","getFieldNewPosition","vsfAction","visibleFieldsDraggable","_setCheckboxesHelper","draggable","draggableElement","cssFieldEntry","cssHideIcon","buildCheckbox","toAdd","collection","getItemIndex","removed","height","borderTopWidth","scrollHeight","autoGrow","cssForm","cssTextBox","_e","textarea","validity","valid","checkValidity","setValue","ADD_TAGS","ADD_ATTR","sanitizeHTML","node","tagName","OptionItem","dropdownWithSearch","mergeWith","_objValue","srcValue","setPopupToFunc","DropdownWithSearch","acItems","_acIndex","_highlightFunc","_simpleList","_buildSimpleList","_inputElem","_buildHeader","_buildItem","acResults","NoLink","linkId","NoLinkOption","isSummaryGroup","isSummary","isValidLink","groupbyColumns","allowSelectBy","ancestors","sources","sourceNodes","createNodes","targetNodes","srcNode","validTargets","hasMany","tgtNode","isViewSectionRec","sections","nodes","fromViewSectionRec","fromPageWidget","mainNode","summarySourceColRefs","fromColumns","tableExists","summaryTable","rowModels","getReferencedTableId","linkFromId","linkid","LinkConfig","tgtSection","tgtCol","linkTargetCol","srcCol","linkSrcCol","srcSection","srcColId","tgtColId","_assertValid","srcTableId","tgtTableId","srcTableSummarySourceTable","tgtTableSummarySourceTable","scrollTop","scrollBtm","cssScrollMenu","isAtScrollBtm","isAtScrollTop","getWidgetTypes","sectionType","swatches","isLight","ColorOption","allowsNone","defaultColor","noneText","colorSelect","styleOptions","onOpen","onRevert","selectBtn","cssButtonIcon","cssLightBorder","buildColorPicker","colorButton","colorPickerDomArgs","colorPickerOptions","iconBtn","cssIconBtn","textColorModel","ColorModel","fillColorModel","fontBoldModel","BooleanModel","fontUnderlineModel","fontItalicModel","fontStrikethroughModel","models","notChanged","needsSaving","FontComponent","cssVSpacer","PickerComponent","PickerModel","_localChange","_serverValue","server","_model","_color","toUpperCase","colorText","cssHeaderRow","cssControlRow","cssColorPreview","cssColorSquare","cssNoneIcon","cssColorInput","_setValue","cssHexBox","isValidHex","cssEmptyBox","cssPalette","cssFontOption","cssFontIcon","cssFontOptions","buttonSelect","optionArray","makeButtonSelect","buttonToggleSelect","alignmentSelect","cssColorBtn","cssColorPicker","isColorDark","cssColorIcon","cssButtonSelect","isFullOption","getOptionValue","getOptionLabel","cssSelectorBtn","cssSelectorLabel","cssDragger","CellStyle","_field","_defaultTextColor","isTableWidget","cssLine","headerStyle","headerTextColor","headerFillColor","headerFontBold","headerFontUnderline","headerFontItalic","headerFontStrikethrough","hasMixedStyle","multiselect","mixed","ChoiceItem","isNew","ChoiceListEditor","_enableAddNew","_showAddNew","_choiceOptionsByName","cssChoiceList","_maybeShowAddNew","_renderACItem","commandGroup","_alignment","alignment","cellValue","startTokens","_tokenField","T","initialValue","renderToken","cssChoiceToken","createToken","openAutocompleteOnFocus","readonly","trimLabels","styles","cssTokenField","_dom","cssReadonlyStyle","cellEditorDiv","cssCellEditor","_contentSizer","cssContentSizer","createMobileButtons","_textInput","getTextInput","getRootElem","getHiddenInput","resizeInput","cellElem","_editorPlacement","EditorPlacement","margins","getButtonMargins","onReposition","tokensObs","setSizerLimits","setSelectionRange","prettier","selectionStart","newChoices","rootElem","maxSize","calcSizeWithPadding","calcOnly","maxWidth","ceil","onlyTextInput","_inputSizer","cloneNode","cssInputSizer","rect","getBoundingClientRect","trimmedText","addNewItem","cssChoiceACItem","RenameMap","previousLabel","choiceTypes","ChoiceItemType","iface","ChoiceOptionsType","ChoiceItemChecker","createCheckers","ChoiceListEntry","_disabled","_mixed","_isEditing","_tokenFieldHolder","_editorContainer","_editorSaveButtons","_cancel","_save","maxRows","tokenField","TokenField","_renderToken","clipboardToTokens","clipboardToChoices","tokensToClipboard","setData","cssTokenInput","cssInputWrapper","keyBindings","previous","variant","cssVerticalFlex","cssListBox","_focusOnOpen","hasActiveElement","activeElement","relatedTarget","someValues","noChoices","cssListBoxInactive","cssTokenColorInactive","getFillColor","getTextColor","cssTokenLabel","_startEditing","tokenInputVal","getTextInputValue","newOptions","fillColorObs","textColorObs","fontBoldObs","fontItalicObs","fontUnderlineObs","fontStrikethroughObs","choiceText","tokenColorAndLabel","cssColorAndLabel","replaceToken","changeStyle","editableLabel","to","rename","inputArgs","cssEditableLabelInput","cssEditableLabel","scrollTo","cssListRow","maybeTokens","getData","string","isJSON","maybeText","cssFlex","getRenderFillColor","DEFAULT_FILL_COLOR","getRenderTextColor","DEFAULT_TEXT_COLOR","ChoiceTextBox","NTextBox","_choices","_choiceOptions","_choiceValues","_choiceValuesSet","toMap","maybeDropDownCssChoiceEditIcon","cssChoiceEditIcon","cssChoiceField","cssChoiceTextWrapper","formattedValue","cssChoiceText","renames","toObject","updateChoices","object","_label","_ruleOwner","_dataChangeTrigger","_currentRecord","hasRules","cursorPosition","getRecord","debouncedUpdate","addEmptyRule","rulesCols","cssRuleList","ruleIndex","_buildStyleOption","currentValue","record","hasError","isValidRuleValue","isRaisedException","cssLineLabel","cssColumnsRow","cssLeftColumn","_buildRuleFormula","cssRuleError","rulesStyles","cssRemoveButton","removeRule","cssErrorBorder","editorHolder","editingFormula","setupCleanup","fieldEditorHolder","buildCurrencyPicker","currency","defaultCurrencyLabel","currencyItems","unshift","flatMap","CellWithComments","comment","author","commentAuthor","root","CellInfoType","userRef","ref","userName","timeCreated","timeUpdated","resolved","resolvedBy","email","EmptyCell","props","comments","hidden","addComment","CellDiscussionPopup","_isEmpty","topic","empty","EmptyCellView","closeClicked","CellWithCommentsView","panel","popper","evt","closest","onClickOutside","buildPopup","domEl","cellPopperOptions","_newText","cssTopic","_createCommentEntry","cssCommonPadding","CommentEntry","editorArgs","mainButton","buttons","_commentInEdit","_closing","_comments","ds","_commentsToRender","sorted","_truncated","cssTruncate","nb","domOnCustom","CommentView","EDIT","_onEditComment","CANCEL","_onCancelEdit","cssHeaderBox","cssSpacer","cssHoverButton","_discussionList","cssCommentList","cssDiscussionWrapper","cssDiscussion","isEditing","cssReplyBox","replying","_expanded","_replies","_hasReplies","_resolved","_showReplies","isReply","user","_bodyDom","cssComment","SELECT","buildAvatar","cssCommentHeader","cssCommentBodyHeader","buildNick","cssTime","timeStamp","time","diff","fromNow","format","formatTime","_menuItems","cssCommentCensored","cssCommentPre","cssCommentReplyWrapper","cssReplyList","commentReply","reply","cssReplyButton","withStop","use2","cssResolvedBlock","cssResolvedText","currentUser","appObs","canResolve","_edit","clickBuilder","textArea","cssCommentEntry","bindProp","buildTextEditor","cssCommentEntryText","ctrlKey","metaKey","allowFocus","cssCommentEntryButtons","DiscussionPanel","_grist","_length","userId","_onlyMine","_currentPage","_currentPageKo","tb","fieldSet","vf","watcher","discussionFilter","filterRow","filterCol","showAll","showAnyone","replies","userFilter","allDiscussions","discussions","cssDiscussionPanel","cssDiscussionPanelList","_navigate","cssPanelHeader","cssIconButtonMenu","cssDropdownMenu","discussion","findSection","pageId","pages","recursiveMoveToCursorPos","cssAvatar","cssNick","grist","loggedInUser","currentValidUser","strategy","padding","phase","requires","modifiersData","maxHeight","offset","gpuAcceleration","handler","cssCloseButton","detail","dispatchEvent","CustomEvent","bubbles","cssCancelBtn","cssIconWrap","cssFinishIcon","fieldEditCancel","cssSaveBtn","fieldEditSaveHere","cssFinishBtn","editorDom","_cellElem","Emitter","_margins","_maxRect","_cellRect","rectWithoutBorders","emit","editorRoot","_editorRoot","visibility","desiredSize","maxRect","noShiftMaxWidth","noShiftMaxHeight","desiredElemSize","rootRect","elemRect","heightDelta","widthDelta","calcSize","bTop","getPropertyValue","bRight","bBottom","bLeft","ColumnTransform","_fieldBuilder","formulaUpToDate","_shouldExecute","_triggerFinalize","_isFinalizing","origDisplayCol","origWidgetOptions","isCallPending","undo","redo","_setTransforming","columnTransform","optInit","AceEditor","observable","transformColumn","saveValueOnBlurEvent","aceObj","adjustContentToWidth","attachSaveCommand","optColType","bundlingInfo","startBundlingActions","shouldIncludeInBundle","_shouldIncludeInBundle","prepare","_doPrepare","finalize","_doFinalize","triggerFinalize","preparePromise","newColRef","addTransformColumn","postAddTransformColumn","newColInfo","getIdentityFormula","transformColId","origRef","executeActions","cleanup","newWidgetOptions","previewActions","bool","isTransforming","writeObservable","oldFormula","FormulaTransform","buildEditorDom","preview","execute","addColTypeSuffix","refTableId","columnData","getColValues","gristTypes","isReferencing","isReference","getRefTableIdFromData","docInfoRow","timezone","prepTransformColInfo","toTypeMaybeFull","convertedRef","toType","visibleCol","sourceCol","isReferenceCol","rulesOptions","dateFormat","guessDateFormat","dateTimeWidgetOptions","timeFormat","timeFormatOptions","isCustomTimeFormat","numberParse","NumberParse","guessOptions","getDistinctValues","tags","tag","optTableId","removePrefix","suggestedColRef","suggestedTableId","origColTypeInfo","extractInfoFromColType","getDefaultForType","findColFromValues","setDisplayFormula","transformCol","vcolRef","vcol","visibleColRef","getVisibleColName","tcol","displayFormula","saveDisplayFormula","colModel","isFullReferencingType","TypeTransform","_reviseTypeChange","_transformWidget","widgetImpl","disableButtons","transformWidget","buildTransformConfigDom","revising","newColInfos","gristHelper_ConvertedRef","gristHelper_TransformRef","_convertColumn","convertValues","convertValuesActions","updateColValues","DiffBox","NewAbstractWidget","_diffTool","_prepareCellDiff","inlineStyle","DIFF_DELETE","DIFF_INSERT","DIFF_LOCAL","isVersions","DIFF_EQUAL","_prepareTextDiff","txt1","txt2","diffs","diff_main","diff_cleanupSemantic","_notDiffWorthy","_isMostlyNumeric","AttachmentsWidget","_attachmentsTable","_getDocData","getMetaTable","_height","events","_cellValue","cssAttachmentWidget","dragOverClass","cssAttachmentIcon","_selectAndSave","_buildAttachment","_uploadAndSave","dataTransfer","inputRange","onElem","cssSizeLabel","allValues","filename","fileIdent","hasPreview","ratio","cssAttachmentPreview","parseInt","_getUrl","renderFileType","run","attId","_getDocComm","encodeQueryParams","getUrlParams","uploadResult","addAttachments","uploadId","extension","extname","cssFileType","AttachmentsEditor","NewBaseEditor","initRowIndex","_docComm","_rowIds","_attachments","computedArray","fileType","inlineUrl","_index","typedVal","origVal","modal","cssFullScreenModal","ArrowLeft$","isInEditor","_moveIndex","ArrowRight$","_buildDom","noEscapeKey","cssFlexExpand","len","selected","cssTitle","_renameAttachment","cssFileButtons","basicButtonLink","_select","cssNextArrow","att","commonArgs","autoplay","controls","cssWarning","cssDetails","renderContent","enterTarget","cssDropping","cssDragArea","_upload","inline","maybeNew","dir","_add","cssButtonGroup","ChoiceListCell","wrapping","getChoiceValuesSet","getChoiceOptions","choiceOptionsByName","NTextEditor","undef","editorState","getTextValue","requested","received","clientHeight","scrollWidth","clientWidth","overflow","HyperLinkTextBox","defaultTextColor","constructUrl","cssFieldClip","cssIconBackground","cssHoverOnField","_formatValue","modeOptions","signOptions","NumericTextBox","numMode","documentSettings","resolvedOptions","fieldOptions","numSign","minDecimals","numberOrDefault","decimals","maxDecimals","defaultMin","minimumFractionDigits","defaultMax","maximumFractionDigits","docCurrency","settings","locale","setSave","orig","updateOptions","setCurrency","disabledStyle","cssModeSelect","cssSignSelect","defaultCurrency","setFunc","cssDecimalsBox","cssNumLabel","cssNumInput","newVal","cssSpinner","cssSpinnerBtn","cssSpinnerTop","cssSpinnerBottom","Reference","_visibleColRef","referenceId","hasBlankReference","displayValueObs","cssRef","cssRefIcon","hideInPrintView","ReferenceUtils","visibleColId","isRefList","columnACIndexes","getColACIndex","renderACItem","isAddNew","withSpaceForNew","cssRefItem","cssRefEditor","cssRefList","cssRefEditIcon","ReferenceItem","ReferenceListEditor","_utils","_doSearch","startRowIds","needReload","idToText","isBlankReference","fetchTable","setTokens","autocomplete","getAutocomplete","autocompleteSearch","ToggleBase","nameToWidget","_stepSize","extraScaling","_addClickEventHandler","_idToText","_autocomplete","selectedItem","getCellValue","createAllFieldWidgets","FieldBuilder","setAutoDisposeValues","buildFontOptions","computedRule","optionName","koUtil","withKoUtils","onlyNotifyUnequal","_cursor","_isEditorActive","toKo","COMMENTS","_readOnlyPureType","_readonly","isPreview","_availableTypes","types","UserType","_isRightType","isRightType","_isRef","_refTableId","_setType","_isTransformingFormula","_isTransformingType","_rowMap","_widgetCons","cons","computedBuilder","extend","deferred","diffImpl","_showRefConfigPopup","typeWidgets","getTypeDefinition","widgets","defaultWidget","sameWidgets","columnsType","selectType","myType","allFormulas","disableModifyBase","cssTypeSelectMenu","renderOptionArgs","op","_buildRefTableSelect","calculatedType","setType","allTables","isDisabled","transformButton","useColOptions","FieldSettingsMenu","disableSeparate","useSeparate","fieldSettingsUseSeparate","saveAsCommon","fieldSettingsSaveAsCommon","revertToCommon","fieldSettingsRevertToCommon","menuSubHeader","_displayColModel","isActive","computedFlags","rulesColsIds","previousOnUndefined","widgetObs","ruleText","ruleFill","notTransparent","errorInStyle","cellText","cellFill","hasComment","isReadonlyKo","COMMENT","domHolder","formulaCssClass","cellDom","getObjCode","buildErrorDom","mainRowModel","clearOwn","isEditorActive","isCensored","editorCtor","editCons","supportsReadonly","fieldEditor","FieldEditor","startVal","activeEditor","discussionId","discussionHolder","floatController","formulaEditor","_saveEdit","saveOnFocus","floatingExtension","active","off","FloatingEditor","substring","replace","cssConvertTooltip","saveWithoutEditor","skipEditor","skipEditorValue","saveEmitter","cancelEmitter","changeEmitter","_editorHolder","_doSaveEdit","_editorHasChanged","_isFormula","_detached","_detachedAt","_editRow","_editorCtor","offerToMakeFormula","_editCommands","fieldEditSave","jumped","_cancelEdit","makeFormula","_makeFormula","unmakeFormula","_unmakeFormula","rebuildEditor","POSITIVE_INFINITY","floatingEditor","_offerToMakeFormula","editorMonitor","monitorEditor","cancelEdit","setupEditorCleanup","FormulaEditor","cellCurrentValue","errorHolder","formulaError","currentState","cellPosition","wasModified","activateEditorAtCursor","getDom","isDetached","convert","offerCtl","showTooltip","tooltipCloseButton","lis","showTooltipToCreateFormula","_convertEditorToFormula","formulaValue","saveIndex","prepForSave","waitPromise","saveEdit","_fieldEditor","_placement","_refElem","detachEditor","createPopup","popupOwner","tempOwner","layer","detachNode","_getInitialPosition","refElemBoundingRect","innerWidth","createDetachedIcon","cssResizeIconWrapper","cssSmallIcon","FormulaAssistant","_appModel","_userInput","_assistantExpanded","_waiting","_chatPanelBodyClientHeight","_hasExpandedOnce","_isResizing","_showApproachingLimitBanner","currentOrg","_numRemainingCredits","_resizeEditor","_assistantEnabled","HAS_FORMULA_ASSISTANT","_chat","ChatHistory","_apply","logTelemetryEvent","_logTelemetryEvent","activateAssistant","_expandChatPanel","_focusChatInput","ResizeObserver","bundleInfo","_preparePreview","_cleanupPreview","actionName","_transformColId","_transformColRef","suggestionApplied","conversationSuggestedFormulas","conversationLength","conversationHistoryLength","_domElement","cssTools","_preview","_saveOrClose","_buildChatPanel","_chatPanelBody","cssChatPanel","cssChatPanelHeaderResizer","_onResizeStart","_onResizeMove","_onResizeEnd","_buildChatPanelHeader","_buildChatPanelBody","includeContext","metadata","full","docIdDigest","conversationId","context","cssChatPanelHeader","cssChatPanelHeaderTitle","cssChatPanelHeaderButtons","cssChatPanelHeaderButton","_collapseChatPanel","_clear","cssChatOptionsMenu","scrollDown","cssChatPanelBody","_buildChatPanelBanner","_buildChatInput","_buildSignupNudge","numCredits","_buildBannerUpgradeMessage","canUpgradeSite","isOwner","planName","isBillingManager","isSupport","upgradeNudge","showUpgradeModal","urlState","pushUrl","billing","newFormula","rulesList","removeProperty","availableSpace","MIN_FORMULA_EDITOR_HEIGHT_PX","FORMULA_EDITOR_BUTTONS_HEIGHT_PX","CHAT_PANEL_HEADER_HEIGHT_PX","_lastChatPanelHeight","newChatPanelBodyHeight","MIN_CHAT_PANEL_BODY_HEIGHT_PX","calculatedHeight","_input","availableInputHeight","_inputWrapper","MIN_CHAT_HISTORY_HEIGHT_PX","MIN_CHAT_INPUT_HEIGHT_PX","_handleChatEnterKeyDown","lastFormula","lastSuggestedFormula","cssHContainer","cssTopBorder","cssVSpace","cssTypography","cssInputButtonsRow","cssSendMessageButton","_handleSendMessageClick","deploymentType","cssSignupNudgeWrapper","cssSignupNudgeParagraph","cssSignupNudgeButtonsRow","bigPrimaryButtonLink","getLoginOrSignupUrl","_ask","prevState","chatHistory","suggestedActions","suggestedFormula","docApi","getAssistance","askAI","usage","debug","sender","addQuestion","_doAsk","thinking","_sendMessage","addResponse","ApiError","projectedValue","maximum","uuid","newConversationId","conversationHistory","messages","cur","conversation","reverse","entry","lastMessage","pop","smooth","_element","scroll","cssHistory","_buildIntroMessage","cssMessage","cssAiMessage","cssAiImage","cssLoadingDots","_render","cssAiMessageButtonsRow","cssAiMessageButtons","cssAiIntroMessage","cssAiMessageParagraph","cssAiMessageBullet","cssTickIcon","WHICH_FORMULA_ASSISTANT","codeView","setLinkUrl","docPage","learnMore","functionList","formulaCheatSheet","community","doc","supportsMarkdown","_placementHolder","_aceEditor","_calcSize","cursorCommands","setCursor","_onSetCursor","editorGroup","aceCommands","knownKeys","passThrough","detachedCommands","hideErrDetails","raisedException","errorText","errorDetails","_canDetach","_updateEditorPlaceholder","getUndoStack","disable","enable","cssFormulaEditor","cssClass","HTMLInputElement","HTMLTextAreaElement","HTMLElement","setFontSize","setHighlightActiveLine","getSession","setUseWrapMode","renderer","setPadding","attachCommandGroup","gotoLine","once","hide","cssCollapseIcon","onAttach","getEditor","getDocument","positionToIndex","shouldShowPlaceholder","emptyMessageNode","scroller","withAiButton","cssFormulaPlaceholder","cssUseAssistantButton","_handleUseAssistantButtonClick","errorBox","errorBoxStartHeight","errorBoxDesiredHeight","availableForError","errorBoxEndHeight","onSetCursorPos","startOfIdent","ident","_isInIdentifier","idRange","makeRange","insert","getRange","getElement","openFormulaEditor","attachedHolder","editCommands","getFormulaError","errorMonitor","subscription","errorRow","er","createFormulaErrorObs","debouncedCountErrors","numCells","numErrors","countErrors","cssError","wrap","alignmentDisabled","wrapDisabled","ownerOrOptions","timezoneOptionsImpl","timestamp","names","moment","unix","tz","zone","buildTZAutocomplete","timezoneOptions","results","getWidgetConfiguration","widgetName","oneTypeDef","typeDefs","Text","default","mergeOptions","Any","TextBox","HyperLink","Numeric","Spinner","Int","Bool","CheckBox","Switch","isCustomDateFormat","DateTime","Choice","ChoiceList","Ref","RefList","Attachments","ActionRouter","_rpc","_subscribedTables","toPairs","createEmptyActionSummary","createEmptyTableDelta","columnRenames","asTabularDiffs","summary","allChanges","td","tableChanges","perRow","activeCols","perCol","activeColsWithoutManualSort","addedRows","removedRows","updatedRows","presentRows","droppedRows","shift","transform","defunctTableName","getAffectedTables","pair","getTableIdBefore","tableIdAfter","_rename","getTableIdAfter","tableIdBefore","asyncOnce","createFunc","mapGetOrSet","creator","mapSetOrClear","pvalue","MapWithTTL","_ttlMs","_timeouts","setWithCustomTTL","ttlMs","timeout","makeFilterFunc","info","changeTimezone","isListType","buildColFilter","mod","AccessLevel","isSatisfied","minimum","ordered","DisposableWithEvents","makeFilterState","isEquivalentFilter","isRangeFilter","isEquivalentBound","NumMode","getCurrency","buildNumberFormat","nfOptions","parseNumMode","tmp","NumberFormat","currencyDisplay","useGrouping","notation","formatParts","formatToParts","partType","currencySymbol","getPart","percentageSymbol","exponentSeparator","minusSign","decimalSeparator","digitGroupSeparator","digitGroupSeparatorCurrency","currencyEndsInMinusSign","defaultNumDecimalsCurrency","_exponentSeparatorRegex","_digitGroupSeparatorRegex","digitsMap","digit","localeDigit","getDigitsMap","_replaceDigits","digitsRegex","value2","isCurrency","removeSymbol","value3","isPercent","isParenthesised","removeCharsRegex","isScientific","hasDigitGroupSeparator","cleaned","parens","anyHasDigitGroupSeparator","decimalsRegex","modes","decimalsMatch","numDecimals","maxCount","maxMode","symbol","BaseComponent","_logger","_activated","deactivate","components","delay","inactivitySec","inactivityTimer","activateImplementation","deactivateImplementation","activate","disableUntilFinish","doForwardCall","ping","doForwardMessage","PluginInstance","_renderTargets","_nextRenderTargetId","mssg","renderFullScreen","implementation","checker","forwardName","component","getStubForward","safePython","unsafeNode","renderPluginContent","targetRenderPluginContent","containerElement","createRpcLogger","baseLog","warnIfNotReady","msec","timer","origDispatch","_dispatch","mtype","MsgType","CURRENT_DATE","isRelativeBound","relativeDateToUnixTimestamp","localDate","period","formatRelBounds","formatReference","startOrEnd","refUnit","ord","ordinal","formatDay","localTimestampToUTC","utc","isEquivalentRelativeDate","compactA","omitBy","compactB","diffUnit","buildRowFilter","getLinkingFilterFunc","columnGetters","colFuncs","getColGetterByColId","padStart","collator","naturalCompare","val1","val2","emptyCompare","isEmptyValue1","isEmptyValue2","type1","array1","_arrayCompare","_getters","_colGetters","_directions","_comparators","emptyLast","manualSortGetter","getManualSortGetter","rowId1","rowId2","ASC","DESC","NOT_FOUND","parseColSpec","colString","sign","detailsToSpec","findCol","getColRef","sameColumn","hasOptions","specToDetails","swap","colA","colB","aIndex","findColIndex","bIndex","setColDirection","createColSpec","containsOnly","swapColRef","removeCol","updated","flipCol","flipSort","setSortDirection","parseSortColRefs","reorderSortRefs","nextColSpec","updatedSpec","_idx","_nextIdx","parseNames","colIdToRef","COL_SPEC_REG","isPlainObject","formatUnknown","formatDecoded","hasNestedObjects","isTopLevel","obj","BaseFormatter","translate","_translate","AnyFormatter","NumericFormatter","_numFormat","_formatter","_formatParens","_formatPlain","DateFormatter","_dateTimeFormat","_timezone","ReferenceFormatter","createFormatter","formatNotInvalidRef","formatters","formattedValues","Id","createFullFormatterFromDocData","fieldRef","visibleColWidgetOpts","createFullFormatterRaw","createVisibleColFormatterRaw","referencedTableId","tablesData","findRow","mapValues","ValueParser","IdentityParser","NumericParser","_parse","ReferenceParser","visibleColParser","createParserRaw","_visibleColId","raw","cleanParse","lookup","isInteger","findMatchingRowId","ReferenceListParser","numbers","valueParserClasses","parseDateStrict","parseDateTime","_parseJson","_parseCsv","createParser","createParserOrFormatterArguments","columnsTable","fieldsTable","fieldOrCol","createParserOrFormatterArgumentsRaw","parseUserAction","ua","_parseUserActionColValues","parseBulk","bulk","parser","parseIfString","parseColValues","getDefault","searchParams","URLSearchParams","_defaultValues","sqlFormatted","colon","arg","reencodeAsAny","typeInfo","isObject","isSkip","isReferenceList","isListOrNull","isNumberOrNull","abnormalValueTypes","rightType","Blob","PositionNumber","ManualSortPos","sequelizeToGristType","sqlType","endMarker","parensMarker","spaceMarker","isHiddenTable","memoize","TWO_DIGIT_YEAR_THRESHOLD","MAX_TWO_DIGIT_YEAR","getFullYear","yearString","PARSER_FORMATS","UNAMBIGUOUS_FORMATS","TIME_REGEX","UTC_REGEX","NUMERIC_TZ_REGEX","SEPARATORS","tzAbbreviations","tzName","abbrs","parseDate","dateFormats","_buildVariations","datetime","timeformat","parsedTimeZone","parseTimeZone","parsedTime","standardizeTime","remaining","tzOffset","fullFormat","cleanDate","dateTime","dateOnly","numInputParts","numFormatParts","_getPartialFormat","variations","otherYear","str","tzMatch","matchStart","hhOffset","mmOffset","calculateOffset","timeString","hours","mm","ss","ampm","hh","formats","guessDateFormats","dateStrings","isNonNullish","sample","dateString","guessed","guess","formatKeys","dateFormatOptions","defaultTimeFormat","substr","encode","tsvDecode","tsvString","fieldRegexp","sep","q","RPC_GRISTAPI_INTERFACE","GristObjCode","allTypes","ColumnsToMap","InteractionOptionsRequest","InteractionOptions","WidgetColumnMap","CustomSectionAPI","EditOptionsAPI","ParseFileAPI","ParseOptions","ParseOptionSchema","FileSource","ParseFileResult","UIRowId","CursorPos","ComponentKind","GristAPI","GristDocAPI","GristView","AccessTokenOptions","AccessTokenResult","GristTable","GristTables","GristColumn","APIType","ImportSourceAPI","ImportProcessorAPI","FileContent","FileListItem","URL","ImportSource","InternalImportSourceAPI","RenderTarget","RenderOptions","Storage","WidgetAPI","Buffer","BasicType","seen","checkDuplicates","checkers","GristDate","epochSec","GristDateTime","ReferenceList","RaisedException","user_input","UnknownValue","PendingValue","SkipValue","CensoredValue","encodeObject","safeRepr","decodeObject","fromGristValue","sourceObj","mapper","ace","modelUtil","_elem","_setupCallback","_setupTimer","textPadding","makeDisposable","optSetupCallback","_fullDom","_setup","indexToPosition","moveCursorTo","isBuilt","setReadOnly","$cursorLayer","opacity","each","commandName","addCommand","readOnly","bindKey","win","mac","characterWidth","contentWidth","setWrapLimit","pxVal","autoDisposeWith","edit","columnId","setOptions","enableLiveAutocompletion","setMode","_setAceTheme","setShowGutter","setTabSize","$blockScrolling","subscribeInit","getUseWrapMode","_getContentWidth","contentHeight","_getContentHeight","getScreenWidth","getScreenLength","lineHeight","setTheme","_RangeConstructor","require","Range","module","exports","Base","_debugName","_nextObjectId","_eventNamespace","_eventSources","clearEvents","setBaseFor","ctor","enumerable","writable","configurable","onEvent","eventType","optSelector","method","self","event_args","clearEvent","ko","roundDownToMultiple","waitObs","rowset","BackboneEvents","reportSuccess","closeRegisteredMenu","DismissedPopup","markAsSeen","buildConfirmDelete","reportUndo","BaseView","_name","schemaModel","getTableModelMaybeWithDiff","extraRows","_queryRowSource","querySetManager","_mainRowSource","extraRowIds","getExtraRows","_sectionFilter","_filteredRowSource","updateFilter","updateSort","newRowSource","editRowModel","_saveField","_saveEditRowField","onRowResize","onResize","commonCommands","linkedRowId","linking","linkingState","setCursorPos","isLinkSource","pureComputed","disableEditing","enableAddRow","addNewRow","disableAddRemoveRows","_enableAddRow","unsubscribeFrom","_isLoading","_pendingCursorPos","currentColumn","rateLimit","currentEditingColumnIndex","fieldBuilders","linkingFilter","makeQuery","onTableLoaded","onLinkFilterChange","copySelection","_isPrinting","scrollToCursor","editField","insertRecordBefore","insertRow","insertRecordAfter","insertCurrentDate","insertCurrentDateTime","copyLink","deleteRecords","filterByThisCellValue","duplicateRows","_duplicateRows","openDiscussion","openDiscussionAtCursor","selectedRows","deleteRows","isKeyboard","KeyboardEvent","popups","dismissedPopups","popupName","check","remember","selectedCell","setLive","getLoadingDonePromise","lazyRow","getRenderedRowModel","buildDiscussionPopup","getAnchorLinkForSection","hash","anchorUrlState","makeUrl","filterValues","insertPos","addTemporaryRow","_getDefaultColValues","getDefaultColValues","_enhanceAction","mapObject","prepTableActions","action_","withTime","docTimezone","docInfo","offsetMinutes","utcOffset","finally","copy","clearCopySelection","cut","cutCallback","sendPasteActions","cutAction","buildTitleControls","prepareToPrint","getLastDataRowIndex","_getRowInsertPos","arrayRepeat","lastSelectedIndex","manualSort","util","safelyConstruct","static","defaultDisposer","autoDisposePromise","objPromise","disposer","methodName","_disposalList","callFuncHelper","disposeRelease","removeObjectToDispose","disposeDiscard","WIPED_VALUE","disposalList","disposeHelper","wipeOutObject","Constructor","safeConstructor","safeCreate","varArgs","printed","describe","inspect","depth","Node","removeNode","emptyNode","virtualElements","cleanNode","optInitialValues","SyncedState","constructFunc","initialValues","_array","_preparedSpliceEvent","_syncSubscription","_disposeElements","_emitPreparedEvent","isKoArray","koArrayObservable","optCallback","optCallbackTarget","currentArray","syncMap","syncMapDisable","syncedMap","koArrayObj","subscribeForEach","popFromMap","addDelay","stateObj","_doDisposeElements","defineProperty","oldArray","_prepareSpliceEvent","callbackTarget","numAdded","notifySubscribers","_preChange","valueWillMutate","_postChange","valueHasMutated","optDeleteCount","arraySplice","arrToInsert","startIndex","optThis","otherKoArray","onAdd","onRemove","shouldDelay","callAdd","optInitialIndex","setBinding","valueOrFunc","updaterFunc","isObservable","utils","domNodeDisposal","addDisposeCallback","makeBinding","textNode","createTextNode","nodeValue","bootstrapToken","templateToken","attr","attrName","boolAttr","property","show","boolValueOrFunc","domData","toggleClass","toggleDisabled","prevClass","indexKey","doScrollChildIntoView","sync","scrolly","scrollRowIntoView","child","childRect","parentRect","scope","contentFunc","marker","contentNodes","createComment","frag","nextSibling","insertBefore","scrollChildIntoView","maybe","foreach","spliceFunc","deletedElems","createDocumentFragment","spliceArgs","itemModel","insertEl","baseElem","pick","kd","genSpinner","valueObservable","getNewValue","shouldDisable","origValue","stopAutoRepeat","onMouseUp","doChange","isFirst","startChange","handleReorderStop","ui","reorderFunc","originalPrev","is","getNextDraggableItemModel","sortable","resetDraggedItem","handleConnectedStop","originalParent","removeOriginal","removedItem","revertRemovedItem","originalReceiveFunc","getDraggableItemModel","enableDraggableConnection","connectDraggableToClass","addClass","connectWith","clickFunc","moreContentArgs","accentButton","liteButton","logoButton","logoUrl","buttonGroup","moreButtonArgs","fwdArgs","accentButtonGroup","liteButtonGroup","checkButton","flatCheckButton","groupElem","optionButton","toolTip","contentArgs","defer","elemWidth","checkbox","radio","spinner","stepSizeObservable","optMin","optMax","round","toPrecision","selectSpinner","optionObservable","alignmentSelector","collapserLabel","isCollapsedObs","collapsible","isMountedCollapsed","isCollapsed","draggableList","contentArray","removeFunc","axis","tolerance","forcePlaceholderSize","connectedDraggables","moreArgs","maxlength","saveValue","debounced","_resizeElem","contentSizer","_initTabs","optObservable","labelSelector","selectedTab","childIndex","_addTab","tabsSelector","labelElem","contentElem","tabsEl","findLastChild","firstChild","lastChild","childNodes","connectAllDraggables","draggableArgs","connectDraggableOneWay","fromDraggable","toDraggable","lightLabel","midTabs","scrollable","midTab","numText","password","statusPanel","statusMap","statusLookupValue","hasLabel","heading","optToggleObservable","editingCommands","childOrColSpanArgs","colSpan","flex","webkitFlex","helpRow","childOrColSpan","shadow","valuesSet","valuesArray","optionElements","topTabs","subscribable","modifyAssign","modifierFunc","equalityComparer","_handlerFunc","_origKoComputed","_wrapComputedRead","readFunc","lastValue","computedAutoDispose","optionsOrReadFunc","origRead","ignoreDependencies","setNewValue","origDispose","setComputedErrorHandler","handlerFunc","funcOrOptions","funcTarget","observableWithDefault","defaultOrFunc","observableNumber","pure","BaseRowModel","_createField","ActionDispatcher","addSaveInterface","_process_RemoveColumn","arrayRemove","_process_ModifyColumn","_process_UpdateRecord","columnValues","_process_BulkUpdateRecord","_process_AddColumn","_process_RenameColumn","oldColId","newColId","assert","TableModel","DataTableModel","_newRowModel","_floatingRows","dispatchAction","LazyArrayModel","makeRowModelFunc","_rowIdArray","_makeRowModel","_assignedRowModels","_allRowModels","_onSpliceChange","RowModelClass","makeItemModel","unsetItemModel","setItemModel","oldIndex","_setItemModel","setFloatingRowModel","affectedRowModels","numDeleted","firstToAdjust","newSpliceArgs","rowGroupings","onDataLoaded","getRowIds","grouping","oldRowIds","newRowIds","_process_AddRecord","_process_RemoveRecord","_process_ReplaceTableData","_process_BulkAddRecord","_process_BulkRemoveRecord","applySchemaAction","_process_RenameTable","_process_RemoveTable","saveFunc","try","tap","_writeSetter","_saveSetter","objObservable","objectObservable","_props","propName","jsonProp","_createJsonProp","savingComputed","optOrigValue","createField","fieldWithDefault","fieldObs","obsWithDef","jsonObservable","stringObservable","json","_sentinel","customComputed","bulkActionExpand","bulkAction","indivAction","customValue","savedObservable","dispatchBulk","AbstractWidget","BaseEditor","TextEditor","CheckBoxEditor","cellVal","ChoiceEditor","cssChoiceEditor","enableAddNew","showAddNew","popperOptions","maybeShowAddNew","slate","Datepicker","DateEditor","safeFormat","mFormat","makeFullMomentFormat","defaultTimezone","_keyboardNav","_datePickerWidget","keyboardNavigation","forceParse","todayBtn","assumeNearbyYear","language","getLanguage","toDisplay","toValue","timestampSec","keyCode","currentTarget","originalEvent","datepickerCommands","datepickerFocus","_allowKeyboardNav","_datepickerCommands","formatString","shouldFallBackToValue","kf","DateTextBox","mixedDateFormat","standardDateFormat","buildDateConfigDom","textDom","tzInput","cssFocus","cssClean","textbox","DateTimeEditor","origCommands","_focusIndex","_setFocus","_timeFormat","_dateSizer","_dateInput","formatted","_timeSizer","_timeInput","editorPlacement","selectionEnd","_resizeInput","dateRect","timeRect","flexBasis","gdom","DateTimeTextBox","_setTimezone","mixedTimeFormat","standardTimeFormat","isTransformConfig","webpackEmptyContext","req"],"sourceRoot":""}