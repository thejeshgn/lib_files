{"version":3,"file":"grist-plugin-api.js","mappings":"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;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;AC7Sa;AACb;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,IAAW;AAC5B,SAAS,mBAAO,CAAC,IAAO;;;;;;;;;ACNX;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC,eAAe,KAAK;;;;;;;;;ACjBxC;AACb;AACA;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC,iEAAiE,wBAAwB;AACzH;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,IAAQ;AACjC,YAAY,mBAAO,CAAC,IAAsB;AAC1C,kBAAkB,mBAAO,CAAC,IAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,wCAAwC;AACxC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAgE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4EAA4E,KAAK;AACjF;AACA;AACA;AACA,sCAAsC,sCAAsC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,OAAO,qCAAqC;AAC5G,yEAAyE,SAAS,uCAAuC;AACzH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6BAA6B,EAAE,KAAK;AACjF;AACA;AACA;AACA,sDAAsD;AACtD;AACA,4EAA4E,YAAY;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,UAAU;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,WAAW;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,UAAU;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+EAA+E,WAAW;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qHAAqH,UAAU;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB,IAAI,KAAK,EAAE,IAAI;AAC7E;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB,IAAI,KAAK,EAAE,IAAI;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW,GAAG,UAAU,GAAG,kBAAkB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,CAAC;AACD,QAAQ,2BAA2B,uBAAuB,UAAU;AACp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,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA,gBAAgB,mBAAO,CAAC,IAAc;AACtC,kBAAkB,mBAAO,CAAC,IAAe;AACzC,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAY;AACnC,cAAc,mBAAO,CAAC,IAAY;AAClC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA,sBAAsB,mBAAO,CAAC,IAAoB;AAClD,SAAS,mBAAO,CAAC,IAAM;;AAEvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3BA,SAAS,mBAAO,CAAC,IAAM;;AAEvB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,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C,iBAAiB,mBAAO,CAAC,IAAe;AACxC,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,aAAa,mBAAO,CAAC,IAAW;AAChC,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAY;AACnC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClFA,YAAY,mBAAO,CAAC,IAAU;AAC9B,kBAAkB,mBAAO,CAAC,GAAgB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7DA,iBAAiB,mBAAO,CAAC,IAAc;AACvC,eAAe,mBAAO,CAAC,IAAa;AACpC,eAAe,mBAAO,CAAC,IAAY;AACnC,eAAe,mBAAO,CAAC,GAAa;;AAEpC;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9CA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,eAAe,mBAAO,CAAC,IAAY;AACnC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3DA,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,0BAA0B,mBAAO,CAAC,IAAwB;AAC1D,eAAe,mBAAO,CAAC,IAAY;AACnC,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9BA,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7BA,eAAe,mBAAO,CAAC,IAAa;AACpC,kBAAkB,mBAAO,CAAC,IAAe;;AAEzC;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACrBA,kB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AAC,GAAc;;AAEtC;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,IAAI;AACJ,CAAC;;AAED;;;;;;;;ACVA,eAAe,mBAAO,CAAC,IAAa;AACpC,gBAAgB,mBAAO,CAAC,IAAc;AACtC,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnFA,aAAa,mBAAO,CAAC,IAAW;AAChC,iBAAiB,mBAAO,CAAC,IAAe;AACxC,SAAS,mBAAO,CAAC,IAAM;AACvB,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,iBAAiB,mBAAO,CAAC,IAAe;AACxC,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/GA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzFA,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAa;AACpC,kBAAkB,mBAAO,CAAC,EAAgB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;;AAEA;;;;;;;;ACHA,qBAAqB,mBAAO,CAAC,IAAmB;AAChD,iBAAiB,mBAAO,CAAC,IAAe;AACxC,WAAW,mBAAO,CAAC,IAAQ;;AAE3B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,gBAAgB,mBAAO,CAAC,IAAc;;AAEtC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,yBAAyB,mBAAO,CAAC,IAAuB;AACxD,WAAW,mBAAO,CAAC,IAAQ;;AAE3B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvBA,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,cAAc,mBAAO,CAAC,IAAY;;AAElC;AACA;;AAEA;;;;;;;;ACLA,aAAa,mBAAO,CAAC,IAAW;;AAEhC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7CA,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,gBAAgB,mBAAO,CAAC,GAAa;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;AC7BA,eAAe,mBAAO,CAAC,IAAa;AACpC,UAAU,mBAAO,CAAC,IAAQ;AAC1B,cAAc,mBAAO,CAAC,IAAY;AAClC,UAAU,mBAAO,CAAC,IAAQ;AAC1B,cAAc,mBAAO,CAAC,GAAY;AAClC,iBAAiB,mBAAO,CAAC,IAAe;AACxC,eAAe,mBAAO,CAAC,GAAa;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzDA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;;;;;;;;ACZA,eAAe,mBAAO,CAAC,IAAa;AACpC,kBAAkB,mBAAO,CAAC,IAAe;AACzC,cAAc,mBAAO,CAAC,IAAW;AACjC,cAAc,mBAAO,CAAC,IAAY;AAClC,eAAe,mBAAO,CAAC,IAAY;AACnC,YAAY,mBAAO,CAAC,GAAU;;AAE9B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtCA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7BA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA,aAAa,mBAAO,CAAC,IAAW;AAChC,kBAAkB,mBAAO,CAAC,IAAe;AACzC,cAAc,mBAAO,CAAC,IAAW;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACjBA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;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CA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnCA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACRA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACjBA,sBAAsB,mBAAO,CAAC,IAAoB;AAClD,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;;AAEA;;;;;;;;ACbA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpCA,gBAAgB,mBAAO,CAAC,IAAc;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA,gBAAgB,mBAAO,CAAC,IAAc;AACtC,UAAU,mBAAO,CAAC,IAAQ;AAC1B,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjCA,oBAAoB,mBAAO,CAAC,IAAkB;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;;;;;;;;AC1BA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;;;;;;;ACzBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,UAAU;AACvB;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA,YAAY,QAAQ,IAAI,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpCA,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,UAAU,mBAAO,CAAC,IAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA,kBAAkB,mBAAO,CAAC,IAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA,cAAc,mBAAO,CAAC,IAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA,kBAAkB,QAAQ,OAAO,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChCA,sBAAsB,mBAAO,CAAC,IAAoB;AAClD,uBAAuB,mBAAO,CAAC,IAAqB;;AAEpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,CAAC;;AAED;;;;;;;;ACxCA,gBAAgB,mBAAO,CAAC,EAAc;AACtC,cAAc,mBAAO,CAAC,GAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACA;AACA,2BAA2B,gBAAgB,QAAQ,GAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA,sBAAsB,mBAAO,CAAC,IAAoB;AAClD,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA;AACA,+CAA+C,mBAAmB;AAClE;AACA;AACA;;AAEA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA,iBAAiB,mBAAO,CAAC,IAAc;AACvC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChCA,WAAW,mBAAO,CAAC,IAAS;AAC5B,gBAAgB,mBAAO,CAAC,IAAa;;AAErC;AACA,kBAAkB,KAA0B;;AAE5C;AACA,gCAAgC,QAAa;;AAE7C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrCA,kBAAkB,mBAAO,CAAC,GAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClCA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7DA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA,uBAAuB,mBAAO,CAAC,IAAqB;AACpD,gBAAgB,mBAAO,CAAC,IAAc;AACtC,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1BA,oBAAoB,mBAAO,CAAC,IAAkB;AAC9C,eAAe,mBAAO,CAAC,GAAa;AACpC,kBAAkB,mBAAO,CAAC,IAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpCA,eAAe,mBAAO,CAAC,IAAa;AACpC,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,cAAc,mBAAO,CAAC,IAAY;AAClC,cAAc,mBAAO,CAAC,IAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,OAAO,kBAAkB;AACzB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpDA,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACxEA,eAAe,mBAAO,CAAC,IAAa;AACpC,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,sBAAsB;AACjC,aAAa,QAAQ;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,WAAW;AACX;AACA;AACA,6BAA6B;AAC7B,CAAC;;AAED;;;;;;;;ACxBA,mBAAmB,mBAAO,CAAC,GAAiB;AAC5C,uBAAuB,mBAAO,CAAC,IAAqB;AACpD,YAAY,mBAAO,CAAC,IAAU;AAC9B,YAAY,mBAAO,CAAC,GAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,UAAU;AACvB;AACA;AACA;AACA,OAAO,OAAO,UAAU;AACxB,OAAO,OAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,gBAAgB,mBAAO,CAAC,IAAc;AACtC,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,gBAAgB,mBAAO,CAAC,GAAa;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClDA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzCA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACnCA,eAAe,mBAAO,CAAC,IAAa;AACpC,eAAe,mBAAO,CAAC,IAAY;AACnC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAE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Ae,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,cAAc,GAAG,aAAa,GAAG,aAAa,GAAG,YAAY,GAAG,aAAa,GAAG,iBAAiB,GAAG,WAAW,GAAG,cAAc,GAAG,aAAa,GAAG,gBAAgB,GAAG,oBAAoB,GAAG,eAAe,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,qBAAqB,GAAG,oBAAoB,GAAG,cAAc,GAAG,aAAa,GAAG,cAAc,GAAG,aAAa,GAAG,gBAAgB,GAAG,YAAY,GAAG,cAAc,GAAG,aAAa,GAAG,gBAAgB,GAAG,WAAW,GAAG,aAAa,GAAG,YAAY,GAAG,aAAa;AACrjB,aAAa,mBAAO,CAAC,IAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,CAAC;AACD,aAAa;AACb;AACA;AACA;AACA,sBAAsB;AACtB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,kDAAkD,sBAAsB;AACxE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,qCAAqC;AAC/F;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,kDAAkD,sBAAsB;AACxE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,mDAAmD;AAC7G;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,yDAAyD,sBAAsB;AAC/E;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,0DAA0D,mDAAmD;AAC7G;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD,qBAAqB;AACrB;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,uBAAuB;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,CAAC;AACD,oBAAoB;AACpB;AACA;AACA,kCAAkC,qCAAqC;AACvE,+BAA+B,0CAA0C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAuB,qBAAqB,uBAAuB;AAC5E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,+CAA+C,gCAAgC;AAC/E,yDAAyD,wEAAwE;AACjI,4DAA4D,8CAA8C;AAC1G;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;AACA;AACA;AACA,yBAAyB;AACzB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,2CAA2C;AACrG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,CAAC;AACD,iBAAiB;AACjB;AACA;AACA;AACA,kBAAkB;AAClB,sCAAsC,cAAc;AACpD,0CAA0C,cAAc;AACxD,yCAAyC,iCAAiC;AAC1E,yCAAyC,sCAAsC;AAC/E,0CAA0C,kCAAkC;AAC5E,yCAAyC,iCAAiC;AAC1E,yCAAyC,iCAAiC;AAC1E,uCAAuC,qBAAqB;AAC5D,4CAA4C,2BAA2B;AACvE,uCAAuC,sBAAsB;AAC7D,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,IAAI,yBAAyB,gCAAgC,4BAA4B;AACzF;AACA;AACA,oEAAoE,gCAAgC;AACpG;AACA;AACA;AACA,uEAAuE,gBAAgB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7pBa;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD;AACA,kDAAkD,QAAQ;AAC1D,yCAAyC,QAAQ;AACjD,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,mBAAmB,GAAG,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,oCAAoC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA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","sources":["webpack://grist/./app/plugin/GristAPI.ts","webpack://grist/./app/plugin/GristData.ts","webpack://grist/./app/plugin/GristTable.ts","webpack://grist/./app/plugin/gutil.ts","webpack://grist/./app/plugin/TableOperationsImpl.ts","webpack://grist/./app/plugin/CustomSectionAPI-ti.ts","webpack://grist/./app/plugin/FileParserAPI-ti.ts","webpack://grist/./app/plugin/GristAPI-ti.ts","webpack://grist/./app/plugin/GristTable-ti.ts","webpack://grist/./app/plugin/ImportSourceAPI-ti.ts","webpack://grist/./app/plugin/InternalImportSourceAPI-ti.ts","webpack://grist/./app/plugin/RenderOptions-ti.ts","webpack://grist/./app/plugin/StorageAPI-ti.ts","webpack://grist/./app/plugin/WidgetAPI-ti.ts","webpack://grist/./app/plugin/TypeCheckers.ts","webpack://grist/./app/plugin/objtypes.ts","webpack://grist/./node_modules/events/events.js","webpack://grist/./node_modules/grain-rpc/dist/lib/index.js","webpack://grist/./node_modules/grain-rpc/dist/lib/message.js","webpack://grist/./node_modules/grain-rpc/dist/lib/rpc.js","webpack://grist/./node_modules/lodash/_DataView.js","webpack://grist/./node_modules/lodash/_Hash.js","webpack://grist/./node_modules/lodash/_ListCache.js","webpack://grist/./node_modules/lodash/_Map.js","webpack://grist/./node_modules/lodash/_MapCache.js","webpack://grist/./node_modules/lodash/_Promise.js","webpack://grist/./node_modules/lodash/_Set.js","webpack://grist/./node_modules/lodash/_SetCache.js","webpack://grist/./node_modules/lodash/_Stack.js","webpack://grist/./node_modules/lodash/_Symbol.js","webpack://grist/./node_modules/lodash/_Uint8Array.js","webpack://grist/./node_modules/lodash/_WeakMap.js","webpack://grist/./node_modules/lodash/_apply.js","webpack://grist/./node_modules/lodash/_arrayAggregator.js","webpack://grist/./node_modules/lodash/_arrayFilter.js","webpack://grist/./node_modules/lodash/_arrayLikeKeys.js","webpack://grist/./node_modules/lodash/_arrayMap.js","webpack://grist/./node_modules/lodash/_arrayPush.js","webpack://grist/./node_modules/lodash/_arraySome.js","webpack://grist/./node_modules/lodash/_assignValue.js","webpack://grist/./node_modules/lodash/_assocIndexOf.js","webpack://grist/./node_modules/lodash/_baseAggregator.js","webpack://grist/./node_modules/lodash/_baseAssignValue.js","webpack://grist/./node_modules/lodash/_baseEach.js","webpack://grist/./node_modules/lodash/_baseFlatten.js","webpack://grist/./node_modules/lodash/_baseFor.js","webpack://grist/./node_modules/lodash/_baseForOwn.js","webpack://grist/./node_modules/lodash/_baseGet.js","webpack://grist/./node_modules/lodash/_baseGetAllKeys.js","webpack://grist/./node_modules/lodash/_baseGetTag.js","webpack://grist/./node_modules/lodash/_baseHasIn.js","webpack://grist/./node_modules/lodash/_baseIsArguments.js","webpack://grist/./node_modules/lodash/_baseIsEqual.js","webpack://grist/./node_modules/lodash/_baseIsEqualDeep.js","webpack://grist/./node_modules/lodash/_baseIsMatch.js","webpack://grist/./node_modules/lodash/_baseIsNative.js","webpack://grist/./node_modules/lodash/_baseIsTypedArray.js","webpack://grist/./node_modules/lodash/_baseIteratee.js","webpack://grist/./node_modules/lodash/_baseKeys.js","webpack://grist/./node_modules/lodash/_baseMap.js","webpack://grist/./node_modules/lodash/_baseMatches.js","webpack://grist/./node_modules/lodash/_baseMatchesProperty.js","webpack://grist/./node_modules/lodash/_basePick.js","webpack://grist/./node_modules/lodash/_basePickBy.js","webpack://grist/./node_modules/lodash/_baseProperty.js","webpack://grist/./node_modules/lodash/_basePropertyDeep.js","webpack://grist/./node_modules/lodash/_baseSet.js","webpack://grist/./node_modules/lodash/_baseSetToString.js","webpack://grist/./node_modules/lodash/_baseTimes.js","webpack://grist/./node_modules/lodash/_baseToString.js","webpack://grist/./node_modules/lodash/_baseTrim.js","webpack://grist/./node_modules/lodash/_baseUnary.js","webpack://grist/./node_modules/lodash/_cacheHas.js","webpack://grist/./node_modules/lodash/_castFunction.js","webpack://grist/./node_modules/lodash/_castPath.js","webpack://grist/./node_modules/lodash/_coreJsData.js","webpack://grist/./node_modules/lodash/_createAggregator.js","webpack://grist/./node_modules/lodash/_createBaseEach.js","webpack://grist/./node_modules/lodash/_createBaseFor.js","webpack://grist/./node_modules/lodash/_defineProperty.js","webpack://grist/./node_modules/lodash/_equalArrays.js","webpack://grist/./node_modules/lodash/_equalByTag.js","webpack://grist/./node_modules/lodash/_equalObjects.js","webpack://grist/./node_modules/lodash/_flatRest.js","webpack://grist/./node_modules/lodash/_freeGlobal.js","webpack://grist/./node_modules/lodash/_getAllKeys.js","webpack://grist/./node_modules/lodash/_getMapData.js","webpack://grist/./node_modules/lodash/_getMatchData.js","webpack://grist/./node_modules/lodash/_getNative.js","webpack://grist/./node_modules/lodash/_getPrototype.js","webpack://grist/./node_modules/lodash/_getRawTag.js","webpack://grist/./node_modules/lodash/_getSymbols.js","webpack://grist/./node_modules/lodash/_getTag.js","webpack://grist/./node_modules/lodash/_getValue.js","webpack://grist/./node_modules/lodash/_hasPath.js","webpack://grist/./node_modules/lodash/_hashClear.js","webpack://grist/./node_modules/lodash/_hashDelete.js","webpack://grist/./node_modules/lodash/_hashGet.js","webpack://grist/./node_modules/lodash/_hashHas.js","webpack://grist/./node_modules/lodash/_hashSet.js","webpack://grist/./node_modules/lodash/_isFlattenable.js","webpack://grist/./node_modules/lodash/_isIndex.js","webpack://grist/./node_modules/lodash/_isKey.js","webpack://grist/./node_modules/lodash/_isKeyable.js","webpack://grist/./node_modules/lodash/_isMasked.js","webpack://grist/./node_modules/lodash/_isPrototype.js","webpack://grist/./node_modules/lodash/_isStrictComparable.js","webpack://grist/./node_modules/lodash/_listCacheClear.js","webpack://grist/./node_modules/lodash/_listCacheDelete.js","webpack://grist/./node_modules/lodash/_listCacheGet.js","webpack://grist/./node_modules/lodash/_listCacheHas.js","webpack://grist/./node_modules/lodash/_listCacheSet.js","webpack://grist/./node_modules/lodash/_mapCacheClear.js","webpack://grist/./node_modules/lodash/_mapCacheDelete.js","webpack://grist/./node_modules/lodash/_mapCacheGet.js","webpack://grist/./node_modules/lodash/_mapCacheHas.js","webpack://grist/./node_modules/lodash/_mapCacheSet.js","webpack://grist/./node_modules/lodash/_mapToArray.js","webpack://grist/./node_modules/lodash/_matchesStrictComparable.js","webpack://grist/./node_modules/lodash/_memoizeCapped.js","webpack://grist/./node_modules/lodash/_nativeCreate.js","webpack://grist/./node_modules/lodash/_nativeKeys.js","webpack://grist/./node_modules/lodash/_nodeUtil.js","webpack://grist/./node_modules/lodash/_objectToString.js","webpack://grist/./node_modules/lodash/_overArg.js","webpack://grist/./node_modules/lodash/_overRest.js","webpack://grist/./node_modules/lodash/_root.js","webpack://grist/./node_modules/lodash/_setCacheAdd.js","webpack://grist/./node_modules/lodash/_setCacheHas.js","webpack://grist/./node_modules/lodash/_setToArray.js","webpack://grist/./node_modules/lodash/_setToString.js","webpack://grist/./node_modules/lodash/_shortOut.js","webpack://grist/./node_modules/lodash/_stackClear.js","webpack://grist/./node_modules/lodash/_stackDelete.js","webpack://grist/./node_modules/lodash/_stackGet.js","webpack://grist/./node_modules/lodash/_stackHas.js","webpack://grist/./node_modules/lodash/_stackSet.js","webpack://grist/./node_modules/lodash/_stringToPath.js","webpack://grist/./node_modules/lodash/_toKey.js","webpack://grist/./node_modules/lodash/_toSource.js","webpack://grist/./node_modules/lodash/_trimmedEndIndex.js","webpack://grist/./node_modules/lodash/constant.js","webpack://grist/./node_modules/lodash/eq.js","webpack://grist/./node_modules/lodash/flatMap.js","webpack://grist/./node_modules/lodash/flatten.js","webpack://grist/./node_modules/lodash/get.js","webpack://grist/./node_modules/lodash/groupBy.js","webpack://grist/./node_modules/lodash/hasIn.js","webpack://grist/./node_modules/lodash/identity.js","webpack://grist/./node_modules/lodash/isArguments.js","webpack://grist/./node_modules/lodash/isArray.js","webpack://grist/./node_modules/lodash/isArrayLike.js","webpack://grist/./node_modules/lodash/isBuffer.js","webpack://grist/./node_modules/lodash/isEqual.js","webpack://grist/./node_modules/lodash/isFunction.js","webpack://grist/./node_modules/lodash/isLength.js","webpack://grist/./node_modules/lodash/isObject.js","webpack://grist/./node_modules/lodash/isObjectLike.js","webpack://grist/./node_modules/lodash/isPlainObject.js","webpack://grist/./node_modules/lodash/isSymbol.js","webpack://grist/./node_modules/lodash/isTypedArray.js","webpack://grist/./node_modules/lodash/keys.js","webpack://grist/./node_modules/lodash/map.js","webpack://grist/./node_modules/lodash/memoize.js","webpack://grist/./node_modules/lodash/pick.js","webpack://grist/./node_modules/lodash/property.js","webpack://grist/./node_modules/lodash/stubArray.js","webpack://grist/./node_modules/lodash/stubFalse.js","webpack://grist/./node_modules/lodash/times.js","webpack://grist/./node_modules/lodash/toFinite.js","webpack://grist/./node_modules/lodash/toInteger.js","webpack://grist/./node_modules/lodash/toNumber.js","webpack://grist/./node_modules/lodash/toString.js","webpack://grist/./node_modules/ts-interface-checker/dist/index.js","webpack://grist/./node_modules/ts-interface-checker/dist/types.js","webpack://grist/./node_modules/ts-interface-checker/dist/util.js","webpack://grist/webpack/bootstrap","webpack://grist/webpack/runtime/compat get default export","webpack://grist/webpack/runtime/define property getters","webpack://grist/webpack/runtime/hasOwnProperty shorthand","webpack://grist/webpack/runtime/make namespace object","webpack://grist/webpack/runtime/node module decorator","webpack://grist/./app/plugin/grist-plugin-api.ts"],"sourcesContent":["/**\n * This file defines the interface for the grist api exposed to SafeBrowser plugins. Grist supports\n * various ways to require it to cover various scenarios. If writing the main safeBrowser module\n * (the one referenced by the components.safeBrowser key of the manifest) use\n * `self.importScript('grist');`, if writing a view include the script in the html `<script src=\"grist\"></script>`\n *\n *\n * Example usage (let's assume that Grist let's plugin contributes to a Foo API defined as follow ):\n *\n * interface Foo {\n *   foo(name: string): Promise<string>;\n * }\n *\n * > main.ts:\n * class MyFoo {\n *   public foo(name: string): Promise<string> {\n *     return new Promise<string>( async resolve => {\n *       grist.rpc.onMessage( e => {\n *         resolve(e.data + name);\n *       });\n *       grist.ready();\n *       await grist.api.render('view1.html', 'fullscreen');\n *     });\n *   }\n * }\n * grist.rpc.registerImpl<Foo>('grist', new MyFoo()); // can add 3rd arg with type information\n *\n * > view1.html includes:\n * grist.api.render('static/view2.html', 'fullscreen').then( view => {\n *   grist.rpc.onMessage(e => grist.rpc.postMessageForward(\"main.ts\", e.data));\n * });\n *\n * > view2.html includes:\n * grist.rpc.postMessage('view1.html', 'foo ');\n *\n */\n\nimport {RenderOptions, RenderTarget} from './RenderOptions';\n\n// This is the row ID used in the client, but it's helpful to have available in some common code\n// as well, which is why it's declared here. Note that for data actions and stored data,\n// 'new' is not used.\n/**\n * Represents the id of a row in a table. The value of the `id` column. Might be a number or 'new' value for a new row.\n */\nexport type UIRowId = number | 'new';\n\n/**\n * Represents the position of an active cursor on a page.\n */\nexport interface CursorPos {\n  /**\n   * The rowId (value of the `id` column) of the current cursor position, or 'new' if the cursor is on a new row.\n   */\n  rowId?: UIRowId;\n  /**\n   * The index of the current row in the current view.\n   */\n  rowIndex?: number;\n  /**\n   * The index of the selected field in the current view.\n   */\n  fieldIndex?: number;\n  /**\n   * The id of a section that this cursor is in. Ignored when setting a cursor position for a particular view.\n   */\n  sectionId?: number;\n}\n\nexport type ComponentKind = \"safeBrowser\" | \"safePython\" | \"unsafeNode\";\n\nexport const RPC_GRISTAPI_INTERFACE = '_grist_api';\n\nexport interface GristAPI {\n  /**\n   * Render the file at `path` into the `target` location in Grist. `path` must be relative to the\n   * root of the plugin's directory and point to an html that is contained within the plugin's\n   * directory. `target` is a predefined location of the Grist UI, it could be `fullscreen` or\n   * identifier for an inline target. Grist provides inline target identifiers in certain call\n   * plugins. E.g. ImportSourceAPI.getImportSource is given a target identifier to allow rende UI\n   * inline in the import dialog. Returns the procId which can be used to dispose the view.\n   */\n  render(path: string, target: RenderTarget, options?: RenderOptions): Promise<number>;\n\n  /**\n   * Dispose the process with id procId. If the process was embedded into the UI, removes the\n   * corresponding element from the view.\n   */\n  dispose(procId: number): Promise<void>;\n\n  // Subscribes to actions for `tableId`. Actions of all subscribed tables are send as rpc's\n  // message.\n  // TODO: document format of messages that can be listened on `rpc.onMessage(...);`\n  subscribe(tableId: string): Promise<void>;\n\n  // Unsubscribe from actions for `tableId`.\n  unsubscribe(tableId: string): Promise<void>;\n\n}\n\n/**\n * Allows getting information from and interacting with the Grist document to which a plugin or widget is attached.\n */\nexport interface GristDocAPI {\n  /**\n   * Returns an identifier for the document.\n   */\n  getDocName(): Promise<string>;\n\n  /**\n   * Returns a sorted list of table IDs.\n   */\n  listTables(): Promise<string[]>;\n\n  /**\n   * Returns a complete table of data as [[RowRecords]], including the\n   * 'id' column. Do not modify the returned arrays in-place, especially if used\n   * directly (not over RPC).\n   */\n  fetchTable(tableId: string): Promise<any>;\n  // TODO: return type is Promise{[colId: string]: CellValue[]}> but cannot be specified\n  // because ts-interface-builder does not properly support index-signature.\n\n  /**\n   * Applies an array of user actions.\n   */\n  applyUserActions(actions: any[][], options?: any): Promise<any>;\n  // TODO: return type should be Promise<ApplyUAResult>, but this requires importing\n  // modules from `app/common` which is not currently supported by the build.\n\n  /**\n   * Get a token for out-of-band access to the document.\n   */\n  getAccessToken(options: AccessTokenOptions): Promise<AccessTokenResult>;\n}\n\n/**\n * Interface for the data backing a single widget.\n */\nexport interface GristView {\n  /**\n   * Like [[GristDocAPI.fetchTable]], but gets data for the custom section specifically, if there is any.\n   */\n  fetchSelectedTable(): Promise<any>;\n  // TODO: return type is Promise{[colId: string]: CellValue[]}> but cannot be specified\n  // because ts-interface-builder does not properly support index-signature.\n\n  /**\n   * Fetches selected record by its `rowId`.\n   */\n  fetchSelectedRecord(rowId: number): Promise<any>;\n  // TODO: return type is Promise{[colId: string]: CellValue}> but cannot be specified\n  // because ts-interface-builder does not properly support index-signature.\n\n  /**\n   * Deprecated now. It was used for filtering selected table by `setSelectedRows` method.\n   * Now the preferred way it to use ready message.\n   */\n  allowSelectBy(): Promise<void>;\n\n  /**\n   * Set the list of selected rows to be used against any linked widget.\n   */\n  setSelectedRows(rowIds: number[]|null): Promise<void>;\n\n  /**\n   * Sets the cursor position to a specific row and field. `sectionId` is ignored. Used for widget linking.\n   */\n  setCursorPos(pos: CursorPos): Promise<void>\n}\n\n/**\n * Options when creating access tokens.\n */\nexport interface AccessTokenOptions {\n  /** Restrict use of token to reading only */\n  readOnly?: boolean;\n}\n\n/**\n * Access token information, including the token string itself, a base URL for\n * API calls for which the access token can be used, and the time-to-live the\n * token was created with.\n */\nexport interface AccessTokenResult {\n  /**\n   * The token string, which can currently be provided in an api call as a\n   * query parameter called \"auth\"\n   */\n  token: string;\n\n  /**\n   * The base url of the API for which the token can be used. Currently tokens\n   * are associated with a single document, so the base url will be something\n   * like `https://..../api/docs/DOCID`\n   *\n   * Access tokens currently only grant access to endpoints dealing with the\n   * internal content of a document (such as tables and cells) and not its\n   * metadata (such as the document name or who it is shared with).\n   */\n  baseUrl: string;\n\n  /**\n   * Number of milliseconds the access token will remain valid for\n   * after creation. This will be several minutes.\n   */\n  ttlMsecs: number;\n}\n","/**\n * Letter codes for CellValue types encoded as [code, args...] tuples.\n */\nexport enum GristObjCode {\n  List            = 'L',\n  LookUp          = 'l',\n  Dict            = 'O',\n  DateTime        = 'D',\n  Date            = 'd',\n  Skip            = 'S',\n  Censored        = 'C',\n  Reference       = 'R',\n  ReferenceList   = 'r',\n  Exception       = 'E',\n  Pending         = 'P',\n  Unmarshallable  = 'U',\n  Versions        = 'V',\n}\n\n/**\n * Possible types of cell content.\n */\nexport type CellValue = number|string|boolean|null|[GristObjCode, ...unknown[]];\nexport interface BulkColValues { [colId: string]: CellValue[]; }\n\n/**\n * Map of column ids to `CellValue`s.\n *\n * ### CellValue\n *\n * Each `CellValue` may either be a primitive (e.g. `true`, `123`, `\"hello\"`, `null`)\n * or a tuple (JavaScript Array) representing a Grist object. The first element of the tuple\n * is a string character representing the object code. For example, `[\"L\", \"foo\", \"bar\"]`\n * is a `CellValue` of a Choice List column, where `\"L\"` is the type, and `\"foo\"` and\n * `\"bar\"` are the choices.\n *\n * ### Grist Object Types\n *\n * | Code | Type           |\n * | ---- | -------------- |\n * | L    | List           |\n * | l    | LookUp         |\n * | O    | Dict           |\n * | D    | DateTime       |\n * | d    | Date           |\n * | C    | Censored       |\n * | R    | Reference      |\n * | r    | ReferenceList  |\n * | E    | Exception      |\n * | P    | Pending        |\n * | U    | Unmarshallable |\n * | V    | Version        |\n */\nexport interface RowRecord {\n  id: number;\n  [colId: string]: CellValue;\n}\n\n/**\n * Map of column ids to `CellValue` arrays, where array indexes correspond to\n * rows.\n *\n * ### CellValue\n *\n * Each `CellValue` may either be a primitive (e.g. `true`, `123`, `\"hello\"`, `null`)\n * or a tuple (JavaScript Array) representing a Grist object. The first element of the tuple\n * is a string character representing the object code. For example, `[\"L\", \"foo\", \"bar\"]`\n * is a `CellValue` of a Choice List column, where `\"L\"` is the type, and `\"foo\"` and\n * `\"bar\"` are the choices.\n *\n * ### Grist Object Types\n *\n * | Code | Type           |\n * | ---- | -------------- |\n * | L    | List           |\n * | l    | LookUp         |\n * | O    | Dict           |\n * | D    | DateTime       |\n * | d    | Date           |\n * | C    | Censored       |\n * | R    | Reference      |\n * | r    | ReferenceList  |\n * | E    | Exception      |\n * | P    | Pending        |\n * | U    | Unmarshallable |\n * | V    | Version        |\n */\nexport interface RowRecords {\n  id: number[];\n  [colId: string]: CellValue[];\n}\n\nexport type GristType = 'Any' | 'Attachments' | 'Blob' | 'Bool' | 'Choice' | 'ChoiceList' |\n  'Date' | 'DateTime' |\n  'Id' | 'Int' | 'ManualSortPos' | 'Numeric' | 'PositionNumber' | 'Ref' | 'RefList' | 'Text';\n","/**\n * Common definitions for Grist plugin APIs.\n */\n\n/**\n * Metadata and data for a table.\n */\nexport interface GristTable {\n  // This is documenting what is currently returned by the core plugins. Capitalization\n  // is python-style.\n  //\n  // TODO: could be worth reconciling with: https://phab.getgrist.com/w/grist_data_format/.\n  table_name: string | null;  // currently allow names to be null\n  column_metadata: GristColumn[];\n  table_data: any[][];\n}\n\nexport interface GristTables {\n  tables: GristTable[];\n}\n\n/**\n * Metadata about a single column.\n */\nexport interface GristColumn {\n  id: string;\n  type: string;\n}\n\nexport enum APIType {\n  ImportSourceAPI,\n  ImportProcessorAPI,\n  ParseOptionsAPI,\n  ParseFileAPI,\n}\n","import constant = require('lodash/constant');\nimport times = require('lodash/times');\n\n/**\n * Returns a new array of length count, filled with the given value.\n */\nexport function arrayRepeat<T>(count: number, value: T): T[] {\n  return times(count, constant(value));\n}\n","import * as Types from \"./DocApiTypes\";\nimport { BulkColValues } from './GristData';\nimport { OpOptions, TableOperations, UpsertOptions } from './TableOperations';\nimport { arrayRepeat } from './gutil';\nimport flatMap = require('lodash/flatMap');\nimport isEqual = require('lodash/isEqual');\nimport pick = require('lodash/pick');\nimport groupBy = require('lodash/groupBy');\n\n/**\n * An implementation of the TableOperations interface, given a platform\n * capable of applying user actions. Used by REST API server, and by the\n * Grist plugin API that is embedded in custom widgets.\n */\nexport class TableOperationsImpl implements TableOperations {\n  public constructor(private _platform: TableOperationsPlatform,\n                     private _defaultOptions: OpOptions) {\n  }\n\n  public getTableId() {\n    return this._platform.getTableId();\n  }\n\n  public create(records: Types.NewRecord, options?: OpOptions): Promise<Types.MinimalRecord>;\n  public create(records: Types.NewRecord[], options?: OpOptions): Promise<Types.MinimalRecord[]>;\n  public async create(recordsOrRecord: Types.NewRecord[]|Types.NewRecord,\n                      options?: OpOptions): Promise<Types.MinimalRecord[]|Types.MinimalRecord> {\n    return await withRecords(recordsOrRecord, async (records) => {\n      const postRecords = convertToBulkColValues(records);\n      // postRecords can be an empty object, in that case we will create empty records.\n      const ids = await this.addRecords(records.length, postRecords, options);\n      return ids.map(id => ({id}));\n    });\n  }\n\n  public async update(recordOrRecords: Types.Record|Types.Record[], options?: OpOptions) {\n    await withRecords(recordOrRecords, async (records) => {\n      if (!areSameFields(records)) {\n        this._platform.throwError('PATCH', 'requires all records to have same fields', 400);\n      }\n      const rowIds = records.map(r => r.id);\n      const columnValues = convertToBulkColValues(records);\n      if (!rowIds.length || !columnValues) {\n        // For patch method, we require at least one valid record.\n        this._platform.throwError('PATCH', 'requires a valid record object', 400);\n      }\n      await this.updateRecords(columnValues, rowIds, options);\n      return [];\n    });\n  }\n\n  public async upsert(recordOrRecords: Types.AddOrUpdateRecord|Types.AddOrUpdateRecord[],\n                      upsertOptions?: UpsertOptions): Promise<void> {\n    await withRecords(recordOrRecords, async (records) => {\n      const tableId = await this._platform.getTableId();\n      const options = {\n        add: upsertOptions?.add,\n        update: upsertOptions?.update,\n        on_many: upsertOptions?.onMany,\n        allow_empty_require: upsertOptions?.allowEmptyRequire\n      };\n      const recordOptions: OpOptions = pick(upsertOptions, 'parseStrings');\n\n      // Group records based on having the same keys in `require` and `fields`.\n      // A single bulk action will be applied to each group.\n      // We don't want one bulk action for all records that might have different shapes,\n      // because that would require filling arrays with null values.\n      const recGroups = groupBy(records, rec => {\n        const requireKeys = Object.keys(rec.require).sort().join(',');\n        const fieldsKeys = Object.keys(rec.fields || {}).sort().join(',');\n        return `${requireKeys}:${fieldsKeys}`;\n      });\n      const actions = Object.values(recGroups).map(group => {\n        const require = convertToBulkColValues(group.map(r => ({fields: r.require})));\n        const fields = convertToBulkColValues(group.map(r => ({fields: r.fields || {}})));\n        return [\"BulkAddOrUpdateRecord\", tableId, require, fields, options];\n      });\n      await this._applyUserActions(tableId, [...fieldNames(records)],\n                                   actions, recordOptions);\n      return [];\n    });\n  }\n\n  public async destroy(recordIdOrRecordIds: Types.RecordId|Types.RecordId[]): Promise<void> {\n    await withRecords(recordIdOrRecordIds, async (recordIds) => {\n      const tableId = await this._platform.getTableId();\n      const actions = [['BulkRemoveRecord', tableId, recordIds]];\n      await this._applyUserActions(tableId, [], actions);\n      return [];\n    });\n  }\n\n  // Update records identified by rowIds. Any invalid id fails\n  // the request and returns a 400 error code.\n  // This is exposed as a public method to support the older /data endpoint.\n  public async updateRecords(columnValues: BulkColValues, rowIds: number[],\n                             options?: OpOptions) {\n    await this._addOrUpdateRecords(columnValues, rowIds, 'BulkUpdateRecord', options);\n  }\n\n  /**\n   * Adds records to a table. If columnValues is an empty object (or not provided) it will create empty records.\n   * This is exposed as a public method to support the older /data endpoint.\n   * @param columnValues Optional values for fields (can be an empty object to add empty records)\n   * @param count Number of records to add\n   */\n  public async addRecords(\n    count: number, columnValues: BulkColValues, options?: OpOptions\n  ): Promise<number[]> {\n    // user actions expect [null, ...] as row ids\n    const rowIds = arrayRepeat(count, null);\n    return this._addOrUpdateRecords(columnValues, rowIds, 'BulkAddRecord', options);\n  }\n\n  private async _addOrUpdateRecords(\n    columnValues: BulkColValues, rowIds: (number | null)[],\n    actionType: 'BulkUpdateRecord' | 'BulkAddRecord',\n    options?: OpOptions\n  ) {\n    const tableId = await this._platform.getTableId();\n    const colNames = Object.keys(columnValues);\n    const sandboxRes = await this._applyUserActions(\n      tableId, colNames,\n      [[actionType, tableId, rowIds, columnValues]],\n      options\n    );\n    return sandboxRes.retValues[0];\n  }\n\n  // Apply the supplied actions with the given options. The tableId and\n  // colNames are just to improve error reporting.\n  private async _applyUserActions(tableId: string, colNames: string[], actions: any[][],\n                                  options: OpOptions = {}): Promise<any> {\n    return handleSandboxErrorOnPlatform(tableId, colNames, this._platform.applyUserActions(\n      actions, {...this._defaultOptions, ...options}\n    ), this._platform);\n  }\n}\n\n/**\n * The services needed by TableOperationsImpl.\n */\nexport interface TableOperationsPlatform {\n  // Get the tableId of the table upon which we are supposed to operate.\n  getTableId(): Promise<string>;\n\n  // Throw a platform-specific error.\n  throwError(verb: string, text: string, status: number): never;\n\n  // Apply the supplied actions with the given options.\n  applyUserActions(actions: any[][], opts: any): Promise<any>;\n}\n\nexport function convertToBulkColValues(records: Array<Types.Record | Types.NewRecord>): BulkColValues {\n  // User might want to create empty records, without providing a field name, for example for requests:\n  // { records: [{}] }; { records: [{fields:{}}] }\n  // Retrieve all field names from fields property.\n  const result: BulkColValues = {};\n  for (const fieldName of fieldNames(records)) {\n    result[fieldName] = records.map(record => record.fields?.[fieldName] ?? null);\n  }\n  return result;\n}\n\nexport function fieldNames(records: any[]) {\n  return new Set<string>(flatMap(records, r => Object.keys({...r.fields, ...r.require})));\n}\n\nexport function areSameFields(records: Array<Types.Record | Types.NewRecord>) {\n  const recordsFields = records.map(r => new Set(Object.keys(r.fields || {})));\n  return recordsFields.every(s => isEqual(recordsFields[0], s));\n}\n\n/**\n * Adapt an operation that takes a list and returns a list to an input that may\n * be a single object or a list. If input is empty list, return the empty list.\n * If input is a single object, return a single object. Otherwise return a list.\n */\nasync function withRecords<T, T2>(recordsOrRecord: T[]|T, op: (records: T[]) => Promise<T2[]>): Promise<T2|T2[]> {\n  const records = Array.isArray(recordsOrRecord) ? recordsOrRecord : [recordsOrRecord];\n  const result = records.length == 0 ? [] : await op(records);\n  return Array.isArray(recordsOrRecord) ? result : result[0];\n}\n\n/**\n * Catches the errors thrown by the sandbox, and converts to more descriptive ones (such as for\n * invalid table names, columns, or rowIds) with better status codes. Accepts the table name, a\n * list of column names in that table, and a promise for the result of the sandbox call.\n */\nexport async function handleSandboxErrorOnPlatform<T>(\n  tableId: string, colNames: string[], p: Promise<T>, platform: TableOperationsPlatform\n): Promise<T> {\n  try {\n    return await p;\n  } catch (err) {\n    const message = ((err instanceof Error) && err.message?.startsWith('[Sandbox] ')) ? err.message : undefined;\n    if (message) {\n      let match = message.match(/non-existent record #([0-9]+)/);\n      if (match) {\n        platform.throwError('', `Invalid row id ${match[1]}`, 400);\n      }\n      match = message.match(\n        // eslint-disable-next-line max-len\n        /\\[Sandbox] (?:KeyError u?'(?:Table \\w+ has no column )?|ValueError No such table: |ValueError No such column: )([\\w.]+)/\n      );\n      if (match) {\n        if (match[1] === tableId) {\n          platform.throwError('', `Table not found \"${tableId}\"`, 404);\n        } else if (colNames.includes(match[1])) {\n          platform.throwError('', `Invalid column \"${match[1]}\"`, 400);\n        } else if (colNames.includes(match[1].replace(`${tableId}.`, ''))) {\n          platform.throwError('', `Table or column not found \"${match[1]}\"`, 404);\n        }\n      }\n      platform.throwError('', `Error manipulating data: ${message}`, 400);\n    }\n    throw err;\n  }\n}","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const ColumnToMap = t.iface([], {\n  \"name\": \"string\",\n  \"title\": t.opt(t.union(\"string\", \"null\")),\n  \"description\": t.opt(t.union(\"string\", \"null\")),\n  \"type\": t.opt(\"string\"),\n  \"optional\": t.opt(\"boolean\"),\n  \"allowMultiple\": t.opt(\"boolean\"),\n});\n\nexport const ColumnsToMap = t.array(t.union(\"string\", \"ColumnToMap\"));\n\nexport const InteractionOptionsRequest = t.iface([], {\n  \"requiredAccess\": t.opt(\"string\"),\n  \"hasCustomOptions\": t.opt(\"boolean\"),\n  \"columns\": t.opt(\"ColumnsToMap\"),\n  \"allowSelectBy\": t.opt(\"boolean\"),\n});\n\nexport const InteractionOptions = t.iface([], {\n  \"accessLevel\": \"string\",\n});\n\nexport const WidgetColumnMap = t.iface([], {\n  [t.indexKey]: t.union(\"string\", t.array(\"string\"), \"null\"),\n});\n\nexport const CustomSectionAPI = t.iface([], {\n  \"configure\": t.func(\"void\", t.param(\"customOptions\", \"InteractionOptionsRequest\")),\n  \"mappings\": t.func(t.union(\"WidgetColumnMap\", \"null\")),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  ColumnToMap,\n  ColumnsToMap,\n  InteractionOptionsRequest,\n  InteractionOptions,\n  WidgetColumnMap,\n  CustomSectionAPI,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const EditOptionsAPI = t.iface([], {\n  \"getParseOptions\": t.func(\"ParseOptions\", t.param(\"parseOptions\", \"ParseOptions\", true)),\n});\n\nexport const ParseFileAPI = t.iface([], {\n  \"parseFile\": t.func(\"ParseFileResult\", t.param(\"file\", \"FileSource\"), t.param(\"parseOptions\", \"ParseOptions\", true)),\n});\n\nexport const ParseOptions = t.iface([], {\n  \"NUM_ROWS\": t.opt(\"number\"),\n  \"SCHEMA\": t.opt(t.array(\"ParseOptionSchema\")),\n  \"WARNING\": t.opt(\"string\"),\n});\n\nexport const ParseOptionSchema = t.iface([], {\n  \"name\": \"string\",\n  \"label\": \"string\",\n  \"type\": \"string\",\n  \"visible\": \"boolean\",\n});\n\nexport const FileSource = t.iface([], {\n  \"path\": \"string\",\n  \"origName\": \"string\",\n});\n\nexport const ParseFileResult = t.iface([\"GristTables\"], {\n  \"parseOptions\": \"ParseOptions\",\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  EditOptionsAPI,\n  ParseFileAPI,\n  ParseOptions,\n  ParseOptionSchema,\n  FileSource,\n  ParseFileResult,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const UIRowId = t.union(\"number\", t.lit('new'));\n\nexport const CursorPos = t.iface([], {\n  \"rowId\": t.opt(\"UIRowId\"),\n  \"rowIndex\": t.opt(\"number\"),\n  \"fieldIndex\": t.opt(\"number\"),\n  \"sectionId\": t.opt(\"number\"),\n});\n\nexport const ComponentKind = t.union(t.lit(\"safeBrowser\"), t.lit(\"safePython\"), t.lit(\"unsafeNode\"));\n\nexport const GristAPI = t.iface([], {\n  \"render\": t.func(\"number\", t.param(\"path\", \"string\"), t.param(\"target\", \"RenderTarget\"), t.param(\"options\", \"RenderOptions\", true)),\n  \"dispose\": t.func(\"void\", t.param(\"procId\", \"number\")),\n  \"subscribe\": t.func(\"void\", t.param(\"tableId\", \"string\")),\n  \"unsubscribe\": t.func(\"void\", t.param(\"tableId\", \"string\")),\n});\n\nexport const GristDocAPI = t.iface([], {\n  \"getDocName\": t.func(\"string\"),\n  \"listTables\": t.func(t.array(\"string\")),\n  \"fetchTable\": t.func(\"any\", t.param(\"tableId\", \"string\")),\n  \"applyUserActions\": t.func(\"any\", t.param(\"actions\", t.array(t.array(\"any\"))), t.param(\"options\", \"any\", true)),\n  \"getAccessToken\": t.func(\"AccessTokenResult\", t.param(\"options\", \"AccessTokenOptions\")),\n});\n\nexport const GristView = t.iface([], {\n  \"fetchSelectedTable\": t.func(\"any\"),\n  \"fetchSelectedRecord\": t.func(\"any\", t.param(\"rowId\", \"number\")),\n  \"allowSelectBy\": t.func(\"void\"),\n  \"setSelectedRows\": t.func(\"void\", t.param(\"rowIds\", t.union(t.array(\"number\"), \"null\"))),\n  \"setCursorPos\": t.func(\"void\", t.param(\"pos\", \"CursorPos\")),\n});\n\nexport const AccessTokenOptions = t.iface([], {\n  \"readOnly\": t.opt(\"boolean\"),\n});\n\nexport const AccessTokenResult = t.iface([], {\n  \"token\": \"string\",\n  \"baseUrl\": \"string\",\n  \"ttlMsecs\": \"number\",\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  UIRowId,\n  CursorPos,\n  ComponentKind,\n  GristAPI,\n  GristDocAPI,\n  GristView,\n  AccessTokenOptions,\n  AccessTokenResult,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const GristTable = t.iface([], {\n  \"table_name\": t.union(\"string\", \"null\"),\n  \"column_metadata\": t.array(\"GristColumn\"),\n  \"table_data\": t.array(t.array(\"any\")),\n});\n\nexport const GristTables = t.iface([], {\n  \"tables\": t.array(\"GristTable\"),\n});\n\nexport const GristColumn = t.iface([], {\n  \"id\": \"string\",\n  \"type\": \"string\",\n});\n\nexport const APIType = t.enumtype({\n  \"ImportSourceAPI\": 0,\n  \"ImportProcessorAPI\": 1,\n  \"ParseOptionsAPI\": 2,\n  \"ParseFileAPI\": 3,\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  GristTable,\n  GristTables,\n  GristColumn,\n  APIType,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const ImportSourceAPI = t.iface([], {\n  \"getImportSource\": t.func(t.union(\"ImportSource\", \"undefined\")),\n});\n\nexport const ImportProcessorAPI = t.iface([], {\n  \"processImport\": t.func(t.array(\"GristTable\"), t.param(\"source\", \"ImportSource\")),\n});\n\nexport const FileContent = t.iface([], {\n  \"content\": \"any\",\n  \"name\": \"string\",\n});\n\nexport const FileListItem = t.iface([], {\n  \"kind\": t.lit(\"fileList\"),\n  \"files\": t.array(\"FileContent\"),\n});\n\nexport const URL = t.iface([], {\n  \"kind\": t.lit(\"url\"),\n  \"url\": \"string\",\n});\n\nexport const ImportSource = t.iface([], {\n  \"item\": t.union(\"FileListItem\", \"URL\"),\n  \"options\": t.opt(t.union(\"string\", \"Buffer\")),\n  \"description\": t.opt(\"string\"),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  ImportSourceAPI,\n  ImportProcessorAPI,\n  FileContent,\n  FileListItem,\n  URL,\n  ImportSource,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const InternalImportSourceAPI = t.iface([], {\n  \"getImportSource\": t.func(t.union(\"ImportSource\", \"undefined\"), t.param(\"inlineTarget\", \"RenderTarget\")),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  InternalImportSourceAPI,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const RenderTarget = t.union(t.lit(\"fullscreen\"), \"number\");\n\nexport const RenderOptions = t.iface([], {\n  \"height\": t.opt(\"string\"),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  RenderTarget,\n  RenderOptions,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const Storage = t.iface([], {\n  \"getItem\": t.func(\"any\", t.param(\"key\", \"string\")),\n  \"hasItem\": t.func(\"boolean\", t.param(\"key\", \"string\")),\n  \"setItem\": t.func(\"void\", t.param(\"key\", \"string\"), t.param(\"value\", \"any\")),\n  \"removeItem\": t.func(\"void\", t.param(\"key\", \"string\")),\n  \"clear\": t.func(\"void\"),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  Storage,\n};\nexport default exportedTypeSuite;\n","/**\n * This module was automatically generated by `ts-interface-builder`\n */\nimport * as t from \"ts-interface-checker\";\n// tslint:disable:object-literal-key-quotes\n\nexport const WidgetAPI = t.iface([], {\n  \"getOptions\": t.func(t.union(\"object\", \"null\")),\n  \"setOptions\": t.func(\"void\", t.param(\"options\", t.iface([], {\n    [t.indexKey]: \"any\",\n  }))),\n  \"clearOptions\": t.func(\"void\"),\n  \"setOption\": t.func(\"void\", t.param(\"key\", \"string\"), t.param(\"value\", \"any\")),\n  \"getOption\": t.func(\"any\", t.param(\"key\", \"string\")),\n});\n\nconst exportedTypeSuite: t.ITypeSuite = {\n  WidgetAPI,\n};\nexport default exportedTypeSuite;\n","import {BasicType, createCheckers, ICheckerSuite} from 'ts-interface-checker';\nimport CustomSectionAPITI from './CustomSectionAPI-ti';\nimport FileParserAPITI from './FileParserAPI-ti';\nimport GristAPITI from './GristAPI-ti';\nimport GristTableTI from './GristTable-ti';\nimport ImportSourceAPITI from './ImportSourceAPI-ti';\nimport InternalImportSourceAPITI from './InternalImportSourceAPI-ti';\nimport RenderOptionsTI from './RenderOptions-ti';\nimport StorageAPITI from './StorageAPI-ti';\nimport WidgetAPITI from './WidgetAPI-ti';\n\n/**\n * The ts-interface-checker type suites are all exported with the \"TI\" suffix.\n */\nexport {\n  CustomSectionAPITI, FileParserAPITI, GristAPITI, GristTableTI, ImportSourceAPITI,\n  InternalImportSourceAPITI, RenderOptionsTI, StorageAPITI, WidgetAPITI};\n\nconst allTypes = [\n  CustomSectionAPITI, FileParserAPITI, GristAPITI, GristTableTI, ImportSourceAPITI,\n  InternalImportSourceAPITI, RenderOptionsTI, StorageAPITI, WidgetAPITI,\n];\n\n// Ensure Buffer can be handled if mentioned in the interface descriptions, even if not supported\n// in the current environment (i.e. browser).\nif (typeof Buffer === 'undefined') {\n  allTypes.push({Buffer: new BasicType((v) => false, \"Buffer is not supported\")});\n}\n\nfunction checkDuplicates(types: Array<{[key: string]: object}>) {\n  const seen = new Set<string>();\n  for (const t of types) {\n    for (const key of Object.keys(t)) {\n      if (seen.has(key)) { throw new Error(`TypeCheckers: Duplicate type name ${key}`); }\n      seen.add(key);\n      // Uncomment the line below to generate updated list of included types.\n      // console.log(`'${key}' |`);\n    }\n  }\n}\n\ncheckDuplicates(allTypes);\n\n/**\n * We also create and export a global checker object that includes all of the types above.\n */\nexport const checkers = createCheckers(...allTypes) as (\n  // The following Pick typecast ensures that Typescript can only use correct properties of the\n  // checkers object (e.g. checkers.GristAPI will compile, but checkers.GristApi will not).\n  // TODO: The restrictive type of ICheckerSuite should be generated automatically. (Currently\n  // generated by commenting out console.log() in checkDuplicates() above.)\n  Pick<ICheckerSuite,\n  'CustomSectionAPI' | 'EditOptionsAPI' | 'ParseFileAPI' | 'ParseOptions' | 'ParseOptionSchema' |\n  'FileSource' | 'ParseFileResult' | 'ComponentKind' | 'GristAPI' | 'GristDocAPI' | 'GristTable' |\n  'GristTables' | 'GristColumn' | 'GristView' | 'ImportSourceAPI' | 'ImportProcessorAPI' | 'FileContent' |\n  'FileListItem' | 'URL' | 'ImportSource' | 'InternalImportSourceAPI' | 'RenderTarget' |\n  'RenderOptions' | 'Storage' | 'WidgetAPI'\n  >);\n","/**\n * Encodes and decodes Grist encoding of values, mirroring similar Python functions in\n * sandbox/grist/objtypes.py.\n */\n// tslint:disable:max-classes-per-file\n\nimport { CellValue, GristObjCode } from './GristData';\nimport isPlainObject = require('lodash/isPlainObject');\n\n// The text to show on cells whose values are pending.\nexport const PENDING_DATA_PLACEHOLDER = \"Loading...\";\n\n/**\n * A GristDate is just a JS Date object whose toString() method returns YYYY-MM-DD.\n */\nexport class GristDate extends Date {\n  public static fromGristValue(epochSec: number): GristDate {\n    return new GristDate(epochSec * 1000);\n  }\n\n  public toString() {\n    return this.toISOString().slice(0, 10);\n  }\n}\n\n/**\n * A GristDateTime is a JS Date with an added timezone field. Its toString() returns the date in\n * ISO format. To create a timezone-aware momentjs object, use:\n *\n *    moment(d).tz(d.timezone)\n */\nexport class GristDateTime extends Date {\n  public static fromGristValue(epochSec: number, timezone: string): GristDateTime {\n    return Object.assign(new GristDateTime(epochSec * 1000), {timezone});\n  }\n\n  public timezone: string;\n  public toString() { return this.toISOString(); }\n}\n\n/**\n * A Reference represents a reference to a row in a table. It is simply a pair of a string tableId\n * and a numeric rowId.\n */\nexport class Reference {\n  constructor(public tableId: string, public rowId: number) {}\n\n  public toString(): string {\n    return `${this.tableId}[${this.rowId}]`;\n  }\n}\n\n/**\n * A ReferenceList represents a reference to a number of rows in a table. It is simply a pair of a string tableId\n * and a numeric array rowIds.\n */\nexport class ReferenceList {\n  constructor(public tableId: string, public rowIds: number[]) {}\n\n  public toString(): string {\n    return `${this.tableId}[[${this.rowIds}]]`;\n  }\n}\n\n/**\n * A RaisedException represents a formula error. It includes the exception name, message, and\n * optional details.\n */\nexport class RaisedException {\n  public name: string;\n  public details?: string;\n  public message?: string;\n  public user_input?: CellValue;\n\n  constructor(list: any[]) {\n    if (!list.length) {\n      throw new Error(\"RaisedException requires a name as first element\");\n    }\n    list = [...list];\n    this.name = list.shift();\n    this.message = list.shift();\n    this.details = list.shift();\n    this.user_input = list.shift()?.u;\n  }\n\n  /**\n   * This is designed to look somewhat similar to Excel, e.g. #VALUE or #DIV/0!\"\n   */\n  public toString() {\n    switch (this.name) {\n      case 'ZeroDivisionError': return '#DIV/0!';\n      case 'UnmarshallableError': return this.details || ('#' + this.name);\n      case 'InvalidTypedValue': return `#Invalid ${this.message}: ${this.details}`;\n    }\n    return '#' + this.name;\n  }\n}\n\n/**\n * An UnknownValue is a fallback for values that we don't handle otherwise, e.g. of a Python\n * formula returned a function object, or a value we fail to decode.\n * It is typically the Python repr() string of the value.\n */\nexport class UnknownValue {\n  // When encoding an unknown value, get a best-effort string form of it.\n  public static safeRepr(value: unknown): string {\n    try {\n      return String(value);\n    } catch (e) {\n      return `<${typeof value}>`;\n    }\n  }\n\n  constructor(public value: unknown) {}\n  public toString() {\n    return String(this.value);\n  }\n}\n\n/**\n * A trivial placeholder for a value that's not yet available.\n */\nexport class PendingValue {\n  public toString() {\n    return PENDING_DATA_PLACEHOLDER;\n  }\n}\n\n/**\n * A trivial placeholder for a value that won't be shown.\n */\nexport class SkipValue {\n  public toString() {\n    return '...';\n  }\n}\n\n/**\n * A placeholder for a value hidden by access control rules.\n * Depending on the types of the columns involved, copying\n * a censored value and pasting elsewhere will either use\n * CensoredValue.__repr__ (python) or CensoredValue.toString (typescript)\n * so they should match\n */\nexport class CensoredValue {\n  public toString() {\n    return 'CENSORED';\n  }\n}\n\n/**\n * Produces a Grist-encoded version of the value, e.g. turning a Date into ['d', timestamp].\n * Returns ['U', repr(value)] if it fails to encode otherwise.\n *\n * TODO Add tests. This is not yet used for anything.\n */\nexport function encodeObject(value: unknown): CellValue {\n  try {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        return value;\n    }\n    if (value == null) {\n      return null;\n    } else if (value instanceof Reference) {\n      return [GristObjCode.Reference, value.tableId, value.rowId];\n    } else if (value instanceof ReferenceList) {\n      return [GristObjCode.ReferenceList, value.tableId, value.rowIds];\n    } else if (value instanceof Date) {\n      const timestamp = value.valueOf() / 1000;\n      if ('timezone' in value) {\n        return [GristObjCode.DateTime, timestamp, (value as GristDateTime).timezone];\n      } else {\n        // TODO Depending on how it's used, may want to return ['d', timestamp] for UTC midnight.\n        return [GristObjCode.DateTime, timestamp, 'UTC'];\n      }\n    } else if (value instanceof CensoredValue) {\n      return [GristObjCode.Censored];\n    } else if (value instanceof RaisedException) {\n      return [GristObjCode.Exception, value.name, value.message, value.details];\n    } else if (Array.isArray(value)) {\n      return [GristObjCode.List, ...value.map(encodeObject)];\n    } else if (isPlainObject(value)) {\n      return [GristObjCode.Dict, mapValues(value as any, encodeObject, {sort: true})];\n    }\n  } catch (e) {\n    // Fall through to return a best-effort representation.\n  }\n  // We either don't know how to convert the value, or failed during the conversion. Instead we\n  // return an \"UnmarshallableValue\" object, with repr() of the value to show to the user.\n  return [GristObjCode.Unmarshallable, UnknownValue.safeRepr(value)];\n}\n\n\n/**\n * Given a Grist-encoded value, returns an object represented by it.\n * If the type code is unknown, or construction fails for any reason, returns an UnknownValue.\n */\nexport function decodeObject(value: CellValue): unknown {\n  if (!Array.isArray(value)) {\n    return value;\n  }\n  const code: string = value[0];\n  const args: any[] = value.slice(1);\n  let err: Error|undefined;\n  try {\n    switch (code) {\n      case 'D': return GristDateTime.fromGristValue(args[0], String(args[1]));\n      case 'd': return GristDate.fromGristValue(args[0]);\n      case 'E': return new RaisedException(args);\n      case 'L': return (args as CellValue[]).map(decodeObject);\n      case 'O': return mapValues(args[0] as {[key: string]: CellValue}, decodeObject, {sort: true});\n      case 'P': return new PendingValue();\n      case 'r': return new ReferenceList(String(args[0]), args[1]);\n      case 'R': return new Reference(String(args[0]), args[1]);\n      case 'S': return new SkipValue();\n      case 'C': return new CensoredValue();\n      case 'U': return new UnknownValue(args[0]);\n    }\n  } catch (e) {\n    err = e;\n  }\n  // If we can't decode, return an UnknownValue with some attempt to represent what we couldn't\n  // decode as long as some info about the error if any.\n  return new UnknownValue(`${code}(${JSON.stringify(args).slice(1, -1)})` +\n    (err ? `#${err.name}(${err.message})` : ''));\n}\n\n// Like lodash's mapValues, with support for sorting keys, for friendlier output.\nexport function mapValues<A, B>(\n  sourceObj: {[key: string]: A}, mapper: (value: A) => B, options: {sort?: boolean} = {}\n): {[key: string]: B} {\n  const result: {[key: string]: B} = {};\n  const keys = Object.keys(sourceObj);\n  if (options.sort) {\n    keys.sort();\n  }\n  for (const key of keys) {\n    result[key] = mapper(sourceObj[key]);\n  }\n  return result;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./message\"));\n__export(require(\"./rpc\"));\n","\"use strict\";\n/**\n * This defines the message types sent over an RpcChannel.\n *\n * WARNING: Any changes to these must be backward-compatible, since Rpc may be used across\n * different versions of this library. Specifically, enums must not be renumbered, fields renamed,\n * or their types changed. Really, the only reasonable enhancement is adding a new optional field.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MsgType;\n(function (MsgType) {\n    // Warning: Do NOT renumber enums (see warning above).\n    MsgType[MsgType[\"RpcCall\"] = 1] = \"RpcCall\";\n    MsgType[MsgType[\"RpcRespData\"] = 2] = \"RpcRespData\";\n    MsgType[MsgType[\"RpcRespErr\"] = 3] = \"RpcRespErr\";\n    MsgType[MsgType[\"Custom\"] = 4] = \"Custom\";\n    MsgType[MsgType[\"Ready\"] = 5] = \"Ready\";\n})(MsgType = exports.MsgType || (exports.MsgType = {}));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Rpc implements an remote-procedure-call interface on top of a simple messaging interface.\n *\n * The user must provide the messaging between two endpoints, and in return gets the ability to\n * register interfaces or functions at either endpoint, and call them from the other side. For\n * messaging, the user must supply a sendMessage() function to send messages to the other side,\n * and must call rpc.receiveMessage(msg) whenever a message is received.\n *\n * E.g.\n *    rpc.registerImpl<MyInterface>(\"some-name\", new MyInterfaceImpl(), descMyInterfaceImpl);\n *    rpc.getStub<MyInterface>(\"some-name\", descMyInterfaceImpl)\n *          => returns a stub implemeting MyInterface\n *\n * Calls to the generated stub get turned into messages across the channel, and then call to the\n * implementation object registered on the other side. Both return values and exceptions get\n * passed back over the channel, and cause the promise from the stub to be resolved or rejected.\n *\n * Note that the stub interface returns Promises for all methods.\n *\n * Rpc library supports ts-interface-checker descriptors for the interfaces, to allow validation.\n * You may skip it by passing in `rpc.unchecked` where a descriptor is expected; it will skip\n * checks and you will not get descriptive errors.\n *\n * The string name used to register and use an implementation allows for the same Rpc object to be\n * used to expose multiple interfaces, or different implementations of the same interface.\n *\n * Messaging\n * ---------\n * Rpc also supports a messaging interface, with postMessage() to send arbitrary messages, and an\n * EventEmitter interface for \"message\" events to receive them, e.g. on(\"message\", ...). So if you\n * need to multiplex non-Rpc messages over the same channel, Rpc class does it for you.\n *\n * Cleanup\n * -------\n * If the channel is closed or had an error, and will no longer be used, the user of Rpc must\n * call rpc.close() to reject any calls waiting for an answer.\n *\n * If a particular stub for a remote API is no longer needed, user may call rpc.discardStub(stub)\n * to reject any pending calls made to that stub.\n *\n * Timeouts\n * --------\n * TODO (Not yet implementd.)\n * You may call rpc.setTimeout(ms) or rpc.setStubTimeout(stub, ms) to set a call timeout for all\n * stubs or for a particular one. If a response to a call does not arrive within the timeout, the\n * call gets rejected, and the rejection Error will have a \"code\" property set to \"TIMEOUT\".\n *\n * Forwarding\n * ----------\n * Rpc.registerForwarder() along with methods with \"-Forward\" suffix allow one Rpc object to forward\n * calls and messages to another Rpc object. The intended usage is when Rpc connects A to B, and B\n * to C. Then B can use registerForwarder to expose A's interfaces to C (or C's to A) without having\n * to know what exactly they are. A default forwarder can be registered using the '*' name.\n *\n *\n * Instead of using getStubForward and callRemoteFuncForward, the forwarder name can be\n * appended to the interface name as \"interfaceName@forwarderName\" and the regular\n * getStub and callRemoteFunc methods can be used.  For example:\n *   getStub(\"iface@forwarder\")\n * is the same as:\n *   getStubForward(\"forwarder\", \"iface\")\n *\n *\n * E.g. with A.registerImpl(\"A-name\", ...) and B.registerForwarder(\"b2a\", A), we may now call\n * C.getStubForward(\"b2a\", \"A-name\") to get a stub that will forward calls to A, as well as\n * C.postMessageForward(\"b2a\", msg) to have the message received by A.\n *\n * TODO We may want to support progress callbacks, perhaps by supporting arbitrary callbacks as\n * parameters. (Could be implemented by allowing \"meth\" to be [reqId, paramPath]) It would be nice\n * to allow the channel to report progress too, e.g. to report progress of uploading large files.\n *\n * TODO Sending of large files should probably be a separate feature, to allow for channel\n * implementations to stream them.\n */\nconst events_1 = require(\"events\");\nconst tic = require(\"ts-interface-checker\");\nconst message_1 = require(\"./message\");\nconst plainCall = (callFunc) => callFunc();\nclass Rpc extends events_1.EventEmitter {\n    /**\n     * To use Rpc, you must provide a sendMessage function that sends a message to the other side;\n     * it may be given in the constructor, or later with setSendMessage. You must also call\n     * receiveMessage() for every message received from the other side.\n     */\n    constructor(options = {}) {\n        super();\n        // Note the invariant: _inactiveSendQueue == null iff (_sendMessageCB != null && !_waitForReadyMessage)\n        this._sendMessageCB = null;\n        this._inactiveRecvQueue = null; // queue of received message\n        this._inactiveSendQueue = null; // queue of messages to be sent\n        this._waitForReadyMessage = false;\n        this._implMap = new Map();\n        this._forwarders = new Map();\n        this._pendingCalls = new Map();\n        this._nextRequestId = 1;\n        const { logger = console, sendMessage = null, callWrapper = plainCall } = options;\n        this._logger = logger;\n        this._callWrapper = callWrapper;\n        this.setSendMessage(sendMessage);\n    }\n    /**\n     * To use Rpc, call this for every message received from the other side of the channel.\n     */\n    receiveMessage(msg) {\n        if (this._inactiveRecvQueue) {\n            this._inactiveRecvQueue.push(msg);\n        }\n        else {\n            this._dispatch(msg);\n        }\n    }\n    /**\n     * If you've set up calls to receiveMessage(), but need time to call registerImpl() before\n     * processing new messages, you may use queueIncoming(), make the registerImpl() calls,\n     * and then call processIncoming() to handle queued messages and resume normal processing.\n     */\n    queueIncoming() {\n        if (!this._inactiveRecvQueue) {\n            this._inactiveRecvQueue = [];\n        }\n    }\n    /**\n     * Process received messages queued since queueIncoming, and resume normal processing of\n     * received messages.\n     */\n    processIncoming() {\n        if (this._inactiveRecvQueue) {\n            processQueue(this._inactiveRecvQueue, this._dispatch.bind(this));\n            this._inactiveRecvQueue = null;\n        }\n    }\n    /**\n     * Set the callback to send messages. If set to null, sent messages will be queued. If you\n     * disconnect and want for sent messages to throw, set a callback that throws.\n     */\n    setSendMessage(sendMessage) {\n        this._sendMessageCB = sendMessage;\n        if (this._sendMessageCB) {\n            this._processOutgoing();\n        }\n        else {\n            this._queueOutgoing();\n        }\n    }\n    /**\n     * If your peer may not be listening yet to your messages, you may call this to queue outgoing\n     * messages until receiving a \"ready\" message from the peer. I.e. one peer may call\n     * queueOutgoingUntilReadyMessage() while the other calls sendReadyMessage().\n     */\n    queueOutgoingUntilReadyMessage() {\n        this._waitForReadyMessage = true;\n        this._queueOutgoing();\n    }\n    /**\n     * If your peer is using queueOutgoingUntilReadyMessage(), you should let it know that you are\n     * ready using sendReadyMessage() as soon as you've set up the processing of received messages.\n     * Note that at most one peer may use queueOutgoingUntilReadyMessage(), or they will deadlock.\n     */\n    sendReadyMessage() {\n        return this._sendMessage({ mtype: message_1.MsgType.Ready });\n    }\n    /**\n     * Messaging interface: send data to the other side, to be emitted there as a \"message\" event.\n     */\n    postMessage(data) { return this.postMessageForward(\"\", data); }\n    postMessageForward(fwdDest, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const msg = { mtype: message_1.MsgType.Custom, data };\n            if (fwdDest) {\n                msg.mdest = fwdDest;\n            }\n            yield this._sendMessage(msg);\n        });\n    }\n    registerImpl(name, impl, checker) {\n        if (this._implMap.has(name)) {\n            throw new Error(`Rpc.registerImpl has already been called for ${name}`);\n        }\n        const invokeImpl = (call) => impl[call.meth](...call.args);\n        if (!checker) {\n            this._implMap.set(name, { name, invokeImpl, argsCheckers: null });\n        }\n        else {\n            const ttype = checker.getType();\n            if (!(ttype instanceof tic.TIface)) {\n                throw new Error(\"Rpc.registerImpl requires a Checker for an interface\");\n            }\n            const argsCheckers = {};\n            for (const prop of ttype.props) {\n                if (prop.ttype instanceof tic.TFunc) {\n                    argsCheckers[prop.name] = checker.methodArgs(prop.name);\n                }\n            }\n            this._implMap.set(name, { name, invokeImpl, argsCheckers });\n        }\n    }\n    registerForwarder(fwdName, dest, fwdDest = (fwdName === \"*\" ? \"*\" : \"\")) {\n        const passThru = fwdDest === \"*\";\n        this._forwarders.set(fwdName, {\n            name: \"[FWD]\" + fwdName,\n            argsCheckers: null,\n            invokeImpl: (c) => dest.forwardCall(Object.assign({}, c, { mdest: passThru ? c.mdest : fwdDest })),\n            forwardMessage: (msg) => dest.forwardMessage(Object.assign({}, msg, { mdest: passThru ? msg.mdest : fwdDest })),\n        });\n    }\n    unregisterForwarder(fwdName) {\n        this._forwarders.delete(fwdName);\n    }\n    /**\n     * Unregister an implementation, if one was registered with this name.\n     */\n    unregisterImpl(name) {\n        this._implMap.delete(name);\n    }\n    getStub(name, checker) {\n        const parts = this._parseName(name);\n        return this.getStubForward(parts.forwarder, parts.name, checker);\n    }\n    getStubForward(fwdDest, name, checker) {\n        if (!checker) {\n            // TODO Test, then explain how this works.\n            return new Proxy({}, {\n                get: (target, property, receiver) => {\n                    if (property === \"then\") {\n                        // By default, take care not to look \"thenable\", so that the stub can be returned\n                        // as a value of a Promise:\n                        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\n                        // If user really wants to proxy \"then\", they can write a checker.\n                        return undefined;\n                    }\n                    return (...args) => this._makeCall(name, property, args, anyChecker, fwdDest);\n                },\n            });\n        }\n        else {\n            const ttype = checker.getType();\n            if (!(ttype instanceof tic.TIface)) {\n                throw new Error(\"Rpc.getStub requires a Checker for an interface\");\n            }\n            const api = {};\n            for (const prop of ttype.props) {\n                if (prop.ttype instanceof tic.TFunc) {\n                    const resultChecker = checker.methodResult(prop.name);\n                    api[prop.name] = (...args) => this._makeCall(name, prop.name, args, resultChecker, fwdDest);\n                }\n            }\n            return api;\n        }\n    }\n    /**\n     * Simple way to registers a function under a given name, with no argument checking.\n     */\n    registerFunc(name, impl) {\n        return this.registerImpl(name, { invoke: impl }, checkerAnyFunc);\n    }\n    /**\n     * Unregister a function, if one was registered with this name.\n     */\n    unregisterFunc(name) {\n        return this.unregisterImpl(name);\n    }\n    /**\n     * Call a remote function registered with registerFunc. Does no type checking.\n     */\n    callRemoteFunc(name, ...args) {\n        const parts = this._parseName(name);\n        return this.callRemoteFuncForward(parts.forwarder, parts.name, ...args);\n    }\n    callRemoteFuncForward(fwdDest, name, ...args) {\n        return this._makeCall(name, \"invoke\", args, anyChecker, fwdDest);\n    }\n    forwardCall(c) {\n        return this._makeCall(c.iface, c.meth, c.args, anyChecker, c.mdest || \"\");\n    }\n    forwardMessage(msg) {\n        return this.postMessageForward(msg.mdest || \"\", msg.data);\n    }\n    // Mark outgoing messages for queueing.\n    _queueOutgoing() {\n        if (!this._inactiveSendQueue) {\n            this._inactiveSendQueue = [];\n        }\n    }\n    // If sendMessageCB is set and we are no longer waiting for a ready message, send out any\n    // queued outgoing messages and resume normal sending.\n    _processOutgoing() {\n        if (this._inactiveSendQueue && this._sendMessageCB && !this._waitForReadyMessage) {\n            processQueue(this._inactiveSendQueue, this._sendMessageOrReject.bind(this, this._sendMessageCB));\n            this._inactiveSendQueue = null;\n        }\n    }\n    _sendMessage(msg) {\n        if (this._inactiveSendQueue) {\n            this._inactiveSendQueue.push(msg);\n        }\n        else {\n            return this._sendMessageOrReject(this._sendMessageCB, msg);\n        }\n    }\n    // This helper calls calls sendMessage(msg), and if that call fails, rejects the call\n    // represented by msg (when it's of type RpcCall).\n    _sendMessageOrReject(sendMessage, msg) {\n        if (this._logger.info) {\n            const desc = (msg.mtype === message_1.MsgType.RpcCall) ? \": \" + this._callDesc(msg) : \"\";\n            this._logger.info(`Rpc sending ${message_1.MsgType[msg.mtype]}${desc}`);\n        }\n        return catchMaybePromise(() => sendMessage(msg), (err) => this._sendReject(msg, err));\n    }\n    // Rejects a RpcCall due to the given send error; this helper always re-throws.\n    _sendReject(msg, err) {\n        const newErr = new ErrorWithCode(\"RPC_SEND_FAILED\", `Send failed: ${err.message}`);\n        if (msg.mtype === message_1.MsgType.RpcCall && msg.reqId !== undefined) {\n            const callObj = this._pendingCalls.get(msg.reqId);\n            if (callObj) {\n                this._pendingCalls.delete(msg.reqId);\n                callObj.reject(newErr);\n            }\n        }\n        this.emit(\"error\", newErr);\n        throw newErr;\n    }\n    _makeCallRaw(iface, meth, args, resultChecker, fwdDest) {\n        return new Promise((resolve, reject) => {\n            const reqId = this._nextRequestId++;\n            const callObj = { reqId, iface, meth, resolve, reject, resultChecker };\n            this._pendingCalls.set(reqId, callObj);\n            // Send the Call message. If the sending fails, reject the _makeCall promise. If it\n            // succeeds, we save {resolve,reject} to resolve _makeCall when we get back a response.\n            this._info(callObj, \"RPC_CALLING\");\n            const msg = { mtype: message_1.MsgType.RpcCall, reqId, iface, meth, args };\n            if (fwdDest) {\n                msg.mdest = fwdDest;\n            }\n            // If _sendMessage fails, reject, allowing it to throw synchronously or not.\n            catchMaybePromise(() => this._sendMessage(msg), reject);\n        });\n    }\n    _makeCall(iface, meth, args, resultChecker, fwdDest) {\n        return this._callWrapper(() => this._makeCallRaw(iface, meth, args, resultChecker, fwdDest));\n    }\n    _dispatch(msg) {\n        switch (msg.mtype) {\n            case message_1.MsgType.RpcCall: {\n                this._onMessageCall(msg);\n                return;\n            }\n            case message_1.MsgType.RpcRespData:\n            case message_1.MsgType.RpcRespErr: {\n                this._onMessageResp(msg);\n                return;\n            }\n            case message_1.MsgType.Custom: {\n                this._onCustomMessage(msg);\n                return;\n            }\n            case message_1.MsgType.Ready: {\n                this._waitForReadyMessage = false;\n                try {\n                    this._processOutgoing();\n                }\n                catch (e) { /* swallowing error, an event 'error' was already emitted */ }\n                return;\n            }\n        }\n    }\n    _onCustomMessage(msg) {\n        if (msg.mdest) {\n            const impl = this._forwarders.get(msg.mdest) || this._forwarders.get(\"*\");\n            if (!impl) {\n                this._warn(null, \"RPC_UNKNOWN_FORWARD_DEST\", `Unknown forward destination: ${msg.mdest}`);\n            }\n            else {\n                impl.forwardMessage(msg);\n            }\n        }\n        else {\n            this.emit(\"message\", msg.data);\n        }\n    }\n    _onMessageCall(call) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let impl;\n            if (call.mdest) {\n                impl = this._forwarders.get(call.mdest) || this._forwarders.get(\"*\");\n                if (!impl) {\n                    return this._failCall(call, \"RPC_UNKNOWN_FORWARD_DEST\", `Unknown forward destination: ${call.mdest}`);\n                }\n            }\n            else {\n                impl = this._implMap.get(call.iface);\n                if (!impl) {\n                    return this._failCall(call, \"RPC_UNKNOWN_INTERFACE\", \"Unknown interface\");\n                }\n            }\n            if (!impl.argsCheckers) {\n                // No call or argument checking.\n            }\n            else {\n                // Check the method name and argument types.\n                if (!impl.argsCheckers.hasOwnProperty(call.meth)) {\n                    return this._failCall(call, \"RPC_UNKNOWN_METHOD\", \"Unknown method\");\n                }\n                const argsChecker = impl.argsCheckers[call.meth];\n                try {\n                    argsChecker.check(call.args);\n                }\n                catch (e) {\n                    return this._failCall(call, \"RPC_INVALID_ARGS\", `Invalid args: ${e.message}`);\n                }\n            }\n            if (call.reqId === undefined) {\n                return this._failCall(call, \"RPC_MISSING_REQID\", \"Missing request id\");\n            }\n            this._info(call, \"RPC_ONCALL\");\n            let result;\n            try {\n                result = yield impl.invokeImpl(call);\n            }\n            catch (e) {\n                return this._failCall(call, e.code, e.message, \"RPC_ONCALL_ERROR\");\n            }\n            this._info(call, \"RPC_ONCALL_OK\");\n            return this._sendResponse(call.reqId, result);\n        });\n    }\n    _failCall(call, code, mesg, reportCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._warn(call, reportCode || code, mesg);\n            if (call.reqId !== undefined) {\n                const msg = { mtype: message_1.MsgType.RpcRespErr, reqId: call.reqId, mesg, code };\n                yield this._sendMessage(msg);\n            }\n        });\n    }\n    _sendResponse(reqId, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const msg = { mtype: message_1.MsgType.RpcRespData, reqId, data };\n            yield this._sendMessage(msg);\n        });\n    }\n    _onMessageResp(resp) {\n        const callObj = this._pendingCalls.get(resp.reqId);\n        this._pendingCalls.delete(resp.reqId);\n        if (!callObj) {\n            this._warn(null, \"RPC_UNKNOWN_REQID\", `Response to unknown reqId ${resp.reqId}`);\n            return;\n        }\n        if (resp.mtype === message_1.MsgType.RpcRespErr) {\n            this._info(callObj, \"RPC_RESULT_ERROR\", resp.mesg);\n            return callObj.reject(new ErrorWithCode(resp.code, resp.mesg));\n        }\n        try {\n            callObj.resultChecker.check(resp.data);\n        }\n        catch (e) {\n            this._warn(callObj, \"RPC_RESULT_INVALID\", e.message);\n            return callObj.reject(new ErrorWithCode(\"RPC_INVALID_RESULT\", `Implementation produced invalid result: ${e.message}`));\n        }\n        this._info(callObj, \"RPC_RESULT_OK\");\n        callObj.resolve(resp.data);\n    }\n    _info(call, code, message) {\n        if (this._logger.info) {\n            const msg = message ? \" \" + message : \"\";\n            this._logger.info(`Rpc for ${this._callDesc(call)}: ${code}${msg}`);\n        }\n    }\n    _warn(call, code, message) {\n        if (this._logger.warn) {\n            const msg = message ? \" \" + message : \"\";\n            this._logger.warn(`Rpc for ${this._callDesc(call)}: ${code}${msg}`);\n        }\n    }\n    _callDesc(call) {\n        if (!call) {\n            return \"?\";\n        }\n        return `${call.iface}.${call.meth}#${call.reqId || \"-\"}`;\n    }\n    _parseName(name) {\n        const idx = name.lastIndexOf(\"@\");\n        if (idx === -1) {\n            return {\n                forwarder: \"\",\n                name,\n            };\n        }\n        return {\n            name: name.substr(0, idx),\n            forwarder: name.substr(idx + 1),\n        };\n    }\n}\nexports.Rpc = Rpc;\n/**\n * Interfaces may throw errors that include .code field, and it gets propagated to callers (e.g.\n * \"NOT_AUTHORIZED\"). Its purpose is to be a stable way to distinguish different types of errors.\n * This way the human-friendly error message can be changed without affecting behavior.\n */\nclass ErrorWithCode extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n    }\n}\nexports.ErrorWithCode = ErrorWithCode;\nconst IAnyFunc = tic.iface([], {\n    invoke: tic.func(\"any\"),\n});\nconst { IAnyFunc: checkerAnyFunc } = tic.createCheckers({ IAnyFunc });\nconst checkerAnyResult = checkerAnyFunc.methodResult(\"invoke\");\nconst anyChecker = checkerAnyResult;\n/**\n * A little helper that processes message queues when starting an rpc instance.\n */\nfunction processQueue(queue, processFunc) {\n    let i = 0;\n    try {\n        while (i < queue.length) {\n            // i gets read and then incremented before the call, so that if processFunc throws, the\n            // message still gets removed from the queue (to avoid processing it twice).\n            processFunc(queue[i++]);\n        }\n    }\n    finally {\n        queue.splice(0, i);\n    }\n}\n/**\n * Calls callback(), handling the exception both synchronously and not. If callback and handler\n * both return or throw synchronously, then so does this method.\n */\nfunction catchMaybePromise(callback, handler) {\n    try {\n        const p = callback();\n        if (p) {\n            return p.catch(handler);\n        }\n    }\n    catch (err) {\n        return handler(err);\n    }\n}\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Checker = exports.createCheckers = void 0;\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\n/**\n * Export functions used to define interfaces.\n */\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"TArray\", { enumerable: true, get: function () { return types_2.TArray; } });\nObject.defineProperty(exports, \"TEnumType\", { enumerable: true, get: function () { return types_2.TEnumType; } });\nObject.defineProperty(exports, \"TEnumLiteral\", { enumerable: true, get: function () { return types_2.TEnumLiteral; } });\nObject.defineProperty(exports, \"TFunc\", { enumerable: true, get: function () { return types_2.TFunc; } });\nObject.defineProperty(exports, \"TIface\", { enumerable: true, get: function () { return types_2.TIface; } });\nObject.defineProperty(exports, \"TLiteral\", { enumerable: true, get: function () { return types_2.TLiteral; } });\nObject.defineProperty(exports, \"TName\", { enumerable: true, get: function () { return types_2.TName; } });\nObject.defineProperty(exports, \"TOptional\", { enumerable: true, get: function () { return types_2.TOptional; } });\nObject.defineProperty(exports, \"TParam\", { enumerable: true, get: function () { return types_2.TParam; } });\nObject.defineProperty(exports, \"TParamList\", { enumerable: true, get: function () { return types_2.TParamList; } });\nObject.defineProperty(exports, \"TProp\", { enumerable: true, get: function () { return types_2.TProp; } });\nObject.defineProperty(exports, \"TTuple\", { enumerable: true, get: function () { return types_2.TTuple; } });\nObject.defineProperty(exports, \"TType\", { enumerable: true, get: function () { return types_2.TType; } });\nObject.defineProperty(exports, \"TUnion\", { enumerable: true, get: function () { return types_2.TUnion; } });\nObject.defineProperty(exports, \"TIntersection\", { enumerable: true, get: function () { return types_2.TIntersection; } });\nObject.defineProperty(exports, \"array\", { enumerable: true, get: function () { return types_2.array; } });\nObject.defineProperty(exports, \"enumlit\", { enumerable: true, get: function () { return types_2.enumlit; } });\nObject.defineProperty(exports, \"enumtype\", { enumerable: true, get: function () { return types_2.enumtype; } });\nObject.defineProperty(exports, \"func\", { enumerable: true, get: function () { return types_2.func; } });\nObject.defineProperty(exports, \"iface\", { enumerable: true, get: function () { return types_2.iface; } });\nObject.defineProperty(exports, \"lit\", { enumerable: true, get: function () { return types_2.lit; } });\nObject.defineProperty(exports, \"name\", { enumerable: true, get: function () { return types_2.name; } });\nObject.defineProperty(exports, \"opt\", { enumerable: true, get: function () { return types_2.opt; } });\nObject.defineProperty(exports, \"param\", { enumerable: true, get: function () { return types_2.param; } });\nObject.defineProperty(exports, \"tuple\", { enumerable: true, get: function () { return types_2.tuple; } });\nObject.defineProperty(exports, \"union\", { enumerable: true, get: function () { return types_2.union; } });\nObject.defineProperty(exports, \"intersection\", { enumerable: true, get: function () { return types_2.intersection; } });\nObject.defineProperty(exports, \"rest\", { enumerable: true, get: function () { return types_2.rest; } });\nObject.defineProperty(exports, \"indexKey\", { enumerable: true, get: function () { return types_2.indexKey; } });\nObject.defineProperty(exports, \"BasicType\", { enumerable: true, get: function () { return types_2.BasicType; } });\nvar util_2 = require(\"./util\");\nObject.defineProperty(exports, \"VError\", { enumerable: true, get: function () { return util_2.VError; } });\n/**\n * Takes one of more type suites (e.g. a module generated by `ts-interface-builder`), and combines\n * them into a suite of interface checkers. If a type is used by name, that name should be present\n * among the passed-in type suites.\n *\n * The returned object maps type names to Checker objects.\n */\nfunction createCheckers() {\n    var typeSuite = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSuite[_i] = arguments[_i];\n    }\n    var fullSuite = Object.assign.apply(Object, __spreadArrays([{}, types_1.basicTypes], typeSuite));\n    var checkers = {};\n    for (var _a = 0, typeSuite_1 = typeSuite; _a < typeSuite_1.length; _a++) {\n        var suite_1 = typeSuite_1[_a];\n        for (var _b = 0, _c = Object.keys(suite_1); _b < _c.length; _b++) {\n            var name = _c[_b];\n            checkers[name] = new Checker(fullSuite, suite_1[name]);\n        }\n    }\n    return checkers;\n}\nexports.createCheckers = createCheckers;\n/**\n * Checker implements validation of objects, and also includes accessors to validate method calls.\n * Checkers should be created using `createCheckers()`.\n */\nvar Checker = /** @class */ (function () {\n    // Create checkers by using `createCheckers()` function.\n    function Checker(suite, ttype, _path) {\n        if (_path === void 0) { _path = 'value'; }\n        this.suite = suite;\n        this.ttype = ttype;\n        this._path = _path;\n        this.props = new Map();\n        if (ttype instanceof types_1.TIface) {\n            for (var _i = 0, _a = ttype.props; _i < _a.length; _i++) {\n                var p = _a[_i];\n                this.props.set(p.name, p.ttype);\n            }\n        }\n        this.checkerPlain = this.ttype.getChecker(suite, false);\n        this.checkerStrict = this.ttype.getChecker(suite, true);\n    }\n    /**\n     * Set the path to report in errors, instead of the default \"value\". (E.g. if the Checker is for\n     * a \"person\" interface, set path to \"person\" to report e.g. \"person.name is not a string\".)\n     */\n    Checker.prototype.setReportedPath = function (path) {\n        this._path = path;\n    };\n    /**\n     * Check that the given value satisfies this checker's type, or throw Error.\n     */\n    Checker.prototype.check = function (value) { return this._doCheck(this.checkerPlain, value); };\n    /**\n     * A fast check for whether or not the given value satisfies this Checker's type. This returns\n     * true or false, does not produce an error message, and is fast both on success and on failure.\n     */\n    Checker.prototype.test = function (value) {\n        return this.checkerPlain(value, new util_1.NoopContext());\n    };\n    /**\n     * Returns a non-empty array of error objects describing the errors if the given value does not satisfy this\n     * Checker's type, or null if it does.\n     */\n    Checker.prototype.validate = function (value) {\n        return this._doValidate(this.checkerPlain, value);\n    };\n    /**\n     * Check that the given value satisfies this checker's type strictly. This checks that objects\n     * and tuples have no extra members. Note that this prevents backward compatibility, so usually\n     * a plain check() is more appropriate.\n     */\n    Checker.prototype.strictCheck = function (value) { return this._doCheck(this.checkerStrict, value); };\n    /**\n     * A fast strict check for whether or not the given value satisfies this Checker's type. Returns\n     * true or false, does not produce an error message, and is fast both on success and on failure.\n     */\n    Checker.prototype.strictTest = function (value) {\n        return this.checkerStrict(value, new util_1.NoopContext());\n    };\n    /**\n     * Returns a non-empty array of error objects describing the errors if the given value does not satisfy this\n     * Checker's type strictly, or null if it does.\n     */\n    Checker.prototype.strictValidate = function (value) {\n        return this._doValidate(this.checkerStrict, value);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the type required for the given\n     * property of this interface.\n     */\n    Checker.prototype.getProp = function (prop) {\n        var ttype = this.props.get(prop);\n        if (!ttype) {\n            throw new Error(\"Type has no property \" + prop);\n        }\n        return new Checker(this.suite, ttype, this._path + \".\" + prop);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the argument-list required to call\n     * the given method of this interface. E.g. if this Checker is for the interface:\n     *    interface Foo {\n     *      find(s: string, pos?: number): number;\n     *    }\n     * Then methodArgs(\"find\").check(...) will succeed for [\"foo\"] and [\"foo\", 3], but not for [17].\n     */\n    Checker.prototype.methodArgs = function (methodName) {\n        var tfunc = this._getMethod(methodName);\n        return new Checker(this.suite, tfunc.paramList);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the return value of the given\n     * method of this interface.\n     */\n    Checker.prototype.methodResult = function (methodName) {\n        var tfunc = this._getMethod(methodName);\n        return new Checker(this.suite, tfunc.result);\n    };\n    /**\n     * If this checker is for a function, returns a Checker for its argument-list.\n     */\n    Checker.prototype.getArgs = function () {\n        if (!(this.ttype instanceof types_1.TFunc)) {\n            throw new Error(\"getArgs() applied to non-function\");\n        }\n        return new Checker(this.suite, this.ttype.paramList);\n    };\n    /**\n     * If this checker is for a function, returns a Checker for its result.\n     */\n    Checker.prototype.getResult = function () {\n        if (!(this.ttype instanceof types_1.TFunc)) {\n            throw new Error(\"getResult() applied to non-function\");\n        }\n        return new Checker(this.suite, this.ttype.result);\n    };\n    /**\n     * Return the type for which this is a checker.\n     */\n    Checker.prototype.getType = function () {\n        return this.ttype;\n    };\n    /**\n     * Actual implementation of check() and strictCheck().\n     */\n    Checker.prototype._doCheck = function (checkerFunc, value) {\n        var noopCtx = new util_1.NoopContext();\n        if (!checkerFunc(value, noopCtx)) {\n            var detailCtx = new util_1.DetailContext();\n            checkerFunc(value, detailCtx);\n            throw detailCtx.getError(this._path);\n        }\n    };\n    Checker.prototype._doValidate = function (checkerFunc, value) {\n        var noopCtx = new util_1.NoopContext();\n        if (checkerFunc(value, noopCtx)) {\n            return null;\n        }\n        var detailCtx = new util_1.DetailContext();\n        checkerFunc(value, detailCtx);\n        return detailCtx.getErrorDetails(this._path);\n    };\n    Checker.prototype._getMethod = function (methodName) {\n        var ttype = this.props.get(methodName);\n        if (!ttype) {\n            throw new Error(\"Type has no property \" + methodName);\n        }\n        if (!(ttype instanceof types_1.TFunc)) {\n            throw new Error(\"Property \" + methodName + \" is not a method\");\n        }\n        return ttype;\n    };\n    return Checker;\n}());\nexports.Checker = Checker;\n","\"use strict\";\n/**\n * This module defines nodes used to define types and validations for objects and interfaces.\n */\n// tslint:disable:no-shadowed-variable prefer-for-of\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.basicTypes = exports.BasicType = exports.TParamList = exports.TParam = exports.param = exports.TFunc = exports.func = exports.TProp = exports.TOptional = exports.opt = exports.TIface = exports.iface = exports.indexKey = exports.TEnumLiteral = exports.enumlit = exports.TEnumType = exports.enumtype = exports.TIntersection = exports.intersection = exports.TUnion = exports.union = exports.TTuple = exports.tuple = exports.RestType = exports.rest = exports.TArray = exports.array = exports.TLiteral = exports.lit = exports.TName = exports.name = exports.TType = void 0;\nvar util_1 = require(\"./util\");\n/** Node that represents a type. */\nvar TType = /** @class */ (function () {\n    function TType() {\n    }\n    return TType;\n}());\nexports.TType = TType;\n/** Parses a type spec into a TType node. */\nfunction parseSpec(typeSpec) {\n    return typeof typeSpec === \"string\" ? name(typeSpec) : typeSpec;\n}\nfunction getNamedType(suite, name) {\n    var ttype = suite[name];\n    if (!ttype) {\n        throw new Error(\"Unknown type \" + name);\n    }\n    return ttype;\n}\n/**\n * Defines a type name, either built-in, or defined in this suite. It can typically be included in\n * the specs as just a plain string.\n */\nfunction name(value) { return new TName(value); }\nexports.name = name;\nvar TName = /** @class */ (function (_super) {\n    __extends(TName, _super);\n    function TName(name) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this._failMsg = \"is not a \" + name;\n        return _this;\n    }\n    TName.prototype.getChecker = function (suite, strict, allowedProps) {\n        // Using names, we can reference a type recursively in its own definition. To avoid an\n        // infinite recursion in getChecker() calls, we cache and reuse the checker that's being built\n        // when it references its own TName node. Note that it's important to reuse the result only\n        // when getChecker() is called with the same arguments, but that's already guaranteed because\n        // we are caching only for the current call and only for the same TName object (not another\n        // instance of name() call for the same name).\n        //\n        // Note also that this is about handling recursive types; it does NOT help validating data\n        // with circular references.\n        var checkerFunc = this._checkerBeingBuilt;\n        if (!checkerFunc) {\n            this._checkerBeingBuilt = function (value, ctx) { return checkerFunc(value, ctx); };\n            try {\n                checkerFunc = this._getChecker(suite, strict, allowedProps);\n            }\n            finally {\n                this._checkerBeingBuilt = undefined;\n            }\n        }\n        return checkerFunc;\n    };\n    TName.prototype._getChecker = function (suite, strict, allowedProps) {\n        var _this = this;\n        var ttype = getNamedType(suite, this.name);\n        var checker = ttype.getChecker(suite, strict, allowedProps);\n        if (ttype instanceof BasicType || ttype instanceof TName) {\n            return checker;\n        }\n        // For complex types, add an additional \"is not a <Type>\" message on failure.\n        return function (value, ctx) { return checker(value, ctx) ? true : ctx.fail(null, _this._failMsg, 0); };\n    };\n    return TName;\n}(TType));\nexports.TName = TName;\n/**\n * Defines a literal value, e.g. lit('hello') or lit(123).\n */\nfunction lit(value) { return new TLiteral(value); }\nexports.lit = lit;\nvar TLiteral = /** @class */ (function (_super) {\n    __extends(TLiteral, _super);\n    function TLiteral(value) {\n        var _this = _super.call(this) || this;\n        _this.value = value;\n        _this.name = JSON.stringify(value);\n        _this._failMsg = \"is not \" + _this.name;\n        return _this;\n    }\n    TLiteral.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        return function (value, ctx) { return (value === _this.value) ? true : ctx.fail(null, _this._failMsg, -1); };\n    };\n    return TLiteral;\n}(TType));\nexports.TLiteral = TLiteral;\n/**\n * Defines an array type, e.g. array('number').\n */\nfunction array(typeSpec) { return new TArray(parseSpec(typeSpec)); }\nexports.array = array;\nvar TArray = /** @class */ (function (_super) {\n    __extends(TArray, _super);\n    function TArray(ttype) {\n        var _this = _super.call(this) || this;\n        _this.ttype = ttype;\n        var elementTypeName = getTypeName(ttype);\n        if (elementTypeName) {\n            _this.name = elementTypeName + \"[]\";\n        }\n        return _this;\n    }\n    TArray.prototype.getChecker = function (suite, strict) {\n        var itemChecker = this.ttype.getChecker(suite, strict);\n        return function (value, ctx) {\n            if (!Array.isArray(value)) {\n                return ctx.fail(null, \"is not an array\", 0);\n            }\n            for (var i = 0; i < value.length; i++) {\n                var ok = itemChecker(value[i], ctx);\n                if (!ok) {\n                    return ctx.fail(i, null, 1);\n                }\n            }\n            return true;\n        };\n    };\n    return TArray;\n}(TType));\nexports.TArray = TArray;\n/**\n * Defines a rest type, e.g. tuple('string', rest(array('number'))).\n */\nfunction rest(typeSpec) {\n    return new RestType(typeSpec);\n}\nexports.rest = rest;\nvar RestType = /** @class */ (function (_super) {\n    __extends(RestType, _super);\n    function RestType(typeSpec) {\n        var _this = _super.call(this) || this;\n        _this.typeSpec = typeSpec;\n        return _this;\n    }\n    RestType.prototype.setStart = function (start) {\n        this._start = start;\n    };\n    RestType.prototype.getChecker = function (suite, strict) {\n        var arrType = typeof this.typeSpec === \"string\" ? getNamedType(suite, this.typeSpec) : this.typeSpec;\n        if (!(arrType instanceof TArray)) {\n            throw new Error(\"Rest type must be an array\");\n        }\n        var itemChecker = arrType.ttype.getChecker(suite, strict);\n        var start = this._start;\n        return function (value, ctx) {\n            for (var i = start; i < value.length; i++) {\n                if (!itemChecker(value[i], ctx)) {\n                    return ctx.fail(i, null, 1);\n                }\n            }\n            return true;\n        };\n    };\n    return RestType;\n}(TType));\nexports.RestType = RestType;\n/**\n * Defines a tuple type, e.g. tuple('string', 'number').\n */\nfunction tuple() {\n    var typeSpec = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSpec[_i] = arguments[_i];\n    }\n    return new TTuple(typeSpec.map(function (t) { return parseSpec(t); }));\n}\nexports.tuple = tuple;\nvar TTuple = /** @class */ (function (_super) {\n    __extends(TTuple, _super);\n    function TTuple(ttypes) {\n        var _this = _super.call(this) || this;\n        _this.ttypes = ttypes;\n        var last = ttypes[ttypes.length - 1];\n        if (last instanceof RestType) {\n            ttypes.pop();\n            _this._restType = last;\n            _this._restType.setStart(ttypes.length);\n        }\n        return _this;\n    }\n    TTuple.prototype.getChecker = function (suite, strict) {\n        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict); });\n        var checker = function (value, ctx) {\n            if (!Array.isArray(value)) {\n                return ctx.fail(null, \"is not an array\", 0);\n            }\n            for (var i = 0; i < itemCheckers.length; i++) {\n                var ok = itemCheckers[i](value[i], ctx);\n                if (!ok) {\n                    return ctx.fail(i, null, 1);\n                }\n            }\n            return true;\n        };\n        if (this._restType) {\n            var restChecker_1 = this._restType.getChecker(suite, strict);\n            return function (value, ctx) {\n                return checker(value, ctx) && restChecker_1(value, ctx);\n            };\n        }\n        if (!strict) {\n            return checker;\n        }\n        return function (value, ctx) {\n            if (!checker(value, ctx)) {\n                return false;\n            }\n            return value.length <= itemCheckers.length ? true :\n                ctx.fail(itemCheckers.length, \"is extraneous\", 2);\n        };\n    };\n    return TTuple;\n}(TType));\nexports.TTuple = TTuple;\n/**\n * Defines a union type, e.g. union('number', 'null').\n */\nfunction union() {\n    var typeSpec = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSpec[_i] = arguments[_i];\n    }\n    return new TUnion(typeSpec.map(function (t) { return parseSpec(t); }));\n}\nexports.union = union;\nvar TUnion = /** @class */ (function (_super) {\n    __extends(TUnion, _super);\n    function TUnion(ttypes) {\n        var _this = _super.call(this) || this;\n        _this.ttypes = ttypes;\n        var names = ttypes.map(getTypeName)\n            .filter(function (n) { return n; });\n        var otherTypes = ttypes.length - names.length;\n        if (names.length) {\n            if (otherTypes > 0) {\n                names.push(otherTypes + \" more\");\n            }\n            _this._failMsg = \"is none of \" + names.join(\", \");\n        }\n        else {\n            _this._failMsg = \"is none of \" + otherTypes + \" types\";\n        }\n        return _this;\n    }\n    TUnion.prototype.getChecker = function (suite, strict, allowedProps) {\n        var _this = this;\n        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict, allowedProps); });\n        return function (value, ctx) {\n            var ur = ctx.unionResolver();\n            for (var i = 0; i < itemCheckers.length; i++) {\n                var ok = itemCheckers[i](value, ur.createContext());\n                if (ok) {\n                    return true;\n                }\n            }\n            ctx.resolveUnion(ur);\n            return ctx.fail(null, _this._failMsg, 0);\n        };\n    };\n    return TUnion;\n}(TType));\nexports.TUnion = TUnion;\n/**\n * Defines an intersection type, e.g. intersection('number', 'null').\n */\nfunction intersection() {\n    var typeSpec = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSpec[_i] = arguments[_i];\n    }\n    return new TIntersection(typeSpec.map(function (t) { return parseSpec(t); }));\n}\nexports.intersection = intersection;\nvar TIntersection = /** @class */ (function (_super) {\n    __extends(TIntersection, _super);\n    function TIntersection(ttypes) {\n        var _this = _super.call(this) || this;\n        _this.ttypes = ttypes;\n        return _this;\n    }\n    TIntersection.prototype.getChecker = function (suite, strict, allowedProps) {\n        if (allowedProps === void 0) { allowedProps = new Set(); }\n        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict, allowedProps); });\n        return function (value, ctx) {\n            return itemCheckers.every(function (checker) {\n                checker(value, ctx.fork());\n                return ctx.completeFork();\n            }) && !ctx.failed();\n        };\n    };\n    return TIntersection;\n}(TType));\nexports.TIntersection = TIntersection;\n/**\n * Defines an enum type, e.g. enum({'A': 1, 'B': 2}).\n */\nfunction enumtype(values) {\n    return new TEnumType(values);\n}\nexports.enumtype = enumtype;\nvar TEnumType = /** @class */ (function (_super) {\n    __extends(TEnumType, _super);\n    function TEnumType(members) {\n        var _this = _super.call(this) || this;\n        _this.members = members;\n        _this.validValues = new Set();\n        _this._failMsg = \"is not a valid enum value\";\n        _this.validValues = new Set(Object.keys(members).map(function (name) { return members[name]; }));\n        return _this;\n    }\n    TEnumType.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        return function (value, ctx) {\n            return (_this.validValues.has(value) ? true : ctx.fail(null, _this._failMsg, 0));\n        };\n    };\n    return TEnumType;\n}(TType));\nexports.TEnumType = TEnumType;\n/**\n * Defines a literal enum value, such as Direction.Up, specified as enumlit(\"Direction\", \"Up\").\n */\nfunction enumlit(name, prop) {\n    return new TEnumLiteral(name, prop);\n}\nexports.enumlit = enumlit;\nvar TEnumLiteral = /** @class */ (function (_super) {\n    __extends(TEnumLiteral, _super);\n    function TEnumLiteral(enumName, prop) {\n        var _this = _super.call(this) || this;\n        _this.enumName = enumName;\n        _this.prop = prop;\n        _this._failMsg = \"is not \" + enumName + \".\" + prop;\n        return _this;\n    }\n    TEnumLiteral.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        var ttype = getNamedType(suite, this.enumName);\n        if (!(ttype instanceof TEnumType)) {\n            throw new Error(\"Type \" + this.enumName + \" used in enumlit is not an enum type\");\n        }\n        var val = ttype.members[this.prop];\n        if (!ttype.members.hasOwnProperty(this.prop)) {\n            throw new Error(\"Unknown value \" + this.enumName + \".\" + this.prop + \" used in enumlit\");\n        }\n        return function (value, ctx) { return (value === val) ? true : ctx.fail(null, _this._failMsg, -1); };\n    };\n    return TEnumLiteral;\n}(TType));\nexports.TEnumLiteral = TEnumLiteral;\nfunction makeIfaceProps(props) {\n    return Object.keys(props)\n        .filter(function (name) { return (name !== exports.indexKey); })\n        .map(function (name) { return makeIfaceProp(name, props[name]); });\n}\nfunction makeIfaceProp(name, prop) {\n    return prop instanceof TOptional ?\n        new TProp(name, prop.ttype, true) :\n        new TProp(name, parseSpec(prop), false);\n}\n/**\n * indexKey is a special key that indicates an index signature when used as a key in an interface.\n * E.g. {[key: string]: number} becomes t.iface([], {[t.indexKey]: \"number\"}).\n *\n * We don't distinguish between string- and number-type index signatures, and don't support\n * multiple index signatures.\n */\nexports.indexKey = Symbol();\n/**\n * Defines an interface. The first argument is an array of interfaces that it extends, and the\n * second is an array of properties.\n */\nfunction iface(bases, props) {\n    return new TIface(bases, makeIfaceProps(props), props[exports.indexKey]);\n}\nexports.iface = iface;\nvar TIface = /** @class */ (function (_super) {\n    __extends(TIface, _super);\n    function TIface(bases, props, indexType) {\n        var _this = _super.call(this) || this;\n        _this.bases = bases;\n        _this.props = props;\n        _this.indexType = indexType ? parseSpec(indexType) : undefined;\n        _this.propSet = new Set(props.map(function (p) { return p.name; }));\n        return _this;\n    }\n    TIface.prototype.getChecker = function (suite, strict, allowedProps) {\n        var _this = this;\n        var _a;\n        if (allowedProps === void 0) { allowedProps = new Set(); }\n        this.propSet.forEach(function (prop) { return allowedProps.add(prop); });\n        var baseCheckers = this.bases.map(function (b) { return getNamedType(suite, b).getChecker(suite, strict, allowedProps); });\n        var propCheckers = this.props.map(function (prop) { return prop.ttype.getChecker(suite, strict); });\n        var indexTypeChecker = (_a = this.indexType) === null || _a === void 0 ? void 0 : _a.getChecker(suite, strict);\n        var testCtx = new util_1.NoopContext();\n        // Consider a prop required if it's not optional AND does not allow for undefined as a value.\n        var isPropRequired = this.props.map(function (prop, i) {\n            return !prop.isOpt && !propCheckers[i](undefined, testCtx);\n        });\n        return function (value, ctx) {\n            if (typeof value !== \"object\" || value === null) {\n                return ctx.fail(null, \"is not an object\", 0);\n            }\n            for (var i = 0; i < baseCheckers.length; i++) {\n                baseCheckers[i](value, ctx.fork());\n                if (!ctx.completeFork()) {\n                    return false;\n                }\n            }\n            for (var i = 0; i < propCheckers.length; i++) {\n                var name_1 = _this.props[i].name;\n                var v = value[name_1];\n                if (v === undefined) {\n                    if (isPropRequired[i]) {\n                        ctx.fork().fail(name_1, \"is missing\", 1);\n                        if (!ctx.completeFork()) {\n                            return false;\n                        }\n                    }\n                }\n                else {\n                    var fork = ctx.fork();\n                    var ok = propCheckers[i](v, fork);\n                    if (!ok) {\n                        fork.fail(name_1, null, 1);\n                    }\n                    if (!ctx.completeFork()) {\n                        return false;\n                    }\n                }\n            }\n            if (indexTypeChecker) {\n                for (var prop in value) {\n                    var fork = ctx.fork();\n                    if (!indexTypeChecker(value[prop], fork)) {\n                        fork.fail(prop, null, 1);\n                    }\n                    if (!ctx.completeFork()) {\n                        return false;\n                    }\n                }\n            }\n            else if (strict) {\n                // In strict mode, check also for unknown enumerable properties.\n                for (var prop in value) {\n                    if (!allowedProps.has(prop)) {\n                        ctx.fork().fail(prop, \"is extraneous\", 2);\n                        if (!ctx.completeFork()) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return !ctx.failed();\n        };\n    };\n    return TIface;\n}(TType));\nexports.TIface = TIface;\n/**\n * Defines an optional property on an interface.\n */\nfunction opt(typeSpec) { return new TOptional(parseSpec(typeSpec)); }\nexports.opt = opt;\nvar TOptional = /** @class */ (function (_super) {\n    __extends(TOptional, _super);\n    function TOptional(ttype) {\n        var _this = _super.call(this) || this;\n        _this.ttype = ttype;\n        return _this;\n    }\n    TOptional.prototype.getChecker = function (suite, strict) {\n        var itemChecker = this.ttype.getChecker(suite, strict);\n        return function (value, ctx) {\n            return value === undefined || itemChecker(value, ctx);\n        };\n    };\n    return TOptional;\n}(TType));\nexports.TOptional = TOptional;\n/**\n * Defines a property in an interface.\n */\nvar TProp = /** @class */ (function () {\n    function TProp(name, ttype, isOpt) {\n        this.name = name;\n        this.ttype = ttype;\n        this.isOpt = isOpt;\n    }\n    return TProp;\n}());\nexports.TProp = TProp;\n/**\n * Defines a function. The first argument declares the function's return type, the rest declare\n * its parameters.\n */\nfunction func(resultSpec) {\n    var params = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        params[_i - 1] = arguments[_i];\n    }\n    return new TFunc(new TParamList(params), parseSpec(resultSpec));\n}\nexports.func = func;\nvar TFunc = /** @class */ (function (_super) {\n    __extends(TFunc, _super);\n    function TFunc(paramList, result) {\n        var _this = _super.call(this) || this;\n        _this.paramList = paramList;\n        _this.result = result;\n        return _this;\n    }\n    TFunc.prototype.getChecker = function (suite, strict) {\n        return function (value, ctx) {\n            return typeof value === \"function\" ? true : ctx.fail(null, \"is not a function\", 0);\n        };\n    };\n    return TFunc;\n}(TType));\nexports.TFunc = TFunc;\n/**\n * Defines a function parameter.\n */\nfunction param(name, typeSpec, isOpt) {\n    return new TParam(name, parseSpec(typeSpec), Boolean(isOpt));\n}\nexports.param = param;\nvar TParam = /** @class */ (function () {\n    function TParam(name, ttype, isOpt) {\n        this.name = name;\n        this.ttype = ttype;\n        this.isOpt = isOpt;\n    }\n    return TParam;\n}());\nexports.TParam = TParam;\n/**\n * Defines a function parameter list.\n */\nvar TParamList = /** @class */ (function (_super) {\n    __extends(TParamList, _super);\n    function TParamList(params) {\n        var _this = _super.call(this) || this;\n        _this.params = params;\n        return _this;\n    }\n    TParamList.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        var itemCheckers = this.params.map(function (t) { return t.ttype.getChecker(suite, strict); });\n        var testCtx = new util_1.NoopContext();\n        var isParamRequired = this.params.map(function (param, i) {\n            return !param.isOpt && !itemCheckers[i](undefined, testCtx);\n        });\n        var checker = function (value, ctx) {\n            if (!Array.isArray(value)) {\n                return ctx.fail(null, \"is not an array\", 0);\n            }\n            for (var i = 0; i < itemCheckers.length; i++) {\n                var p = _this.params[i];\n                if (value[i] === undefined) {\n                    if (isParamRequired[i]) {\n                        return ctx.fail(p.name, \"is missing\", 1);\n                    }\n                }\n                else {\n                    var ok = itemCheckers[i](value[i], ctx);\n                    if (!ok) {\n                        return ctx.fail(p.name, null, 1);\n                    }\n                }\n            }\n            return true;\n        };\n        if (!strict) {\n            return checker;\n        }\n        return function (value, ctx) {\n            if (!checker(value, ctx)) {\n                return false;\n            }\n            return value.length <= itemCheckers.length ? true :\n                ctx.fail(itemCheckers.length, \"is extraneous\", 2);\n        };\n    };\n    return TParamList;\n}(TType));\nexports.TParamList = TParamList;\n/**\n * Single TType implementation for all basic built-in types.\n */\nvar BasicType = /** @class */ (function (_super) {\n    __extends(BasicType, _super);\n    function BasicType(validator, message) {\n        var _this = _super.call(this) || this;\n        _this.validator = validator;\n        _this.message = message;\n        return _this;\n    }\n    BasicType.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        return function (value, ctx) { return _this.validator(value) ? true : ctx.fail(null, _this.message, 0); };\n    };\n    return BasicType;\n}(TType));\nexports.BasicType = BasicType;\n/**\n * Defines the suite of basic types.\n */\nexports.basicTypes = {\n    any: new BasicType(function (v) { return true; }, \"is invalid\"),\n    unknown: new BasicType(function (v) { return true; }, \"is invalid\"),\n    number: new BasicType(function (v) { return (typeof v === \"number\"); }, \"is not a number\"),\n    object: new BasicType(function (v) { return (typeof v === \"object\" && v); }, \"is not an object\"),\n    boolean: new BasicType(function (v) { return (typeof v === \"boolean\"); }, \"is not a boolean\"),\n    string: new BasicType(function (v) { return (typeof v === \"string\"); }, \"is not a string\"),\n    symbol: new BasicType(function (v) { return (typeof v === \"symbol\"); }, \"is not a symbol\"),\n    void: new BasicType(function (v) { return (v == null); }, \"is not void\"),\n    undefined: new BasicType(function (v) { return (v === undefined); }, \"is not undefined\"),\n    null: new BasicType(function (v) { return (v === null); }, \"is not null\"),\n    never: new BasicType(function (v) { return false; }, \"is unexpected\"),\n    Date: new BasicType(getIsNativeChecker(\"[object Date]\"), \"is not a Date\"),\n    RegExp: new BasicType(getIsNativeChecker(\"[object RegExp]\"), \"is not a RegExp\"),\n};\n// This approach for checking native object types mirrors that of lodash. Its advantage over\n// `isinstance` is that it can still return true for native objects created in different JS\n// execution environments.\nvar nativeToString = Object.prototype.toString;\nfunction getIsNativeChecker(tag) {\n    return function (v) { return typeof v === \"object\" && v && nativeToString.call(v) === tag; };\n}\nif (typeof Buffer !== \"undefined\") {\n    exports.basicTypes.Buffer = new BasicType(function (v) { return Buffer.isBuffer(v); }, \"is not a Buffer\");\n}\nvar _loop_1 = function (array_1) {\n    exports.basicTypes[array_1.name] = new BasicType(function (v) { return (v instanceof array_1); }, \"is not a \" + array_1.name);\n};\n// Support typed arrays of various flavors\nfor (var _i = 0, _a = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array,\n    Int32Array, Uint32Array, Float32Array, Float64Array, ArrayBuffer]; _i < _a.length; _i++) {\n    var array_1 = _a[_i];\n    _loop_1(array_1);\n}\nfunction getTypeName(t) {\n    if (t instanceof TName || t instanceof TLiteral || t instanceof TArray) {\n        return t.name;\n    }\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetailContext = exports.NoopContext = exports.VError = void 0;\n/**\n * Error thrown by validation. Besides an informative message, it includes the path to the\n * property which triggered the failure.\n */\nvar VError = /** @class */ (function (_super) {\n    __extends(VError, _super);\n    function VError(path, message) {\n        var _this = _super.call(this, message) || this;\n        _this.path = path;\n        // See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work for info about this workaround.\n        Object.setPrototypeOf(_this, VError.prototype);\n        return _this;\n    }\n    return VError;\n}(Error));\nexports.VError = VError;\n/**\n * Fast implementation of IContext used for first-pass validation. If that fails, we can validate\n * using DetailContext to collect error messages. That's faster for the common case when messages\n * normally pass validation.\n */\nvar NoopContext = /** @class */ (function () {\n    function NoopContext() {\n        this._failed = false;\n    }\n    NoopContext.prototype.fail = function (relPath, message, score) {\n        this._failed = true;\n        return false;\n    };\n    NoopContext.prototype.fork = function () {\n        return this;\n    };\n    NoopContext.prototype.completeFork = function () {\n        return !this._failed;\n    };\n    NoopContext.prototype.failed = function () {\n        return this._failed;\n    };\n    NoopContext.prototype.unionResolver = function () { return this; };\n    NoopContext.prototype.createContext = function () {\n        this._failed = false;\n        return this;\n    };\n    NoopContext.prototype.resolveUnion = function (ur) { };\n    return NoopContext;\n}());\nexports.NoopContext = NoopContext;\n/**\n * Complete implementation of IContext that collects meaningfull errors.\n */\nvar DetailContext = /** @class */ (function () {\n    function DetailContext() {\n        // Stack of property names and associated messages for reporting helpful error messages.\n        this._propNames = [];\n        this._messages = [];\n        /** Contexts created by fork() which have completed and contain failures */\n        this._failedForks = [];\n        /**\n         * Contains the context returned by fork() which should be checked until\n         * completeFork() is called.\n         * Will be reused for the next fork() if there are no failures.\n         */\n        this._currentFork = null;\n        // Score is used to choose the best union member whose DetailContext to use for reporting.\n        // Higher score means better match (or rather less severe mismatch).\n        this._score = 0;\n    }\n    DetailContext.prototype.fail = function (relPath, message, score) {\n        this._propNames.push(relPath);\n        this._messages.push(message);\n        this._score += score;\n        return false;\n    };\n    DetailContext.prototype.unionResolver = function () {\n        return new DetailUnionResolver();\n    };\n    DetailContext.prototype.resolveUnion = function (unionResolver) {\n        var _a, _b, _c;\n        var u = unionResolver;\n        var best = null;\n        for (var _i = 0, _d = u.contexts; _i < _d.length; _i++) {\n            var ctx = _d[_i];\n            if (!best || ctx._score >= best._score) {\n                best = ctx;\n            }\n        }\n        if (best && best._score > 0) {\n            (_a = this._propNames).push.apply(_a, best._propNames);\n            (_b = this._messages).push.apply(_b, best._messages);\n            (_c = this._failedForks).push.apply(_c, best._failedForks);\n        }\n    };\n    DetailContext.prototype.getError = function (path) {\n        var fullMessage = flatten(this.getErrorDetails(path).map(errorLines))\n            .join(\"\\n\");\n        return new VError(path, fullMessage);\n    };\n    DetailContext.prototype.getErrorDetails = function (path) {\n        var detail = null;\n        var nested;\n        var details = [];\n        // As checkers call fail() and return to their parent checkers,\n        // the deepest failures are recorded first.\n        // Go through failures in reverse to start from the root type\n        for (var i = this._propNames.length - 1; i >= 0; i--) {\n            var p = this._propNames[i];\n            path += (typeof p === \"number\") ? \"[\" + p + \"]\" : (p ? \".\" + p : \"\");\n            var message = this._messages[i];\n            if (!message) {\n                continue;\n            }\n            nested = { path: path, message: message };\n            if (detail) {\n                detail.nested = [nested];\n            }\n            else {\n                // This is the root failure, so it will be returned\n                details.push(nested);\n            }\n            // Move into the deeper error\n            detail = nested;\n        }\n        var forkErrors = flatten(this._failedForks.map(function (fork) { return fork.getErrorDetails(path); }));\n        if (detail) {\n            // don't put an empty array in detail.nested\n            if (forkErrors.length) {\n                // detail is the deepest nested error, so detail.nested is null at this point\n                detail.nested = forkErrors;\n            }\n        }\n        else {\n            // There were no 'plain' failures, only fork failures\n            details = forkErrors;\n        }\n        return details;\n    };\n    DetailContext.prototype.fork = function () {\n        if (this._currentFork == null) {\n            this._currentFork = new DetailContext();\n        }\n        return this._currentFork;\n    };\n    DetailContext.prototype.completeFork = function () {\n        var fork = this._currentFork;\n        if (fork._failed()) {\n            this._failedForks.push(fork);\n            this._currentFork = null;\n            // To preserve old behaviour, use the score of the first failure\n            // Might want to revise this\n            if (this._failedForks.length === 1) {\n                this._score = fork._score;\n            }\n        }\n        return this._failedForks.length < DetailContext.maxForks;\n    };\n    // failed() is the public interface,\n    // it gets monkeypatched to ensure correct usage in checkers.\n    // _failed() may be called internally\n    // in ways which would fail the monkeypatched assertions.\n    DetailContext.prototype.failed = function () {\n        return this._failed();\n    };\n    DetailContext.prototype._failed = function () {\n        return this._propNames.length + this._failedForks.length > 0;\n    };\n    /**\n     * Maximum number of errors recorded at one level for an object,\n     * i.e. the maximum length of Checker.validate() or IErrorDetail.nested.\n     */\n    // If _failedForks has this length then completeFork() should return false\n    // so that the checker stops making more forks.\n    DetailContext.maxForks = 3;\n    return DetailContext;\n}());\nexports.DetailContext = DetailContext;\nvar DetailUnionResolver = /** @class */ (function () {\n    function DetailUnionResolver() {\n        this.contexts = [];\n    }\n    DetailUnionResolver.prototype.createContext = function () {\n        var ctx = new DetailContext();\n        this.contexts.push(ctx);\n        return ctx;\n    };\n    return DetailUnionResolver;\n}());\n/**\n * Returns lines of a message describing `error`.\n * The lines should be newline separated in the final message.\n * Only returns multiple lines if `error` or a descendant\n * has multiple errors in its `.nested` array.\n * Simple paths of nested errors anywhere in the tree\n * are collapsed into a single line until a branch is reached.\n */\nvar errorLines = function (error) {\n    var rootMessage = error.path + \" \" + error.message;\n    var nestedErrors = error.nested || [];\n    var nestedLines = flatten(nestedErrors.map(errorLines));\n    if (nestedErrors.length == 1) {\n        // Single nested errors are collapsed into the first line,\n        // but they may have branches deeper down leading to more lines\n        // which are already indented\n        var first = nestedLines[0], rest = nestedLines.slice(1);\n        return __spreadArrays([\n            rootMessage + \"; \" + first\n        ], rest);\n    }\n    else {\n        // Indent messages from nested errors\n        // or just return [rootMessage] if there are no nested errors\n        return __spreadArrays([\n            rootMessage\n        ], nestedLines.map(function (line) { return \"    \" + line; }));\n    }\n};\n/** Shallow flatten a 2D array into a 1D array */\nfunction flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, arr);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// Provide a way to access grist for iframe, web worker (which runs the main safeBrowser script) and\n// unsafeNode. WebView should work the same way as iframe, grist is exposed just the same way and\n// necessary api is exposed using preload script. Here we bootstrap from channel capabilities to key\n// parts of the grist API.\n\n// For iframe (and webview):\n// user will add '<script src=\"/grist-api.js\"></script>' and get a window.grist\n\n// For web worker:\n// use will add `self.importScripts('/grist-api.js');`\n\n// For node, user will do something like:\n//   const {grist} = require('grist-api');\n//   grist.registerFunction();\n// In TypeScript:\n//   import {grist} from 'grist-api';\n//   grist.registerFunction();\n\n// tslint:disable:no-console\n\nimport { ColumnsToMap, CustomSectionAPI, InteractionOptions, InteractionOptionsRequest,\n         WidgetColumnMap } from './CustomSectionAPI';\nimport { AccessTokenOptions, AccessTokenResult, GristAPI, GristDocAPI,\n         GristView, RPC_GRISTAPI_INTERFACE } from './GristAPI';\nimport { RowRecord } from './GristData';\nimport { ImportSource, ImportSourceAPI, InternalImportSourceAPI } from './InternalImportSourceAPI';\nimport { decodeObject, mapValues } from './objtypes';\nimport { RenderOptions, RenderTarget } from './RenderOptions';\nimport { TableOperations } from './TableOperations';\nimport { TableOperationsImpl } from './TableOperationsImpl';\nimport { checkers } from './TypeCheckers';\nimport { WidgetAPI } from './WidgetAPI';\n\nexport * from './TypeCheckers';\nexport * from './FileParserAPI';\nexport * from './GristAPI';\nexport * from './GristData';\nexport * from './GristTable';\nexport * from './ImportSourceAPI';\nexport * from './StorageAPI';\nexport * from './RenderOptions';\nexport * from './WidgetAPI';\nexport * from './CustomSectionAPI';\n\nimport {IRpcLogger, Rpc} from 'grain-rpc';\n\nexport const rpc: Rpc = new Rpc({logger: createRpcLogger()});\n\nexport const api = rpc.getStub<GristAPI>(RPC_GRISTAPI_INTERFACE, checkers.GristAPI);\nexport const coreDocApi = rpc.getStub<GristDocAPI>('GristDocAPI@grist', checkers.GristDocAPI);\n\n/**\n * Interface for the records backing a custom widget.\n */\nexport const viewApi = rpc.getStub<GristView>('GristView', checkers.GristView);\n\n/**\n * Interface for the state of a custom widget.\n */\nexport const widgetApi = rpc.getStub<WidgetAPI>('WidgetAPI', checkers.WidgetAPI);\n\n/**\n * Interface for the mapping of a custom widget.\n */\nexport const sectionApi = rpc.getStub<CustomSectionAPI>('CustomSectionAPI', checkers.CustomSectionAPI);\n\n/**\n * Shortcut for [[GristView.allowSelectBy]].\n */\nexport const allowSelectBy = viewApi.allowSelectBy;\n\n/**\n * Shortcut for [[GristView.setSelectedRows]].\n */\nexport const setSelectedRows = viewApi.setSelectedRows;\n\n\nexport const setCursorPos = viewApi.setCursorPos;\n\n\n\n/**\n * Fetches data backing the widget as for [[GristView.fetchSelectedTable]],\n * but decoding data by default, replacing e.g. ['D', timestamp] with\n * a moment date. Option `keepEncoded` skips the decoding step.\n */\n export async function fetchSelectedTable(options: {keepEncoded?: boolean} = {}) {\n  const table = await viewApi.fetchSelectedTable();\n  return options.keepEncoded ? table :\n    mapValues<any[], any[]>(table, (col) => col.map(decodeObject));\n}\n\n/**\n * Fetches current selected record as for [[GristView.fetchSelectedRecord]],\n * but decoding data by default, replacing e.g. ['D', timestamp] with\n * a moment date. Option `keepEncoded` skips the decoding step.\n */\nexport async function fetchSelectedRecord(rowId: number, options: {keepEncoded?: boolean} = {}) {\n  const rec = await viewApi.fetchSelectedRecord(rowId);\n  return options.keepEncoded ? rec :\n    mapValues(rec, decodeObject);\n}\n\n\n/**\n * A collection of methods for fetching document data. The\n * fetchSelectedTable and fetchSelectedRecord methods are\n * overridden to decode data by default.\n */\nexport const docApi: GristDocAPI & GristView = {\n  ...coreDocApi,\n  ...viewApi,\n  fetchSelectedTable,\n  fetchSelectedRecord,\n};\n\nexport const on = rpc.on.bind(rpc);\n\n// Exposing widgetApi methods in a module scope.\n\n/**\n * Shortcut for [[WidgetAPI.getOption]]\n */\nexport const getOption = widgetApi.getOption.bind(widgetApi);\n\n/**\n * Shortcut for [[WidgetAPI.setOption]]\n */\nexport const setOption = widgetApi.setOption.bind(widgetApi);\n\n/**\n * Shortcut for [[WidgetAPI.setOptions]]\n */\nexport const setOptions = widgetApi.setOptions.bind(widgetApi);\n\n/**\n * Shortcut for [[WidgetAPI.getOptions]]\n */\nexport const getOptions = widgetApi.getOptions.bind(widgetApi);\n\n/**\n * Shortcut for [[WidgetAPI.clearOptions]]\n */\nexport const clearOptions = widgetApi.clearOptions.bind(widgetApi);\n\n/**\n * Get access to a table in the document. If no tableId specified, this\n * will use the current selected table (for custom widgets).\n * If a table does not exist, there will be no error until an operation\n * on the table is attempted.\n */\nexport function getTable(tableId?: string): TableOperations {\n  return new TableOperationsImpl({\n    async getTableId() {\n      return tableId || await getSelectedTableId();\n    },\n    throwError(verb, text, status) {\n      throw new Error(text);\n    },\n    applyUserActions(actions, opts) {\n      return docApi.applyUserActions(actions, opts);\n    },\n  }, {});\n}\n\n/**\n * Get an access token, for making API calls outside of the custom widget\n * API. There is no caching of tokens. The returned token can\n * be used to authorize regular REST API calls that access the content of the\n * document. For example, in a custom widget for a table with a `Photos` column\n * containing attachments, the following code will update the `src` of an\n * image with id `the_image` to show the attachment:\n * ```js\n * grist.onRecord(async (record) => {\n *   const tokenInfo = await grist.docApi.getAccessToken({readOnly: true});\n *   const img = document.getElementById('the_image');\n *   const id = record.Photos[0];  // get an id of an attachment - there could be several\n *                                 // in a cell, for this example we just take the first.\n *   const src = `${tokenInfo.baseUrl}/attachments/${id}/download?auth=${tokenInfo.token}`;\n *   img.setAttribute('src', src);\n * });\n * ```\n */\nexport async function getAccessToken(options?: AccessTokenOptions): Promise<AccessTokenResult> {\n  return docApi.getAccessToken(options || {});\n}\n\n/**\n * Get the current selected table (for custom widgets).\n */\nexport const selectedTable: TableOperations = getTable();\n\n// Get the ID of the current selected table (for custom widgets).\n// Will wait for the table ID to be set.\nexport async function getSelectedTableId(): Promise<string> {\n  await _initialization;\n  return _tableId!;\n}\n\n// Get the ID of the current selected table if set (for custom widgets).\n// The ID may take some time to be set, or may never be set if the widget\n// is not linked to anything.\nexport function getSelectedTableIdSync(): string|undefined {\n  return _tableId;\n}\n\n// For custom widgets that support custom columns mappings store current configuration\n// in a memory.\n\n// Actual cached value. Undefined means that widget hasn't asked for configuration yet.\n// Here we are storing serialized configuration instead of actual one, since widget can\n// mutate returned value.\nlet _mappingsCache: WidgetColumnMap|null|undefined;\n// Since widget needs to ask for mappings during onRecord and onRecords event, we will reuse\n// current request if available;\nlet _activeRefreshReq: Promise<void>|null = null;\n// Remember columns requested during ready call.\nlet _columnsToMap: ColumnsToMap|undefined;\nlet _tableId: string|undefined;\nlet _setInitialized: () => void;\nconst _initialization = new Promise<void>(resolve => _setInitialized = resolve);\nlet _readyCalled: boolean = false;\n\nasync function getMappingsIfChanged(data: any): Promise<WidgetColumnMap|null> {\n  const uninitialized = _mappingsCache === undefined;\n  if (data.mappingsChange || uninitialized) {\n    // If no active request.\n    if (!_activeRefreshReq) {\n      // Request for new mappings.\n      _activeRefreshReq = sectionApi\n        .mappings()\n        // Store it in global variable.\n        .then(mappings => void (_mappingsCache = mappings))\n        // Clear current request variable.\n        .finally(() => _activeRefreshReq = null);\n    }\n    await _activeRefreshReq;\n  }\n  return _mappingsCache ? JSON.parse(JSON.stringify(_mappingsCache)) : null;\n}\n\n/**\n * Renames columns in the result using columns mapping configuration passed in ready method.\n * Returns null if not all required columns were mapped or not widget doesn't support\n * custom column mapping.\n */\nexport function mapColumnNames(data: any, options?: {\n  columns?: ColumnsToMap\n  mappings?: WidgetColumnMap|null,\n  reverse?: boolean,\n}) {\n  options = {columns: _columnsToMap, mappings: _mappingsCache, reverse: false, ...options};\n  // If no column configuration was requested or\n  // table has no rows, return original data.\n  if (!options.columns) {\n    return data;\n  }\n  // If we haven't received columns configuration return null.\n  if (!options.mappings) {\n    return null;\n  }\n  // If we are renaming names for whole table, but it is empty, don't do anything.\n  if (Array.isArray(data) && data.length === 0) {\n    return data;\n  }\n\n  // Prepare convert function - a function that will take record returned from Grist\n  // and convert it to a new record with mapped field names;\n  // Convert function will consists of several transformations:\n  const transformations: ((from: any, to: any) => void)[] = [];\n  // First transformation is for copying id field:\n  transformations.push((from, to) => to.id = from.id);\n  // Helper function to test if a column was configured as optional.\n  function isOptional(col: string) {\n    return Boolean(\n      // Columns passed as strings are required.\n      !options!.columns?.includes(col)\n      && options!.columns?.find(c => typeof c === 'object' && c?.name === col && c.optional)\n    );\n  }\n  // For each widget column in mapping.\n  // Keys are ordered for determinism in case of conflicts.\n  for(const widgetCol of Object.keys(options.mappings).sort()) {\n    // Get column from Grist.\n    const gristCol = options.mappings[widgetCol];\n    // Copy column as series (multiple values)\n    if (Array.isArray(gristCol) && gristCol.length) {\n      if (!options.reverse) {\n        transformations.push((from, to) => {\n          to[widgetCol] = gristCol.map(col => from[col]);\n        });\n      } else {\n        transformations.push((from, to) => {\n          for (const [idx, col] of gristCol.entries()) {\n            to[col] = from[widgetCol]?.[idx];\n          }\n        });\n      }\n      // Copy column directly under widget column name.\n    } else if (!Array.isArray(gristCol) && gristCol) {\n      if (!options.reverse) {\n        transformations.push((from, to) => to[widgetCol] = from[gristCol]);\n      } else {\n        transformations.push((from, to) => to[gristCol] = from[widgetCol]);\n      }\n    } else if (!isOptional(widgetCol)) {\n      // Column was not configured but was required.\n      return null;\n    }\n  }\n  // Finally assemble function to convert a single record.\n  const convert = (rec: any) => transformations.reduce((obj, tran) => { tran(rec, obj); return obj; }, {} as any);\n  // Transform all records (or a single one depending on the arguments).\n  return Array.isArray(data) ? data.map(convert) : convert(data);\n}\n\n/**\n * Offer a convenient way to map data with renamed columns back into the\n * form used in the original table. This is useful for making edits to the\n * original table in a widget with column mappings. As for mapColumnNames(),\n * we don't attempt to do these transformations automatically.\n */\nexport function mapColumnNamesBack(data: any, options?: {\n  columns?: ColumnsToMap\n  mappings?: WidgetColumnMap|null,\n}) {\n  return mapColumnNames(data, {...options, reverse: true});\n}\n\n/**\n * For custom widgets, add a handler that will be called whenever the\n * row with the cursor changes - either by switching to a different row, or\n * by some value within the row potentially changing.  Handler may\n * in the future be called with null if the cursor moves away from\n * any row.\n */\nexport function onRecord(callback: (data: RowRecord | null, mappings: WidgetColumnMap | null) => unknown) {\n  // TODO: currently this will be called even if the content of a different row changes.\n  on('message', async function(msg) {\n    if (!msg.tableId || !msg.rowId || msg.rowId === 'new') { return; }\n    const rec = await docApi.fetchSelectedRecord(msg.rowId);\n    callback(rec, await getMappingsIfChanged(msg));\n  });\n}\n\n/**\n * For custom widgets, add a handler that will be called whenever the\n * new (blank) row is selected.\n */\nexport function onNewRecord(callback: (mappings: WidgetColumnMap | null) => unknown) {\n  on('message', async function(msg) {\n    if (msg.tableId && msg.rowId === 'new') {\n      callback(await getMappingsIfChanged(msg));\n    }\n  });\n}\n\n/**\n * For custom widgets, add a handler that will be called whenever the\n * selected records change.  Handler will be called with a list of records.\n */\nexport function onRecords(callback: (data: RowRecord[], mappings: WidgetColumnMap | null) => unknown) {\n  on('message', async function(msg) {\n    if (!msg.tableId || !msg.dataChange) { return; }\n    const data = await docApi.fetchSelectedTable();\n    if (!data.id) { return; }\n    const rows: RowRecord[] = [];\n    for (let i = 0; i < data.id.length; i++) {\n      const row: RowRecord = {id: data.id[i]};\n      for (const key of Object.keys(data)) {\n        row[key] = data[key][i];\n      }\n      rows.push(row);\n    }\n    callback(rows, await getMappingsIfChanged(msg));\n  });\n}\n\n\n/**\n * For custom widgets, add a handler that will be called whenever the\n * widget options change (and on initial ready message). Handler will be\n * called with an object containing saved json options, or null if no options were saved.\n * The second parameter has information about the widgets relationship with\n * the document that contains it.\n */\nexport function onOptions(callback: (options: any, settings: InteractionOptions) => unknown) {\n  on('message', async function(msg) {\n    if (msg.settings) {\n      callback(msg.options || null, msg.settings);\n    }\n  });\n}\n\n/**\n * Calling `addImporter(...)` adds a safeBrowser importer. It is a short-hand for forwarding calls\n * to an `ImportSourceAPI` implementation registered in the file at `path`. It takes care of\n * creating the stub, registering an implementation that renders the file, forward the call and\n * dispose the view properly. If `mode` is `'inline'` embeds the view in the import modal, otherwise\n * renders fullscreen.\n *\n * Notes: it assumes that file at `path` registers an `ImportSourceAPI` implementation under\n * `name`. Calling `addImporter(...)` from another component than a `safeBrowser` component is not\n * currently supported.\n *\n * @internal\n */\nexport async function addImporter(name: string, path: string, mode: 'fullscreen' | 'inline', options?: RenderOptions) {\n  // checker is omitted for implementation because call was already checked by grist.\n  rpc.registerImpl<InternalImportSourceAPI>(name, {\n    async getImportSource(target: RenderTarget): Promise<ImportSource|undefined> {\n      const procId = await api.render(path, mode === 'inline' ? target : 'fullscreen', options);\n      try {\n        // stubName for the interface `name` at forward destination `path`\n        const stubName = `${name}@${path}`;\n        // checker is omitted in stub because call will be checked just after in grist.\n        return await rpc.getStub<ImportSourceAPI>(stubName).getImportSource();\n      } finally {\n        await api.dispose(procId);\n      }\n    }\n  });\n}\n\n/**\n * Options when initializing connection to Grist.\n */\nexport interface ReadyPayload extends Omit<InteractionOptionsRequest, \"hasCustomOptions\"> {\n  /**\n   * Handler that will be called by Grist to open additional configuration panel inside the Custom Widget.\n   */\n  onEditOptions?: () => unknown;\n}\n/**\n * Declare that a component is prepared to receive messages from the outside world.\n * Grist will not attempt to communicate with it until this method is called.\n */\nexport function ready(settings?: ReadyPayload): void {\n  // Make it safe for this method to be called multiple times.\n  if (_readyCalled) { return; }\n  _readyCalled = true;\n\n  if (settings && settings.onEditOptions) {\n    rpc.registerFunc('editOptions', settings.onEditOptions);\n  }\n  on('message', async function(msg) {\n    if (msg.tableId && msg.tableId !== _tableId) {\n      if (!_tableId) { _setInitialized(); }\n      _tableId = msg.tableId;\n    }\n  });\n  rpc.processIncoming();\n  void (async function() {\n    await rpc.sendReadyMessage();\n    if (settings) {\n      const options = {\n        ...(settings),\n        hasCustomOptions: Boolean(settings.onEditOptions),\n      };\n      delete options.onEditOptions;\n      _columnsToMap = options.columns;\n      await sectionApi.configure(options).catch((err: unknown) => console.error(err));\n    }\n  })();\n}\n\n/** @internal */\nfunction getPluginPath(location: Location) {\n  return location.pathname.replace(/^\\/plugins\\//, '');\n}\n\nif (typeof window !== 'undefined') {\n  // Window or iframe.\n  const preloadWindow: any = window;\n  if (preloadWindow.isRunningUnderElectron) {\n    rpc.setSendMessage(msg => preloadWindow.sendToHost(msg));\n    preloadWindow.onGristMessage((data: any) => rpc.receiveMessage(data));\n  } else {\n    rpc.setSendMessage(msg => window.parent.postMessage(msg, \"*\"));\n    window.onmessage = (e: MessageEvent) => rpc.receiveMessage(e.data);\n  }\n\n  // Allow outer Grist application to trigger printing. This is similar to using\n  // iframe.contentWindow.print(), but that call does not work cross-domain.\n  rpc.registerFunc(\"print\", () => window.print());\n\n} else if (typeof process === 'undefined') {\n  // Web worker. We can't really bring in the types for WebWorker (available with --lib flag)\n  // without conflicting with a regular window, so use just use `self as any` here.\n  self.onmessage = (e: MessageEvent) => rpc.receiveMessage(e.data);\n  rpc.setSendMessage((mssg: any) => (self as any).postMessage(mssg));\n} else if (typeof process.send !== 'undefined') {\n  // Forked ChildProcess of node or electron.\n  // sendMessage callback returns void 0 because rpc process.send returns a boolean and rpc\n  // expecting void|Promise interprets truthy values as Promise which cause failure.\n  rpc.setSendMessage((data) => { process.send!(data); });\n  process.on('message', (data: any) => rpc.receiveMessage(data));\n  process.on('disconnect', () => { process.exit(0); });\n} else {\n  // Not a recognized environment, perhaps plain nodejs run independently of Grist, or tests\n  // running under mocha. For now, we only provide a dysfunctional implementation. It allows\n  // plugins to call methods like registerFunction() without failing, so that plugin code may be\n  // imported, but the methods don't do anything useful.\n  rpc.setSendMessage((data) => { return; });\n}\n\n/** @internal */\nfunction createRpcLogger(): IRpcLogger {\n  let prefix: string;\n  if (typeof window !== 'undefined') {\n    prefix = `PLUGIN VIEW ${getPluginPath(window.location)}:`;\n  } else if (typeof process === 'undefined') {\n    prefix = `PLUGIN VIEW ${getPluginPath(self.location)}:`;\n  } else if (typeof process.send !== 'undefined') {\n    prefix = `PLUGIN NODE ${process.env.GRIST_PLUGIN_PATH || \"<unset-plugin-id>\"}:`;\n  } else {\n    return {};\n  }\n  return {\n    info(msg: string) { console.log(\"%s %s\", prefix, msg); },\n    warn(msg: string) { console.warn(\"%s %s\", prefix, msg); },\n  };\n}\n"],"names":[],"sourceRoot":""}