(self["webpackChunkgristy"] = self["webpackChunkgristy"] || []).push([["app_client_components_ChartView_ts-app_client_lib_CustomSectionElement_ts-app_client_ui_Filte-81c500"],{

/***/ "./app/client/components/AceEditorCompletions.ts":
/*!*******************************************************!*\
  !*** ./app/client/components/AceEditorCompletions.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setupAceEditorCompletions": () => (/* binding */ setupAceEditorCompletions)
/* harmony export */ });
/* harmony import */ var ace_builds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ace-builds */ "./node_modules/ace-builds/src-noconflict/ace.js");
/* harmony import */ var ace_builds__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ace_builds__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_common_gristUrls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/gristUrls */ "./app/common/gristUrls.ts");


const completionOptions = /* @__PURE__ */ new WeakMap();
function setupAceEditorCompletions(editor, options) {
  initCustomCompleter();
  completionOptions.set(editor, options);
  const { Autocomplete } = ace_builds__WEBPACK_IMPORTED_MODULE_0___default().require("ace/autocomplete");
  const completer = new Autocomplete();
  completer.autoSelect = false;
  editor.completer = completer;
  completer._gristShouldRefreshCompletions = function(start) {
    const end = this.editor.getCursorPosition();
    const prefix = this.editor.session.getTextRange({ start, end }).toLowerCase();
    return prefix.endsWith(".") || prefix.endsWith(".lookupone(") || prefix.endsWith(".lookuprecords(");
  }.bind(completer);
  const originalUpdate = completer.updateCompletions.bind(completer);
  completer.updateCompletions = function(keepPopupPosition) {
    if (keepPopupPosition && this.base && this.completions) {
      if (this._gristShouldRefreshCompletions(this.base)) {
        this.completions = null;
      }
    }
    return originalUpdate(keepPopupPosition);
  }.bind(completer);
  const originalInsertMatch = completer.insertMatch.bind(completer);
  completer.insertMatch = function() {
    const base = this.base;
    const result = originalInsertMatch.apply(...arguments);
    if (this._gristShouldRefreshCompletions(base)) {
      this.showPopup(this.editor);
    }
    return result;
  }.bind(completer);
  aceCompleterAddHelpLinks(completer);
  editor.on("destroy", () => {
    if (completer.editor) {
      completer.detach();
    }
    if (completer.popup) {
      completer.popup.destroy();
      completer.popup.container.remove();
    }
  });
}
let _initialized = false;
function initCustomCompleter() {
  if (_initialized) {
    return;
  }
  _initialized = true;
  const prefixMatchRegex = /\w+\.(?:lookupRecords|lookupOne)\([\w.$\u00A2-\uFFFF]*$|[\w.$\u00A2-\uFFFF]+$/;
  const util = ace_builds__WEBPACK_IMPORTED_MODULE_0___default().require("ace/autocomplete/util");
  util.getCompletionPrefix = function getCompletionPrefix(editor) {
    const pos = editor.getCursorPosition();
    const line = editor.session.getLine(pos.row);
    const match = line.slice(0, pos.column).match(prefixMatchRegex);
    return match ? match[0] : "";
  };
  const aceLanguageTools = ace_builds__WEBPACK_IMPORTED_MODULE_0___default().require("ace/ext/language_tools");
  aceLanguageTools.setCompleters([]);
  aceLanguageTools.addCompleter({
    async getCompletions(editor, session, pos, prefix, callback) {
      const options = completionOptions.get(editor);
      if (!options || prefix.length === 0) {
        callback(null, []);
        return;
      }
      const wordRange = session.getWordRange(pos.row, pos.column);
      const token = session.getTokenAt(pos.row, wordRange.end.column);
      const nextToken = session.getTokenAt(pos.row, wordRange.end.column + 1);
      const isRenamingFunc = ["function.support", "identifier"].includes(token.type) && (nextToken == null ? void 0 : nextToken.type) === "paren.lparen";
      const suggestions = await options.getSuggestions(prefix);
      const completions = suggestions.map((suggestionWithValue) => {
        const [suggestion, example] = suggestionWithValue;
        if (Array.isArray(suggestion)) {
          const [funcname, argSpec] = suggestion;
          return {
            value: funcname + (isRenamingFunc ? "" : "("),
            caption: funcname + argSpec,
            score: 1,
            example,
            funcname
          };
        } else {
          return {
            value: suggestion,
            caption: suggestion,
            score: 1,
            example,
            funcname: ""
          };
        }
      });
      const captionLengths = completions.filter((c) => c.example).map((c) => c.caption.length);
      const sharedPadding = Math.min(Math.min(...captionLengths) + MAX_RELATIVE_SHARED_PADDING, Math.max(...captionLengths), MAX_ABSOLUTE_SHARED_PADDING);
      for (const c of completions) {
        if (!c.example) {
          continue;
        }
        const numSpaces = Math.max(0, sharedPadding - c.caption.length) + BASE_PADDING;
        c.caption = c.caption + " ".repeat(numSpaces) + c.example;
      }
      callback(null, completions);
    }
  });
}
const BASE_PADDING = 8;
const MAX_RELATIVE_SHARED_PADDING = 15;
const MAX_ABSOLUTE_SHARED_PADDING = 40;
function aceCompleterAddHelpLinks(completer) {
  const init = completer.$init;
  completer.$init = function() {
    const popup = init.apply(this, arguments);
    customizeAceCompleterPopup(this, popup);
    return popup;
  };
}
function customizeAceCompleterPopup(completer, popup) {
  const origTokenize = popup.session.bgTokenizer.$tokenizeRow;
  popup.session.bgTokenizer.$tokenizeRow = function(row) {
    const tokens = origTokenize(row);
    return retokenizeAceCompleterRow(popup.data[row], tokens);
  };
  popup.removeAllListeners("click");
  popup.on("click", function(e) {
    if (!maybeAceCompleterLinkClick(e.domEvent)) {
      completer.insertMatch();
    }
    e.stop();
  });
}
function retokenizeAceCompleterRow(rowData, tokens) {
  if (!(rowData.funcname || rowData.example)) {
    return tokens;
  }
  const dot = rowData.funcname.lastIndexOf(".");
  const linkStart = dot < 0 ? 0 : dot + 1;
  const linkEnd = rowData.funcname.length;
  const newTokens = [];
  const href = `${app_common_gristUrls__WEBPACK_IMPORTED_MODULE_1__.commonUrls.functions}/#` + rowData.funcname.slice(linkStart, linkEnd).toLowerCase();
  newTokens.push({ value: href, type: "grist_link_hidden" });
  let exampleStart;
  if (rowData.example) {
    if (!rowData.caption.endsWith(rowData.example)) {
      console.warn(`Example "${rowData.example}" does not match caption "${rowData.caption}"`);
    } else {
      exampleStart = rowData.caption.length - rowData.example.length;
    }
  }
  let position = 0;
  for (const t of tokens) {
    if (exampleStart && position + t.value.length > exampleStart) {
      const end = exampleStart - position;
      if (end > 0) {
        newTokens.push({ value: t.value.slice(0, end), type: t.type });
        newTokens.push({ value: t.value.slice(end), type: "grist_example" });
      } else {
        newTokens.push({ value: t.value, type: "grist_example" });
      }
    } else {
      const lStart = linkStart - position, lEnd = linkEnd - position;
      if (lStart > 0) {
        const beforeLink = t.value.slice(0, lStart);
        newTokens.push({ value: beforeLink, type: t.type });
      }
      if (lEnd > 0) {
        const inLink = t.value.slice(Math.max(0, lStart), lEnd);
        const newType = t.type + (t.type ? "." : "") + "grist_link";
        newTokens.push({ value: inLink, type: newType });
        if (lEnd < t.value.length) {
          const afterLink = t.value.slice(lEnd);
          newTokens.push({ value: afterLink, type: t.type });
        }
      } else {
        newTokens.push(t);
      }
    }
    position += t.value.length;
  }
  return newTokens;
}
function maybeAceCompleterLinkClick(domEvent) {
  var _a;
  const tgt = domEvent.target;
  if (tgt && tgt.matches(".ace_grist_link")) {
    const dest = (_a = tgt.parentElement) == null ? void 0 : _a.querySelector(".ace_grist_link_hidden");
    if (dest) {
      window.open(dest.textContent, "_blank");
      return true;
    }
  }
  return false;
}


/***/ }),

/***/ "./app/client/components/Banner.ts":
/*!*****************************************!*\
  !*** ./app/client/components/Banner.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Banner": () => (/* binding */ Banner),
/* harmony export */   "buildBannerMessage": () => (/* binding */ buildBannerMessage),
/* harmony export */   "cssBannerLink": () => (/* binding */ cssBannerLink)
/* harmony export */ });
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");



const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.makeTestId)("test-banner-");
class Banner extends grainjs__WEBPACK_IMPORTED_MODULE_2__.Disposable {
  constructor(_options) {
    super();
    this._options = _options;
    this._isExpanded = grainjs__WEBPACK_IMPORTED_MODULE_2__.Observable.create(this, true);
  }
  buildDom() {
    return cssBanner({ class: this._options.bannerCssClass || "" }, cssBanner.cls(`-${this._options.style}`), this._buildContent(), this._buildButtons(), testId("element"));
  }
  _buildContent() {
    const { content, contentSmall } = this._options;
    return grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.domComputed((use) => {
      if (contentSmall === void 0) {
        return [content];
      }
      const isExpanded = use(this._isExpanded);
      const isNarrowScreen = use((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.isNarrowScreenObs)());
      return [isNarrowScreen && !isExpanded ? contentSmall : content];
    });
  }
  _buildButtons() {
    return cssButtons(this._options.showExpandButton ? this._buildExpandButton() : null, this._options.showCloseButton ? this._buildCloseButton() : null);
  }
  _buildCloseButton() {
    return cssButton("CrossBig", grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.on("click", () => {
      var _a, _b;
      return (_b = (_a = this._options).onClose) == null ? void 0 : _b.call(_a);
    }), testId("close"));
  }
  _buildExpandButton() {
    return grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.maybe((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.isNarrowScreenObs)(), () => {
      return cssExpandButton("Dropdown", cssExpandButton.cls("-expanded", this._isExpanded), grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.on("click", () => this._isExpanded.set(!this._isExpanded.get())));
    });
  }
}
function buildBannerMessage(...domArgs) {
  return cssBannerMessage(cssIcon("Idea"), cssLightlyBoldedText(domArgs));
}
const cssBanner = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  display: flex;
  padding: 10px;
  gap: 16px;
  color: white;

  &-info {
    color: black;
    background: #FFFACD;
  }

  &-warning {
    background: #E6A117;
  }

  &-error {
    background: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.colors.error};
  }
`);
const cssBannerLink = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("span", `
  cursor: pointer;
  color: unset;
  text-decoration: underline;

  &:hover, &:focus {
    color: unset;
  }
`);
const cssButtons = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  display: flex;
  gap: 16px;
  flex-shrink: 0;
  margin-left: auto;
`);
const cssButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__.icon, `
  width: 16px;
  height: 16px;
  cursor: pointer;
  background-color: white;
`);
const cssExpandButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)(cssButton, `
  &-expanded {
    -webkit-mask-image: var(--icon-DropdownUp) !important;
  }
`);
const cssLightlyBoldedText = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  font-weight: 500;
`);
const cssIconAndText = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  display: flex;
  gap: 16px;
`);
const cssBannerMessage = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)(cssIconAndText, `
  flex-grow: 1;
  justify-content: center;
`);
const cssIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__.icon, `
  flex-shrink: 0;
  width: 16px;
  height: 16px;
  background-color: white;
`);


/***/ }),

/***/ "./app/client/components/ChartView.ts":
/*!********************************************!*\
  !*** ./app/client/components/ChartView.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChartConfig": () => (/* binding */ ChartConfig),
/* harmony export */   "ChartView": () => (/* binding */ ChartView),
/* harmony export */   "chartTypes": () => (/* binding */ chartTypes),
/* harmony export */   "isNumericLike": () => (/* binding */ isNumericLike),
/* harmony export */   "isNumericOnly": () => (/* binding */ isNumericOnly)
/* harmony export */ });
/* harmony import */ var app_client_components_BaseView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/BaseView */ "./app/client/components/BaseView.js");
/* harmony import */ var app_client_components_BaseView__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(app_client_components_BaseView__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_client_lib_chartUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/chartUtil */ "./app/client/lib/chartUtil.ts");
/* harmony import */ var app_client_lib_Delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/Delay */ "./app/client/lib/Delay.ts");
/* harmony import */ var app_client_lib_dispose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/lib/dispose */ "./app/client/lib/dispose.js");
/* harmony import */ var app_client_lib_fromKoSave__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/lib/fromKoSave */ "./app/client/lib/fromKoSave.ts");
/* harmony import */ var app_client_lib_imports__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/lib/imports */ "./app/client/lib/imports.js");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/models/modelUtil */ "./app/client/models/modelUtil.js");
/* harmony import */ var app_client_ui_PageWidgetPicker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui/PageWidgetPicker */ "./app/client/ui/PageWidgetPicker.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/ui/VisibleFieldsConfig */ "./app/client/ui/VisibleFieldsConfig.ts");
/* harmony import */ var app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/ui2018/checkbox */ "./app/client/ui2018/checkbox.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_draggableList__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/client/ui2018/draggableList */ "./app/client/ui2018/draggableList.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_SortSpec__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/common/SortSpec */ "./app/common/SortSpec.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! backbone */ "./node_modules/backbone/backbone.js");
/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(backbone__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));






















const clamp = __webpack_require__(/*! lodash/clamp */ "./node_modules/lodash/clamp.js");
const debounce = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
const defaults = __webpack_require__(/*! lodash/defaults */ "./node_modules/lodash/defaults.js");
const defaultsDeep = __webpack_require__(/*! lodash/defaultsDeep */ "./node_modules/lodash/defaultsDeep.js");
const isNumber = __webpack_require__(/*! lodash/isNumber */ "./node_modules/lodash/isNumber.js");
const merge = __webpack_require__(/*! lodash/merge */ "./node_modules/lodash/merge.js");
const sum = __webpack_require__(/*! lodash/sum */ "./node_modules/lodash/sum.js");
const union = __webpack_require__(/*! lodash/union */ "./node_modules/lodash/union.js");

let Plotly;
const MAX_SERIES_IN_CHART = 100;
const DONUT_DEFAULT_HOLE_SIZE = 0.75;
const DONUT_DEFAULT_TEXT_SIZE = 24;
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.makeTestId)("test-chart-");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_22__.makeT)("ChartView");
function isPieLike(chartType) {
  return ["pie", "donut"].includes(chartType);
}
function firstFieldIsLabels(chartType) {
  return ["pie", "donut", "kaplan_meier", "scatter"].includes(chartType);
}
function isNumericOnly(chartType) {
  return ["bar", "pie", "donut", "kaplan_meier", "line", "area", "scatter"].includes(chartType);
}
function visibleColType(col, use = app_common_gutil__WEBPACK_IMPORTED_MODULE_16__.unwrap) {
  const colType = use(col.pureType);
  const isRef = colType === "Ref";
  return isRef ? use(use(col.visibleColModel).type) : colType;
}
function isNumericLike(col, use = app_common_gutil__WEBPACK_IMPORTED_MODULE_16__.unwrap) {
  const colType = visibleColType(col, use);
  return ["Numeric", "Int", "Any"].includes(colType);
}
function getSeriesName(series, haveMultiple) {
  if (series.group === void 0) {
    return series.label;
  }
  const groupName = series.group === "" ? "[Blank]" : series.group;
  if (haveMultiple) {
    return `${groupName} \u2022 ${series.label}`;
  } else {
    return String(groupName);
  }
}
function dateGetter(getter) {
  return (r) => {
    const val = getter(r) * 1e3;
    return val ? new Date(val).toISOString() : null;
  };
}
const LIST_TYPES = ["ChoiceList", "RefList"];
class ChartView extends app_client_lib_dispose__WEBPACK_IMPORTED_MODULE_3__.Disposable {
  get _sortSpec() {
    return this.viewSection.activeSortSpec.peek();
  }
  create(gristDoc, viewSectionModel) {
    app_client_components_BaseView__WEBPACK_IMPORTED_MODULE_0___default().call(this, gristDoc, viewSectionModel);
    this._chartDom = this.autoDispose(this.buildDom());
    this._resize = this.autoDispose(app_client_lib_Delay__WEBPACK_IMPORTED_MODULE_2__.Delay.untilAnimationFrame(this._resizeChart, this));
    this.viewPane = this._chartDom;
    this._chartType = this.viewSection.chartTypeDef;
    this._options = this.viewSection.optionsObj;
    this._formatterComp = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_21__.computed(() => {
      const field = this.viewSection.viewFields().at(1);
      return field == null ? void 0 : field.visibleColFormatter();
    }));
    this._update = debounce(() => this._updateView(), 0);
    let subs = [];
    this.autoDispose(this._chartType.subscribe(this._update));
    this.autoDispose(this._options.subscribe(this._update));
    this.autoDispose(this.viewSection.viewFields().subscribe((viewFields) => {
      this._update();
      subs.forEach((sub) => sub.dispose());
      subs = [
        ...viewFields.map((field) => field.displayColModel.peek().type.subscribe(this._update)),
        ...viewFields.map((field) => field.visibleColModel.peek().type.subscribe(this._update))
      ];
    }));
    this.listenTo(this.sortedRows, "rowNotify", this._update);
    this.autoDispose(this.sortedRows.getKoArray().subscribe(this._update));
    this.autoDispose(this._formatterComp.subscribe(this._update));
    this.autoDispose(this.gristDoc.currentTheme.addListener(() => this._update()));
  }
  prepareToPrint(onOff) {
    Plotly.relayout(this._chartDom, {}).catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_6__.reportError);
  }
  onTableLoaded() {
    app_client_components_BaseView__WEBPACK_IMPORTED_MODULE_0___default().prototype.onTableLoaded.call(this);
    this._update();
  }
  onResize() {
    this._resize();
  }
  buildDom() {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.dom)("div.chart_container", testId("container"));
  }
  listenTo(...args) {
  }
  async _updateView() {
    var _a;
    if (this.isDisposed()) {
      return;
    }
    const chartFunc = chartTypes[this._chartType()];
    if (typeof chartFunc !== "function") {
      console.warn("Unknown trace type %s", this._chartType());
      return;
    }
    const fields = this.viewSection.viewFields().all();
    const rowIds = this.sortedRows.getKoArray().peek();
    const startIndexForYAxis = this._options.prop("multiseries").peek() ? 2 : 1;
    let series = fields.filter((field, i) => i < startIndexForYAxis || this._isCompatibleSeries(field.column.peek())).map((field) => {
      const colId = field.displayColModel.peek().colId.peek();
      const getter = this.tableModel.tableData.getRowPropFunc(colId);
      const pureType = field.displayColModel().pureType();
      const fullGetter = pureType === "Date" || pureType === "DateTime" ? dateGetter(getter) : getter;
      return {
        label: field.label(),
        values: rowIds.map(fullGetter),
        isInSortSpec: Boolean(app_common_SortSpec__WEBPACK_IMPORTED_MODULE_17__.Sort.findCol(this._sortSpec, field.colRef.peek()))
      };
    });
    for (let i = 0; i < series.length; ++i) {
      if (i < fields.length && LIST_TYPES.includes(fields[i].column.peek().pureType.peek())) {
        if (i < startIndexForYAxis) {
          series = (0,app_client_lib_chartUtil__WEBPACK_IMPORTED_MODULE_1__.splitValuesByIndex)(series, i);
        } else {
          series[i].values = series[i].values.map((v) => String((0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_18__.decodeObject)(v)));
        }
      }
    }
    const dataOptions = {};
    const options = this._options.peek() || {};
    let plotData = { data: [] };
    if (isPieLike(this._chartType.peek())) {
      dataOptions.sort = false;
      (0,app_client_lib_chartUtil__WEBPACK_IMPORTED_MODULE_1__.sortByXValues)(series);
    }
    if (this._chartType.peek() === "donut") {
      dataOptions.totalFormatter = this._formatterComp.peek();
    }
    if (!options.multiseries && series.length) {
      plotData = chartFunc(series, options, dataOptions);
    } else if (series.length > 1) {
      const shouldSort = !series[0].isInSortSpec;
      const nseries = groupSeries(series[0].values, series.slice(1), shouldSort);
      const xvalues = Array.from(new Set(series[1].values));
      for (const gSeries of nseries.values()) {
        if (this._chartType.peek() === "bar") {
          if ((_a = this._sortSpec) == null ? void 0 : _a.length) {
            (0,app_client_lib_chartUtil__WEBPACK_IMPORTED_MODULE_1__.consolidateValues)(gSeries, xvalues);
          }
        }
        const part = chartFunc(gSeries, options, dataOptions);
        part.data = plotData.data.concat(part.data);
        plotData = part;
      }
    }
    Plotly = Plotly || await (0,app_client_lib_imports__WEBPACK_IMPORTED_MODULE_5__.loadPlotly)();
    if (this.isDisposed()) {
      return;
    }
    const layout = defaultsDeep(plotData.layout, this._getPlotlyLayout(options));
    const config = __spreadProps(__spreadValues({}, plotData.config), { displayModeBar: false });
    await Plotly.react(this._chartDom, plotData.data, layout, config);
    this._resizeChart();
  }
  _resizeChart() {
    if (this.isDisposed() || !Plotly || !this._chartDom.parentNode) {
      return;
    }
    const display = window.getComputedStyle(this._chartDom).display;
    if (!display || display === "none") {
      return;
    }
    Plotly.Plots.resize(this._chartDom);
  }
  _isCompatibleSeries(col) {
    return isNumericOnly(this._chartType.peek()) ? isNumericLike(col) : true;
  }
  _getPlotlyLayout(options) {
    const yaxis = { automargin: true, title: { standoff: 0 } };
    const xaxis = { automargin: true, title: { standoff: 0 } };
    if (options.logYAxis) {
      yaxis.type = "log";
    }
    if (options.invertYAxis) {
      yaxis.autorange = "reversed";
    }
    const layout = __spreadValues({
      margin: {
        l: 50,
        r: 50,
        b: 40,
        t: 30,
        pad: 4
      },
      yaxis,
      xaxis
    }, options.stacked ? { barmode: "relative" } : {});
    return merge(layout, this._getPlotlyTheme());
  }
  _getPlotlyTheme() {
    const appModel = this.gristDoc.docPageModel.appModel;
    const { colors } = appModel.currentTheme.get();
    return {
      paper_bgcolor: colors["chart-bg"],
      plot_bgcolor: colors["chart-bg"],
      xaxis: {
        color: colors["chart-x-axis"]
      },
      yaxis: {
        color: colors["chart-y-axis"]
      },
      font: {
        color: colors["chart-fg"]
      },
      legend: {
        bgcolor: colors["chart-legend-bg"]
      }
    };
  }
}
function groupSeries(groupColumn, valueSeries, sort) {
  const nseries = /* @__PURE__ */ new Map();
  const maxGroups = Math.floor(MAX_SERIES_IN_CHART / valueSeries.length);
  let groupValues = [...new Set(groupColumn)];
  if (sort) {
    groupValues.sort();
  }
  groupValues = groupValues.slice(0, maxGroups);
  for (const group of groupValues) {
    nseries.set(group, valueSeries.map((s) => ({
      label: s.label,
      group,
      values: []
    })));
  }
  for (let row = 0; row < groupColumn.length; row++) {
    const group = groupColumn[row];
    const series = nseries.get(group);
    if (series) {
      for (let i = 0; i < valueSeries.length; i++) {
        series[i].values.push(valueSeries[i].values[row]);
      }
    }
  }
  return nseries;
}
function extractErrorBars(series, options) {
  const result = /* @__PURE__ */ new Map();
  if (options.errorBars) {
    for (let i = 1; i < series.length; i++) {
      result.set(series[i], {
        type: "data",
        symmetric: options.errorBars === "symmetric",
        array: series[i + 1] && series[i + 1].values,
        arrayminus: options.errorBars === "separate" ? series[i + 2] && series[i + 2].values : void 0,
        thickness: 1,
        width: 3
      });
      series.splice(i + 1, options.errorBars === "symmetric" ? 1 : 2);
    }
  }
  return result;
}
defaults(ChartView.prototype, (app_client_components_BaseView__WEBPACK_IMPORTED_MODULE_0___default().prototype));
Object.assign(ChartView.prototype, backbone__WEBPACK_IMPORTED_MODULE_19__.Events);
const _ChartConfig = class extends grainjs__WEBPACK_IMPORTED_MODULE_20__.Disposable {
  constructor(_gristDoc, _section) {
    super();
    this._gristDoc = _gristDoc;
    this._section = _section;
    this._configFieldsHelper = app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_10__.VisibleFieldsConfig.create(this, this._gristDoc, this._section);
    this._xAxisFieldIndex = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.fromKo)(this._optionsObj.prop("multiseries")), (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.fromKo)(this._optionsObj.prop("isXAxisUndefined")), (_use, multiseries, isUndefined) => isUndefined ? -1 : multiseries ? 1 : 0);
    this._groupDataColId = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, (use) => {
      const multiseries = use(this._optionsObj.prop("multiseries"));
      const viewFields = use(use(this._section.viewFields).getObservable());
      if (!multiseries || viewFields.length === 0) {
        return "";
      }
      return use(use(viewFields[0].column).colId);
    }).onWrite((colId) => this._setGroupDataColumn(colId));
    this._freezeXAxis = grainjs__WEBPACK_IMPORTED_MODULE_20__.Observable.create(this, false);
    this._freezeYAxis = grainjs__WEBPACK_IMPORTED_MODULE_20__.Observable.create(this, false);
    this._xAxis = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, this._xAxisFieldIndex, this._freezeXAxis, (use, i, freeze) => {
      if (freeze) {
        return this._xAxis.get();
      }
      const viewFields = use(use(this._section.viewFields).getObservable());
      if (-1 < i && i < viewFields.length) {
        return use(use(viewFields[i].column).colId);
      }
      return "";
    }).onWrite((colId) => this._setXAxis(colId));
    this._isValueAggregated = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, (use) => this._isSummaryTable(use)).onWrite((val) => this._setAggregation(val));
    this._columnsOptions = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, this._freezeXAxis, (use, freeze) => {
      if (freeze) {
        return this._columnsOptions.get();
      }
      const columns = use(this._isValueAggregated) ? this._getSummarySourceColumns(use) : this._getColumns(use);
      return columns.filter((col) => !col.isHiddenCol.peek()).map((col) => ({
        value: col.colId(),
        label: col.label.peek(),
        icon: "FieldColumn"
      }));
    });
    this._groupDataOptions = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, (use) => [
      { value: "", label: "Pick a column" },
      ...use(this._columnsOptions)
    ]);
    this._groupDataForce = grainjs__WEBPACK_IMPORTED_MODULE_20__.Observable.create(null, false);
    this._groupData = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, this._groupDataColId, this._groupDataForce, (_use, colId, force) => {
      if (colId) {
        return true;
      }
      return force;
    }).onWrite((val) => {
      if (val === false) {
        this._groupDataColId.set("");
      }
      this._groupDataForce.set(val);
    });
    this._firstFieldLabel = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.fromKo)(this._section.chartTypeDef), (_use, chartType) => firstFieldIsLabels(chartType) ? "LABEL" : "X-AXIS");
    this._chartType = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, (use) => use(this._section.chartTypeDef)).onWrite((val) => {
      return this._gristDoc.docData.bundleActions("switched chart type", async () => {
        await this._section.chartTypeDef.saveOnly(val);
        if (isPieLike(val)) {
          await this._setGroupDataColumn("");
          this._groupDataForce.set(false);
        }
      });
    });
    _ChartConfig._instanceMap.set(_section, this);
  }
  get _optionsObj() {
    return this._section.optionsObj;
  }
  buildDom() {
    if (this._section.parentKey() !== "chart") {
      return null;
    }
    return [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow)((0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_15__.select)(this._chartType, [
        { value: "bar", label: "Bar Chart", icon: "ChartBar" },
        { value: "pie", label: "Pie Chart", icon: "ChartPie" },
        { value: "donut", label: "Donut Chart", icon: "ChartDonut" },
        { value: "area", label: "Area Chart", icon: "ChartArea" },
        { value: "line", label: "Line Chart", icon: "ChartLine" },
        { value: "scatter", label: "Scatter Plot", icon: "ChartLine" },
        { value: "kaplan_meier", label: "Kaplan-Meier Plot", icon: "ChartKaplan" }
      ]), testId("type")),
      grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.maybe((use) => !isPieLike(use(this._section.chartTypeDef)), () => [
        cssCheckboxRowObs("Split series", this._groupData),
        cssCheckboxRow("Invert Y-axis", this._optionsObj.prop("invertYAxis")),
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow)(cssRowLabel("Orientation"), (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.dom)("div", (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_15__.linkSelect)((0,app_client_lib_fromKoSave__WEBPACK_IMPORTED_MODULE_4__.fromKoSave)(this._optionsObj.prop("orientation")), [
          { value: "v", label: "Vertical" },
          { value: "h", label: "Horizontal" }
        ], { defaultLabel: "Vertical" })), testId("orientation")),
        cssCheckboxRow("Log scale Y-axis", this._optionsObj.prop("logYAxis"))
      ]),
      grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.maybeOwned((use) => use(this._section.chartTypeDef) === "donut", (owner) => [
        cssSlideRow("Hole Size", grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(owner, (use) => {
          var _a;
          return (_a = use(this._optionsObj.prop("donutHoleSize"))) != null ? _a : DONUT_DEFAULT_HOLE_SIZE;
        }), (val) => this._optionsObj.prop("donutHoleSize").saveOnly(val), testId("option")),
        cssCheckboxRow("Show Total", this._optionsObj.prop("showTotal")),
        grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.maybe(this._optionsObj.prop("showTotal"), () => cssNumberWithSpinnerRow("Text Size", grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(owner, (use) => {
          var _a;
          return (_a = use(this._optionsObj.prop("textSize"))) != null ? _a : DONUT_DEFAULT_TEXT_SIZE;
        }), (val) => this._optionsObj.prop("textSize").saveOnly(val), testId("option")))
      ]),
      grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.maybe((use) => use(this._section.chartTypeDef) === "line", () => [
        cssCheckboxRow("Connect gaps", this._optionsObj.prop("lineConnectGaps")),
        cssCheckboxRow("Show markers", this._optionsObj.prop("lineMarkers"))
      ]),
      grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.maybe((use) => ["line", "bar"].includes(use(this._section.chartTypeDef)), () => [
        cssCheckboxRow("Stack series", this._optionsObj.prop("stacked")),
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow)(cssRowLabel("Error bars"), (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.dom)("div", (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_15__.linkSelect)((0,app_client_lib_fromKoSave__WEBPACK_IMPORTED_MODULE_4__.fromKoSave)(this._optionsObj.prop("errorBars")), [
          { value: "", label: "None" },
          { value: "symmetric", label: "Symmetric" },
          { value: "separate", label: "Above+Below" }
        ], { defaultLabel: "None" })), testId("error-bars")),
        grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.domComputed(this._optionsObj.prop("errorBars"), (value) => value === "symmetric" ? cssRowHelp(t("Each Y series is followed by a series for the length of error bars.")) : value === "separate" ? cssRowHelp(t("Each Y series is followed by two series, for top and bottom error bars.")) : null)
      ]),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssSeparator)(),
      grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.maybe(this._groupData, () => [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssLabel)("Split Series"),
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow)((0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_15__.select)(this._groupDataColId, this._groupDataOptions), testId("group-by-column")),
        cssHintRow(t("Create separate series for each value of the selected column."))
      ]),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssLabel)(grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.text(this._firstFieldLabel), testId("first-field-label")),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow)((0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_15__.select)(this._xAxis, this._columnsOptions, { defaultLabel: t("Pick a column") }), testId("x-axis")),
      cssCheckboxRowObs("Aggregate values", this._isValueAggregated),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssLabel)("SERIES"),
      this._buildYAxis(),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow)(cssAddYAxis(cssAddIcon("Plus"), "Add Series", (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_15__.menu)(() => {
        const hiddenColumns = this._section.hiddenColumns.peek();
        const filterFunc = this._isCompatibleSeries.bind(this);
        const nonNumericCount = hiddenColumns.filter((col) => !filterFunc(col)).length;
        return [
          ...hiddenColumns.filter((col) => filterFunc(col)).map((col) => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_15__.menuItem)(() => this._configFieldsHelper.addField(col), col.label.peek())),
          nonNumericCount ? (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_15__.menuText)(`${nonNumericCount} ` + (nonNumericCount > 1 ? `non-numeric columns are not shown` : `non-numeric column is not shown`), testId("yseries-picker-message")) : null
        ];
      }), testId("add-y-axis")))
    ];
  }
  async _setXAxis(colId) {
    const optionsObj = this._section.optionsObj;
    const findColumn = () => this._getColumns().find((c) => c.colId() === colId);
    const viewFields = this._section.viewFields.peek();
    await this._gristDoc.docData.bundleActions("selected new x-axis", async () => {
      this._freezeYAxis.set(true);
      this._freezeXAxis.set(true);
      try {
        if (this._xAxisFieldIndex.get() !== -1 && this._xAxisFieldIndex.get() < viewFields.peek().length) {
          await this._configFieldsHelper.removeField(viewFields.peek()[this._xAxisFieldIndex.get()]);
        }
        await (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_7__.setSaveValue)(this._optionsObj.prop("isXAxisUndefined"), false);
        const fieldIndex = viewFields.peek().findIndex((f) => f.column.peek().colId() === colId);
        if (fieldIndex === 0 && optionsObj.prop("multiseries").peek()) {
          await optionsObj.prop("multiseries").setAndSave(false);
          return;
        }
        if (this._isValueAggregated.get()) {
          const splitColId = this._groupDataColId.get();
          const cols = splitColId === colId ? [colId] : [splitColId, colId];
          await this._setGroupByColumns(cols);
        }
        const xAxisField = viewFields.peek()[this._xAxisFieldIndex.get()];
        if (fieldIndex > -1) {
          await this._configFieldsHelper.changeFieldPosition(viewFields.peek()[fieldIndex], xAxisField);
        } else {
          const col = findColumn();
          if (col) {
            await this._configFieldsHelper.addField(col, xAxisField);
          }
        }
      } finally {
        this._freezeYAxis.set(false);
        this._freezeXAxis.set(false);
      }
    });
  }
  async _setGroupDataColumn(colId) {
    const viewFields = this._section.viewFields.peek().peek();
    await this._gristDoc.docData.bundleActions(t("selected new group data columns"), async () => {
      this._freezeXAxis.set(true);
      this._freezeYAxis.set(true);
      try {
        if (this._groupDataColId.get()) {
          await this._configFieldsHelper.removeField(viewFields[0]);
        }
        if (this._isValueAggregated.get()) {
          const xAxisColId = this._xAxis.get();
          const cols = xAxisColId === colId ? [colId] : [colId, xAxisColId];
          await this._setGroupByColumns(cols);
        }
        if (colId) {
          const col = this._getColumns().find((c) => c.colId() === colId);
          const field = viewFields.find((f) => f.column.peek().colId() === colId);
          if (field) {
            await this._configFieldsHelper.changeFieldPosition(field, viewFields[0]);
          } else {
            await this._configFieldsHelper.addField(col, viewFields[0]);
          }
          if (colId === this._xAxis.get()) {
            await this._optionsObj.prop("isXAxisUndefined").setAndSave(true);
          }
        }
        await this._optionsObj.prop("multiseries").setAndSave(Boolean(colId));
      } finally {
        this._freezeXAxis.set(false);
        this._freezeYAxis.set(false);
      }
    }, { nestInActiveBundle: true });
  }
  _getColumns(use = app_common_gutil__WEBPACK_IMPORTED_MODULE_16__.unwrap) {
    const table = use(this._section.table);
    return use(use(table.columns).getObservable());
  }
  _getSummarySourceColumns(use = app_common_gutil__WEBPACK_IMPORTED_MODULE_16__.unwrap) {
    let table = use(this._section.table);
    table = use(table.summarySource);
    return use(use(table.columns).getObservable());
  }
  _buildField(col) {
    return (0,app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_10__.cssFieldEntry)((0,app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_10__.cssFieldLabel)(grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.text(col.label)), cssRemoveIcon("Remove", grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.on("click", () => this._configFieldsHelper.removeField(col)), testId("ref-select-remove")), testId("y-axis"));
  }
  _buildYAxis() {
    const skipFirst = grainjs__WEBPACK_IMPORTED_MODULE_20__.Computed.create(this, (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.fromKo)(this._optionsObj.prop("multiseries")), (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.fromKo)(this._optionsObj.prop("isXAxisUndefined")), (_use, multiseries, isUndefined) => (isUndefined ? 0 : 1) + (multiseries ? 1 : 0));
    return grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.domComputed((use) => {
      const filterFunc = (field) => this._isCompatibleSeries(use(field.column), use);
      return this._configFieldsHelper.buildVisibleFieldsConfigHelper({
        itemCreateFunc: (field) => this._buildField(field),
        draggableOptions: {
          removeButton: false,
          drag_indicator: app_client_ui2018_draggableList__WEBPACK_IMPORTED_MODULE_13__.cssDragger
        },
        skipFirst,
        freeze: this._freezeYAxis,
        filterFunc
      });
    });
  }
  _isCompatibleSeries(col, use = app_common_gutil__WEBPACK_IMPORTED_MODULE_16__.unwrap) {
    return isNumericOnly(use(this._chartType)) ? isNumericLike(col, use) : true;
  }
  async _setAggregation(val) {
    try {
      this._freezeXAxis.set(true);
      await this._gristDoc.docData.bundleActions(t("Toggle chart aggregation"), async () => {
        if (val) {
          await this._doAggregation();
        } else {
          await this._undoAggregation();
        }
      });
    } finally {
      if (!this.isDisposed()) {
        this._freezeXAxis.set(false);
      }
    }
  }
  async _doAggregation() {
    if (!this._isSummaryTable()) {
      await this._toggleSummaryTable();
    } else {
      await this._setGroupByColumns([this._xAxis.get(), this._groupDataColId.get()]);
    }
  }
  async _undoAggregation() {
    if (this._isSummaryTable()) {
      await this._toggleSummaryTable();
    }
  }
  _isSummaryTable(use = app_common_gutil__WEBPACK_IMPORTED_MODULE_16__.unwrap) {
    return Boolean(use(use(this._section.table).summarySourceTable));
  }
  async _toggleSummaryTable() {
    const colIds = [this._xAxis.get(), this._groupDataColId.get()];
    const pageWidget = (0,app_client_ui_PageWidgetPicker__WEBPACK_IMPORTED_MODULE_8__.toPageWidget)(this._section);
    pageWidget.summarize = !this._isSummaryTable();
    pageWidget.columns = this._getColumnIds(colIds);
    this._ensureValidLinkingIfAny(pageWidget);
    const newSection = await this._gristDoc.saveViewSection(this._section, pageWidget);
    return _ChartConfig._instanceMap.get(newSection);
  }
  async _setGroupByColumns(groupByCols) {
    const pageWidget = (0,app_client_ui_PageWidgetPicker__WEBPACK_IMPORTED_MODULE_8__.toPageWidget)(this._section);
    pageWidget.columns = this._getColumnIds(groupByCols);
    this._ensureValidLinkingIfAny(pageWidget);
    return this._gristDoc.saveViewSection(this._section, pageWidget);
  }
  _ensureValidLinkingIfAny(pageWidget) {
    if (!pageWidget.summarize) {
      return;
    }
    if (!this._section.linkSrcSection().getRowId()) {
      return;
    }
    const srcPageWidget = (0,app_client_ui_PageWidgetPicker__WEBPACK_IMPORTED_MODULE_8__.toPageWidget)(this._section.linkSrcSection());
    pageWidget.columns = union(pageWidget.columns, srcPageWidget.columns);
  }
  _getColumnIds(colIds) {
    const cols = this._isSummaryTable() ? this._section.table().summarySource().columns().all() : this._section.table().columns().all();
    const columns = colIds.map((colId) => colId && cols.find((c) => c.colId() === colId)).filter((col) => Boolean(col)).map((col) => col.id());
    return columns;
  }
};
let ChartConfig = _ChartConfig;
ChartConfig._instanceMap = /* @__PURE__ */ new WeakMap();
function cssNumberWithSpinnerRow(label, value, save, ...args) {
  const minValue = 1;
  let input;
  function reset() {
    input.value = value.get() + "px";
  }
  async function onChange(val, func = (v) => v) {
    let fvalue = parseFloat(val);
    if (isFinite(fvalue)) {
      fvalue = clamp(func(fvalue), minValue, Infinity);
      await save(fvalue);
    }
    reset();
  }
  return (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow)(cssRowLabel(label), cssNumberWithSpinner(input = cssNumberInput({ type: "text" }, grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.prop("value", (use) => use(value) + "px"), grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.on("change", (_ev, el) => onChange(el.value)), grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.onKeyDown({
    ArrowDown: (_ev, el) => onChange(el.value, (val) => val - 1),
    ArrowUp: (_ev, el) => onChange(el.value, (val) => val + 1)
  })), cssSpinners("input", { type: "number", step: "1", min: String(minValue) }, grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.prop("value", value), grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.on("change", (_ev, el) => onChange(el.value)))), ...args);
}
function cssSlideRow(label, value, save, ...args) {
  let input;
  function reset() {
    input.value = (0,app_client_lib_chartUtil__WEBPACK_IMPORTED_MODULE_1__.formatPercent)(value.get());
  }
  async function onChange(val, func = (v) => v) {
    let fvalue = parseFloat(val);
    if (isFinite(fvalue)) {
      fvalue = clamp(func(fvalue), 0, 99) / 100;
      await save(fvalue);
    }
    reset();
  }
  return (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow)(cssRowLabel(label), cssRangeInput({ type: "range", min: "0", max: "1", step: "0.01" }, grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.prop("value", value), grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.on("change", (_ev, el) => save(Number(el.value)))), cssNumberWithSpinner(input = cssNumberInput({ type: "text" }, grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.prop("value", (use) => (0,app_client_lib_chartUtil__WEBPACK_IMPORTED_MODULE_1__.formatPercent)(use(value))), grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.on("change", (_ev, el) => onChange(el.value)), grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.onKeyDown({
    ArrowDown: (_ev, el) => onChange(el.value, (val) => val - 1),
    ArrowUp: (_ev, el) => onChange(el.value, (val) => val + 1)
  })), cssSpinners("input", { type: "number", step: "0.01", min: "0", max: "0.99" }, grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.prop("value", value), grainjs__WEBPACK_IMPORTED_MODULE_20__.dom.on("change", (_ev, el) => save(Number(el.value))))), ...args);
}
function cssCheckboxRow(label, value, ...args) {
  return cssCheckboxRowObs(label, (0,app_client_lib_fromKoSave__WEBPACK_IMPORTED_MODULE_4__.fromKoSave)(value), ...args);
}
function cssCheckboxRowObs(label, value, ...args) {
  return (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.dom)("label", app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow.cls(""), cssRowLabel(label), (0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_11__.squareCheckbox)(value, ...args));
}
function basicPlot(series, options, dataOptions) {
  trimNonNumericData(series);
  const errorBars = extractErrorBars(series, options);
  if (dataOptions.type === "bar") {
    (0,app_client_lib_chartUtil__WEBPACK_IMPORTED_MODULE_1__.uniqXValues)(series);
  }
  const [axis1, axis2] = options.orientation === "h" ? ["y", "x"] : ["x", "y"];
  const dataSeries = series.slice(1).map((line) => __spreadProps(__spreadValues({
    name: getSeriesName(line, series.length > 2),
    [axis1]: replaceEmptyLabels(series[0].values),
    [axis2]: line.values,
    [`error_${axis2}`]: errorBars.get(line),
    orientation: options.orientation
  }, dataOptions), {
    stackgroup: makeRelativeStackGroup(dataOptions.stackgroup, line.values)
  }));
  function makeRelativeStackGroup(stackgroup, values) {
    if (!stackgroup) {
      return stackgroup;
    }
    const firstNonZero = values.find((v) => v && (v > 0 || v < 0));
    const isNegative = firstNonZero && firstNonZero < 0;
    return isNegative ? "-" + stackgroup : stackgroup;
  }
  return {
    data: dataSeries,
    layout: {
      [`${axis1}axis`]: { title: series.length > 0 ? { text: series[0].label } : {} },
      [`${axis2}axis`]: { title: series.length === 2 ? { text: series[1].label } : {} }
    }
  };
}
const chartTypes = {
  bar(series, options) {
    return basicPlot(series, options, { type: "bar" });
  },
  line(series, options) {
    (0,app_client_lib_chartUtil__WEBPACK_IMPORTED_MODULE_1__.sortByXValues)(series);
    return basicPlot(series, options, {
      type: "scatter",
      connectgaps: options.lineConnectGaps,
      mode: options.lineMarkers ? "lines+markers" : "lines",
      stackgroup: options.stacked ? "A" : ""
    });
  },
  area(series, options) {
    (0,app_client_lib_chartUtil__WEBPACK_IMPORTED_MODULE_1__.sortByXValues)(series);
    return basicPlot(series, options, {
      type: "scatter",
      fill: "tozeroy",
      line: { shape: "spline" }
    });
  },
  scatter(series, options) {
    return basicPlot(series.slice(1), options, {
      type: "scatter",
      mode: "text+markers",
      text: series[0].values,
      textposition: "bottom center"
    });
  },
  pie(series, _options, dataOptions = {}) {
    let line;
    if (series.length === 0) {
      return { data: [] };
    }
    if (series.length > 1) {
      trimNonNumericData(series);
      line = series[1];
    } else {
      line = { label: "Count", values: series[0].values.map(() => 1) };
    }
    return {
      data: [__spreadValues({
        type: "pie",
        name: getSeriesName(line, false),
        labels: replaceEmptyLabels(series[0].values),
        values: line.values
      }, dataOptions)]
    };
  },
  donut(series, options, dataOptions = {}) {
    var _a;
    const hole = isNumber(options.donutHoleSize) ? options.donutHoleSize : DONUT_DEFAULT_HOLE_SIZE;
    const annotations = [];
    const plotData = chartTypes.pie(series, options, __spreadProps(__spreadValues({}, dataOptions), { hole }));
    function format(val) {
      if (dataOptions.totalFormatter) {
        return dataOptions.totalFormatter.formatAny(val);
      }
      return String(val);
    }
    if (options.showTotal) {
      annotations.push({
        text: format(series.length > 1 ? sum(series[1].values.filter(isNumber)) : plotData.data[0].labels.length),
        showarrow: false,
        font: {
          size: (_a = options.textSize) != null ? _a : DONUT_DEFAULT_TEXT_SIZE
        }
      });
    }
    return defaultsDeep(plotData, { layout: { annotations } });
  },
  kaplan_meier(series) {
    if (series.length < 2) {
      return { data: [] };
    }
    const newSeries = groupIntoSeries(series[0].values, series[1].values);
    return {
      data: newSeries.map((line) => {
        const points = kaplanMeierPlot(line.values);
        return {
          type: "scatter",
          mode: "lines",
          line: { shape: "hv" },
          name: getSeriesName(line, false),
          x: points.map((p) => p.x),
          y: points.map((p) => p.y)
        };
      })
    };
  }
};
function trimNonNumericData(series) {
  const values = series.slice(1).map((s) => s.values);
  for (const s of series) {
    s.values = s.values.filter((_, i) => values.some((v) => typeof v[i] === "number"));
  }
}
function replaceEmptyLabels(values) {
  return values.map((v) => v == null || v === "" ? "-" : v);
}
function groupIntoSeries(categoryList, valueList) {
  const groups = /* @__PURE__ */ new Map();
  for (const [i, cat] of categoryList.entries()) {
    if (!groups.has(cat)) {
      groups.set(cat, []);
    }
    groups.get(cat).push(valueList[i]);
  }
  return Array.from(groups, ([label, values]) => ({ label, values }));
}
function kaplanMeierPlot(survivalValues) {
  const dist = /* @__PURE__ */ new Map();
  for (const v of survivalValues) {
    dist.set(v, (dist.get(v) || 0) + 1);
  }
  const distinctValues = Array.from(dist.keys());
  distinctValues.sort(app_common_gutil__WEBPACK_IMPORTED_MODULE_16__.nativeCompare);
  let y = survivalValues.length;
  const points = [{ x: 0, y }];
  for (const x of distinctValues) {
    y -= dist.get(x);
    points.push({ x, y });
  }
  return points;
}
const cssRowLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)("div", `
  flex: 1 0 0px;
  margin-right: 8px;

  font-weight: initial;   /* negate bootstrap */
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.text};
  overflow: hidden;
  text-overflow: ellipsis;
  user-select: none;
`);
const cssRowHelp = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssRow, `
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.vars.smallFontSize};
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.lightText};
`);
const cssAddIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__.icon, `
  margin-right: 4px;
`);
const cssAddYAxis = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)("div", `
  display: flex;
  cursor: pointer;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.controlFg};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.controlFg};

  &:not(:first-child) {
    margin-top: 8px;
  }
  &:hover, &:focus, &:active {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.controlHoverFg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.controlHoverFg};
  }
`);
const cssRemoveIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__.icon, `
  display: none;
  cursor: pointer;
  flex: none;
  margin-left: 8px;
  .${app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_10__.cssFieldEntry.className}:hover & {
    display: block;
  }
`);
const cssHintRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)("div", `
  margin: -4px 16px 8px 16px;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.lightText};
`);
const cssRangeInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)("input", `
  input& {
    width: 82px;
    margin-right: 4px;
  }
`);
const cssNumberWithSpinner = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)("div", `
  position: relative;
`);
const cssNumberInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)("input", `
  width: 55px;
`);
const cssSpinners = (0,grainjs__WEBPACK_IMPORTED_MODULE_20__.styled)("input", `
  width: 19px;
  position: absolute;
  top: 2px;
  right: 1px;
  border: none;
  outline: none;
  appearance: none;
  -moz-appearance: none;
  visibility: hidden;

  .${cssNumberWithSpinner.className}:hover & {
    visibility: visible;
  }

  /* needed for chrome to show spinners, indeed the cursor could be outside of spinners' input
  element */
  &[type=number]::-webkit-inner-spin-button {
    opacity: 1;
  }
`);


/***/ }),

/***/ "./app/client/components/ColumnTransform.ts":
/*!**************************************************!*\
  !*** ./app/client/components/ColumnTransform.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ColumnTransform": () => (/* binding */ ColumnTransform)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_components_AceEditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/components/AceEditor */ "./app/client/components/AceEditor.js");
/* harmony import */ var app_client_components_AceEditor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(app_client_components_AceEditor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isPlainObject */ "./node_modules/lodash/isPlainObject.js");
/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_3__);
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};




const noop = __webpack_require__(/*! lodash/noop */ "./node_modules/lodash/noop.js");
class ColumnTransform extends grainjs__WEBPACK_IMPORTED_MODULE_2__.Disposable {
  constructor(gristDoc, _fieldBuilder) {
    super();
    this.gristDoc = gristDoc;
    this._fieldBuilder = _fieldBuilder;
    this.editor = null;
    this.formulaUpToDate = grainjs__WEBPACK_IMPORTED_MODULE_2__.Observable.create(this, true);
    this._shouldExecute = false;
    this._triggerFinalize = noop;
    this._isFinalizing = false;
    this.field = _fieldBuilder.field;
    this.origColumn = this.field.column();
    this.origDisplayCol = this.field.displayColModel();
    this.origWidgetOptions = this.field.widgetOptionsJson();
    this.rules = this.origColumn.rules();
    this.isCallPending = _fieldBuilder.isCallPending;
    this._tableData = gristDoc.docData.getTable(this.origColumn.table().tableId());
    this.autoDispose(app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.createGroup({
      undo: this.cancel,
      redo: noop
    }, this, true));
    this.onDispose(() => {
      this._setTransforming(false);
      this._fieldBuilder.columnTransform = null;
      this.isCallPending(false);
    });
  }
  buildDom() {
    throw new Error("Not Implemented");
  }
  async finalize() {
    return this._triggerFinalize();
  }
  buildEditorDom(optInit) {
    if (!this.editor) {
      this.editor = this.autoDispose(app_client_components_AceEditor__WEBPACK_IMPORTED_MODULE_1__.create({
        gristDoc: this.gristDoc,
        observable: this.transformColumn.formula,
        saveValueOnBlurEvent: false
      }));
    }
    return this.editor.buildDom((aceObj) => {
      this.editor.adjustContentToWidth();
      this.editor.attachSaveCommand();
      aceObj.on("change", () => {
        if (this.editor) {
          this.formulaUpToDate.set(this.editor.getValue() === this.transformColumn.formula());
        }
      });
      aceObj.focus();
    });
  }
  async prepare(optColType) {
    const colType = optColType || this.origColumn.type.peek();
    const bundlingInfo = this._tableData.docData.startBundlingActions({
      description: `Transformed column ${this.origColumn.colId()}.`,
      shouldIncludeInBundle: this._shouldIncludeInBundle.bind(this),
      prepare: this._doPrepare.bind(this, colType),
      finalize: this._doFinalize.bind(this)
    });
    this._triggerFinalize = bundlingInfo.triggerFinalize;
    await bundlingInfo.preparePromise;
  }
  async _doPrepare(colType) {
    if (this.isDisposed()) {
      return;
    }
    this.isCallPending(true);
    try {
      const newColRef = await this.addTransformColumn(colType);
      this.field.colRef(newColRef);
      this.transformColumn = this.field.column();
      this.transformColumn.origColRef(this.origColumn.getRowId());
      this._setTransforming(true);
      return this.postAddTransformColumn();
    } finally {
      this.isCallPending(false);
    }
  }
  _shouldIncludeInBundle(actions) {
    return actions.every((action) => {
      var _a, _b, _c;
      return ((_a = action[2]) == null ? void 0 : _a.toString().startsWith("gristHelper_Transform")) || ((_b = action[2]) == null ? void 0 : _b.toString().startsWith("gristHelper_Converted")) || ((_c = action[3]) == null ? void 0 : _c.toString().startsWith("gristHelper_Converted")) || action[0] === "SetDisplayFormula" || action[1] === "_grist_Tables_column" || action[1] === "_grist_Views_section_field";
    });
  }
  async addTransformColumn(colType) {
    const newColInfo = await this._tableData.sendTableAction(["AddColumn", "gristHelper_Transform", __spreadValues({
      type: colType,
      isFormula: true,
      formula: this.getIdentityFormula()
    }, this.origWidgetOptions ? { widgetOptions: JSON.stringify(this.origWidgetOptions) } : {})]);
    if (this.rules) {
      await this.gristDoc.docData.sendActions([
        ["UpdateRecord", "_grist_Tables_column", newColInfo.colRef, { rules: this.rules }]
      ]);
    }
    return newColInfo.colRef;
  }
  postAddTransformColumn() {
  }
  async cancel() {
    this._shouldExecute = false;
    return this._triggerFinalize();
  }
  async execute() {
    this._shouldExecute = true;
    return this._triggerFinalize();
  }
  async _doFinalize() {
    if (this.isDisposed() || this._isFinalizing) {
      return;
    }
    this._isFinalizing = true;
    const transformColId = this.transformColumn.colId();
    const field = this.field;
    const origRef = this.origColumn.getRowId();
    const tableData = this._tableData;
    this.isCallPending(true);
    try {
      if (this._shouldExecute) {
        await this.gristDoc.docData.sendActions(this.executeActions());
      }
    } finally {
      field.colRef(origRef);
      void tableData.sendTableAction(["RemoveColumn", transformColId]);
      this.cleanup();
      this.dispose();
    }
  }
  executeActions() {
    const newWidgetOptions = lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_3___default()(this.origWidgetOptions) ? __spreadValues(__spreadValues({}, this.origWidgetOptions), this._fieldBuilder.options.peek()) : this._fieldBuilder.options.peek();
    return [
      ...this.previewActions(),
      [
        "CopyFromColumn",
        this._tableData.tableId,
        this.transformColumn.colId.peek(),
        this.origColumn.colId.peek(),
        JSON.stringify(newWidgetOptions)
      ]
    ];
  }
  cleanup() {
  }
  getIdentityFormula() {
    return "return $" + this.origColumn.colId();
  }
  _setTransforming(bool) {
    this.origColumn.isTransforming(bool);
    this.transformColumn.isTransforming(bool);
  }
  isFinalizing() {
    return this._isFinalizing;
  }
  preview() {
    if (!this.editor) {
      return;
    }
    return this.editor.writeObservable();
  }
  previewActions() {
    if (!this.editor) {
      return [];
    }
    const formula = this.editor.getValue();
    const oldFormula = this.transformColumn.formula();
    if (formula === oldFormula) {
      return [];
    }
    if (!formula && !oldFormula) {
      return [];
    }
    return [
      ["UpdateRecord", "_grist_Tables_column", this.transformColumn.getRowId(), { formula }]
    ];
  }
}


/***/ }),

/***/ "./app/client/components/Cursor.ts":
/*!*****************************************!*\
  !*** ./app/client/components/Cursor.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Cursor": () => (/* binding */ Cursor)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_2__);



function nullAsUndefined(value) {
  return value == null ? void 0 : value;
}
const _Cursor = class extends grainjs__WEBPACK_IMPORTED_MODULE_1__.Disposable {
  constructor(baseView, optCursorPos) {
    super();
    this._isLive = knockout__WEBPACK_IMPORTED_MODULE_2__.observable(true);
    optCursorPos = optCursorPos || {};
    this.viewData = baseView.viewData;
    this._sectionId = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_2__.computed(() => baseView.viewSection.id()));
    this._rowId = knockout__WEBPACK_IMPORTED_MODULE_2__.observable(optCursorPos.rowId || 0);
    this.rowIndex = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_2__.computed({
      read: () => {
        if (!this._isLive()) {
          return this.rowIndex.peek();
        }
        const rowId = this._rowId();
        return rowId == null ? null : this.viewData.clampIndex(this.viewData.getRowIndexWithSub(rowId));
      },
      write: (index) => {
        const rowIndex = index === null ? null : this.viewData.clampIndex(index);
        this._rowId(rowIndex == null ? null : this.viewData.getRowId(rowIndex));
      }
    }));
    this.fieldIndex = baseView.viewSection.viewFields().makeLiveIndex(optCursorPos.fieldIndex || 0);
    this.autoDispose(app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.createGroup(_Cursor.editorCommands, this, baseView.viewSection.hasFocus));
    this._properRowId = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_2__.computed(() => {
      const rowIndex = this.rowIndex();
      const rowId = rowIndex === null ? null : this.viewData.getRowId(rowIndex);
      return rowId;
    }));
    this.autoDispose(this._properRowId.subscribe((rowId) => baseView.viewSection.activeRowId(rowId)));
    this.onDispose(() => {
      baseView.viewSection.lastCursorPos = this.getCursorPos();
    });
    this.currentPosition = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_2__.computed(() => this._isLive() ? this.getCursorPos() : {}));
  }
  getCursorPos() {
    return {
      rowId: nullAsUndefined(this._properRowId()),
      rowIndex: nullAsUndefined(this.rowIndex()),
      fieldIndex: this.fieldIndex(),
      sectionId: this._sectionId()
    };
  }
  setCursorPos(cursorPos) {
    if (cursorPos.rowId !== void 0 && this.viewData.getRowIndex(cursorPos.rowId) >= 0) {
      this.rowIndex(this.viewData.getRowIndex(cursorPos.rowId));
    } else if (cursorPos.rowIndex !== void 0 && cursorPos.rowIndex >= 0) {
      this.rowIndex(cursorPos.rowIndex);
    } else {
      this.rowIndex(this.rowIndex.peek());
    }
    if (cursorPos.fieldIndex !== void 0) {
      this.fieldIndex(cursorPos.fieldIndex);
    }
  }
  setLive(isLive) {
    this._isLive(isLive);
  }
};
let Cursor = _Cursor;
Cursor.editorCommands = {
  cursorUp() {
    this.rowIndex(this.rowIndex() - 1);
  },
  cursorDown() {
    this.rowIndex(this.rowIndex() + 1);
  },
  cursorLeft() {
    this.fieldIndex(this.fieldIndex() - 1);
  },
  cursorRight() {
    this.fieldIndex(this.fieldIndex() + 1);
  },
  skipUp() {
    this.rowIndex(this.rowIndex() - 5);
  },
  skipDown() {
    this.rowIndex(this.rowIndex() + 5);
  },
  pageUp() {
    this.rowIndex(this.rowIndex() - 20);
  },
  pageDown() {
    this.rowIndex(this.rowIndex() + 20);
  },
  prevField() {
    this.fieldIndex(this.fieldIndex() - 1);
  },
  nextField() {
    this.fieldIndex(this.fieldIndex() + 1);
  },
  moveToFirstRecord() {
    this.rowIndex(0);
  },
  moveToLastRecord() {
    this.rowIndex(Infinity);
  },
  moveToFirstField() {
    this.fieldIndex(0);
  },
  moveToLastField() {
    this.fieldIndex(Infinity);
  }
};


/***/ }),

/***/ "./app/client/components/FormulaTransform.ts":
/*!***************************************************!*\
  !*** ./app/client/components/FormulaTransform.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FormulaTransform": () => (/* binding */ FormulaTransform)
/* harmony export */ });
/* harmony import */ var app_client_components_ColumnTransform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/ColumnTransform */ "./app/client/components/ColumnTransform.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");





class FormulaTransform extends app_client_components_ColumnTransform__WEBPACK_IMPORTED_MODULE_0__.ColumnTransform {
  constructor(gristDoc, fieldBuilder) {
    super(gristDoc, fieldBuilder);
  }
  buildDom() {
    return [
      (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("div.transform_menu", (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("div.transform_editor", this.buildEditorDom(this.getIdentityFormula()), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("formula-transform-top"))),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__.cssButtonRow)((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.basicButton)(grainjs__WEBPACK_IMPORTED_MODULE_4__.dom.on("click", () => this.cancel()), "Cancel", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("formula-transform-cancel")), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.basicButton)(grainjs__WEBPACK_IMPORTED_MODULE_4__.dom.on("click", () => this.preview()), "Preview", grainjs__WEBPACK_IMPORTED_MODULE_4__.dom.cls("disabled", this.formulaUpToDate), { title: "Update formula (Shift+Enter)" }, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("formula-transform-update")), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.primaryButton)(grainjs__WEBPACK_IMPORTED_MODULE_4__.dom.on("click", () => this.execute()), "Apply", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("formula-transform-apply")))
    ];
  }
}


/***/ }),

/***/ "./app/client/components/RefSelect.ts":
/*!********************************************!*\
  !*** ./app/client/components/RefSelect.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefSelect": () => (/* binding */ RefSelect)
/* harmony export */ });
/* harmony import */ var app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/koArray */ "./app/client/lib/koArray.js");
/* harmony import */ var app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_client_lib_tableUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/tableUtil */ "./app/client/lib/tableUtil.ts");
/* harmony import */ var app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui/VisibleFieldsConfig */ "./app/client/ui/VisibleFieldsConfig.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! popweasel */ "./node_modules/popweasel/dist/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(popweasel__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");











const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_10__.makeT)("RefSelect");
class RefSelect extends grainjs__WEBPACK_IMPORTED_MODULE_7__.Disposable {
  constructor(options) {
    super();
    this._docModel = options.docModel;
    this._origColumn = options.origColumn;
    this._colId = this._origColumn.colId;
    this.isForeignRefCol = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_8___default().computed(() => {
      const table = this._origColumn.refTable();
      return Boolean(table && table.getRowId() !== this._origColumn.parentId());
    }));
    this._fieldObs = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_8___default().computed(() => {
      const builder = options.fieldBuilder();
      return builder ? builder.field : null;
    }));
    this._validCols = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_8___default().computed(() => {
      const refTable = this._origColumn.refTable();
      if (refTable) {
        return refTable.columns().all().filter((col) => !col.isHiddenCol() && !app_common_gutil__WEBPACK_IMPORTED_MODULE_6__.startsWith(col.type(), "Ref:"));
      }
      return [];
    }));
    const _addedObs = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_8___default().computed(() => {
      return this.isForeignRefCol() && this._fieldObs() ? this._getReferencedCols(this._fieldObs()).map((c) => ({ label: c.label(), value: c.colId() })) : [];
    }));
    this._added = this.autoDispose(app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__.syncedKoArray(_addedObs));
    this._addedSet = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_8___default().computed(() => new Set(this._added.all().map((item) => item.value))));
  }
  buildDom() {
    return cssFieldList((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("ref-select"), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.forEach((0,grainjs__WEBPACK_IMPORTED_MODULE_7__.fromKo)(this._added.getObservable()), (col) => (0,app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_2__.cssFieldEntry)((0,app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_2__.cssFieldLabel)(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.text(col.label)), cssRemoveIcon("Remove", grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => this._removeFormulaField(col)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("ref-select-remove")), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("ref-select-item"))), cssAddLink(cssAddIcon("Plus"), t("Add Column"), (0,popweasel__WEBPACK_IMPORTED_MODULE_9__.menu)(() => [
      ...this._validCols.peek().filter((col) => !this._addedSet.peek().has(col.colId.peek())).map((col) => (0,popweasel__WEBPACK_IMPORTED_MODULE_9__.menuItem)(() => this._addFormulaField({ label: col.label(), value: col.colId() }), col.label.peek())),
      cssEmptyMenuText(t("No columns to add")),
      (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("ref-select-menu")
    ]), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("ref-select-add")));
  }
  async _addFormulaField(item) {
    const field = this._fieldObs();
    if (!field) {
      return;
    }
    const tableData = this._docModel.dataTables[this._origColumn.table().tableId()].tableData;
    const cols = this._origColumn.table().columns().all();
    const colMatch = cols.find((c) => c.formula() === `$${this._colId()}.${item.value}` && !c.isHiddenCol());
    const fields = field.viewSection().viewFields();
    const index = fields.all().sort((a, b) => a.parentPos() > b.parentPos() ? 1 : -1).findIndex((f) => f.getRowId() === field.getRowId());
    const pos = app_client_lib_tableUtil__WEBPACK_IMPORTED_MODULE_1__.fieldInsertPositions(fields, index + 1)[0];
    let colAction;
    if (colMatch) {
      colAction = Promise.resolve({ colRef: colMatch.getRowId(), colId: colMatch.colId() });
    } else {
      colAction = tableData.sendTableAction(["AddColumn", `${this._colId()}_${item.value}`, {
        type: "Any",
        isFormula: true,
        formula: `$${this._colId()}.${item.value}`,
        _position: pos
      }]);
    }
    const colInfo = await colAction;
    if (field.viewSection().isRaw()) {
      return;
    }
    const fieldInfo = {
      colRef: colInfo.colRef,
      parentId: field.viewSection().getRowId(),
      parentPos: pos
    };
    return this._docModel.viewFields.sendTableAction(["AddRecord", null, fieldInfo]);
  }
  _removeFormulaField(item) {
    const tableData = this._docModel.dataTables[this._origColumn.table().tableId()].tableData;
    this._getReferrerFields(item.value).forEach((refField) => {
      const sectionId = this._fieldObs().viewSection().getRowId();
      if (refField.column().viewFields().all().filter((field) => !field.viewSection().isRaw()).some((field) => field.parentId() !== sectionId)) {
        return this._docModel.viewFields.sendTableAction(["RemoveRecord", refField.getRowId()]);
      } else {
        return tableData.sendTableAction(["RemoveColumn", refField.column().colId()]);
      }
    });
  }
  _getReferrerFields(colId) {
    const re = new RegExp("^\\$" + this._colId() + "\\." + colId + "$");
    return this._fieldObs().viewSection().viewFields().all().filter((field) => re.exec(field.column().formula()));
  }
  _getReferencedCols(field) {
    const matchesSet = this._getFormulaMatchSet(field);
    return this._validCols().filter((c) => matchesSet.has(c.colId()));
  }
  _getFormulaMatchSet(field) {
    const fields = field.viewSection().viewFields().all();
    const re = new RegExp("^\\$" + this._colId() + "\\.(\\w+)$");
    return new Set(fields.map((f) => {
      const found = re.exec(f.column().formula());
      return found ? found[1] : null;
    }));
  }
}
const cssFieldList = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: flex;
  flex-direction: column;
  width: 100%;

  & > .${app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_2__.cssFieldEntry.className} {
    margin: 2px 0;
  }
`);
const cssEmptyMenuText = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_5__.menuText, `
  font-size: inherit;
  &:not(:first-child) {
    display: none;
  }
`);
const cssAddLink = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: flex;
  cursor: pointer;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.lightGreen};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.lightGreen};

  &:not(:first-child) {
    margin-top: 8px;
  }
  &:hover, &:focus, &:active {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGreen};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGreen};
  }
`);
const cssAddIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon, `
  margin-right: 4px;
`);
const cssRemoveIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon, `
  display: none;
  cursor: pointer;
  flex: none;
  margin-left: 8px;
  .${app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_2__.cssFieldEntry.className}:hover & {
    display: block;
  }
`);


/***/ }),

/***/ "./app/client/components/TypeConversion.ts":
/*!*************************************************!*\
  !*** ./app/client/components/TypeConversion.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addColTypeSuffix": () => (/* binding */ addColTypeSuffix),
/* harmony export */   "prepTransformColInfo": () => (/* binding */ prepTransformColInfo),
/* harmony export */   "setDisplayFormula": () => (/* binding */ setDisplayFormula)
/* harmony export */ });
/* harmony import */ var app_client_lib_sessionObs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/sessionObs */ "./app/client/lib/sessionObs.ts");
/* harmony import */ var app_common_csvFormat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/csvFormat */ "./app/common/csvFormat.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_NumberParse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/common/NumberParse */ "./app/common/NumberParse.ts");
/* harmony import */ var app_common_parseDate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/common/parseDate */ "./app/common/parseDate.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));








function addColTypeSuffix(type, column, docModel) {
  switch (type) {
    case "Ref":
    case "RefList": {
      const refTableId = getRefTableIdFromData(docModel, column) || column.table().primaryTableId();
      return `${type}:${refTableId}`;
    }
    case "DateTime":
      return "DateTime:" + docModel.docInfoRow.timezone();
    default:
      return type;
  }
}
function getRefTableIdFromData(docModel, column) {
  const tableData = docModel.docData.getTable(column.table().tableId());
  const columnData = tableData && tableData.getColValues(column.colId());
  if (columnData) {
    for (const value of columnData) {
      if (app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__.isReferencing(value)) {
        return value[1];
      } else if (app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__.isList(value)) {
        const item = value[1];
        if (app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__.isReference(item)) {
          return item[1];
        }
      } else if (typeof value === "string") {
        const match = value.match(/^\[?(\w+)\[/);
        if (match && docModel.docData.getTable(match[1])) {
          return match[1];
        }
      }
    }
  }
  return null;
}
async function prepTransformColInfo(docModel, origCol, origDisplayCol, toTypeMaybeFull, convertedRef) {
  const toType = app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__.extractTypeFromColType(toTypeMaybeFull);
  const tableData = docModel.docData.getTable(origCol.table().tableId());
  const visibleCol = origCol.visibleColModel();
  const sourceCol = visibleCol.getRowId() !== 0 ? visibleCol : origCol;
  let widgetOptions = __spreadValues({}, sourceCol.widgetOptionsJson() || {});
  if (isReferenceCol(origCol)) {
    delete widgetOptions.rulesOptions;
    const { rulesOptions } = origCol.widgetOptionsJson() || {};
    if (rulesOptions) {
      widgetOptions.rulesOptions = rulesOptions;
    }
  }
  const colInfo = {
    type: addColTypeSuffix(toTypeMaybeFull, origCol, docModel),
    isFormula: true,
    visibleCol: 0,
    formula: `rec.${convertedRef}`,
    rules: origCol.rules()
  };
  switch (toType) {
    case "Bool":
      delete widgetOptions.widget;
      break;
    case "Date":
    case "DateTime": {
      let { dateFormat } = widgetOptions;
      if (!dateFormat) {
        const colValues = tableData.getColValues(sourceCol.colId()) || [];
        dateFormat = (0,app_common_parseDate__WEBPACK_IMPORTED_MODULE_5__.guessDateFormat)(colValues.map(String));
        widgetOptions = __spreadValues(__spreadValues({}, widgetOptions), (0,app_common_parseDate__WEBPACK_IMPORTED_MODULE_5__.dateTimeWidgetOptions)(dateFormat, true));
      }
      if (toType === "DateTime" && !widgetOptions.timeFormat) {
        widgetOptions.timeFormat = app_common_parseDate__WEBPACK_IMPORTED_MODULE_5__.timeFormatOptions[0];
        widgetOptions.isCustomTimeFormat = false;
      }
      break;
    }
    case "Numeric":
    case "Int": {
      if (!["Numeric", "Int"].includes(sourceCol.type())) {
        const numberParse = app_common_NumberParse__WEBPACK_IMPORTED_MODULE_4__["default"].fromSettings(docModel.docData.docSettings());
        const colValues = tableData.getColValues(sourceCol.colId()) || [];
        widgetOptions = __spreadValues(__spreadValues({}, widgetOptions), numberParse.guessOptions(colValues.filter(app_client_lib_sessionObs__WEBPACK_IMPORTED_MODULE_0__.isString)));
      }
      break;
    }
    case "Choice": {
      if (!Array.isArray(widgetOptions.choices)) {
        const columnData = tableData.getDistinctValues(sourceCol.colId(), 100);
        if (columnData) {
          columnData.delete("");
          columnData.delete(null);
          widgetOptions = __spreadProps(__spreadValues({}, widgetOptions), { choices: Array.from(columnData, String) });
        }
      }
      break;
    }
    case "ChoiceList": {
      if (!Array.isArray(widgetOptions.choices)) {
        const choices = /* @__PURE__ */ new Set();
        for (let value of tableData.getColValues(sourceCol.colId()) || []) {
          if (value === null) {
            continue;
          }
          value = String((0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_6__.decodeObject)(value)).trim();
          const tags = value.startsWith("[") && app_common_gutil__WEBPACK_IMPORTED_MODULE_3__.safeJsonParse(value, null) || (0,app_common_csvFormat__WEBPACK_IMPORTED_MODULE_1__.csvDecodeRow)(value);
          for (const tag of tags) {
            choices.add(String(tag).trim());
            if (choices.size > 100) {
              break;
            }
          }
        }
        choices.delete("");
        widgetOptions = __spreadProps(__spreadValues({}, widgetOptions), { choices: Array.from(choices) });
      }
      break;
    }
    case "Ref":
    case "RefList": {
      const optTableId = app_common_gutil__WEBPACK_IMPORTED_MODULE_3__.removePrefix(toTypeMaybeFull, `${toType}:`) || void 0;
      let suggestedColRef;
      let suggestedTableId;
      const origColTypeInfo = app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__.extractInfoFromColType(origCol.type.peek());
      if (!optTableId && (origColTypeInfo.type === "Ref" || origColTypeInfo.type === "RefList")) {
        suggestedColRef = origCol.visibleCol.peek();
        suggestedTableId = origColTypeInfo.tableId;
      } else {
        const columnData = tableData.getDistinctValues(origDisplayCol.colId(), 100);
        if (!columnData) {
          break;
        }
        columnData.delete(app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__.getDefaultForType(origCol.type()));
        const matches = await docModel.docData.findColFromValues(Array.from(columnData), 2, optTableId);
        suggestedColRef = matches.find((match) => match !== origCol.getRowId());
        if (!suggestedColRef) {
          break;
        }
        const suggestedCol = docModel.columns.getRowModel(suggestedColRef);
        suggestedTableId = suggestedCol.table().tableId();
        if (optTableId && suggestedTableId !== optTableId) {
          console.warn("Inappropriate column received from findColFromValues");
          break;
        }
      }
      colInfo.type = `${toType}:${suggestedTableId}`;
      colInfo.visibleCol = suggestedColRef;
      break;
    }
  }
  if (Object.keys(widgetOptions).length) {
    colInfo.widgetOptions = JSON.stringify(widgetOptions);
  }
  return colInfo;
}
async function setDisplayFormula(docModel, transformCol, visibleCol) {
  const vcolRef = visibleCol == null ? transformCol.visibleCol() : visibleCol;
  if (isReferenceCol(transformCol)) {
    const vcol = getVisibleColName(docModel, vcolRef);
    const tcol = transformCol.colId();
    const displayFormula = vcolRef === 0 ? "" : `$${tcol}.${vcol}`;
    return transformCol.saveDisplayFormula(displayFormula);
  }
}
function getVisibleColName(docModel, visibleColRef) {
  return visibleColRef ? docModel.columns.getRowModel(visibleColRef).colId() : void 0;
}
function isReferenceCol(colModel) {
  return (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__.isFullReferencingType)(colModel.type());
}


/***/ }),

/***/ "./app/client/components/TypeTransform.ts":
/*!************************************************!*\
  !*** ./app/client/components/TypeTransform.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TypeTransform": () => (/* binding */ TypeTransform)
/* harmony export */ });
/* harmony import */ var app_client_components_ColumnTransform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/ColumnTransform */ "./app/client/components/ColumnTransform.ts");
/* harmony import */ var app_client_components_TypeConversion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/components/TypeConversion */ "./app/client/components/TypeConversion.ts");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));








const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_7__.makeT)("TypeTransform");
class TypeTransform extends app_client_components_ColumnTransform__WEBPACK_IMPORTED_MODULE_0__.ColumnTransform {
  constructor(gristDoc, fieldBuilder) {
    super(gristDoc, fieldBuilder);
    this._reviseTypeChange = grainjs__WEBPACK_IMPORTED_MODULE_6__.Observable.create(this, false);
    this._shouldExecute = true;
    this._transformWidget = grainjs__WEBPACK_IMPORTED_MODULE_6__.Computed.create(this, (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(fieldBuilder.widgetImpl), (use, widget) => {
      return use(this.origColumn.isTransforming) ? widget : null;
    });
  }
  buildDom() {
    const disableButtons = grainjs__WEBPACK_IMPORTED_MODULE_6__.Observable.create(null, false);
    this._reviseTypeChange.set(false);
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.dom)("div", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_5__.testId)("type-transform-top"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.maybe(this._transformWidget, (transformWidget) => transformWidget.buildTransformConfigDom()), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.maybe(this._reviseTypeChange, () => (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.dom)("div.transform_editor", this.buildEditorDom(), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_5__.testId)("type-transform-formula"))), (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssButtonRow)((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__.basicButton)(grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.on("click", () => {
      this.cancel().catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_2__.reportError);
      disableButtons.set(true);
    }), t("Cancel"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_5__.testId)("type-transform-cancel"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.cls("disabled", disableButtons)), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.domComputed(this._reviseTypeChange, (revising) => {
      if (revising) {
        return (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__.basicButton)(grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.on("click", () => this.preview()), t("Preview"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_5__.testId)("type-transform-update"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.cls("disabled", (use) => use(disableButtons) || use(this.formulaUpToDate)), { title: t("Update formula (Shift+Enter)") });
      } else {
        return (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__.basicButton)(grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.on("click", () => {
          this._reviseTypeChange.set(true);
        }), t("Revise"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_5__.testId)("type-transform-revise"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.cls("disabled", disableButtons));
      }
    }), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__.primaryButton)(grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.on("click", () => {
      this.execute().catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_2__.reportError);
      disableButtons.set(true);
    }), t("Apply"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_5__.testId)("type-transform-apply"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.cls("disabled", disableButtons))));
  }
  async addTransformColumn(toType) {
    const docModel = this.gristDoc.docModel;
    const newColInfos = await this._tableData.sendTableActions([
      ["AddColumn", "gristHelper_Converted", { type: "Any" }],
      ["AddColumn", "gristHelper_Transform", { type: "Any" }]
    ]);
    const gristHelper_ConvertedRef = newColInfos[0].colRef;
    const gristHelper_TransformRef = newColInfos[1].colRef;
    this.transformColumn = docModel.columns.getRowModel(gristHelper_TransformRef);
    this._convertColumn = docModel.columns.getRowModel(gristHelper_ConvertedRef);
    const colInfo = await app_client_components_TypeConversion__WEBPACK_IMPORTED_MODULE_1__.prepTransformColInfo(docModel, this.origColumn, this.origDisplayCol, toType, this._convertColumn.colId.peek());
    const rules = colInfo.rules;
    delete colInfo.rules;
    await this._tableData.sendTableActions([
      ["ModifyColumn", this._convertColumn.colId.peek(), __spreadProps(__spreadValues({}, colInfo), { isFormula: false, formula: "" })],
      ["ModifyColumn", this.transformColumn.colId.peek(), colInfo]
    ]);
    if (rules) {
      await this.gristDoc.docData.sendActions([
        ["UpdateRecord", "_grist_Tables_column", gristHelper_TransformRef, { rules }]
      ]);
    }
    await this.convertValues();
    return gristHelper_TransformRef;
  }
  convertValuesActions() {
    const tableId = this._tableData.tableId;
    const srcColId = this.origColumn.colId.peek();
    const dstColId = this._convertColumn.colId.peek();
    const type = this.transformColumn.type.peek();
    const widgetOptions = this.transformColumn.widgetOptions.peek();
    const visibleColRef = this.transformColumn.visibleCol.peek();
    return [["ConvertFromColumn", tableId, srcColId, dstColId, type, widgetOptions, visibleColRef]];
  }
  async convertValues() {
    await Promise.all([
      this.gristDoc.docData.sendActions(this.convertValuesActions()),
      app_client_components_TypeConversion__WEBPACK_IMPORTED_MODULE_1__.setDisplayFormula(this.gristDoc.docModel, this.transformColumn)
    ]);
  }
  executeActions() {
    return [...this.convertValuesActions(), ...super.executeActions()];
  }
  postAddTransformColumn() {
    this.autoDispose(this.transformColumn.type.subscribe(this.convertValues, this, "change"));
    this.autoDispose(this.transformColumn.type.subscribe(this.convertValues, this, "save"));
    this.autoDispose(this.transformColumn.visibleCol.subscribe(this.convertValues, this, "save"));
    this.autoDispose(this.field.widgetOptionsJson.subscribe(this.convertValues, this, "save"));
  }
  cleanup() {
    void this._tableData.sendTableAction(["RemoveColumn", this._convertColumn.colId.peek()]);
  }
  async setType(toType) {
    const docModel = this.gristDoc.docModel;
    const colInfo = await app_client_components_TypeConversion__WEBPACK_IMPORTED_MODULE_1__.prepTransformColInfo(docModel, this.origColumn, this.origDisplayCol, toType, this._convertColumn.colId.peek());
    const tcol = this.transformColumn;
    await tcol.updateColValues(colInfo);
  }
}


/***/ }),

/***/ "./app/client/lib/CustomSectionElement.ts":
/*!************************************************!*\
  !*** ./app/client/lib/CustomSectionElement.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomSectionElement": () => (/* binding */ CustomSectionElement),
/* harmony export */   "ViewProcess": () => (/* reexport safe */ app_client_lib_SafeBrowser__WEBPACK_IMPORTED_MODULE_0__.ViewProcess)
/* harmony export */ });
/* harmony import */ var app_client_lib_SafeBrowser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/SafeBrowser */ "./app/client/lib/SafeBrowser.ts");

class CustomSectionElement {
  static getSections(plugins) {
    return plugins.reduce((acc, plugin) => {
      const customSections = plugin.definition.manifest.contributions.customSections;
      const pluginId = plugin.definition.id;
      if (customSections) {
        const sectionIds = customSections.map((section) => ({ sectionId: section.name, pluginId }));
        return acc.concat(sectionIds);
      }
      return acc;
    }, []);
  }
  static find(plugin, sectionName) {
    const customSections = plugin.definition.manifest.contributions.customSections;
    if (customSections) {
      const section = customSections.find(({ name }) => name === sectionName);
      if (section) {
        const safeBrowser = plugin.safeBrowser;
        return safeBrowser.createViewProcess(section.path);
      }
    }
  }
}


/***/ }),

/***/ "./app/client/lib/Delay.ts":
/*!*********************************!*\
  !*** ./app/client/lib/Delay.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Delay": () => (/* binding */ Delay)
/* harmony export */ });
/* harmony import */ var app_client_lib_dispose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/dispose */ "./app/client/lib/dispose.js");

class Delay extends app_client_lib_dispose__WEBPACK_IMPORTED_MODULE_0__.Disposable {
  constructor() {
    super(...arguments);
    this._timeoutId = null;
  }
  static wrapWithDelay(ms, cb, optContext) {
    return function(...args) {
      const ctx = optContext || this;
      setTimeout(() => cb.apply(ctx, args), ms);
    };
  }
  static untilAnimationFrame(cb, optContext) {
    let reqId = null;
    const f = function(...args) {
      if (reqId === null) {
        reqId = window.requestAnimationFrame(() => {
          reqId = null;
          cb.apply(optContext, args);
        });
      }
    };
    f.dispose = function() {
      if (reqId !== null) {
        window.cancelAnimationFrame(reqId);
      }
    };
    return f;
  }
  create() {
    this.autoDisposeCallback(this.cancel);
  }
  cancel() {
    if (this._timeoutId !== null) {
      clearTimeout(this._timeoutId);
      this._timeoutId = null;
    }
  }
  isPending() {
    return this._timeoutId !== null;
  }
  schedule(ms, cb, optContext, ...optArgs) {
    this.cancel();
    this._timeoutId = setTimeout(() => {
      this._timeoutId = null;
      cb.apply(optContext, optArgs);
    }, ms);
  }
}


/***/ }),

/***/ "./app/client/lib/ReferenceUtils.ts":
/*!******************************************!*\
  !*** ./app/client/lib/ReferenceUtils.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReferenceUtils": () => (/* binding */ ReferenceUtils),
/* harmony export */   "nocaseEqual": () => (/* binding */ nocaseEqual)
/* harmony export */ });
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");

class ReferenceUtils {
  constructor(field, docData) {
    this.field = field;
    const colType = field.column().type();
    const refTableId = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.getReferencedTableId)(colType);
    if (!refTableId) {
      throw new Error("Non-Reference column of type " + colType);
    }
    this.refTableId = refTableId;
    const tableData = docData.getTable(refTableId);
    if (!tableData) {
      throw new Error("Invalid referenced table " + refTableId);
    }
    this.tableData = tableData;
    this.visibleColFormatter = field.visibleColFormatter();
    this.visibleColModel = field.visibleColModel();
    this.visibleColId = this.visibleColModel.colId() || "id";
    this.isRefList = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.isRefListType)(colType);
  }
  idToText(value) {
    if (typeof value === "number") {
      return this.visibleColFormatter.formatAny(this.tableData.getValue(value, this.visibleColId));
    }
    return String(value || "");
  }
  autocompleteSearch(text) {
    const acIndex = this.tableData.columnACIndexes.getColACIndex(this.visibleColId, this.visibleColFormatter);
    return acIndex.search(text);
  }
}
function nocaseEqual(a, b) {
  return a.trim().toLowerCase() === b.trim().toLowerCase();
}


/***/ }),

/***/ "./app/client/lib/SafeBrowser.ts":
/*!***************************************!*\
  !*** ./app/client/lib/SafeBrowser.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClientProcess": () => (/* binding */ ClientProcess),
/* harmony export */   "SafeBrowser": () => (/* binding */ SafeBrowser),
/* harmony export */   "ViewProcess": () => (/* binding */ ViewProcess)
/* harmony export */ });
/* harmony import */ var app_client_lib_browserGlobals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/browserGlobals */ "./app/client/lib/browserGlobals.js");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/dom */ "./app/client/lib/dom.js");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var app_client_lib_Mousetrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/Mousetrap */ "./app/client/lib/Mousetrap.js");
/* harmony import */ var app_client_lib_Mousetrap__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_Mousetrap__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var app_common_ActionRouter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/ActionRouter */ "./app/common/ActionRouter.ts");
/* harmony import */ var app_common_PluginInstance__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/common/PluginInstance */ "./app/common/PluginInstance.ts");
/* harmony import */ var app_common_tbind__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/common/tbind */ "./app/common/tbind.ts");
/* harmony import */ var app_common_urlUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/common/urlUtils */ "./app/common/urlUtils.ts");
/* harmony import */ var app_plugin_GristAPI__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/plugin/GristAPI */ "./app/plugin/GristAPI.ts");
/* harmony import */ var app_plugin_TypeCheckers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/plugin/TypeCheckers */ "./app/plugin/TypeCheckers.ts");
/* harmony import */ var grain_rpc__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! grain-rpc */ "./node_modules/grain-rpc/dist/lib/index.js");
/* harmony import */ var grain_rpc__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(grain_rpc__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _dispose__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dispose */ "./app/client/lib/dispose.js");











const G = (0,app_client_lib_browserGlobals__WEBPACK_IMPORTED_MODULE_0__.get)("document", "window");
class SafeBrowser extends app_common_PluginInstance__WEBPACK_IMPORTED_MODULE_4__.BaseComponent {
  constructor(_plugin, _clientScope, _untrustedContentOrigin, _mainPath = "", _baseLogger = console, rpcLogger = (0,app_common_PluginInstance__WEBPACK_IMPORTED_MODULE_4__.createRpcLogger)(_baseLogger, `PLUGIN ${_plugin.definition.id} SafeBrowser:`)) {
    super(_plugin.definition.manifest, rpcLogger);
    this._plugin = _plugin;
    this._clientScope = _clientScope;
    this._untrustedContentOrigin = _untrustedContentOrigin;
    this._mainPath = _mainPath;
    this._baseLogger = _baseLogger;
    this._viewProcesses = /* @__PURE__ */ new Map();
    this._viewCount = 0;
    this._pluginId = _plugin.definition.id;
    this._pluginRpc = _plugin.rpc;
  }
  static createWorker(safeBrowser, rpc, src) {
    return new WorkerProcess(safeBrowser, rpc, src);
  }
  static createView(safeBrowser, rpc, src) {
    return G.window.isRunningUnderElectron ? new WebviewProcess(safeBrowser, rpc, src) : new IframeProcess(safeBrowser, rpc, src);
  }
  createViewProcess(path) {
    return this._createViewProcess(path)[0];
  }
  receiveAction(action) {
    for (const view of this._viewProcesses.values()) {
      view.receiveAction(action);
    }
  }
  async renderImpl(path, target, options) {
    const [proc, viewId] = this._createViewProcess(path);
    const renderFunc = this._plugin.getRenderTarget(target, options);
    renderFunc(proc.element);
    if (this._mainProcess) {
      this._mainProcess.autoDispose(proc);
    }
    return viewId;
  }
  async disposeImpl(procId) {
    const proc = this._viewProcesses.get(procId);
    if (proc) {
      this._viewProcesses.delete(procId);
      proc.dispose();
    }
  }
  doForwardCall(c) {
    if (this._mainProcess) {
      return this._mainProcess.rpc.forwardCall(c);
    }
    throw new Error("Using SafeBrowser as an IForwarder requires a main script");
  }
  doForwardMessage(c) {
    if (this._mainProcess) {
      return this._mainProcess.rpc.forwardMessage(c);
    }
    throw new Error("Using SafeBrowser as an IForwarder requires a main script");
  }
  async activateImplementation() {
    if (this._mainPath) {
      const rpc = this._createRpc(this._mainPath);
      const src = `plugins/${this._pluginId}/${this._mainPath}`;
      this._mainProcess = SafeBrowser.createWorker(this, rpc, src);
    }
  }
  async deactivateImplementation() {
    if (this._mainProcess) {
      this._mainProcess.dispose();
    }
  }
  _createViewProcess(path) {
    const rpc = this._createRpc(path);
    const url = `${this._untrustedContentOrigin}/plugins/${this._plugin.definition.id}/${path}?host=${G.window.location.origin}`;
    const viewId = this._viewCount++;
    const process = SafeBrowser.createView(this, rpc, url);
    this._viewProcesses.set(viewId, process);
    this._pluginRpc.registerForwarder(path, rpc);
    process.autoDisposeCallback(() => {
      this._pluginRpc.unregisterForwarder(path);
      this._viewProcesses.delete(viewId);
    });
    return [process, viewId];
  }
  _createRpc(path) {
    const rpc = new grain_rpc__WEBPACK_IMPORTED_MODULE_9__.Rpc({ logger: (0,app_common_PluginInstance__WEBPACK_IMPORTED_MODULE_4__.createRpcLogger)(this._baseLogger, `PLUGIN ${this._pluginId}/${path} SafeBrowser:`) });
    rpc.queueOutgoingUntilReadyMessage();
    (0,app_common_PluginInstance__WEBPACK_IMPORTED_MODULE_4__.warnIfNotReady)(rpc, 3e3, "Plugin isn't ready; be sure to call grist.ready() from plugin");
    rpc.registerForwarder("*", this._pluginRpc);
    this._clientScope.servePlugin(this._pluginId, rpc);
    return rpc;
  }
}
class ClientProcess extends _dispose__WEBPACK_IMPORTED_MODULE_10__.Disposable {
  create(safeBrowser, rpc, src) {
    this.rpc = rpc;
    this._safeBrowser = safeBrowser;
    this._src = src;
    this._actionRouter = new app_common_ActionRouter__WEBPACK_IMPORTED_MODULE_3__.ActionRouter(this.rpc);
    const gristAPI = {
      subscribe: (0,app_common_tbind__WEBPACK_IMPORTED_MODULE_5__.tbind)(this._actionRouter.subscribeTable, this._actionRouter),
      unsubscribe: (0,app_common_tbind__WEBPACK_IMPORTED_MODULE_5__.tbind)(this._actionRouter.unsubscribeTable, this._actionRouter),
      render: (0,app_common_tbind__WEBPACK_IMPORTED_MODULE_5__.tbind)(this._safeBrowser.renderImpl, this._safeBrowser),
      dispose: (0,app_common_tbind__WEBPACK_IMPORTED_MODULE_5__.tbind)(this._safeBrowser.disposeImpl, this._safeBrowser)
    };
    rpc.registerImpl(app_plugin_GristAPI__WEBPACK_IMPORTED_MODULE_7__.RPC_GRISTAPI_INTERFACE, gristAPI, app_plugin_TypeCheckers__WEBPACK_IMPORTED_MODULE_8__.checkers.GristAPI);
    this.autoDisposeCallback(() => {
      this.rpc.unregisterImpl(app_plugin_GristAPI__WEBPACK_IMPORTED_MODULE_7__.RPC_GRISTAPI_INTERFACE);
    });
  }
  receiveAction(action) {
    this._actionRouter.process(action).catch((err) => console.warn("ClientProcess[%s] receiveAction: failed with %s", this._src, err));
  }
}
class WorkerProcess extends ClientProcess {
  create(safeBrowser, rpc, src) {
    super.create(safeBrowser, rpc, src);
    const worker = new Worker((0,app_common_urlUtils__WEBPACK_IMPORTED_MODULE_6__.getOriginUrl)(`/${src}`));
    worker.addEventListener("message", (e) => this.rpc.receiveMessage(e.data));
    this.rpc.setSendMessage(worker.postMessage.bind(worker));
    this.autoDisposeCallback(() => worker.terminate());
  }
}
class ViewProcess extends ClientProcess {
}
class IframeProcess extends ViewProcess {
  create(safeBrowser, rpc, src) {
    super.create(safeBrowser, rpc, src);
    const iframe = this.element = this.autoDispose(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1___default()(`iframe.safe_browser_process.clipboard_focus`, { src }));
    const listener = (event) => {
      if (event.source === iframe.contentWindow) {
        this.rpc.receiveMessage(event.data);
      }
    };
    G.window.addEventListener("message", listener);
    this.autoDisposeCallback(() => {
      G.window.removeEventListener("message", listener);
    });
    this.rpc.setSendMessage((msg) => iframe.contentWindow.postMessage(msg, "*"));
  }
}
class WebviewProcess extends ViewProcess {
  create(safeBrowser, rpc, src) {
    super.create(safeBrowser, rpc, src);
    const webview = this.element = this.autoDispose(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1___default()("webview.safe_browser_process.clipboard_focus", {
      src,
      allowpopups: "",
      partition: "plugins"
    }));
    app_client_lib_Mousetrap__WEBPACK_IMPORTED_MODULE_2__.setPaused(true);
    this.autoDisposeCallback(() => app_client_lib_Mousetrap__WEBPACK_IMPORTED_MODULE_2__.setPaused(false));
    webview.addEventListener("ipc-message", (event) => {
      if (event.channel === "grist") {
        rpc.receiveMessage(event.args[0]);
      }
    });
    this.rpc.setSendMessage((msg) => webview.send("grist", msg));
  }
}


/***/ }),

/***/ "./app/client/lib/chartUtil.ts":
/*!*************************************!*\
  !*** ./app/client/lib/chartUtil.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "consolidateValues": () => (/* binding */ consolidateValues),
/* harmony export */   "formatPercent": () => (/* binding */ formatPercent),
/* harmony export */   "sortByXValues": () => (/* binding */ sortByXValues),
/* harmony export */   "splitValues": () => (/* binding */ splitValues),
/* harmony export */   "splitValuesByIndex": () => (/* binding */ splitValuesByIndex),
/* harmony export */   "uniqXValues": () => (/* binding */ uniqXValues)
/* harmony export */ });
/* harmony import */ var app_common_SortFunc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/SortFunc */ "./app/common/SortFunc.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));


const range = __webpack_require__(/*! lodash/range */ "./node_modules/lodash/range.js");
const uniqBy = __webpack_require__(/*! lodash/uniqBy */ "./node_modules/lodash/uniqBy.js");
const flatten = __webpack_require__(/*! lodash/flatten */ "./node_modules/lodash/flatten.js");
function sortByXValues(series) {
  if (!series[0]) {
    return;
  }
  const xValues = series[0].values;
  const indices = xValues.map((val, i) => i);
  indices.sort((a, b) => (0,app_common_SortFunc__WEBPACK_IMPORTED_MODULE_0__.typedCompare)(xValues[a], xValues[b]));
  for (const s of series) {
    const values = s.values;
    s.values = indices.map((i) => values[i]);
  }
}
function uniqXValues(series) {
  if (!series[0]) {
    return;
  }
  const n = series[0].values.length;
  const indexToKeep = new Set(uniqBy(range(n), (i) => series[0].values[i]));
  series.forEach((line) => {
    line.values = line.values.filter((_val, i) => indexToKeep.has(i));
  });
}
function splitValues(series) {
  return splitValuesByIndex(series, 0);
}
function splitValuesByIndex(series, index) {
  const decoded = series[index].values.map(app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_1__.decodeObject);
  return series.map((s, si) => {
    if (si === index) {
      return __spreadProps(__spreadValues({}, series[index]), { values: flatten(decoded) });
    }
    let values = [];
    for (const [i, splitByValue] of decoded.entries()) {
      if (Array.isArray(splitByValue)) {
        values = values.concat(Array(splitByValue.length).fill(s.values[i]));
      } else {
        values.push(s.values[i]);
      }
    }
    return __spreadProps(__spreadValues({}, s), { values });
  });
}
function consolidateValues(series, xvalues) {
  let i = 0;
  for (const xval of xvalues) {
    if (i < series[0].values.length && xval !== series[0].values[i] || i > series[0].values.length - 1) {
      series[0].values.splice(i, 0, xval);
      for (let j = 1; j < series.length; ++j) {
        series[j].values.splice(i, 0, 0);
      }
    }
    while (xval === series[0].values[i] && i < series[0].values.length) {
      i++;
    }
  }
  return series;
}
function formatPercent(val) {
  return Math.floor(val * 100) + " %";
}


/***/ }),

/***/ "./app/client/lib/domAsync.ts":
/*!************************************!*\
  !*** ./app/client/lib/domAsync.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "domAsync": () => (/* binding */ domAsync)
/* harmony export */ });
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var grainjs_dist_cjs_lib_browserGlobals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs/dist/cjs/lib/browserGlobals */ "./node_modules/grainjs/dist/cjs/lib/browserGlobals.js");



function domAsync(promiseForDomContents, onError = app_client_models_errors__WEBPACK_IMPORTED_MODULE_0__.reportError) {
  const markerPre = grainjs_dist_cjs_lib_browserGlobals__WEBPACK_IMPORTED_MODULE_2__.G.document.createComment("a");
  const markerPost = grainjs_dist_cjs_lib_browserGlobals__WEBPACK_IMPORTED_MODULE_2__.G.document.createComment("b");
  return [markerPre, markerPost, (elem) => {
    let disposed = false;
    promiseForDomContents.then((contents) => disposed || (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.replaceContent)(markerPre, markerPost, contents)).catch(onError);
    (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.onDisposeElem)(markerPost, () => {
      disposed = true;
    });
  }];
}


/***/ }),

/***/ "./app/client/lib/fromKoSave.ts":
/*!**************************************!*\
  !*** ./app/client/lib/fromKoSave.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KoSaveWrapObs": () => (/* binding */ KoSaveWrapObs),
/* harmony export */   "fromKoSave": () => (/* binding */ fromKoSave)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");

const wrappers = /* @__PURE__ */ new WeakMap();
function fromKoSave(koObs) {
  return wrappers.get(koObs) || wrappers.set(koObs, new KoSaveWrapObs(koObs)).get(koObs);
}
class KoSaveWrapObs extends grainjs__WEBPACK_IMPORTED_MODULE_0__.KoWrapObs {
  constructor(_koObs) {
    if (!("saveOnly" in _koObs)) {
      throw new Error("fromKoSave needs a saveable observable");
    }
    super(_koObs);
  }
  set(value) {
    this._koObs.saveOnly(value);
  }
}


/***/ }),

/***/ "./app/client/lib/koArrayWrap.ts":
/*!***************************************!*\
  !*** ./app/client/lib/koArrayWrap.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createObsArray": () => (/* binding */ createObsArray)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");

function createObsArray(owner, koArray) {
  return (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.setDisposeOwner)(owner, new KoWrapObsArray(koArray));
}
class KoWrapObsArray extends grainjs__WEBPACK_IMPORTED_MODULE_0__.MutableObsArray {
  constructor(_koArray) {
    super(Array.from(_koArray.peek()));
    this._koSub = null;
    this._koSub = _koArray.subscribe((splice) => {
      const newValues = splice.array.slice(splice.start, splice.start + splice.added);
      this.splice(splice.start, splice.deleted.length, ...newValues);
    }, null, "spliceChange");
  }
  dispose() {
    this._koSub.dispose();
    super.dispose();
  }
}


/***/ }),

/***/ "./app/client/lib/popupControl.ts":
/*!****************************************!*\
  !*** ./app/client/lib/popupControl.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "popupControl": () => (/* binding */ popupControl)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popweasel */ "./node_modules/popweasel/dist/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(popweasel__WEBPACK_IMPORTED_MODULE_1__);
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));


function popupControl(reference, domCreator, options) {
  function openFunc(openCtl) {
    const content = domCreator(openCtl);
    function dispose() {
      (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.domDispose)(content);
    }
    return { content, dispose };
  }
  const ctl = popweasel__WEBPACK_IMPORTED_MODULE_1__.PopupControl.create(null);
  ctl.attachElem(reference, openFunc, __spreadProps(__spreadValues({
    attach: "body",
    boundaries: "viewport"
  }, options), {
    trigger: void 0
  }));
  return ctl;
}


/***/ }),

/***/ "./app/client/lib/popupUtils.ts":
/*!**************************************!*\
  !*** ./app/client/lib/popupUtils.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "documentCursor": () => (/* binding */ documentCursor),
/* harmony export */   "movable": () => (/* binding */ movable)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");

function documentCursor(type) {
  const cursorStyle = document.createElement("style");
  cursorStyle.innerHTML = `*{cursor: ${type}!important;}`;
  cursorStyle.id = "cursor-style";
  document.head.appendChild(cursorStyle);
  const cursorOwner = {
    dispose() {
      if (this.isDisposed()) {
        return;
      }
      document.head.removeChild(cursorStyle);
    },
    isDisposed() {
      return !cursorStyle.isConnected;
    }
  };
  return cursorOwner;
}
function movable(options) {
  return (el) => {
    let startX = 0;
    let startY = 0;
    grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.onElem(el, "mousedown", (md) => {
      if (md.button !== 0) {
        return;
      }
      startX = md.clientX;
      startY = md.clientY;
      const state = options.onStart();
      const holder = new grainjs__WEBPACK_IMPORTED_MODULE_0__.Holder();
      const owner = grainjs__WEBPACK_IMPORTED_MODULE_0__.MultiHolder.create(holder);
      grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.autoDisposeElem(el, holder);
      owner.autoDispose(grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.onElem(document, "mousemove", (mv) => {
        const dx = mv.clientX - startX;
        const dy = mv.clientY - startY;
        options.onMove(dx, dy, state);
      }));
      owner.autoDispose(grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.onElem(document, "mouseup", () => {
        var _a;
        (_a = options.onEnd) == null ? void 0 : _a.call(options);
        holder.clear();
      }));
      owner.autoDispose(documentCursor("ns-resize"));
      md.stopPropagation();
      md.preventDefault();
    }, { useCapture: true });
  };
}


/***/ }),

/***/ "./app/client/lib/sessionObs.ts":
/*!**************************************!*\
  !*** ./app/client/lib/sessionObs.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSessionObs": () => (/* binding */ createSessionObs),
/* harmony export */   "isBoolean": () => (/* binding */ isBoolean),
/* harmony export */   "isNumber": () => (/* binding */ isNumber),
/* harmony export */   "isString": () => (/* binding */ isString)
/* harmony export */ });
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_lib_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/storage */ "./app/client/lib/storage.ts");



function createSessionObs(owner, key, _default, isValid) {
  function fromString(value) {
    const parsed = value == null ? null : (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)(value, null);
    return isValid(parsed) ? parsed : _default;
  }
  function toString(value) {
    return value === _default || !isValid(value) ? null : JSON.stringify(value);
  }
  let _pauseSaving = false;
  const storage = (0,app_client_lib_storage__WEBPACK_IMPORTED_MODULE_2__.getSessionStorage)();
  const obs = grainjs__WEBPACK_IMPORTED_MODULE_1__.Observable.create(owner, fromString(storage.getItem(key)));
  obs.addListener((value) => {
    if (_pauseSaving) {
      return;
    }
    const stored = toString(value);
    if (stored == null) {
      storage.removeItem(key);
    } else {
      storage.setItem(key, stored);
    }
  });
  return Object.assign(obs, { pauseSaving(yesNo) {
    _pauseSaving = yesNo;
  } });
}
function isNumber(t) {
  return typeof t === "number";
}
function isBoolean(t) {
  return typeof t === "boolean";
}
function isString(t) {
  return typeof t === "string";
}


/***/ }),

/***/ "./app/client/lib/simpleList.ts":
/*!**************************************!*\
  !*** ./app/client/lib/simpleList.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SimpleList": () => (/* binding */ SimpleList),
/* harmony export */   "getOptionFull": () => (/* reexport safe */ popweasel__WEBPACK_IMPORTED_MODULE_1__.getOptionFull)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popweasel */ "./node_modules/popweasel/dist/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(popweasel__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var app_client_lib_autocomplete__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/autocomplete */ "./app/client/lib/autocomplete.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");





class SimpleList extends grainjs__WEBPACK_IMPORTED_MODULE_0__.Disposable {
  constructor(_ctl, _items, _action, opt = {}) {
    var _a;
    super();
    this._ctl = _ctl;
    this._items = _items;
    this._action = _action;
    this._selectedIndex = -1;
    const renderItem = opt.renderItem || ((item) => (0,popweasel__WEBPACK_IMPORTED_MODULE_1__.getOptionFull)(item).label);
    this.content = (0,popweasel__WEBPACK_IMPORTED_MODULE_1__.cssMenuWrap)((0,grainjs__WEBPACK_IMPORTED_MODULE_0__.dom)("div", { class: app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_3__.menuCssClass + " grist-floating-menu" }, popweasel__WEBPACK_IMPORTED_MODULE_1__.cssMenu.cls(""), cssMenuExt.cls(""), (_a = opt.headerDom) == null ? void 0 : _a.call(opt), this._menuContent = cssMenuList(grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.forEach(this._items, (i) => {
      const item = (0,popweasel__WEBPACK_IMPORTED_MODULE_1__.getOptionFull)(i);
      return cssOptionRow({ class: app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_3__.menuItem.className + " " + popweasel__WEBPACK_IMPORTED_MODULE_1__.cssMenuItem.className }, grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", () => this._doAction(item.value)), renderItem(i), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.cls("disabled", Boolean(item.disabled)), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.data("itemValue", item.value));
    }))), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("mouseleave", (_ev) => this.setSelected(-1)));
    this.autoDispose(_items.addListener(() => this._update()));
    this._mouseOver = (0,app_client_lib_autocomplete__WEBPACK_IMPORTED_MODULE_2__.attachMouseOverOnMove)(this._menuContent, (ev) => this.setSelected(this._findTargetItem(ev.target)));
    this._update();
  }
  listenKeys(elem) {
    this.autoDispose(grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.onKeyElem(elem, "keydown", {
      Escape: () => this._ctl.close(),
      ArrowDown: () => this.setSelected(this._getNextSelectable(1)),
      ArrowUp: () => this.setSelected(this._getNextSelectable(-1)),
      Enter: () => this._doAction(this._getSelectedData())
    }));
  }
  setSelected(index) {
    const elem = this._menuContent.children[index] || null;
    const prev = this._selected;
    if (elem !== prev) {
      const clsName = popweasel__WEBPACK_IMPORTED_MODULE_1__.cssMenuItem.className + "-sel";
      if (prev) {
        prev.classList.remove(clsName);
      }
      if (elem) {
        elem.classList.add(clsName);
        elem.scrollIntoView({ block: "nearest" });
      }
    }
    this._selected = elem;
    this._selectedIndex = elem ? index : -1;
  }
  _update() {
    var _a;
    (_a = this._mouseOver) == null ? void 0 : _a.reset();
  }
  _findTargetItem(target) {
    const elem = (0,app_client_lib_autocomplete__WEBPACK_IMPORTED_MODULE_2__.findAncestorChild)(this._menuContent, target);
    if (elem == null ? void 0 : elem.classList.contains("disabled")) {
      return -1;
    }
    return Array.prototype.indexOf.call(this._menuContent.children, elem);
  }
  _getSelectedData() {
    return this._selected ? grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.getData(this._selected, "itemValue") : null;
  }
  _doAction(value) {
    if (value) {
      this._action(value);
    }
    this._ctl.close();
  }
  _getNext(index, step) {
    const xsize = this._items.get().length + 1;
    const next = (index + step + xsize) % xsize;
    return next === xsize - 1 ? -1 : next;
  }
  _getNextSelectable(step) {
    var _a;
    let next = this._getNext(this._selectedIndex, step);
    while ((_a = this._menuContent.children[next]) == null ? void 0 : _a.classList.contains("disabled")) {
      next = this._getNext(next, step);
    }
    return next;
  }
}
const cssMenuList = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("ul", `
  overflow: auto;
  list-style: none;
  outline: none;
  padding: 0;
  width: 100%;
  margin: 0;
`);
const cssOptionRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("li", `
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: block;
`);
const cssMenuExt = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  overflow: hidden;
  display: flex;
  flex-direction: column;
`);


/***/ }),

/***/ "./app/client/lib/sortUtil.ts":
/*!************************************!*\
  !*** ./app/client/lib/sortUtil.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addToSort": () => (/* binding */ addToSort),
/* harmony export */   "sortBy": () => (/* binding */ sortBy),
/* harmony export */   "updatePositions": () => (/* binding */ updatePositions)
/* harmony export */ });
/* harmony import */ var app_client_models_ClientColumnGetters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/models/ClientColumnGetters */ "./app/client/models/ClientColumnGetters.ts");
/* harmony import */ var app_client_models_rowset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/models/rowset */ "./app/client/models/rowset.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_SortFunc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/SortFunc */ "./app/common/SortFunc.ts");
/* harmony import */ var app_common_SortSpec__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/common/SortSpec */ "./app/common/SortSpec.ts");





const range = __webpack_require__(/*! lodash/range */ "./node_modules/lodash/range.js");
function addToSort(sortSpecObs, colRef, direction) {
  const spec = sortSpecObs.peek();
  const index = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_4__.Sort.findColIndex(spec, colRef);
  if (index !== -1) {
    spec.splice(index, 1, colRef * direction);
  } else {
    spec.push(colRef * direction);
  }
  sortSpecObs(spec);
}
function sortBy(sortSpecObs, colRef, direction) {
  var _a;
  let spec = sortSpecObs.peek();
  const colSpec = (_a = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_4__.Sort.findCol(spec, colRef)) != null ? _a : colRef;
  spec = [app_common_SortSpec__WEBPACK_IMPORTED_MODULE_4__.Sort.setColDirection(colSpec, direction)];
  sortSpecObs(spec);
}
async function updatePositions(gristDoc, section) {
  const tableId = section.table.peek().tableId.peek();
  const tableModel = gristDoc.getTableModel(tableId);
  const sortFunc = new app_common_SortFunc__WEBPACK_IMPORTED_MODULE_3__.SortFunc(new app_client_models_ClientColumnGetters__WEBPACK_IMPORTED_MODULE_0__.ClientColumnGetters(tableModel, { unversioned: true }));
  sortFunc.updateSpec(section.activeDisplaySortSpec.peek());
  const sortedRows = app_client_models_rowset__WEBPACK_IMPORTED_MODULE_1__.SortedRowSet.create(null, (a, b) => sortFunc.compare(a, b), tableModel.tableData);
  sortedRows.subscribeTo(tableModel);
  const sortedRowIds = sortedRows.getKoArray().peek().slice(0);
  sortedRows.dispose();
  const colInfo = { [app_common_gristTypes__WEBPACK_IMPORTED_MODULE_2__.MANUALSORT]: range(0, sortedRowIds.length) };
  await gristDoc.docData.sendActions([
    ["BulkUpdateRecord", tableId, sortedRowIds, colInfo],
    ["UpdateRecord", "_grist_Views_section", section.getRowId(), { sortColRefs: "[]" }]
  ], `Updated table ${tableId} row positions.`);
  section.activeSortJson.revert();
}


/***/ }),

/***/ "./app/client/lib/tableUtil.ts":
/*!*************************************!*\
  !*** ./app/client/lib/tableUtil.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fieldInsertPositions": () => (/* binding */ fieldInsertPositions),
/* harmony export */   "getDocIdHash": () => (/* binding */ getDocIdHash),
/* harmony export */   "makeDeleteAction": () => (/* binding */ makeDeleteAction),
/* harmony export */   "makePasteHtml": () => (/* binding */ makePasteHtml),
/* harmony export */   "makePasteText": () => (/* binding */ makePasteText),
/* harmony export */   "parsePasteHtml": () => (/* binding */ parsePasteHtml)
/* harmony export */ });
/* harmony import */ var app_client_lib_browserGlobals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/browserGlobals */ "./app/client/lib/browserGlobals.js");
/* harmony import */ var app_client_lib_textUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/textUtils */ "./app/client/lib/textUtils.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_tsvFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/tsvFormat */ "./app/common/tsvFormat.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");





const zipObject = __webpack_require__(/*! lodash/zipObject */ "./node_modules/lodash/zipObject.js");
const G = (0,app_client_lib_browserGlobals__WEBPACK_IMPORTED_MODULE_0__.get)("document", "DOMParser");
function fieldInsertPositions(viewFields, index, numInserts = 1) {
  const rightPos = index < viewFields.peekLength ? viewFields.at(index).parentPos() : null;
  return Array(numInserts).fill(rightPos);
}
function makePasteText(tableData, selection) {
  const values = selection.rowIds.map((rowId) => selection.columns.map((col) => col.fmtGetter(rowId)));
  return (0,app_common_tsvFormat__WEBPACK_IMPORTED_MODULE_3__.tsvEncode)(values);
}
function getDocIdHash() {
  const docId = window.gristDocPageModel.currentDocId.get();
  return (0,app_client_lib_textUtils__WEBPACK_IMPORTED_MODULE_1__.simpleStringHash)(docId);
}
function makePasteHtml(tableData, selection, includeColHeaders) {
  const rowStyle = selection.rowStyle || {};
  const colStyle = selection.colStyle || {};
  const elem = (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("table", { border: "1", cellspacing: "0", style: "white-space: pre", "data-grist-doc-id-hash": getDocIdHash() }, (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("colgroup", selection.colIds.map((colId, idx) => (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("col", {
    style: _styleAttr(colStyle[colId]),
    "data-grist-col-ref": String(selection.colRefs[idx]),
    "data-grist-col-type": tableData.getColType(colId)
  }))), includeColHeaders ? (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("tr", selection.colIds.map((colId) => (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("th", colId))) : null, selection.rowIds.map((rowId) => (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("tr", { style: _styleAttr(rowStyle[rowId]) }, selection.columns.map((col) => {
    const rawValue = col.rawGetter(rowId);
    const fmtValue = col.fmtGetter(rowId);
    const dataOptions = rawValue === fmtValue ? {} : { "data-grist-raw-value": JSON.stringify(rawValue) };
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("td", dataOptions, fmtValue);
  }))));
  return elem.outerHTML;
}
function parsePasteHtml(data) {
  const parser = new G.DOMParser();
  const doc = parser.parseFromString(data, "text/html");
  const table = doc.querySelector("table");
  const docIdHash = table.getAttribute("data-grist-doc-id-hash");
  const cols = [...table.querySelectorAll("col")];
  const rows = [...table.querySelectorAll("tr")];
  const result = rows.map((row) => Array.from(row.querySelectorAll("td, th"), (cell, colIdx) => {
    const col = cols[colIdx];
    const colType = col == null ? void 0 : col.getAttribute("data-grist-col-type");
    const colRef = col && Number(col.getAttribute("data-grist-col-ref"));
    const o = { displayValue: cell.textContent, docIdHash, colType, colRef };
    if (cell.hasAttribute("data-grist-raw-value")) {
      o.rawValue = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(cell.getAttribute("data-grist-raw-value"), o.displayValue);
    }
    return o;
  })).filter((row) => row.length > 0);
  if (result.length === 0) {
    throw new Error("Unable to parse data from text/html");
  }
  return result;
}
function _styleAttr(style) {
  if (typeof style !== "object") {
    return "";
  }
  return Object.entries(style).map(([prop, value]) => `${prop}: ${value};`).join(" ");
}
function makeDeleteAction(selection) {
  const rowIds = selection.rowIds.filter((r) => typeof r === "number");
  if (rowIds.length === 0) {
    return null;
  }
  const blankRow = rowIds.map(() => "");
  const colIds = selection.fields.filter((field) => !field.column().isRealFormula() && !field.disableEditData()).map((field) => field.colId());
  const tableId = selection.fields[0].column().table().tableId();
  if (colIds.length === 0) {
    return null;
  }
  return [
    "BulkUpdateRecord",
    tableId,
    rowIds,
    zipObject(colIds, colIds.map(() => blankRow))
  ];
}


/***/ }),

/***/ "./app/client/lib/uploads.ts":
/*!***********************************!*\
  !*** ./app/client/lib/uploads.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IMPORTABLE_EXTENSIONS": () => (/* binding */ IMPORTABLE_EXTENSIONS),
/* harmony export */   "fetchURL": () => (/* binding */ fetchURL),
/* harmony export */   "isDriveUrl": () => (/* binding */ isDriveUrl),
/* harmony export */   "selectFiles": () => (/* binding */ selectFiles),
/* harmony export */   "uploadFiles": () => (/* binding */ uploadFiles)
/* harmony export */ });
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_ui_FileDialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/FileDialog */ "./app/client/ui/FileDialog.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_uploads__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/uploads */ "./app/common/uploads.ts");
/* harmony import */ var app_common_urlUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/common/urlUtils */ "./app/common/urlUtils.ts");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");





const noop = __webpack_require__(/*! lodash/noop */ "./node_modules/lodash/noop.js");
const trimStart = __webpack_require__(/*! lodash/trimStart */ "./node_modules/lodash/trimStart.js");

const IMPORTABLE_EXTENSIONS = [".grist", ".csv", ".tsv", ".txt", ".xlsx", ".xlsm"];
async function selectFiles(options, onProgress = noop) {
  onProgress(0);
  let result = null;
  const electronSelectFiles = window.electronSelectFiles;
  if (typeof electronSelectFiles === "function") {
    result = await electronSelectFiles(getElectronOptions(options));
  } else {
    const files = await (0,app_client_ui_FileDialog__WEBPACK_IMPORTED_MODULE_1__.openFilePicker)(getFileDialogOptions(options));
    result = await uploadFiles(files, options, onProgress);
  }
  onProgress(100);
  return result;
}
function getFileDialogOptions(options) {
  const resOptions = {};
  if (options.multiple) {
    resOptions.multiple = options.multiple;
  }
  if (options.extensions) {
    resOptions.accept = options.extensions.join(",");
  }
  return resOptions;
}
function getElectronOptions(options) {
  const resOptions = {
    filters: [],
    properties: ["openFile"]
  };
  if (options.extensions) {
    const extensions = options.extensions.map((e) => trimStart(e, "."));
    resOptions.filters.push({ name: "Select files", extensions });
  }
  if (options.multiple) {
    resOptions.properties.push("multiSelections");
  }
  return resOptions;
}
async function uploadFiles(fileList, options, onProgress = noop) {
  if (!fileList.length) {
    return null;
  }
  const formData = new FormData();
  for (const file of fileList) {
    formData.append("upload", file);
  }
  const gristConfig = window.gristConfig || {};
  const { maxUploadSizeImport, maxUploadSizeAttachment } = gristConfig;
  if (options.sizeLimit === "import" && maxUploadSizeImport) {
    const totalSize = fileList.reduce((acc, f) => acc + (f.name.endsWith(".grist") ? 0 : f.size), 0);
    if (totalSize > maxUploadSizeImport) {
      throw new app_client_models_errors__WEBPACK_IMPORTED_MODULE_0__.UserError(`Imported files may not exceed ${(0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.byteString)(maxUploadSizeImport)}`);
    }
  } else if (options.sizeLimit === "attachment" && maxUploadSizeAttachment) {
    if (fileList.some((f) => f.size > maxUploadSizeAttachment)) {
      throw new app_client_models_errors__WEBPACK_IMPORTED_MODULE_0__.UserError(`Attachments may not exceed ${(0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.byteString)(maxUploadSizeAttachment)}`);
    }
  }
  return new Promise((resolve, reject) => {
    const xhr = new XMLHttpRequest();
    xhr.open("post", (0,app_common_urlUtils__WEBPACK_IMPORTED_MODULE_4__.docUrl)(options.docWorkerUrl, app_common_uploads__WEBPACK_IMPORTED_MODULE_3__.UPLOAD_URL_PATH), true);
    xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    xhr.withCredentials = true;
    xhr.upload.addEventListener("progress", (e) => {
      if (e.lengthComputable) {
        onProgress(e.loaded / e.total * 100);
      }
    });
    xhr.addEventListener("error", (e) => {
      console.warn("Upload error", e);
      reject(new Error("Upload error"));
    });
    xhr.addEventListener("load", () => {
      if (xhr.status !== 200) {
        console.warn("Upload failed", xhr.status, xhr.responseText);
        const err = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(xhr.responseText, null);
        reject(new app_client_models_errors__WEBPACK_IMPORTED_MODULE_0__.UserError("Upload failed: " + (err && err.error || xhr.status)));
      } else {
        resolve(JSON.parse(xhr.responseText));
      }
    });
    xhr.send(formData);
  });
}
async function fetchURL(docComm, url, options, onProgress = noop) {
  if (isDriveUrl(url)) {
    return docComm.fetchURL(url, options);
  }
  let response;
  try {
    response = await window.fetch(url);
  } catch (err) {
    console.log(`Could not fetch ${url} on the Client, falling back to server fetch: ${err.message}`);
    return docComm.fetchURL(url, options);
  }
  const fileName = (0,path__WEBPACK_IMPORTED_MODULE_5__.basename)(url);
  const mimeType = response.headers.get("content-type");
  const fileOptions = mimeType ? { type: mimeType } : {};
  const fileObj = new File([await response.blob()], fileName, fileOptions);
  const res = await uploadFiles([fileObj], { docWorkerUrl: docComm.docWorkerUrl }, onProgress);
  return res;
}
function isDriveUrl(url) {
  if (!url) {
    return null;
  }
  const match = /^https:\/\/(docs|drive).google.com\/(spreadsheets|file)\/d\/([^/]*)/i.exec(url);
  return !!match;
}


/***/ }),

/***/ "./app/client/models/ClientColumnGetters.ts":
/*!**************************************************!*\
  !*** ./app/client/models/ClientColumnGetters.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClientColumnGetters": () => (/* binding */ ClientColumnGetters),
/* harmony export */   "ClientColumnGettersByColId": () => (/* binding */ ClientColumnGettersByColId)
/* harmony export */ });
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_SortFunc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/SortFunc */ "./app/common/SortFunc.ts");
/* harmony import */ var app_common_SortSpec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/SortSpec */ "./app/common/SortSpec.ts");



class ClientColumnGetters {
  constructor(_tableModel, _options = {}) {
    this._tableModel = _tableModel;
    this._options = _options;
  }
  getColGetter(colSpec) {
    var _a;
    const rowModel = this._tableModel.docModel.columns.getRowModel(app_common_SortSpec__WEBPACK_IMPORTED_MODULE_2__.Sort.getColRef(colSpec));
    const colId = rowModel.colId();
    let getter = this._tableModel.tableData.getRowPropFunc(colId);
    if (!getter) {
      return null;
    }
    if (this._options.unversioned && this._tableModel.tableData.mayHaveVersions()) {
      const valueGetter = getter;
      getter = (rowId) => {
        const value = valueGetter(rowId);
        if (value && app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.isVersions(value)) {
          const versions = value[1];
          return "parent" in versions ? versions.parent : "local" in versions ? versions.local : versions.remote;
        }
        return value;
      };
    }
    const details = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_2__.Sort.specToDetails(colSpec);
    if (details.orderByChoice) {
      if (rowModel.pureType() === "Choice") {
        const choices = ((_a = rowModel.widgetOptionsJson.peek()) == null ? void 0 : _a.choices) || [];
        getter = (0,app_common_SortFunc__WEBPACK_IMPORTED_MODULE_1__.choiceGetter)(getter, choices);
      }
    }
    return getter;
  }
  getManualSortGetter() {
    const manualSortCol = this._tableModel.tableMetaRow.columns().peek().find((c) => c.colId() === app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.MANUALSORT);
    if (!manualSortCol) {
      return null;
    }
    return this.getColGetter(manualSortCol.getRowId());
  }
}
class ClientColumnGettersByColId {
  constructor(_tableData) {
    this._tableData = _tableData;
  }
  getColGetterByColId(colId) {
    return this._tableData.getRowPropFunc(colId);
  }
}


/***/ }),

/***/ "./app/client/models/ColumnFilter.ts":
/*!*******************************************!*\
  !*** ./app/client/models/ColumnFilter.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ALL_INCLUSIVE_FILTER_JSON": () => (/* binding */ ALL_INCLUSIVE_FILTER_JSON),
/* harmony export */   "ColumnFilter": () => (/* binding */ ColumnFilter),
/* harmony export */   "NEW_FILTER_JSON": () => (/* binding */ NEW_FILTER_JSON)
/* harmony export */ });
/* harmony import */ var app_common_ColumnFilterFunc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/ColumnFilterFunc */ "./app/common/ColumnFilterFunc.ts");
/* harmony import */ var app_common_FilterState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/FilterState */ "./app/common/FilterState.ts");
/* harmony import */ var app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/RelativeDates */ "./app/common/RelativeDates.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");





class ColumnFilter extends grainjs__WEBPACK_IMPORTED_MODULE_4__.Disposable {
  constructor(_initialFilterJson, _columnType = "", visibleColumnType = "", _allValues = []) {
    super();
    this._initialFilterJson = _initialFilterJson;
    this._columnType = _columnType;
    this.visibleColumnType = visibleColumnType;
    this._allValues = _allValues;
    this.min = grainjs__WEBPACK_IMPORTED_MODULE_4__.Observable.create(this, void 0);
    this.max = grainjs__WEBPACK_IMPORTED_MODULE_4__.Observable.create(this, void 0);
    this.filterFunc = grainjs__WEBPACK_IMPORTED_MODULE_4__.Observable.create(this, () => true);
    this.isInclusionFilter = grainjs__WEBPACK_IMPORTED_MODULE_4__.Computed.create(this, this.filterFunc, () => this._include);
    this.state = grainjs__WEBPACK_IMPORTED_MODULE_4__.Computed.create(this, this.filterFunc, () => this._getState());
    this.isRange = grainjs__WEBPACK_IMPORTED_MODULE_4__.Computed.create(this, this.filterFunc, () => this._isRange());
    this.setState(_initialFilterJson);
    this.autoDispose(this.min.addListener(() => this._updateState()));
    this.autoDispose(this.max.addListener(() => this._updateState()));
  }
  get columnType() {
    return this._columnType;
  }
  get initialFilterJson() {
    return this._initialFilterJson;
  }
  setState(filterJson) {
    const state = (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_1__.makeFilterState)(filterJson);
    if ((0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_1__.isRangeFilter)(state)) {
      this.min.set(state.min);
      this.max.set(state.max);
      this._include = false;
      this._values = /* @__PURE__ */ new Set();
    } else {
      this.min.set(void 0);
      this.max.set(void 0);
      this._include = state.include;
      this._values = state.values;
    }
    this._updateState();
  }
  includes(val) {
    return this.filterFunc.get()(val);
  }
  add(val) {
    this.addMany([val]);
  }
  addMany(values) {
    this._toValues();
    for (const val of values) {
      this._include ? this._values.add(val) : this._values.delete(val);
    }
    this._updateState();
  }
  delete(val) {
    this.deleteMany([val]);
  }
  deleteMany(values) {
    this._toValues();
    for (const val of values) {
      this._include ? this._values.delete(val) : this._values.add(val);
    }
    this._updateState();
  }
  clear() {
    this._values.clear();
    this._include = true;
    this._updateState();
  }
  selectAll() {
    this._values.clear();
    this._include = false;
    this._updateState();
  }
  makeFilterJson() {
    let filter;
    if (this.min.get() !== void 0 || this.max.get() !== void 0) {
      filter = { min: this.min.get(), max: this.max.get() };
    } else {
      const values = Array.from(this._values).sort(app_common_gutil__WEBPACK_IMPORTED_MODULE_3__.nativeCompare);
      filter = { [this._include ? "included" : "excluded"]: values };
    }
    return JSON.stringify(filter);
  }
  hasChanged() {
    return this.makeFilterJson() !== this._initialFilterJson;
  }
  getBoundsValue(minMax) {
    const value = this[minMax].get();
    if (value === void 0) {
      return minMax === "min" ? -Infinity : Infinity;
    }
    return (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_1__.isRelativeBound)(value) ? (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_2__.relativeDateToUnixTimestamp)(value) : value;
  }
  _updateState() {
    this.filterFunc.set((0,app_common_ColumnFilterFunc__WEBPACK_IMPORTED_MODULE_0__.makeFilterFunc)(this._getState(), this._columnType));
  }
  _getState() {
    return { include: this._include, values: this._values, min: this.min.get(), max: this.max.get() };
  }
  _isRange() {
    return (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_1__.isRangeFilter)(this._getState());
  }
  _toValues() {
    if (this._isRange()) {
      const func = this.filterFunc.get();
      const state = this._include ? { included: this._allValues.filter((val) => func(val)) } : { excluded: this._allValues.filter((val) => !func(val)) };
      this.setState(state);
    }
  }
}
const ALL_INCLUSIVE_FILTER_JSON = '{"excluded":[]}';
const NEW_FILTER_JSON = "{}";


/***/ }),

/***/ "./app/client/models/ColumnFilterMenuModel.ts":
/*!****************************************************!*\
  !*** ./app/client/models/ColumnFilterMenuModel.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ColumnFilterMenuModel": () => (/* binding */ ColumnFilterMenuModel)
/* harmony export */ });
/* harmony import */ var app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/ACIndex */ "./app/client/lib/ACIndex.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
var _a;


const escapeRegExp = __webpack_require__(/*! lodash/escapeRegExp */ "./node_modules/lodash/escapeRegExp.js");
const isNull = __webpack_require__(/*! lodash/isNull */ "./node_modules/lodash/isNull.js");
const MAXIMUM_SHOWN_FILTER_ITEMS = 500;
const localeCompare = new Intl.Collator("en-US", { numeric: true }).compare;
class ColumnFilterMenuModel extends grainjs__WEBPACK_IMPORTED_MODULE_1__.Disposable {
  constructor(_params) {
    super();
    this._params = _params;
    this.columnFilter = this._params.columnFilter;
    this.filterInfo = this._params.filterInfo;
    this.gristDoc = this._params.gristDoc;
    this.initialPinned = this.filterInfo.isPinned.peek();
    this.limitShown = (_a = this._params.limitShow) != null ? _a : MAXIMUM_SHOWN_FILTER_ITEMS;
    this.searchValue = grainjs__WEBPACK_IMPORTED_MODULE_1__.Observable.create(this, "");
    this.isSortedByCount = grainjs__WEBPACK_IMPORTED_MODULE_1__.Observable.create(this, false);
    this.filterSet = grainjs__WEBPACK_IMPORTED_MODULE_1__.Computed.create(this, this.searchValue, (_use, searchValue) => {
      const searchRegex = new RegExp(escapeRegExp((0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_0__.normalizeText)(searchValue)), "i");
      const showAllOptions = ["Bool", "Choice", "ChoiceList"].includes(this.columnFilter.columnType);
      return new Set(this._params.valueCount.filter(([_, { label, count }]) => (showAllOptions ? true : count) && searchRegex.test((0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_0__.normalizeText)(label))).map(([key]) => key));
    });
    this.filteredValues = grainjs__WEBPACK_IMPORTED_MODULE_1__.Computed.create(this, this.filterSet, this.isSortedByCount, (_use, filter, isSortedByCount) => {
      const prop = isSortedByCount ? "count" : "displayValue";
      let isShownFirst = isNull;
      if (["Date", "DateTime", "Numeric", "Int"].includes(this.columnFilter.visibleColumnType)) {
        isShownFirst = (val) => isNull(val) || isNaN(val);
      }
      const comparator = (a, b) => {
        if (isShownFirst(a)) {
          return -1;
        }
        if (isShownFirst(b)) {
          return 1;
        }
        return localeCompare(a, b);
      };
      return this._params.valueCount.filter(([key]) => filter.has(key)).sort((a, b) => comparator(a[1][prop], b[1][prop]));
    });
    this.otherValues = grainjs__WEBPACK_IMPORTED_MODULE_1__.Computed.create(this, this.filterSet, (_use, filter) => {
      return this._params.valueCount.filter(([key]) => !filter.has(key));
    });
    this.filteredKeys = grainjs__WEBPACK_IMPORTED_MODULE_1__.Computed.create(this, this.filterSet, (_use, filter) => {
      return this._params.valueCount.filter(([key]) => filter.has(key)).map(([key]) => key);
    });
    this.valuesBeyondLimit = grainjs__WEBPACK_IMPORTED_MODULE_1__.Computed.create(this, this.filteredValues, (_use, filteredValues) => {
      return filteredValues.slice(this.limitShown);
    });
  }
}


/***/ }),

/***/ "./app/client/models/ColumnToMap.ts":
/*!******************************************!*\
  !*** ./app/client/models/ColumnToMap.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ColumnToMapImpl": () => (/* binding */ ColumnToMapImpl)
/* harmony export */ });
/* harmony import */ var app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/widgets/UserType */ "./app/client/widgets/UserType.ts");

class ColumnToMapImpl {
  constructor(def) {
    var _a, _b, _c, _d, _e, _f, _g;
    this.name = typeof def === "string" ? def : def.name;
    this.title = typeof def === "string" ? def : (_a = def.title) != null ? _a : def.name;
    this.description = typeof def === "string" ? "" : (_b = def.description) != null ? _b : "";
    this.optional = typeof def === "string" ? false : (_c = def.optional) != null ? _c : false;
    this.type = typeof def === "string" ? "Any" : (_d = def.type) != null ? _d : "Any";
    this.typeDesc = String((_f = (_e = app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_0__.typeDefs[this.type]) == null ? void 0 : _e.label) != null ? _f : "any").toLowerCase();
    this.allowMultiple = typeof def === "string" ? false : (_g = def.allowMultiple) != null ? _g : false;
  }
  canByMapped(pureType) {
    return pureType === this.type || pureType === "Any" || this.type === "Any";
  }
}


/***/ }),

/***/ "./app/client/models/DataRowModel.ts":
/*!*******************************************!*\
  !*** ./app/client/models/DataRowModel.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataRowModel": () => (/* binding */ DataRowModel)
/* harmony export */ });
/* harmony import */ var app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/koUtil */ "./app/client/lib/koUtil.js");
/* harmony import */ var app_client_models_BaseRowModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/models/BaseRowModel */ "./app/client/models/BaseRowModel.js");
/* harmony import */ var app_client_models_BaseRowModel__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(app_client_models_BaseRowModel__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_2__);



class DataRowModel extends (app_client_models_BaseRowModel__WEBPACK_IMPORTED_MODULE_1___default()) {
  constructor(dataTableModel, colNames) {
    super(dataTableModel, colNames);
    this.cells = this;
    const allValidationsList = dataTableModel.tableMetaRow.validations;
    this._isAddRow = knockout__WEBPACK_IMPORTED_MODULE_2__.observable(false);
    this._isRealChange = knockout__WEBPACK_IMPORTED_MODULE_2__.observable(true);
    this._validationFailures = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_2__.pureComputed(() => {
      return allValidationsList().all().filter((validation) => !this.cells[this.getValidationNameFromId(validation.id())]());
    }));
  }
  getValidationNameFromId(id) {
    return "validation___" + id;
  }
  async updateColValues(colValues) {
    const action = this._isAddRow.peek() ? ["AddRecord", null, colValues] : ["UpdateRecord", this._rowId, colValues];
    try {
      return await this._table.sendTableAction(action);
    } finally {
      Object.keys(colValues).forEach((colId) => this._assignColumn(colId));
    }
  }
  assign(rowId) {
    this._rowId = rowId;
    this._isAddRow(rowId === "new");
    this._isRealChange(false);
    setTimeout(() => this.isDisposed() || this._isRealChange(true), 0);
    if (this._rowId !== null) {
      this._fields.forEach((colName) => this._assignColumn(colName));
    }
  }
  _assignColumn(colName) {
    if (!this.isDisposed() && this.hasOwnProperty(colName)) {
      const value = this._rowId === "new" || !this._rowId ? "" : this._table.tableData.getValue(this._rowId, colName);
      app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_0__.withKoUtils(this.cells[colName]).assign(value);
    }
  }
}


/***/ }),

/***/ "./app/client/models/DataTableModelWithDiff.ts":
/*!*****************************************************!*\
  !*** ./app/client/models/DataTableModelWithDiff.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataTableModelWithDiff": () => (/* binding */ DataTableModelWithDiff),
/* harmony export */   "ExtraRows": () => (/* binding */ ExtraRows),
/* harmony export */   "TableDataWithDiff": () => (/* binding */ TableDataWithDiff)
/* harmony export */ });
/* harmony import */ var app_client_models_DataTableModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/models/DataTableModel */ "./app/client/models/DataTableModel.js");
/* harmony import */ var app_client_models_DataTableModel__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(app_client_models_DataTableModel__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_common_ActionSummary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/ActionSummary */ "./app/common/ActionSummary.ts");
/* harmony import */ var app_common_DisposableWithEvents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/DisposableWithEvents */ "./app/common/DisposableWithEvents.ts");
/* harmony import */ var app_plugin_GristData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/plugin/GristData */ "./app/plugin/GristData.ts");




const ROW_ID_SKIP = -1;
class ExtraRows {
  constructor(tableId, comparison) {
    this.tableId = tableId;
    this.comparison = comparison;
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const remoteTableId = getRemoteTableId(tableId, comparison);
    this.leftTableDelta = (_b = (_a = this.comparison) == null ? void 0 : _a.leftChanges) == null ? void 0 : _b.tableDeltas[tableId];
    if (remoteTableId) {
      this.rightTableDelta = (_d = (_c = this.comparison) == null ? void 0 : _c.rightChanges) == null ? void 0 : _d.tableDeltas[remoteTableId];
    }
    this.rightAddRows = new Set((_e = this.rightTableDelta) == null ? void 0 : _e.addRows.map((id) => -id * 2 - 1));
    this.rightRemoveRows = new Set((_f = this.rightTableDelta) == null ? void 0 : _f.removeRows);
    this.leftAddRows = new Set((_g = this.leftTableDelta) == null ? void 0 : _g.addRows);
    this.leftRemoveRows = new Set((_h = this.leftTableDelta) == null ? void 0 : _h.removeRows.map((id) => -id * 2 - 2));
  }
  static interpretRowId(rowId) {
    if (rowId >= 0) {
      return { type: "shared", id: rowId };
    } else if (rowId === ROW_ID_SKIP) {
      return { type: "skipped", id: rowId };
    } else if (rowId % 2 !== 0) {
      return { type: "remote-add", id: -(rowId + 1) / 2 };
    }
    return { type: "local-remove", id: -(rowId + 2) / 2 };
  }
  getExtraRows() {
    return [...this.rightAddRows].concat([...this.leftRemoveRows]);
  }
  getRowType(rowId) {
    if (this.rightAddRows.has(rowId)) {
      return "remote-add";
    } else if (this.leftAddRows.has(rowId)) {
      return "local-add";
    } else if (this.rightRemoveRows.has(rowId)) {
      return "remote-remove";
    } else if (this.leftRemoveRows.has(rowId)) {
      return "local-remove";
    }
    return "";
  }
}
class DataTableModelWithDiff extends app_common_DisposableWithEvents__WEBPACK_IMPORTED_MODULE_2__.DisposableWithEvents {
  constructor(core, comparison) {
    super();
    this.core = core;
    this.tableMetaRow = core.tableMetaRow;
    this.tableQuerySets = core.tableQuerySets;
    this.docModel = core.docModel;
    const tableId = core.tableData.tableId;
    const remoteTableId = getRemoteTableId(tableId, comparison) || "";
    this.tableData = new TableDataWithDiff(core.tableData, comparison.leftChanges.tableDeltas[tableId] || (0,app_common_ActionSummary__WEBPACK_IMPORTED_MODULE_1__.createEmptyTableDelta)(), comparison.rightChanges.tableDeltas[remoteTableId] || (0,app_common_ActionSummary__WEBPACK_IMPORTED_MODULE_1__.createEmptyTableDelta)());
    this.isLoaded = core.isLoaded;
    this._wrappedModel = new (app_client_models_DataTableModel__WEBPACK_IMPORTED_MODULE_0___default())(this.docModel, this.tableData, this.tableMetaRow);
  }
  createLazyRowsModel(sortedRowSet, optRowModelClass) {
    return this._wrappedModel.createLazyRowsModel(sortedRowSet, optRowModelClass);
  }
  createFloatingRowModel(optRowModelClass) {
    return this._wrappedModel.createFloatingRowModel(optRowModelClass);
  }
  fetch(force) {
    return this.core.fetch(force);
  }
  getAllRows() {
    return this.core.getAllRows();
  }
  getNumRows() {
    return this.core.getNumRows();
  }
  getRowGrouping(groupByCol) {
    return this.core.getRowGrouping(groupByCol);
  }
  sendTableActions(actions, optDesc) {
    return this.core.sendTableActions(actions, optDesc);
  }
  sendTableAction(action, optDesc) {
    return this.core.sendTableAction(action, optDesc);
  }
}
class TableDataWithDiff {
  constructor(core, leftTableDelta, rightTableDelta) {
    this.core = core;
    this.leftTableDelta = leftTableDelta;
    this.rightTableDelta = rightTableDelta;
    this.dataLoadedEmitter = core.dataLoadedEmitter;
    this.tableActionEmitter = core.tableActionEmitter;
    this._leftRemovals = new Set(leftTableDelta.removeRows);
    this._rightRemovals = new Set(rightTableDelta.removeRows);
    this._updates = /* @__PURE__ */ new Set([
      ...leftTableDelta.updateRows.filter((r) => !this._rightRemovals.has(r)),
      ...rightTableDelta.updateRows.filter((r) => !this._leftRemovals.has(r))
    ]);
  }
  getColIds() {
    return this.core.getColIds();
  }
  sendTableActions(actions, optDesc) {
    return this.core.sendTableActions(actions, optDesc);
  }
  sendTableAction(action, optDesc) {
    return this.core.sendTableAction(action, optDesc);
  }
  getRowPropFunc(colId) {
    const fn = this.core.getRowPropFunc(colId);
    if (!fn) {
      return fn;
    }
    return (rowId) => {
      if (rowId !== "new" && (rowId < 0 || this._updates.has(rowId))) {
        return this.getValue(rowId, colId);
      }
      return fn(rowId);
    };
  }
  getKeepFunc() {
    return (rowId) => {
      return rowId === "new" || this._updates.has(rowId) || rowId < 0 || this._leftRemovals.has(rowId) || this._rightRemovals.has(rowId);
    };
  }
  getSkipRowId() {
    return ROW_ID_SKIP;
  }
  mayHaveVersions() {
    return true;
  }
  getValue(rowId, colId) {
    var _a, _b, _c, _d;
    if (rowId === ROW_ID_SKIP && colId !== "id") {
      return [app_plugin_GristData__WEBPACK_IMPORTED_MODULE_3__.GristObjCode.Skip];
    }
    if (this._updates.has(rowId)) {
      const left = (_a = this.leftTableDelta.columnDeltas[colId]) == null ? void 0 : _a[rowId];
      const right = (_b = this.rightTableDelta.columnDeltas[colId]) == null ? void 0 : _b[rowId];
      if (left !== void 0 && right !== void 0) {
        return [app_plugin_GristData__WEBPACK_IMPORTED_MODULE_3__.GristObjCode.Versions, {
          parent: oldValue(left),
          local: newValue(left),
          remote: newValue(right)
        }];
      } else if (right !== void 0) {
        return [app_plugin_GristData__WEBPACK_IMPORTED_MODULE_3__.GristObjCode.Versions, {
          parent: oldValue(right),
          remote: newValue(right)
        }];
      } else if (left !== void 0) {
        return [app_plugin_GristData__WEBPACK_IMPORTED_MODULE_3__.GristObjCode.Versions, {
          parent: oldValue(left),
          local: newValue(left)
        }];
      }
    } else {
      if (colId === "id") {
        return rowId;
      }
      const { type, id } = ExtraRows.interpretRowId(rowId);
      if (type === "remote-add") {
        const cell = (_c = this.rightTableDelta.columnDeltas[colId]) == null ? void 0 : _c[id];
        const value = cell !== void 0 ? newValue(cell) : void 0;
        return value;
      } else if (type === "local-remove") {
        const cell = (_d = this.leftTableDelta.columnDeltas[colId]) == null ? void 0 : _d[id];
        const value = cell !== void 0 ? oldValue(cell) : void 0;
        return value;
      }
    }
    return this.core.getValue(rowId, colId);
  }
  get tableId() {
    return this.core.tableId;
  }
  numRecords() {
    return this.core.numRecords();
  }
}
function oldValue(delta) {
  var _a;
  if (delta[0] === "?") {
    return null;
  }
  return (_a = delta[0]) == null ? void 0 : _a[0];
}
function newValue(delta) {
  var _a;
  if (delta[1] === "?") {
    return null;
  }
  return (_a = delta[1]) == null ? void 0 : _a[0];
}
function getRemoteTableId(tableId, comparison) {
  if (!comparison) {
    return tableId;
  }
  const parentTableId = (0,app_common_ActionSummary__WEBPACK_IMPORTED_MODULE_1__.getTableIdBefore)(comparison.leftChanges.tableRenames, tableId);
  return (0,app_common_ActionSummary__WEBPACK_IMPORTED_MODULE_1__.getTableIdAfter)(comparison.rightChanges.tableRenames, parentTableId);
}


/***/ }),

/***/ "./app/client/models/QuerySet.ts":
/*!***************************************!*\
  !*** ./app/client/models/QuerySet.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DynamicQuerySet": () => (/* binding */ DynamicQuerySet),
/* harmony export */   "QuerySet": () => (/* binding */ QuerySet),
/* harmony export */   "QuerySetManager": () => (/* binding */ QuerySetManager),
/* harmony export */   "TableQuerySets": () => (/* binding */ TableQuerySets),
/* harmony export */   "getFilterFunc": () => (/* binding */ getFilterFunc)
/* harmony export */ });
/* harmony import */ var app_client_models_ClientColumnGetters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/models/ClientColumnGetters */ "./app/client/models/ClientColumnGetters.ts");
/* harmony import */ var app_client_models_rowset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/models/rowset */ "./app/client/models/rowset.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_RefCountMap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/RefCountMap */ "./app/common/RefCountMap.ts");
/* harmony import */ var app_common_RowFilterFunc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/common/RowFilterFunc */ "./app/common/RowFilterFunc.ts");
/* harmony import */ var app_common_tbind__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/common/tbind */ "./app/common/tbind.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_7__);
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};








const debounce = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
const ON_DEMAND_ROW_LIMIT = 1e4;
const MAX_SQL_PARAMS = 500;
class QuerySetManager extends grainjs__WEBPACK_IMPORTED_MODULE_6__.Disposable {
  constructor(_docModel, docComm) {
    super();
    this._docModel = _docModel;
    this._queryMap = this.autoDispose(new app_common_RefCountMap__WEBPACK_IMPORTED_MODULE_3__.RefCountMap({
      create: (query) => QuerySet.create(null, _docModel, docComm, query, this),
      dispose: (query, querySet) => querySet.dispose(),
      gracePeriodMs: 6e4
    }));
  }
  useQuerySet(owner, query) {
    const queryKey = encodeQuery(convertQueryToRefs(this._docModel, query));
    const querySetRefCount = this._queryMap.use(queryKey);
    owner.autoDispose(querySetRefCount);
    return querySetRefCount.get();
  }
  purgeKey(queryKey) {
    this._queryMap.purgeKey(queryKey);
  }
  testSetGracePeriodMs(ms) {
    return this._queryMap.testSetGracePeriodMs(ms);
  }
}
class DynamicQuerySet extends app_client_models_rowset__WEBPACK_IMPORTED_MODULE_1__.RowSource {
  constructor(_querySetManager, _tableModel) {
    super();
    this._querySetManager = _querySetManager;
    this._tableModel = _tableModel;
    this._holder = grainjs__WEBPACK_IMPORTED_MODULE_6__.Holder.create(this);
    this._updateQuerySetDebounced = debounce((0,app_common_tbind__WEBPACK_IMPORTED_MODULE_5__.tbind)(this._updateQuerySet, this), 0);
  }
  getAllRows() {
    return this._querySet ? this._querySet.getAllRows() : [];
  }
  getNumRows() {
    return this._querySet ? this._querySet.getNumRows() : 0;
  }
  get isTruncated() {
    return this._querySet ? this._querySet.isTruncated : false;
  }
  makeQuery(filters, operations, cb) {
    const query = { tableId: this._tableModel.tableData.tableId, filters, operations };
    const newQuerySet = this._querySetManager.useQuerySet(this._holder, query);
    newQuerySet.fetchPromise.then(() => {
      this._updateQuerySetDebounced(newQuerySet, cb);
    }).catch((err) => {
      cb(err, false);
    });
  }
  _updateQuerySet(nextQuerySet, cb) {
    try {
      if (nextQuerySet !== this._querySet) {
        const oldQuerySet = this._querySet;
        this._querySet = nextQuerySet;
        if (oldQuerySet) {
          this.stopListening(oldQuerySet, "rowChange");
          this.stopListening(oldQuerySet, "rowNotify");
          this.trigger("rowChange", "remove", oldQuerySet.getAllRows());
        }
        this.trigger("rowChange", "add", this._querySet.getAllRows());
        this.listenTo(this._querySet, "rowNotify", (0,app_common_tbind__WEBPACK_IMPORTED_MODULE_5__.tbind)(this.trigger, this, "rowNotify"));
        this.listenTo(this._querySet, "rowChange", (0,app_common_tbind__WEBPACK_IMPORTED_MODULE_5__.tbind)(this.trigger, this, "rowChange"));
      }
      cb(null, true);
    } catch (err) {
      cb(err, true);
    }
  }
}
class QuerySet extends app_client_models_rowset__WEBPACK_IMPORTED_MODULE_1__.BaseFilteredRowSource {
  constructor(docModel, docComm, queryKey, qsm) {
    const queryRefs = decodeQuery(queryKey);
    const query = convertQueryFromRefs(docModel, queryRefs);
    super(getFilterFunc(docModel.docData, query));
    this.isTruncated = false;
    const isInvalid = this.autoDispose(makeQueryInvalidComputed(docModel, queryRefs));
    this.autoDispose(isInvalid.subscribe((invalid) => {
      if (invalid) {
        qsm.purgeKey(queryKey);
      }
    }));
    const tableModel = docModel.dataTables[query.tableId];
    const colIds = Object.keys(query.filters);
    if (colIds.length > 0) {
      const maxParams = Math.floor(MAX_SQL_PARAMS / colIds.length);
      for (const c of colIds) {
        const values = query.filters[c];
        if (values.length > maxParams) {
          query.filters[c] = values.slice(0, maxParams);
          this.isTruncated = true;
        }
      }
    }
    let fetchPromise;
    if (tableModel.tableMetaRow.onDemand()) {
      const tableQS = tableModel.tableQuerySets;
      fetchPromise = docComm.useQuerySet(__spreadValues({ limit: ON_DEMAND_ROW_LIMIT }, query)).then((data) => {
        const rowIds = data.tableData[2];
        if (rowIds.length >= ON_DEMAND_ROW_LIMIT) {
          this.isTruncated = true;
        }
        this.onDispose(() => {
          docComm.disposeQuerySet(data.querySubId).catch((err) => {
            console.log(`Promise rejected for disposeQuerySet: ${err.message}`);
          });
          tableQS.removeQuerySet(this);
        });
        tableQS.addQuerySet(this, data.tableData);
      });
    } else {
      fetchPromise = tableModel.fetch(false);
    }
    this.fetchPromise = fetchPromise.then(() => this.subscribeTo(tableModel));
  }
}
class TableQuerySets {
  constructor(_tableData) {
    this._tableData = _tableData;
    this._querySets = /* @__PURE__ */ new Set();
  }
  addQuerySet(querySet, data) {
    this._querySets.add(querySet);
    this._tableData.loadPartial(data);
  }
  removeQuerySet(querySet) {
    this._querySets.delete(querySet);
    const unusedRowIds = new Set(querySet.getAllRows());
    for (const qs of this._querySets) {
      for (const rowId of qs.getAllRows()) {
        unusedRowIds.delete(rowId);
      }
    }
    this._tableData.unloadPartial(Array.from(unusedRowIds));
  }
}
function getFilterFunc(docData, query) {
  const tableData = docData.getTable(query.tableId);
  const colGetters = new app_client_models_ClientColumnGetters__WEBPACK_IMPORTED_MODULE_0__.ClientColumnGettersByColId(tableData);
  const rowFilterFunc = (0,app_common_RowFilterFunc__WEBPACK_IMPORTED_MODULE_4__.getLinkingFilterFunc)(colGetters, query);
  return (rowId) => rowId !== "new" && rowFilterFunc(rowId);
}
function convertQueryToRefs(docModel, query) {
  var _a;
  const tableRec = (_a = Object.values(docModel.dataTables).find((t) => t.tableData.tableId === query.tableId)) == null ? void 0 : _a.tableMetaRow;
  if (!tableRec) {
    throw new Error(`Table ${query.tableId} not found`);
  }
  const colRefsByColId = { id: "id" };
  for (const col of tableRec.columns.peek().peek()) {
    colRefsByColId[col.colId.peek()] = col.getRowId();
  }
  const filterTuples = Object.keys(query.filters).map((colId) => {
    const values = query.filters[colId];
    values.sort(app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.nativeCompare);
    return [colRefsByColId[colId], query.operations[colId], values];
  });
  filterTuples.sort((a, b) => (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.nativeCompare)(a[0], b[0]) || (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.nativeCompare)(a[1], b[1]));
  return { tableRef: tableRec.getRowId(), filterTuples };
}
function convertQueryFromRefs(docModel, queryRefs) {
  const tableRec = docModel.dataTablesByRef.get(queryRefs.tableRef).tableMetaRow;
  const filters = {};
  const operations = {};
  for (const [colRef, operation, values] of queryRefs.filterTuples) {
    const colId = colRef === "id" ? "id" : docModel.columns.getRowModel(colRef).colId.peek();
    filters[colId] = values;
    operations[colId] = operation;
  }
  return { tableId: tableRec.tableId.peek(), filters, operations };
}
function encodeQuery(queryRefs) {
  return JSON.stringify([queryRefs.tableRef, queryRefs.filterTuples]);
}
function decodeQuery(queryKey) {
  const [tableRef, filterTuples] = JSON.parse(queryKey);
  return { tableRef, filterTuples };
}
function makeQueryInvalidComputed(docModel, queryRefs) {
  const tableFlag = docModel.tables.getRowModel(queryRefs.tableRef)._isDeleted;
  const colFlags = queryRefs.filterTuples.map(([colRef, ,]) => colRef === "id" ? null : docModel.columns.getRowModel(colRef)._isDeleted);
  return knockout__WEBPACK_IMPORTED_MODULE_7__.computed(() => Boolean(tableFlag() || colFlags.some((c) => c == null ? void 0 : c())));
}


/***/ }),

/***/ "./app/client/models/SectionFilter.ts":
/*!********************************************!*\
  !*** ./app/client/models/SectionFilter.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SectionFilter": () => (/* binding */ SectionFilter)
/* harmony export */ });
/* harmony import */ var app_common_ColumnFilterFunc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/ColumnFilterFunc */ "./app/common/ColumnFilterFunc.ts");
/* harmony import */ var app_common_RowFilterFunc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/RowFilterFunc */ "./app/common/RowFilterFunc.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");



class SectionFilter extends grainjs__WEBPACK_IMPORTED_MODULE_2__.Disposable {
  constructor(viewSection, _tableData) {
    super();
    this.viewSection = viewSection;
    this._tableData = _tableData;
    this._openFilterOverride = grainjs__WEBPACK_IMPORTED_MODULE_2__.Observable.create(this, null);
    this._tempRows = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.obsArray)();
    const columnFilterFunc = grainjs__WEBPACK_IMPORTED_MODULE_2__.Computed.create(this, this._openFilterOverride, (use, openFilter) => {
      const openFilterFilterFunc = openFilter && use(openFilter.colFilter.filterFunc);
      function getFilterFunc(fieldOrColumn, colFilter) {
        if ((openFilter == null ? void 0 : openFilter.colRef) === fieldOrColumn.origCol().getRowId()) {
          return openFilterFilterFunc;
        }
        return colFilter;
      }
      return this._buildPlainFilterFunc(getFilterFunc, use);
    });
    this.sectionFilterFunc = grainjs__WEBPACK_IMPORTED_MODULE_2__.Computed.create(this, columnFilterFunc, this._tempRows, (_use, filterFunc, tempRows) => this._addRowsToFilter(filterFunc, tempRows));
    this.autoDispose(columnFilterFunc.addListener((f) => {
      this._tempRows.set(this._tempRows.get().filter((rowId) => !f(rowId)));
    }));
  }
  setFilterOverride(colRef, colFilter) {
    this._openFilterOverride.set({ colRef, colFilter });
    colFilter.onDispose(() => {
      const override = this._openFilterOverride.get();
      if (override && override.colFilter === colFilter) {
        this._openFilterOverride.set(null);
      }
    });
  }
  addTemporaryRow(rowId) {
    if (!this.sectionFilterFunc.get()(rowId)) {
      this._tempRows.push(rowId);
    }
  }
  resetTemporaryRows() {
    this._tempRows.set([]);
  }
  buildFilterFunc(getFilterFunc, use) {
    return this._addRowsToFilter(this._buildPlainFilterFunc(getFilterFunc, use), this._tempRows.get());
  }
  _addRowsToFilter(filterFunc, rows) {
    return (rowId) => rows.includes(rowId) || typeof rowId !== "number" || filterFunc(rowId);
  }
  _buildPlainFilterFunc(getFilterFunc, use) {
    const filters = use(this.viewSection.filters);
    const funcs = filters.map(({ filter, fieldOrColumn }) => {
      const colFilter = (0,app_common_ColumnFilterFunc__WEBPACK_IMPORTED_MODULE_0__.buildColFilter)(use(filter), use(use(fieldOrColumn.origCol).type));
      const filterFunc = getFilterFunc(fieldOrColumn, colFilter);
      const getter = this._tableData.getRowPropFunc(fieldOrColumn.colId.peek());
      if (!filterFunc || !getter) {
        return null;
      }
      return (0,app_common_RowFilterFunc__WEBPACK_IMPORTED_MODULE_1__.buildRowFilter)(getter, filterFunc);
    }).filter((f) => f !== null);
    return (rowId) => funcs.every((f) => Boolean(f && f(rowId)));
  }
}


/***/ }),

/***/ "./app/client/models/Styles.ts":
/*!*************************************!*\
  !*** ./app/client/models/Styles.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CombinedStyle": () => (/* binding */ CombinedStyle)
/* harmony export */ });
class CombinedStyle {
  constructor(rules, flags) {
    var _a, _b, _c, _d, _e, _f;
    for (let i = 0; i < rules.length; i++) {
      if (flags[i]) {
        const textColor = (_a = rules[i]) == null ? void 0 : _a.textColor;
        const fillColor = (_b = rules[i]) == null ? void 0 : _b.fillColor;
        const fontBold = (_c = rules[i]) == null ? void 0 : _c.fontBold;
        const fontUnderline = (_d = rules[i]) == null ? void 0 : _d.fontUnderline;
        const fontItalic = (_e = rules[i]) == null ? void 0 : _e.fontItalic;
        const fontStrikethrough = (_f = rules[i]) == null ? void 0 : _f.fontStrikethrough;
        this.textColor = textColor || this.textColor;
        this.fillColor = fillColor || this.fillColor;
        this.fontBold = fontBold || this.fontBold;
        this.fontUnderline = fontUnderline || this.fontUnderline;
        this.fontItalic = fontItalic || this.fontItalic;
        this.fontStrikethrough = fontStrikethrough || this.fontStrikethrough;
      }
    }
  }
}


/***/ }),

/***/ "./app/client/models/rowset.ts":
/*!*************************************!*\
  !*** ./app/client/models/rowset.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ALL": () => (/* binding */ ALL),
/* harmony export */   "ArrayRowSource": () => (/* binding */ ArrayRowSource),
/* harmony export */   "BaseFilteredRowSource": () => (/* binding */ BaseFilteredRowSource),
/* harmony export */   "ExtendedRowSource": () => (/* binding */ ExtendedRowSource),
/* harmony export */   "FilteredRowSource": () => (/* binding */ FilteredRowSource),
/* harmony export */   "MappedRowSource": () => (/* binding */ MappedRowSource),
/* harmony export */   "RowGrouping": () => (/* binding */ RowGrouping),
/* harmony export */   "RowListener": () => (/* binding */ RowListener),
/* harmony export */   "RowSource": () => (/* binding */ RowSource),
/* harmony export */   "RowWatcher": () => (/* binding */ RowWatcher),
/* harmony export */   "SortedRowSet": () => (/* binding */ SortedRowSet)
/* harmony export */ });
/* harmony import */ var app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/koArray */ "./app/client/lib/koArray.js");
/* harmony import */ var app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_common_DisposableWithEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/DisposableWithEvents */ "./app/common/DisposableWithEvents.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");




const ALL = Symbol("ALL");
class RowSource extends app_common_DisposableWithEvents__WEBPACK_IMPORTED_MODULE_1__.DisposableWithEvents {
}
const _changeTypes = {
  add: "onAddRows",
  remove: "onRemoveRows",
  update: "onUpdateRows"
};
class RowListener extends app_common_DisposableWithEvents__WEBPACK_IMPORTED_MODULE_1__.DisposableWithEvents {
  subscribeTo(rowSource) {
    this.onAddRows(rowSource.getAllRows());
    this.listenTo(rowSource, "rowChange", (changeType, rows) => {
      const method = _changeTypes[changeType];
      this[method](rows);
    });
    this.listenTo(rowSource, "rowNotify", this.onRowNotify);
  }
  unsubscribeFrom(rowSource) {
    this.stopListening(rowSource, "rowChange");
    this.stopListening(rowSource, "rowNotify");
    this.onRemoveRows(rowSource.getAllRows());
  }
  onAddRows(rows) {
  }
  onRemoveRows(rows) {
  }
  onUpdateRows(rows) {
  }
  onRowNotify(rows, notifyValue) {
    this.trigger("rowNotify", rows, notifyValue);
  }
}
class ArrayRowSource extends RowSource {
  constructor(_rows) {
    super();
    this._rows = _rows;
  }
  getAllRows() {
    return this._rows;
  }
  getNumRows() {
    return this._rows.length;
  }
}
class MappedRowSource extends RowSource {
  constructor(parentRowSource, mapperFunc) {
    super();
    this.parentRowSource = parentRowSource;
    this._mapperFunc = (row) => mapperFunc(row);
    this.listenTo(parentRowSource, "rowChange", (changeType, rows) => {
      this.trigger("rowChange", changeType, Array.from(rows, this._mapperFunc));
    });
    this.listenTo(parentRowSource, "rowNotify", (rows, notifyValue) => {
      this.trigger("rowNotify", rows === ALL ? ALL : Array.from(rows, this._mapperFunc), notifyValue);
    });
  }
  getAllRows() {
    return Array.from(this.parentRowSource.getAllRows(), this._mapperFunc);
  }
  getNumRows() {
    return this.parentRowSource.getNumRows();
  }
}
class ExtendedRowSource extends RowSource {
  constructor(parentRowSource, extras) {
    super();
    this.parentRowSource = parentRowSource;
    this.extras = extras;
    this.listenTo(parentRowSource, "rowChange", (changeType, rows) => {
      this.trigger("rowChange", changeType, rows);
    });
    this.listenTo(parentRowSource, "rowNotify", (rows, notifyValue) => {
      this.trigger("rowNotify", rows === ALL ? ALL : rows, notifyValue);
    });
  }
  getAllRows() {
    return [...this.parentRowSource.getAllRows()].concat(this.extras);
  }
  getNumRows() {
    return this.parentRowSource.getNumRows() + this.extras.length;
  }
}
class BaseFilteredRowSource extends RowListener {
  constructor(_filterFunc) {
    super();
    this._filterFunc = _filterFunc;
    this._matchingRows = /* @__PURE__ */ new Set();
  }
  getAllRows() {
    return this._matchingRows.values();
  }
  getNumRows() {
    return this._matchingRows.size;
  }
  onAddRows(rows) {
    const outputRows = [];
    for (const r of rows) {
      if (this._filterFunc(r)) {
        this._matchingRows.add(r);
        outputRows.push(r);
      } else {
        this._addExcludedRow(r);
      }
    }
    if (outputRows.length > 0) {
      this.trigger("rowChange", "add", outputRows);
    }
  }
  onRemoveRows(rows) {
    const outputRows = [];
    for (const r of rows) {
      if (this._matchingRows.delete(r)) {
        outputRows.push(r);
      }
      this._deleteExcludedRow(r);
    }
    if (outputRows.length > 0) {
      this.trigger("rowChange", "remove", outputRows);
    }
  }
  onUpdateRows(rows) {
    const changes = this._updateRowsHelper({}, rows);
    if (changes.removes) {
      this.trigger("rowChange", "remove", changes.removes);
    }
    if (changes.updates) {
      this.trigger("rowChange", "update", changes.updates);
    }
    if (changes.adds) {
      this.trigger("rowChange", "add", changes.adds);
    }
  }
  onRowNotify(rows, notifyValue) {
    if (rows === ALL) {
      this.trigger("rowNotify", ALL, notifyValue);
    } else {
      const outputRows = [];
      for (const r of rows) {
        if (this._matchingRows.has(r)) {
          outputRows.push(r);
        }
      }
      if (outputRows.length > 0) {
        this.trigger("rowNotify", outputRows, notifyValue);
      }
    }
  }
  _updateRowsHelper(changes, rows) {
    for (const r of rows) {
      if (this._filterFunc(r)) {
        if (this._matchingRows.has(r)) {
          (changes.updates || (changes.updates = [])).push(r);
        } else if (this._deleteExcludedRow(r)) {
          this._matchingRows.add(r);
          (changes.adds || (changes.adds = [])).push(r);
        }
      } else {
        if (this._matchingRows.delete(r)) {
          this._addExcludedRow(r);
          (changes.removes || (changes.removes = [])).push(r);
        }
      }
    }
    return changes;
  }
  _addExcludedRow(row) {
  }
  _deleteExcludedRow(row) {
    return true;
  }
}
class FilteredRowSource extends BaseFilteredRowSource {
  constructor() {
    super(...arguments);
    this._excludedRows = /* @__PURE__ */ new Set();
  }
  updateFilter(filterFunc) {
    this._filterFunc = filterFunc;
    const changes = {};
    this._updateRowsHelper(changes, this._matchingRows);
    this._updateRowsHelper(changes, this._excludedRows);
    if (changes.removes) {
      this.trigger("rowChange", "remove", changes.removes);
    }
    if (changes.adds) {
      this.trigger("rowChange", "add", changes.adds);
    }
  }
  refilterRows(rows) {
    const changes = this._updateRowsHelper({}, rows);
    if (changes.removes) {
      this.trigger("rowChange", "remove", changes.removes);
    }
    if (changes.adds) {
      this.trigger("rowChange", "add", changes.adds);
    }
  }
  getHiddenRows() {
    return this._excludedRows.values();
  }
  _addExcludedRow(row) {
    this._excludedRows.add(row);
  }
  _deleteExcludedRow(row) {
    return this._excludedRows.delete(row);
  }
}
class RowGroupHelper extends RowSource {
  constructor(groupValue) {
    super();
    this.groupValue = groupValue;
    this._rows = /* @__PURE__ */ new Set();
  }
  getAllRows() {
    return this._rows.values();
  }
  getNumRows() {
    return this._rows.size;
  }
  _addAll(rows) {
    for (const r of rows) {
      this._rows.add(r);
    }
  }
  _removeAll(rows) {
    for (const r of rows) {
      this._rows.delete(r);
    }
  }
}
function _addToMapOfArrays(map, key, r) {
  let arr = map.get(key);
  if (!arr) {
    map.set(key, arr = []);
  }
  arr.push(r);
}
class RowGrouping extends RowListener {
  constructor(_groupFunc) {
    super();
    this._groupFunc = _groupFunc;
    this._rowsToValues = /* @__PURE__ */ new Map();
    this._valuesToGroups = /* @__PURE__ */ new Map();
    this.onDispose(() => {
      for (const rowGroupHelper of this._valuesToGroups.values()) {
        rowGroupHelper.dispose();
      }
    });
  }
  getGroup(groupValue) {
    let group = this._valuesToGroups.get(groupValue);
    if (!group) {
      group = new RowGroupHelper(groupValue);
      this._valuesToGroups.set(groupValue, group);
    }
    return group;
  }
  onAddRows(rows) {
    const groupedRows = /* @__PURE__ */ new Map();
    for (const r of rows) {
      const newValue = this._groupFunc(r);
      _addToMapOfArrays(groupedRows, newValue, r);
      this._rowsToValues.set(r, newValue);
    }
    groupedRows.forEach((groupRows, groupValue) => {
      const group = this.getGroup(groupValue);
      group._addAll(groupRows);
      group.trigger("rowChange", "add", groupRows);
    });
  }
  onRemoveRows(rows) {
    const groupedRows = /* @__PURE__ */ new Map();
    for (const r of rows) {
      _addToMapOfArrays(groupedRows, this._rowsToValues.get(r), r);
      this._rowsToValues.delete(r);
    }
    groupedRows.forEach((groupRows, groupValue) => {
      const group = this._valuesToGroups.get(groupValue);
      group._removeAll(groupRows);
      group.trigger("rowChange", "remove", groupRows);
    });
  }
  onUpdateRows(rows) {
    let updateGroup, removeGroup, insertGroup;
    for (const r of rows) {
      const oldValue = this._rowsToValues.get(r);
      const newValue = this._groupFunc(r);
      if (newValue === oldValue) {
        _addToMapOfArrays(updateGroup || (updateGroup = /* @__PURE__ */ new Map()), oldValue, r);
      } else {
        this._rowsToValues.set(r, newValue);
        _addToMapOfArrays(removeGroup || (removeGroup = /* @__PURE__ */ new Map()), oldValue, r);
        _addToMapOfArrays(insertGroup || (insertGroup = /* @__PURE__ */ new Map()), newValue, r);
      }
    }
    if (removeGroup) {
      removeGroup.forEach((groupRows, groupValue) => {
        const group = this._valuesToGroups.get(groupValue);
        group._removeAll(groupRows);
        group.trigger("rowChange", "remove", groupRows);
      });
    }
    if (updateGroup) {
      updateGroup.forEach((groupRows, groupValue) => {
        const group = this._valuesToGroups.get(groupValue);
        group.trigger("rowChange", "update", groupRows);
      });
    }
    if (insertGroup) {
      insertGroup.forEach((groupRows, groupValue) => {
        const group = this.getGroup(groupValue);
        group._addAll(groupRows);
        group.trigger("rowChange", "add", groupRows);
      });
    }
  }
  onRowNotify(rows, notifyValue) {
    if (rows === ALL) {
      for (const group of this._valuesToGroups.values()) {
        group.trigger("rowNotify", ALL, notifyValue);
      }
    } else {
      const groupedRows = /* @__PURE__ */ new Map();
      for (const r of rows) {
        _addToMapOfArrays(groupedRows, this._rowsToValues.get(r), r);
      }
      groupedRows.forEach((groupRows, groupValue) => {
        const group = this._valuesToGroups.get(groupValue);
        group.trigger("rowNotify", groupRows, notifyValue);
      });
    }
  }
}
class SortedRowSet extends RowListener {
  constructor(_compareFunc, _skippableRows) {
    super();
    this._compareFunc = _compareFunc;
    this._skippableRows = _skippableRows;
    this._allRows = /* @__PURE__ */ new Set();
    this._isPaused = false;
    this._koArray = this.autoDispose(app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0___default()());
    this._keepFunc = _skippableRows == null ? void 0 : _skippableRows.getKeepFunc();
  }
  getKoArray() {
    return this._koArray;
  }
  pause(doPause) {
    if (!doPause && this._isPaused) {
      this._koArray.assign(Array.from(this._allRows).sort(this._compareFunc));
    }
    this._isPaused = Boolean(doPause);
  }
  updateSort(compareFunc) {
    this._compareFunc = compareFunc;
    if (!this._isPaused) {
      this._koArray.assign(Array.from(this._koArray.peek()).sort(this._compareFunc));
    }
  }
  onAddRows(rows) {
    for (const r of rows) {
      this._allRows.add(r);
    }
    if (this._isPaused) {
      return;
    }
    if (this._canChangeIncrementally(rows)) {
      for (const r of rows) {
        const insertIndex = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.sortedIndex)(this._koArray.peek(), r, this._compareFunc);
        this._koArray.splice(insertIndex, 0, r);
      }
    } else {
      this._koArray.assign(this._keep(Array.from(this._allRows).sort(this._compareFunc)));
    }
  }
  onRemoveRows(rows) {
    for (const r of rows) {
      this._allRows.delete(r);
    }
    if (this._isPaused) {
      return;
    }
    if (this._canChangeIncrementally(rows)) {
      for (const r of rows) {
        const index = this._koArray.peek().indexOf(r);
        if (index !== -1) {
          this._koArray.splice(index, 1);
        }
      }
    } else {
      this._koArray.assign(this._keep(Array.from(this._allRows).sort(this._compareFunc)));
    }
  }
  onUpdateRows(rows) {
    if (this._isPaused) {
      return;
    }
    const sortedRows = Array.from(rows).sort(this._compareFunc);
    if (_allRowsSorted(this._koArray.peek(), this._allRows, sortedRows, this._compareFunc)) {
      return;
    }
    if (this._canChangeIncrementally(rows)) {
      this.onRemoveRows(rows);
      this.onAddRows(rows);
    } else {
      this._koArray.assign(this._keep(Array.from(this._koArray.peek()).sort(this._compareFunc)));
    }
  }
  _canChangeIncrementally(rows) {
    return !this._keepFunc && isSmallChange(rows);
  }
  _keep(rows, nContext = 2) {
    var _a;
    if (!this._keepFunc) {
      return rows;
    }
    const keeping = rows.map(this._keepFunc);
    const edge = rows.map(() => false);
    const n = rows.length;
    if (n >= 1) {
      keeping[0] = true;
    }
    if (n >= 2) {
      keeping[n - 1] = true;
    }
    let last = -nContext - 1;
    for (let i = 0; i < n; i++) {
      if (keeping[i]) {
        last = i;
      } else if (i - last <= nContext) {
        keeping[i] = true;
      }
    }
    last = n + nContext + 1;
    for (let i = n - 1; i >= 0; i--) {
      if (keeping[i]) {
        last = i;
      } else if (last - i <= nContext) {
        keeping[i] = true;
      }
    }
    let skipping = false;
    for (let i = 0; i < n; i++) {
      if (keeping[i]) {
        skipping = false;
      } else {
        if (!skipping) {
          edge[i] = true;
          skipping = true;
        }
      }
    }
    const skipRowId = ((_a = this._skippableRows) == null ? void 0 : _a.getSkipRowId()) || 0;
    return rows.map((v, i) => edge[i] ? skipRowId : v).filter((v, i) => keeping[i] || edge[i] || v === "new");
  }
}
class RowWatcher extends RowListener {
  constructor() {
    super(...arguments);
    this.rowFilter = grainjs__WEBPACK_IMPORTED_MODULE_3__.Observable.create(this, () => false);
    this._rowCounter = /* @__PURE__ */ new Map();
  }
  clear() {
    this._rowCounter.clear();
    this.rowFilter.set(() => false);
    this.stopListening();
  }
  onAddRows(rows) {
    for (const r of rows) {
      this._rowCounter.set(r, (this._rowCounter.get(r) || 0) + 1);
    }
    this.rowFilter.set((row) => {
      var _a;
      return ((_a = this._rowCounter.get(row)) != null ? _a : 0) > 0;
    });
  }
  onRemoveRows(rows) {
    for (const r of rows) {
      this._rowCounter.set(r, (this._rowCounter.get(r) || 0) - 1);
    }
    this.rowFilter.set((row) => {
      var _a;
      return ((_a = this._rowCounter.get(row)) != null ? _a : 0) > 0;
    });
  }
}
function isSmallChange(rows) {
  return Array.isArray(rows) && rows.length <= 2;
}
function _isIndexInOrder(array, index, compareFunc) {
  const r = array[index];
  return (index === 0 || compareFunc(array[index - 1], r) <= 0) && (index === array.length - 1 || compareFunc(r, array[index + 1]) <= 0);
}
function _allRowsSorted(array, allRows, sortedRows, compareFunc) {
  let last = 0;
  for (const r of sortedRows) {
    if (!allRows.has(r)) {
      continue;
    }
    const index = array.indexOf(r, last);
    if (index === -1 || !_isIndexInOrder(array, index, compareFunc)) {
      return false;
    }
    last = index;
  }
  return true;
}


/***/ }),

/***/ "./app/client/ui/CodeHighlight.ts":
/*!****************************************!*\
  !*** ./app/client/ui/CodeHighlight.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildHighlightedCode": () => (/* binding */ buildHighlightedCode),
/* harmony export */   "cssCodeBlock": () => (/* binding */ cssCodeBlock),
/* harmony export */   "cssFieldFormula": () => (/* binding */ cssFieldFormula)
/* harmony export */ });
/* harmony import */ var ace_builds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ace-builds */ "./node_modules/ace-builds/src-noconflict/ace.js");
/* harmony import */ var ace_builds__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ace_builds__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_common_urlUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/urlUtils */ "./app/common/urlUtils.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");




__webpack_require__(/*! ace-builds/src-noconflict/ext-static_highlight */ "./node_modules/ace-builds/src-noconflict/ext-static_highlight.js");
__webpack_require__(/*! ace-builds/src-noconflict/mode-python */ "./node_modules/ace-builds/src-noconflict/mode-python.js");
__webpack_require__(/*! ace-builds/src-noconflict/theme-chrome */ "./node_modules/ace-builds/src-noconflict/theme-chrome.js");
__webpack_require__(/*! ace-builds/src-noconflict/theme-dracula */ "./node_modules/ace-builds/src-noconflict/theme-dracula.js");
function buildHighlightedCode(code, options, ...args) {
  const { gristTheme, placeholder, maxLines } = options;
  const { enableCustomCss } = (0,app_common_urlUtils__WEBPACK_IMPORTED_MODULE_2__.getGristConfig)();
  const highlighter = ace_builds__WEBPACK_IMPORTED_MODULE_0__.require("ace/ext/static_highlight");
  const PythonMode = ace_builds__WEBPACK_IMPORTED_MODULE_0__.require("ace/mode/python").Mode;
  const aceDom = ace_builds__WEBPACK_IMPORTED_MODULE_0__.require("ace/lib/dom");
  const chrome = ace_builds__WEBPACK_IMPORTED_MODULE_0__.require("ace/theme/chrome");
  const dracula = ace_builds__WEBPACK_IMPORTED_MODULE_0__.require("ace/theme/dracula");
  const mode = new PythonMode();
  const codeText = grainjs__WEBPACK_IMPORTED_MODULE_3__.Observable.create(null, "");
  const codeTheme = grainjs__WEBPACK_IMPORTED_MODULE_3__.Observable.create(null, gristTheme.get());
  function updateHighlightedCode(elem) {
    let text = codeText.get();
    if (!text) {
      elem.textContent = placeholder || "";
      return;
    }
    if (maxLines) {
      const lines = text.split(/\n/);
      if (lines.length > maxLines) {
        text = lines.slice(0, maxLines).join("\n") + " \u2026";
      }
    }
    let aceThemeName;
    let aceTheme;
    if (codeTheme.get().appearance === "dark" && !enableCustomCss) {
      aceThemeName = "dracula";
      aceTheme = dracula;
    } else {
      aceThemeName = "chrome";
      aceTheme = chrome;
    }
    const { html, css } = highlighter.render(text, mode, aceTheme, 1, true);
    elem.innerHTML = html;
    aceDom.importCssString(css, `${aceThemeName}-highlighted-code`);
  }
  return cssHighlightedCode(grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.autoDispose(codeText), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.autoDispose(codeTheme), (elem) => (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.subscribeElem)(elem, code, (newCodeText) => {
    codeText.set(newCodeText);
    updateHighlightedCode(elem);
  }), (elem) => (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.subscribeElem)(elem, gristTheme, (newCodeTheme) => {
    codeTheme.set(newCodeTheme);
    updateHighlightedCode(elem);
  }), ...args);
}
const cssCodeBlock = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("div", `
  font-family: 'Monaco', 'Menlo', monospace;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.vars.smallFontSize};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.highlightedCodeBlockBg};
  &[disabled], &.disabled {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.highlightedCodeBlockBgDisabled};
  }
`);
const cssHighlightedCode = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)(cssCodeBlock, `
  position: relative;
  white-space: pre;
  overflow: hidden;
  text-overflow: ellipsis;
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.highlightedCodeBorder};
  border-radius: 3px;
  min-height: 28px;
  padding: 5px 6px;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.highlightedCodeFg};

  &.disabled, &.disabled .ace-chrome, &.disabled .ace-dracula {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.highlightedCodeBgDisabled};
  }
  & .ace_line {
    overflow: hidden;
    text-overflow: ellipsis;
  }
`);
const cssFieldFormula = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)(buildHighlightedCode, `
  flex: auto;
  cursor: pointer;
  margin-top: 4px;
  padding-left: 24px;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.accentIcon};

  &-disabled-icon.formula_field_sidepane::before {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.iconDisabled};
  }
  &-disabled {
    pointer-events: none;
  }
`);


/***/ }),

/***/ "./app/client/ui/ColumnFilterCalendarView.ts":
/*!***************************************************!*\
  !*** ./app/client/ui/ColumnFilterCalendarView.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ColumnFilterCalendarView": () => (/* binding */ ColumnFilterCalendarView)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_common_getCurrentTime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/getCurrentTime */ "./app/common/getCurrentTime.ts");
/* harmony import */ var app_common_FilterState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/common/FilterState */ "./app/common/FilterState.ts");
/* harmony import */ var app_client_ui_RelativeDatesOptions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui/RelativeDatesOptions */ "./app/client/ui/RelativeDatesOptions.ts");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_6__);







class ColumnFilterCalendarView extends grainjs__WEBPACK_IMPORTED_MODULE_0__.Disposable {
  constructor(_opts) {
    super();
    this._opts = _opts;
    this._moveToSelected = this._moveToSelected.bind(this);
    this.autoDispose(this.columnFilter.min.addListener(() => this._setRange()));
    this.autoDispose(this.columnFilter.max.addListener(() => this._setRange()));
    this.autoDispose(this._opts.selectedBoundObs.addListener(this._moveToSelected));
  }
  get columnFilter() {
    return this._opts.columnFilter;
  }
  get selectedBoundObs() {
    return this._opts.selectedBoundObs;
  }
  buildDom() {
    setTimeout(() => this._moveToSelected(), 0);
    return cssContainer(cssLinkRow(cssLink("\u2190 List view", grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", () => this._opts.selectedBoundObs.set(null))), cssLink("Today", grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", () => {
      this._$el.datepicker("update", this._getCurrentTime());
      this._cleanup();
    })), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.testId)("calendar-links")), cssDatepickerContainer((el) => {
      const $el = this._$el = $(el);
      $el.datepicker({
        defaultViewDate: this._getCurrentTime(),
        todayHighlight: true
      });
      $el[0].querySelector(".datepicker");
      this._setRange();
      $el.on("changeDate", () => this._onChangeDate());
      $el.on("changeMonth", () => setTimeout(() => this._cleanup(), 0));
      $el.on("changeYear", () => setTimeout(() => this._cleanup(), 0));
      $el.on("changeDecade", () => setTimeout(() => this._cleanup(), 0));
      $el.on("changeCentury", () => setTimeout(() => this._cleanup(), 0));
    }));
  }
  _setRange() {
    this._$el.datepicker("setRange", this._getRange());
    this._moveToSelected();
  }
  _moveToSelected() {
    const minMax = this._opts.selectedBoundObs.get();
    let dateValue = this._getCurrentTime();
    if (minMax !== null) {
      const value = this.columnFilter.getBoundsValue(minMax);
      if (isFinite(value)) {
        dateValue = new Date(value * 1e3);
      }
    }
    this._$el.datepicker("update", dateValue);
    this._cleanup();
  }
  _getCurrentTime() {
    return (0,app_common_getCurrentTime__WEBPACK_IMPORTED_MODULE_3__["default"])().toDate();
  }
  _onChangeDate() {
    const d = this._$el.datepicker("getUTCDate").valueOf() / 1e3;
    const { min, max } = this.columnFilter;
    if (this.selectedBoundObs.get() === "min") {
      min.set(this._updateBoundValue(min.get(), d));
      if (this.columnFilter.getBoundsValue("max") < d) {
        max.set(this._updateBoundValue(max.get(), d));
      }
    } else {
      max.set(this._updateBoundValue(max.get(), d));
      if (this.columnFilter.getBoundsValue("min") > d) {
        min.set(this._updateBoundValue(min.get(), d));
      }
    }
    this._cleanup();
  }
  _getRange() {
    const min = this.columnFilter.getBoundsValue("min");
    const max = this.columnFilter.getBoundsValue("max");
    const toDate = (val) => {
      const m = moment_timezone__WEBPACK_IMPORTED_MODULE_6___default().utc(val * 1e3);
      return new Date(Date.UTC(m.year(), m.month(), m.date()));
    };
    if (!isFinite(min) && !isFinite(max)) {
      return [];
    }
    if (!isFinite(min)) {
      return [{ valueOf: () => -Infinity }, toDate(max)];
    }
    if (!isFinite(max)) {
      return [toDate(min), { valueOf: () => Infinity }];
    }
    return [toDate(min), toDate(max)];
  }
  _updateBoundValue(val, date) {
    return (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_4__.isRelativeBound)(val) ? (0,app_client_ui_RelativeDatesOptions__WEBPACK_IMPORTED_MODULE_5__.updateRelativeDate)(val, date) : date;
  }
  _cleanup() {
    const elements = this._$el.get()[0].querySelectorAll(".active");
    for (const el of elements) {
      el.classList.remove("active");
    }
  }
}
const cssContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  padding: 16px 16px;
`);
const cssLink = app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.textButton;
const cssLinkRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  display: flex;
  justify-content: space-between;
`);
const cssDatepickerContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  padding-top: 16px;
`);


/***/ }),

/***/ "./app/client/ui/ColumnFilterMenu.ts":
/*!*******************************************!*\
  !*** ./app/client/ui/ColumnFilterMenu.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "attachColumnFilterMenu": () => (/* binding */ attachColumnFilterMenu),
/* harmony export */   "columnFilterMenu": () => (/* binding */ columnFilterMenu),
/* harmony export */   "createFilterMenu": () => (/* binding */ createFilterMenu),
/* harmony export */   "cssItemValue": () => (/* binding */ cssItemValue)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_lib_FocusLayer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/FocusLayer */ "./app/client/lib/FocusLayer.ts");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_models_ColumnFilter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/models/ColumnFilter */ "./app/client/models/ColumnFilter.ts");
/* harmony import */ var app_client_models_ColumnFilterMenuModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/models/ColumnFilterMenuModel */ "./app/client/models/ColumnFilterMenuModel.ts");
/* harmony import */ var app_client_ui_ColumnFilterCalendarView__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui/ColumnFilterCalendarView */ "./app/client/ui/ColumnFilterCalendarView.ts");
/* harmony import */ var app_client_ui_ColumnFilterMenuUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui/ColumnFilterMenuUtils */ "./app/client/ui/ColumnFilterMenuUtils.ts");
/* harmony import */ var app_client_ui_cssInput__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui/cssInput */ "./app/client/ui/cssInput.ts");
/* harmony import */ var app_client_ui_DateRangeOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui/DateRangeOptions */ "./app/client/ui/DateRangeOptions.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/ui2018/checkbox */ "./app/client/ui2018/checkbox.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_client_widgets_ChoiceListEditor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/client/widgets/ChoiceListEditor */ "./app/client/widgets/ChoiceListEditor.ts");
/* harmony import */ var app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app/client/widgets/ChoiceToken */ "./app/client/widgets/ChoiceToken.ts");
/* harmony import */ var app_common_FilterState__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/common/FilterState */ "./app/common/FilterState.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! app/common/RelativeDates */ "./app/common/RelativeDates.ts");
/* harmony import */ var app_common_ValueFormatter__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! app/common/ValueFormatter */ "./app/common/ValueFormatter.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! popweasel */ "./node_modules/popweasel/dist/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(popweasel__WEBPACK_IMPORTED_MODULE_23__);
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
























const concat = __webpack_require__(/*! lodash/concat */ "./node_modules/lodash/concat.js");
const identity = __webpack_require__(/*! lodash/identity */ "./node_modules/lodash/identity.js");
const noop = __webpack_require__(/*! lodash/noop */ "./node_modules/lodash/noop.js");
const partition = __webpack_require__(/*! lodash/partition */ "./node_modules/lodash/partition.js");
const some = __webpack_require__(/*! lodash/some */ "./node_modules/lodash/some.js");
const tail = __webpack_require__(/*! lodash/tail */ "./node_modules/lodash/tail.js");
const debounce = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__.makeT)("ColumnFilterMenu");
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.makeTestId)("test-filter-menu-");
function columnFilterMenu(owner, opts) {
  const { model, doCancel, doSave, onClose, renderValue, valueParser, showAllFiltersButton } = opts;
  const { columnFilter, filterInfo, gristDoc } = model;
  const valueFormatter = opts.valueFormatter || ((val) => (val == null ? void 0 : val.toString()) || "");
  const checkboxMap = /* @__PURE__ */ new Map();
  const filterListener = columnFilter.filterFunc.addListener(debounce((func) => {
    for (const [value, elem] of checkboxMap) {
      elem.checked = func(value);
    }
  }));
  const { searchValue: searchValueObs, filteredValues, filteredKeys, isSortedByCount } = model;
  const isAboveLimitObs = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => use(model.valuesBeyondLimit).length > 0);
  const isSearchingObs = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => Boolean(use(searchValueObs)));
  const showRangeFilter = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.isNumberType)(columnFilter.columnType) || (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.isDateLikeType)(columnFilter.columnType);
  const isDateFilter = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.isDateLikeType)(columnFilter.columnType);
  const selectedBoundObs = grainjs__WEBPACK_IMPORTED_MODULE_22__.Observable.create(owner, null);
  const viewTypeObs = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => isDateFilter && use(selectedBoundObs) ? "calendarView" : "listView");
  const isMinSelected = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => use(selectedBoundObs) === "min").onWrite((val) => val ? selectedBoundObs.set("min") : selectedBoundObs.set("max"));
  const isMaxSelected = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => use(selectedBoundObs) === "max").onWrite((val) => val ? selectedBoundObs.set("max") : selectedBoundObs.set("min"));
  let searchInput;
  let cancel = false;
  let reset = false;
  const filterMenu = cssMenu({ tabindex: "-1" }, testId("wrapper"), (elem) => {
    app_client_lib_FocusLayer__WEBPACK_IMPORTED_MODULE_1__.FocusLayer.create(owner, { defaultFocusElem: elem, pauseMousetrap: true });
    setTimeout(() => {
      const el = searchInput;
      el.focus();
      el.select();
    }, 0);
  }, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.cls(app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_14__.menuCssClass), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.autoDispose(filterListener), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onDispose(() => cancel ? doCancel() : doSave(reset)), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onKeyDown({
    Enter: () => onClose(),
    Escape: () => onClose()
  }), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(showRangeFilter, () => [
    cssRangeContainer(rangeInput(columnFilter.min, {
      isDateFilter,
      placeholder: isDateFilter ? t("Start") : t("Min"),
      valueParser,
      valueFormatter,
      isSelected: isMinSelected,
      viewTypeObs,
      nextSelected: () => selectedBoundObs.set("max")
    }, testId("min"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onKeyDown({ Tab: (e) => e.shiftKey || selectedBoundObs.set("max") })), rangeInput(columnFilter.max, {
      isDateFilter,
      placeholder: isDateFilter ? t("End") : t("Max"),
      valueParser,
      valueFormatter,
      isSelected: isMaxSelected,
      viewTypeObs
    }, testId("max"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onKeyDown({ Tab: (e) => e.shiftKey ? selectedBoundObs.set("min") : selectedBoundObs.set("max") }))),
    grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(isDateFilter, () => {
      function action(option) {
        const { min, max } = option;
        columnFilter.min.set(min);
        columnFilter.max.set(max);
        selectedBoundObs.set("min");
      }
      return [
        cssLinkRow(testId("presets-links"), cssLink(app_client_ui_DateRangeOptions__WEBPACK_IMPORTED_MODULE_8__.DateRangeOptions[0].label, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => action(app_client_ui_DateRangeOptions__WEBPACK_IMPORTED_MODULE_8__.DateRangeOptions[0]))), cssLink(app_client_ui_DateRangeOptions__WEBPACK_IMPORTED_MODULE_8__.DateRangeOptions[1].label, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => action(app_client_ui_DateRangeOptions__WEBPACK_IMPORTED_MODULE_8__.DateRangeOptions[1]))), cssLink("More ", (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_13__.icon)("Dropdown"), (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_14__.menu)(() => app_client_ui_DateRangeOptions__WEBPACK_IMPORTED_MODULE_8__.DateRangeOptions.map((option) => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_14__.menuItem)(() => action(option), option.label)), { attach: "." + cssMenu.className })))
      ];
    }),
    cssMenuDivider()
  ]), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domComputed(viewTypeObs, (viewType) => viewType === "listView" ? ListView() : grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(app_client_ui_ColumnFilterCalendarView__WEBPACK_IMPORTED_MODULE_5__.ColumnFilterCalendarView, {
    viewTypeObs,
    selectedBoundObs,
    columnFilter
  })), Footer(), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", (ev) => ev.stopPropagation()));
  function ListView() {
    return [
      cssMenuHeader(cssSearchIcon("Search"), searchInput = cssSearch(searchValueObs, { onInput: true }, testId("search-input"), { type: "search", placeholder: t("Search values") }, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onKeyDown({
        Enter: () => {
          if (searchValueObs.get()) {
            columnFilter.setState({ included: filteredKeys.get() });
          }
        },
        Escape$: (ev) => {
          if (searchValueObs.get()) {
            searchValueObs.set("");
            searchInput.focus();
            ev.stopPropagation();
          }
        }
      })), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(searchValueObs, () => cssSearchIcon("CrossSmall", testId("search-close"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => {
        searchValueObs.set("");
        searchInput.focus();
      })))),
      cssMenuDivider(),
      cssMenuItem(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domComputed((use) => {
        const searchValue = use(searchValueObs);
        use(filteredKeys);
        const allSpec = searchValue ? { included: use(filteredKeys) } : { excluded: [] };
        const noneSpec = searchValue ? { excluded: use(filteredKeys) } : { included: [] };
        const state = use(columnFilter.state);
        return [
          cssSelectAll(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.text(searchValue ? t("All Shown") : t("All")), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.prop("disabled", (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_17__.isEquivalentFilter)(state, allSpec)), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => columnFilter.setState(allSpec)), testId("bulk-action")),
          cssDotSeparator("\u2022"),
          cssSelectAll(searchValue ? t("All Except") : t("None"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.prop("disabled", (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_17__.isEquivalentFilter)(state, noneSpec)), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => columnFilter.setState(noneSpec)), testId("bulk-action"))
        ];
      }), cssSortIcon("Sort", cssSortIcon.cls("-active", isSortedByCount), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => isSortedByCount.set(!isSortedByCount.get())))),
      cssItemList(testId("list"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => use(filteredValues).length === 0, () => cssNoResults(t("No matching values"))), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domComputed(filteredValues, (values) => values.slice(0, model.limitShown).map(([key, value]) => cssMenuItem(cssLabel((0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_11__.cssCheckboxSquare)({ type: "checkbox" }, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("change", (_ev, elem) => {
        elem.checked ? columnFilter.add(key) : columnFilter.delete(key);
      }), (elem) => {
        elem.checked = columnFilter.includes(key);
        checkboxMap.set(key, elem);
      }, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.style("position", "relative")), renderValue(key, value)), cssItemCount(value.count.toLocaleString(), testId("count"))))))
    ];
  }
  function Footer() {
    return [
      cssMenuDivider(),
      cssMenuFooter(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domComputed((use) => {
        const isAboveLimit = use(isAboveLimitObs);
        const searchValue = use(isSearchingObs);
        const otherValues = use(model.otherValues);
        const anyOtherValues = Boolean(otherValues.length);
        const valuesBeyondLimit = use(model.valuesBeyondLimit);
        const isRangeFilter = use(columnFilter.isRange);
        if (isRangeFilter || use(viewTypeObs) === "calendarView") {
          return [];
        }
        if (isAboveLimit) {
          return searchValue ? [
            buildSummary(t("Other Matching"), valuesBeyondLimit, false, model),
            buildSummary(t("Other Non-Matching"), otherValues, true, model)
          ] : [
            buildSummary(t("Other Values"), concat(otherValues, valuesBeyondLimit), false, model),
            buildSummary(t("Future Values"), [], true, model)
          ];
        } else {
          return anyOtherValues ? [
            buildSummary(t("Others"), otherValues, true, model)
          ] : [
            buildSummary(t("Future Values"), [], true, model)
          ];
        }
      }), cssFooterButtons((0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", cssPrimaryButton("Close", testId("apply-btn"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => {
        reset = true;
        onClose();
      })), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_10__.basicButton)("Cancel", testId("cancel-btn"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => {
        cancel = true;
        onClose();
      })), !showAllFiltersButton ? null : cssAllFiltersButton("All filters", grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => {
        onClose();
        app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.sortFilterMenuOpen.run(filterInfo.viewSection.getRowId());
      }), testId("all-filters-btn"))), (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssPinButton)((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_13__.icon)("PinTilted"), app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_9__.cssPinButton.cls("-pinned", model.filterInfo.isPinned), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => filterInfo.pinned(!filterInfo.pinned())), gristDoc.behavioralPromptsManager.attachTip("filterButtons", {
        popupOptions: {
          attach: null,
          modifiers: {
            flip: {
              behavior: ["right", "top"]
            }
          },
          placement: "right"
        }
      }), testId("pin-btn")))))
    ];
  }
  return filterMenu;
}
function rangeInput(obs, opts, ...args) {
  const buildInput = () => [
    grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_17__.isRelativeBound)(use(obs)), () => relativeToken(obs, opts)),
    numericInput(obs, opts)
  ];
  return cssRangeInputContainer(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(opts.isDateFilter, () => [
    cssRangeInputIcon("FieldDate"),
    buildInput(),
    (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_13__.icon)("Dropdown")
  ]), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(!opts.isDateFilter, () => [
    buildInput()
  ]), cssRangeInputContainer.cls("-relative", (use) => (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_17__.isRelativeBound)(use(obs))), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.cls("selected", (use) => use(opts.viewTypeObs) === "calendarView" && use(opts.isSelected)), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => opts.isSelected.set(true)), (elem) => opts.isDateFilter ? attachRelativeDatesOptions(elem, obs, opts) : null, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onKeyDown({
    Backspace$: () => (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_17__.isRelativeBound)(obs.get()) && obs.set(void 0)
  }), ...args);
}
function attachRelativeDatesOptions(elem, obs, opts) {
  const popupCtl = (0,app_client_ui_ColumnFilterMenuUtils__WEBPACK_IMPORTED_MODULE_6__.relativeDatesControl)(elem, obs, __spreadProps(__spreadValues({}, opts), {
    placement: "right-start",
    attach: "." + cssMenu.className
  }));
  const onValueChange = () => {
    if (opts.isSelected.get()) {
      popupCtl.open();
    } else {
      popupCtl.close();
    }
  };
  grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.update(elem, [
    grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => popupCtl.toggle()),
    grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.autoDispose(opts.isSelected.addListener(onValueChange)),
    grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.autoDispose(obs.addListener(onValueChange)),
    grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onKeyDown({
      Enter$: (e) => {
        var _a;
        if (opts.viewTypeObs.get() === "listView") {
          return;
        }
        if (opts.isSelected.get()) {
          if (popupCtl.isOpen()) {
            (_a = opts.nextSelected) == null ? void 0 : _a.call(opts);
          } else {
            popupCtl.open();
          }
        }
        e.stopPropagation();
      }
    })
  ]);
}
function numericInput(obs, opts, ...args) {
  const valueParser = opts.valueParser || Number;
  const formatValue = opts.valueFormatter;
  const placeholder = opts.placeholder;
  let editMode = false;
  let inputEl;
  const onBlur = () => {
    onInput.flush();
    editMode = false;
    inputEl.value = formatValue(obs.get());
    setTimeout(() => {
      if (opts.viewTypeObs.get() === "calendarView" && opts.isSelected.get()) {
        inputEl.focus();
      }
    });
  };
  const onInput = debounce(() => {
    if ((0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_17__.isRelativeBound)(obs.get())) {
      return;
    }
    editMode = true;
    const val = inputEl.value ? valueParser(inputEl.value) : void 0;
    if (val === void 0 || typeof val === "number" && !isNaN(val)) {
      obs.set(val);
    }
  }, 100);
  return inputEl = cssRangeInput({ inputmode: "numeric", placeholder, value: formatValue(obs.get()) }, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("input", onInput), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("blur", onBlur), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.autoDispose(obs.addListener(() => editMode ? null : inputEl.value = formatValue(obs.get()))), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.autoDispose(opts.isSelected.addListener((val) => val && inputEl.focus())), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onKeyDown({
    Enter$: () => onBlur(),
    Tab$: () => onBlur()
  }), ...args);
}
function relativeToken(obs, opts) {
  return cssTokenContainer(cssTokenToken(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.text((use) => (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_19__.formatRelBounds)(use(obs))), (0,app_client_widgets_ChoiceListEditor__WEBPACK_IMPORTED_MODULE_15__.cssDeleteButton)(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("mousedown", (ev) => ev.stopPropagation()), (0,app_client_widgets_ChoiceListEditor__WEBPACK_IMPORTED_MODULE_15__.cssDeleteIcon)("CrossSmall"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => obs.set(void 0)), testId("tokenfield-delete")), testId("tokenfield-token")));
}
function buildSummary(label, values, switchFilterType, model) {
  const columnFilter = model.columnFilter;
  const checkboxState = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(null, columnFilter.isInclusionFilter, columnFilter.filterFunc, (_use, isInclusionFilter) => {
    const subOptions = values.map((val) => ({ getState: () => columnFilter.includes(val[0]) }));
    if (switchFilterType) {
      subOptions.push({ getState: () => !isInclusionFilter });
    }
    if (!subOptions.length) {
      return false;
    }
    const first = subOptions[0].getState();
    if (some(tail(subOptions), (val) => val.getState() !== first)) {
      return app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_11__.Indeterminate;
    }
    return first;
  }).onWrite((val) => {
    if (switchFilterType) {
      const state = val ? { excluded: model.filteredKeys.get().filter((key) => !columnFilter.includes(key)) } : { included: model.filteredKeys.get().filter((key) => columnFilter.includes(key)) };
      columnFilter.setState(state);
    } else {
      const keys = values.map(([key]) => key);
      if (val) {
        columnFilter.addMany(keys);
      } else {
        columnFilter.deleteMany(keys);
      }
    }
  });
  return cssMenuItem(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.autoDispose(checkboxState), testId("summary"), (0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_11__.labeledTriStateSquareCheckbox)(checkboxState, `${label} ${formatUniqueCount(values)}`.trim()), cssItemCount(formatCount(values), testId("count")));
}
function formatCount(values) {
  const count = getCount(values);
  return count ? count.toLocaleString() : "";
}
function formatUniqueCount(values) {
  const count = values.length;
  return count ? "(" + count.toLocaleString() + ")" : "";
}
function getEmptyCountMap(fieldOrColumn) {
  var _a;
  const columnType = fieldOrColumn.origCol().type();
  let values = [];
  if (columnType === "Bool") {
    values = [true, false];
  } else if (["Choice", "ChoiceList"].includes(columnType)) {
    const options = fieldOrColumn.origCol().widgetOptionsJson;
    values = (_a = options.prop("choices")()) != null ? _a : [];
  }
  return new Map(values.map((v) => [v, { label: String(v), count: 0, displayValue: v }]));
}
function createFilterMenu(params) {
  var _a, _b;
  const {
    openCtl,
    sectionFilter,
    filterInfo,
    rowSource,
    tableData,
    gristDoc,
    showAllFiltersButton,
    onClose = noop
  } = params;
  const { fieldOrColumn, filter, isPinned } = filterInfo;
  const columnType = fieldOrColumn.origCol.peek().type.peek();
  const visibleColumnType = ((_a = fieldOrColumn.visibleColModel.peek()) == null ? void 0 : _a.type.peek()) || columnType;
  const { keyMapFunc, labelMapFunc, valueMapFunc } = getMapFuncs(columnType, tableData, fieldOrColumn);
  const valueParser = (_b = fieldOrColumn.createValueParser) == null ? void 0 : _b.call(fieldOrColumn);
  let colFormatter = fieldOrColumn.visibleColFormatter();
  if ((0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.extractTypeFromColType)(colFormatter.type) === "DateTime") {
    const { docSettings } = colFormatter;
    const widgetOpts = fieldOrColumn.origCol.peek().widgetOptionsJson();
    colFormatter = (0,app_common_ValueFormatter__WEBPACK_IMPORTED_MODULE_20__.createFormatter)("Date", widgetOpts, docSettings);
  }
  const valueFormatter = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.isDateLikeType)(visibleColumnType) ? (val) => colFormatter.formatAny(val) : void 0;
  function getFilterFunc(col, colFilter) {
    return col.getRowId() === fieldOrColumn.getRowId() ? null : colFilter;
  }
  const filterFunc = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(null, (use) => sectionFilter.buildFilterFunc(getFilterFunc, use));
  openCtl.autoDispose(filterFunc);
  const [allRows, hiddenRows] = partition(Array.from(rowSource.getAllRows()), filterFunc.get());
  const valueCounts = getEmptyCountMap(fieldOrColumn);
  addCountsToMap(valueCounts, allRows, {
    keyMapFunc,
    labelMapFunc,
    columnType,
    valueMapFunc
  });
  addCountsToMap(valueCounts, hiddenRows, {
    keyMapFunc,
    labelMapFunc,
    columnType,
    areHiddenRows: true,
    valueMapFunc
  });
  const valueCountsArr = Array.from(valueCounts);
  const columnFilter = app_client_models_ColumnFilter__WEBPACK_IMPORTED_MODULE_3__.ColumnFilter.create(openCtl, filter.peek(), columnType, visibleColumnType, valueCountsArr.map((arr) => arr[0]));
  sectionFilter.setFilterOverride(fieldOrColumn.origCol().getRowId(), columnFilter);
  const model = app_client_models_ColumnFilterMenuModel__WEBPACK_IMPORTED_MODULE_4__.ColumnFilterMenuModel.create(openCtl, {
    columnFilter,
    filterInfo,
    valueCount: valueCountsArr,
    gristDoc
  });
  return columnFilterMenu(openCtl, {
    model,
    valueCounts,
    onClose: () => {
      openCtl.close();
      onClose();
    },
    doSave: (reset = false) => {
      const spec = columnFilter.makeFilterJson();
      const { viewSection } = sectionFilter;
      viewSection.setFilter(fieldOrColumn.origCol().origColRef(), { filter: spec });
      if (reset) {
        sectionFilter.resetTemporaryRows();
      }
      const isNewPinnedFilter = columnFilter.initialFilterJson === app_client_models_ColumnFilter__WEBPACK_IMPORTED_MODULE_3__.NEW_FILTER_JSON && isPinned();
      if (isNewPinnedFilter && viewSection.pinnedActiveFilters.get().length === 2) {
        viewSection.showNestedFilteringPopup.set(true);
      }
    },
    doCancel: () => {
      const { viewSection } = sectionFilter;
      if (columnFilter.initialFilterJson === app_client_models_ColumnFilter__WEBPACK_IMPORTED_MODULE_3__.NEW_FILTER_JSON) {
        viewSection.revertFilter(fieldOrColumn.origCol().origColRef());
      } else {
        const initialFilter = columnFilter.initialFilterJson;
        columnFilter.setState(initialFilter);
        viewSection.setFilter(fieldOrColumn.origCol().origColRef(), { filter: initialFilter, pinned: model.initialPinned });
      }
    },
    renderValue: getRenderFunc(columnType, fieldOrColumn),
    valueParser,
    valueFormatter,
    showAllFiltersButton
  });
}
function getMapFuncs(columnType, tableData, fieldOrColumn) {
  const keyMapFunc = tableData.getRowPropFunc(fieldOrColumn.colId());
  const labelGetter = tableData.getRowPropFunc(fieldOrColumn.displayColModel().colId());
  const formatter = fieldOrColumn.visibleColFormatter();
  let labelMapFunc;
  const valueMapFunc = (rowId) => (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_21__.decodeObject)(labelGetter(rowId));
  if ((0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.isRefListType)(columnType)) {
    labelMapFunc = (rowId) => {
      const maybeLabels = labelGetter(rowId);
      if (!maybeLabels) {
        return "";
      }
      const labels = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.isList)(maybeLabels) ? maybeLabels.slice(1) : [maybeLabels];
      return labels.map((l) => formatter.formatAny(l));
    };
  } else {
    labelMapFunc = (rowId) => formatter.formatAny(labelGetter(rowId));
  }
  return { keyMapFunc, labelMapFunc, valueMapFunc };
}
function getRenderFunc(columnType, fieldOrColumn) {
  if (["Choice", "ChoiceList"].includes(columnType)) {
    const options = fieldOrColumn.widgetOptionsJson.peek();
    const choiceSet = new Set(options.choices || []);
    const choiceOptions = options.choiceOptions || {};
    return (_key, value) => {
      var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
      if (value.label === "") {
        return cssItemValue(value.label);
      }
      return (0,app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_16__.choiceToken)(value.label, {
        fillColor: (_a = choiceOptions[value.label]) == null ? void 0 : _a.fillColor,
        textColor: (_b = choiceOptions[value.label]) == null ? void 0 : _b.textColor,
        fontBold: (_d = (_c = choiceOptions[value.label]) == null ? void 0 : _c.fontBold) != null ? _d : false,
        fontUnderline: (_f = (_e = choiceOptions[value.label]) == null ? void 0 : _e.fontUnderline) != null ? _f : false,
        fontItalic: (_h = (_g = choiceOptions[value.label]) == null ? void 0 : _g.fontItalic) != null ? _h : false,
        fontStrikethrough: (_j = (_i = choiceOptions[value.label]) == null ? void 0 : _i.fontStrikethrough) != null ? _j : false,
        invalid: !choiceSet.has(value.label)
      }, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.cls(cssToken.className), testId("choice-token"));
    };
  }
  return (key, value) => cssItemValue(value.label === void 0 ? String(key) : value.label);
}
function addCountsToMap(valueMap, rowIds, {
  keyMapFunc = identity,
  labelMapFunc = identity,
  columnType,
  areHiddenRows = false,
  valueMapFunc
}) {
  for (const rowId of rowIds) {
    let key = keyMapFunc(rowId);
    if ((0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.isList)(key) && columnType === "ChoiceList") {
      const list = (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_21__.decodeObject)(key);
      if (!list.length) {
        addSingleCountToMap(valueMap, "", () => "", () => "", areHiddenRows);
      }
      for (const item of list) {
        addSingleCountToMap(valueMap, item, () => item, () => item, areHiddenRows);
      }
      continue;
    }
    if ((0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.isList)(key) && (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_18__.isRefListType)(columnType)) {
      const refIds = (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_21__.decodeObject)(key);
      if (!refIds.length) {
        addSingleCountToMap(valueMap, null, () => null, () => null, areHiddenRows);
      }
      const refLabels = labelMapFunc(rowId);
      const displayValues = valueMapFunc(rowId);
      refIds.forEach((id, i) => {
        addSingleCountToMap(valueMap, id, () => refLabels[i], () => displayValues[i], areHiddenRows);
      });
      continue;
    }
    if (Array.isArray(key)) {
      key = JSON.stringify(key);
    }
    addSingleCountToMap(valueMap, key, () => labelMapFunc(rowId), () => valueMapFunc(rowId), areHiddenRows);
  }
}
function addSingleCountToMap(valueMap, value, label, displayValue, isHiddenRow) {
  if (!valueMap.has(value)) {
    valueMap.set(value, { label: label(), count: 0, displayValue: displayValue() });
  }
  if (!isHiddenRow) {
    valueMap.get(value).count++;
  }
}
function getCount(values) {
  return values.reduce((acc, val) => acc + val[1].count, 0);
}
const defaultPopupOptions = {
  placement: "bottom-start",
  boundaries: "viewport",
  trigger: ["click"]
};
function attachColumnFilterMenu(filterInfo, options = {}) {
  const _a = options, { popupOptions } = _a, filterMenuOptions = __objRest(_a, ["popupOptions"]);
  const popupOptionsWithDefaults = __spreadValues(__spreadValues({}, defaultPopupOptions), popupOptions);
  return (elem) => {
    const instance = filterInfo.viewSection.viewInstance();
    if (instance && instance.createFilterMenu) {
      (0,popweasel__WEBPACK_IMPORTED_MODULE_23__.setPopupToCreateDom)(elem, (ctl) => instance.createFilterMenu(ctl, filterInfo, filterMenuOptions), popupOptionsWithDefaults);
    }
  };
}
const cssMenu = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  flex-direction: column;
  min-width: 252px;
  max-width: 400px;
  max-height: 90vh;
  outline: none;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.menuBg};
  padding-top: 0;
  padding-bottom: 12px;
`);
const cssMenuHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  height: 40px;
  flex-shrink: 0;

  display: flex;
  align-items: center;

  margin: 0 16px;
`);
const cssSelectAll = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_10__.textButton, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.controlFg};
`);
const cssDotSeparator = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("span", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.controlFg};
  margin: 0 4px;
  user-select: none;
`);
const cssMenuDivider = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_14__.menuDivider, `
  flex-shrink: 0;
  margin: 0;
`);
const cssItemList = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  flex-shrink: 1;
  overflow: auto;
  min-height: 80px;
  margin-top: 4px;
  padding-bottom: 8px;
`);
const cssMenuItem = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  padding: 8px 16px;
`);
const cssLink = app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_10__.textButton;
const cssLinkRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(cssMenuItem, `
  column-gap: 12px;
  padding-top: 0;
  padding-bottom: 16px;
`);
const cssItemValue = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_11__.cssLabelText, `
  margin-right: 12px;
  white-space: pre;
`);
const cssItemCount = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  flex-grow: 1;
  align-self: normal;
  text-align: right;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.lightText};
`);
const cssMenuFooter = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  padding-top: 4px;
`);
const cssFooterButtons = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 16px;
`);
const cssPrimaryButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_10__.primaryButton, `
  margin-right: 8px;
`);
const cssAllFiltersButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_10__.textButton, `
  margin-left: 8px;
`);
const cssSearch = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(grainjs__WEBPACK_IMPORTED_MODULE_22__.input, `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.inputFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.inputBg};
  flex-grow: 1;
  min-width: 1px;
  -webkit-appearance: none;
  -moz-appearance: none;

  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.vars.mediumFontSize};

  margin: 0px 16px 0px 8px;
  padding: 0px;
  border: none;
  outline: none;

  &::placeholder {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.inputPlaceholderFg};
  }
`);
const cssSearchIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_13__.icon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.lightText};
  flex-shrink: 0;
  margin-left: auto;
  margin-right: 4px;
`);
const cssNoResults = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(cssMenuItem, `
  font-style: italic;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.lightText};
  justify-content: center;
`);
const cssSortIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_13__.icon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.controlSecondaryFg};
  margin-left: auto;
  &-active {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.controlFg}
  }
`);
const cssLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_11__.cssLabel, `
  align-items: center;
  font-weight: initial;   /* negate bootstrap */
`);
const cssToken = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  margin-left: 8px;
  margin-right: 12px;
`);
const cssRangeContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(cssMenuItem, `
  display: flex;
  align-items: center;
  row-gap: 6px;
  flex-direction: column;
  padding: 16px 16px;
`);
const cssRangeInputContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  position: relative;
  width: 100%;
  display: flex;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.inputBg};
  height: 30px;
  width: 100%;
  border-radius: 3px;
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.inputBorder};
  outline: none;
  padding: 5px;
  &.selected {
    border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_12__.theme.inputValid};
  }
  &-relative input {
    padding: 0;
    max-width: 0;
  }
`);
const cssRangeInputIcon = app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_14__.cssOptionRowIcon;
const cssRangeInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui_cssInput__WEBPACK_IMPORTED_MODULE_7__.cssInput, `
  height: unset;
  border: none;
  padding: 0;
  width: unset;
  flex-grow: 1;
`);
const cssTokenToken = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_widgets_ChoiceListEditor__WEBPACK_IMPORTED_MODULE_15__.cssToken, `
  height: 18px;
  line-height: unset;
  align-self: center;
  cursor: default;
`);
const cssTokenContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  width: 100%;
  display: flex;
  outline: none;
`);


/***/ }),

/***/ "./app/client/ui/ColumnFilterMenuUtils.ts":
/*!************************************************!*\
  !*** ./app/client/ui/ColumnFilterMenuUtils.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "relativeDatesControl": () => (/* binding */ relativeDatesControl)
/* harmony export */ });
/* harmony import */ var app_common_FilterState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/FilterState */ "./app/common/FilterState.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_lib_popupControl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/popupControl */ "./app/client/lib/popupControl.ts");
/* harmony import */ var app_client_lib_simpleList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/lib/simpleList */ "./app/client/lib/simpleList.ts");
/* harmony import */ var app_client_ui_RelativeDatesOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui/RelativeDatesOptions */ "./app/client/ui/RelativeDatesOptions.ts");





function relativeDatesControl(reference, obs, opt) {
  const popupCtl = (0,app_client_lib_popupControl__WEBPACK_IMPORTED_MODULE_2__.popupControl)(reference, (ctl) => RelativeDatesMenu.create(null, ctl, obs, opt).content, opt);
  grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.autoDisposeElem(reference, popupCtl);
  return popupCtl;
}
class RelativeDatesMenu extends grainjs__WEBPACK_IMPORTED_MODULE_1__.Disposable {
  constructor(ctl, _obs, _opt) {
    super();
    this._obs = _obs;
    this._opt = _opt;
    this._items = grainjs__WEBPACK_IMPORTED_MODULE_1__.Observable.create(this, []);
    this._dropdownList = app_client_lib_simpleList__WEBPACK_IMPORTED_MODULE_3__.SimpleList.create(this, ctl, this._items, this._action.bind(this));
    this._dropdownList.listenKeys(ctl.getTriggerElem());
    this.content = this._dropdownList.content;
    this.autoDispose(this._obs.addListener(() => this._update()));
    this._update();
  }
  _getOptions() {
    const newItems = (0,app_client_ui_RelativeDatesOptions__WEBPACK_IMPORTED_MODULE_4__.relativeDatesOptions)(this._obs.get(), this._opt.valueFormatter);
    return newItems.map((item) => ({ label: item.label, value: item.spec }));
  }
  _update() {
    this._items.set(this._getOptions());
    const index = this._items.get().findIndex((o) => (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_0__.isEquivalentBound)(o.value, this._obs.get()));
    this._dropdownList.setSelected(index != null ? index : -1);
  }
  _action(value) {
    this._obs.set(value);
  }
}


/***/ }),

/***/ "./app/client/ui/CustomSectionConfig.ts":
/*!**********************************************!*\
  !*** ./app/client/ui/CustomSectionConfig.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomSectionConfig": () => (/* binding */ CustomSectionConfig)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/koForm */ "./app/client/lib/koForm.js");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_models_ColumnToMap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/models/ColumnToMap */ "./app/client/models/ColumnToMap.ts");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui/VisibleFieldsConfig */ "./app/client/ui/VisibleFieldsConfig.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_draggableList__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui2018/draggableList */ "./app/client/ui2018/draggableList.ts");
/* harmony import */ var app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/ui2018/editableLabel */ "./app/client/ui2018/editableLabel.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/client/ui2018/links */ "./app/client/ui2018/links.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/common/CustomWidget */ "./app/common/CustomWidget.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");

















const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__.makeT)("CustomSectionConfig");
const CUSTOM_ID = "custom";
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.makeTestId)("test-config-widget-");
class ColumnPicker extends grainjs__WEBPACK_IMPORTED_MODULE_16__.Disposable {
  constructor(_value, _column, _section) {
    super();
    this._value = _value;
    this._column = _column;
    this._section = _section;
  }
  buildDom() {
    const properValue = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(this, (use) => {
      const value = use(this._value);
      return Array.isArray(value) ? null : value;
    });
    properValue.onWrite((value) => this._value.set(value));
    const options = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(this, (use) => {
      return use(this._section.columns).filter((col) => this._column.canByMapped(use(col.pureType))).map((col) => ({ value: col.getRowId(), label: use(col.label), icon: "FieldColumn" }));
    });
    return [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssLabel)(this._column.title, this._column.optional ? cssSubLabel(t(" (optional)")) : null, testId("label-for-" + this._column.name)),
      this._column.description ? (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssHelp)(this._column.description, testId("help-for-" + this._column.name)) : null,
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssRow)((0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_13__.select)(properValue, options, {
        defaultLabel: this._column.typeDesc != "any" ? t("Pick a {{columnType}} column", { "columnType": this._column.typeDesc }) : t("Pick a column")
      }), testId("mapping-for-" + this._column.name))
    ];
  }
}
class ColumnListPicker extends grainjs__WEBPACK_IMPORTED_MODULE_16__.Disposable {
  constructor(_value, _column, _section) {
    super();
    this._value = _value;
    this._column = _column;
    this._section = _section;
    this._typeFilter = (use = app_common_gutil__WEBPACK_IMPORTED_MODULE_15__.unwrap) => (col) => this._column.canByMapped(use(col.pureType));
  }
  buildDom() {
    return grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.domComputed((use) => {
      return [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssLabel)(this._column.title, app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssLabel.cls("-required", !this._column.optional), testId("label-for-" + this._column.name)),
        this._buildDraggableList(use),
        this._buildAddColumn()
      ];
    });
  }
  _buildAddColumn() {
    return [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssRow)(cssAddMapping(cssAddIcon("Plus"), t("Add") + " " + this._column.title, (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_13__.menu)(() => {
        const otherColumns = this._getNotMappedColumns();
        const typedColumns = otherColumns.filter(this._typeFilter());
        const wrongTypeCount = otherColumns.length - typedColumns.length;
        return [
          ...typedColumns.map((col) => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_13__.menuItem)(() => this._addColumn(col), col.label.peek())),
          wrongTypeCount > 0 ? (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_13__.menuText)(t("{{wrongTypeCount}} non-{{columnType}} columns are not shown", {
            wrongTypeCount,
            columnType: this._column.type.toLowerCase(),
            count: wrongTypeCount
          }), testId("map-message-" + this._column.name)) : null
        ];
      }), testId("add-column-for-" + this._column.name)))
    ];
  }
  _buildDraggableList(use) {
    return grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.update(app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_1__.draggableList(this._readItems(use), this._renderItem.bind(this, use), {
      itemClass: app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_6__.cssDragRow.className,
      reorder: this._reorder.bind(this),
      receive: this._addColumn.bind(this),
      drag_indicator: app_client_ui2018_draggableList__WEBPACK_IMPORTED_MODULE_9__.cssDragger
    }), testId("map-list-for-" + this._column.name));
  }
  _getNotMappedColumns() {
    const all = this._section.columns.peek();
    const mapped = this._list();
    return all.filter((col) => !mapped.includes(col.id.peek()));
  }
  _readItems(use) {
    let selectedRefs = use(this._value) || [];
    if (!Array.isArray(selectedRefs)) {
      selectedRefs = [];
    }
    const columns = use(this._section.columns).filter(this._typeFilter(use));
    const columnMap = new Map(columns.map((c) => [c.id.peek(), c]));
    return selectedRefs.map((s) => columnMap.get(s)).filter((c) => Boolean(c));
  }
  _renderItem(use, field) {
    return (0,app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_6__.cssFieldEntry)((0,app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_6__.cssFieldLabel)(grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.text(field.label), testId("ref-select-label")), cssRemoveIcon("Remove", grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.on("click", () => this._remove(field)), testId("ref-select-remove")));
  }
  _list(value) {
    if (value) {
      this._value.set(value);
    } else {
      let current = this._value.get() || [];
      if (!Array.isArray(current)) {
        current = [];
      }
      return current;
    }
  }
  _reorder(column, nextColumn) {
    const id = column.id.peek();
    const nextId = nextColumn == null ? void 0 : nextColumn.id.peek();
    const currentList = this._list();
    const indexOfId = currentList.indexOf(id);
    currentList.splice(indexOfId, 1);
    const indexOfNext = nextId ? currentList.indexOf(nextId) : currentList.length;
    currentList.splice(indexOfNext, 0, id);
    this._list(currentList);
  }
  _remove(column) {
    const current = this._list();
    this._value.set(current.filter((c) => c != column.id.peek()));
  }
  _addColumn(col) {
    const current = this._list();
    current.push(col.id.peek());
    this._value.set(current);
  }
}
class CustomSectionConfigurationConfig extends grainjs__WEBPACK_IMPORTED_MODULE_16__.Disposable {
  constructor(_section) {
    super();
    this._section = _section;
    this._hasConfiguration = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(this, (use) => use(_section.hasCustomOptions));
  }
  buildDom() {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.dom)("div", grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.maybe(this._hasConfiguration, () => cssSection((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__.textButton)(t("Open configuration"), grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.on("click", () => this._openConfiguration()), testId("open-configuration")))), grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.maybeOwned((use) => use(this._section.columnsToMap), (owner, columns) => {
      const createObs = (column) => {
        const obs = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(owner, (use) => {
          const savedDefinition = use(this._section.customDef.columnsMapping) || {};
          return savedDefinition[column.name];
        });
        obs.onWrite(async (value) => {
          const savedDefinition = this._section.customDef.columnsMapping.peek() || {};
          savedDefinition[column.name] = value;
          await this._section.customDef.columnsMapping.setAndSave(savedDefinition);
        });
        return obs;
      };
      const mappings = columns.map((c) => new app_client_models_ColumnToMap__WEBPACK_IMPORTED_MODULE_3__.ColumnToMapImpl(c)).map((column) => ({
        value: createObs(column),
        column
      }));
      return [
        ...mappings.map((m) => m.column.allowMultiple ? grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.create(ColumnListPicker, m.value, m.column, this._section) : grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.create(ColumnPicker, m.value, m.column, this._section))
      ];
    }));
  }
  _openConfiguration() {
    app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.openWidgetConfiguration.run();
  }
}
class CustomSectionConfig extends grainjs__WEBPACK_IMPORTED_MODULE_16__.Disposable {
  constructor(_section, _gristDoc) {
    var _a;
    super();
    this._section = _section;
    this._gristDoc = _gristDoc;
    this._canSelect = true;
    this._customSectionConfigurationConfig = new CustomSectionConfigurationConfig(_section);
    const gristConfig = window.gristConfig || {};
    this._canSelect = (_a = gristConfig.enableWidgetRepository) != null ? _a : true;
    this._widgets = grainjs__WEBPACK_IMPORTED_MODULE_16__.Observable.create(this, []);
    this._getWidgets().catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_4__.reportError);
    this._selectedId = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(this, (use) => {
      if (use(_section.customDef.widgetDef)) {
        return _section.customDef.widgetDef.peek().widgetId;
      }
      return CUSTOM_ID;
    });
    this._selectedId.onWrite(async (value) => {
      var _a2;
      if (value === CUSTOM_ID) {
        (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.bundleChanges)(() => {
          _section.customDef.url(null);
          _section.customDef.widgetDef(null);
          _section.customDef.access(app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.none);
          _section.customDef.widgetOptions(null);
          _section.hasCustomOptions(false);
          _section.customDef.columnsMapping(null);
          _section.columnsToMap(null);
          this._desiredAccess.set(app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.none);
        });
        await _section.saveCustomDef();
      } else {
        const selectedWidget = this._widgets.get().find((w) => w.widgetId === value);
        if (!selectedWidget) {
          throw new Error("Error accessing widget from the list");
        }
        if (((_a2 = _section.customDef.widgetDef.peek()) == null ? void 0 : _a2.widgetId) === value) {
          return;
        }
        (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.bundleChanges)(() => {
          _section.customDef.access(app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.none);
          this._desiredAccess.set(selectedWidget.accessLevel || app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.none);
          _section.customDef.widgetDef(selectedWidget);
          _section.customDef.url(selectedWidget.url);
          _section.customDef.widgetOptions(null);
          _section.hasCustomOptions(false);
          _section.customDef.columnsMapping(null);
          _section.columnsToMap(null);
        });
        await _section.saveCustomDef();
      }
    });
    this._url = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(this, (use) => use(_section.customDef.url) || "");
    this._url.onWrite((newUrl) => _section.customDef.url.setAndSave(newUrl));
    this._currentAccess = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(this, (use) => use(_section.customDef.access) || app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.none);
    this._currentAccess.onWrite(async (newAccess) => {
      await _section.customDef.access.setAndSave(newAccess);
    });
    this._desiredAccess = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.fromKo)(_section.desiredAccessLevel);
    this.autoDispose(_section.id.subscribe(() => this._reject()));
  }
  buildDom() {
    const holder = new grainjs__WEBPACK_IMPORTED_MODULE_16__.MultiHolder();
    const prompt = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(holder, (use) => use(this._desiredAccess) && !(0,app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.isSatisfied)(use(this._currentAccess), use(this._desiredAccess)));
    const isSelected = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(holder, (use) => Boolean(use(this._selectedId)));
    const isCustom = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(holder, (use) => use(this._selectedId) === CUSTOM_ID || !this._canSelect);
    const options = grainjs__WEBPACK_IMPORTED_MODULE_16__.Computed.create(holder, (use) => [
      { label: "Custom URL", value: "custom" },
      ...use(this._widgets).map((w) => ({ label: w.name, value: w.widgetId }))
    ]);
    function buildPrompt(level) {
      if (!level) {
        return null;
      }
      switch (level) {
        case app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.none:
          return cssConfirmLine(t("Widget does not require any permissions."));
        case app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.read_table:
          return cssConfirmLine(t("Widget needs to {{read}} the current table.", { read: (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.dom)("b", "read") }));
        case app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.full:
          return cssConfirmLine(t("Widget needs {{fullAccess}} to this document.", {
            fullAccess: (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.dom)("b", "full access")
          }));
        default:
          throw new Error(`Unsupported ${level} access level`);
      }
    }
    const levels = [
      { label: t("No document access"), value: app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.none },
      { label: t("Read selected table"), value: app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.read_table },
      { label: t("Full document access"), value: app_common_CustomWidget__WEBPACK_IMPORTED_MODULE_14__.AccessLevel.full }
    ];
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.dom)("div", grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.autoDispose(holder), this.shouldRenderWidgetSelector() && this._canSelect ? (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssRow)((0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_13__.select)(this._selectedId, options, {
      defaultLabel: t("Select Custom Widget"),
      menuCssClass: cssMenu.className
    }), testId("select")) : null, grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.maybe(isCustom && this.shouldRenderWidgetSelector(), () => [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssRow)(cssTextInput(this._url, async (value) => this._url.set(value), grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.attr("placeholder", t("Enter Custom URL")), testId("url")), this._gristDoc.behavioralPromptsManager.attachTip("customURL", {
        popupOptions: {
          placement: "left-start"
        }
      }))
    ]), grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.maybe(prompt, () => app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_1__.prompt({ tabindex: "-1" }, cssColumns(cssWarningWrapper((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_11__.icon)("Lock")), (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.dom)("div", cssConfirmRow(grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.domComputed(this._desiredAccess, (level) => buildPrompt(level))), cssConfirmRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__.primaryButton)("Accept", testId("access-accept"), grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.on("click", () => this._accept())), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__.basicButton)("Reject", testId("access-reject"), grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.on("click", () => this._reject()))))))), grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.maybe((use) => use(isSelected) || !this._canSelect, () => [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssLabel)("ACCESS LEVEL"),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssRow)((0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_13__.select)(this._currentAccess, levels), testId("access"))
    ]), cssSection((0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_12__.cssLink)(grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.attr("href", "https://support.getgrist.com/widget-custom"), grainjs__WEBPACK_IMPORTED_MODULE_16__.dom.attr("target", "_blank"), t("Learn more about custom widgets"))), (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssSeparator)(), this._customSectionConfigurationConfig.buildDom());
  }
  shouldRenderWidgetSelector() {
    return true;
  }
  async _getWidgets() {
    const api = this._gristDoc.app.topAppModel.api;
    const wigets = await api.getWidgets();
    if (this._canSelect) {
      if (this._section.customDef.widgetDef.peek()) {
        wigets.push(this._section.customDef.widgetDef.peek());
      }
    }
    this._widgets.set(wigets);
  }
  _accept() {
    if (this._desiredAccess.get()) {
      this._currentAccess.set(this._desiredAccess.get());
    }
    this._reject();
  }
  _reject() {
    this._desiredAccess.set(null);
  }
}
const cssWarningWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)("div", `
  padding-left: 8px;
  padding-top: 6px;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.iconError}
`);
const cssColumns = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)("div", `
  display: flex;
`);
const cssConfirmRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)("div", `
  display: flex;
  padding: 8px;
  gap: 8px;
`);
const cssConfirmLine = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)("span", `
  white-space: pre-wrap;
`);
const cssSection = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)("div", `
  margin: 16px 16px 12px 16px;
`);
const cssMenu = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)("div", `
  & > li:first-child {
    border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.menuBorder};
  }
`);
const cssAddIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_11__.icon, `
  margin-right: 4px;
`);
const cssRemoveIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_11__.icon, `
  display: none;
  cursor: pointer;
  flex: none;
  margin-left: 8px;
  .${app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_6__.cssFieldEntry.className}:hover & {
    display: block;
  }
`);
const cssSubLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)("span", `
  text-transform: none;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.vars.xsmallFontSize};
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.lightText};
`);
const cssAddMapping = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)("div", `
  display: flex;
  cursor: pointer;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.controlFg};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.controlFg};

  &:not(:first-child) {
    margin-top: 8px;
  }
  &:hover, &:focus, &:active {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.controlHoverFg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.controlHoverFg};
  }
`);
const cssTextInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_16__.styled)(app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_10__.textInput, `
  flex: 1 0 auto;

  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.inputFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.inputBg};

  &:disabled {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.inputDisabledFg};
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.inputDisabledBg};
    pointer-events: none;
  }

  &::placeholder {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.inputPlaceholderFg};
  }
`);


/***/ }),

/***/ "./app/client/ui/DateRangeOptions.ts":
/*!*******************************************!*\
  !*** ./app/client/ui/DateRangeOptions.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateRangeOptions": () => (/* binding */ DateRangeOptions)
/* harmony export */ });
/* harmony import */ var app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/RelativeDates */ "./app/common/RelativeDates.ts");

const DateRangeOptions = [{
  label: "Today",
  min: app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.CURRENT_DATE,
  max: app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.CURRENT_DATE
}, {
  label: "Last 7 days",
  min: [{ quantity: -7, unit: "day" }],
  max: [{ quantity: -1, unit: "day" }]
}, {
  label: "Next 7 days",
  min: [{ quantity: 1, unit: "day" }],
  max: [{ quantity: 7, unit: "day" }]
}, {
  label: "Last Week",
  min: [{ quantity: -1, unit: "week" }],
  max: [{ quantity: -1, unit: "week", endOf: true }]
}, {
  label: "Last 30 days",
  min: [{ quantity: -30, unit: "day" }],
  max: [{ quantity: -1, unit: "day" }]
}, {
  label: "This week",
  min: [{ quantity: 0, unit: "week" }],
  max: [{ quantity: 0, unit: "week", endOf: true }]
}, {
  label: "This month",
  min: [{ quantity: 0, unit: "month" }],
  max: [{ quantity: 0, unit: "month", endOf: true }]
}, {
  label: "This year",
  min: [{ quantity: 0, unit: "year" }],
  max: [{ quantity: 0, unit: "year", endOf: true }]
}];


/***/ }),

/***/ "./app/client/ui/DescriptionConfig.ts":
/*!********************************************!*\
  !*** ./app/client/ui/DescriptionConfig.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildDescriptionConfig": () => (/* binding */ buildDescriptionConfig)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/forms */ "./app/client/ui/forms.ts");
/* harmony import */ var app_client_ui_inputs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui/inputs */ "./app/client/ui/inputs.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");






const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("DescriptionConfig");
function buildDescriptionConfig(owner, description, options) {
  let editor;
  owner.autoDispose(options.cursor.subscribe(() => {
    editor == null ? void 0 : editor.blur();
  }));
  return [
    (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssLabel)(t("DESCRIPTION")),
    (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)(editor = cssTextArea((0,grainjs__WEBPACK_IMPORTED_MODULE_5__.fromKo)(description), { onInput: false }, { rows: "3" }, grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("blur", async (e, elem) => {
      await description.saveOnly(elem.value);
    }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)(`${options.testPrefix}-description`), (0,app_client_ui_forms__WEBPACK_IMPORTED_MODULE_1__.autoGrow)((0,grainjs__WEBPACK_IMPORTED_MODULE_5__.fromKo)(description))))
  ];
}
const cssTextArea = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)(app_client_ui_inputs__WEBPACK_IMPORTED_MODULE_2__.textarea, `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.mainPanelBg};
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputBorder};
  width: 100%;
  outline: none;
  border-radius: 3px;
  padding: 3px 7px;
  min-height: calc(3em * 1.5);

  &::placeholder {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputPlaceholderFg};
  }

  &[readonly] {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputDisabledBg};
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputDisabledFg};
  }
`);


/***/ }),

/***/ "./app/client/ui/FieldConfig.ts":
/*!**************************************!*\
  !*** ./app/client/ui/FieldConfig.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildFormulaConfig": () => (/* binding */ buildFormulaConfig),
/* harmony export */   "buildNameConfig": () => (/* binding */ buildNameConfig),
/* harmony export */   "cssFieldFormula": () => (/* binding */ cssFieldFormula)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui_CodeHighlight__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/CodeHighlight */ "./app/client/ui/CodeHighlight.ts");
/* harmony import */ var app_client_ui_GristTooltips__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui/GristTooltips */ "./app/client/ui/GristTooltips.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui/tooltips */ "./app/client/ui/tooltips.ts");
/* harmony import */ var app_client_ui_TriggerFormulas__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui/TriggerFormulas */ "./app/client/ui/TriggerFormulas.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui2018/editableLabel */ "./app/client/ui2018/editableLabel.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/widgets/FormulaEditor */ "./app/client/widgets/FormulaEditor.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");














const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("FieldConfig");
function buildNameConfig(owner, origColumn, cursor, disabled) {
  const untieColId = origColumn.untieColIdFromLabel;
  const editedLabel = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(owner, "");
  const editableColId = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, editedLabel, (use, edited) => "$" + (edited ? (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_12__.sanitizeIdent)(edited) : use(origColumn.colId)));
  const saveColId = (val) => origColumn.colId.saveOnly(val.startsWith("$") ? val.slice(1) : val);
  const isSummaryTable = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => Boolean(use(use(origColumn.table).summarySourceTable)));
  let editor;
  owner.autoDispose(cursor.subscribe(() => {
    editor == null ? void 0 : editor.blur();
  }));
  const toggleUntieColId = () => {
    if (!origColumn.disableModify.peek() && !disabled.peek()) {
      untieColId.saveOnly(!untieColId.peek()).catch(reportError);
    }
  };
  return [
    (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssLabel)(t("COLUMN LABEL AND ID")),
    (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssBlockedCursor.className, origColumn.disableModify), cssColLabelBlock(editor = cssInput((0,grainjs__WEBPACK_IMPORTED_MODULE_13__.fromKo)(origColumn.label), async (val) => {
      await origColumn.label.saveOnly(val);
      editedLabel.set("");
    }, grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("input", (ev, elem) => {
      if (!untieColId.peek()) {
        editedLabel.set(elem.value);
      }
    }), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.boolAttr("readonly", (use) => use(origColumn.disableModify) || use(disabled)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-label")), cssInput(editableColId, saveColId, grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.boolAttr("readonly", (use) => use(disabled) || use(origColumn.disableModify) || !use(origColumn.untieColIdFromLabel)), app_client_ui_CodeHighlight__WEBPACK_IMPORTED_MODULE_1__.cssCodeBlock.cls(""), { style: "margin-top: 8px" }, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-col-id"))), cssColTieBlock(cssColTieConnectors(), cssToggleButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__.icon)("FieldReference"), cssToggleButton.cls("-selected", (use) => !use(untieColId)), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", toggleUntieColId), cssToggleButton.cls("-disabled", (use) => use(origColumn.disableModify) || use(disabled)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-derive-id")))),
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe(isSummaryTable, () => (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)(t("Column options are limited in summary tables.")))
  ];
}
function buildFormulaConfig(owner, origColumn, gristDoc, buildEditor) {
  const disableModify = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => use(origColumn.disableModify));
  const maybeFormula = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(owner, false);
  const maybeTrigger = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(owner, false);
  const isSummaryTable = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => Boolean(use(use(origColumn.table).summarySourceTable)));
  const behavior = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    if (!use(origColumn.id)) {
      return null;
    }
    if (use(origColumn.isRealFormula) || use(maybeFormula)) {
      return "formula";
    }
    if (use(maybeTrigger) || !use(origColumn.isEmpty)) {
      return "data";
    }
    return "empty";
  });
  let formulaField = null;
  const clearState = () => (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.bundleChanges)(() => {
    if (owner.isDisposed()) {
      return;
    }
    maybeFormula.set(false);
    maybeTrigger.set(false);
    formulaField = null;
  });
  owner.autoDispose(origColumn.id.subscribe(clearState));
  owner.autoDispose(origColumn.formula.subscribe(clearState));
  owner.autoDispose(origColumn.isFormula.subscribe(clearState));
  const viewSection = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    var _a;
    return (_a = use(gristDoc.currentView)) == null ? void 0 : _a.viewSection;
  });
  const isMultiSelect = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    const vs = use(viewSection);
    return !!vs && use(vs.selectedFields).length > 1;
  });
  const multiType = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    if (!use(isMultiSelect)) {
      return false;
    }
    const vs = use(viewSection);
    if (!vs) {
      return false;
    }
    return use(vs.columnsBehavior);
  });
  const isFormulaLike = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    if (!use(isMultiSelect)) {
      return false;
    }
    const vs = use(viewSection);
    if (!vs) {
      return false;
    }
    return use(vs.columnsAllIsFormula);
  });
  const selectedColumns = () => {
    var _a;
    return ((_a = viewSection.get()) == null ? void 0 : _a.selectedFields.peek().map((f) => f.column.peek())) || [];
  };
  const selectedColumnIds = () => selectedColumns().map((f) => f.id.peek()) || [];
  const clearAndResetAll = () => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_10__.selectOption)(() => Promise.all([
    gristDoc.clearColumns(selectedColumnIds())
  ]), "Clear and reset", "CrossSmall");
  const convertToDataAll = () => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_10__.selectOption)(() => gristDoc.convertIsFormula(selectedColumnIds(), { toFormula: false, noRecalc: true }), "Convert columns to data", "Database", grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("disabled", isSummaryTable));
  const menu = (label, options) => (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)((0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_10__.selectMenu)(label, () => !isMultiSelect.get() ? options : [
    isFormulaLike.get() ? convertToDataAll() : null,
    clearAndResetAll()
  ], (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-behaviour"), (el) => el.removeAttribute("tabindex"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssBlockedCursor.className, disableModify), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("disabled", disableModify)));
  const behaviorName = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, behavior, (use, type) => {
    if (use(isMultiSelect)) {
      const commonType = use(multiType);
      if (commonType === "formula") {
        return t("Formula Columns", { count: 2 });
      }
      if (commonType === "data") {
        return t("Data Columns", { count: 2 });
      }
      if (commonType === "mixed") {
        return t("Mixed Behavior");
      }
      return t("Empty Columns", { count: 2 });
    } else {
      if (type === "formula") {
        return t("Formula Columns", { count: 1 });
      }
      if (type === "data") {
        return t("Data Columns", { count: 1 });
      }
      return t("Empty Columns", { count: 1 });
    }
  });
  const behaviorIcon = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    return use(behaviorName) === t("Data Columns", { count: 2 }) || use(behaviorName) === t("Data Columns", { count: 1 }) ? "Database" : "Script";
  });
  const behaviorLabel = () => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_10__.selectTitle)(behaviorName, behaviorIcon);
  const convertDataColumnToFormulaOption = () => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_10__.selectOption)(() => (maybeFormula.set(true), formulaField == null ? void 0 : formulaField.focus()), t("Clear and make into formula"), "Script");
  const convertTriggerToFormulaOption = () => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_10__.selectOption)(() => gristDoc.convertIsFormula([origColumn.id.peek()], { toFormula: true, noRecalc: true }), t("Clear and make into formula"), "Script");
  const convertToData = () => gristDoc.convertIsFormula([origColumn.id.peek()], { toFormula: false, noRecalc: true });
  const convertToDataOption = () => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_10__.selectOption)(convertToData, t("Convert column to data"), "Database", grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("disabled", isSummaryTable));
  const clearAndResetOption = () => (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_10__.selectOption)(() => gristDoc.clearColumns([origColumn.id.peek()]), t("Clear and reset"), "CrossSmall");
  const convertDataColumnToTriggerColumn = () => {
    maybeTrigger.set(true);
    formulaField == null ? void 0 : formulaField.focus();
  };
  const convertFormulaToTrigger = () => gristDoc.convertIsFormula([origColumn.id.peek()], { toFormula: false, noRecalc: false });
  const setFormula = () => (maybeFormula.set(true), formulaField == null ? void 0 : formulaField.focus());
  const setTrigger = () => (maybeTrigger.set(true), formulaField == null ? void 0 : formulaField.focus());
  const onSaveConvertToFormula = async (column, formula) => {
    if (owner.isDisposed()) {
      return;
    }
    const notBlank = Boolean(formula);
    const trueFormula = column.formula.peek();
    if (notBlank || trueFormula) {
      await gristDoc.convertToFormula(column.id.peek(), formula);
    }
    if (!owner.isDisposed()) {
      clearState();
    }
  };
  const onSaveConvertToTrigger = async (column, formula) => {
    if (formula && !column.hasTriggerFormula.peek()) {
      await gristDoc.convertToTrigger(column.id.peek(), formula);
    } else if (column.hasTriggerFormula.peek()) {
      await gristDoc.updateFormula(column.id.peek(), formula);
    }
    if (!owner.isDisposed()) {
      clearState();
    }
  };
  const disableOtherActions = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => use(disableModify) || use(isMultiSelect));
  const errorMessage = (0,app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_11__.createFormulaErrorObs)(owner, gristDoc, origColumn);
  const formulaBuilder = (onSave, canDetach) => [
    (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)(formulaField = buildFormula(origColumn, buildEditor, {
      gristTheme: gristDoc.currentTheme,
      disabled: disableOtherActions,
      canDetach,
      onSave,
      onCancel: clearState
    })),
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe(errorMessage, (errMsg) => (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)((0,app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_11__.cssError)(errMsg), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-error-count")))
  ];
  return grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe(behavior, (type) => [
    (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssLabel)(t("COLUMN BEHAVIOR")),
    ...type === "empty" ? [
      menu(behaviorLabel(), [
        convertToDataOption()
      ]),
      cssEmptySeparator(),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_6__.textButton)(t("Set formula"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", setFormula), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.prop("disabled", disableOtherActions), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-set-formula"))),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)((0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_4__.withInfoTooltip)((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_6__.textButton)(t("Set trigger formula"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", setTrigger), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.prop("disabled", (use) => use(isSummaryTable) || use(disableOtherActions)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-set-trigger")), app_client_ui_GristTooltips__WEBPACK_IMPORTED_MODULE_2__.GristTooltips.setTriggerFormula())),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_6__.textButton)(t("Make into data column"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", convertToData), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.prop("disabled", (use) => use(isSummaryTable) || use(disableOtherActions)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-set-data")))
    ] : type === "formula" ? [
      menu(behaviorLabel(), [
        convertToDataOption(),
        clearAndResetOption()
      ]),
      formulaBuilder(onSaveConvertToFormula),
      cssEmptySeparator(),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_6__.textButton)(t("Convert to trigger formula"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", convertFormulaToTrigger), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.hide(maybeFormula), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.prop("disabled", (use) => use(isSummaryTable) || use(disableOtherActions)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-set-trigger")))
    ] : [
      menu(behaviorLabel(), [
        grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.domComputed(origColumn.hasTriggerFormula, (hasTrigger) => hasTrigger ? convertTriggerToFormulaOption() : convertDataColumnToFormulaOption()),
        clearAndResetOption()
      ]),
      grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe((use) => use(maybeTrigger) || use(origColumn.hasTriggerFormula), () => [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssLabel)(t("TRIGGER FORMULA")),
        formulaBuilder(onSaveConvertToTrigger, false),
        grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(app_client_ui_TriggerFormulas__WEBPACK_IMPORTED_MODULE_5__.buildFormulaTriggers, origColumn, {
          disabled: disableOtherActions,
          notTrigger: maybeTrigger
        })
      ]),
      grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe((use) => !(use(maybeTrigger) || use(origColumn.hasTriggerFormula)), () => [
        cssEmptySeparator(),
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)((0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_4__.withInfoTooltip)((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_6__.textButton)(t("Set trigger formula"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", convertDataColumnToTriggerColumn), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.prop("disabled", disableOtherActions), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("field-set-trigger")), app_client_ui_GristTooltips__WEBPACK_IMPORTED_MODULE_2__.GristTooltips.setTriggerFormula()))
      ])
    ]
  ]);
}
function buildFormula(column, buildEditor, options) {
  const { gristTheme, disabled, canDetach = true, onSave, onCancel } = options;
  return cssFieldFormula(column.formula, { gristTheme, maxLines: 2 }, grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("formula_field_sidepane"), cssFieldFormula.cls("-disabled", disabled), cssFieldFormula.cls("-disabled-icon", (use) => !use(column.formula)), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("disabled"), { tabIndex: "-1" }, grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("focus", (_, refElem) => buildEditor({
    refElem,
    editValue: void 0,
    canDetach,
    onSave,
    onCancel
  })));
}
const cssFieldFormula = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_ui_CodeHighlight__WEBPACK_IMPORTED_MODULE_1__.buildHighlightedCode, `
  flex: auto;
  cursor: pointer;
  margin-top: 4px;
  padding-left: 24px;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.accentIcon};

  &-disabled-icon.formula_field_sidepane::before {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.lightText};
  }
  &-disabled {
    pointer-events: none;
  }
`);
const cssToggleButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__.cssIconButton, `
  margin-left: 8px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.rightPanelToggleButtonDisabledBg};
  box-shadow: inset 0 0 0 1px ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.inputBorder};

  &-selected, &-selected:hover {
    box-shadow: none;
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.rightPanelToggleButtonEnabledBg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.rightPanelToggleButtonEnabledFg};
  }
  &-selected:hover {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.rightPanelToggleButtonEnabledHoverFg};
  }
  &-disabled, &-disabled:hover {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.rightPanelToggleButtonDisabledFg};
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.rightPanelToggleButtonDisabledBg};
  }
`);
const cssColLabelBlock = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: flex;
  flex-direction: column;
  flex: auto;
  min-width: 80px;
`);
const cssColTieBlock = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  position: relative;
`);
const cssColTieConnectors = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  position: absolute;
  border: 2px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.inputBorder};
  top: -9px;
  bottom: -9px;
  right: 11px;
  left: 0px;
  border-left: none;
  z-index: -1;
`);
const cssEmptySeparator = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  margin-top: 16px;
`);
const cssInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_8__.textInput, `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.inputFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.mainPanelBg};
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.inputBorder};

  &::placeholder {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.inputPlaceholderFg};
  }

  &[readonly] {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.inputDisabledBg};
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.inputDisabledFg};
  }
`);


/***/ }),

/***/ "./app/client/ui/FieldMenus.ts":
/*!*************************************!*\
  !*** ./app/client/ui/FieldMenus.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FieldSettingsMenu": () => (/* binding */ FieldSettingsMenu)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");



const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("FieldMenus");
function FieldSettingsMenu(useColOptions, disableSeparate, actions) {
  useColOptions = useColOptions || disableSeparate;
  return [
    (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_1__.menuSubHeader)(useColOptions ? t("Using common settings") : t("Using separate settings")),
    useColOptions ? (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_1__.menuItem)(actions.useSeparate, t("Use separate settings"), grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.cls("disabled", disableSeparate)) : [
      (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_1__.menuItem)(actions.saveAsCommon, t("Save as common settings")),
      (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_1__.menuItem)(actions.revertToCommon, t("Revert to common settings"))
    ]
  ];
}


/***/ }),

/***/ "./app/client/ui/FileDialog.ts":
/*!*************************************!*\
  !*** ./app/client/ui/FileDialog.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "open": () => (/* binding */ open),
/* harmony export */   "openFilePicker": () => (/* binding */ openFilePicker)
/* harmony export */ });
/* harmony import */ var app_client_lib_browserGlobals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/browserGlobals */ "./app/client/lib/browserGlobals.js");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/dom */ "./app/client/lib/dom.js");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__);


const G = app_client_lib_browserGlobals__WEBPACK_IMPORTED_MODULE_0__.get("document", "window");
function noop() {
}
let _fileForm;
let _fileInput;
let _currentCB = noop;
function openFilePicker(options) {
  return new Promise((resolve) => open(options, resolve));
}
function open(options, callback) {
  if (!_fileInput) {
    _fileForm = app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1___default()("form#file_dialog_form", { style: "position: absolute; top: 0; display: none" }, _fileInput = app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1___default()("input#file_dialog_input", { type: "file" }));
    G.document.body.appendChild(_fileForm);
    _fileInput.addEventListener("change", (ev) => {
      _currentCB(_fileInput.files ? Array.from(_fileInput.files) : []);
      _currentCB = noop;
    });
  }
  _fileForm.reset();
  _fileInput.multiple = Boolean(options.multiple);
  _fileInput.accept = options.accept || "";
  _currentCB = callback;
  setTimeout(() => _fileInput.click(), 0);
}


/***/ }),

/***/ "./app/client/ui/FilterBar.ts":
/*!************************************!*\
  !*** ./app/client/ui/FilterBar.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addFilterMenu": () => (/* binding */ addFilterMenu),
/* harmony export */   "filterBar": () => (/* binding */ filterBar)
/* harmony export */ });
/* harmony import */ var app_client_models_ColumnFilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/models/ColumnFilter */ "./app/client/models/ColumnFilter.ts");
/* harmony import */ var app_client_ui_ColumnFilterMenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/ColumnFilterMenu */ "./app/client/ui/ColumnFilterMenu.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui_searchDropdown__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui/searchDropdown */ "./app/client/ui/searchDropdown.ts");








const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_6__.makeT)("FilterBar");
function filterBar(_owner, gristDoc, viewSection) {
  const popupControls = /* @__PURE__ */ new WeakMap();
  return cssFilterBar((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("filter-bar"), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.forEach(viewSection.activeFilters, (filterInfo) => makeFilterField(filterInfo, popupControls)), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.maybe(viewSection.showNestedFilteringPopup, () => {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.dom)("div", gristDoc.behavioralPromptsManager.attachTip("nestedFiltering", {
      onDispose: () => viewSection.showNestedFilteringPopup.set(false)
    }));
  }), makePlusButton(viewSection, popupControls), cssFilterBar.cls("-hidden", (use) => use(viewSection.pinnedActiveFilters).length === 0));
}
function makeFilterField(filterInfo, popupControls) {
  const { fieldOrColumn, filter, pinned, isPinned } = filterInfo;
  return cssFilterBarItem((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("filter-field"), cssFilterBarItemButton((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("btn"), cssFilterBarItemIcon("FilterSimple"), cssMenuTextLabel(grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.text(fieldOrColumn.origCol().label)), cssBtn.cls("-grayed", (use) => use(filter.isSaved) && use(pinned.isSaved)), (0,app_client_ui_ColumnFilterMenu__WEBPACK_IMPORTED_MODULE_1__.attachColumnFilterMenu)(filterInfo, {
    popupOptions: {
      placement: "bottom-start",
      attach: "body",
      trigger: [
        "click",
        (_el, popupControl) => popupControls.set(fieldOrColumn.origCol(), popupControl)
      ]
    },
    showAllFiltersButton: true
  })), cssFilterBarItem.cls("-unpinned", (use) => !use(isPinned)));
}
function addFilterMenu(filters, popupControls, options = {}) {
  const { allowedColumns, menuOptions } = options;
  return (0,app_client_ui_searchDropdown__WEBPACK_IMPORTED_MODULE_7__.dropdownWithSearch)({
    action: (filterInfo) => openFilter(filterInfo, popupControls),
    options: () => filters.map((filterInfo) => ({
      label: filterInfo.fieldOrColumn.origCol().label.peek(),
      value: filterInfo,
      disabled: allowedColumns === "unpinned-or-unfiltered" ? filterInfo.isPinned.peek() && filterInfo.isFiltered.peek() : filterInfo.isFiltered.peek()
    })),
    popupOptions: menuOptions,
    placeholder: t("Search Columns")
  });
}
function openFilter({ fieldOrColumn, isFiltered, viewSection }, popupControls) {
  var _a;
  viewSection.setFilter(fieldOrColumn.origCol().origColRef(), {
    filter: isFiltered.peek() ? void 0 : app_client_models_ColumnFilter__WEBPACK_IMPORTED_MODULE_0__.NEW_FILTER_JSON,
    pinned: true
  });
  (_a = popupControls.get(fieldOrColumn.origCol())) == null ? void 0 : _a.open();
}
function makePlusButton(viewSectionRec, popupControls) {
  return grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.domComputed((use) => {
    const filters = use(viewSectionRec.filters);
    return cssPlusButton(cssBtn.cls("-grayed"), cssPlusIcon("Plus"), addFilterMenu(filters, popupControls, {
      allowedColumns: "unpinned-or-unfiltered"
    }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("add-filter-btn"));
  });
}
const cssFilterBar = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div.filter_bar", `
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  row-gap: 8px;
  margin: 8px 0px 8px -4px;
  &-hidden {
    display: none;
  }
`);
const cssFilterBarItem = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  flex: 1 1 80px;
  min-width: 0px;
  max-width: max-content;
  border-radius: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.vars.controlBorderRadius};
  margin: 0 4px;
  &-unpinned {
    display: none;
  }
`);
const cssFilterBarItemIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon, `
  flex-shrink: 0;
`);
const cssMenuTextLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("span", `
  flex-grow: 1;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
`);
const cssPlusIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon, `
  margin-top: -3px;
`);
const cssBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  display: flex;
  align-items: center;
  column-gap: 4px;

  height: 24px;
  padding: 3px 8px;
  .${cssFilterBar.className} > & {
    margin: 0 4px;
  }
  &-grayed {
    color:        ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.filterBarButtonSavedFg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.filterBarButtonSavedFg};
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.filterBarButtonSavedBg};
    border-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.filterBarButtonSavedBg};
  }
  &-grayed:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.filterBarButtonSavedHoverBg};
    border-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.filterBarButtonSavedHoverBg};
  }
`);
const cssFilterBarItemButton = (...args) => (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.dom)("div", app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.cssButton.cls(""), app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.cssButton.cls("-primary"), cssBtn.cls(""), ...args);
const cssPlusButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)(cssFilterBarItemButton, `
  padding: 3px 3px
`);


/***/ }),

/***/ "./app/client/ui/FilterConfig.ts":
/*!***************************************!*\
  !*** ./app/client/ui/FilterConfig.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FilterConfig": () => (/* binding */ FilterConfig)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui_ColumnFilterMenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/ColumnFilterMenu */ "./app/client/ui/ColumnFilterMenu.ts");
/* harmony import */ var app_client_ui_FilterBar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui/FilterBar */ "./app/client/ui/FilterBar.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));







const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.makeTestId)("test-filter-config-");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("SortConfig");
class FilterConfig extends grainjs__WEBPACK_IMPORTED_MODULE_6__.Disposable {
  constructor(_section, _options = {}) {
    super();
    this._section = _section;
    this._options = _options;
    this._popupControls = /* @__PURE__ */ new WeakMap();
    this._canAddFilter = grainjs__WEBPACK_IMPORTED_MODULE_6__.Computed.create(this, (use) => {
      return use(this._section.filters).some((f) => !use(f.isFiltered));
    });
  }
  buildDom() {
    const { menuOptions } = this._options;
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.dom)("div", grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.forEach(this._section.activeFilters, (filterInfo) => {
      const { fieldOrColumn, filter, pinned, isPinned } = filterInfo;
      return (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)((0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssSortFilterColumn)(cssIconWrapper(cssFilterIcon("FilterSimple", cssFilterIcon.cls("-accent", (use) => !use(filter.isSaved) || !use(pinned.isSaved)), testId("filter-icon"))), cssLabel(grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.text(fieldOrColumn.label)), (0,app_client_ui_ColumnFilterMenu__WEBPACK_IMPORTED_MODULE_1__.attachColumnFilterMenu)(filterInfo, {
        popupOptions: __spreadProps(__spreadValues({
          placement: "bottom-end"
        }, menuOptions), {
          trigger: [
            "click",
            (_el, popupControl) => this._popupControls.set(fieldOrColumn.origCol(), popupControl)
          ]
        })
      }), testId("column")), cssPinFilterButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_5__.icon)("PinTilted"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.on("click", () => this._section.setFilter(fieldOrColumn.origCol().origColRef(), {
        pinned: !isPinned.peek()
      })), app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssPinButton.cls("-pinned", isPinned), testId("pin-filter")), cssIconWrapper(cssRemoveFilterButton("Remove", grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.on("click", () => this._section.setFilter(fieldOrColumn.origCol().origColRef(), {
        filter: "",
        pinned: false
      })), testId("remove-filter"))), testId("filter"));
    }), (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)(grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.domComputed((use) => {
      const filters = use(this._section.filters);
      return cssTextBtn(t("Add Column"), (0,app_client_ui_FilterBar__WEBPACK_IMPORTED_MODULE_2__.addFilterMenu)(filters, this._popupControls, {
        menuOptions: __spreadValues({
          placement: "bottom-end"
        }, this._options.menuOptions)
      }), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.on("click", (ev) => ev.stopPropagation()), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.hide((u) => !u(this._canAddFilter)), testId("add-filter-btn"));
    })), testId("container"));
  }
}
const cssIconWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)("div", ``);
const cssLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)("div", `
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  flex-grow: 1;
`);
const cssTextBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.controlFg};
  cursor: pointer;

  &:hover {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.controlHoverFg};
  }
`);
const cssFilterIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssIcon, `
  flex: none;
  margin: 0px 6px 0px 0px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.controlSecondaryFg};

  &-accent {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.accentIcon};
  }
`);
const cssRemoveFilterButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssIcon, `
  flex: none;
  margin: 0 6px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.controlSecondaryFg};
  cursor: pointer;

  &:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.controlSecondaryHoverFg};
  }
`);
const cssPinFilterButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssPinButton, `
  margin-left: 6px;
`);


/***/ }),

/***/ "./app/client/ui/FloatingPopup.ts":
/*!****************************************!*\
  !*** ./app/client/ui/FloatingPopup.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FLOATING_POPUP_MAX_WIDTH_PX": () => (/* binding */ FLOATING_POPUP_MAX_WIDTH_PX),
/* harmony export */   "FLOATING_POPUP_TOOLTIP_KEY": () => (/* binding */ FLOATING_POPUP_TOOLTIP_KEY),
/* harmony export */   "FloatingPopup": () => (/* binding */ FloatingPopup),
/* harmony export */   "cssPopupBody": () => (/* binding */ cssPopupBody)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_lib_popupUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/popupUtils */ "./app/client/lib/popupUtils.ts");
/* harmony import */ var app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui/tooltips */ "./app/client/ui/tooltips.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
var _a, _b, _c;






const POPUP_INITIAL_PADDING_PX = 16;
const POPUP_DEFAULT_MIN_HEIGHT = 300;
const POPUP_MAX_HEIGHT = 711;
const POPUP_HEADER_HEIGHT = 30;
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("FloatingPopup");
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.makeTestId)("test-floating-popup-");
const FLOATING_POPUP_TOOLTIP_KEY = "floatingPopupTooltip";
class FloatingPopup extends grainjs__WEBPACK_IMPORTED_MODULE_5__.Disposable {
  constructor(_options = {}) {
    super();
    this._options = _options;
    this._isMinimized = grainjs__WEBPACK_IMPORTED_MODULE_5__.Observable.create(this, false);
    this._closable = (_a = this._options.closeButton) != null ? _a : false;
    this._minimizable = (_b = this._options.minimizable) != null ? _b : false;
    this._minHeight = (_c = this._options.minHeight) != null ? _c : POPUP_DEFAULT_MIN_HEIGHT;
    this._isFinishingMove = false;
    this._popupElement = null;
    this._popupMinimizeButtonElement = null;
    this._resize = false;
    this._cursorGrab = null;
    if (_options.stopClickPropagationOnMove) {
      window.addEventListener("click", (ev) => {
        var _a2;
        if (this._isFinishingMove) {
          ev.stopPropagation();
          this._isFinishingMove = false;
          return;
        }
        if ((_a2 = this._popupMinimizeButtonElement) == null ? void 0 : _a2.contains(ev.target)) {
          ev.stopPropagation();
          this._minimizeOrMaximize();
          return;
        }
      }, { capture: true });
    }
    this._handleMouseDown = this._handleMouseDown.bind(this);
    this._handleMouseMove = this._handleMouseMove.bind(this);
    this._handleMouseUp = this._handleMouseUp.bind(this);
    this._handleTouchStart = this._handleTouchStart.bind(this);
    this._handleTouchMove = this._handleTouchMove.bind(this);
    this._handleTouchEnd = this._handleTouchEnd.bind(this);
    this._handleWindowResize = this._handleWindowResize.bind(this);
    this.autoDispose((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.isNarrowScreenObs)().addListener(() => this._repositionPopup()));
    this.onDispose(() => {
      var _a2;
      this._disposePopup();
      (_a2 = this._cursorGrab) == null ? void 0 : _a2.dispose();
    });
  }
  showPopup() {
    this._popupElement = this._buildPopup();
    document.body.appendChild(this._popupElement);
    const { initialPosition } = this._options;
    if (initialPosition) {
      this._setPosition(initialPosition);
      this._repositionPopup();
    } else {
      const left = document.body.offsetWidth - this._popupElement.offsetWidth - POPUP_INITIAL_PADDING_PX;
      const top = document.body.offsetHeight - this._popupElement.offsetHeight - getTopPopupPaddingPx();
      this._setPosition([left, top]);
    }
  }
  _closePopup() {
    if (!this._closable) {
      return;
    }
    this._disposePopup();
  }
  _buildTitle() {
    var _a2, _b2, _c2;
    return (_c2 = (_b2 = (_a2 = this._options).title) == null ? void 0 : _b2.call(_a2)) != null ? _c2 : null;
  }
  _buildContent() {
    var _a2, _b2, _c2;
    return (_c2 = (_b2 = (_a2 = this._options).content) == null ? void 0 : _b2.call(_a2)) != null ? _c2 : null;
  }
  _buildArgs() {
    var _a2;
    return (_a2 = this._options.args) != null ? _a2 : [];
  }
  _disposePopup() {
    if (!this._popupElement) {
      return;
    }
    document.body.removeChild(this._popupElement);
    grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.domDispose(this._popupElement);
    this._popupElement = null;
  }
  _setPosition([left, top]) {
    if (!this._popupElement) {
      return;
    }
    this._popupElement.style.left = `${left}px`;
    this._popupElement.style.top = `${top}px`;
  }
  _rememberPosition() {
    this._initialLeft = this._popupElement.offsetLeft;
    this._initialTop = this._popupElement.offsetTop;
    this._initialBottom = this._popupElement.offsetTop + this._popupElement.offsetHeight;
  }
  _handleMouseDown(ev) {
    if (ev.button !== 0) {
      return;
    }
    this._startX = ev.clientX;
    this._startY = ev.clientY;
    this._rememberPosition();
    document.addEventListener("mousemove", this._handleMouseMove);
    document.addEventListener("mouseup", this._handleMouseUp);
    this._forceCursor();
  }
  _handleTouchStart(ev) {
    this._startX = ev.touches[0].clientX;
    this._startY = ev.touches[0].clientY;
    this._rememberPosition();
    document.addEventListener("touchmove", this._handleTouchMove);
    document.addEventListener("touchend", this._handleTouchEnd);
    this._resize = false;
    this._forceCursor();
  }
  _handleTouchMove({ touches }) {
    this._handleMouseMove(touches[0]);
  }
  _handleMouseMove({ clientX, clientY }) {
    if (this._resize) {
      this._handleResize(clientY);
    } else {
      this._handleMove(clientX, clientY);
    }
  }
  _handleResize(clientY) {
    const deltaY = clientY - this._startY;
    if (this._resize && !(0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.isNarrowScreen)()) {
      let minTop = this._initialBottom - POPUP_MAX_HEIGHT;
      let maxTop = this._initialBottom - this._minHeight;
      minTop = Math.max(minTop, getTopPopupPaddingPx());
      maxTop = Math.min(document.body.offsetHeight - POPUP_HEADER_HEIGHT - 2, maxTop);
      const newTop = Math.max(minTop, Math.min(maxTop, this._initialTop + deltaY));
      const newHeight = this._initialBottom - newTop;
      this._popupElement.style.top = `${newTop}px`;
      this._popupElement.style.setProperty("--height", `${newHeight}px`);
      return;
    }
  }
  _handleMove(clientX, clientY) {
    const deltaX = clientX - this._startX;
    const deltaY = clientY - this._startY;
    const viewPort = {
      right: document.body.offsetWidth,
      bottom: document.body.offsetHeight,
      top: getTopPopupPaddingPx(),
      left: 0
    };
    viewPort.right += this._popupElement.offsetWidth - (POPUP_HEADER_HEIGHT + 2) * 4;
    viewPort.left -= this._popupElement.offsetWidth - (POPUP_HEADER_HEIGHT + 2) * 4;
    viewPort.bottom += this._popupElement.offsetHeight - POPUP_HEADER_HEIGHT - 2;
    let newLeft = this._initialLeft + deltaX;
    let newTop = this._initialTop + deltaY;
    const newRight = (val) => {
      if (val !== void 0) {
        newLeft = val - this._popupElement.offsetWidth;
      }
      return newLeft + this._popupElement.offsetWidth;
    };
    const newBottom = (val) => {
      if (val !== void 0) {
        newTop = val - this._popupElement.offsetHeight;
      }
      return newTop + this._popupElement.offsetHeight;
    };
    if (newLeft < viewPort.left) {
      newLeft = viewPort.left;
    }
    if (newRight() > viewPort.right) {
      newRight(viewPort.right);
    }
    if (newTop < viewPort.top) {
      newTop = viewPort.top;
    }
    if (newBottom() > viewPort.bottom) {
      newBottom(viewPort.bottom);
    }
    this._popupElement.style.left = `${newLeft}px`;
    this._popupElement.style.top = `${newTop}px`;
  }
  _handleMouseUp() {
    this._isFinishingMove = true;
    document.removeEventListener("mousemove", this._handleMouseMove);
    document.removeEventListener("mouseup", this._handleMouseUp);
    document.body.removeEventListener("mouseleave", this._handleMouseUp);
    this._handleMouseEnd();
  }
  _handleTouchEnd() {
    document.removeEventListener("touchmove", this._handleTouchMove);
    document.removeEventListener("touchend", this._handleTouchEnd);
    document.body.removeEventListener("touchcancel", this._handleTouchEnd);
    this._handleMouseEnd();
  }
  _handleMouseEnd() {
    var _a2;
    this._resize = false;
    (_a2 = this._cursorGrab) == null ? void 0 : _a2.dispose();
  }
  _handleWindowResize() {
    this._repositionPopup();
  }
  _repositionPopup() {
    let newLeft = this._popupElement.offsetLeft;
    let newTop = this._popupElement.offsetTop;
    const topPaddingPx = getTopPopupPaddingPx();
    if (newLeft - POPUP_INITIAL_PADDING_PX < 0) {
      newLeft = POPUP_INITIAL_PADDING_PX;
    }
    if (newTop - topPaddingPx < 0) {
      newTop = topPaddingPx;
    }
    if (newLeft + POPUP_INITIAL_PADDING_PX > document.body.offsetWidth - this._popupElement.offsetWidth) {
      newLeft = document.body.offsetWidth - this._popupElement.offsetWidth - POPUP_INITIAL_PADDING_PX;
    }
    if (newTop + topPaddingPx > document.body.offsetHeight - this._popupElement.offsetHeight) {
      newTop = document.body.offsetHeight - this._popupElement.offsetHeight - topPaddingPx;
    }
    this._popupElement.style.left = `${newLeft}px`;
    this._popupElement.style.top = `${newTop}px`;
  }
  _minimizeOrMaximize() {
    if (!this._minimizable) {
      return;
    }
    this._isMinimized.set(!this._isMinimized.get());
    this._repositionPopup();
  }
  _buildPopup() {
    var _a2;
    const body = cssPopup({ tabIndex: "-1" }, cssPopup.cls("-auto", (_a2 = this._options.autoHeight) != null ? _a2 : false), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.style("min-height", `${this._minHeight}px`), cssPopupHeader(cssBottomHandle(testId("move-handle")), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.maybe((use) => !use(this._isMinimized), () => {
      return cssResizeTopLayer(cssTopHandle(testId("resize-handle")), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("mousedown", () => this._resize = true), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("dblclick", (e) => {
        var _a3;
        e.stopImmediatePropagation();
        (_a3 = this._popupElement) == null ? void 0 : _a3.style.setProperty("--height", `${POPUP_MAX_HEIGHT}px`);
        this._repositionPopup();
      }));
    }), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.domComputed(this._isMinimized, (isMinimized) => {
      var _a3;
      return [
        cssPopupButtons(cssPopupHeaderButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon)("Maximize"), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.show(this._minimizable)), cssPopupHeaderButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon)("CrossBig"), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.show(this._closable)), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.style("visibility", "hidden")),
        cssPopupTitle(cssPopupTitleText(this._buildTitle()), testId("title")),
        cssPopupButtons(this._popupMinimizeButtonElement = cssPopupHeaderButton(isMinimized ? (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon)("Maximize") : (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon)("Minimize"), (0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_2__.hoverTooltip)(isMinimized ? t("Maximize") : t("Minimize"), {
          key: FLOATING_POPUP_TOOLTIP_KEY
        }), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("click", () => this._minimizeOrMaximize()), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.show(this._minimizable), testId("minimize-maximize")), cssPopupHeaderButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon)((_a3 = this._options.closeButtonIcon) != null ? _a3 : "CrossBig"), this._options.closeButtonHover && (0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_2__.hoverTooltip)(this._options.closeButtonHover(), {
          key: FLOATING_POPUP_TOOLTIP_KEY
        }), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("click", () => {
          var _a4, _b2, _c2;
          (_c2 = (_b2 = (_a4 = this._options).onClose) == null ? void 0 : _b2.call(_a4)) != null ? _c2 : this._closePopup();
        }), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.show(this._closable), testId("close")), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("mousedown", (ev) => ev.stopPropagation()), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("touchstart", (ev) => ev.stopPropagation()))
      ];
    }), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("mousedown", this._handleMouseDown), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("touchstart", this._handleTouchStart), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("dblclick", () => this._minimizeOrMaximize()), testId("header")), cssPopupContent(this._buildContent(), cssPopupContent.cls("-minimized", this._isMinimized)), () => {
      window.addEventListener("resize", this._handleWindowResize);
    }, grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.onDispose(() => {
      document.removeEventListener("mousemove", this._handleMouseMove);
      document.removeEventListener("mouseup", this._handleMouseUp);
      document.removeEventListener("touchmove", this._handleTouchMove);
      document.removeEventListener("touchend", this._handleTouchEnd);
      window.removeEventListener("resize", this._handleWindowResize);
    }), cssPopup.cls("-minimized", this._isMinimized), cssPopup.cls("-mobile", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.isNarrowScreenObs)()), testId("window"), this._buildArgs());
    if (this._options.autoHeight) {
      const observer = new MutationObserver(() => {
        this._repositionPopup();
      });
      observer.observe(body, { childList: true, subtree: true });
      grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.update(body, grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.onDispose(() => observer.disconnect()));
    }
    return body;
  }
  _forceCursor() {
    var _a2;
    (_a2 = this._cursorGrab) == null ? void 0 : _a2.dispose();
    const type = this._resize ? "ns-resize" : "grabbing";
    this._cursorGrab = (0,app_client_lib_popupUtils__WEBPACK_IMPORTED_MODULE_1__.documentCursor)(type);
  }
}
function getTopPopupPaddingPx() {
  return POPUP_INITIAL_PADDING_PX + ((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.isNarrowScreen)() ? 50 : 0);
}
const POPUP_HEIGHT = `min(var(--height), calc(100% - (2 * ${POPUP_INITIAL_PADDING_PX}px)))`;
const POPUP_HEIGHT_MOBILE = `min(var(--height), calc(100% - (2 * ${POPUP_INITIAL_PADDING_PX}px) - (2 * 50px)))`;
const FLOATING_POPUP_MAX_WIDTH_PX = 436;
const POPUP_WIDTH = `min(${FLOATING_POPUP_MAX_WIDTH_PX}px, calc(100% - (2 * ${POPUP_INITIAL_PADDING_PX}px)))`;
const cssPopup = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div.floating-popup", `
  position: fixed;
  display: flex;
  flex-direction: column;
  border: 2px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.accentBorder};
  border-radius: 5px;
  z-index: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.vars.floatingPopupZIndex};
  --height: ${POPUP_MAX_HEIGHT}px;
  height: ${POPUP_HEIGHT};
  width: ${POPUP_WIDTH};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.popupBg};
  box-shadow: 0 2px 18px 0 ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.popupInnerShadow}, 0 0 1px 0 ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.popupOuterShadow};
  outline: unset;

  &-mobile {
    height: ${POPUP_HEIGHT_MOBILE};
  }

  &-minimized {
    max-width: 225px;
    height: unset;
    min-height: unset;
  }

  &-minimized:not(&-mobile) {
    max-height: ${POPUP_HEIGHT};
  }

  &-minimized&-mobile {
    max-height: ${POPUP_HEIGHT_MOBILE};
  }

  &-auto {
    height: auto;
    max-height: ${POPUP_HEIGHT};
    min-height: unset;
  }

  &-auto&-mobile {
    max-height: ${POPUP_HEIGHT_MOBILE};
  }
`);
const cssPopupHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.tutorialsPopupHeaderFg};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.tutorialsPopupHeaderFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.accentBorder};
  align-items: center;
  flex-shrink: 0;
  cursor: grab;
  padding-left: 4px;
  padding-right: 4px;
  height: ${POPUP_HEADER_HEIGHT}px;
  user-select: none;
  display: flex;
  justify-content: space-between;
  position: relative;
  isolation: isolate;
  &:active {
    cursor: grabbing;
  }
`);
const cssPopupButtons = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  display: flex;
  column-gap: 8px;
  align-items: center;
`);
const cssPopupTitle = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 600;
  overflow: hidden;
`);
const cssPopupTitleText = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
`);
const cssPopupBody = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  flex-grow: 1;
  padding: 24px;
  overflow: auto;
`);
const cssPopupHeaderButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  padding: 4px;
  border-radius: 4px;
  cursor: pointer;
  z-index: 1000;

  &:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.hover};
  }
`);
const cssResizeTopLayer = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  position: absolute;
  top: -6px;
  left: 0;
  right: 0;
  bottom: 28px;
  z-index: 500;
  cursor: ns-resize;
`);
const cssTopHandle = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  position: absolute;
  top: 0;
  left: 0;
  width: 1px;
  height: 1px;
  pointer-events: none;
  user-select: none;
  visibility: hidden;
`);
const cssBottomHandle = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)(cssTopHandle, `
  top: unset;
  bottom: 0;
  left: 0;
`);
const cssPopupContent = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  overflow: hidden;

  &-minimized {
    display: none;
  }
`);


/***/ }),

/***/ "./app/client/ui/GridOptions.ts":
/*!**************************************!*\
  !*** ./app/client/ui/GridOptions.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GridOptions": () => (/* binding */ GridOptions)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/models/modelUtil */ "./app/client/models/modelUtil.js");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/checkbox */ "./app/client/ui2018/checkbox.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");






const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("GridOptions");
class GridOptions extends grainjs__WEBPACK_IMPORTED_MODULE_5__.Disposable {
  constructor(_section) {
    super();
    this._section = _section;
  }
  buildDom() {
    const section = this._section;
    return [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssLabel)(t("Grid Options")),
      (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.dom)("div", [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssRow)(checkbox(setSaveValueFromKo(this, section.optionsObj.prop("verticalGridlines"))), t("Vertical Gridlines"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("v-grid-button")),
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssRow)(checkbox(setSaveValueFromKo(this, section.optionsObj.prop("horizontalGridlines"))), t("Horizontal Gridlines"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("h-grid-button")),
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssRow)(checkbox(setSaveValueFromKo(this, section.optionsObj.prop("zebraStripes"))), t("Zebra Stripes"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("zebra-stripe-button")),
        (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("grid-options")
      ])
    ];
  }
}
function setSaveValueFromKo(owner, obs) {
  const ret = grainjs__WEBPACK_IMPORTED_MODULE_5__.Computed.create(null, (use) => use(obs));
  ret.onWrite(async (val) => {
    await (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_1__.setSaveValue)(obs, val);
  });
  return ret;
}
const checkbox = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)(app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_3__.squareCheckbox, `
  margin-right: 8px;
`);


/***/ }),

/***/ "./app/client/ui/PageWidgetPicker.ts":
/*!*******************************************!*\
  !*** ./app/client/ui/PageWidgetPicker.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PageWidgetSelect": () => (/* binding */ PageWidgetSelect),
/* harmony export */   "attachPageWidgetPicker": () => (/* binding */ attachPageWidgetPicker),
/* harmony export */   "buildPageWidgetPicker": () => (/* binding */ buildPageWidgetPicker),
/* harmony export */   "openPageWidgetPicker": () => (/* binding */ openPageWidgetPicker),
/* harmony export */   "toPageWidget": () => (/* binding */ toPageWidget)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/models/AppModel */ "./app/client/models/AppModel.ts");
/* harmony import */ var app_client_models_features__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/models/features */ "./app/client/models/features.ts");
/* harmony import */ var app_client_ui_GristTooltips__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui/GristTooltips */ "./app/client/ui/GristTooltips.ts");
/* harmony import */ var app_client_ui_selectBy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui/selectBy */ "./app/client/ui/selectBy.ts");
/* harmony import */ var app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui/tooltips */ "./app/client/ui/tooltips.ts");
/* harmony import */ var app_client_ui_widgetTypesMap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui/widgetTypesMap */ "./app/client/ui/widgetTypesMap.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_modals__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/ui2018/modals */ "./app/client/ui2018/modals.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! popweasel */ "./node_modules/popweasel/dist/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(popweasel__WEBPACK_IMPORTED_MODULE_13__);
var _a;














const without = __webpack_require__(/*! lodash/without */ "./node_modules/lodash/without.js");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("PageWidgetPicker");
function toPageWidget(section) {
  const link = (0,app_client_ui_selectBy__WEBPACK_IMPORTED_MODULE_4__.linkId)({
    srcSectionRef: section.linkSrcSectionRef.peek(),
    srcColRef: section.linkSrcColRef.peek(),
    targetColRef: section.linkTargetColRef.peek()
  });
  return {
    type: section.parentKey.peek(),
    table: section.table.peek().summarySourceTable.peek() || section.tableRef.peek(),
    summarize: Boolean(section.table.peek().summarySourceTable.peek()),
    columns: section.table.peek().columns.peek().peek().filter((col) => col.summarySourceCol.peek()).map((col) => col.summarySourceCol.peek()),
    link,
    section: section.id.peek()
  };
}
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.makeTestId)("test-wselect-");
function getCompatibleTypes(tableId, isNewPage) {
  if (tableId !== "New Table") {
    return ["record", "single", "detail", "chart", "custom", "custom.calendar"];
  } else if (isNewPage) {
    return ["record"];
  } else {
    return ["record", "single", "detail"];
  }
}
function isValidSelection(table, type, isNewPage) {
  return table !== null && getCompatibleTypes(table, isNewPage).includes(type);
}
const DELAY_BEFORE_SPINNER_MS = 500;
function attachPageWidgetPicker(elem, gristDoc, onSave, options = {}) {
  options.placement = "left";
  const domCreator = (ctl) => buildPageWidgetPicker(ctl, gristDoc, onSave, options);
  (0,popweasel__WEBPACK_IMPORTED_MODULE_13__.setPopupToCreateDom)(elem, domCreator, {
    placement: "left",
    trigger: ["click"],
    attach: "body",
    boundaries: "viewport"
  });
}
function openPageWidgetPicker(elem, gristDoc, onSave, options = {}) {
  (0,popweasel__WEBPACK_IMPORTED_MODULE_13__.popupOpen)(elem, (ctl) => buildPageWidgetPicker(ctl, gristDoc, onSave, options), { placement: "right" });
}
function buildPageWidgetPicker(ctl, gristDoc, onSave, options = {}) {
  const { behavioralPromptsManager, docModel } = gristDoc;
  const tables = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.fromKo)(docModel.visibleTables.getObservable());
  const columns = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.fromKo)(docModel.columns.createAllRowsModel("parentPos").getObservable());
  const defaultValue = {
    type: "record",
    table: null,
    summarize: false,
    columns: [],
    link: app_client_ui_selectBy__WEBPACK_IMPORTED_MODULE_4__.NoLink,
    section: 0
  };
  const initValue = options.value && options.value() || defaultValue;
  const value = {
    type: grainjs__WEBPACK_IMPORTED_MODULE_12__.Observable.create(ctl, initValue.type),
    table: grainjs__WEBPACK_IMPORTED_MODULE_12__.Observable.create(ctl, initValue.table),
    summarize: grainjs__WEBPACK_IMPORTED_MODULE_12__.Observable.create(ctl, initValue.summarize),
    columns: grainjs__WEBPACK_IMPORTED_MODULE_12__.Observable.create(ctl, initValue.columns),
    link: grainjs__WEBPACK_IMPORTED_MODULE_12__.Observable.create(ctl, initValue.link),
    section: grainjs__WEBPACK_IMPORTED_MODULE_12__.Observable.create(ctl, initValue.section)
  };
  async function onSaveCB() {
    ctl.close();
    const type = value.type.get();
    const savePromise = onSave({
      type,
      table: value.table.get(),
      summarize: value.summarize.get(),
      columns: sortedAs(value.columns.get(), columns.get().map((col) => col.id.peek())),
      link: value.link.get(),
      section: value.section.get()
    });
    if (value.table.get() === "New Table") {
      await savePromise;
    } else {
      if (await (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_11__.isLongerThan)(savePromise, DELAY_BEFORE_SPINNER_MS)) {
        const label = (0,app_client_ui_widgetTypesMap__WEBPACK_IMPORTED_MODULE_6__.getWidgetTypes)(type).label;
        await (0,app_client_ui2018_modals__WEBPACK_IMPORTED_MODULE_10__.spinnerModal)(t("Building {{- label}} widget", { label }), savePromise);
      }
    }
  }
  function isValid() {
    return isValidSelection(value.table.get(), value.type.get(), options.isNewPage);
  }
  if (options.placement && options.placement === "left") {
    ctl.autoDispose(value.summarize.addListener((val, old) => val && ctl.update()));
  }
  return cssPopupWrapper(grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.create(PageWidgetSelect, value, tables, columns, onSaveCB, behavioralPromptsManager, options), (elem) => {
    setTimeout(() => elem.focus(), 0);
  }, (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.onKeyDown)({
    Escape: () => ctl.close(),
    Enter: () => isValid() && onSaveCB()
  }));
}
const registeredCustomWidgets = ["custom.calendar"];
const permittedCustomWidgets = (_a = (0,app_client_models_features__WEBPACK_IMPORTED_MODULE_2__.PERMITTED_CUSTOM_WIDGETS)().get().map((widget) => widget)) != null ? _a : [];
const finalListOfCustomWidgetToShow = permittedCustomWidgets.filter((a) => registeredCustomWidgets.includes(a));
const sectionTypes = [
  "record",
  "single",
  "detail",
  "chart",
  ...finalListOfCustomWidgetToShow,
  "custom"
];
class PageWidgetSelect extends grainjs__WEBPACK_IMPORTED_MODULE_12__.Disposable {
  constructor(_value, _tables, _columns, _onSave, _behavioralPromptsManager, _options = {}) {
    super();
    this._value = _value;
    this._tables = _tables;
    this._columns = _columns;
    this._onSave = _onSave;
    this._behavioralPromptsManager = _behavioralPromptsManager;
    this._options = _options;
    this._selectByOptions = this._options.selectBy ? grainjs__WEBPACK_IMPORTED_MODULE_12__.Computed.create(this, (use) => {
      const val = {
        type: use(this._value.type),
        table: use(this._value.table),
        summarize: use(this._value.summarize),
        columns: use(this._value.columns),
        link: this._value.link.get(),
        section: use(this._value.section)
      };
      return this._options.selectBy(val);
    }) : null;
    this._isNewTableDisabled = grainjs__WEBPACK_IMPORTED_MODULE_12__.Computed.create(this, this._value.type, (use, type) => !isValidSelection("New Table", type, this._options.isNewPage));
  }
  buildDom() {
    return cssContainer(testId("container"), cssBody(cssPanel(header(t("Select Widget")), sectionTypes.map((value) => {
      const { label, icon: iconName } = (0,app_client_ui_widgetTypesMap__WEBPACK_IMPORTED_MODULE_6__.getWidgetTypes)(value);
      const disabled = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.computed)(this._value.table, (use, tid) => this._isTypeDisabled(value, tid));
      return cssEntry(grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.autoDispose(disabled), cssTypeIcon(iconName), label, grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.on("click", () => !disabled.get() && this._selectType(value)), cssEntry.cls("-selected", (use) => use(this._value.type) === value), cssEntry.cls("-disabled", disabled), testId("type"));
    })), cssPanel(testId("data"), header(t("Select Data")), cssEntry(cssIcon("TypeTable"), "New Table", grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.on("click", (ev) => !this._isNewTableDisabled.get() && this._selectTable("New Table")), this._behavioralPromptsManager.attachTip("pageWidgetPicker", {
      popupOptions: {
        attach: null,
        placement: "right-start"
      }
    }), cssEntry.cls("-selected", (use) => use(this._value.table) === "New Table"), cssEntry.cls("-disabled", this._isNewTableDisabled), testId("table")), grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.forEach(this._tables, (table) => (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.dom)("div", cssEntryWrapper(cssEntry(cssIcon("TypeTable"), cssLabel(grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.text(table.tableNameDef), (0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_5__.overflowTooltip)()), grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.on("click", () => this._selectTable(table.id())), cssEntry.cls("-selected", (use) => use(this._value.table) === table.id()), testId("table-label")), cssPivot(cssBigIcon("Pivot"), cssEntry.cls("-selected", (use) => use(this._value.summarize) && use(this._value.table) === table.id()), grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.on("click", (ev, el) => this._selectPivot(table.id(), el)), testId("pivot")), testId("table"))))), cssPanel(header(t("Group by")), grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.hide((use) => !use(this._value.summarize)), (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.domComputed)((use) => use(this._columns).filter((col) => !col.isHiddenCol() && col.parentId() === use(this._value.table)), (cols) => cols ? grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.forEach(cols, (col) => cssEntry(cssIcon("FieldColumn"), cssFieldLabel(grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.text(col.label)), grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.on("click", () => this._toggleColumnId(col.id())), cssEntry.cls("-selected", (use) => use(this._value.columns).includes(col.id())), testId("column"))) : null))), cssFooter(cssFooterContent(grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.maybe((use) => this._selectByOptions && use(this._selectByOptions).length > 1, () => (0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_5__.withInfoTooltip)(cssSelectBy(cssSmallLabel("SELECT BY"), grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.update(cssSelect(this._value.link, this._selectByOptions), testId("selectby"))), app_client_ui_GristTooltips__WEBPACK_IMPORTED_MODULE_3__.GristTooltips.selectBy(), { tooltipMenuOptions: { attach: null }, domArgs: [
      this._behavioralPromptsManager.attachTip("pageWidgetPickerSelectBy", {
        popupOptions: {
          attach: null,
          placement: "bottom"
        }
      })
    ] })), (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.dom)("div", { style: "flex-grow: 1" }), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__.bigPrimaryButton)(this._options.buttonLabel || t("Add to Page"), grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.prop("disabled", (use) => !isValidSelection(use(this._value.table), use(this._value.type), this._options.isNewPage)), grainjs__WEBPACK_IMPORTED_MODULE_12__.dom.on("click", () => this._onSave().catch(app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_1__.reportError)), testId("addBtn")))));
  }
  _closeSummarizePanel() {
    this._value.summarize.set(false);
    this._value.columns.set([]);
  }
  _openSummarizePanel() {
    this._value.summarize.set(true);
  }
  _selectType(type) {
    this._value.type.set(type);
  }
  _selectTable(tid) {
    if (tid !== this._value.table.get()) {
      this._value.link.set(app_client_ui_selectBy__WEBPACK_IMPORTED_MODULE_4__.NoLink);
    }
    this._value.table.set(tid);
    this._closeSummarizePanel();
  }
  _isSelected(el) {
    return el.classList.contains(cssEntry.className + "-selected");
  }
  _selectPivot(tid, pivotEl) {
    if (this._isSelected(pivotEl)) {
      this._closeSummarizePanel();
    } else {
      if (tid !== this._value.table.get()) {
        this._value.columns.set([]);
        this._value.table.set(tid);
        this._value.link.set(app_client_ui_selectBy__WEBPACK_IMPORTED_MODULE_4__.NoLink);
      }
      this._openSummarizePanel();
    }
  }
  _toggleColumnId(cid) {
    const ids = this._value.columns.get();
    const newIds = ids.includes(cid) ? without(ids, cid) : [...ids, cid];
    this._value.columns.set(newIds);
  }
  _isTypeDisabled(type, table) {
    if (table === null) {
      return false;
    }
    return !getCompatibleTypes(table, this._options.isNewPage).includes(type);
  }
}
function header(label, ...args) {
  return cssHeader((0,grainjs__WEBPACK_IMPORTED_MODULE_12__.dom)("h4", label), ...args, testId("heading"));
}
const cssContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  --outline: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerBorder};

  max-height: 386px;
  box-shadow: 0 2px 20px 0 ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerShadow};
  border-radius: 2px;
  display: flex;
  flex-direction: column;
  user-select: none;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerPrimaryBg};
`);
const cssPopupWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  &:focus {
    outline: none;
  }
`);
const cssBody = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  display: flex;
  min-height: 0;
`);
const cssPanel = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  width: 224px;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.vars.mediumFontSize};
  overflow: auto;
  padding-bottom: 18px;
  &:nth-of-type(2n) {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerSecondaryBg};
    outline: var(--outline);
  }
`);
const cssHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.text};
  margin: 24px 0 24px 24px;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.vars.mediumFontSize};
`);
const cssEntry = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerItemFg};
  padding: 0 0 0 24px;
  height: 32px;
  display: flex;
  flex-direction: row;
  flex: 1 1 0px;
  align-items: center;
  white-space: nowrap;
  overflow: hidden;
  cursor: pointer;
  &-selected {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerItemSelectedBg};
  }
  &-disabled {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerItemDisabledBg};
    cursor: default;
  }
  &-disabled&-selected {
    background-color: inherit;
  }
`);
const cssIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__.icon, `
  margin-right: 8px;
  flex-shrink: 0;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerIcon};
  .${cssEntry.className}-disabled > & {
    opacity: 0.25;
  }
`);
const cssTypeIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)(cssIcon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerPrimaryIcon};
`);
const cssLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("span", `
  text-overflow: ellipsis;
  overflow: hidden;
`);
const cssFieldLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)(cssLabel, `
  padding-right: 8px;
`);
const cssEntryWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  display: flex;
  align-items: center;
`);
const cssPivot = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)(cssEntry, `
  width: 48px;
  padding-left: 8px;
  flex: 0 0 auto;
`);
const cssBigIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__.icon, `
  width: 24px;
  height: 24px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.widgetPickerSummaryIcon};
`);
const cssFooter = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  display: flex;
  border-top: var(--outline);
`);
const cssFooterContent = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  flex-grow: 1;
  height: 65px;
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 0 24px 0 24px;
`);
const cssSmallLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("span", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.text};
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.vars.xsmallFontSize};
  margin-right: 8px;
`);
const cssSelect = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)(grainjs__WEBPACK_IMPORTED_MODULE_12__.select, `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.selectButtonFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_8__.theme.selectButtonBg};
  flex: 1 0 160px;
  width: 160px;
`);
const cssSelectBy = (0,grainjs__WEBPACK_IMPORTED_MODULE_12__.styled)("div", `
  display: flex;
  align-items: center;
`);
function sortedAs(array, other) {
  const order = {};
  for (const [index, item] of other.entries()) {
    order[item] = index;
  }
  return array.slice().sort((a, b) => (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_11__.nativeCompare)(order[a], order[b]));
}


/***/ }),

/***/ "./app/client/ui/PredefinedCustomSectionConfig.ts":
/*!********************************************************!*\
  !*** ./app/client/ui/PredefinedCustomSectionConfig.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PredefinedCustomSectionConfig": () => (/* binding */ PredefinedCustomSectionConfig)
/* harmony export */ });
/* harmony import */ var _CustomSectionConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CustomSectionConfig */ "./app/client/ui/CustomSectionConfig.ts");

class PredefinedCustomSectionConfig extends _CustomSectionConfig__WEBPACK_IMPORTED_MODULE_0__.CustomSectionConfig {
  constructor(section, gristDoc) {
    super(section, gristDoc);
  }
  buildDom() {
    return this._customSectionConfigurationConfig.buildDom();
  }
  shouldRenderWidgetSelector() {
    return false;
  }
  async _getWidgets() {
  }
}


/***/ }),

/***/ "./app/client/ui/RelativeDatesOptions.ts":
/*!***********************************************!*\
  !*** ./app/client/ui/RelativeDatesOptions.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEPS": () => (/* binding */ DEPS),
/* harmony export */   "formatBoundOption": () => (/* binding */ formatBoundOption),
/* harmony export */   "getMatchingDoubleRelativeDate": () => (/* binding */ getMatchingDoubleRelativeDate),
/* harmony export */   "relativeDatesOptions": () => (/* binding */ relativeDatesOptions),
/* harmony export */   "updateRelativeDate": () => (/* binding */ updateRelativeDate)
/* harmony export */ });
/* harmony import */ var app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/RelativeDates */ "./app/common/RelativeDates.ts");
/* harmony import */ var app_common_FilterState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/FilterState */ "./app/common/FilterState.ts");
/* harmony import */ var app_common_getCurrentTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/getCurrentTime */ "./app/common/getCurrentTime.ts");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_3__);
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};




const DEPS = { getCurrentTime: app_common_getCurrentTime__WEBPACK_IMPORTED_MODULE_2__["default"] };
const DEFAULT_OPTION_LIST = [
  app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.CURRENT_DATE,
  [{
    quantity: -3,
    unit: "day"
  }],
  [{
    quantity: -7,
    unit: "day"
  }],
  [{
    quantity: -30,
    unit: "day"
  }],
  [{
    quantity: 0,
    unit: "year"
  }],
  [{
    quantity: 3,
    unit: "day"
  }],
  [{
    quantity: 7,
    unit: "day"
  }],
  [{
    quantity: 30,
    unit: "day"
  }],
  [{
    quantity: 0,
    unit: "year",
    endOf: true
  }]
];
function relativeDatesOptions(value, valueFormatter) {
  return relativeDateOptionsSpec(value).map((spec) => ({ spec, label: formatBoundOption(spec, valueFormatter) }));
}
function relativeDateOptionsSpec(value) {
  if (value === void 0) {
    return DEFAULT_OPTION_LIST;
  } else if ((0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_1__.isRelativeBound)(value)) {
    value = (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.relativeDateToUnixTimestamp)(value);
  }
  const date = moment_timezone__WEBPACK_IMPORTED_MODULE_3___default().utc(value * 1e3);
  const res = [value];
  let relDate = getMatchingDoubleRelativeDate(value, { unit: "day" });
  if (Math.abs(relDate[0].quantity) <= 90) {
    res.push(relDate);
  }
  relDate = getMatchingDoubleRelativeDate(value, { unit: "week" });
  if (Math.abs(relDate[0].quantity) <= 4) {
    res.push(relDate);
  }
  relDate = getMatchingDoubleRelativeDate(value, { unit: "month" });
  if (Math.abs(relDate[0].quantity) <= (date.date() === 1 ? 12 : 3)) {
    res.push(relDate);
  }
  if (date.date() === 1 && date.month() === 0) {
    res.push(getMatchingDoubleRelativeDate(value, { unit: "year" }));
  }
  if (date.date() === 31 && date.month() === 11) {
    res.push(getMatchingDoubleRelativeDate(value, { unit: "year", endOf: true }));
  }
  if (date.clone().endOf("month").date() === date.date()) {
    relDate = getMatchingDoubleRelativeDate(value, { unit: "month", endOf: true });
    if (Math.abs(relDate[0].quantity) < 12) {
      res.push(relDate);
    }
  }
  return res;
}
function now() {
  const m = DEPS.getCurrentTime();
  return moment_timezone__WEBPACK_IMPORTED_MODULE_3___default().utc([m.year(), m.month(), m.date()]);
}
function getMatchingDoubleRelativeDate(dateValue, option) {
  const { unit } = option;
  const date = moment_timezone__WEBPACK_IMPORTED_MODULE_3___default().utc(dateValue * 1e3);
  const dateNow = now();
  const quantity = (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.diffUnit)(date, dateNow.clone(), unit);
  const m = dateNow.clone().add(quantity, unit);
  if (option.endOf) {
    m.endOf(unit);
    m.startOf("day");
  } else {
    m.startOf(unit);
  }
  const dayQuantity = (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.diffUnit)(date, m, "day");
  const res = [__spreadValues({ quantity }, option)];
  if (dayQuantity) {
    res.push({ quantity: dayQuantity, unit: "day" });
  }
  return res;
}
function formatBoundOption(bound, valueFormatter) {
  return (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_1__.isRelativeBound)(bound) ? (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.formatRelBounds)(bound) : valueFormatter(bound);
}
function updateRelativeDate(relativeDate, date) {
  const periods = Array.isArray(relativeDate) ? relativeDate : [relativeDate];
  if ([1, 2].includes(periods.length)) {
    const { unit, endOf } = periods[0];
    const relDate = getMatchingDoubleRelativeDate(date, { unit, endOf });
    const options = relativeDateOptionsSpec(date);
    if (options.find((opt) => (0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_1__.isRelativeBound)(opt) && (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.isEquivalentRelativeDate)(opt, relDate))) {
      return relDate;
    }
    return date;
  }
  throw new Error(`Relative date spec does only support 1 or 2 periods, got ${periods.length}!`);
}


/***/ }),

/***/ "./app/client/ui/RightPanel.ts":
/*!*************************************!*\
  !*** ./app/client/ui/RightPanel.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RightPanel": () => (/* binding */ RightPanel),
/* harmony export */   "buildConfigContainer": () => (/* binding */ buildConfigContainer),
/* harmony export */   "getFieldType": () => (/* binding */ getFieldType)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_components_RefSelect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/components/RefSelect */ "./app/client/components/RefSelect.ts");
/* harmony import */ var app_client_lib_domAsync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/domAsync */ "./app/client/lib/domAsync.ts");
/* harmony import */ var app_client_lib_imports__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/lib/imports */ "./app/client/lib/imports.js");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_lib_sessionObs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/lib/sessionObs */ "./app/client/lib/sessionObs.ts");
/* harmony import */ var app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/models/AppModel */ "./app/client/models/AppModel.ts");
/* harmony import */ var app_client_ui_CustomSectionConfig__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui/CustomSectionConfig */ "./app/client/ui/CustomSectionConfig.ts");
/* harmony import */ var app_client_ui_DescriptionConfig__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui/DescriptionConfig */ "./app/client/ui/DescriptionConfig.ts");
/* harmony import */ var app_client_ui_GridOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui/GridOptions */ "./app/client/ui/GridOptions.ts");
/* harmony import */ var app_client_ui_PageWidgetPicker__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/ui/PageWidgetPicker */ "./app/client/ui/PageWidgetPicker.ts");
/* harmony import */ var app_client_ui_PredefinedCustomSectionConfig__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/ui/PredefinedCustomSectionConfig */ "./app/client/ui/PredefinedCustomSectionConfig.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui_selectBy__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/client/ui/selectBy */ "./app/client/ui/selectBy.ts");
/* harmony import */ var app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/client/ui/VisibleFieldsConfig */ "./app/client/ui/VisibleFieldsConfig.ts");
/* harmony import */ var app_client_ui_widgetTypesMap__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/client/ui/widgetTypesMap */ "./app/client/ui/widgetTypesMap.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/client/ui2018/editableLabel */ "./app/client/ui2018/editableLabel.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_common_StringUnion__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! app/common/StringUnion */ "./app/common/StringUnion.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_23__);
























const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_4__.makeT)("RightPanel");
const TopTab = (0,app_common_StringUnion__WEBPACK_IMPORTED_MODULE_21__.StringUnion)("pageWidget", "field");
const PageSubTab = (0,app_common_StringUnion__WEBPACK_IMPORTED_MODULE_21__.StringUnion)("widget", "sortAndFilter", "data");
function getFieldType(widgetType) {
  const fieldTypes = /* @__PURE__ */ new Map([
    ["record", { label: t("Columns", { count: 1 }), icon: "TypeCell", pluralLabel: t("Columns", { count: 2 }) }],
    ["detail", { label: t("Fields", { count: 1 }), icon: "TypeCell", pluralLabel: t("Fields", { count: 2 }) }],
    ["single", { label: t("Fields", { count: 1 }), icon: "TypeCell", pluralLabel: t("Fields", { count: 2 }) }],
    ["chart", { label: t("Series", { count: 1 }), icon: "ChartLine", pluralLabel: t("Series", { count: 2 }) }],
    ["custom", { label: t("Columns", { count: 1 }), icon: "TypeCell", pluralLabel: t("Columns", { count: 2 }) }]
  ]);
  return fieldTypes.get(widgetType || "record") || fieldTypes.get("record");
}
class RightPanel extends grainjs__WEBPACK_IMPORTED_MODULE_22__.Disposable {
  constructor(_gristDoc, _isOpen) {
    super();
    this._gristDoc = _gristDoc;
    this._isOpen = _isOpen;
    this._topTab = (0,app_client_lib_sessionObs__WEBPACK_IMPORTED_MODULE_5__.createSessionObs)(this, "rightTopTab", "pageWidget", TopTab.guard);
    this._subTab = (0,app_client_lib_sessionObs__WEBPACK_IMPORTED_MODULE_5__.createSessionObs)(this, "rightPageSubTab", "widget", PageSubTab.guard);
    this._pageWidgetType = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(this, (use) => {
      const section = use(this._gristDoc.viewModel.activeSection);
      return use(section.parentKey) || null;
    });
    this._validSection = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(this, (use) => {
      const sec = use(this._gristDoc.viewModel.activeSection);
      return sec.getRowId() ? sec : null;
    });
    this._extraTool = _gristDoc.rightPanelTool;
    this.autoDispose((0,grainjs__WEBPACK_IMPORTED_MODULE_22__.subscribe)(this._extraTool, (_use, tool) => tool && _isOpen.set(true)));
    this.header = this._buildHeaderDom();
    this.content = this._buildContentDom();
    this.autoDispose(app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.createGroup({
      fieldTabOpen: () => this._openFieldTab(),
      viewTabOpen: () => this._openViewTab(),
      viewTabFocus: () => this._viewTabFocus(),
      sortFilterTabOpen: () => this._openSortFilter(),
      dataSelectionTabOpen: () => this._openDataSelection()
    }, this, true));
  }
  _openFieldTab() {
    this._open("field");
  }
  _openViewTab() {
    this._open("pageWidget", "widget");
  }
  _viewTabFocus() {
    this._focus("pageWidget");
  }
  _openSortFilter() {
    this._open("pageWidget", "sortAndFilter");
  }
  _openDataSelection() {
    this._open("pageWidget", "data");
  }
  _open(topTab, subTab) {
    (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.bundleChanges)(() => {
      this._isOpen.set(true);
      this._topTab.set(topTab);
      if (subTab) {
        this._subTab.set(subTab);
      }
    });
  }
  _focus(topTab) {
    (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.bundleChanges)(() => {
      if (!this._isOpen.get()) {
        return;
      }
      this._isOpen.set(true);
      this._topTab.set(topTab);
    });
  }
  _buildHeaderDom() {
    return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domComputed((use) => {
      if (!use(this._isOpen)) {
        return null;
      }
      const tool = use(this._extraTool);
      return tool ? this._buildToolHeader(tool) : this._buildStandardHeader();
    });
  }
  _buildToolHeader(tool) {
    return cssTopBarItem(cssTopBarIcon(tool.icon), tool.label, cssHoverCircle(cssHoverIcon("CrossBig"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => this._gristDoc.showTool("none")), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("right-tool-close")), cssTopBarItem.cls("-selected", true));
  }
  _buildStandardHeader() {
    return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(this._pageWidgetType, (type) => {
      const widgetInfo = app_client_ui_widgetTypesMap__WEBPACK_IMPORTED_MODULE_15__.widgetTypesMap.get(type) || { label: "Table", icon: "TypeTable" };
      const fieldInfo = getFieldType(type);
      return [
        cssTopBarItem(cssTopBarIcon(widgetInfo.icon), widgetInfo.label, cssTopBarItem.cls("-selected", (use) => use(this._topTab) === "pageWidget"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => this._topTab.set("pageWidget")), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("right-tab-pagewidget")),
        cssTopBarItem(cssTopBarIcon(fieldInfo.icon), fieldInfo.label, cssTopBarItem.cls("-selected", (use) => use(this._topTab) === "field"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => this._topTab.set("field")), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("right-tab-field"))
      ];
    });
  }
  _buildContentDom() {
    return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domComputed((use) => {
      if (!use(this._isOpen)) {
        return null;
      }
      const tool = use(this._extraTool);
      if (tool) {
        return tabContentToDom(tool.content);
      }
      const topTab = use(this._topTab);
      if (topTab === "field") {
        return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(this._buildFieldContent.bind(this));
      }
      if (topTab === "pageWidget" && use(this._pageWidgetType)) {
        return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(this._buildPageWidgetContent.bind(this));
      }
      return null;
    });
  }
  _buildFieldContent(owner) {
    var _a;
    const fieldBuilder = owner.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_23__.computed(() => {
      var _a2, _b;
      const vsi = (_b = (_a2 = this._gristDoc.viewModel).activeSection) == null ? void 0 : _b.call(_a2).viewInstance();
      return vsi && vsi.activeFieldBuilder();
    }));
    const selectedColumns = owner.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_23__.computed(() => {
      var _a2, _b, _c;
      const vsi = (_b = (_a2 = this._gristDoc.viewModel).activeSection) == null ? void 0 : _b.call(_a2).viewInstance();
      if (vsi && vsi.selectedColumns) {
        return vsi.selectedColumns();
      }
      const field = (_c = fieldBuilder()) == null ? void 0 : _c.field;
      return field ? [field] : [];
    }));
    const isMultiSelect = owner.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_23__.pureComputed(() => {
      const list = selectedColumns();
      return Boolean(list && list.length > 1);
    }));
    owner.autoDispose(selectedColumns.subscribe((cols) => {
      if (owner.isDisposed() || this._gristDoc.isDisposed() || this._gristDoc.viewModel.isDisposed()) {
        return;
      }
      const section = this._gristDoc.viewModel.activeSection();
      if (!section || section.isDisposed()) {
        return;
      }
      section.selectedFields(cols || []);
    }));
    (_a = this._gristDoc.viewModel.activeSection()) == null ? void 0 : _a.selectedFields(selectedColumns.peek() || []);
    const docModel = this._gristDoc.docModel;
    const origColRef = owner.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_23__.computed(() => {
      var _a2;
      return ((_a2 = fieldBuilder()) == null ? void 0 : _a2.origColumn.origColRef()) || 0;
    }));
    const origColumn = owner.autoDispose(docModel.columns.createFloatingRowModel(origColRef));
    const isColumnValid = owner.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_23__.computed(() => Boolean(origColRef())));
    const refSelect = app_client_components_RefSelect__WEBPACK_IMPORTED_MODULE_1__.RefSelect.create(owner, { docModel, origColumn, fieldBuilder });
    const cursor = owner.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_23__.computed(() => {
      var _a2, _b, _c;
      const vsi = (_b = (_a2 = this._gristDoc.viewModel).activeSection) == null ? void 0 : _b.call(_a2).viewInstance();
      return (_c = vsi == null ? void 0 : vsi.cursor.currentPosition()) != null ? _c : {};
    }));
    return (0,app_client_lib_domAsync__WEBPACK_IMPORTED_MODULE_2__.domAsync)(app_client_lib_imports__WEBPACK_IMPORTED_MODULE_3__.loadViewPane().then((ViewPane) => {
      const { buildNameConfig, buildFormulaConfig } = ViewPane.FieldConfig;
      return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(isColumnValid, () => buildConfigContainer(cssSection(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(buildNameConfig, origColumn, cursor, isMultiSelect)), cssSection(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(app_client_ui_DescriptionConfig__WEBPACK_IMPORTED_MODULE_8__.buildDescriptionConfig, origColumn.description, { cursor, "testPrefix": "column" })), cssSeparator(), cssSection(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(buildFormulaConfig, origColumn, this._gristDoc, this._activateFormulaEditor.bind(this))), cssSeparator(), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(fieldBuilder, (builder) => [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("COLUMN TYPE")),
        cssSection(builder.buildSelectTypeDom()),
        cssSection(builder.buildSelectWidgetDom()),
        cssSection(builder.buildConfigDom()),
        builder.buildColorConfigDom(),
        cssSection(builder.buildSettingOptions(), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(isMultiSelect, () => disabledSection()))
      ]), cssSeparator(), cssSection(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(refSelect.isForeignRefCol, () => [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("Add referenced columns")),
        cssRow(refSelect.buildDom()),
        cssSeparator()
      ]), (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("TRANSFORM")), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(fieldBuilder, (builder) => builder.buildTransformDom()), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(isMultiSelect, () => disabledSection()), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("panel-transform")), this._disableIfReadonly()));
    }));
  }
  _activateFormulaEditor(options) {
    const vsi = this._gristDoc.viewModel.activeSection().viewInstance();
    if (!vsi) {
      return;
    }
    const { refElem, editValue, canDetach, onSave, onCancel } = options;
    const editRow = vsi.moveEditRowToCursor();
    return vsi.activeFieldBuilder.peek().openSideFormulaEditor({
      editRow,
      refElem,
      canDetach,
      editValue,
      onSave,
      onCancel
    });
  }
  _buildPageWidgetContent(_owner) {
    return [
      cssSubTabContainer(cssSubTab(t("Widget"), cssSubTab.cls("-selected", (use) => use(this._subTab) === "widget"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => this._subTab.set("widget")), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("config-widget")), cssSubTab(t("Sort & Filter"), cssSubTab.cls("-selected", (use) => use(this._subTab) === "sortAndFilter"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => this._subTab.set("sortAndFilter")), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("config-sortAndFilter")), cssSubTab(t("Data"), cssSubTab.cls("-selected", (use) => use(this._subTab) === "data"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => this._subTab.set("data")), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("config-data"))),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domComputed(this._subTab, (subTab) => grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(this._validSection, (activeSection) => buildConfigContainer(subTab === "widget" ? grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(this._buildPageWidgetConfig.bind(this), activeSection) : subTab === "sortAndFilter" ? grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(this._buildPageSortFilterConfig.bind(this)) : subTab === "data" ? grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(this._buildPageDataConfig.bind(this), activeSection) : null)))
    ];
  }
  _createViewConfigTab(owner) {
    const viewConfigTab = grainjs__WEBPACK_IMPORTED_MODULE_22__.Observable.create(owner, null);
    const gristDoc = this._gristDoc;
    app_client_lib_imports__WEBPACK_IMPORTED_MODULE_3__.loadViewPane().then((ViewPane) => {
      if (owner.isDisposed()) {
        return;
      }
      viewConfigTab.set(owner.autoDispose(ViewPane.ViewConfigTab.create({ gristDoc, viewModel: gristDoc.viewModel })));
    }).catch(app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_6__.reportError);
    return viewConfigTab;
  }
  _buildPageWidgetConfig(owner, activeSection) {
    const viewConfigTab = this._createViewConfigTab(owner);
    const hasCustomMapping = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => {
      const widgetType = use(this._pageWidgetType);
      const isCustom = widgetType === "custom" || (widgetType == null ? void 0 : widgetType.startsWith("custom."));
      const hasColumnMapping = use(activeSection.columnsToMap);
      return Boolean(isCustom && hasColumnMapping);
    });
    const cursor = owner.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_23__.computed(() => {
      var _a, _b, _c;
      const vsi = (_b = (_a = this._gristDoc.viewModel).activeSection) == null ? void 0 : _b.call(_a).viewInstance();
      return (_c = vsi == null ? void 0 : vsi.cursor.currentPosition()) != null ? _c : {};
    }));
    return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(viewConfigTab, (vct) => [
      this._disableIfReadonly(),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.text((use) => use(activeSection.isRaw) ? t("DATA TABLE NAME") : t("WIDGET TITLE")), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.style("margin-bottom", "14px")),
      cssRow(cssTextInput(grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => use(activeSection.titleDef)), (val) => activeSection.titleDef.saveOnly(val), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.boolAttr("disabled", (use) => {
        const isRawTable = use(activeSection.isRaw);
        const isSummaryTable = use(use(activeSection.table).summarySourceTable) !== 0;
        return isRawTable && isSummaryTable;
      }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("right-widget-title"))),
      cssSection(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(app_client_ui_DescriptionConfig__WEBPACK_IMPORTED_MODULE_8__.buildDescriptionConfig, activeSection.description, { cursor, "testPrefix": "right-widget" })),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => !use(activeSection.isRaw), () => cssRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_16__.primaryButton)(t("Change Widget"), this._createPageWidgetPicker()), cssRow.cls("-top-space"))),
      cssSeparator(),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => ["detail", "single"].includes(use(this._pageWidgetType)), () => [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("Theme")),
        (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", vct._buildThemeDom(), vct._buildLayoutDom())
      ]),
      (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.domComputed)((use) => {
        if (use(this._pageWidgetType) !== "record") {
          return null;
        }
        return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(app_client_ui_GridOptions__WEBPACK_IMPORTED_MODULE_9__.GridOptions, activeSection);
      }),
      (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.domComputed)((use) => {
        if (use(this._pageWidgetType) !== "record") {
          return null;
        }
        return [
          cssSeparator(),
          (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("ROW STYLE")),
          (0,app_client_lib_domAsync__WEBPACK_IMPORTED_MODULE_2__.domAsync)(app_client_lib_imports__WEBPACK_IMPORTED_MODULE_3__.loadViewPane().then((ViewPane) => grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(ViewPane.ConditionalStyle, t("Row Style"), activeSection, this._gristDoc)))
        ];
      }),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => use(this._pageWidgetType) === "chart", () => [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("CHART TYPE")),
        vct._buildChartConfigDom()
      ]),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => use(this._pageWidgetType) === "custom", () => {
        const parts = vct._buildCustomTypeItems();
        return [
          (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("CUSTOM")),
          grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => use(this._gristDoc.app.features).customViewPlugin, () => (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", parts[0].buildDom())),
          grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => use(activeSection.customDef.mode) === "plugin", () => (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", parts[2].buildDom())),
          grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => use(activeSection.customDef.mode) === "url" && use(this._pageWidgetType) === "custom", () => grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(app_client_ui_CustomSectionConfig__WEBPACK_IMPORTED_MODULE_7__.CustomSectionConfig, activeSection, this._gristDoc))
        ];
      }),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => {
        var _a;
        return (_a = use(this._pageWidgetType)) == null ? void 0 : _a.startsWith("custom.");
      }, () => {
        return [
          grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(app_client_ui_PredefinedCustomSectionConfig__WEBPACK_IMPORTED_MODULE_11__.PredefinedCustomSectionConfig, activeSection, this._gristDoc)
        ];
      }),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => !(use(hasCustomMapping) || use(this._pageWidgetType) === "chart" || use(activeSection.isRaw)), () => [
        cssSeparator(),
        grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(app_client_ui_VisibleFieldsConfig__WEBPACK_IMPORTED_MODULE_14__.VisibleFieldsConfig, this._gristDoc, activeSection)
      ])
    ]);
  }
  _buildPageSortFilterConfig(owner) {
    const viewConfigTab = this._createViewConfigTab(owner);
    return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(viewConfigTab, (vct) => vct.buildSortFilterDom());
  }
  _buildPageDataConfig(owner, activeSection) {
    const viewConfigTab = this._createViewConfigTab(owner);
    const viewModel = this._gristDoc.viewModel;
    const table = activeSection.table;
    const groupedBy = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => use(use(table).groupByColumns));
    const link = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => {
      return (0,app_client_ui_selectBy__WEBPACK_IMPORTED_MODULE_13__.linkId)({
        srcSectionRef: use(activeSection.linkSrcSectionRef),
        srcColRef: use(activeSection.linkSrcColRef),
        targetColRef: use(activeSection.linkTargetColRef)
      });
    });
    const refreshTrigger = grainjs__WEBPACK_IMPORTED_MODULE_22__.Observable.create(owner, false);
    const linkOptions = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(owner, (use) => {
      void use(refreshTrigger);
      return (0,app_client_ui_selectBy__WEBPACK_IMPORTED_MODULE_13__.selectBy)(this._gristDoc.docModel, viewModel.viewSections().all(), activeSection);
    });
    link.onWrite((val) => this._gristDoc.saveLink(val));
    return [
      this._disableIfReadonly(),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("DATA TABLE")),
      cssRow(cssIcon("TypeTable"), cssDataLabel(t("SOURCE DATA")), cssContent(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.text((use) => use(use(table).primaryTableId)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("pwc-table"))),
      (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", cssRow(cssIcon("Pivot"), cssDataLabel(t("GROUPED BY"))), cssRow((0,grainjs__WEBPACK_IMPORTED_MODULE_22__.domComputed)(groupedBy, (cols) => cssList(cols.map((c) => cssListItem(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.text(c.label), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("pwc-groupedBy-col")))))), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("pwc-groupedBy"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.hide((use) => !use(use(table).summarySourceTable))),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => !use(activeSection.isRaw), () => cssButtonRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_16__.primaryButton)(t("Edit Data Selection"), this._createPageWidgetPicker(), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("pwc-editDataSelection")), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => Boolean(use(use(activeSection.table).summarySourceTable)), () => (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_16__.basicButton)(t("Detach"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => this._gristDoc.docData.sendAction(["DetachSummaryViewSection", activeSection.getRowId()])), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("detach-button"))), cssRow.cls("-top-space"))),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(viewConfigTab, (vct) => cssRow((0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", vct._buildAdvancedSettingsDom()))),
      cssSeparator(),
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe((use) => !use(activeSection.isRaw), () => [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("SELECT BY")),
        cssRow(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.update((0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_20__.select)(link, linkOptions, { defaultLabel: t("Select Widget") }), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => {
          refreshTrigger.set(!refreshTrigger.get());
        })), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("right-select-by"))
      ]),
      (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.domComputed)((use) => {
        const selectorFor = use(use(activeSection.linkedSections).getObservable());
        return selectorFor.length ? [
          (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_12__.cssLabel)(t("SELECTOR FOR"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("selector-for")),
          cssRow(cssList(selectorFor.map((sec) => this._buildSectionItem(sec))))
        ] : null;
      })
    ];
  }
  _createPageWidgetPicker() {
    const gristDoc = this._gristDoc;
    const section = gristDoc.viewModel.activeSection;
    const onSave = (val) => gristDoc.saveViewSection(section.peek(), val);
    return (elem) => {
      (0,app_client_ui_PageWidgetPicker__WEBPACK_IMPORTED_MODULE_10__.attachPageWidgetPicker)(elem, gristDoc, onSave, {
        buttonLabel: t("Save"),
        value: () => (0,app_client_ui_PageWidgetPicker__WEBPACK_IMPORTED_MODULE_10__.toPageWidget)(section.peek()),
        selectBy: (val) => gristDoc.selectBy(val)
      });
    };
  }
  _buildSectionItem(sec) {
    return cssListItem(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.text(sec.titleDef), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("selector-for-entry"));
  }
  _disableIfReadonly() {
    if (this._gristDoc.docPageModel) {
      return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(this._gristDoc.docPageModel.isReadonly, () => cssOverlay((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("disable-overlay"), cssBottomText(t("You do not have edit access to this document"))));
    }
  }
}
function disabledSection() {
  return cssOverlay((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.testId)("panel-disabled-section"));
}
function buildConfigContainer(...args) {
  return cssConfigContainer((0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", { style: "position: relative; padding-top: 1px;" }, ...args));
}
function tabContentToDom(content) {
  function buildItemDom(item) {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div.config_item", grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.show(item.showObs || true), item.buildDom());
  }
  if ("buildDom" in content) {
    return content.buildDom();
  }
  return cssTabContents(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.forEach(content, (itemOrHeader) => {
    if (itemOrHeader.header) {
      return (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div.config_group", grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.show(itemOrHeader.showObs || true), itemOrHeader.label ? (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div.config_header", itemOrHeader.label) : null, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.forEach(itemOrHeader.items, (item) => buildItemDom(item)));
    } else {
      return buildItemDom(itemOrHeader);
    }
  }));
}
const cssOverlay = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelDisabledOverlay};
  opacity: 0.8;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 100;
`);
const cssBottomText = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("span", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.text};
  position: absolute;
  bottom: -40px;
  padding: 4px 16px;
`);
const cssRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.text};
  display: flex;
  margin: 8px 16px;
  align-items: center;
  &-top-space {
    margin-top: 24px;
  }
  &-disabled {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.disabledText};
  }
`);
const cssButtonRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(cssRow, `
  margin-left: 0;
  margin-right: 0;
  & > button {
    margin-left: 16px;
  }
`);
const cssIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_19__.icon, `
  flex: 0 0 auto;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.lightText};
`);
const cssTopBarItem = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  flex: 1 1 0px;
  height: 100%;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelTabBg};
  font-weight: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.vars.headerControlTextWeight};
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelTabFg};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelTabIcon};
  display: flex;
  align-items: center;
  cursor: default;

  &-selected {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelTabSelectedBg};
    font-weight: initial;
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelTabSelectedFg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelTabSelectedFg};
  }
  &:not(&-selected):hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelTabHoverBg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelTabIconHover};
  }
`);
const cssTopBarIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_19__.icon, `
  flex: none;
  margin: 16px;
  height: 16px;
  width: 16px;
  background-color: var(--icon-color);
`);
const cssHoverCircle = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  margin-left: auto;
  margin-right: 8px;
  width: 32px;
  height: 32px;
  background: none;
  border-radius: 16px;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelTabButtonHoverBg};
  }
`);
const cssHoverIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_19__.icon, `
  height: 16px;
  width: 16px;
  background-color: var(--icon-color);
`);
const cssSubTabContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  height: 48px;
  flex: none;
  display: flex;
  align-items: center;
  justify-content: space-between;
`);
const cssSubTab = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelSubtabFg};
  flex: auto;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  text-align: center;
  padding-bottom: 8px;
  border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.pagePanelsBorder};
  cursor: default;

  &-selected {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelSubtabSelectedFg};
    border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelSubtabSelectedUnderline};
  }
  &:not(&-selected):hover {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelSubtabHoverFg};
  }
  &:hover {
    border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.rightPanelSubtabHoverUnderline};
  }
  .${cssSubTabContainer.className}:hover > &-selected:not(:hover) {
    border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.pagePanelsBorder};
  }
`);
const cssTabContents = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  padding: 16px 8px;
  overflow: auto;
`);
const cssSeparator = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.pagePanelsBorder};
  margin-top: 16px;
`);
const cssConfigContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div.test-config-container", `
  overflow: auto;
  --color-list-item: none;
  --color-list-item-hover: none;

  &:after {
    content: "";
    display: block;
    height: 40px;
  }
  & .fieldbuilder_settings {
    margin: 16px 0 0 0;
  }
`);
const cssDataLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  flex: 0 0 81px;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.lightText};
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.vars.xsmallFontSize};
  margin-left: 4px;
  margin-top: 2px;
`);
const cssContent = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  flex: 0 1 auto;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 1em;
`);
const cssList = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  list-style: none;
  width: 100%;
`);
const cssListItem = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("li", `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.hover};
  border-radius: 2px;
  margin-bottom: 4px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
  padding: 4px 8px;
`);
const cssTextInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_18__.textInput, `
  flex: 1 0 auto;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.inputFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.inputBg};

  &:disabled {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.inputDisabledFg};
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.inputDisabledBg};
    pointer-events: none;
  }
`);
const cssSection = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  position: relative;
`);


/***/ }),

/***/ "./app/client/ui/RightPanelStyles.ts":
/*!*******************************************!*\
  !*** ./app/client/ui/RightPanelStyles.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cssBlockedCursor": () => (/* binding */ cssBlockedCursor),
/* harmony export */   "cssButtonRow": () => (/* binding */ cssButtonRow),
/* harmony export */   "cssHelp": () => (/* binding */ cssHelp),
/* harmony export */   "cssIcon": () => (/* binding */ cssIcon),
/* harmony export */   "cssLabel": () => (/* binding */ cssLabel),
/* harmony export */   "cssPinButton": () => (/* binding */ cssPinButton),
/* harmony export */   "cssRow": () => (/* binding */ cssRow),
/* harmony export */   "cssRowWrapped": () => (/* binding */ cssRowWrapped),
/* harmony export */   "cssSaveButtonsRow": () => (/* binding */ cssSaveButtonsRow),
/* harmony export */   "cssSeparator": () => (/* binding */ cssSeparator),
/* harmony export */   "cssSortFilterColumn": () => (/* binding */ cssSortFilterColumn)
/* harmony export */ });
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");



const cssIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__.icon, `
  flex: 0 0 auto;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.lightText};
`);
const cssLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.text};
  text-transform: uppercase;
  margin: 16px 16px 12px 16px;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.xsmallFontSize};
`);
const cssHelp = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  margin: -8px 16px 12px 16px;
  font-style: italic;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.xsmallFontSize};
`);
const cssRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  display: flex;
  margin: 8px 16px;
  align-items: center;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.text};
  &-top-space {
    margin-top: 24px;
  }
  &-disabled {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.disabledText};
  }
`);
const cssRowWrapped = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)(cssRow, `
  flex-wrap: wrap;
  row-gap: 5px;
`);
const cssSortFilterColumn = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  cursor: pointer;
  display: flex;
  flex-grow: 1;
  align-items: center;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.text};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.hover};
  overflow: hidden;
  border-radius: 4px;
  padding: 4px 8px;
`);
const cssBlockedCursor = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("span", `
  &, & * {
    cursor: not-allowed !important;
  }
`);
const cssButtonRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)(cssRowWrapped, `
  margin-left: 0;
  margin-right: 0;
  & > button {
    margin-left: 16px;
  }
`);
const cssSeparator = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.pagePanelsBorder};
  margin-top: 16px;
`);
const cssSaveButtonsRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  margin: 16px 16px 12px 16px;
`);
const cssPinButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)("div", `
  cursor: pointer;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.controlSecondaryFg};
  border-radius: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.controlBorderRadius};
  padding: 3px;

  &-pinned {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.controlPrimaryBg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.controlPrimaryFg};
  }

  &:not(&-pinned):hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.hover};
  }
`);


/***/ }),

/***/ "./app/client/ui/SortConfig.ts":
/*!*************************************!*\
  !*** ./app/client/ui/SortConfig.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SortConfig": () => (/* binding */ SortConfig)
/* harmony export */ });
/* harmony import */ var app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/koArray */ "./app/client/lib/koArray.js");
/* harmony import */ var app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/koForm */ "./app/client/lib/koForm.js");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_lib_sortUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/lib/sortUtil */ "./app/client/lib/sortUtil.ts");
/* harmony import */ var app_client_ui_searchDropdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui/searchDropdown */ "./app/client/ui/searchDropdown.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui2018/checkbox */ "./app/client/ui2018/checkbox.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_draggableList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui2018/draggableList */ "./app/client/ui2018/draggableList.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/common/SortSpec */ "./app/common/SortSpec.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! popweasel */ "./node_modules/popweasel/dist/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(popweasel__WEBPACK_IMPORTED_MODULE_12__);












const difference = __webpack_require__(/*! lodash/difference */ "./node_modules/lodash/difference.js");
const isEqual = __webpack_require__(/*! lodash/isEqual */ "./node_modules/lodash/isEqual.js");

const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.makeTestId)("test-sort-config-");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__.makeT)("SortConfig");
class SortConfig extends grainjs__WEBPACK_IMPORTED_MODULE_11__.Disposable {
  constructor(_section, _gristDoc, _options = {}) {
    super();
    this._section = _section;
    this._gristDoc = _gristDoc;
    this._options = _options;
    this._columns = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(this, (use) => {
      const cols = use(use(use(this._section.table).columns).getObservable());
      return cols.filter((col) => !use(col.isHiddenCol)).map((col) => ({
        label: use(col.label),
        value: col.getRowId(),
        icon: "FieldColumn",
        type: col.type()
      }));
    });
    this._colRefs = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(this, (use) => {
      return use(this._section.activeSortSpec).map((col) => app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.getColRef(col));
    });
    this._sortRows = this.autoDispose(app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0___default()(this._colRefs.get()));
    this._changedColRefs = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(this, (use) => {
      const changedSpecs = difference(use(this._section.activeSortSpec), app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.parseSortColRefs(use(this._section.sortColRefs)));
      return new Set(changedSpecs.map((spec) => app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.getColRef(spec)));
    });
    this.autoDispose(this._colRefs.addListener((curr, prev) => {
      if (!isEqual(curr, prev)) {
        this._sortRows.assign(curr);
      }
    }));
  }
  buildDom() {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.dom)("div", app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_1__.draggableList(this._sortRows, (colRef) => this._createRow(colRef), {
      reorder: (colRef, nextColRef) => this._reorder(colRef, nextColRef),
      removeButton: false,
      drag_indicator: app_client_ui2018_draggableList__WEBPACK_IMPORTED_MODULE_8__.cssDragger,
      itemClass: cssDragRow.className
    }), this._buildAddToSortButton(this._columns), this._buildUpdateDataButton(), testId("container"));
  }
  _createRow(colRef) {
    return this._buildSortRow(colRef, this._section.activeSortSpec, this._columns);
  }
  _buildSortRow(colRef, sortSpec, columns) {
    const holder = new grainjs__WEBPACK_IMPORTED_MODULE_11__.MultiHolder();
    const { menuOptions } = this._options;
    const col = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(holder, () => colRef);
    const details = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(holder, (use) => app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.specToDetails(app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.findCol(use(sortSpec), colRef)));
    const hasSpecs = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(holder, details, (_, specDetails) => app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.hasOptions(specDetails));
    const isAscending = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(holder, details, (_, specDetails) => specDetails.direction === app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.ASC);
    col.onWrite((newRef) => {
      let specs = sortSpec.peek();
      const colSpec = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.findCol(specs, colRef);
      const newSpec = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.findCol(specs, newRef);
      if (newSpec) {
        specs = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.swap(specs, colRef, newRef);
        specs = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.setSortDirection(specs, colRef, app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.direction(newSpec));
        specs = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.setSortDirection(specs, newRef, app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.direction(colSpec));
      } else {
        specs = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.replace(specs, colRef, app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.createColSpec(newRef, app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.direction(colSpec)));
      }
      this._saveSort(specs);
    });
    const computedFlag = (flag, allowedTypes, label) => {
      const computed = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(holder, details, (_, d) => d[flag] || false);
      computed.onWrite((value) => {
        const specs = sortSpec.peek();
        const specDetails = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.specToDetails(app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.findCol(specs, colRef));
        specDetails[flag] = value;
        this._saveSort(app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.replace(specs, app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.getColRef(colRef), specDetails));
      });
      return { computed, allowedTypes, flag, label };
    };
    const orderByChoice = computedFlag("orderByChoice", ["Choice"], t("Use choice position"));
    const naturalSort = computedFlag("naturalSort", ["Text"], t("Natural sort"));
    const emptyLast = computedFlag("emptyLast", null, t("Empty values last"));
    const flags = [orderByChoice, emptyLast, naturalSort];
    const column = columns.get().find((c) => c.value === app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.getColRef(colRef));
    return cssSortRow(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.autoDispose(holder), (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssSortFilterColumn)(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.domComputed(isAscending, (ascending) => cssSortIcon("Sort", cssSortIcon.cls("-accent", (use) => use(this._changedColRefs).has(column.value)), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.style("transform", ascending ? "scaleY(-1)" : "none"), testId("order"), testId(ascending ? "sort-order-asc" : "sort-order-desc"))), cssLabel(column.label), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => {
      this._saveSort(app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.flipSort(sortSpec.peek(), colRef));
    }), testId("column")), cssMenu(cssBigIconWrapper((0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssIcon)("Dots", grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.cls(cssBgAccent.className, hasSpecs)), testId("options-icon")), (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_9__.menu)((_ctl) => flags.map(({ computed, allowedTypes, flag, label }) => {
      const enabled = !allowedTypes || allowedTypes.includes(column.type);
      return (0,popweasel__WEBPACK_IMPORTED_MODULE_12__.cssMenuItem)((0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_6__.labeledLeftSquareCheckbox)(computed, label, grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.prop("disabled", !enabled)), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.cls(cssOptionMenuItem.className), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.cls("disabled", !enabled), testId("option"), testId(`option-${flag}`));
    }), menuOptions)), cssSortIconBtn("Remove", grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => {
      const specs = sortSpec.peek();
      if (app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.findCol(specs, colRef)) {
        this._saveSort(app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.removeCol(specs, colRef));
      }
    }), testId("remove")), testId("row"));
  }
  _buildAddToSortButton(columns) {
    const available = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(null, (use) => {
      const currentSection = this._section;
      const currentSortSpec = use(currentSection.activeSortSpec);
      const specRowIds = new Set(currentSortSpec.map((_sortRef) => app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.getColRef(_sortRef)));
      return use(columns).filter((_col) => !specRowIds.has(_col.value));
    });
    const { menuOptions } = this._options;
    return cssButtonRow(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.autoDispose(available), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.domComputed((use) => {
      const cols = use(available);
      return cssTextBtn(t("Add Column"), (0,app_client_ui_searchDropdown__WEBPACK_IMPORTED_MODULE_4__.dropdownWithSearch)({
        popupOptions: menuOptions,
        options: () => cols.map((col) => ({ label: col.label, value: col })),
        action: (col) => (0,app_client_lib_sortUtil__WEBPACK_IMPORTED_MODULE_3__.addToSort)(this._section.activeSortSpec, col.value, 1),
        placeholder: t("Search Columns")
      }), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", (ev) => {
        ev.stopPropagation();
      }), testId("add"));
    }), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.hide((use) => !use(available).length));
  }
  _buildUpdateDataButton() {
    return grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.maybe(this._section.isSorted, () => cssButtonRow(cssTextBtn(t("Update Data"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => (0,app_client_lib_sortUtil__WEBPACK_IMPORTED_MODULE_3__.updatePositions)(this._gristDoc, this._section)), testId("update"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.show((use) => use(use(this._section.table).supportsManualSort) && !use(this._gristDoc.isReadonly)))));
  }
  _reorder(colRef, nextColRef) {
    const activeSortSpec = this._section.activeSortSpec.peek();
    const colSpec = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.findCol(activeSortSpec, colRef);
    if (colSpec === void 0) {
      throw new Error(`Col ${colRef} not found in active sort spec`);
    }
    const newSpec = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_10__.Sort.reorderSortRefs(this._section.activeSortSpec.peek(), colSpec, nextColRef);
    this._saveSort(newSpec);
  }
  _saveSort(sortSpec) {
    this._section.activeSortSpec(sortSpec);
  }
}
const cssDragRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  display: flex !important;
  align-items: center;
  margin: 0 16px 0px 0px;
  & > .kf_draggable_content {
    margin: 4px 0;
    flex: 1 1 0px;
    min-width: 0px;
  }
`);
const cssLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  flex-grow: 1;
`);
const cssSortRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  display: flex;
  align-items: center;
  width: 100%;
`);
const cssTextBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.controlFg};
  cursor: pointer;

  &:hover {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.controlHoverFg};
  }
`);
const cssSortIconBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssIcon, `
  flex: none;
  margin: 0 6px;
  cursor: pointer;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.controlSecondaryFg};

  &:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.controlSecondaryHoverFg};
  }
`);
const cssSortIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssIcon, `
  flex: none;
  margin: 0px 6px 0px 0px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.controlSecondaryFg};

  &-accent {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.accentIcon};
  }
`);
const cssBigIconWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  padding: 3px;
  border-radius: 3px;
  cursor: pointer;
  user-select: none;
`);
const cssBgAccent = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(`div`, `
  background: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.accentIcon}
`);
const cssMenu = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  display: inline-flex;
  cursor: pointer;
  border-radius: 3px;
  border: 1px solid transparent;
  margin-left: 6px;
  &:hover, &.weasel-popup-open {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.hover};
  }
`);
const cssOptionMenuItem = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  &:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.hover};
  }
  & label {
    flex: 1;
    cursor: pointer;
  }
  &.disabled * {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.menuItemDisabledFg} important;
    cursor: not-allowed;
  }
`);
const cssButtonRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_5__.cssRow, `
  margin-top: 4px;
`);


/***/ }),

/***/ "./app/client/ui/TriggerFormulas.ts":
/*!******************************************!*\
  !*** ./app/client/ui/TriggerFormulas.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildFormulaTriggers": () => (/* binding */ buildFormulaTriggers)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui_shadowScroll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui/shadowScroll */ "./app/client/ui/shadowScroll.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/checkbox */ "./app/client/ui2018/checkbox.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_client_ui2018_select__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui2018/select */ "./app/client/ui2018/select.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! popweasel */ "./node_modules/popweasel/dist/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(popweasel__WEBPACK_IMPORTED_MODULE_14__);
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));















const isEqual = __webpack_require__(/*! lodash/isEqual */ "./node_modules/lodash/isEqual.js");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("TriggerFormulas");
function buildFormulaTriggers(owner, column, options) {
  function isApplyOnChangesChecked(recalcWhen, recalcDeps) {
    return recalcWhen === app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.MANUAL_UPDATES || recalcWhen === app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.DEFAULT && recalcDeps != null && !(0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.isEmptyList)(recalcDeps);
  }
  async function toggleApplyOnChanges(value) {
    await setRecalc(app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.DEFAULT, null);
    forceApplyOnChanges.set(value);
  }
  const applyToNew = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => use(column.recalcWhen) !== app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.NEVER).onWrite((value) => setRecalc(value ? app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.DEFAULT : app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.NEVER, null));
  const forceApplyOnChanges = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(owner, false);
  const applyOnChanges = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => use(forceApplyOnChanges) || isApplyOnChangesChecked(use(column.recalcWhen), use(column.recalcDeps))).onWrite(toggleApplyOnChanges);
  async function setRecalc(when, deps) {
    if (when !== column.recalcWhen.peek() || deps !== column.recalcDeps.peek()) {
      return column._table.sendTableAction(["UpdateRecord", column.id.peek(), { recalcWhen: when, recalcDeps: (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_12__.encodeObject)(deps) }]);
    }
  }
  const docModel = column._table.docModel;
  const summaryText = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    if (use(column.recalcWhen) === app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.MANUAL_UPDATES) {
      return t("Any field");
    }
    const deps = (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_12__.decodeObject)(use(column.recalcDeps));
    if (!deps || deps.length === 0) {
      return "";
    }
    return deps.map((dep) => {
      var _a;
      return use((_a = docModel.columns.getRowModel(dep)) == null ? void 0 : _a.label);
    }).join(", ");
  });
  const changesDisabled = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    return Boolean(options.disabled && use(options.disabled) || options.notTrigger && use(options.notTrigger));
  });
  const newRowsDisabled = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    return Boolean(use(applyOnChanges) || use(changesDisabled));
  });
  return [
    (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssRow)((0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_5__.labeledSquareCheckbox)(applyToNew, t("Apply to new records"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.boolAttr("disabled", newRowsDisabled), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.testId)("field-formula-apply-to-new"))),
    (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssRow)((0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_5__.labeledSquareCheckbox)(applyOnChanges, grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.text((use) => use(applyOnChanges) ? t("Apply on changes to:") : t("Apply on record changes")), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.boolAttr("disabled", changesDisabled), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.testId)("field-formula-apply-on-changes"))),
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe(applyOnChanges, () => cssIndentedRow((0,app_client_ui2018_select__WEBPACK_IMPORTED_MODULE_9__.cssSelectBtn)(cssSelectSummary(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.text(summaryText)), (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_7__.icon)("Dropdown"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.testId)("field-triggers-select"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("disabled", (use) => !!options.disabled && use(options.disabled)), (elem) => {
      (0,popweasel__WEBPACK_IMPORTED_MODULE_14__.setPopupToCreateDom)(elem, (ctl) => buildTriggerSelectors(ctl, column.table.peek(), column, setRecalc), __spreadProps(__spreadValues({}, popweasel__WEBPACK_IMPORTED_MODULE_14__.defaultMenuOptions), { placement: "bottom-end" }));
    })))
  ];
}
function buildTriggerSelectors(ctl, tableRec, column, setRecalc) {
  const owner = ctl;
  const initialDeps = new Set((0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_12__.decodeObject)(column.recalcDeps.peek()));
  const allUpdates = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(owner, column.recalcWhen.peek() === app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.MANUAL_UPDATES);
  const showColumns = tableRec.columns.peek().peek().filter((col) => !col.isHiddenCol.peek());
  showColumns.sort((a, b) => (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_11__.nativeCompare)(a.label.peek(), b.label.peek()));
  const columnsState = showColumns.map((col) => grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(owner, initialDeps.has(col.id.peek())));
  const current = columnsState.find((col, index) => showColumns[index].id.peek() === column.id.peek());
  owner.autoDispose(allUpdates.addListener((value) => {
    if (value) {
      columnsState.forEach((obs) => obs.set(false));
    }
  }));
  const when = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => use(allUpdates) ? app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.MANUAL_UPDATES : app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.RecalcWhen.DEFAULT);
  const deps = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    return use(allUpdates) ? null : showColumns.filter((col, index) => use(columnsState[index])).map((col) => col.id.peek());
  });
  const isChanged = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
    return use(when) !== use(column.recalcWhen) || !isEqual(new Set(use(deps)), initialDeps);
  });
  let shouldSave = true;
  function close(_shouldSave) {
    shouldSave = _shouldSave;
    ctl.close();
  }
  function onClose() {
    if (shouldSave && isChanged.get()) {
      setRecalc(when.get(), deps.get()).catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_1__.reportError);
    }
  }
  return cssSelectorMenu({ tabindex: "-1" }, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.testId)("field-triggers-dropdown"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls(app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_8__.menuCssClass), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.onDispose(onClose), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.onKeyDown({
    Enter: () => close(true),
    Escape: () => close(false)
  }), (elem) => {
    setTimeout(() => elem.focus(), 0);
  }, cssItemsFixed(cssSelectorItem((0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_5__.labeledSquareCheckbox)(current, [t("Current field "), cssSelectorNote("(data cleaning)")], grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.boolAttr("disabled", allUpdates))), (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_8__.menuDivider)(), cssSelectorItem((0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_5__.labeledSquareCheckbox)(allUpdates, [`${t("Any field")} `, cssSelectorNote("(except formulas)")]))), cssItemsList(showColumns.map((col, index) => cssSelectorItem((0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_5__.labeledSquareCheckbox)(columnsState[index], col.label.peek(), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.boolAttr("disabled", allUpdates))))), cssItemsFixed(cssSelectorFooter(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe(isChanged, () => (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__.primaryButton)(t("OK"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", () => close(true)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.testId)("trigger-deps-apply"))), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__.basicButton)(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.text((use) => use(isChanged) ? t("Cancel") : t("Close")), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", () => close(false)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.testId)("trigger-deps-cancel")))));
}
const cssIndentedRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssRow, `
  margin-left: 40px;
`);
const cssSelectSummary = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  flex: 1 1 0px;
  overflow: hidden;
  text-overflow: ellipsis;

  &:empty::before {
    content: "Select fields";
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.theme.selectButtonPlaceholderFg};
  }
`);
const cssSelectorMenu = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(popweasel__WEBPACK_IMPORTED_MODULE_14__.cssMenu, `
  display: flex;
  flex-direction: column;
  max-height: calc(max(300px, 95vh - 300px));
  max-width: 400px;
  padding-bottom: 0px;
`);
const cssItemsList = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_ui_shadowScroll__WEBPACK_IMPORTED_MODULE_3__.shadowScroll, `
  flex: auto;
  min-height: 80px;
  border-top: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.theme.menuBorder};
  border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.theme.menuBorder};
  margin-top: 8px;
  padding: 8px 0;
`);
const cssItemsFixed = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  flex: none;
`);
const cssSelectorItem = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(popweasel__WEBPACK_IMPORTED_MODULE_14__.cssMenuItem, `
  justify-content: flex-start;
  align-items: center;
  display: flex;
  padding: 8px 16px;
  white-space: nowrap;
`);
const cssSelectorNote = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("span", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.theme.lightText};
`);
const cssSelectorFooter = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(cssSelectorItem, `
  justify-content: space-between;
  margin: 3px 0;
`);


/***/ }),

/***/ "./app/client/ui/VisibleFieldsConfig.ts":
/*!**********************************************!*\
  !*** ./app/client/ui/VisibleFieldsConfig.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VisibleFieldsConfig": () => (/* binding */ VisibleFieldsConfig),
/* harmony export */   "cssDragRow": () => (/* binding */ cssDragRow),
/* harmony export */   "cssFieldEntry": () => (/* binding */ cssFieldEntry),
/* harmony export */   "cssFieldLabel": () => (/* binding */ cssFieldLabel)
/* harmony export */ });
/* harmony import */ var app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/koArray */ "./app/client/lib/koArray.js");
/* harmony import */ var app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/koForm */ "./app/client/lib/koForm.js");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_lib_tableUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/lib/tableUtil */ "./app/client/lib/tableUtil.ts");
/* harmony import */ var app_client_ui_RightPanel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui/RightPanel */ "./app/client/ui/RightPanel.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui2018/checkbox */ "./app/client/ui2018/checkbox.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_draggableList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui2018/draggableList */ "./app/client/ui2018/draggableList.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};












const difference = __webpack_require__(/*! lodash/difference */ "./node_modules/lodash/difference.js");
const isEqual = __webpack_require__(/*! lodash/isEqual */ "./node_modules/lodash/isEqual.js");
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.makeTestId)("test-vfc-");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__.makeT)("VisibleFieldsConfig");
class VisibleFieldsConfig extends grainjs__WEBPACK_IMPORTED_MODULE_11__.Disposable {
  constructor(_gristDoc, _section) {
    super();
    this._gristDoc = _gristDoc;
    this._section = _section;
    this._hiddenFields = this.autoDispose((0,app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__.syncedKoArray)(this._section.hiddenColumns));
    this._fieldLabel = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(this, (use) => {
      const widgetType = use(this._section.parentKey);
      return (0,app_client_ui_RightPanel__WEBPACK_IMPORTED_MODULE_4__.getFieldType)(widgetType).pluralLabel;
    });
    this._collapseHiddenFields = grainjs__WEBPACK_IMPORTED_MODULE_11__.Observable.create(this, false);
    this._showVisibleBatchButtons = grainjs__WEBPACK_IMPORTED_MODULE_11__.Observable.create(this, false);
    this._showHiddenBatchButtons = grainjs__WEBPACK_IMPORTED_MODULE_11__.Observable.create(this, false);
    this._visibleFieldsSelection = /* @__PURE__ */ new Set();
    this._hiddenFieldsSelection = /* @__PURE__ */ new Set();
    this.autoDispose(this._section.viewFields.peek().subscribe((ev) => {
      unselectDeletedFields(this._visibleFieldsSelection, ev);
      this._showVisibleBatchButtons.set(Boolean(this._visibleFieldsSelection.size));
    }, null, "spliceChange"));
    this.autoDispose(this._hiddenFields.subscribe((ev) => {
      unselectDeletedFields(this._hiddenFieldsSelection, ev);
      this._showHiddenBatchButtons.set(Boolean(this._hiddenFieldsSelection.size));
    }, null, "spliceChange"));
  }
  buildVisibleFieldsConfigHelper(options) {
    let fields = this._section.viewFields.peek();
    if (options.skipFirst || options.filterFunc) {
      let update = function() {
        if (freeze && freeze.get()) {
          return;
        }
        const newValues = allFields.peek().filter((_v, i) => i + 1 > skipFirst.get()).filter(filterFunc);
        if (isEqual(newArray.all(), newValues)) {
          return;
        }
        newArray.assign(newValues);
      };
      const skipFirst = options.skipFirst || grainjs__WEBPACK_IMPORTED_MODULE_11__.Observable.create(this, -1);
      const filterFunc = options.filterFunc || (() => true);
      const freeze = options.freeze;
      const allFields = this._section.viewFields.peek();
      const newArray = new app_client_lib_koArray__WEBPACK_IMPORTED_MODULE_0__.KoArray();
      update();
      this.autoDispose(allFields.subscribe(update));
      this.autoDispose((0,grainjs__WEBPACK_IMPORTED_MODULE_11__.subscribe)(skipFirst, update));
      if (options.freeze) {
        this.autoDispose((0,grainjs__WEBPACK_IMPORTED_MODULE_11__.subscribe)(options.freeze, update));
      }
      fields = newArray;
    }
    return app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_1__.draggableList(fields, options.itemCreateFunc, __spreadValues({
      itemClass: cssDragRow.className,
      reorder: this.changeFieldPosition.bind(this),
      remove: this.removeField.bind(this),
      receive: this.addField.bind(this)
    }, options.draggableOptions));
  }
  buildSectionFieldsConfigHelper(options) {
    const fieldsDraggable = this.buildVisibleFieldsConfigHelper(options.visibleFields);
    const hiddenFieldsDraggable = app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_1__.draggableList(this._hiddenFields, options.hiddenFields.itemCreateFunc, __spreadValues({
      itemClass: cssDragRow.className,
      reorder() {
        throw new Error(t("Hidden Fields cannot be reordered"));
      },
      receive() {
        throw new Error(t("Cannot drop items into Hidden Fields"));
      },
      remove(item) {
        return item;
      },
      removeButton: false
    }, options.hiddenFields.draggableOptions));
    app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_1__.connectDraggableOneWay(hiddenFieldsDraggable, fieldsDraggable);
    return [fieldsDraggable, hiddenFieldsDraggable];
  }
  buildDom() {
    const [fieldsDraggable, hiddenFieldsDraggable] = this.buildSectionFieldsConfigHelper({
      visibleFields: {
        itemCreateFunc: (field) => this._buildVisibleFieldItem(field),
        draggableOptions: {
          removeButton: false,
          drag_indicator: app_client_ui2018_draggableList__WEBPACK_IMPORTED_MODULE_8__.cssDragger
        }
      },
      hiddenFields: {
        itemCreateFunc: (field) => this._buildHiddenFieldItem(field),
        draggableOptions: {
          removeButton: false,
          drag_indicator: app_client_ui2018_draggableList__WEBPACK_IMPORTED_MODULE_8__.cssDragger
        }
      }
    });
    return [
      cssHeader(cssFieldListHeader(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.text((use) => t("Visible {{label}}", { label: use(this._fieldLabel) }))), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.maybe((use) => Boolean(use(use(this._section.viewFields).getObservable()).length), () => cssControlLabel((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__.icon)("Tick"), t("Select All"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._setVisibleCheckboxes(fieldsDraggable, true)), testId("visible-fields-select-all")))),
      grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.update(fieldsDraggable, testId("visible-fields")),
      grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.maybe(this._showVisibleBatchButtons, () => cssRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_5__.primaryButton)(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.text((use) => t("Hide {{label}}", { label: use(this._fieldLabel) })), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._removeSelectedFields()), testId("visible-hide")), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_5__.basicButton)(t("Clear"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._setVisibleCheckboxes(fieldsDraggable, false)), testId("visible-clear")), testId("visible-batch-buttons"))),
      cssHeader(cssHeaderIcon("Dropdown", grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.style("transform", (use) => use(this._collapseHiddenFields) ? "rotate(-90deg)" : ""), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.style("cursor", "pointer"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._collapseHiddenFields.set(!this._collapseHiddenFields.get())), testId("collapse-hidden")), cssFieldListHeader(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.text((use) => t("Hidden {{label}}", { label: use(this._fieldLabel) }))), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.maybe((use) => Boolean(use(this._hiddenFields.getObservable()).length && !use(this._collapseHiddenFields)), () => cssControlLabel((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__.icon)("Tick"), t("Select All"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._setHiddenCheckboxes(hiddenFieldsDraggable, true)), testId("hidden-fields-select-all")))),
      (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.dom)("div", grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.hide(this._collapseHiddenFields), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.update(hiddenFieldsDraggable, testId("hidden-fields")), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.maybe(this._showHiddenBatchButtons, () => cssRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_5__.primaryButton)(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.text((use) => t("Show {{label}}", { label: use(this._fieldLabel) })), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._addSelectedFields()), testId("hidden-show")), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_5__.basicButton)(t("Clear"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._setHiddenCheckboxes(hiddenFieldsDraggable, false)), testId("hidden-clear")), testId("hidden-batch-buttons"))))
    ];
  }
  async removeField(field) {
    const existing = this._section.viewFields.peek().peek().find((f) => f.column.peek().getRowId() === field.origCol.peek().id.peek());
    if (!existing) {
      return;
    }
    const id = existing.id.peek();
    const action = ["RemoveRecord", id];
    await this._gristDoc.docModel.viewFields.sendTableAction(action);
  }
  async addField(column, nextField = null) {
    const exists = this._section.viewFields.peek().peek().findIndex((f) => f.column.peek().getRowId() === column.id.peek());
    if (exists !== -1) {
      return;
    }
    const parentPos = getFieldNewPosition(this._section.viewFields.peek(), column, nextField);
    const colInfo = {
      parentId: this._section.id.peek(),
      colRef: column.id.peek(),
      parentPos
    };
    const action = ["AddRecord", null, colInfo];
    await this._gristDoc.docModel.viewFields.sendTableAction(action);
  }
  changeFieldPosition(field, nextField) {
    const parentPos = getFieldNewPosition(this._section.viewFields.peek(), field, nextField);
    const vsfAction = ["UpdateRecord", field.id.peek(), { parentPos }];
    return this._gristDoc.docModel.viewFields.sendTableAction(vsfAction);
  }
  _setVisibleCheckboxes(visibleFieldsDraggable, checked) {
    this._setCheckboxesHelper(visibleFieldsDraggable, this._section.viewFields.peek().peek(), this._visibleFieldsSelection, checked);
    this._showVisibleBatchButtons.set(checked);
  }
  _setHiddenCheckboxes(hiddenFieldsDraggable, checked) {
    this._setCheckboxesHelper(hiddenFieldsDraggable, this._hiddenFields.peek(), this._hiddenFieldsSelection, checked);
    this._showHiddenBatchButtons.set(checked);
  }
  _setCheckboxesHelper(draggable, fields, selection, checked) {
    findCheckboxes(draggable).forEach((el) => el.checked = checked);
    selection.clear();
    if (checked) {
      fields.forEach((field) => selection.add(field.id.peek()));
    }
  }
  _buildHiddenFieldItem(column) {
    const id = column.id.peek();
    const selection = this._hiddenFieldsSelection;
    return cssFieldEntry(cssFieldLabel(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.text(column.label)), cssHideIcon("EyeShow", grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this.addField(column)), testId("hide")), buildCheckbox(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.prop("checked", selection.has(id)), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("change", (ev, el) => {
      el.checked ? selection.add(id) : selection.delete(id);
      this._showHiddenBatchButtons.set(Boolean(selection.size));
    })));
  }
  _buildVisibleFieldItem(field) {
    const id = field.id.peek();
    const selection = this._visibleFieldsSelection;
    return cssFieldEntry(cssFieldLabel(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.text(field.label)), cssHideIcon("EyeHide", grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this.removeField(field)), testId("hide")), buildCheckbox(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.prop("checked", selection.has(id)), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("change", (ev, el) => {
      el.checked ? selection.add(id) : selection.delete(id);
      this._showVisibleBatchButtons.set(Boolean(selection.size));
    })));
  }
  async _removeSelectedFields() {
    const toRemove = Array.from(this._visibleFieldsSelection).sort(app_common_gutil__WEBPACK_IMPORTED_MODULE_10__.nativeCompare);
    const action = ["BulkRemoveRecord", toRemove];
    await this._gristDoc.docModel.viewFields.sendTableAction(action);
  }
  async _addSelectedFields() {
    const toAdd = Array.from(this._hiddenFieldsSelection);
    const rowIds = app_common_gutil__WEBPACK_IMPORTED_MODULE_10__.arrayRepeat(toAdd.length, null);
    const colInfo = {
      parentId: app_common_gutil__WEBPACK_IMPORTED_MODULE_10__.arrayRepeat(toAdd.length, this._section.id.peek()),
      colRef: toAdd
    };
    const action = ["BulkAddRecord", rowIds, colInfo];
    await this._gristDoc.docModel.viewFields.sendTableAction(action);
  }
}
function getFieldNewPosition(fields, item, nextField) {
  const index = getItemIndex(fields, nextField);
  return app_client_lib_tableUtil__WEBPACK_IMPORTED_MODULE_3__.fieldInsertPositions(fields, index, 1)[0];
}
function getItemIndex(collection, item) {
  if (item !== null) {
    return collection.peek().indexOf(item);
  }
  return collection.peek().length;
}
function buildCheckbox(...args) {
  return app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_6__.cssLabel({ style: "flex-shrink: 0;" }, app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_6__.cssCheckboxSquare({ type: "checkbox" }, ...args));
}
function findCheckboxes(draggableElement) {
  return draggableElement.querySelectorAll("input");
}
function unselectDeletedFields(selection, event) {
  const removed = difference(event.deleted, event.array);
  for (const field of removed) {
    selection.delete(field.id.peek());
  }
}
const cssDragRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  display: flex !important;
  align-items: center;
  margin: 0 16px 0px 0px;
  & > .kf_draggable_content {
    margin: 2px 0;
    flex: 1 1 0px;
    min-width: 0px;
  }
`);
const cssFieldEntry = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  display: flex;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.hover};
  width: 100%;
  border-radius: 2px;
  margin: 0 8px 0 0;
  padding: 4px 8px;
  cursor: default;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.lightText};
`);
const cssHideIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__.icon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.lightText};
  display: none;
  cursor: pointer;
  flex: none;
  margin-right: 8px;
  .kf_draggable:hover & {
    display: block;
  }
`);
const cssFieldLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("span", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.text};
  flex: 1 1 auto;
  text-overflow: ellipsis;
  overflow: hidden;
`);
const cssFieldListHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("span", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.text};
  flex: 1 1 0px;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.vars.xsmallFontSize};
  text-transform: uppercase;
`);
const cssRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  display: flex;
  margin: 16px;
  overflow: hidden;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.lightText};
  & > .${app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_5__.cssButton.className} {
    margin-right: 8px;
  }
`);
const cssControlLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.controlFg};
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.controlFg};
  cursor: pointer;
`);
const cssHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(cssRow, `
  align-items: center;
  justify-content: space-between;
  margin-bottom: 12px;
`);
const cssHeaderIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_9__.icon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.lightText};
  flex: none;
  margin-right: 4px;
`);


/***/ }),

/***/ "./app/client/ui/forms.ts":
/*!********************************!*\
  !*** ./app/client/ui/forms.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "autoGrow": () => (/* binding */ autoGrow),
/* harmony export */   "checkboxItem": () => (/* binding */ checkboxItem),
/* harmony export */   "checkboxOther": () => (/* binding */ checkboxOther),
/* harmony export */   "form": () => (/* binding */ form),
/* harmony export */   "hasValue": () => (/* binding */ hasValue),
/* harmony export */   "isFormFilled": () => (/* binding */ isFormFilled),
/* harmony export */   "question": () => (/* binding */ cssQuestion),
/* harmony export */   "text": () => (/* binding */ cssText),
/* harmony export */   "textBox": () => (/* binding */ textBox)
/* harmony export */ });
/* harmony import */ var app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/ui2018/checkbox */ "./app/client/ui2018/checkbox.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");



function checkboxItem(checkboxArgs, ...labelArgs) {
  return cssCheckboxLabel(cssCheckbox({ type: "checkbox" }, ...checkboxArgs), ...labelArgs);
}
function checkboxOther(checkboxArgs, ...textboxArgs) {
  let checkbox;
  return cssCheckboxLabel(checkbox = cssCheckbox({ type: "checkbox" }, ...checkboxArgs), cssTextBox(...textboxArgs, grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.on("input", (e, elem) => {
    checkbox.checked = Boolean(elem.value);
  })));
}
function isFormFilled(formElem, names) {
  const formData = new FormData(formElem);
  return names.every((name) => hasValue(formData, name));
}
function hasValue(formData, nameOrPrefix) {
  if (nameOrPrefix.endsWith("*")) {
    const prefix = nameOrPrefix.slice(0, -1);
    return [...formData.keys()].filter((k) => k.startsWith(prefix)).some((k) => formData.get(k));
  } else {
    return Boolean(formData.get(nameOrPrefix));
  }
}
function resize(el) {
  el.style.height = "5px";
  const border = getComputedStyle(el, null).borderTopWidth || "0";
  el.style.height = `calc(${el.scrollHeight}px + 2 * ${border})`;
}
function autoGrow(text) {
  return (el) => {
    el.addEventListener("input", () => resize(el));
    grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.autoDisposeElem(el, text.addListener(() => resize(el)));
    setTimeout(() => resize(el), 10);
    grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.autoDisposeElem(el, text.addListener((val) => {
      if (!val) {
        el.style.height = "5px";
      }
    }));
  };
}
const cssForm = (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.styled)("form", `
  margin-bottom: 32px;
  font-size: 14px;
  &:focus {
    outline: none;
  }
  & input:focus, & button:focus {
    outline: none;
    box-shadow: 0 0 1px 2px lightblue;
  }
`);
const cssQuestion = (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.styled)("div", `
  margin: 32px 0;
  padding-left: 24px;
  & > :first-child {
    margin-left: -24px;
  }
`);
const cssText = (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.styled)("div", `
  margin: 16px 0;
  font-size: 15px;
`);
const cssCheckboxLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.styled)(app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_0__.cssLabel, `
  font-size: 14px;
  font-weight: normal;
  display: flex;
  align-items: center;
  margin: 12px 0;
  user-select: unset;
`);
const cssCheckbox = (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.styled)(app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_0__.cssCheckboxSquare, `
  position: relative;
  margin-right: 12px !important;
  border-radius: var(--radius);
`);
const cssTextBox = (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.styled)("input", `
  flex: auto;
  width: 100%;
  font-size: inherit;
  padding: 4px 8px;
  border: 1px solid #D9D9D9;
  border-radius: 3px;

  &-invalid {
    color: red;
  }
`);
const form = cssForm.bind(null, { tabIndex: "-1" });
const textBox = cssTextBox.bind(null, { type: "text" });


/***/ }),

/***/ "./app/client/ui/sanitizeHTML.ts":
/*!***************************************!*\
  !*** ./app/client/ui/sanitizeHTML.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sanitizeHTML": () => (/* binding */ sanitizeHTML)
/* harmony export */ });
/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ "./node_modules/dompurify/dist/purify.js");
/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_0__);

const config = {
  ADD_TAGS: ["iframe"],
  ADD_ATTR: ["allowFullscreen"]
};
dompurify__WEBPACK_IMPORTED_MODULE_0___default().addHook("uponSanitizeAttribute", (node) => {
  if (!("target" in node)) {
    return;
  }
  node.setAttribute("target", "_blank");
});
dompurify__WEBPACK_IMPORTED_MODULE_0___default().addHook("uponSanitizeElement", (node, data) => {
  var _a;
  if (data.tagName !== "iframe") {
    return;
  }
  const src = node.getAttribute("src");
  if (src == null ? void 0 : src.startsWith("https://www.youtube.com/embed/")) {
    return;
  }
  return (_a = node.parentNode) == null ? void 0 : _a.removeChild(node);
});
function sanitizeHTML(source) {
  return dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(source, config);
}


/***/ }),

/***/ "./app/client/ui/searchDropdown.ts":
/*!*****************************************!*\
  !*** ./app/client/ui/searchDropdown.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OptionItem": () => (/* binding */ OptionItem),
/* harmony export */   "dropdownWithSearch": () => (/* binding */ dropdownWithSearch)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/ACIndex */ "./app/client/lib/ACIndex.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! popweasel */ "./node_modules/popweasel/dist/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(popweasel__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _lib_simpleList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../lib/simpleList */ "./app/client/lib/simpleList.ts");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");









const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_8__.makeT)("searchDropdown");
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.makeTestId)("test-sd-");
class OptionItem {
  constructor(label, value, disabled) {
    this.label = label;
    this.value = value;
    this.disabled = disabled;
    this.cleanText = (0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_2__.normalizeText)(this.label);
  }
}
function dropdownWithSearch(options) {
  return (elem) => {
    const popupOptions = (0,lodash__WEBPACK_IMPORTED_MODULE_6__.mergeWith)({}, popweasel__WEBPACK_IMPORTED_MODULE_5__.defaultMenuOptions, options.popupOptions, (_objValue, srcValue) => Array.isArray(srcValue) ? srcValue : void 0);
    (0,popweasel__WEBPACK_IMPORTED_MODULE_5__.setPopupToFunc)(elem, (ctl) => DropdownWithSearch.create(null, ctl, options), popupOptions);
  };
}
class DropdownWithSearch extends grainjs__WEBPACK_IMPORTED_MODULE_0__.Disposable {
  constructor(_ctl, _options) {
    super();
    this._ctl = _ctl;
    this._options = _options;
    const acItems = _options.options().map(_lib_simpleList__WEBPACK_IMPORTED_MODULE_7__.getOptionFull).map((o) => new OptionItem(o.label, o.value, o.disabled));
    this._acIndex = new app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_2__.ACIndexImpl(acItems);
    this._items = grainjs__WEBPACK_IMPORTED_MODULE_0__.Observable.create(this, acItems);
    this._highlightFunc = () => [];
    this._simpleList = this._buildSimpleList();
    this._simpleList.listenKeys(this._inputElem);
    this._update();
    setTimeout(() => this._inputElem.focus(), 1);
  }
  get content() {
    return this._simpleList.content;
  }
  _buildSimpleList() {
    const action = this._action.bind(this);
    const headerDom = this._buildHeader.bind(this);
    const renderItem = this._buildItem.bind(this);
    return _lib_simpleList__WEBPACK_IMPORTED_MODULE_7__.SimpleList.create(this, this._ctl, this._items, action, { headerDom, renderItem });
  }
  _buildHeader() {
    return [
      cssMenuHeader(cssSearchIcon("Search"), this._inputElem = cssSearch({ placeholder: this._options.placeholder || t("Search") }, grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("input", () => {
        this._update();
      }), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("blur", () => setTimeout(() => this._inputElem.focus(), 0))), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", (ev) => ev.stopPropagation()), testId("search")),
      cssMenuDivider()
    ];
  }
  _buildItem(item) {
    return [
      (0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_2__.buildHighlightedDom)(item.label, this._highlightFunc, cssMatchText),
      testId("searchable-list-item")
    ];
  }
  _update() {
    var _a;
    const acResults = this._acIndex.search(((_a = this._inputElem) == null ? void 0 : _a.value) || "");
    this._highlightFunc = acResults.highlightFunc;
    this._items.set(acResults.items);
    this._simpleList.setSelected(acResults.selectIndex);
  }
  _action(value) {
    if (value) {
      this._options.action(value);
    }
    this._ctl.close();
  }
}
const cssMatchText = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("span", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.autocompleteMatchText};
  .${popweasel__WEBPACK_IMPORTED_MODULE_5__.cssMenuItem.className}-sel > & {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.autocompleteSelectedMatchText};
  }
`);
const cssMenuHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  display: flex;
  padding: 13px 17px 15px 17px;
`);
const cssSearchIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.lightText};
  flex-shrink: 0;
  margin-left: auto;
  margin-right: 4px;
`);
const cssSearch = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("input", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.inputFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.inputBg};
  flex-grow: 1;
  min-width: 1px;
  -webkit-appearance: none;
  -moz-appearance: none;

  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.vars.mediumFontSize};

  margin: 0px 16px 0px 8px;
  padding: 0px;
  border: none;
  outline: none;

  &::placeholder {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.theme.inputPlaceholderFg};
  }
`);
const cssMenuDivider = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)(app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_3__.menuDivider, `
  flex-shrink: 0;
  margin: 0;
`);


/***/ }),

/***/ "./app/client/ui/selectBy.ts":
/*!***********************************!*\
  !*** ./app/client/ui/selectBy.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LinkConfig": () => (/* binding */ LinkConfig),
/* harmony export */   "NoLink": () => (/* binding */ NoLink),
/* harmony export */   "linkFromId": () => (/* binding */ linkFromId),
/* harmony export */   "linkId": () => (/* binding */ linkId),
/* harmony export */   "selectBy": () => (/* binding */ selectBy)
/* harmony export */ });
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! assert */ "./node_modules/assert/assert.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));



const isEqual = __webpack_require__(/*! lodash/isEqual */ "./node_modules/lodash/isEqual.js");
const BLACK_CIRCLE = "\u2022";
const RIGHT_ARROW = "\u2192";
const NoLink = linkId({
  srcSectionRef: 0,
  srcColRef: 0,
  targetColRef: 0
});
const NoLinkOption = {
  label: "Select Widget",
  value: NoLink
};
function isSummaryGroup(node) {
  var _a;
  return node.isSummary && ((_a = node.column) == null ? void 0 : _a.colId.peek()) === "group";
}
function isValidLink(source, target) {
  if (source.section.getRowId() === target.section.getRowId()) {
    return false;
  }
  if (source.tableId !== target.tableId) {
    return false;
  }
  if (isSummaryGroup(source) && (!target.column || isSummaryGroup(target)) || isSummaryGroup(target)) {
    return false;
  }
  if (source.isSummary && !source.column && target.column || target.isSummary && !target.column && source.column) {
    return false;
  }
  if (!source.column && !target.column && target.isSummary && !(source.isSummary && app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.isSubset(source.groupbyColumns, target.groupbyColumns))) {
    return false;
  }
  if (source.widgetType === "chart") {
    return false;
  }
  if (source.widgetType === "custom") {
    if (source.tableId !== source.section.table.peek().primaryTableId.peek()) {
      return false;
    }
    if (!source.section.allowSelectBy()) {
      return false;
    }
  }
  if (source.ancestors.has(target.section.getRowId())) {
    return false;
  }
  return true;
}
function selectBy(docModel, sources, target) {
  const sourceNodes = createNodes(docModel, sources);
  const targetNodes = createNodes(docModel, [target]);
  const options = [NoLinkOption];
  for (const srcNode of sourceNodes) {
    const validTargets = targetNodes.filter((tgt) => isValidLink(srcNode, tgt));
    const hasMany = validTargets.length > 1;
    for (const tgtNode of validTargets) {
      const value = linkId({
        srcSectionRef: srcNode.section.getRowId(),
        srcColRef: srcNode.column ? srcNode.column.getRowId() : 0,
        targetColRef: tgtNode.column ? tgtNode.column.getRowId() : 0
      });
      let label = srcNode.section.titleDef();
      if (srcNode.column && !isSummaryGroup(srcNode)) {
        label += ` ${BLACK_CIRCLE} ${srcNode.column.label.peek()}`;
      }
      if (tgtNode.column && !isSummaryGroup(tgtNode) && (hasMany || isSummaryGroup(srcNode))) {
        label += ` ${RIGHT_ARROW} ${tgtNode.column.label.peek()}`;
      }
      options.push({ label, value });
    }
  }
  return options;
}
function isViewSectionRec(section) {
  return Boolean(section.getRowId);
}
function createNodes(docModel, sections) {
  const nodes = [];
  for (const section of sections) {
    if (isViewSectionRec(section)) {
      nodes.push(...fromViewSectionRec(section));
    } else {
      nodes.push(...fromPageWidget(docModel, section));
    }
  }
  return nodes;
}
function fromViewSectionRec(section) {
  if (section.isDisposed()) {
    return [];
  }
  const table = section.table.peek();
  const ancestors = /* @__PURE__ */ new Set();
  for (let sec = section; sec.getRowId(); sec = sec.linkSrcSection.peek()) {
    if (ancestors.has(sec.getRowId())) {
      console.warn(`Links should not create a cycle - section ids: ${Array.from(ancestors)}`);
      break;
    }
    ancestors.add(sec.getRowId());
  }
  const isSummary = table.primaryTableId.peek() !== table.tableId.peek();
  const mainNode = {
    tableId: table.primaryTableId.peek(),
    isSummary,
    groupbyColumns: isSummary ? table.summarySourceColRefs.peek() : void 0,
    widgetType: section.parentKey.peek(),
    ancestors,
    section
  };
  return fromColumns(table, mainNode);
}
function fromPageWidget(docModel, pageWidget) {
  if (typeof pageWidget.table !== "number") {
    return [];
  }
  let table = docModel.tables.getRowModel(pageWidget.table);
  const isSummary = pageWidget.summarize;
  const groupbyColumns = isSummary ? new Set(pageWidget.columns) : void 0;
  let tableExists = true;
  if (isSummary) {
    const summaryTable = docModel.tables.rowModels.find((t) => (t == null ? void 0 : t.summarySourceTable.peek()) && isEqual(t.summarySourceColRefs.peek(), groupbyColumns));
    if (summaryTable) {
      table = summaryTable;
    } else {
      tableExists = false;
    }
  }
  const mainNode = {
    tableId: table.primaryTableId.peek(),
    isSummary,
    groupbyColumns,
    widgetType: pageWidget.type,
    ancestors: /* @__PURE__ */ new Set(),
    section: docModel.viewSections.getRowModel(pageWidget.section)
  };
  return fromColumns(table, mainNode, tableExists);
}
function fromColumns(table, mainNode, tableExists = true) {
  const nodes = [mainNode];
  const columns = table.columns.peek().peek();
  for (const column of columns) {
    if (!tableExists && !mainNode.groupbyColumns.has(column.getRowId())) {
      continue;
    }
    const tableId = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.getReferencedTableId)(column.type.peek());
    if (tableId) {
      nodes.push(__spreadProps(__spreadValues({}, mainNode), { tableId, column }));
    }
  }
  return nodes;
}
function linkId(link) {
  return JSON.stringify([link.srcSectionRef, link.srcColRef, link.targetColRef]);
}
function linkFromId(linkid) {
  const [srcSectionRef, srcColRef, targetColRef] = JSON.parse(linkid);
  return { srcSectionRef, srcColRef, targetColRef };
}
class LinkConfig {
  constructor(tgtSection) {
    this.tgtCol = tgtSection.linkTargetCol();
    this.srcCol = tgtSection.linkSrcCol();
    this.srcSection = tgtSection.linkSrcSection();
    this.tgtSection = tgtSection;
    this.srcColId = this.srcCol.colId();
    this.tgtColId = this.tgtCol.colId();
    this._assertValid();
  }
  _assertValid() {
    var _a, _b, _c, _d;
    const srcCol = ((_a = this.srcCol) == null ? void 0 : _a.getRowId()) ? this.srcCol : null;
    const tgtCol = ((_b = this.tgtCol) == null ? void 0 : _b.getRowId()) ? this.tgtCol : null;
    const srcTableId = srcCol ? (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.getReferencedTableId)(srcCol.type()) : this.srcSection.table().primaryTableId();
    const tgtTableId = tgtCol ? (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.getReferencedTableId)(tgtCol.type()) : this.tgtSection.table().primaryTableId();
    const srcTableSummarySourceTable = this.srcSection.table().summarySourceTable();
    const tgtTableSummarySourceTable = this.tgtSection.table().summarySourceTable();
    try {
      assert__WEBPACK_IMPORTED_MODULE_1___default()(Boolean(this.srcSection.getRowId()), "srcSection was disposed");
      assert__WEBPACK_IMPORTED_MODULE_1___default()(!tgtCol || tgtCol.parentId() === this.tgtSection.tableRef(), "tgtCol belongs to wrong table");
      assert__WEBPACK_IMPORTED_MODULE_1___default()(!srcCol || srcCol.parentId() === this.srcSection.tableRef(), "srcCol belongs to wrong table");
      assert__WEBPACK_IMPORTED_MODULE_1___default()(this.srcSection.getRowId() !== this.tgtSection.getRowId(), "srcSection links to itself");
      if (!(srcTableSummarySourceTable !== 0 && srcTableSummarySourceTable === tgtTableSummarySourceTable)) {
        assert__WEBPACK_IMPORTED_MODULE_1___default()(tgtTableId, "tgtCol not a valid reference");
        assert__WEBPACK_IMPORTED_MODULE_1___default()(srcTableId, "srcCol not a valid reference");
      }
      assert__WEBPACK_IMPORTED_MODULE_1___default()(srcTableId === tgtTableId, "mismatched tableIds");
    } catch (e) {
      throw new Error(`LinkConfig invalid: ${this.srcSection.getRowId()}:${(_c = this.srcCol) == null ? void 0 : _c.getRowId()}[${srcTableId}] -> ${this.tgtSection.getRowId()}:${(_d = this.tgtCol) == null ? void 0 : _d.getRowId()}[${tgtTableId}]: ${e}`);
    }
  }
}


/***/ }),

/***/ "./app/client/ui/widgetTypesMap.ts":
/*!*****************************************!*\
  !*** ./app/client/ui/widgetTypesMap.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getWidgetTypes": () => (/* binding */ getWidgetTypes),
/* harmony export */   "widgetTypesMap": () => (/* binding */ widgetTypesMap)
/* harmony export */ });
const widgetTypesMap = /* @__PURE__ */ new Map([
  ["record", { label: "Table", icon: "TypeTable" }],
  ["single", { label: "Card", icon: "TypeCard" }],
  ["detail", { label: "Card List", icon: "TypeCardList" }],
  ["chart", { label: "Chart", icon: "TypeChart" }],
  ["custom", { label: "Custom", icon: "TypeCustom" }],
  ["custom.calendar", { label: "Calendar", icon: "FieldDate" }]
]);
function getWidgetTypes(sectionType) {
  return widgetTypesMap.get(sectionType || "record") || widgetTypesMap.get("record");
}


/***/ }),

/***/ "./app/client/ui2018/ColorPalette.ts":
/*!*******************************************!*\
  !*** ./app/client/ui2018/ColorPalette.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isLight": () => (/* binding */ isLight),
/* harmony export */   "swatches": () => (/* binding */ swatches)
/* harmony export */ });
const swatches = [
  "#FFFFFF",
  "#DCDCDC",
  "#888888",
  "#000000",
  "#FECBCC",
  "#FD8182",
  "#E00A17",
  "#740206",
  "#F3E1D2",
  "#D6A77F",
  "#AA632B",
  "#653008",
  "#FEE7C3",
  "#FECC81",
  "#FD9D28",
  "#B36F19",
  "#FFFACD",
  "#FEF47A",
  "#E8D62F",
  "#928619",
  "#E1FEDE",
  "#98FD90",
  "#2AE028",
  "#126E0E",
  "#CCFEFE",
  "#8AFCFE",
  "#24D6DB",
  "#0C686A",
  "#D3E7FE",
  "#75B5FC",
  "#157AFB",
  "#084794",
  "#E8D0FE",
  "#BC77FC",
  "#8725FB",
  "#460D81",
  "#FED6FB",
  "#FD79F4",
  "#E621D7",
  "#760C6E"
];
function isLight(index) {
  return index % 4 <= 1;
}


/***/ }),

/***/ "./app/client/ui2018/ColorSelect.ts":
/*!******************************************!*\
  !*** ./app/client/ui2018/ColorSelect.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ColorOption": () => (/* binding */ ColorOption),
/* harmony export */   "colorButton": () => (/* binding */ colorButton),
/* harmony export */   "colorSelect": () => (/* binding */ colorSelect)
/* harmony export */ });
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_ColorPalette__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/ColorPalette */ "./app/client/ui2018/ColorPalette.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/editableLabel */ "./app/client/ui2018/editableLabel.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_select__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/select */ "./app/client/ui2018/select.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! popweasel */ "./node_modules/popweasel/dist/index.js");
/* harmony import */ var popweasel__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(popweasel__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};










const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_9__.makeT)("ColorSelect");
class ColorOption {
  constructor(options) {
    this.allowsNone = false;
    this.defaultColor = "";
    this.noneText = "";
    Object.assign(this, options);
  }
}
function colorSelect(styleOptions, options) {
  const {
    textColor,
    fillColor
  } = styleOptions;
  const {
    onSave,
    onOpen,
    onRevert,
    placeholder = t("Default cell style")
  } = options;
  const selectBtn = (0,app_client_ui2018_select__WEBPACK_IMPORTED_MODULE_5__.cssSelectBtn)(cssContent(cssButtonIcon("T", grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("color", (use) => use(textColor.color) || textColor.defaultColor), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("background-color", (use) => {
    var _a;
    return ((_a = use(fillColor.color)) == null ? void 0 : _a.slice(0, 7)) || fillColor.defaultColor;
  }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-bold", (use) => {
    var _a;
    return (_a = use(styleOptions.fontBold)) != null ? _a : false;
  }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-italic", (use) => {
    var _a;
    return (_a = use(styleOptions.fontItalic)) != null ? _a : false;
  }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-underline", (use) => {
    var _a;
    return (_a = use(styleOptions.fontUnderline)) != null ? _a : false;
  }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-strikethrough", (use) => {
    var _a;
    return (_a = use(styleOptions.fontStrikethrough)) != null ? _a : false;
  }), cssLightBorder.cls(""), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("btn-icon")), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.text(placeholder)), (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon)("Dropdown"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("color-select"));
  const domCreator = (ctl) => {
    onOpen == null ? void 0 : onOpen();
    return buildColorPicker(ctl, { styleOptions, onSave, onRevert });
  };
  (0,popweasel__WEBPACK_IMPORTED_MODULE_8__.setPopupToCreateDom)(selectBtn, domCreator, __spreadProps(__spreadValues({}, popweasel__WEBPACK_IMPORTED_MODULE_8__.defaultMenuOptions), { placement: "bottom-end" }));
  return selectBtn;
}
function colorButton(options) {
  const _a = options, { colorPickerDomArgs } = _a, colorPickerOptions = __objRest(_a, ["colorPickerDomArgs"]);
  const { styleOptions } = colorPickerOptions;
  const { textColor, fillColor } = styleOptions;
  const iconBtn = cssIconBtn("T", grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("color", (use) => use(textColor.color) || textColor.defaultColor), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("background-color", (use) => {
    var _a2;
    return ((_a2 = use(fillColor.color)) == null ? void 0 : _a2.slice(0, 7)) || fillColor.defaultColor;
  }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-bold", (use) => {
    var _a2;
    return (_a2 = use(styleOptions.fontBold)) != null ? _a2 : false;
  }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-italic", (use) => {
    var _a2;
    return (_a2 = use(styleOptions.fontItalic)) != null ? _a2 : false;
  }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-underline", (use) => {
    var _a2;
    return (_a2 = use(styleOptions.fontUnderline)) != null ? _a2 : false;
  }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-strikethrough", (use) => {
    var _a2;
    return (_a2 = use(styleOptions.fontStrikethrough)) != null ? _a2 : false;
  }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("color-button"));
  const domCreator = (ctl) => buildColorPicker(ctl, colorPickerOptions, colorPickerDomArgs);
  (0,popweasel__WEBPACK_IMPORTED_MODULE_8__.setPopupToCreateDom)(iconBtn, domCreator, __spreadProps(__spreadValues({}, popweasel__WEBPACK_IMPORTED_MODULE_8__.defaultMenuOptions), { placement: "bottom-end" }));
  return iconBtn;
}
function buildColorPicker(ctl, options, ...domArgs) {
  const { styleOptions, onSave, onRevert, onClose } = options;
  const {
    textColor,
    fillColor,
    fontBold,
    fontUnderline,
    fontItalic,
    fontStrikethrough
  } = styleOptions;
  const textColorModel = ColorModel.create(null, textColor.color);
  const fillColorModel = ColorModel.create(null, fillColor.color);
  const fontBoldModel = BooleanModel.create(null, fontBold);
  const fontUnderlineModel = BooleanModel.create(null, fontUnderline);
  const fontItalicModel = BooleanModel.create(null, fontItalic);
  const fontStrikethroughModel = BooleanModel.create(null, fontStrikethrough);
  const models = [
    textColorModel,
    fillColorModel,
    fontBoldModel,
    fontUnderlineModel,
    fontItalicModel,
    fontStrikethroughModel
  ];
  const notChanged = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(null, (use) => models.every((m) => use(m.needsSaving) === false));
  function revert() {
    onRevert == null ? void 0 : onRevert();
    if (!onRevert) {
      models.forEach((m) => m.revert());
    }
    ctl.close();
  }
  ctl.onDispose(async () => {
    if (!notChanged.get()) {
      try {
        await onSave();
      } catch (e) {
        onRevert == null ? void 0 : onRevert();
        if (!onRevert) {
          models.forEach((m) => m.revert());
        }
      }
    }
    models.forEach((m) => m.dispose());
    notChanged.dispose();
    onClose == null ? void 0 : onClose();
  });
  return cssContainer(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.create(FontComponent, {
    fontBoldModel,
    fontUnderlineModel,
    fontItalicModel,
    fontStrikethroughModel
  }), cssVSpacer(), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.create(PickerComponent, textColorModel, __spreadValues({
    title: "text"
  }, textColor)), cssVSpacer(), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.create(PickerComponent, fillColorModel, __spreadValues({
    title: "fill"
  }, fillColor)), (elem) => {
    setTimeout(() => elem.focus(), 0);
  }, (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.onKeyDown)({
    Escape: () => {
      revert();
    },
    Enter: () => {
      ctl.close();
    }
  }), cssButtonRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_0__.primaryButton)(t("Apply"), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => ctl.close()), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.boolAttr("disabled", notChanged), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("colors-save")), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_0__.basicButton)(t("Cancel"), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => revert()), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("colors-cancel"))), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("focusout", (ev, elem) => ev.target !== elem && elem.focus()), ...domArgs);
}
class PickerModel extends grainjs__WEBPACK_IMPORTED_MODULE_7__.Disposable {
  constructor(obs) {
    super();
    this.obs = obs;
    this._localChange = false;
    this._serverValue = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(this, this.obs.get());
    this.needsSaving = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(this, (use) => {
      const current = use(this.obs);
      const server = use(this._serverValue);
      return current !== (typeof current === "boolean" ? server != null ? server : false : server);
    });
    this.autoDispose(this.obs.addListener((val) => {
      if (this._localChange) {
        return;
      }
      this._serverValue.set(val);
    }));
  }
  setValue(val) {
    this._localChange = true;
    this.obs.set(val);
    this._localChange = false;
  }
  revert() {
    this.obs.set(this._serverValue.get());
  }
}
class ColorModel extends PickerModel {
}
class BooleanModel extends PickerModel {
}
class PickerComponent extends grainjs__WEBPACK_IMPORTED_MODULE_7__.Disposable {
  constructor(_model, _options) {
    super();
    this._model = _model;
    this._options = _options;
    this._color = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(this, this._model.obs, (use, val) => (val || this._options.defaultColor).toUpperCase().slice(0, 7));
  }
  buildDom() {
    const title = this._options.title;
    const colorText = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(null, (use) => use(this._color) || this._options.noneText);
    return [
      cssHeaderRow(title),
      cssControlRow(cssColorPreview(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.update(cssColorSquare(cssLightBorder.cls(""), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("background-color", this._color), cssNoneIcon("Empty", grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.hide((use) => Boolean(use(this._color)) === true))), cssColorInput({ type: "color" }, grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.attr("value", this._color), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("input", (ev, elem) => this._setValue(elem.value || void 0)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)(`${title}-input`))), cssHexBox(colorText, async (val) => {
        if (!val || (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_6__.isValidHex)(val)) {
          this._model.setValue(val || void 0);
        }
      }, grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(colorText), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)(`${title}-hex`), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", (ev, elem) => setTimeout(() => elem.select(), 0)))), cssEmptyBox(cssEmptyBox.cls("-selected", (use) => !use(this._color)), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => this._setValue(void 0)), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.hide(!this._options.allowsNone), cssNoneIcon("Empty"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)(`${title}-empty`))),
      cssPalette(app_client_ui2018_ColorPalette__WEBPACK_IMPORTED_MODULE_1__.swatches.map((color, index) => cssColorSquare(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("background-color", color), cssLightBorder.cls("", (0,app_client_ui2018_ColorPalette__WEBPACK_IMPORTED_MODULE_1__.isLight)(index)), cssColorSquare.cls("-selected", (use) => use(this._color) === color), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("outline-color", (0,app_client_ui2018_ColorPalette__WEBPACK_IMPORTED_MODULE_1__.isLight)(index) ? "" : color), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => this._setValue(color)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)(`color-${color}`))), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)(`${title}-palette`))
    ];
  }
  _setValue(val) {
    this._model.setValue(val);
  }
}
class FontComponent extends grainjs__WEBPACK_IMPORTED_MODULE_7__.Disposable {
  constructor(_options) {
    super();
    this._options = _options;
  }
  buildDom() {
    function option(iconName, model) {
      return cssFontOption(cssFontIcon(iconName), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => model.setValue(!model.obs.get())), cssFontOption.cls("-selected", (use) => {
        var _a;
        return (_a = use(model.obs)) != null ? _a : false;
      }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)(`font-option-${iconName}`));
    }
    return cssFontOptions(option("FontBold", this._options.fontBoldModel), option("FontUnderline", this._options.fontUnderlineModel), option("FontItalic", this._options.fontItalicModel), option("FontStrikethrough", this._options.fontStrikethroughModel));
  }
}
const cssFontOptions = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: flex;
  gap: 1px;
  background: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectFontOptionsBorder};
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectFontOptionsBorder};
`);
const cssFontOption = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: grid;
  place-items: center;
  flex-grow: 1;
  background: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectFontOptionBg};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectFontOptionFg};
  height: 24px;
  cursor: pointer;
  &:hover:not(&-selected) {
    background: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectFontOptionBgHover};
  }
  &-selected {
    background: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectFontOptionBgSelected};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectFontOptionFgSelected}
  }
`);
const cssColorInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("input", `
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  border: none;
`);
const cssColorPreview = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: flex;
`);
const cssControlRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: flex;
  justify-content: space-between;
  margin-bottom: 8px;
`);
const cssHeaderRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectFg};
  text-transform: uppercase;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.vars.smallFontSize};
  margin-bottom: 12px;
`);
const cssPalette = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  width: 236px;
  height: calc(4 * 20px + 3 * 4px);
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: space-between;
  align-content: space-between;
`);
const cssVSpacer = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  height: 24px;
`);
const cssContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  padding: 18px 16px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectBg};
  box-shadow: 0 2px 16px 0 ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectShadow};
  z-index: 20;
  margin: 2px 0;
  &:focus {
    outline: none;
  }
`);
const cssContent = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: flex;
  align-items: center;
`);
const cssHexBox = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_3__.textInput, `
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectInputBorder};
  border-left: none;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.vars.smallFontSize};
  display: flex;
  align-items: center;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectInputFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectInputBg};
  width: 56px;
  outline: none;
  padding: 0 3px;
  height: unset;
  border-radius: unset;
`);
const cssLightBorder = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectColorSquareBorder};
`);
const cssColorSquare = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  width: 20px;
  height: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  &-selected {
    outline: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectColorSquareBorder};
    outline-offset: 1px;
  }
`);
const cssEmptyBox = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(cssColorSquare, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.iconError};
  border: 1px solid #D9D9D9;
  &-selected {
    outline: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.colorSelectColorSquareBorderEmpty};
    outline-offset: 1px;
  }
`);
const cssFontIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon, `
  height: 12px;
  width: 12px;
`);
const cssNoneIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon, `
  height: 100%;
  width: 100%;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.theme.iconError}
`);
const cssButtonIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(cssColorSquare, `
  margin-right: 6px;
  margin-left: 4px;
`);
const cssIconBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(cssColorSquare, `
  min-width: 18px;
  width: 18px;
  height: 18px;
  cursor: pointer;
  display: grid;
  place-items: center;
`);
const cssButtonRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  gap: 8px;
  display: flex;
  margin-top: 24px;
`);


/***/ }),

/***/ "./app/client/ui2018/buttonSelect.ts":
/*!*******************************************!*\
  !*** ./app/client/ui2018/buttonSelect.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "alignmentSelect": () => (/* binding */ alignmentSelect),
/* harmony export */   "buttonSelect": () => (/* binding */ buttonSelect),
/* harmony export */   "buttonToggleSelect": () => (/* binding */ buttonToggleSelect),
/* harmony export */   "colorSelect": () => (/* binding */ colorSelect),
/* harmony export */   "cssButtonSelect": () => (/* binding */ cssButtonSelect),
/* harmony export */   "makeButtonSelect": () => (/* binding */ makeButtonSelect)
/* harmony export */ });
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");




const debounce = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
function buttonSelect(obs, optionArray, ...domArgs) {
  return makeButtonSelect(obs, optionArray, (val) => {
    obs.set(val);
  }, ...domArgs);
}
function buttonToggleSelect(obs, optionArray, ...domArgs) {
  const onClick = (val) => {
    obs.set(obs.get() === val ? null : val);
  };
  return makeButtonSelect(obs, optionArray, onClick, ...domArgs);
}
function alignmentSelect(obs, ...domArgs) {
  const alignments = [
    { value: "left", icon: "LeftAlign" },
    { value: "center", icon: "CenterAlign" },
    { value: "right", icon: "RightAlign" }
  ];
  return buttonSelect(obs, alignments, {}, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.testId)("alignment-select"), ...domArgs);
}
function colorSelect(value, save, ...domArgs) {
  const setValue = debounce((e) => value.set(e.target.value), 300);
  const onSave = debounce((e) => save(e.target.value), 300);
  return cssColorBtn(cssColorPicker({ type: "color" }, grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.attr("value", (use) => use(value).slice(0, 7)), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.on("input", setValue), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.on("change", onSave)), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.style("background-color", (use) => use(value) || "#000000"), cssColorBtn.cls("-dark", (use) => (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.isColorDark)(use(value) || "#000000")), cssColorIcon("Dots"), ...domArgs);
}
function makeButtonSelect(obs, optionArray, onClick, ...domArgs) {
  return cssButtonSelect(grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.forEach(optionArray, (option) => {
    const value = getOptionValue(option);
    const label = getOptionLabel(option);
    return cssSelectorBtn(cssSelectorBtn.cls("-selected", (use) => use(obs) === value), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.on("click", () => onClick(value)), isFullOption(option) && option.icon ? (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__.icon)(option.icon) : null, label ? cssSelectorLabel(label) : null, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.testId)("select-button"));
  }), ...domArgs);
}
function isFullOption(option) {
  return typeof option !== "string";
}
function getOptionLabel(option) {
  return isFullOption(option) ? option.label : option;
}
function getOptionValue(option) {
  return isFullOption(option) ? option.value : option;
}
const cssButtonSelect = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("div", `
  /* Resets */
  position: relative;
  outline: none;
  border-style: none;
  display: flex;

  /* Vars */
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.text};
  flex: 1 1 0;
`);
const cssSelectorBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("div", `
  /* Resets */
  position: relative;
  outline: none;
  border-style: none;
  display: flex;
  align-items: center;
  justify-content: center;

  /* Vars */
  flex: 1 1 0;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.mediumFontSize};
  letter-spacing: -0.08px;
  text-align: center;
  line-height: normal;
  min-width: 32px;
  white-space: nowrap;
  padding: 4px 10px;

  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupBg};
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupBorder};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupIcon};

  margin-left: -1px;

  cursor: pointer;

  &:first-child {
    border-top-left-radius: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.controlBorderRadius};
    border-bottom-left-radius: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.controlBorderRadius};
    margin-left: 0;
  }

  &:last-child {
    border-top-right-radius: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.controlBorderRadius};
    border-bottom-right-radius: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.controlBorderRadius};
  }

  &:hover:not(&-selected) {
    border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupBorderHover};
    z-index: 5;  /* Update z-index so selected borders take precedent */
  }

  &-selected {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupSelectedFg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupSelectedFg};
    border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupSelectedBorder};
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupSelectedBg};
    z-index: 10;  /* Update z-index so selected borders take precedent */
  }

  /* Styles when container includes cssButtonSelect.cls('-light') */
  .${cssButtonSelect.className}-light > & {
    border: none;
    border-radius: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.controlBorderRadius};
    margin-left: 0px;
    padding: 8px;
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupLightFg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupLightFg};
  }
  .${cssButtonSelect.className}-light > &-selected {
    border: none;
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupLightSelectedFg};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupLightSelectedFg};
    background-color: initial;
  }
  .${cssButtonSelect.className}-light > &:hover {
    border: none;
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.hover};
  }
  .${cssButtonSelect.className}-disabled > &,
  .${cssButtonSelect.className}-disabled > &:hover {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.rightPanelToggleButtonDisabledFg};
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.rightPanelToggleButtonDisabledFg};
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.rightPanelToggleButtonDisabledBg};
    border-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.buttonGroupBorder};
    pointer-events: none;
  }
`);
const cssSelectorLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("span", `
  margin: 0 2px;
  vertical-align: middle;
`);
const cssColorBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("div", `
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  min-width: 32px;
  max-width: 56px;
  height: 32px;
  border-radius: 4px;
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.colors.darkGrey};

  &:hover {
    border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.colors.hover};
  }

  &-dark {
    border: none !important;
  }
`);
const cssColorPicker = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("input", `
  position: absolute;
  cursor: pointer;
  opacity: 0;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
`);
const cssColorIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__.icon, `
  margin: 0 2px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.colors.slate};
  pointer-events: none;

  .${cssColorBtn.className}-dark & {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.colors.light};
  }
`);


/***/ }),

/***/ "./app/client/ui2018/draggableList.ts":
/*!********************************************!*\
  !*** ./app/client/ui2018/draggableList.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cssDragger": () => (/* binding */ cssDragger)
/* harmony export */ });
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");



const cssDragger = (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.styled)((...args) => (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_1__.icon)("DragDrop", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.testId)("dragger"), ...args), `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.controlSecondaryFg};
  visibility: hidden;
  align-self: center;
  flex-shrink: 0;
  .kf_draggable:hover & {
    visibility: visible;
  }
`);


/***/ }),

/***/ "./app/client/widgets/AttachmentsEditor.ts":
/*!*************************************************!*\
  !*** ./app/client/widgets/AttachmentsEditor.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AttachmentsEditor": () => (/* binding */ AttachmentsEditor)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_lib_uploads__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/uploads */ "./app/client/lib/uploads.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/editableLabel */ "./app/client/ui2018/editableLabel.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_modals__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui2018/modals */ "./app/client/ui2018/modals.ts");
/* harmony import */ var app_client_widgets_AttachmentsWidget__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/widgets/AttachmentsWidget */ "./app/client/widgets/AttachmentsWidget.ts");
/* harmony import */ var app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/widgets/NewBaseEditor */ "./app/client/widgets/NewBaseEditor.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var mime_types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! mime-types */ "./node_modules/mime-types/index.js");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));













class AttachmentsEditor extends app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_8__.NewBaseEditor {
  constructor(options) {
    super(options);
    const docData = options.gristDoc.docData;
    const cellValue = options.cellValue;
    const cell = {
      rowId: options.rowId,
      colId: options.field.colId(),
      tableId: options.field.column().table().tableId()
    };
    const initRowIndex = options.editValue && parseInt(options.editValue, 0) - 1 || 0;
    this._attachmentsTable = docData.getMetaTable("_grist_Attachments");
    this._docComm = docData.docComm;
    this._rowIds = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.obsArray)(Array.isArray(cellValue) ? cellValue.slice(1) : []);
    this._attachments = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.computedArray)(this._rowIds, (val) => {
      const fileIdent = this._attachmentsTable.getValue(val, "fileIdent");
      const fileType = mime_types__WEBPACK_IMPORTED_MODULE_10__.lookup(fileIdent) || "application/octet-stream";
      const filename = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.observable)(this._attachmentsTable.getValue(val, "fileName"));
      return {
        rowId: val,
        fileIdent,
        fileType,
        filename,
        hasPreview: Boolean(this._attachmentsTable.getValue(val, "imageHeight")),
        url: (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.computed)((use) => this._getUrl(cell, val, use(filename))),
        inlineUrl: (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.computed)((use) => this._getUrl(cell, val, use(filename), true))
      };
    });
    this._index = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.makeLiveIndex)(this, this._attachments, initRowIndex);
    this._selected = this.autoDispose((0,grainjs__WEBPACK_IMPORTED_MODULE_0__.computed)((use) => {
      const index = use(this._index);
      return index === null ? null : use(this._attachments)[index];
    }));
  }
  static skipEditor(typedVal, origVal) {
    if (Array.isArray(typedVal)) {
      return typedVal;
    }
  }
  attach(cellElem) {
    (0,app_client_ui2018_modals__WEBPACK_IMPORTED_MODULE_6__.modal)((ctl, owner) => {
      this.onDispose(ctl.close);
      return [
        cssFullScreenModal.cls(""),
        grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.onKeyDown({
          Enter: (ev) => {
            ctl.close();
            this.options.commands.fieldEditSaveHere();
          },
          Escape: (ev) => {
            ctl.close();
            this.options.commands.fieldEditCancel();
          },
          ArrowLeft$: (ev) => !isInEditor(ev) && this._moveIndex(-1),
          ArrowRight$: (ev) => !isInEditor(ev) && this._moveIndex(1)
        }),
        grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", (ev, elem) => {
          if (ev.target === elem) {
            ctl.close();
          }
        }),
        ...this._buildDom(ctl)
      ];
    }, { noEscapeKey: true });
  }
  getCellValue() {
    return ["L", ...this._rowIds.get()];
  }
  getCursorPos() {
    return 0;
  }
  getTextValue() {
    return "";
  }
  _buildDom(ctl) {
    return [
      cssHeader(cssFlexExpand(grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.text((use) => {
        const len = use(this._attachments).length;
        return len ? `${(use(this._index) || 0) + 1} of ${len}` : "";
      }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-counter")), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.maybe(this._selected, (selected) => cssTitle(cssEditableLabel(selected.filename, {
        save: (val) => this._renameAttachment(selected, val),
        inputArgs: [(0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-name")]
      }))), cssFlexExpand(cssFileButtons(grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.maybe(this._selected, (selected) => (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.basicButtonLink)(cssButton.cls(""), cssButtonIcon("Download"), "Download", grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.attr("href", selected.url), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.attr("target", "_blank"), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.attr("download", selected.filename), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-download"))), this.options.readonly ? null : [
        cssButton(cssButtonIcon("FieldAttachment"), "Add", grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", () => this._select()), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-add")),
        grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.maybe(this._selected, () => cssButton(cssButtonIcon("Remove"), "Delete", grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", () => this._remove()), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-remove")))
      ]), cssCloseButton(cssBigIcon("CrossBig"), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", () => ctl.close()), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-close")))),
      cssNextArrow(cssNextArrow.cls("-left"), cssBigIcon("Expand"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-left"), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.hide((use) => !use(this._attachments).length || use(this._index) === 0), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", () => this._moveIndex(-1))),
      cssNextArrow(cssNextArrow.cls("-right"), cssBigIcon("Expand"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-right"), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.hide((use) => !use(this._attachments).length || use(this._index) === use(this._attachments).length - 1), grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("click", () => this._moveIndex(1))),
      grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.domComputed(this._selected, (selected) => renderContent(selected, this.options.readonly)),
      (elem) => dragOverClass(elem, cssDropping.className),
      cssDragArea(this.options.readonly ? null : cssWarning("Drop files here to attach")),
      this.options.readonly ? null : grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.on("drop", (ev) => this._upload(ev.dataTransfer.files)),
      (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-modal")
    ];
  }
  async _renameAttachment(att, fileName) {
    await this._attachmentsTable.sendTableAction(["UpdateRecord", att.rowId, { fileName }]);
    att.filename.set(this._attachmentsTable.getValue(att.rowId, "fileName"));
  }
  _getUrl(cell, attId, filename, inline) {
    return this._docComm.docUrl("attachment") + "?" + (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_9__.encodeQueryParams)(__spreadValues(__spreadProps(__spreadValues(__spreadProps(__spreadValues({}, this._docComm.getUrlParams()), {
      name: filename
    }), cell), {
      maybeNew: 1,
      attId
    }), inline ? { inline: 1 } : {}));
  }
  _moveIndex(dir) {
    const next = this._index.get() + dir;
    this._index.set((0,app_common_gutil__WEBPACK_IMPORTED_MODULE_9__.clamp)(next, 0, this._attachments.get().length));
  }
  _remove() {
    this._rowIds.splice(this._index.get(), 1);
  }
  async _select() {
    const uploadResult = await (0,app_client_lib_uploads__WEBPACK_IMPORTED_MODULE_1__.selectFiles)({
      docWorkerUrl: this._docComm.docWorkerUrl,
      multiple: true,
      sizeLimit: "attachment"
    });
    return this._add(uploadResult);
  }
  async _upload(files) {
    const uploadResult = await (0,app_client_lib_uploads__WEBPACK_IMPORTED_MODULE_1__.uploadFiles)(Array.from(files), {
      docWorkerUrl: this._docComm.docWorkerUrl,
      sizeLimit: "attachment"
    });
    return this._add(uploadResult);
  }
  async _add(uploadResult) {
    if (!uploadResult) {
      return;
    }
    const rowIds = await this._docComm.addAttachments(uploadResult.uploadId);
    const len = this._rowIds.get().length;
    if (rowIds.length > 0) {
      this._rowIds.push(...rowIds);
      this._index.set(len);
    }
  }
}
function isInEditor(ev) {
  return ev.target.tagName === "INPUT";
}
function renderContent(att, readonly) {
  const commonArgs = [cssContent.cls(""), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("pw-attachment-content")];
  if (!att) {
    return cssWarning("No attachments", readonly ? null : cssDetails("Drop files here to attach."), ...commonArgs);
  } else if (att.hasPreview) {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.dom)("img", grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.attr("src", att.url), ...commonArgs);
  } else if (att.fileType.startsWith("video/")) {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.dom)("video", grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.attr("src", att.inlineUrl), { autoplay: false, controls: true }, ...commonArgs);
  } else if (att.fileType.startsWith("audio/")) {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.dom)("audio", grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.attr("src", att.inlineUrl), { autoplay: false, controls: true }, ...commonArgs);
  } else if (att.fileType.startsWith("text/") || att.fileType === "application/json") {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.dom)("div", ...commonArgs, cssWarning(cssContent.cls(""), (0,app_client_widgets_AttachmentsWidget__WEBPACK_IMPORTED_MODULE_7__.renderFileType)(att.filename.get(), att.fileIdent), cssDetails("Preview not available.")));
  } else {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.dom)("object", { type: att.fileType }, grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.attr("data", att.inlineUrl), ...commonArgs, cssWarning(cssContent.cls(""), (0,app_client_widgets_AttachmentsWidget__WEBPACK_IMPORTED_MODULE_7__.renderFileType)(att.filename.get(), att.fileIdent), cssDetails("Preview not available.")));
  }
}
function dragOverClass(target, className) {
  let enterTarget = null;
  function toggle(ev, onOff) {
    enterTarget = onOff ? ev.target : null;
    ev.stopPropagation();
    ev.preventDefault();
    target.classList.toggle(className, onOff);
  }
  grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.onElem(target, "dragenter", (ev) => toggle(ev, true));
  grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.onElem(target, "dragleave", (ev) => ev.target === enterTarget && toggle(ev, false));
  grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.onElem(target, "drop", (ev) => toggle(ev, false));
}
const cssFullScreenModal = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  background-color: initial;
  width: 100%;
  height: 100%;
  border: none;
  border-radius: 0px;
  box-shadow: none;
  padding: 0px;
`);
const cssHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  padding: 16px 24px;
  position: fixed;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
`);
const cssCloseButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  padding: 6px;
  border-radius: 32px;
  cursor: pointer;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.light};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.lightGreen};

  &:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.mediumGreyOpaque};
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGreen};
  }
`);
const cssBigIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_5__.icon, `
  padding: 10px;
`);
const cssTitle = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  display: inline-block;
  padding: 8px 16px;
  margin-right: 8px;
  min-width: 0px;
  overflow: hidden;

  &:hover {
    outline: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.slate};
  }
  &:focus-within {
    outline: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGreen};
  }
`);
const cssEditableLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)(app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_4__.editableLabel, `
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.vars.mediumFontSize};
  font-weight: bold;
  color: white;
`);
const cssFlexExpand = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  flex: 1;
  display: flex;
`);
const cssFileButtons = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)(app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.cssButtonGroup, `
  margin-left: auto;
  margin-right: 16px;
  height: 32px;
  flex: none;
`);
const cssButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)(app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.basicButton, `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.light};
  font-weight: normal;
  padding: 0 16px;
  border-top: none;
  border-right: none;
  border-bottom: none;
  border-left: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGrey};
  display: flex;
  align-items: center;

  &:first-child {
    border: none;
  }
  &:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.mediumGreyOpaque};
    border-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGrey};
  }
`);
const cssButtonIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_5__.icon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.slate};
  margin-right: 4px;
`);
const cssNextArrow = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  position: fixed;
  height: 32px;
  margin: auto 24px;
  top: 0px;
  bottom: 0px;
  z-index: 1;

  padding: 6px;
  border-radius: 32px;
  cursor: pointer;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.lightGreen};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.light};

  &:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGreen};
  }
  &-left {
    transform: rotateY(180deg);
    left: 0px;
  }
  &-right {
    right: 0px;
  }
`);
const cssDropping = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", "");
const cssContent = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  display: block;
  height: calc(100% - 72px);
  width: calc(100% - 64px);
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 64px;
  margin-bottom: 8px;
  outline: none;
  img& {
    width: max-content;
    height: unset;
  }
  audio& {
    padding-bottom: 64px;
  }
  .${cssDropping.className} > & {
    display: none;
  }
`);
const cssWarning = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.vars.mediumFontSize};
  font-weight: bold;
  color: white;
  padding: 0px;
`);
const cssDetails = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)("div", `
  font-weight: normal;
  margin-top: 24px;
`);
const cssDragArea = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.styled)(cssContent, `
  border: 2px dashed ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.mediumGreyOpaque};
  height: calc(100% - 96px);
  margin-top: 64px;
  padding: 0px;
  justify-content: center;
  display: none;
  .${cssDropping.className} > & {
    display: flex;
  }
`);


/***/ }),

/***/ "./app/client/widgets/AttachmentsWidget.ts":
/*!*************************************************!*\
  !*** ./app/client/widgets/AttachmentsWidget.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AttachmentsWidget": () => (/* binding */ AttachmentsWidget),
/* harmony export */   "renderFileType": () => (/* binding */ renderFileType)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/dom */ "./app/client/lib/dom.js");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var app_client_lib_uploads__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/uploads */ "./app/client/lib/uploads.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_widgets_NewAbstractWidget__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/widgets/NewAbstractWidget */ "./app/client/widgets/NewAbstractWidget.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_plugin_GristData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/plugin/GristData */ "./app/plugin/GristData.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));










class AttachmentsWidget extends app_client_widgets_NewAbstractWidget__WEBPACK_IMPORTED_MODULE_5__.NewAbstractWidget {
  constructor(field) {
    super(field);
    this._attachmentsTable = this._getDocData().getMetaTable("_grist_Attachments");
    this._height = this.options.prop("height");
    this.autoDispose(this._height.subscribe(() => {
      this.field.viewSection().events.trigger("rowHeightChange");
    }));
  }
  buildDom(row) {
    const cellValue = row.cells[this.field.colId()];
    const values = grainjs__WEBPACK_IMPORTED_MODULE_8__.Computed.create(null, (0,grainjs__WEBPACK_IMPORTED_MODULE_8__.fromKo)(cellValue), (use, _cellValue) => Array.isArray(_cellValue) ? _cellValue.slice(1) : []);
    const colId = this.field.colId();
    const tableId = this.field.column().table().tableId();
    return cssAttachmentWidget(grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.autoDispose(values), grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.cls("field_clip"), (0,app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__.dragOverClass)("attachment_drag_over"), cssAttachmentIcon(cssAttachmentIcon.cls("-hover", (use) => use(values).length > 0), grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.on("click", () => this._selectAndSave(row, cellValue)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("attachment-icon")), grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.maybe(row.id, (rowId) => {
      return grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.forEach(values, (value) => isNaN(value) ? null : this._buildAttachment(value, values, {
        rowId,
        colId,
        tableId
      }));
    }), grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.on("drop", (ev) => this._uploadAndSave(row, cellValue, ev.dataTransfer.files)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("attachment-widget"));
  }
  buildConfigDom() {
    const options = this.field.config.options;
    const height = options.prop("height");
    const inputRange = (0,grainjs__WEBPACK_IMPORTED_MODULE_8__.input)((0,grainjs__WEBPACK_IMPORTED_MODULE_8__.fromKo)(height), { onInput: true }, {
      style: "margin: 0 5px;",
      type: "range",
      min: "16",
      max: "96",
      value: "36"
    }, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("pw-thumbnail-size"), grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.prop("disabled", (use) => use(options.disabled("height"))));
    (0,grainjs__WEBPACK_IMPORTED_MODULE_8__.onElem)(inputRange, "change", (ev) => {
      height.setAndSave(inputRange.value).catch(reportError);
    });
    return (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_3__.cssRow)(cssSizeLabel("Size"), inputRange);
  }
  _buildAttachment(value, allValues, cell) {
    const filename = this._attachmentsTable.getValue(value, "fileName");
    const fileIdent = this._attachmentsTable.getValue(value, "fileIdent");
    const height = this._attachmentsTable.getValue(value, "imageHeight");
    const width = this._attachmentsTable.getValue(value, "imageWidth");
    const hasPreview = Boolean(height);
    const ratio = hasPreview ? width / height : 1;
    return cssAttachmentPreview({ title: filename }, grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.style("height", (use) => `${use(this._height)}px`), grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.style("width", (use) => `${parseInt(use(this._height), 10) * ratio}px`), hasPreview ? (0,grainjs__WEBPACK_IMPORTED_MODULE_8__.dom)("img", { style: "height: 100%; min-width: 100%; vertical-align: top;" }, grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.attr("src", this._getUrl(value, cell))) : renderFileType(filename, fileIdent, this._height), grainjs__WEBPACK_IMPORTED_MODULE_8__.dom.on("dblclick", () => app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.input.run(String(allValues.get().indexOf(value) + 1))), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("pw-thumbnail"));
  }
  _getUrl(attId, cell) {
    const docComm = this._getDocComm();
    return docComm.docUrl("attachment") + "?" + (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_6__.encodeQueryParams)(__spreadProps(__spreadValues(__spreadValues({}, docComm.getUrlParams()), cell), {
      attId,
      name: this._attachmentsTable.getValue(attId, "fileName")
    }));
  }
  async _selectAndSave(row, value) {
    const uploadResult = await (0,app_client_lib_uploads__WEBPACK_IMPORTED_MODULE_2__.selectFiles)({
      docWorkerUrl: this._getDocComm().docWorkerUrl,
      multiple: true,
      sizeLimit: "attachment"
    });
    return this._save(row, value, uploadResult);
  }
  async _uploadAndSave(row, value, files) {
    const uploadResult = await (0,app_client_lib_uploads__WEBPACK_IMPORTED_MODULE_2__.uploadFiles)(Array.from(files), {
      docWorkerUrl: this._getDocComm().docWorkerUrl,
      sizeLimit: "attachment"
    });
    return this._save(row, value, uploadResult);
  }
  async _save(row, value, uploadResult) {
    if (!uploadResult) {
      return;
    }
    const rowIds = await this._getDocComm().addAttachments(uploadResult.uploadId);
    const formatted = value() ? value() : [app_plugin_GristData__WEBPACK_IMPORTED_MODULE_7__.GristObjCode.List];
    const newValue = formatted.concat(rowIds);
    app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.setCursor.run(row, this.field);
    app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.input.run(newValue);
  }
}
function renderFileType(fileName, fileIdent, height) {
  const extension = (0,path__WEBPACK_IMPORTED_MODULE_9__.extname)("x" + fileName).slice(1) || (0,path__WEBPACK_IMPORTED_MODULE_9__.extname)("x" + fileIdent).slice(1) || "?";
  return cssFileType(extension.toUpperCase(), height && cssFileType.cls((use) => {
    const size = parseFloat(use(height));
    return size < 28 ? "-small" : size < 60 ? "-medium" : "-large";
  }));
}
const cssAttachmentWidget = (0,grainjs__WEBPACK_IMPORTED_MODULE_8__.styled)("div", `
  display: flex;
  flex-wrap: wrap;
  white-space: pre-wrap;

  &.attachment_drag_over {
    outline: 2px dashed #ff9a00;
    outline-offset: -2px;
  }
`);
const cssAttachmentIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_8__.styled)("div.glyphicon.glyphicon-paperclip", `
  position: absolute;
  top: 2px;
  left: 2px;
  padding: 2px;
  background-color: #D0D0D0;
  color: white;
  border-radius: 2px;
  border: none;
  cursor: pointer;
  box-shadow: 0 0 0 1px white;
  z-index: 1;

  &:hover {
    background-color: #3290BF;
  }

  &-hover {
    display: none;
  }
  .${cssAttachmentWidget.className}:hover &-hover {
    display: inline;
  }
`);
const cssAttachmentPreview = (0,grainjs__WEBPACK_IMPORTED_MODULE_8__.styled)("div", `
  color: black;
  background-color: white;
  border: 1px solid #bbb;
  margin: 0 2px 2px 0;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 0;
  &:hover {
    border-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.lightGreen};
  }
`);
const cssSizeLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_8__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.slate};
  margin-right: 9px;
`);
const cssFileType = (0,grainjs__WEBPACK_IMPORTED_MODULE_8__.styled)("div", `
  height: 100%;
  width: 100%;
  max-height: 80px;
  max-width: 80px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.slate};
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.vars.mediumFontSize};
  font-weight: bold;
  color: white;
  overflow: hidden;

  &-small { font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.vars.xxsmallFontSize}; }
  &-medium { font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.vars.smallFontSize}; }
  &-large { font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.vars.mediumFontSize}; }
`);


/***/ }),

/***/ "./app/client/widgets/CellStyle.ts":
/*!*****************************************!*\
  !*** ./app/client/widgets/CellStyle.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CellStyle": () => (/* binding */ CellStyle)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/ColorSelect */ "./app/client/ui2018/ColorSelect.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_widgets_ConditionalStyle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/widgets/ConditionalStyle */ "./app/client/widgets/ConditionalStyle.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");







const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("CellStyle");
class CellStyle extends grainjs__WEBPACK_IMPORTED_MODULE_6__.Disposable {
  constructor(_field, _gristDoc, _defaultTextColor) {
    super();
    this._field = _field;
    this._gristDoc = _gristDoc;
    this._defaultTextColor = _defaultTextColor;
  }
  buildDom() {
    const isTableWidget = this._field.viewSection().parentKey() === "record";
    return [
      grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.maybe((use) => isTableWidget, () => {
        return [
          cssLine(cssLabel(t("HEADER STYLE"))),
          cssRow((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("header-color-select"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.domComputedOwned((0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(this._field.config.headerStyle), (holder, options) => {
            const headerTextColor = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("headerTextColor"));
            const headerFillColor = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("headerFillColor"));
            const headerFontBold = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("headerFontBold"));
            const headerFontUnderline = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("headerFontUnderline"));
            const headerFontItalic = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("headerFontItalic"));
            const headerFontStrikethrough = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("headerFontStrikethrough"));
            const hasMixedStyle = grainjs__WEBPACK_IMPORTED_MODULE_6__.Computed.create(holder, (use) => {
              if (!use(this._field.config.multiselect)) {
                return false;
              }
              const commonStyle = [
                use(options.mixed("headerTextColor")),
                use(options.mixed("headerFillColor")),
                use(options.mixed("headerFontBold")),
                use(options.mixed("headerFontUnderline")),
                use(options.mixed("headerFontItalic")),
                use(options.mixed("headerFontStrikethrough"))
              ];
              return commonStyle.some(Boolean);
            });
            return (0,app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__.colorSelect)({
              textColor: new app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__.ColorOption({ color: headerTextColor, defaultColor: this._defaultTextColor, noneText: "default" }),
              fillColor: new app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__.ColorOption({ color: headerFillColor, allowsNone: true, noneText: "none" }),
              fontBold: headerFontBold,
              fontItalic: headerFontItalic,
              fontUnderline: headerFontUnderline,
              fontStrikethrough: headerFontStrikethrough
            }, {
              onSave: () => options.save(),
              onRevert: () => options.revert(),
              placeholder: (use) => use(hasMixedStyle) ? t("Mixed style") : t("Default header style")
            });
          }))
        ];
      }),
      cssLine(cssLabel(t("CELL STYLE")), cssButton(t("Open row styles"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.on("click", app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.allCommands.viewTabOpen.run))),
      cssRow((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("cell-color-select"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.domComputedOwned((0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(this._field.config.style), (holder, options) => {
        const textColor = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("textColor"));
        const fillColor = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("fillColor"));
        const fontBold = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("fontBold"));
        const fontUnderline = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("fontUnderline"));
        const fontItalic = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("fontItalic"));
        const fontStrikethrough = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(options.prop("fontStrikethrough"));
        const hasMixedStyle = grainjs__WEBPACK_IMPORTED_MODULE_6__.Computed.create(holder, (use) => {
          if (!use(this._field.config.multiselect)) {
            return false;
          }
          const commonStyle = [
            use(options.mixed("textColor")),
            use(options.mixed("fillColor")),
            use(options.mixed("fontBold")),
            use(options.mixed("fontUnderline")),
            use(options.mixed("fontItalic")),
            use(options.mixed("fontStrikethrough"))
          ];
          return commonStyle.some(Boolean);
        });
        return (0,app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__.colorSelect)({
          textColor: new app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__.ColorOption({ color: textColor, defaultColor: this._defaultTextColor, noneText: "default" }),
          fillColor: new app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__.ColorOption({ color: fillColor, allowsNone: true, noneText: "none" }),
          fontBold,
          fontItalic,
          fontUnderline,
          fontStrikethrough
        }, {
          onSave: () => options.save(),
          onRevert: () => options.revert(),
          placeholder: (use) => use(hasMixedStyle) ? t("Mixed style") : t("Default cell style")
        });
      })),
      grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.create(app_client_widgets_ConditionalStyle__WEBPACK_IMPORTED_MODULE_5__.ConditionalStyle, t("Cell Style"), this._field, this._gristDoc, (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(this._field.config.multiselect))
    ];
  }
}
const cssLine = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)("div", `
  display: flex;
  margin: 16px 16px 12px 16px;
  justify-content: space-between;
  align-items: baseline;
`);
const cssLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.text};
  text-transform: uppercase;
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.vars.xsmallFontSize};
`);
const cssButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)(app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.textButton, `
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.vars.mediumFontSize};
`);
const cssRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.styled)("div", `
  display: flex;
  margin: 8px 16px;
  align-items: center;
  &-top-space {
    margin-top: 24px;
  }
  &-disabled {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.disabledText};
  }
`);


/***/ }),

/***/ "./app/client/widgets/ChoiceListCell.ts":
/*!**********************************************!*\
  !*** ./app/client/widgets/ChoiceListCell.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChoiceListCell": () => (/* binding */ ChoiceListCell),
/* harmony export */   "cssChoiceList": () => (/* binding */ cssChoiceList),
/* harmony export */   "cssToken": () => (/* binding */ cssToken)
/* harmony export */ });
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_widgets_ChoiceTextBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/widgets/ChoiceTextBox */ "./app/client/widgets/ChoiceTextBox.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/widgets/ChoiceToken */ "./app/client/widgets/ChoiceToken.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));





class ChoiceListCell extends app_client_widgets_ChoiceTextBox__WEBPACK_IMPORTED_MODULE_1__.ChoiceTextBox {
  buildDom(row) {
    const value = row.cells[this.field.colId.peek()];
    return cssChoiceList(grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.cls("field_clip"), cssChoiceList.cls("-wrap", this.wrapping), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.style("justify-content", (use) => use(this.alignment) === "right" ? "flex-end" : use(this.alignment)), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.domComputed((use) => {
      return use(row._isAddRow) ? null : [
        use(value),
        use(this.getChoiceValuesSet()),
        use(this.getChoiceOptions())
      ];
    }, (input) => {
      if (!input) {
        return null;
      }
      const [rawValue, choiceSet, choiceOptionsByName] = input;
      const val = (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_2__.decodeObject)(rawValue);
      if (!val) {
        return null;
      }
      const tokens = Array.isArray(val) ? val : [val];
      return tokens.map((token) => (0,app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_4__.choiceToken)(String(token), __spreadProps(__spreadValues({}, choiceOptionsByName.get(String(token)) || {}), {
        invalid: !choiceSet.has(String(token))
      }), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.cls(cssToken.className), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.testId)("choice-list-cell-token")));
    }));
  }
}
const cssChoiceList = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("div", `
  display: flex;
  align-content: start;
  align-items: start;
  padding: 0 3px;

  position: relative;
  min-height: 22px;

  &-wrap {
    flex-wrap: wrap;
  }
`);
const cssToken = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("div", `
  flex: 0 1 auto;
  min-width: 0px;
  margin: 2px;
  line-height: 16px;
`);


/***/ }),

/***/ "./app/client/widgets/ChoiceListEditor.ts":
/*!************************************************!*\
  !*** ./app/client/widgets/ChoiceListEditor.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChoiceItem": () => (/* binding */ ChoiceItem),
/* harmony export */   "ChoiceListEditor": () => (/* binding */ ChoiceListEditor),
/* harmony export */   "cssChoiceList": () => (/* binding */ cssChoiceList),
/* harmony export */   "cssDeleteButton": () => (/* binding */ cssDeleteButton),
/* harmony export */   "cssDeleteIcon": () => (/* binding */ cssDeleteIcon),
/* harmony export */   "cssMatchText": () => (/* binding */ cssMatchText),
/* harmony export */   "cssPlusButton": () => (/* binding */ cssPlusButton),
/* harmony export */   "cssPlusIcon": () => (/* binding */ cssPlusIcon),
/* harmony export */   "cssToken": () => (/* binding */ cssToken)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/ACIndex */ "./app/client/lib/ACIndex.ts");
/* harmony import */ var app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/TokenField */ "./app/client/lib/TokenField.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/widgets/EditorButtons */ "./app/client/widgets/EditorButtons.ts");
/* harmony import */ var app_client_widgets_EditorPlacement__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/widgets/EditorPlacement */ "./app/client/widgets/EditorPlacement.ts");
/* harmony import */ var app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/widgets/NewBaseEditor */ "./app/client/widgets/NewBaseEditor.ts");
/* harmony import */ var app_common_csvFormat__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/common/csvFormat */ "./app/common/csvFormat.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
/* harmony import */ var app_client_widgets_ChoiceTextBox__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/widgets/ChoiceTextBox */ "./app/client/widgets/ChoiceTextBox.ts");
/* harmony import */ var app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/widgets/ChoiceToken */ "./app/client/widgets/ChoiceToken.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");














class ChoiceItem {
  constructor(label, isInvalid, isNew) {
    this.label = label;
    this.isInvalid = isInvalid;
    this.isNew = isNew;
    this.cleanText = (0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_1__.normalizeText)(this.label);
  }
}
class ChoiceListEditor extends app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_7__.NewBaseEditor {
  constructor(options) {
    super(options);
    this.options = options;
    this._enableAddNew = true;
    this._showAddNew = false;
    const choices = options.field.widgetOptionsJson.peek().choices || [];
    this._choiceOptionsByName = options.field.widgetOptionsJson.peek().choiceOptions || {};
    const acItems = choices.map((c) => new ChoiceItem(c, false));
    const choiceSet = new Set(choices);
    const acIndex = new app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_1__.ACIndexImpl(acItems);
    const acOptions = {
      menuCssClass: `${app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_4__.menuCssClass} ${cssChoiceList.className} test-autocomplete`,
      search: async (term) => this._maybeShowAddNew(acIndex.search(term), term),
      renderItem: (item, highlightFunc) => this._renderACItem(item, highlightFunc),
      getItemText: (item) => item.label
    };
    this.commandGroup = this.autoDispose((0,app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.createGroup)(options.commands, null, true));
    this._alignment = options.field.widgetOptionsJson.peek().alignment || "left";
    const cellValue = (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_9__.decodeObject)(options.cellValue);
    const startLabels = options.editValue !== void 0 || !Array.isArray(cellValue) ? [] : cellValue;
    const startTokens = startLabels.map((label) => new ChoiceItem(String(label), !choiceSet.has(String(label))));
    this._tokenField = app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.TokenField.ctor().create(this, {
      initialValue: startTokens,
      renderToken: (item) => {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        return [
          item.label,
          grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("background-color", (0,app_client_widgets_ChoiceTextBox__WEBPACK_IMPORTED_MODULE_10__.getRenderFillColor)(this._choiceOptionsByName[item.label])),
          grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("color", (0,app_client_widgets_ChoiceTextBox__WEBPACK_IMPORTED_MODULE_10__.getRenderTextColor)(this._choiceOptionsByName[item.label])),
          grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("font-bold", (_b = (_a = this._choiceOptionsByName[item.label]) == null ? void 0 : _a.fontBold) != null ? _b : false),
          grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("font-underline", (_d = (_c = this._choiceOptionsByName[item.label]) == null ? void 0 : _c.fontUnderline) != null ? _d : false),
          grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("font-italic", (_f = (_e = this._choiceOptionsByName[item.label]) == null ? void 0 : _e.fontItalic) != null ? _f : false),
          grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("font-strikethrough", (_h = (_g = this._choiceOptionsByName[item.label]) == null ? void 0 : _g.fontStrikethrough) != null ? _h : false),
          app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_11__.cssChoiceToken.cls("-invalid", item.isInvalid)
        ];
      },
      createToken: (label) => new ChoiceItem(label, !choiceSet.has(label)),
      acOptions,
      openAutocompleteOnFocus: true,
      readonly: options.readonly,
      trimLabels: true,
      styles: { cssTokenField, cssToken, cssDeleteButton, cssDeleteIcon }
    });
    this._dom = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.dom)("div.default_editor", grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("readonly_editor", options.readonly), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls(cssReadonlyStyle.className, options.readonly), this.cellEditorDiv = cssCellEditor((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("widget-text-editor"), this._contentSizer = cssContentSizer(), (elem) => this._tokenField.attach(elem)), (0,app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_5__.createMobileButtons)(options.commands));
    this._textInput = this._tokenField.getTextInput();
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.update(this._tokenField.getRootElem(), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("justify-content", this._alignment));
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.update(this._tokenField.getHiddenInput(), this.commandGroup.attach());
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.update(this._textInput, grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("input", () => this.resizeInput(true)), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.prop("value", options.editValue || ""), this.commandGroup.attach());
  }
  attach(cellElem) {
    this._editorPlacement = app_client_widgets_EditorPlacement__WEBPACK_IMPORTED_MODULE_6__.EditorPlacement.create(this, this._dom, cellElem, { margins: (0,app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_5__.getButtonMargins)() });
    this.autoDispose(this._editorPlacement.onReposition.addListener(() => this.resizeInput()));
    this.autoDispose(this._tokenField.tokensObs.addListener(() => Promise.resolve().then(() => this.resizeInput())));
    this.setSizerLimits();
    this.resizeInput();
    this._textInput.focus();
    const pos = Math.min(this.options.cursorPos, this._textInput.value.length);
    this._textInput.setSelectionRange(pos, pos);
  }
  getDom() {
    return this._dom;
  }
  getCellValue() {
    return (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_9__.encodeObject)(this._tokenField.tokensObs.get().map((item) => item.label));
  }
  getTextValue() {
    const values = this._tokenField.tokensObs.get().map((t) => t.label);
    return (0,app_common_csvFormat__WEBPACK_IMPORTED_MODULE_8__.csvEncodeRow)(values, { prettier: true });
  }
  getCursorPos() {
    return this._textInput.selectionStart || 0;
  }
  async prepForSave() {
    const tokens = this._tokenField.tokensObs.get();
    const newChoices = tokens.filter((t) => t.isNew).map((t) => t.label);
    if (newChoices.length > 0) {
      const choices = this.options.field.widgetOptionsJson.prop("choices");
      await choices.saveOnly([...choices.peek() || [], ...new Set(newChoices)]);
    }
  }
  setSizerLimits() {
    const rootElem = this._tokenField.getRootElem();
    const maxSize = this._editorPlacement.calcSizeWithPadding(rootElem, { width: Infinity, height: Infinity }, { calcOnly: true });
    this._contentSizer.style.maxWidth = Math.ceil(maxSize.width) + "px";
  }
  resizeInput(onlyTextInput = false) {
    if (this.isDisposed()) {
      return;
    }
    const rootElem = this._tokenField.getRootElem();
    if (!onlyTextInput || !this._inputSizer) {
      this._contentSizer.innerHTML = "";
      grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.update(this._contentSizer, grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.update(rootElem.cloneNode(true), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("width", ""), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("height", ""), this._inputSizer = cssInputSizer(), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("test-tokenfield", false)));
    }
    this._inputSizer.textContent = this._textInput.value + "\u200B";
    const rect = this._contentSizer.getBoundingClientRect();
    const size = this._editorPlacement.calcSizeWithPadding(rootElem, rect);
    rootElem.style.width = size.width + "px";
    rootElem.style.height = size.height + "px";
    this._textInput.style.width = this._inputSizer.getBoundingClientRect().width + "px";
  }
  _maybeShowAddNew(result, text) {
    this._showAddNew = false;
    const trimmedText = text.trim();
    if (!this._enableAddNew || !trimmedText) {
      return result;
    }
    const addNewItem = new ChoiceItem(trimmedText, false, true);
    if (result.items.find((item) => item.cleanText === addNewItem.cleanText)) {
      return result;
    }
    result.items.push(addNewItem);
    this._showAddNew = true;
    return result;
  }
  _renderACItem(item, highlightFunc) {
    const options = this._choiceOptionsByName[item.label];
    return (0,app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_11__.cssChoiceACItem)(item.isNew ? [app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_11__.cssChoiceACItem.cls("-new"), cssPlusButton(cssPlusIcon("Plus"))] : [app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_11__.cssChoiceACItem.cls("-with-new", this._showAddNew)], (0,app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_11__.choiceToken)((0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_1__.buildHighlightedDom)(item.label, highlightFunc, cssMatchText), options || {}, grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("max-width", "100%"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("choice-list-editor-item-label")), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("choice-list-editor-item"), item.isNew ? (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("choice-list-editor-new-item") : null);
  }
}
const cssCellEditor = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.cellEditorBg};
  font-family: var(--grist-font-family-data);
  font-size: var(--grist-medium-font-size);
`);
const cssTokenField = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssTokenField, `
  border: none;
  align-items: start;
  align-content: start;
  padding: 0 3px;
  height: min-content;
  min-height: 22px;
  color: black;
  flex-wrap: wrap;
`);
const cssToken = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssToken, `
  padding: 1px 4px;
  margin: 2px;
  line-height: 16px;
  white-space: pre;

  &.selected {
    box-shadow: inset 0 0 0 1px ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.lightGreen};
  }
`);
const cssDeleteButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssDeleteButton, `
  position: absolute;
  top: -8px;
  right: -6px;
  border-radius: 16px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.dark};
  width: 14px;
  height: 14px;
  cursor: pointer;
  z-index: 1;
  display: none;
  align-items: center;
  justify-content: center;

  .${cssToken.className}:hover & {
    display: flex;
  }
  .${cssTokenField.className}.token-dragactive & {
    cursor: unset;
  }
`);
const cssDeleteIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssDeleteIcon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.light};
  &:hover {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGrey};
  }
`);
const cssContentSizer = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  position: absolute;
  left: 0;
  top: -100px;
  border: none;
  visibility: hidden;
  overflow: visible;
  width: max-content;

  & .${app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssInputWrapper.className} {
    display: none;
  }
`);
const cssInputSizer = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  flex: auto;
  min-width: 24px;
  margin: 3px 2px;
`);
const cssChoiceList = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  z-index: 1001;
  box-shadow: 0 0px 8px 0 ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.menuShadow};
  overflow-y: auto;
  padding: 8px 0 0 0;
  --weaseljs-menu-item-padding: 8px 16px;
`);
const cssReadonlyStyle = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  padding-left: 16px;
  background: white;
`);
const cssMatchText = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("span", `
  text-decoration: underline;
`);
const cssPlusButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: inline-block;
  width: 20px;
  height: 20px;
  border-radius: 20px;
  margin-right: 8px;
  text-align: center;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.lightGreen};
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.light};

  .selected > & {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGreen};
  }
`);
const cssPlusIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_12__.icon, `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.light};
`);


/***/ }),

/***/ "./app/client/widgets/ChoiceListEntry.ts":
/*!***********************************************!*\
  !*** ./app/client/widgets/ChoiceListEntry.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChoiceListEntry": () => (/* binding */ ChoiceListEntry)
/* harmony export */ });
/* harmony import */ var app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/TokenField */ "./app/client/lib/TokenField.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/ColorSelect */ "./app/client/ui2018/ColorSelect.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/editableLabel */ "./app/client/ui2018/editableLabel.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__);
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};









const isEqual = __webpack_require__(/*! lodash/isEqual */ "./node_modules/lodash/isEqual.js");
const uniqBy = __webpack_require__(/*! lodash/uniqBy */ "./node_modules/lodash/uniqBy.js");
class RenameMap {
  constructor(tokens) {
    for (const { label, previousLabel: id } of tokens.filter((x) => x.previousLabel)) {
      if (label === id) {
        continue;
      }
      this[id] = label;
    }
  }
}
class ChoiceItem {
  constructor(label, previousLabel, options) {
    this.label = label;
    this.previousLabel = previousLabel;
    this.options = options;
  }
  static from(item) {
    return new ChoiceItem(item.label, item.previousLabel, item.options);
  }
  rename(label) {
    return new ChoiceItem(label, this.previousLabel, this.options);
  }
  changeStyle(options) {
    return new ChoiceItem(this.label, this.previousLabel, __spreadValues(__spreadValues({}, this.options), options));
  }
}
const ChoiceItemType = (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.iface)([], {
  label: "string",
  previousLabel: (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.union)("string", "null"),
  options: (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.opt)("ChoiceOptionsType")
});
const ChoiceOptionsType = (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.iface)([], {
  textColor: (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.opt)("string"),
  fillColor: (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.opt)("string"),
  fontBold: (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.opt)("boolean"),
  fontUnderline: (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.opt)("boolean"),
  fontItalic: (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.opt)("boolean"),
  fontStrikethrough: (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.opt)("boolean")
});
const choiceTypes = {
  ChoiceItemType,
  ChoiceOptionsType
};
const { ChoiceItemType: ChoiceItemChecker } = (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_8__.createCheckers)(choiceTypes);
class ChoiceListEntry extends grainjs__WEBPACK_IMPORTED_MODULE_7__.Disposable {
  constructor(_values, _choiceOptionsByName, _onSave, _disabled, _mixed) {
    super();
    this._values = _values;
    this._choiceOptionsByName = _choiceOptionsByName;
    this._onSave = _onSave;
    this._disabled = _disabled;
    this._mixed = _mixed;
    this._isEditing = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(this, false);
    this._tokenFieldHolder = grainjs__WEBPACK_IMPORTED_MODULE_7__.Holder.create(this);
    this._editorContainer = null;
    this._editorSaveButtons = null;
    this.autoDispose(this._values.addListener(() => {
      this._cancel();
    }));
    this.onDispose(() => {
      if (!this._isEditing.get()) {
        return;
      }
      this._save();
    });
  }
  buildDom(maxRows = 6) {
    return grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.domComputed(this._isEditing, (editMode) => {
      if (editMode) {
        const initialValue = this._mixed.get() ? [] : this._values.get().map((label) => {
          return new ChoiceItem(label, label, this._choiceOptionsByName.get().get(label));
        });
        const tokenField = app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_0__.TokenField.ctor().create(this._tokenFieldHolder, {
          initialValue,
          renderToken: (token) => this._renderToken(token),
          createToken: (label) => new ChoiceItem(label, null),
          clipboardToTokens: clipboardToChoices,
          tokensToClipboard: (tokens, clipboard) => {
            clipboard.setData("application/json", JSON.stringify(tokens));
            clipboard.setData("text/plain", tokens.map((t) => t.label).join("\n"));
          },
          openAutocompleteOnFocus: false,
          trimLabels: true,
          styles: { cssTokenField, cssToken, cssTokenInput, cssInputWrapper, cssDeleteButton, cssDeleteIcon },
          keyBindings: {
            previous: "ArrowUp",
            next: "ArrowDown"
          },
          variant: "vertical"
        });
        return cssVerticalFlex(this._editorContainer = cssListBox({ tabIndex: "-1" }, (elem) => {
          tokenField.attach(elem);
          this._focusOnOpen(tokenField.getTextInput());
        }, grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("focusout", (ev) => {
          const hasActiveElement = (element, activeElement = document.activeElement) => {
            return element == null ? void 0 : element.contains(activeElement);
          };
          setTimeout(() => {
            if (!this._isEditing.get()) {
              return;
            }
            if (hasActiveElement(this._editorContainer) || hasActiveElement(document.querySelector(".token-color-picker")) || hasActiveElement(this._editorSaveButtons, ev.relatedTarget)) {
              return;
            }
            this._save();
          }, 0);
        }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("choice-list-entry")), this._editorSaveButtons = cssButtonRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.primaryButton)("Save", grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => this._save()), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("choice-list-entry-save")), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.basicButton)("Cancel", grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => this._cancel()), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("choice-list-entry-cancel"))), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.onKeyDown({ Escape: () => this._cancel() }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.onKeyDown({ Enter: () => this._save() }));
      } else {
        const holder = new grainjs__WEBPACK_IMPORTED_MODULE_7__.MultiHolder();
        const someValues = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(holder, this._values, (_use, values) => values.length <= maxRows ? values : values.slice(0, maxRows - 1));
        const noChoices = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(holder, someValues, (_use, values) => values.length === 0);
        return cssVerticalFlex(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(holder), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.maybe(this._mixed, () => [
          cssListBoxInactive(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__.cssBlockedCursor.className, this._disabled), row("Mixed configuration"))
        ]), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.maybe((use) => !use(this._mixed), () => [
          cssListBoxInactive(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__.cssBlockedCursor.className, this._disabled), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.maybe(noChoices, () => row("No choices configured")), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.domComputed(this._choiceOptionsByName, (choiceOptions) => grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.forEach(someValues, (val) => {
            var _a, _b, _c, _d, _e, _f, _g, _h;
            return row(cssTokenColorInactive(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("background-color", getFillColor(choiceOptions.get(val)) || "#FFFFFF"), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("color", getTextColor(choiceOptions.get(val)) || "#000000"), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-bold", (_b = (_a = choiceOptions.get(val)) == null ? void 0 : _a.fontBold) != null ? _b : false), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-underline", (_d = (_c = choiceOptions.get(val)) == null ? void 0 : _c.fontUnderline) != null ? _d : false), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-italic", (_f = (_e = choiceOptions.get(val)) == null ? void 0 : _e.fontItalic) != null ? _f : false), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("font-strikethrough", (_h = (_g = choiceOptions.get(val)) == null ? void 0 : _g.fontStrikethrough) != null ? _h : false), "T", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("choice-list-entry-color")), cssTokenLabel(val, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("choice-list-entry-label")));
          })), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.maybe((use) => use(this._values).length > maxRows, () => row((0,grainjs__WEBPACK_IMPORTED_MODULE_7__.dom)("span", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("choice-list-entry-label"), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.text((use) => `+${use(this._values).length - (maxRows - 1)} more`)))), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => this._startEditing()), cssListBoxInactive.cls("-disabled", this._disabled), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("choice-list-entry"))
        ]), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.maybe((use) => !use(this._disabled), () => [
          cssButtonRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_2__.primaryButton)(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.text((use) => use(this._mixed) ? "Reset" : "Edit"), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", () => this._startEditing()), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("choice-list-entry-edit")))
        ]));
      }
    });
  }
  _startEditing() {
    if (!this._disabled.get()) {
      this._isEditing.set(true);
    }
  }
  _save() {
    const tokenField = this._tokenFieldHolder.get();
    if (!tokenField) {
      return;
    }
    const tokens = tokenField.tokensObs.get();
    const tokenInputVal = tokenField.getTextInputValue();
    if (tokenInputVal !== "") {
      tokens.push(new ChoiceItem(tokenInputVal, null));
    }
    const newTokens = uniqBy(tokens, (t) => t.label);
    const newValues = newTokens.map((t) => t.label);
    const newOptions = /* @__PURE__ */ new Map();
    const keys = [
      "fillColor",
      "textColor",
      "fontBold",
      "fontItalic",
      "fontStrikethrough",
      "fontUnderline"
    ];
    for (const t of newTokens) {
      if (t.options) {
        const options = {};
        keys.filter((k) => t.options[k] !== void 0).forEach((k) => options[k] = t.options[k]);
        newOptions.set(t.label, options);
      }
    }
    if (!isEqual(this._values.get(), newValues) || !isEqual(this._choiceOptionsByName.get(), newOptions)) {
      this._onSave(newValues, newOptions, new RenameMap(newTokens));
    } else {
      this._cancel();
    }
  }
  _cancel() {
    this._isEditing.set(false);
  }
  _focusOnOpen(elem) {
    setTimeout(() => focus(elem), 0);
  }
  _renderToken(token) {
    var _a, _b, _c, _d;
    const fillColorObs = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(null, getFillColor(token.options));
    const textColorObs = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(null, getTextColor(token.options));
    const fontBoldObs = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(null, (_a = token.options) == null ? void 0 : _a.fontBold);
    const fontItalicObs = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(null, (_b = token.options) == null ? void 0 : _b.fontItalic);
    const fontUnderlineObs = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(null, (_c = token.options) == null ? void 0 : _c.fontUnderline);
    const fontStrikethroughObs = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(null, (_d = token.options) == null ? void 0 : _d.fontStrikethrough);
    const choiceText = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(null, token.label);
    const rename = async (to) => {
      const tokenField = this._tokenFieldHolder.get();
      if (!tokenField) {
        return;
      }
      to = to.trim();
      if (!to) {
        choiceText.set(token.label);
      } else {
        tokenField.replaceToken(token.label, ChoiceItem.from(token).rename(to));
      }
    };
    function stopPropagation(ev) {
      ev.stopPropagation();
    }
    const focusOnNew = () => {
      const tokenField = this._tokenFieldHolder.get();
      if (!tokenField) {
        return;
      }
      focus(tokenField.getTextInput());
    };
    const tokenColorAndLabel = cssColorAndLabel(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(fillColorObs), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(textColorObs), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(choiceText), (0,app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__.colorButton)({
      styleOptions: {
        textColor: new app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__.ColorOption({ color: textColorObs, defaultColor: "#000000" }),
        fillColor: new app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_3__.ColorOption({ color: fillColorObs, allowsNone: true, noneText: "none", defaultColor: "#FFFFFF" }),
        fontBold: fontBoldObs,
        fontItalic: fontItalicObs,
        fontUnderline: fontUnderlineObs,
        fontStrikethrough: fontStrikethroughObs
      },
      onSave: async () => {
        const tokenField = this._tokenFieldHolder.get();
        if (!tokenField) {
          return;
        }
        const fillColor = fillColorObs.get();
        const textColor = textColorObs.get();
        const fontBold = fontBoldObs.get();
        const fontItalic = fontItalicObs.get();
        const fontUnderline = fontUnderlineObs.get();
        const fontStrikethrough = fontStrikethroughObs.get();
        tokenField.replaceToken(token.label, ChoiceItem.from(token).changeStyle({
          fillColor,
          textColor,
          fontBold,
          fontItalic,
          fontUnderline,
          fontStrikethrough
        }));
      },
      onClose: () => {
        var _a2;
        return (_a2 = this._editorContainer) == null ? void 0 : _a2.focus();
      },
      colorPickerDomArgs: [
        grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("token-color-picker")
      ]
    }), (0,app_client_ui2018_editableLabel__WEBPACK_IMPORTED_MODULE_5__.editableLabel)(choiceText, {
      save: rename,
      inputArgs: [
        (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("token-label"),
        grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("keydown", stopPropagation),
        grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("copy", stopPropagation),
        grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("cut", stopPropagation),
        grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("paste", stopPropagation),
        grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.onKeyDown({
          Enter: focusOnNew,
          Escape: () => {
            var _a2;
            return (_a2 = tokenColorAndLabel.parentElement) == null ? void 0 : _a2.focus();
          }
        }),
        grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", stopPropagation),
        grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls(cssEditableLabelInput.className)
      ],
      args: [grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls(cssEditableLabel.className)]
    }));
    return [
      tokenColorAndLabel,
      grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.onKeyDown({ Escape$: () => this._cancel() })
    ];
  }
}
function focus(elem) {
  elem.focus();
  elem.setSelectionRange(elem.value.length, elem.value.length);
  elem.scrollTo(0, elem.scrollHeight);
}
function row(...domArgs) {
  return cssListRow(...domArgs, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("choice-list-entry-row"));
}
function getTextColor(choiceOptions) {
  return choiceOptions == null ? void 0 : choiceOptions.textColor;
}
function getFillColor(choiceOptions) {
  return choiceOptions == null ? void 0 : choiceOptions.fillColor;
}
function clipboardToChoices(clipboard) {
  const maybeTokens = clipboard.getData("application/json");
  if (maybeTokens && isJSON(maybeTokens)) {
    const tokens = JSON.parse(maybeTokens);
    if (Array.isArray(tokens) && tokens.every((t) => ChoiceItemChecker.test(t))) {
      tokens.forEach((t) => t.previousLabel = null);
      return tokens;
    }
  }
  const maybeText = clipboard.getData("text/plain");
  if (maybeText) {
    return maybeText.split("\n").map((label) => new ChoiceItem(label, null));
  }
  return [];
}
function isJSON(string) {
  try {
    JSON.parse(string);
    return true;
  } catch (e) {
    return false;
  }
}
const cssListBox = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  width: 100%;
  padding: 1px;
  line-height: 1.5;
  padding-left: 4px;
  padding-right: 4px;
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.choiceEntryBorderHover};
  border-radius: 4px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.choiceEntryBg};
`);
const cssListBoxInactive = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(cssListBox, `
  cursor: pointer;
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.choiceEntryBorder};

  &:hover:not(&-disabled) {
    border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.choiceEntryBorderHover};
  }
  &-disabled {
    opacity: 0.6;
  }
`);
const cssListRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: flex;
  margin-top: 4px;
  margin-bottom: 4px;
  padding: 4px 8px;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.dark};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.mediumGreyOpaque};
  border-radius: 3px;
  text-overflow: ellipsis;
`);
const cssTokenField = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  &.token-dragactive {
    cursor: grabbing;
  }
`);
const cssToken = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(cssListRow, `
  position: relative;
  display: flex;
  justify-content: space-between;
  user-select: none;
  cursor: grab;

  &.selected {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.darkGrey};
  }
  &.token-dragging {
    pointer-events: none;
    z-index: 1;
    opacity: 0.7;
  }
  .${cssTokenField.className}.token-dragactive & {
    cursor: unset;
  }
  &:focus {
    outline: none;
  }
`);
const cssTokenColorInactive = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  flex-shrink: 0;
  width: 18px;
  height: 18px;
  display: grid;
  place-items: center;
`);
const cssTokenLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("span", `
  margin-left: 6px;
  display: inline-block;
  text-overflow: ellipsis;
  white-space: pre;
  overflow: hidden;
`);
const cssEditableLabelInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("input", `
  display: inline-block;
  text-overflow: ellipsis;
  white-space: pre;
  overflow: hidden;
`);
const cssEditableLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  margin-left: 6px;
  text-overflow: ellipsis;
  white-space: pre;
  overflow: hidden;
`);
const cssTokenInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("input", `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.choiceEntryBg};
  padding-top: 4px;
  padding-bottom: 4px;
  overflow: hidden;
  text-overflow: ellipsis;
  flex: auto;
  -webkit-appearance: none;
  -moz-appearance: none;
  border: none;
  outline: none;
`);
const cssInputWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  margin-top: 4px;
  margin-bottom: 4px;
  position: relative;
  flex: auto;
  display: flex;
`);
const cssFlex = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: flex;
`);
const cssColorAndLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(cssFlex, `
  max-width: calc(100% - 20px);
`);
const cssVerticalFlex = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  width: 100%;
  display: flex;
  flex-direction: column;
`);
const cssButtonRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  gap: 8px;
  display: flex;
  margin-top: 8px;
  margin-bottom: 16px;
`);
const cssDeleteButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: inline;
  float: right;
  margin-left: 4px;
  cursor: pointer;
  .${cssTokenField.className}.token-dragactive & {
    cursor: unset;
  }
`);
const cssDeleteIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_6__.icon, `
   --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.slate};
   &:hover {
     --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.dark};
   }
 `);


/***/ }),

/***/ "./app/client/widgets/ChoiceTextBox.ts":
/*!*********************************************!*\
  !*** ./app/client/widgets/ChoiceTextBox.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChoiceTextBox": () => (/* binding */ ChoiceTextBox),
/* harmony export */   "getRenderFillColor": () => (/* binding */ getRenderFillColor),
/* harmony export */   "getRenderTextColor": () => (/* binding */ getRenderTextColor)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_widgets_ChoiceListEntry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/widgets/ChoiceListEntry */ "./app/client/widgets/ChoiceListEntry.ts");
/* harmony import */ var app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/widgets/ChoiceToken */ "./app/client/widgets/ChoiceToken.ts");
/* harmony import */ var app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/widgets/NTextBox */ "./app/client/widgets/NTextBox.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));








const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("ChoiceTextBox");
function getRenderFillColor(choiceOptions) {
  var _a;
  return (_a = choiceOptions == null ? void 0 : choiceOptions.fillColor) != null ? _a : app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_FILL_COLOR;
}
function getRenderTextColor(choiceOptions) {
  var _a;
  return (_a = choiceOptions == null ? void 0 : choiceOptions.textColor) != null ? _a : app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_TEXT_COLOR;
}
class ChoiceTextBox extends app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_6__.NTextBox {
  constructor(field) {
    super(field);
    this._choices = this.options.prop("choices");
    this._choiceOptions = this.options.prop("choiceOptions");
    this._choiceValues = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(this, (use) => use(this._choices) || []);
    this._choiceValuesSet = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(this, this._choiceValues, (_use, values) => new Set(values));
    this._choiceOptionsByName = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(this, (use) => toMap(use(this._choiceOptions)));
  }
  buildDom(row) {
    const value = row.cells[this.field.colId()];
    const isSingle = this.field.viewSection().parentKey() === "single";
    const maybeDropDownCssChoiceEditIcon = isSingle ? cssChoiceEditIcon("Dropdown") : null;
    return cssChoiceField(cssChoiceTextWrapper(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("justify-content", (use) => use(this.alignment) === "right" ? "flex-end" : use(this.alignment)), maybeDropDownCssChoiceEditIcon, grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.domComputed((use) => {
      if (this.isDisposed() || use(row._isAddRow)) {
        return null;
      }
      const formattedValue = use(this.valueFormatter).formatAny(use(value));
      if (formattedValue === "") {
        return null;
      }
      return (0,app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_5__.choiceToken)(formattedValue, __spreadProps(__spreadValues({}, use(this._choiceOptionsByName).get(formattedValue) || {}), {
        invalid: !use(this._choiceValuesSet).has(formattedValue)
      }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls(cssChoiceText.className), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("choice-token"));
    })));
  }
  buildConfigDom() {
    const disabled = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(null, (use) => use(this.field.disableModify) || use(use(this.field.column).disableEditData) || use(this.field.config.options.disabled("choices")));
    const mixed = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(null, (use) => !use(disabled) && (use(this.field.config.options.mixed("choices")) || use(this.field.config.options.mixed("choiceOptions"))));
    return [
      super.buildConfigDom(),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__.cssLabel)(t("CHOICES")),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__.cssRow)(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(disabled), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(mixed), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.create(app_client_widgets_ChoiceListEntry__WEBPACK_IMPORTED_MODULE_4__.ChoiceListEntry, this._choiceValues, this._choiceOptionsByName, this.save.bind(this), disabled, mixed))
    ];
  }
  buildTransformConfigDom() {
    return this.buildConfigDom();
  }
  getChoiceValuesSet() {
    return this._choiceValuesSet;
  }
  getChoiceOptions() {
    return this._choiceOptionsByName;
  }
  save(choices, choiceOptions, renames) {
    const options = {
      choices,
      choiceOptions: toObject(choiceOptions)
    };
    return this.field.config.updateChoices(renames, options);
  }
}
function toMap(choiceOptions) {
  if (!choiceOptions) {
    return /* @__PURE__ */ new Map();
  }
  return new Map(Object.entries(choiceOptions));
}
function toObject(choiceOptions) {
  const object = {};
  for (const [choice, options] of choiceOptions.entries()) {
    object[choice] = options;
  }
  return object;
}
const cssChoiceField = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div.field_clip", `
  padding: 0 3px;
`);
const cssChoiceTextWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  display: flex;
  width: 100%;
  min-width: 0px;
  overflow: hidden;
`);
const cssChoiceText = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  margin: 2px;
  height: min-content;
  line-height: 16px;
`);
const cssChoiceEditIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_3__.icon, `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.colors.slate};
  display: block;
  height: inherit;
`);


/***/ }),

/***/ "./app/client/widgets/ChoiceToken.ts":
/*!*******************************************!*\
  !*** ./app/client/widgets/ChoiceToken.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_FILL_COLOR": () => (/* binding */ DEFAULT_FILL_COLOR),
/* harmony export */   "DEFAULT_TEXT_COLOR": () => (/* binding */ DEFAULT_TEXT_COLOR),
/* harmony export */   "choiceToken": () => (/* binding */ choiceToken),
/* harmony export */   "cssChoiceACItem": () => (/* binding */ cssChoiceACItem),
/* harmony export */   "cssChoiceToken": () => (/* binding */ cssChoiceToken)
/* harmony export */ });
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");


const DEFAULT_FILL_COLOR = app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.colors.mediumGreyOpaque.value;
const DEFAULT_TEXT_COLOR = "#000000";
function choiceToken(label, options, ...args) {
  const {
    fillColor,
    textColor,
    fontBold,
    fontItalic,
    fontUnderline,
    fontStrikethrough,
    invalid
  } = options;
  return cssChoiceToken(label, grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.style("background-color", fillColor != null ? fillColor : DEFAULT_FILL_COLOR), grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.style("color", textColor != null ? textColor : DEFAULT_TEXT_COLOR), grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.cls("font-bold", fontBold != null ? fontBold : false), grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.cls("font-underline", fontUnderline != null ? fontUnderline : false), grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.cls("font-italic", fontItalic != null ? fontItalic : false), grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.cls("font-strikethrough", fontStrikethrough != null ? fontStrikethrough : false), invalid ? cssChoiceToken.cls("-invalid") : null, ...args);
}
const cssChoiceToken = (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.styled)("div", `
  display: inline-block;
  padding: 1px 4px;
  border-radius: 3px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: pre;

  &-invalid {
    background-color: white !important;
    box-shadow: inset 0 0 0 1px ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.colors.error};
  }
`);
const ADD_NEW_HEIGHT = "37px";
const cssChoiceACItem = (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.styled)("li", `
  display: block;
  font-family: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.vars.fontFamily};
  white-space: pre;
  overflow: hidden;
  text-overflow: ellipsis;
  outline: none;
  padding: var(--weaseljs-menu-item-padding, 8px 24px);
  cursor: pointer;

  &.selected {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.autocompleteChoiceSelectedBg};
  }
  &-with-new {
    scroll-margin-bottom: ${ADD_NEW_HEIGHT};
  }
  &-new {
    display: flex;
    align-items: center;
    position: sticky;
    bottom: 0px;
    height: ${ADD_NEW_HEIGHT};
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.menuBg};
    border-top: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.theme.menuBorder};
    scroll-margin-bottom: initial;
  }
`);


/***/ }),

/***/ "./app/client/widgets/ConditionalStyle.ts":
/*!************************************************!*\
  !*** ./app/client/widgets/ConditionalStyle.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConditionalStyle": () => (/* binding */ ConditionalStyle)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui_FieldConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/FieldConfig */ "./app/client/ui/FieldConfig.ts");
/* harmony import */ var app_client_ui_GristTooltips__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui/GristTooltips */ "./app/client/ui/GristTooltips.ts");
/* harmony import */ var app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui/tooltips */ "./app/client/ui/tooltips.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/ColorSelect */ "./app/client/ui2018/ColorSelect.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_widgets_FieldEditor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/widgets/FieldEditor */ "./app/client/widgets/FieldEditor.ts");
/* harmony import */ var app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/widgets/FormulaEditor */ "./app/client/widgets/FormulaEditor.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");












const debounce = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.makeTestId)("test-widget-style-");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("ConditionalStyle");
class ConditionalStyle extends grainjs__WEBPACK_IMPORTED_MODULE_11__.Disposable {
  constructor(_label, _ruleOwner, _gristDoc, _disabled) {
    super();
    this._label = _label;
    this._ruleOwner = _ruleOwner;
    this._gristDoc = _gristDoc;
    this._disabled = _disabled;
    this._dataChangeTrigger = grainjs__WEBPACK_IMPORTED_MODULE_11__.Observable.create(this, 0);
    this._currentRecord = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(this, (use) => {
      if (!use(this._ruleOwner.hasRules)) {
        return;
      }
      void use(this._dataChangeTrigger);
      const tableId = use(_ruleOwner.tableId);
      const tableData = _gristDoc.docData.getTable(tableId);
      const cursor = use(_gristDoc.cursorPosition);
      if (!cursor || typeof cursor.rowId !== "number") {
        return void 0;
      }
      return tableData.getRecord(cursor.rowId);
    });
    const debouncedUpdate = debounce(() => {
      if (this._dataChangeTrigger.isDisposed()) {
        return;
      }
      this._dataChangeTrigger.set(this._dataChangeTrigger.get() + 1);
    }, 0);
    grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(this, (use) => {
      const tableId = use(_ruleOwner.tableId);
      const tableData = _gristDoc.docData.getTable(tableId);
      return tableData ? use.owner.autoDispose(tableData.tableActionEmitter.addListener(debouncedUpdate)) : null;
    });
  }
  buildDom() {
    return [
      cssRow({ style: "margin-top: 16px" }, (0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_3__.withInfoTooltip)((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__.textButton)(t("Add conditional style"), testId("add-conditional-style"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._ruleOwner.addEmptyRule()), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.prop("disabled", this._disabled)), this._label === t("Row Style") ? app_client_ui_GristTooltips__WEBPACK_IMPORTED_MODULE_2__.GristTooltips.addRowConditionalStyle() : app_client_ui_GristTooltips__WEBPACK_IMPORTED_MODULE_2__.GristTooltips.addColumnConditionalStyle()), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.hide((use) => use(this._ruleOwner.hasRules))),
      grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.domComputedOwned((use) => use(this._ruleOwner.rulesCols), (owner, rules) => cssRuleList(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.show((use) => rules.length > 0 && (!this._disabled || !use(this._disabled))), ...rules.map((column, ruleIndex) => {
        const textColor = this._buildStyleOption(owner, ruleIndex, "textColor");
        const fillColor = this._buildStyleOption(owner, ruleIndex, "fillColor");
        const fontBold = this._buildStyleOption(owner, ruleIndex, "fontBold");
        const fontItalic = this._buildStyleOption(owner, ruleIndex, "fontItalic");
        const fontUnderline = this._buildStyleOption(owner, ruleIndex, "fontUnderline");
        const fontStrikethrough = this._buildStyleOption(owner, ruleIndex, "fontStrikethrough");
        const save = async () => {
          await this._ruleOwner.rulesStyles.save();
        };
        const currentValue = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(owner, (use) => {
          const record = use(this._currentRecord);
          if (!record) {
            return null;
          }
          const value = record[use(column.colId)];
          return value != null ? value : null;
        });
        const hasError = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(owner, (use) => {
          return !(0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.isValidRuleValue)(use(currentValue));
        });
        const errorMessage = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(owner, (use) => {
          const value = use(currentValue);
          return !use(hasError) ? "" : (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_10__.isRaisedException)(value) ? t("Error in style rule") : t("Rule must return True or False");
        });
        return (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.dom)("div", testId(`conditional-rule-${ruleIndex}`), testId(`conditional-rule`), cssLineLabel("IF..."), cssColumnsRow(cssLeftColumn(this._buildRuleFormula(column.formula, column, hasError), cssRuleError(grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.text(errorMessage), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.show(hasError), testId(`rule-error-${ruleIndex}`)), (0,app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_5__.colorSelect)({
          textColor: new app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_5__.ColorOption({ color: textColor, allowsNone: true, noneText: "default" }),
          fillColor: new app_client_ui2018_ColorSelect__WEBPACK_IMPORTED_MODULE_5__.ColorOption({ color: fillColor, allowsNone: true, noneText: "none" }),
          fontBold,
          fontItalic,
          fontUnderline,
          fontStrikethrough
        }, {
          onSave: save,
          placeholder: this._label || "Conditional Style"
        })), cssRemoveButton("Remove", testId(`remove-rule-${ruleIndex}`), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._ruleOwner.removeRule(ruleIndex)))));
      }))),
      cssRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_4__.textButton)(t("Add another rule"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("click", () => this._ruleOwner.addEmptyRule()), testId("add-another-rule"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.prop("disabled", (use) => this._disabled && use(this._disabled))), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.show((use) => use(this._ruleOwner.hasRules)))
    ];
  }
  _buildStyleOption(owner, index, option) {
    const obs = grainjs__WEBPACK_IMPORTED_MODULE_11__.Computed.create(owner, (use) => {
      var _a;
      const styles = use(this._ruleOwner.rulesStyles);
      return (_a = styles == null ? void 0 : styles[index]) == null ? void 0 : _a[option];
    });
    obs.onWrite((value) => {
      var _a, _b;
      const list = Array.from((_a = this._ruleOwner.rulesStyles.peek()) != null ? _a : []);
      list[index] = (_b = list[index]) != null ? _b : {};
      list[index][option] = value;
      this._ruleOwner.rulesStyles(list);
    });
    return obs;
  }
  _buildRuleFormula(formula, column, hasError) {
    return (0,app_client_ui_FieldConfig__WEBPACK_IMPORTED_MODULE_1__.cssFieldFormula)(formula, { gristTheme: this._gristDoc.currentTheme, maxLines: 1 }, grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.cls("formula_field_sidepane"), grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.cls(cssErrorBorder.className, hasError), { tabIndex: "-1" }, grainjs__WEBPACK_IMPORTED_MODULE_11__.dom.on("focus", (_, refElem) => {
      const section = this._gristDoc.viewModel.activeSection();
      const vsi = section.viewInstance();
      const editorHolder = (0,app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_9__.openFormulaEditor)({
        gristDoc: this._gristDoc,
        editingFormula: section.editingFormula,
        column,
        editRow: vsi == null ? void 0 : vsi.moveEditRowToCursor(),
        refElem,
        setupCleanup: app_client_widgets_FieldEditor__WEBPACK_IMPORTED_MODULE_8__.setupEditorCleanup,
        canDetach: false
      });
      this._gristDoc.fieldEditorHolder.autoDispose(editorHolder);
    }));
  }
}
const cssIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_7__.icon, `
  flex: 0 0 auto;
`);
const cssLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  text-transform: uppercase;
  margin: 16px 16px 12px 16px;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.theme.text};
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.vars.xsmallFontSize};
`);
const cssRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  display: flex;
  margin: 8px 16px;
  align-items: center;
  &-top-space {
    margin-top: 24px;
  }
  &-disabled {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.theme.disabledText};
  }
`);
const cssRemoveButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(cssIcon, `
  flex: none;
  margin: 6px;
  margin-right: 0px;
  transform: translateY(4px);
  cursor: pointer;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.theme.controlSecondaryFg};
  &:hover {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.theme.controlFg};
  }
`);
const cssLineLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(cssLabel, `
  margin-top: 0px;
  margin-bottom: 0px;
`);
const cssRuleList = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin-top: 16px;
  margin-bottom: 12px;
`);
const cssErrorBorder = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  border-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_6__.theme.inputInvalid};
`);
const cssRuleError = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_9__.cssError, `
  margin: 2px 0px 10px 0px;
`);
const cssColumnsRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)(cssRow, `
  align-items: flex-start;
  margin-top: 0px;
  margin-bottom: 0px;
`);
const cssLeftColumn = (0,grainjs__WEBPACK_IMPORTED_MODULE_11__.styled)("div", `
  overflow: hidden;
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 4px;
`);


/***/ }),

/***/ "./app/client/widgets/CurrencyPicker.ts":
/*!**********************************************!*\
  !*** ./app/client/widgets/CurrencyPicker.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildCurrencyPicker": () => (/* binding */ buildCurrencyPicker)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_lib_ACSelect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/ACSelect */ "./app/client/lib/ACSelect.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/lib/ACIndex */ "./app/client/lib/ACIndex.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_common_Locales__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/common/Locales */ "./app/common/Locales.ts");






const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("CurrencyPicker");
function buildCurrencyPicker(owner, currency, onSave, { defaultCurrencyLabel, disabled }) {
  const currencyItems = app_common_Locales__WEBPACK_IMPORTED_MODULE_5__.currencies.map((item) => ({
    value: item.code,
    label: `${item.code} ${item.name}`,
    cleanText: `${item.code} ${item.name}`.trim().toLowerCase()
  }));
  currencyItems.unshift({
    label: defaultCurrencyLabel,
    value: defaultCurrencyLabel,
    cleanText: defaultCurrencyLabel.toLowerCase()
  });
  const valueObs = grainjs__WEBPACK_IMPORTED_MODULE_2__.Computed.create(owner, (use) => use(currency) || defaultCurrencyLabel);
  const acIndex = new app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_3__.ACIndexImpl(currencyItems, 200, true);
  return (0,app_client_lib_ACSelect__WEBPACK_IMPORTED_MODULE_1__.buildACSelect)(owner, {
    acIndex,
    valueObs,
    disabled,
    save(_, item) {
      if (!item) {
        throw new Error(t("Invalid currency"));
      }
      onSave(item.value === defaultCurrencyLabel ? void 0 : item.value);
    }
  }, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("currency-autocomplete"));
}


/***/ }),

/***/ "./app/client/widgets/DiffBox.ts":
/*!***************************************!*\
  !*** ./app/client/widgets/DiffBox.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiffBox": () => (/* binding */ DiffBox)
/* harmony export */ });
/* harmony import */ var app_client_widgets_NewAbstractWidget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/widgets/NewAbstractWidget */ "./app/client/widgets/NewAbstractWidget.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var diff_match_patch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! diff-match-patch */ "./node_modules/diff-match-patch/index.js");
/* harmony import */ var diff_match_patch__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(diff_match_patch__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");





class DiffBox extends app_client_widgets_NewAbstractWidget__WEBPACK_IMPORTED_MODULE_0__.NewAbstractWidget {
  constructor() {
    super(...arguments);
    this._diffTool = new diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.diff_match_patch();
  }
  buildConfigDom() {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("div");
  }
  buildDom(row) {
    const formattedValue = grainjs__WEBPACK_IMPORTED_MODULE_4__.Computed.create(null, (use) => {
      if (use(row._isAddRow) || this.isDisposed() || use(this.field.displayColModel).isDisposed()) {
        return [];
      }
      const value = use(row.cells[use(use(this.field.displayColModel).colId)]);
      const formatter = use(this.valueFormatter);
      return this._prepareCellDiff(value, formatter);
    });
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("div.field_clip", grainjs__WEBPACK_IMPORTED_MODULE_4__.dom.autoDispose(formattedValue), grainjs__WEBPACK_IMPORTED_MODULE_4__.dom.style("text-align", this.options.prop("alignment")), grainjs__WEBPACK_IMPORTED_MODULE_4__.dom.cls("text_wrapping", (use) => Boolean(use(this.options.prop("wrap")))), (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.inlineStyle)("--grist-diff-color", "#000000"), (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.inlineStyle)("--grist-diff-background-color", "#00000000"), grainjs__WEBPACK_IMPORTED_MODULE_4__.dom.forEach(formattedValue, ([code, txt]) => {
      if (code === diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.DIFF_DELETE) {
        return (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("span.diff-parent", txt);
      } else if (code === diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.DIFF_INSERT) {
        return (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("span.diff-remote", txt);
      } else if (code === DIFF_LOCAL) {
        return (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("span.diff-local", txt);
      } else {
        return (0,grainjs__WEBPACK_IMPORTED_MODULE_4__.dom)("span.diff-common", txt);
      }
    }));
  }
  _prepareCellDiff(value, formatter) {
    if (!(0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.isVersions)(value)) {
      return [[diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.DIFF_EQUAL, formatter.formatAny(value)]];
    }
    const versions = value[1];
    if (!("local" in versions)) {
      return this._prepareTextDiff(formatter.formatAny(versions.parent), formatter.formatAny(versions.remote));
    } else if (!("remote" in versions)) {
      return this._prepareTextDiff(formatter.formatAny(versions.parent), formatter.formatAny(versions.local)).map(([code, txt]) => [code === diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.DIFF_INSERT ? DIFF_LOCAL : code, txt]);
    }
    return [
      [diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.DIFF_DELETE, formatter.formatAny(versions.parent)],
      [DIFF_LOCAL, formatter.formatAny(versions.local)],
      [diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.DIFF_INSERT, formatter.formatAny(versions.remote)]
    ];
  }
  _prepareTextDiff(txt1, txt2) {
    const diffs = this._diffTool.diff_main(txt1, txt2);
    this._diffTool.diff_cleanupSemantic(diffs);
    if (diffs.length > 2 && this._notDiffWorthy(txt1, diffs.length) && this._notDiffWorthy(txt2, diffs.length)) {
      return [[diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.DIFF_DELETE, txt1], [diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.DIFF_INSERT, txt2]];
    }
    if (diffs.length === 1 && diffs[0][0] === diff_match_patch__WEBPACK_IMPORTED_MODULE_3__.DIFF_DELETE) {
      diffs.push([1, "\u2205"]);
    }
    return diffs;
  }
  _notDiffWorthy(txt, parts) {
    return txt.length < 5 * parts || this._isMostlyNumeric(txt);
  }
  _isMostlyNumeric(txt) {
    return [...txt].filter((c) => c >= "0" && c <= "9").length > txt.length / 2;
  }
}
const DIFF_LOCAL = 2;


/***/ }),

/***/ "./app/client/widgets/DiscussionEditor.ts":
/*!************************************************!*\
  !*** ./app/client/widgets/DiscussionEditor.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CellDiscussionPopup": () => (/* binding */ CellDiscussionPopup),
/* harmony export */   "CellWithComments": () => (/* binding */ CellWithComments),
/* harmony export */   "DiscussionPanel": () => (/* binding */ DiscussionPanel),
/* harmony export */   "EmptyCell": () => (/* binding */ EmptyCell)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_lib_FocusLayer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/FocusLayer */ "./app/client/lib/FocusLayer.ts");
/* harmony import */ var app_client_lib_koArrayWrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/koArrayWrap */ "./app/client/lib/koArrayWrap.ts");
/* harmony import */ var app_client_lib_localStorageObs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/lib/localStorageObs */ "./app/client/lib/localStorageObs.ts");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_models_rowset__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/models/rowset */ "./app/client/models/rowset.ts");
/* harmony import */ var app_client_ui_UserImage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui/UserImage */ "./app/client/ui/UserImage.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui2018/checkbox */ "./app/client/ui2018/checkbox.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/popper.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var popper_max_size_modifier__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! popper-max-size-modifier */ "./node_modules/popper-max-size-modifier/dist/popper-max-size-modifier.esm.js");
/* harmony import */ var app_client_ui_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/client/ui/forms */ "./app/client/ui/forms.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));


















const flatMap = __webpack_require__(/*! lodash/flatMap */ "./node_modules/lodash/flatMap.js");

const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.makeTestId)("test-discussion-");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("DiscussionEditor");
const COMMENTS_LIMIT = 200;
class CellWithComments extends grainjs__WEBPACK_IMPORTED_MODULE_13__.Disposable {
  constructor(gristDoc) {
    super();
    this.gristDoc = gristDoc;
  }
  async comment(text) {
  }
  async reply(comment, text) {
    const author = commentAuthor(this.gristDoc);
    await this.gristDoc.docData.bundleActions(t("Reply to a comment"), () => {
      var _a, _b;
      return Promise.all([
        this.gristDoc.docModel.cells.sendTableAction([
          "AddRecord",
          null,
          {
            parentId: comment.id.peek(),
            root: false,
            type: app_common_gristTypes__WEBPACK_IMPORTED_MODULE_12__.CellInfoType.COMMENT,
            userRef: (_a = author == null ? void 0 : author.ref) != null ? _a : "",
            content: JSON.stringify({
              userName: (_b = author == null ? void 0 : author.name) != null ? _b : "",
              timeCreated: Date.now(),
              timeUpdated: null,
              text
            }),
            tableRef: comment.tableRef.peek(),
            colRef: comment.colRef.peek(),
            rowId: comment.rowId.peek()
          }
        ])
      ]);
    });
  }
  resolve(comment) {
    var _a;
    const author = commentAuthor(this.gristDoc);
    comment.resolved(true);
    comment.resolvedBy((_a = author == null ? void 0 : author.email) != null ? _a : "");
    return comment.timeUpdated.setAndSave(Date.now());
  }
  async update(comment, text) {
    const timeUpdated = Date.now();
    comment.text(text.trim());
    return comment.timeUpdated.setAndSave(timeUpdated);
  }
  async open(comment) {
    comment.resolved(false);
    comment.resolvedBy("");
    return comment.timeUpdated.setAndSave(Date.now());
  }
  async remove(comment) {
    await comment._table.sendTableAction(["RemoveRecord", comment.id.peek()]);
  }
}
class EmptyCell extends CellWithComments {
  constructor(props) {
    super(props.gristDoc);
    this.props = props;
    const { column, rowId } = props;
    this.comments = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(this, (use) => {
      const fromColumn = use(use(column.cells).getObservable());
      const forRow = fromColumn.filter((d) => use(d.rowId) === rowId && use(d.root) && !use(d.hidden));
      return forRow;
    });
  }
  async comment(text) {
    var _a, _b;
    const props = this.props;
    const author = commentAuthor(props.gristDoc);
    const now = Date.now();
    const addComment = [
      "AddRecord",
      "_grist_Cells",
      null,
      {
        tableRef: props.tableRef,
        colRef: props.column.id.peek(),
        rowId: props.rowId,
        type: app_common_gristTypes__WEBPACK_IMPORTED_MODULE_12__.CellInfoType.COMMENT,
        root: true,
        userRef: (_a = author == null ? void 0 : author.ref) != null ? _a : "",
        content: JSON.stringify({
          timeCreated: now,
          text,
          userName: (_b = author == null ? void 0 : author.name) != null ? _b : ""
        })
      }
    ];
    await props.gristDoc.docData.sendActions([addComment], t("Started discussion"));
  }
}
class CellDiscussionPopup extends grainjs__WEBPACK_IMPORTED_MODULE_13__.Disposable {
  constructor(props) {
    super();
    this.props = props;
    this._isEmpty = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(this, (use) => {
      const discussions = use(props.topic.comments);
      const notResolved = discussions.filter((d) => !use(d.resolved));
      const visible = notResolved.filter((d) => !use(d.hidden));
      return visible.length === 0;
    });
    const content = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.dom)("div", testId("popup"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.domComputed((use) => use(this._isEmpty), (empty) => {
      if (!empty) {
        return grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(CellWithCommentsView, {
          topic: props.topic,
          readonly: props.gristDoc.isReadonly,
          gristDoc: props.gristDoc,
          panel: false,
          closeClicked: props.closeClicked
        });
      } else {
        return grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(EmptyCellView, {
          closeClicked: props.closeClicked,
          onSave: (text) => this.props.topic.comment(text)
        });
      }
    }));
    buildPopup(this, props.domEl, content, cellPopperOptions, this.props.closeClicked);
  }
}
class EmptyCellView extends grainjs__WEBPACK_IMPORTED_MODULE_13__.Disposable {
  constructor(props) {
    super();
    this.props = props;
    this._newText = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(this, "");
  }
  buildDom() {
    return cssTopic(testId("topic-empty"), testId("topic"), this._createCommentEntry(), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.onKeyDown({
      Escape: () => {
        var _a, _b;
        return (_b = (_a = this.props).closeClicked) == null ? void 0 : _b.call(_a);
      }
    }));
  }
  _createCommentEntry() {
    return cssCommonPadding(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(CommentEntry, {
      mode: "start",
      text: this._newText,
      onSave: () => this.props.onSave(this._newText.get()),
      onCancel: () => {
        var _a, _b;
        return (_b = (_a = this.props).closeClicked) == null ? void 0 : _b.call(_a);
      },
      editorArgs: [{ placeholder: t("Write a comment") }],
      mainButton: t("Comment"),
      buttons: [t("Cancel")],
      args: [testId("editor-start")]
    }));
  }
}
class CellWithCommentsView extends grainjs__WEBPACK_IMPORTED_MODULE_13__.Disposable {
  constructor(props) {
    super();
    this.props = props;
    this._newText = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(this, "");
    this._commentInEdit = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(this, null);
    this._closing = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(this, false);
    if (props.panel) {
      this._comments = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(this, (use) => use(props.topic.comments).filter((ds) => !use(ds.hidden) && use(ds.root)));
    } else {
      this._comments = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(this, (use) => use(props.topic.comments).filter((ds) => !use(ds.resolved) && !use(ds.hidden) && use(ds.root)));
    }
    this._commentsToRender = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(this, (use) => {
      const sorted = use(this._comments).sort((a, b) => {
        var _a, _b;
        return ((_a = use(a.timeCreated)) != null ? _a : 0) - ((_b = use(b.timeCreated)) != null ? _b : 0);
      });
      const start = Math.max(0, sorted.length - COMMENTS_LIMIT);
      return sorted.slice(start);
    });
    this._truncated = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(this, (use) => use(this._comments).length > COMMENTS_LIMIT);
  }
  buildDom() {
    return cssTopic(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe(this._truncated, () => cssTruncate(t("Showing last {{nb}} comments", { nb: COMMENTS_LIMIT }))), cssTopic.cls("-panel", this.props.panel), domOnCustom(CommentView.EDIT, (s) => this._onEditComment(s)), domOnCustom(CommentView.CANCEL, (s) => this._onCancelEdit()), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.hide(this._closing), testId("topic"), testId("topic-filled"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe(!this.props.panel, () => cssHeaderBox(testId("topic-header"), (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.dom)("div", grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("align-self", "center"), "Comments"), cssSpacer(), cssHoverButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_10__.icon)("Popup"), testId("topic-button-panel"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", () => this.props.gristDoc.showTool("discussion")), { title: "Open panel" }), cssHeaderBox.cls("-border"))), this._discussionList = cssCommentList(testId("topic-comments"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.forEach(this._commentsToRender, (comment) => {
      return cssDiscussionWrapper(cssDiscussion(cssDiscussion.cls("-resolved", (use) => Boolean(use(comment.resolved))), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(CommentView, __spreadProps(__spreadValues({}, this.props), {
        comment
      }))));
    })), !this.props.panel ? this._createCommentEntry() : null, grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.onKeyDown({
      Escape: () => {
        var _a, _b;
        return (_b = (_a = this.props).closeClicked) == null ? void 0 : _b.call(_a);
      }
    }));
  }
  _onCancelEdit() {
    var _a;
    if (this._commentInEdit.get()) {
      (_a = this._commentInEdit.get()) == null ? void 0 : _a.isEditing.set(false);
    }
    this._commentInEdit.set(null);
  }
  _onEditComment(el) {
    var _a;
    if (this._commentInEdit.get()) {
      (_a = this._commentInEdit.get()) == null ? void 0 : _a.isEditing.set(false);
    }
    el.isEditing.set(true);
    this._commentInEdit.set(el);
  }
  async _save() {
    try {
      return await this.props.topic.comment(this._newText.get().trim());
    } catch (err) {
      return (0,app_client_models_errors__WEBPACK_IMPORTED_MODULE_4__.reportError)(err);
    } finally {
      this._newText.set("");
      this._discussionList.scrollTo(0, 1e4);
    }
  }
  _createCommentEntry() {
    return cssReplyBox(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(CommentEntry, {
      mode: "comment",
      text: this._newText,
      onSave: () => this._save(),
      onCancel: () => {
        var _a, _b;
        return (_b = (_a = this.props).closeClicked) == null ? void 0 : _b.call(_a);
      },
      mainButton: "Send",
      editorArgs: [{ placeholder: t("Comment") }],
      args: [testId("editor-add")]
    }));
  }
}
const _CommentView = class extends grainjs__WEBPACK_IMPORTED_MODULE_13__.Disposable {
  constructor(props) {
    super();
    this.props = props;
    this.isEditing = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(this, false);
    this.replying = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(this, false);
    this._expanded = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(this, false);
    this._replies = (0,app_client_lib_koArrayWrap__WEBPACK_IMPORTED_MODULE_2__.createObsArray)(this, props.comment.children());
    this._hasReplies = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(this, (use) => use(this._replies).length > 0);
    this._resolved = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(this, (use) => Boolean(use(props.comment.resolved)));
    this._showReplies = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(this, (use) => {
      return !this.props.isReply && use(this._replies).length > 0 && (use(this._expanded) || !use(this.props.comment.resolved));
    });
  }
  buildDom() {
    var _a;
    const comment = this.props.comment;
    const topic = this.props.topic;
    const user = (c) => comment.hidden() ? null : commentAuthor(this.props.gristDoc, c.userRef(), c.userName());
    this._bodyDom = cssComment(...(_a = this.props.args) != null ? _a : [], this.props.isReply ? testId("reply") : testId("comment"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", () => {
      if (this.props.isReply) {
        return;
      }
      trigger(this._bodyDom, _CommentView.SELECT, comment);
      if (!this._resolved.get()) {
        return;
      }
      this._expanded.set(!this._expanded.get());
    }), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe((use) => !use(comment.hidden), () => [
      cssColumns(buildAvatar(user(comment), testId("comment-avatar")), cssCommentHeader(cssCommentBodyHeader((0,grainjs__WEBPACK_IMPORTED_MODULE_13__.dom)("div", buildNick(user(comment), testId("comment-nick")), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.domComputed((use) => {
        var _a2, _b;
        return cssTime(formatTime((_b = (_a2 = use(comment.timeUpdated)) != null ? _a2 : use(comment.timeCreated)) != null ? _b : 0), testId("comment-time"));
      })), cssSpacer(), cssIconButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_10__.icon)("Dots"), testId("comment-menu"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("margin-left", `3px`), (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_11__.menu)(() => this._menuItems(), { placement: "bottom-start" }), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", stopPropagation))))),
      grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe((use) => !use(this.isEditing), () => grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.domComputed(comment.hidden, (hidden) => {
        if (hidden) {
          return cssCommentCensored("CENSORED", testId("comment-text"));
        }
        return cssCommentPre(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.text((use) => {
          var _a2;
          return (_a2 = use(comment.text)) != null ? _a2 : "";
        }), { style: "margin-top: 4px" }, testId("comment-text"));
      })),
      grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybeOwned(this.isEditing, (owner) => {
        var _a2;
        const text = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(owner, (_a2 = comment.text.peek()) != null ? _a2 : "");
        return grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(CommentEntry, {
          text,
          mainButton: t("Save"),
          buttons: [t("Cancel")],
          onSave: async () => {
            const value = text.get();
            text.set("");
            await topic.update(comment, value);
            trigger(this._bodyDom, _CommentView.CANCEL, this);
            this.isEditing.set(false);
          },
          onCancel: () => {
            trigger(this._bodyDom, _CommentView.CANCEL, this);
            this.isEditing.set(false);
          },
          mode: "start",
          args: [testId("editor-edit")]
        });
      }),
      grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe(this._showReplies, () => cssCommentReplyWrapper(testId("replies"), cssReplyList(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.forEach(this._replies, (commentReply) => {
        return (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.dom)("div", grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(_CommentView, __spreadProps(__spreadValues({}, this.props), {
          comment: commentReply,
          isReply: true,
          args: [grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("padding-left", "0px"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("padding-right", "0px")]
        })));
      })))),
      grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.maybe((use) => !use(this.isEditing) && !this.props.isReply && !use(comment.resolved), () => grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.domComputed((use) => {
        if (!use(this.replying)) {
          return cssReplyButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_10__.icon)("Message"), t("Reply"), testId("comment-reply-button"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", withStop(() => this.replying.set(true))), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("margin-left", (use2) => use2(this._hasReplies) ? "16px" : "0px"));
        } else {
          const text = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(null, "");
          return grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(CommentEntry, {
            text,
            args: [grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.style("margin-top", "8px"), testId("editor-reply")],
            mainButton: t("Reply"),
            buttons: [t("Cancel")],
            onSave: async () => {
              const value = text.get();
              this.replying.set(false);
              await topic.reply(comment, value);
            },
            onCancel: () => this.replying.set(false),
            onClick: (button) => {
              if (button === t("Cancel")) {
                this.replying.set(false);
              }
            },
            mode: "reply"
          });
        }
      })),
      grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.domComputed((use) => {
        if (!use(comment.resolved) || this.props.isReply) {
          return null;
        }
        return cssResolvedBlock(testId("comment-resolved"), (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_10__.icon)("FieldChoice"), cssResolvedText(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.text(t(`Marked as resolved`))));
      })
    ]));
    return this._bodyDom;
  }
  _menuItems() {
    var _a, _b;
    const currentUser = (_b = (_a = this.props.gristDoc.app.topAppModel.appObs.get()) == null ? void 0 : _a.currentUser) == null ? void 0 : _b.ref;
    const canResolve = !this.props.comment.resolved() && !this.props.isReply;
    const comment = this.props.comment;
    return [
      !canResolve ? null : (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_11__.menuItem)(() => this.props.topic.resolve(this.props.comment), t("Resolve")),
      !comment.resolved() ? null : (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_11__.menuItem)(() => this.props.topic.open(comment), t("Open")),
      (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_11__.menuItem)(() => this.props.topic.remove(comment), t("Remove"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("disabled", (use) => {
        return currentUser !== use(comment.userRef);
      })),
      (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_11__.menuItem)(() => this._edit(), t("Edit"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.cls("disabled", (use) => {
        return currentUser !== use(comment.userRef);
      }))
    ];
  }
  _edit() {
    trigger(this._bodyDom, _CommentView.EDIT, this);
    this.isEditing.set(true);
  }
};
let CommentView = _CommentView;
CommentView.EDIT = "comment-edit";
CommentView.CANCEL = "comment-cancel";
CommentView.SELECT = "comment-select";
class CommentEntry extends grainjs__WEBPACK_IMPORTED_MODULE_13__.Disposable {
  constructor(props) {
    super();
    this.props = props;
  }
  buildDom() {
    var _a, _b, _c;
    const text = this.props.text;
    const clickBuilder = (button) => grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", () => {
      var _a2, _b2, _c2, _d;
      if (button === t("Cancel")) {
        (_b2 = (_a2 = this.props).onCancel) == null ? void 0 : _b2.call(_a2);
      } else {
        (_d = (_c2 = this.props).onClick) == null ? void 0 : _d.call(_c2, button);
      }
    });
    const onSave = async () => {
      var _a2, _b2;
      return text.get() ? await ((_b2 = (_a2 = this.props).onSave) == null ? void 0 : _b2.call(_a2)) : {};
    };
    let textArea;
    return cssCommentEntry(...(_a = this.props.args) != null ? _a : [], cssCommentEntry.cls(`-${(_b = this.props.mode) != null ? _b : "comment"}`), testId("comment-input"), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", stopPropagation), textArea = buildTextEditor(text, cssCommentEntryText.cls(""), cssTextArea.cls(`-${this.props.mode}`), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.onKeyDown({
      Enter$: async (e) => {
        if ((e.ctrlKey || e.metaKey) && text.get().trim()) {
          await (onSave == null ? void 0 : onSave());
          e.preventDefault();
          e.stopPropagation();
          return;
        }
      },
      Escape: (e) => {
        var _a2, _b2;
        (_b2 = (_a2 = this.props).onCancel) == null ? void 0 : _b2.call(_a2);
        e.preventDefault();
        e.stopPropagation();
      }
    }), ...this.props.editorArgs || [], testId("textarea")), (elem) => {
      app_client_lib_FocusLayer__WEBPACK_IMPORTED_MODULE_1__.FocusLayer.create(this, {
        defaultFocusElem: textArea,
        allowFocus: (e) => e !== document.body,
        pauseMousetrap: true
      });
    }, cssCommentEntryButtons((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__.primaryButton)((_c = this.props.mainButton) != null ? _c : "Send", grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.prop("disabled", (use) => !use(text).trim()), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", withStop(onSave)), testId("button-send")), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.forEach(this.props.buttons || [], (button) => (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__.basicButton)(button, clickBuilder(button), testId(`button-${button}`)))));
  }
}
class DiscussionPanel extends grainjs__WEBPACK_IMPORTED_MODULE_13__.Disposable {
  constructor(_grist) {
    var _a, _b;
    super();
    this._grist = _grist;
    this._length = grainjs__WEBPACK_IMPORTED_MODULE_13__.Observable.create(this, 0);
    const userId = ((_b = (_a = _grist.app.topAppModel.appObs.get()) == null ? void 0 : _a.currentUser) == null ? void 0 : _b.id) || 0;
    this._resolved = this.autoDispose((0,app_client_lib_localStorageObs__WEBPACK_IMPORTED_MODULE_3__.localStorageBoolObs)(`u:${userId};showResolvedDiscussions`, false));
    this._onlyMine = this.autoDispose((0,app_client_lib_localStorageObs__WEBPACK_IMPORTED_MODULE_3__.localStorageBoolObs)(`u:${userId};showMyDiscussions`, false));
    this._currentPage = this.autoDispose((0,app_client_lib_localStorageObs__WEBPACK_IMPORTED_MODULE_3__.localStorageBoolObs)(`u:${userId};showCurrentPage`, true));
    this._currentPageKo = knockout__WEBPACK_IMPORTED_MODULE_14__.observable(this._currentPage.get());
    this._currentPage.addListener((val) => this._currentPageKo(val));
  }
  buildDom() {
    var _a;
    const owner = new grainjs__WEBPACK_IMPORTED_MODULE_13__.MultiHolder();
    const viewSections = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
      return use(use(this._grist.viewModel.viewSections).getObservable());
    });
    const tables = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
      if (use(this._currentPageKo)) {
        return [...new Set(use(viewSections).map((vs) => use(vs.table)).filter((tb) => use(tb.tableId)))];
      } else {
        return use(this._grist.docModel.visibleTables.getObservable()).filter((tb) => use(tb.tableId));
      }
    });
    const columnFilter = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
      if (use(this._currentPageKo)) {
        const fieldSet = /* @__PURE__ */ new Set();
        use(viewSections).forEach((vs) => {
          use(use(vs.viewFields).getObservable()).forEach((vf) => fieldSet.add(use(vf.colRef)));
        });
        return (ds) => {
          return fieldSet.has(use(ds.colRef));
        };
      } else {
        return () => true;
      }
    });
    const watcher = app_client_models_rowset__WEBPACK_IMPORTED_MODULE_5__.RowWatcher.create(owner);
    watcher.rowFilter.set(() => true);
    const sources = owner.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_14__.computed(() => {
      if (this._currentPageKo()) {
        const list = [];
        for (const vs of this._grist.viewModel.viewSections().all()) {
          const viewInstance = vs.viewInstance();
          if (viewInstance) {
            list.push(viewInstance.rowSource);
          }
        }
        return list;
      }
      return null;
    }));
    (_a = sources.peek()) == null ? void 0 : _a.forEach((source) => watcher.subscribeTo(source));
    owner.autoDispose(sources.subscribe((list) => {
      (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.bundleChanges)(() => {
        watcher.clear();
        if (list) {
          list.forEach((source) => watcher.subscribeTo(source));
        } else {
          watcher.rowFilter.set(() => true);
        }
      });
    }));
    const rowFilter = watcher.rowFilter;
    const discussionFilter = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
      var _a2, _b, _c;
      const filterRow = use(rowFilter);
      const filterCol = use(columnFilter);
      const showAll = use(this._resolved);
      const showAnyone = !use(this._onlyMine);
      const currentUser = (_c = (_b = (_a2 = use(this._grist.app.topAppModel.appObs)) == null ? void 0 : _a2.currentUser) == null ? void 0 : _b.email) != null ? _c : "";
      const userFilter = (d) => {
        const replies = use(use(d.children).getObservable());
        return use(d.userRef) === currentUser || replies.some((c) => use(c.userRef) === currentUser);
      };
      return (ds) => !use(ds.hidden) && filterRow(use(ds.rowId)) && filterCol(ds) && (showAnyone || userFilter(ds)) && (showAll || !use(ds.resolved));
    });
    const allDiscussions = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
      const list = flatMap(flatMap(use(tables).map((tb) => {
        const columns = use(use(tb.columns).getObservable());
        const dList = columns.map((col) => use(use(col.cells).getObservable()).filter((c) => use(c.root) && use(c.type) === app_common_gristTypes__WEBPACK_IMPORTED_MODULE_12__.CellInfoType.COMMENT));
        return dList;
      })));
      return list;
    });
    const discussions = grainjs__WEBPACK_IMPORTED_MODULE_13__.Computed.create(owner, (use) => {
      const all = use(allDiscussions);
      const filter = use(discussionFilter);
      return all.filter(filter);
    });
    const topic = CellWithComments.create(owner, this._grist);
    topic.comments = discussions;
    owner.autoDispose(discussions.addListener((d) => this._length.set(d.length)));
    this._length.set(discussions.get().length);
    return cssDiscussionPanel(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.autoDispose(owner), testId("panel"), cssDiscussionPanelList(grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.create(CellWithCommentsView, {
      readonly: this._grist.isReadonly,
      gristDoc: this._grist,
      topic,
      panel: true
    })), domOnCustom(CommentView.SELECT, (ds) => {
      this._navigate(ds).catch(() => {
      });
    }));
  }
  buildMenu() {
    return cssPanelHeader((0,grainjs__WEBPACK_IMPORTED_MODULE_13__.dom)("span", grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.text((use) => `${use(this._length)} comments`), testId("comment-count")), cssIconButtonMenu((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_10__.icon)("Dots"), testId("panel-menu"), (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_11__.menu)(() => {
      return [cssDropdownMenu((0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_8__.labeledSquareCheckbox)(this._onlyMine, t("Only my threads"), testId("my-threads")), (0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_8__.labeledSquareCheckbox)(this._currentPage, t("Only current page"), testId("only-page")), (0,app_client_ui2018_checkbox__WEBPACK_IMPORTED_MODULE_8__.labeledSquareCheckbox)(this._resolved, t("Show resolved comments"), testId("show-resolved")))];
    }, { placement: "bottom-start" }), grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("click", stopPropagation)));
  }
  async _navigate(discussion) {
    const rowId = discussion.rowId.peek();
    function findSection(viewSections) {
      var _a;
      const section2 = viewSections.filter((s) => s.tableRef.peek() === discussion.tableRef.peek()).filter((s) => s.viewFields.peek().all().find((f) => f.colRef.peek() === discussion.colRef.peek()))[0];
      const sectionId2 = section2 == null ? void 0 : section2.getRowId();
      const fieldIndex2 = (_a = section2 == null ? void 0 : section2.viewFields.peek().all().findIndex((f) => f.colRef.peek() === discussion.colRef.peek())) != null ? _a : -1;
      if (fieldIndex2 !== -1) {
        return { sectionId: sectionId2, fieldIndex: fieldIndex2 };
      }
      return null;
    }
    let sectionId = 0;
    let fieldIndex = -1;
    const section = findSection(this._grist.viewModel.viewSections.peek().all());
    if (!section) {
      for (const pageId of this._grist.docModel.pages.getAllRows()) {
        const page = this._grist.docModel.pages.getRowModel(pageId);
        const vss = page.view.peek().viewSections.peek().all();
        const result = findSection(vss);
        if (result) {
          sectionId = result.sectionId;
          fieldIndex = result.fieldIndex;
          break;
        }
      }
    } else {
      sectionId = section.sectionId;
      fieldIndex = section.fieldIndex;
    }
    if (!sectionId) {
      return;
    }
    const currentPosition = this._grist.cursorPosition.get();
    if ((currentPosition == null ? void 0 : currentPosition.sectionId) === sectionId && currentPosition.fieldIndex === fieldIndex && currentPosition.rowId === rowId) {
      return;
    }
    const ok = await this._grist.recursiveMoveToCursorPos({
      rowId,
      sectionId,
      fieldIndex
    }, true);
    if (!ok) {
      return;
    }
  }
}
function buildTextEditor(text, ...args) {
  const textArea = cssTextArea(bindProp(text), autoFocus(), (0,app_client_ui_forms__WEBPACK_IMPORTED_MODULE_17__.autoGrow)(text), ...args);
  return textArea;
}
function buildAvatar(user, ...args) {
  return cssAvatar(user, "small", ...args);
}
function buildNick(user, ...args) {
  var _a;
  return cssNick((_a = user == null ? void 0 : user.name) != null ? _a : "Anonymous", ...args);
}
function bindProp(text) {
  return [
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.prop("value", text),
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.on("input", (_, el) => text.set(el.value))
  ];
}
function autoFocus() {
  return (el) => void setTimeout(() => el.focus(), 10);
}
function buildPopup(owner, cell, content, options, closeClicked) {
  const popper = (0,_popperjs_core__WEBPACK_IMPORTED_MODULE_18__.createPopper)(cell, content, options);
  owner.onDispose(() => popper.destroy());
  document.body.appendChild(content);
  owner.onDispose(() => {
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.domDispose(content);
    content.remove();
  });
  owner.autoDispose(onClickOutside(content, () => closeClicked()));
}
function onClickOutside(content, click) {
  const onClick = (evt) => {
    var _a;
    const target = evt.target;
    if (target && !content.contains(target)) {
      if ((_a = target.parentElement) == null ? void 0 : _a.closest(".grist-floating-menu")) {
        return;
      }
      click();
    }
  };
  return grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.onElem(document, "click", onClick, { useCapture: true });
}
function formatTime(timeStamp) {
  const time = moment__WEBPACK_IMPORTED_MODULE_15___default()(timeStamp);
  const now = moment__WEBPACK_IMPORTED_MODULE_15___default()();
  const diff = now.diff(time, "days");
  if (diff < 1) {
    return time.fromNow();
  }
  return time.format("MMM D, YYYY");
}
function commentAuthor(grist, userRef, userName) {
  var _a;
  if (!userRef) {
    const loggedInUser = (_a = grist.app.topAppModel.appObs.get()) == null ? void 0 : _a.currentValidUser;
    if (!loggedInUser) {
      return {
        name: userName || "",
        ref: userRef || "",
        email: "",
        id: 0
      };
    }
    if (!loggedInUser.ref) {
      throw new Error("User reference is not set");
    }
    return loggedInUser;
  } else {
    if (typeof userName !== "string") {
      return null;
    }
    return {
      name: userName,
      ref: userRef || "",
      email: "",
      id: 0
    };
  }
}
const calcMaxSize = __spreadProps(__spreadValues({}, popper_max_size_modifier__WEBPACK_IMPORTED_MODULE_16__["default"]), {
  options: { padding: 4 }
});
const applyMaxSize = {
  name: "applyMaxSize",
  enabled: true,
  phase: "beforeWrite",
  requires: ["maxSize"],
  fn({ state }) {
    const { height } = state.modifiersData.maxSize;
    Object.assign(state.styles.popper, {
      maxHeight: `${Math.min(Math.max(250, height), 600)}px`
    });
  }
};
const cellPopperOptions = {
  placement: "bottom",
  strategy: "fixed",
  modifiers: [
    calcMaxSize,
    applyMaxSize,
    {
      name: "offset",
      options: {
        offset: [0, 4]
      }
    },
    { name: "computeStyles", options: { gpuAcceleration: false } },
    { name: "eventListeners", enabled: false }
  ]
};
function stopPropagation(ev) {
  ev.stopPropagation();
}
function withStop(handler) {
  return (ev) => {
    stopPropagation(ev);
    handler();
  };
}
const cssAvatar = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_ui_UserImage__WEBPACK_IMPORTED_MODULE_6__.createUserImage, `
  flex: none;
  margin-top: 2px;
`);
const cssDiscussionPanel = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: auto;
  padding: 8px;
`);
const cssDiscussionPanelList = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  margin-bottom: 0px;
`);
const cssCommonPadding = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  padding: 16px;
`);
const cssPanelHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: flex;
  flex: 1;
  align-items: center;
  justify-content: space-between;
`);
const cssDropdownMenu = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: flex;
  padding: 12px;
  padding-left: 16px;
  padding-right: 16px;
  gap: 10px;
  flex-direction: column;
`);
const cssReplyBox = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(cssCommonPadding, `
  border-top: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPopupBorder};
`);
const cssCommentEntry = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: grid;
  &-comment {
    grid-template-columns: 1fr auto;
    grid-template-rows: 1fr;
    gap: 8px;
    grid-template-areas: "text buttons";
  }
  &-start, &-reply {
    grid-template-rows: 1fr auto;
    grid-template-columns: 1fr;
    gap: 8px;
    grid-template-areas: "text" "buttons";
  }
`);
const cssCommentEntryText = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  grid-area: text;
`);
const cssCommentEntryButtons = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  grid-area: buttons;
  display: flex;
  align-items: flex-start;

  gap: 8px;
`);
const cssTextArea = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("textarea", `
  min-height: 5em;
  border-radius: 3px;
  padding: 4px 6px;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.inputFg};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.inputBg};
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.inputBorder};
  outline: none;
  width: 100%;
  resize: none;
  max-height: 10em;
  &-comment, &-reply {
    min-height: 28px;
    height: 28px;
  }
  &::placeholder {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.inputPlaceholderFg};
  }
`);
const cssHeaderBox = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.text};
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPopupHeaderBg};
  padding: 12px; /* 12px * 2 + 24px (size of the icon) == 48px in height */
  padding-right: 16px;
  display: flex;
  gap: 8px;
  &-border {
    border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPopupBorder};
  }
`);
const cssTopic = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  position: relative;
  display: flex;
  flex-direction: column;
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPopupBorder};
  border-radius: 4px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPopupBodyBg};
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
  z-index: 100;
  width: 325px;
  overflow: hidden;
  outline: none;
  max-height: inherit;
  &-disabled {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPanelResolvedTopicBg}
  }
  &-panel {
    width: unset;
    box-shadow: none;
    border-radius: 0px;
    background: unset;
    border: 0px;
  }
`);
const cssDiscussionWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPopupBorder};
  &:last-child {
    border-bottom: none;
  }
  .${cssTopic.className}-panel & {
    border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPanelTopicBorder};
    border-radius: 4px;
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPanelTopicBg};
    margin-bottom: 4px;
  }
`);
const cssDiscussion = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: flex;
  flex-direction: column;
  padding: 16px;
  &-resolved {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPanelResolvedTopicBg};
    cursor: pointer;
  }
  &-resolved * {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.lightText} !important;
  }
`);
const cssCommentCensored = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.text};
  margin-top: 4px;
`);
const cssCommentPre = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("pre", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.text};
  padding: 0px;
  font-size: revert;
  border: 0px;
  background: inherit;
  font-family: inherit;
  margin: 0px;
  white-space: break-spaces;
  word-break: break-word;
  word-wrap: break-word;
`);
const cssCommentList = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: flex;
  flex-direction: column;
  overflow: auto;
`);
const cssColumns = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: flex;
  align-items: flex-start;
  gap: 8px;
`);
const cssCommentReplyWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  margin-top: 16px;
`);
const cssComment = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsPopupBorder};
  .${cssCommentList.className} &:last-child {
    border-bottom: 0px;
  }
`);
const cssReplyList = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  margin-left: 16px;
  display: flex;
  flex-direction: column;
  gap: 20px;
`);
const cssCommentHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 2px;
  overflow: hidden;
`);
const cssCommentBodyHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  display: flex;
  align-items: baseline;
  overflow: hidden;
`);
const cssIconButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  flex: none;
  margin: 0 4px 0 auto;
  height: 24px;
  width: 24px;
  padding: 4px;
  line-height: 0px;
  border-radius: 3px;
  cursor: pointer;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.controlSecondaryFg};
  &:hover, &.weasel-popup-open {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.controlSecondaryHoverBg};
  }
`);
const cssIconButtonMenu = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  flex: none;
  margin: 0 4px 0 auto;
  height: 24px;
  width: 24px;
  padding: 4px;
  line-height: 0px;
  border-radius: 3px;
  cursor: pointer;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.rightPanelTabSelectedFg};
  &:hover, &.weasel-popup-open {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.rightPanelTabButtonHoverBg};
  }
`);
const cssReplyButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_7__.textButton, `
  align-self: flex-start;
  display: flex;
  gap: 4px;
  margin-top: 16px;
`);
const cssTime = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.lightText};
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.vars.smallFontSize};
  text-overflow: ellipsis;
  white-space: nowrap;
  letter-spacing: 0.02em;
  line-height: 16px;
`);
const cssNick = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  font-weight: 600;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.commentsUserNameFg};
  &-small {
    font-size: 12px;
  }
`);
const cssSpacer = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  flex-grow: 1;
`);
const cssCloseButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  padding: 4px;
  border-radius: 4px;
  line-height: 1px;
  cursor: pointer;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.controlSecondaryFg};
  &:hover {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.hover};
  }
`);
const cssHoverButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)(cssCloseButton, `
  &:hover {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.controlPrimaryBg};
  }
`);
function domOnCustom(name, handler) {
  return (el) => {
    grainjs__WEBPACK_IMPORTED_MODULE_13__.dom.onElem(el, name, (ev, target) => {
      var _a;
      const cv = ev;
      handler((_a = cv.detail.args) != null ? _a : {}, ev, target);
    });
  };
}
function trigger(element, name, args) {
  element.dispatchEvent(new CustomEvent(name, {
    bubbles: true,
    detail: { args }
  }));
}
const cssResolvedBlock = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  margin-top: 5px;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.text};
`);
const cssResolvedText = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("span", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.theme.text};
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_9__.vars.smallFontSize};
  margin-left: 5px;
`);
const cssTruncate = (0,grainjs__WEBPACK_IMPORTED_MODULE_13__.styled)("div", `
  position: absolute;
  background: white;
  inset: 0;
  height: 2rem;
  opacity: 57%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
`);


/***/ }),

/***/ "./app/client/widgets/EditorButtons.ts":
/*!*********************************************!*\
  !*** ./app/client/widgets/EditorButtons.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMobileButtons": () => (/* binding */ createMobileButtons),
/* harmony export */   "getButtonMargins": () => (/* binding */ getButtonMargins)
/* harmony export */ });
/* harmony import */ var app_client_lib_browserInfo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/browserInfo */ "./app/client/lib/browserInfo.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");




function createMobileButtons(commands) {
  return (0,app_client_lib_browserInfo__WEBPACK_IMPORTED_MODULE_0__.isDesktop)() ? null : [
    cssCancelBtn(cssIconWrap(cssFinishIcon("CrossSmall")), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.on("click", commands.fieldEditCancel)),
    cssSaveBtn(cssIconWrap(cssFinishIcon("Tick")), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.on("click", commands.fieldEditSaveHere))
  ];
}
function getButtonMargins() {
  return (0,app_client_lib_browserInfo__WEBPACK_IMPORTED_MODULE_0__.isDesktop)() ? void 0 : { left: 20, right: 20, top: 0, bottom: 0 };
}
const cssFinishBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("div", `
  height: 40px;
  width: 40px;
  padding: 8px;
  position: absolute;
  top: -8px;
  --icon-color: white;
`);
const cssCancelBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)(cssFinishBtn, `
  --icon-background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.colors.error};
  left: -40px;
`);
const cssSaveBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)(cssFinishBtn, `
  --icon-background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.colors.lightGreen};
  right: -40px;
`);
const cssIconWrap = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)("div", `
  border-radius: 20px;
  background-color: var(--icon-background-color);
  height: 24px;
  width: 24px;
`);
const cssFinishIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_3__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_2__.icon, `
  height: 24px;
  width: 24px;
`);


/***/ }),

/***/ "./app/client/widgets/EditorPlacement.ts":
/*!***********************************************!*\
  !*** ./app/client/widgets/EditorPlacement.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EditorPlacement": () => (/* binding */ EditorPlacement)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");

const edgeMargin = 12;
const maxShiftWidth = 560;
const maxShiftHeight = 400;
class EditorPlacement extends grainjs__WEBPACK_IMPORTED_MODULE_0__.Disposable {
  constructor(editorDom, _cellElem, options = {}) {
    var _a, _b, _c, _d;
    super();
    this._cellElem = _cellElem;
    this.onReposition = this.autoDispose(new grainjs__WEBPACK_IMPORTED_MODULE_0__.Emitter());
    this._margins = {
      top: (((_a = options.margins) == null ? void 0 : _a.top) || 0) + edgeMargin,
      bottom: (((_b = options.margins) == null ? void 0 : _b.bottom) || 0) + edgeMargin,
      left: (((_c = options.margins) == null ? void 0 : _c.left) || 0) + edgeMargin,
      right: (((_d = options.margins) == null ? void 0 : _d.right) || 0) + edgeMargin
    };
    this._maxRect = document.body.getBoundingClientRect();
    this._cellRect = rectWithoutBorders(this._cellElem);
    this.autoDispose(grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.onElem(window, "resize", () => {
      this._maxRect = document.body.getBoundingClientRect();
      this._cellRect = rectWithoutBorders(this._cellElem);
      this.onReposition.emit();
    }));
    const editorRoot = this._editorRoot = (0,grainjs__WEBPACK_IMPORTED_MODULE_0__.dom)("div.cell_editor", editorDom);
    editorRoot.style.visibility = "hidden";
    document.body.appendChild(editorRoot);
    this.onDispose(() => {
      grainjs__WEBPACK_IMPORTED_MODULE_0__.dom.domDispose(editorRoot);
      editorRoot.remove();
    });
  }
  calcSize(desiredSize, options = {}) {
    const maxRect = this._maxRect;
    const margin = this._margins;
    const noShiftMaxWidth = maxRect.right - margin.right - this._cellRect.left;
    const maxWidth = Math.min(maxRect.width - margin.left - margin.right, Math.max(maxShiftWidth, noShiftMaxWidth));
    const width = Math.min(maxWidth, Math.max(this._cellRect.width, desiredSize.width));
    const left = Math.max(margin.left, Math.min(this._cellRect.left - maxRect.left, maxRect.width - margin.right - width));
    const noShiftMaxHeight = maxRect.bottom - margin.bottom - this._cellRect.top;
    const maxHeight = Math.min(maxRect.height - margin.top - margin.bottom, Math.max(maxShiftHeight, noShiftMaxHeight));
    const height = Math.min(maxHeight, Math.max(this._cellRect.height, desiredSize.height));
    const top = Math.max(margin.top, Math.min(this._cellRect.top - maxRect.top, maxRect.height - margin.bottom - height));
    if (!options.calcOnly) {
      Object.assign(this._editorRoot.style, {
        visibility: "visible",
        left: left + "px",
        top: top + "px",
        width: width + "px",
        "max-height": maxHeight + "px"
      });
    }
    return { width, height };
  }
  calcSizeWithPadding(elem, desiredElemSize, options = {}) {
    const rootRect = this._editorRoot.getBoundingClientRect();
    const elemRect = elem.getBoundingClientRect();
    const heightDelta = rootRect.height - elemRect.height;
    const widthDelta = rootRect.width - elemRect.width;
    const { width, height } = this.calcSize({
      width: desiredElemSize.width + widthDelta,
      height: desiredElemSize.height + heightDelta
    }, options);
    return {
      width: width - widthDelta,
      height: height - heightDelta
    };
  }
}
function rectWithoutBorders(elem) {
  const rect = elem.getBoundingClientRect();
  const style = getComputedStyle(elem, null);
  const bTop = parseFloat(style.getPropertyValue("border-top-width"));
  const bRight = parseFloat(style.getPropertyValue("border-right-width"));
  const bBottom = parseFloat(style.getPropertyValue("border-bottom-width"));
  const bLeft = parseFloat(style.getPropertyValue("border-left-width"));
  return {
    width: rect.width - bLeft - bRight,
    height: rect.height - bTop - bBottom,
    top: rect.top + bTop,
    bottom: rect.bottom - bBottom,
    left: rect.left + bLeft,
    right: rect.right - bRight
  };
}


/***/ }),

/***/ "./app/client/widgets/EditorTooltip.ts":
/*!*********************************************!*\
  !*** ./app/client/widgets/EditorTooltip.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "showTooltipToCreateFormula": () => (/* binding */ showTooltipToCreateFormula)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/tooltips */ "./app/client/ui/tooltips.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/links */ "./app/client/ui2018/links.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");






const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("EditorTooltip");
function showTooltipToCreateFormula(editorDom, convert) {
  function buildTooltip(ctl) {
    return cssConvertTooltip((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_3__.icon)("Convert"), (0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_4__.cssLink)(t("Convert column to formula"), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.on("mousedown", (ev) => {
      ev.preventDefault();
      convert();
    }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("editor-tooltip-convert")), (0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_1__.tooltipCloseButton)(ctl));
  }
  const offerCtl = (0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_1__.showTooltip)(editorDom, buildTooltip, { key: "col-to-formula" });
  grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.onDisposeElem(editorDom, offerCtl.close);
  const lis = grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.onElem(editorDom, "keydown", () => {
    lis.dispose();
    offerCtl.close();
  });
}
const cssConvertTooltip = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div", `
  display: flex;
  align-items: center;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.colors.lightGreen};

  & > .${app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_4__.cssLink.className} {
    margin-left: 8px;
  }
`);


/***/ }),

/***/ "./app/client/widgets/ErrorDom.ts":
/*!****************************************!*\
  !*** ./app/client/widgets/ErrorDom.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildErrorDom": () => (/* binding */ buildErrorDom)
/* harmony export */ });
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_ValueFormatter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/ValueFormatter */ "./app/common/ValueFormatter.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");



function buildErrorDom(row, field) {
  const value = row.cells[field.colId.peek()];
  const options = field.widgetOptionsJson;
  return (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.field_clip.invalid", grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.clsPrefix("field-error-", (use) => (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.getObjCode)(use(value)) || ""), grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.style("text-align", options.prop("alignment")), grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.cls("text_wrapping", (use) => Boolean(use(options.prop("wrap")))), grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.text((use) => (0,app_common_ValueFormatter__WEBPACK_IMPORTED_MODULE_1__.formatUnknown)(value ? use(value) : "???")));
}


/***/ }),

/***/ "./app/client/widgets/FieldBuilder.ts":
/*!********************************************!*\
  !*** ./app/client/widgets/FieldBuilder.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FieldBuilder": () => (/* binding */ FieldBuilder),
/* harmony export */   "createAllFieldWidgets": () => (/* binding */ createAllFieldWidgets)
/* harmony export */ });
/* harmony import */ var app_client_components_FormulaTransform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/FormulaTransform */ "./app/client/components/FormulaTransform.ts");
/* harmony import */ var app_client_components_TypeConversion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/components/TypeConversion */ "./app/client/components/TypeConversion.ts");
/* harmony import */ var app_client_components_TypeTransform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/components/TypeTransform */ "./app/client/components/TypeTransform.ts");
/* harmony import */ var app_client_widgets_FloatingEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/widgets/FloatingEditor */ "./app/client/widgets/FloatingEditor.ts");
/* harmony import */ var app_client_components_UnsavedChanges__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/components/UnsavedChanges */ "./app/client/components/UnsavedChanges.ts");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/lib/dom */ "./app/client/lib/dom.js");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/lib/koDom */ "./app/client/lib/koDom.js");
/* harmony import */ var app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/lib/koForm */ "./app/client/lib/koForm.js");
/* harmony import */ var app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/lib/koUtil */ "./app/client/lib/koUtil.js");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/models/AppModel */ "./app/client/models/AppModel.ts");
/* harmony import */ var app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/models/modelUtil */ "./app/client/models/modelUtil.js");
/* harmony import */ var app_client_models_Styles__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/client/models/Styles */ "./app/client/models/Styles.ts");
/* harmony import */ var app_client_models_features__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/client/models/features */ "./app/client/models/features.ts");
/* harmony import */ var app_client_ui_FieldMenus__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/client/ui/FieldMenus */ "./app/client/ui/FieldMenus.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app/client/ui2018/buttonSelect */ "./app/client/ui2018/buttonSelect.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_client_widgets_DiffBox__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! app/client/widgets/DiffBox */ "./app/client/widgets/DiffBox.ts");
/* harmony import */ var app_client_widgets_ErrorDom__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! app/client/widgets/ErrorDom */ "./app/client/widgets/ErrorDom.ts");
/* harmony import */ var app_client_widgets_FieldEditor__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! app/client/widgets/FieldEditor */ "./app/client/widgets/FieldEditor.ts");
/* harmony import */ var app_client_widgets_DiscussionEditor__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! app/client/widgets/DiscussionEditor */ "./app/client/widgets/DiscussionEditor.ts");
/* harmony import */ var app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! app/client/widgets/FormulaEditor */ "./app/client/widgets/FormulaEditor.ts");
/* harmony import */ var app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! app/client/widgets/UserType */ "./app/client/widgets/UserType.ts");
/* harmony import */ var app_client_widgets_UserTypeImpl__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! app/client/widgets/UserTypeImpl */ "./app/client/widgets/UserTypeImpl.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");































const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_27__.makeTestId)("test-fbuilder-");
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_9__.makeT)("FieldBuilder");
function createAllFieldWidgets(gristDoc, viewFields, cursor, options = {}) {
  return viewFields().map(function(field) {
    return new FieldBuilder(gristDoc, field, cursor, options);
  }).setAutoDisposeValues();
}
function getTypeDefinition(type) {
  if (!type) {
    return app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_24__.typeDefs.Text;
  }
  return app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_24__.typeDefs[type] || app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_24__.typeDefs.Text;
}
function buildFontOptions(builder, computedRule, optionName) {
  return app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__.withKoUtils(knockout__WEBPACK_IMPORTED_MODULE_28__.computed(() => {
    var _a;
    if (builder.isDisposed()) {
      return false;
    }
    const style = (_a = computedRule()) == null ? void 0 : _a.style;
    const styleFlag = (style == null ? void 0 : style[optionName]) || builder.field[optionName]();
    return styleFlag;
  })).onlyNotifyUnequal();
}
class FieldBuilder extends grainjs__WEBPACK_IMPORTED_MODULE_27__.Disposable {
  constructor(gristDoc, field, _cursor, _options = {}) {
    super();
    this.gristDoc = gristDoc;
    this.field = field;
    this._cursor = _cursor;
    this._options = _options;
    this._isEditorActive = grainjs__WEBPACK_IMPORTED_MODULE_27__.Observable.create(this, false);
    this._docModel = gristDoc.docModel;
    this.origColumn = field.origCol();
    this.options = field.widgetOptionsJson;
    this._comments = knockout__WEBPACK_IMPORTED_MODULE_28__.pureComputed(() => (0,grainjs__WEBPACK_IMPORTED_MODULE_27__.toKo)(knockout__WEBPACK_IMPORTED_MODULE_28__, (0,app_client_models_features__WEBPACK_IMPORTED_MODULE_13__.COMMENTS)())());
    this._readOnlyPureType = knockout__WEBPACK_IMPORTED_MODULE_28__.pureComputed(() => this.field.column().pureType());
    this._readonly = grainjs__WEBPACK_IMPORTED_MODULE_27__.Computed.create(this, (use) => use(gristDoc.isReadonly) || use(field.disableEditData) || Boolean(this._options.isPreview));
    this._availableTypes = grainjs__WEBPACK_IMPORTED_MODULE_27__.Computed.create(this, (use) => {
      const isFormula = use(this.origColumn.isFormula);
      const types = [];
      underscore__WEBPACK_IMPORTED_MODULE_29__.each(app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_24__.typeDefs, (def, key) => {
        const o = {
          value: key,
          label: def.label,
          icon: def.icon
        };
        if (key === "Any") {
          o.disabled = !isFormula;
        }
        types.push(o);
      });
      return types;
    });
    this._isRightType = knockout__WEBPACK_IMPORTED_MODULE_28__.pureComputed(() => {
      return app_common_gristTypes__WEBPACK_IMPORTED_MODULE_26__.isRightType(this._readOnlyPureType()) || underscore__WEBPACK_IMPORTED_MODULE_29__.constant(false);
    });
    this._isRef = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_28__.computed(() => {
      const type = this.field.column().type();
      return type !== "Attachments" && (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_26__.isFullReferencingType)(type);
    }));
    this._refTableId = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_28__.computed({
      read: () => (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_26__.getReferencedTableId)(this.field.column().type()),
      write: (val) => {
        const type = this.field.column().type();
        if (type.startsWith("Ref:")) {
          void this._setType(`Ref:${val}`);
        } else {
          void this._setType(`RefList:${val}`);
        }
      }
    }));
    this.widget = knockout__WEBPACK_IMPORTED_MODULE_28__.pureComputed(() => this.field.widget());
    this.isCallPending = knockout__WEBPACK_IMPORTED_MODULE_28__.observable(false);
    this.columnTransform = null;
    this._isTransformingFormula = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_28__.computed(() => {
      return this.field.column().isTransforming() && this.columnTransform instanceof app_client_components_FormulaTransform__WEBPACK_IMPORTED_MODULE_0__.FormulaTransform;
    }));
    this._isTransformingType = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_28__.computed(() => {
      return (this.field.column().isTransforming() || this.isCallPending()) && this.columnTransform instanceof app_client_components_TypeTransform__WEBPACK_IMPORTED_MODULE_2__.TypeTransform;
    }));
    this._rowMap = /* @__PURE__ */ new Map();
    this._widgetCons = this.autoDispose(app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__.withKoUtils(knockout__WEBPACK_IMPORTED_MODULE_28__.computed(() => {
      return app_client_widgets_UserTypeImpl__WEBPACK_IMPORTED_MODULE_25__.getWidgetConstructor(this.options().widget, this._readOnlyPureType());
    })).onlyNotifyUnequal());
    this.widgetImpl = this.autoDispose(app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__.computedBuilder(() => {
      const cons = this._widgetCons();
      return cons.create.bind(cons, this.field, this.field.colId());
    }, this).extend({ deferred: true }));
    this.diffImpl = this.autoDispose(app_client_widgets_DiffBox__WEBPACK_IMPORTED_MODULE_19__.DiffBox.create(this.field));
    this._showRefConfigPopup = knockout__WEBPACK_IMPORTED_MODULE_28__.observable(false);
  }
  buildSelectWidgetDom() {
    return grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.maybe((use) => !use(this._isTransformingType) && use(this._readOnlyPureType), (type) => {
      const typeWidgets = getTypeDefinition(type).widgets;
      const widgetOptions = Object.keys(typeWidgets).map((label) => ({
        label,
        value: label,
        icon: typeWidgets[label].icon
      }));
      if (widgetOptions.length <= 1) {
        return null;
      }
      const defaultWidget = grainjs__WEBPACK_IMPORTED_MODULE_27__.Computed.create(null, (use) => {
        if (widgetOptions.length <= 2) {
          return;
        }
        const value = use(this.field.config.widget);
        return value;
      });
      defaultWidget.onWrite((value) => this.field.config.widget(value));
      const disabled = grainjs__WEBPACK_IMPORTED_MODULE_27__.Computed.create(null, (use) => !use(this.field.config.sameWidgets));
      return [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_15__.cssLabel)(t("CELL FORMAT")),
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_15__.cssRow)(grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.autoDispose(defaultWidget), widgetOptions.length <= 2 ? (0,app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_16__.buttonSelect)((0,grainjs__WEBPACK_IMPORTED_MODULE_27__.fromKo)(this.field.config.widget), widgetOptions, app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_16__.cssButtonSelect.cls("-disabled", disabled)) : (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_18__.select)(defaultWidget, widgetOptions, {
          disabled,
          defaultLabel: t("Mixed format")
        }), testId("widget-select"))
      ];
    });
  }
  buildSelectTypeDom() {
    const holder = new grainjs__WEBPACK_IMPORTED_MODULE_27__.MultiHolder();
    const commonType = grainjs__WEBPACK_IMPORTED_MODULE_27__.Computed.create(holder, (use) => use(use(this.field.viewSection).columnsType));
    const selectType = grainjs__WEBPACK_IMPORTED_MODULE_27__.Computed.create(holder, (use) => {
      const myType = use((0,grainjs__WEBPACK_IMPORTED_MODULE_27__.fromKo)(this._readOnlyPureType));
      return use(commonType) === "mixed" ? "" : myType;
    });
    selectType.onWrite((newType) => {
      const sameType = newType === this._readOnlyPureType.peek();
      if (!sameType || commonType.get() === "mixed") {
        if (["Ref", "RefList"].includes(newType)) {
          this._showRefConfigPopup(true);
        }
        return this._setType(newType);
      }
    });
    const onDispose = () => this.isDisposed() || selectType.set(this.field.column().pureType());
    const allFormulas = grainjs__WEBPACK_IMPORTED_MODULE_27__.Computed.create(holder, (use) => use(use(this.field.viewSection).columnsAllIsFormula));
    return [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_15__.cssRow)(grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.autoDispose(holder), (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_18__.select)(selectType, this._availableTypes, {
        disabled: (use) => use(this._isTransformingFormula) || use(this.origColumn.disableModifyBase) || use(this.field.config.multiselect) && !use(allFormulas) || use(this.isCallPending),
        menuCssClass: cssTypeSelectMenu.className,
        defaultLabel: t("Mixed types"),
        renderOptionArgs: (op) => {
          if (["Ref", "RefList"].includes(selectType.get())) {
            return;
          }
          if (op.label === "Reference") {
            return this.gristDoc.behavioralPromptsManager.attachTip("referenceColumns", {
              popupOptions: {
                attach: `.${cssTypeSelectMenu.className}`,
                placement: "left-start"
              }
            });
          } else {
            return null;
          }
        }
      }), testId("type-select"), grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.cls("tour-type-selector"), grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.cls(app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_15__.cssBlockedCursor.className, (use) => use(this.origColumn.disableModifyBase) || use(this.field.config.multiselect) && !use(allFormulas))),
      grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.maybe((use) => use(this._isRef) && !use(this._isTransformingType), () => this._buildRefTableSelect()),
      grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.maybe(this._isTransformingType, () => {
        return app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div.type_transform_prompt", app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_7__.prompt(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div", grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.maybe(this._isRef, () => this._buildRefTableSelect()), grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.maybe((use) => use(this.field.column().isTransforming), () => this.columnTransform.buildDom()))), grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.onDispose(onDispose));
      })
    ];
  }
  _setType(newType) {
    if (this.origColumn.isFormula()) {
      const column = this.field.column();
      const calculatedType = (0,app_client_components_TypeConversion__WEBPACK_IMPORTED_MODULE_1__.addColTypeSuffix)(newType, column, this._docModel);
      if (this.field.viewSection.peek().selectedFields.peek().length > 1 && ["formula", "empty"].indexOf(this.field.viewSection.peek().columnsBehavior.peek())) {
        return this.gristDoc.docData.bundleActions(t("Changing multiple column types"), () => Promise.all(this.field.viewSection.peek().selectedFields.peek().map((f) => f.column.peek().type.setAndSave(calculatedType)))).catch(app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_10__.reportError);
      }
      column.type.setAndSave(calculatedType).catch(app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_10__.reportError);
    } else if (!this.columnTransform) {
      this.columnTransform = app_client_components_TypeTransform__WEBPACK_IMPORTED_MODULE_2__.TypeTransform.create(null, this.gristDoc, this);
      return this.columnTransform.prepare(newType);
    } else {
      if (this.columnTransform instanceof app_client_components_TypeTransform__WEBPACK_IMPORTED_MODULE_2__.TypeTransform) {
        return this.columnTransform.setType(newType);
      }
    }
  }
  _buildRefTableSelect() {
    const allTables = grainjs__WEBPACK_IMPORTED_MODULE_27__.Computed.create(null, (use) => use(this._docModel.visibleTables.getObservable()).map((tableRec) => ({
      value: use(tableRec.tableId),
      label: use(tableRec.tableNameDef),
      icon: "FieldTable"
    })));
    const isDisabled = grainjs__WEBPACK_IMPORTED_MODULE_27__.Computed.create(null, (use) => {
      return use(this.origColumn.disableModifyBase) || use(this.field.config.multiselect);
    });
    return [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_15__.cssLabel)(t("DATA FROM TABLE"), !this._showRefConfigPopup.peek() ? null : this.gristDoc.behavioralPromptsManager.attachTip("referenceColumnsConfig", {
        onDispose: () => this._showRefConfigPopup(false),
        popupOptions: {
          placement: "left-start"
        }
      })),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_15__.cssRow)(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default().autoDispose(allTables), app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default().autoDispose(isDisabled), (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_18__.select)((0,grainjs__WEBPACK_IMPORTED_MODULE_27__.fromKo)(this._refTableId), allTables, {
        disabled: isDisabled
      }), testId("ref-table-select"))
    ];
  }
  buildTransformDom() {
    const transformButton = knockout__WEBPACK_IMPORTED_MODULE_28__.computed({
      read: () => this.field.column().isTransforming(),
      write: (val) => {
        if (val) {
          this.columnTransform = app_client_components_FormulaTransform__WEBPACK_IMPORTED_MODULE_0__.FormulaTransform.create(null, this.gristDoc, this);
          return this.columnTransform.prepare();
        } else {
          return this.columnTransform && this.columnTransform.cancel();
        }
      }
    });
    return app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div", app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default().autoDispose(transformButton), app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default().onDispose(() => {
      if (this.columnTransform) {
        this.columnTransform.finalize().catch(app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_10__.reportError);
      }
    }), app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_7__.row(15, app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_7__.label(t("Apply Formula to Data")), 3, app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_7__.buttonGroup(app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_7__.checkButton(transformButton, app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("span.glyphicon.glyphicon-flash"), app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default().testId("FieldBuilder_editTransform"), testId("edit-transform"), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("disabled", () => this._isTransformingType() || this.origColumn.isFormula() || this.origColumn.disableModifyBase())))), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.maybe(this._isTransformingFormula, () => {
      return this.columnTransform.buildDom();
    }));
  }
  buildConfigDom() {
    return app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div", app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.maybe(() => !this._isTransformingType() && this.widgetImpl(), (widget) => app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div", widget.buildConfigDom(), cssSeparator())));
  }
  buildColorConfigDom() {
    return app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div", app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.maybe(() => !this._isTransformingType() && this.widgetImpl(), (widget) => app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div", widget.buildColorConfigDom(this.gristDoc))));
  }
  buildSettingOptions() {
    return app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div", app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.maybe(() => !this._isTransformingType() && this.widgetImpl(), (widget) => app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div", app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.maybe(() => this.origColumn.viewFields().all().length > 1, () => app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div.fieldbuilder_settings", app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_7__.row(app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("fieldbuilder_settings_header", true), app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_7__.label(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div.fieldbuilder_settings_button", app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default().testId("FieldBuilder_settings"), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.text(() => this.field.useColOptions() ? "Common" : "Separate"), " \u25BE", (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_18__.menu)(() => (0,app_client_ui_FieldMenus__WEBPACK_IMPORTED_MODULE_14__.FieldSettingsMenu)(this.field.useColOptions(), this.field.viewSection().isRaw(), {
      useSeparate: () => this.fieldSettingsUseSeparate(),
      saveAsCommon: () => this.fieldSettingsSaveAsCommon(),
      revertToCommon: () => this.fieldSettingsRevertToCommon()
    }))), "Field in ", app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.text(() => this.origColumn.viewFields().all().length), " views")))))));
  }
  fieldSettingsUseSeparate() {
    return this.gristDoc.docData.bundleActions(t("Use separate field settings for {{colId}}", { colId: this.origColumn.colId() }), () => {
      return Promise.all([
        (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_11__.setSaveValue)(this.field.widgetOptions, this.field.column().widgetOptions()),
        (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_11__.setSaveValue)(this.field.visibleCol, this.field.column().visibleCol()),
        this.field.saveDisplayFormula(this.field.column()._displayColModel().formula() || "")
      ]);
    });
  }
  fieldSettingsSaveAsCommon() {
    return this.gristDoc.docData.bundleActions(t("Save field settings for {{colId}} as common", { colId: this.origColumn.colId() }), () => {
      return Promise.all([
        (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_11__.setSaveValue)(this.field.column().widgetOptions, this.field.widgetOptions()),
        (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_11__.setSaveValue)(this.field.column().visibleCol, this.field.visibleCol()),
        this.field.column().saveDisplayFormula(this.field._displayColModel().formula() || ""),
        (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_11__.setSaveValue)(this.field.widgetOptions, ""),
        (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_11__.setSaveValue)(this.field.visibleCol, 0),
        this.field.saveDisplayFormula("")
      ]);
    });
  }
  fieldSettingsRevertToCommon() {
    return this.gristDoc.docData.bundleActions(t("Revert field settings for {{colId}} to common", { colId: this.origColumn.colId() }), () => {
      return Promise.all([
        (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_11__.setSaveValue)(this.field.widgetOptions, ""),
        (0,app_client_models_modelUtil__WEBPACK_IMPORTED_MODULE_11__.setSaveValue)(this.field.visibleCol, 0),
        this.field.saveDisplayFormula("")
      ]);
    });
  }
  buildDomWithCursor(row, isActive, isSelected) {
    const computedFlags = app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__.withKoUtils(knockout__WEBPACK_IMPORTED_MODULE_28__.pureComputed(() => {
      return this.field.rulesColsIds().map((colRef) => {
        var _a, _b, _c;
        return (_c = (_b = (_a = row.cells)[colRef]) == null ? void 0 : _b.call(_a)) != null ? _c : false;
      });
    }, this).extend({ deferred: true }));
    const computedRule = app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__.withKoUtils(knockout__WEBPACK_IMPORTED_MODULE_28__.pureComputed(() => {
      if (this.isDisposed()) {
        return null;
      }
      if (row._isAddRow() || !row.id()) {
        return null;
      }
      const styles = this.field.rulesStyles();
      if (!Array.isArray(styles) || styles.length === 0) {
        return null;
      }
      const flags = computedFlags();
      if (styles.length < flags.length) {
        return;
      }
      const error = flags.some((f) => !app_common_gristTypes__WEBPACK_IMPORTED_MODULE_26__.isValidRuleValue(f));
      if (error) {
        return { error };
      }
      return { style: new app_client_models_Styles__WEBPACK_IMPORTED_MODULE_12__.CombinedStyle(styles, flags) };
    }, this).extend({ deferred: true })).previousOnUndefined();
    const widgetObs = app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__.withKoUtils(knockout__WEBPACK_IMPORTED_MODULE_28__.computed(() => {
      if (this.isDisposed()) {
        return null;
      }
      const value = row.cells[this.field.colId()];
      const cell = value && value();
      if (value && this._isRightType()(cell, this.options) || row._isAddRow.peek()) {
        return this.widgetImpl();
      } else if (app_common_gristTypes__WEBPACK_IMPORTED_MODULE_26__.isVersions(cell)) {
        return this.diffImpl;
      } else {
        return null;
      }
    }).extend({ deferred: true })).onlyNotifyUnequal();
    const ruleText = app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__.withKoUtils(knockout__WEBPACK_IMPORTED_MODULE_28__.computed(() => {
      var _a, _b;
      if (this.isDisposed()) {
        return null;
      }
      return ((_b = (_a = computedRule()) == null ? void 0 : _a.style) == null ? void 0 : _b.textColor) || "";
    })).onlyNotifyUnequal();
    const ruleFill = app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__.withKoUtils(knockout__WEBPACK_IMPORTED_MODULE_28__.computed(() => {
      var _a, _b;
      if (this.isDisposed()) {
        return null;
      }
      return notTransparent(((_b = (_a = computedRule()) == null ? void 0 : _a.style) == null ? void 0 : _b.fillColor) || "");
    })).onlyNotifyUnequal();
    const fontBold = buildFontOptions(this, computedRule, "fontBold");
    const fontItalic = buildFontOptions(this, computedRule, "fontItalic");
    const fontUnderline = buildFontOptions(this, computedRule, "fontUnderline");
    const fontStrikethrough = buildFontOptions(this, computedRule, "fontStrikethrough");
    const errorInStyle = knockout__WEBPACK_IMPORTED_MODULE_28__.pureComputed(() => {
      var _a;
      return Boolean((_a = computedRule()) == null ? void 0 : _a.error);
    });
    const cellText = knockout__WEBPACK_IMPORTED_MODULE_28__.pureComputed(() => this.field.textColor() || "");
    const cellFill = knockout__WEBPACK_IMPORTED_MODULE_28__.pureComputed(() => notTransparent(this.field.fillColor() || ""));
    const hasComment = app_client_lib_koUtil__WEBPACK_IMPORTED_MODULE_8__.withKoUtils(knockout__WEBPACK_IMPORTED_MODULE_28__.computed(() => {
      if (this.isDisposed()) {
        return false;
      }
      if (!this._comments()) {
        return false;
      }
      if (this.gristDoc.isReadonlyKo()) {
        return false;
      }
      const rowId = row.id();
      const discussion = this.field.column().cells().all().find((d) => d.rowId() === rowId && !d.resolved() && d.type() === app_common_gristTypes__WEBPACK_IMPORTED_MODULE_26__.CellInfoType.COMMENT && !d.hidden() && d.root());
      return Boolean(discussion);
    }).extend({ deferred: true })).onlyNotifyUnequal();
    const domHolder = new grainjs__WEBPACK_IMPORTED_MODULE_27__.MultiHolder();
    domHolder.autoDispose(hasComment);
    domHolder.autoDispose(widgetObs);
    domHolder.autoDispose(computedFlags);
    domHolder.autoDispose(errorInStyle);
    domHolder.autoDispose(cellText);
    domHolder.autoDispose(cellFill);
    domHolder.autoDispose(computedRule);
    domHolder.autoDispose(fontBold);
    domHolder.autoDispose(fontItalic);
    domHolder.autoDispose(fontUnderline);
    domHolder.autoDispose(fontStrikethrough);
    return (elem) => {
      this._rowMap.set(row, elem);
      app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()(elem, app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default().autoDispose(domHolder), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.style("--grist-cell-color", cellText), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.style("--grist-cell-background-color", cellFill), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.style("--grist-rule-color", ruleText), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.style("--grist-column-rule-background-color", ruleFill), this._options.isPreview ? null : app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.cssClass(this.field.formulaCssClass), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("field-with-comments", hasComment), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.maybe(hasComment, () => app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div.field-comment-indicator")), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("readonly", (0,grainjs__WEBPACK_IMPORTED_MODULE_27__.toKo)(knockout__WEBPACK_IMPORTED_MODULE_28__, this._readonly)), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.maybe(isSelected, () => app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()("div.selected_cursor", app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("active_cursor", isActive))), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.scope(widgetObs, (widget) => {
        if (this.isDisposed()) {
          return null;
        }
        const cellDom = widget ? widget.buildDom(row) : (0,app_client_widgets_ErrorDom__WEBPACK_IMPORTED_MODULE_20__.buildErrorDom)(row, this.field);
        return app_client_lib_dom__WEBPACK_IMPORTED_MODULE_5___default()(cellDom, app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("has_cursor", isActive), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("field-error-from-style", errorInStyle), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("font-bold", fontBold), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("font-underline", fontUnderline), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("font-italic", fontItalic), app_client_lib_koDom__WEBPACK_IMPORTED_MODULE_6__.toggleClass("font-strikethrough", fontStrikethrough));
      }));
    };
  }
  buildEditorDom(editRow, mainRowModel, options) {
    if (this.columnTransform) {
      this.columnTransform.finalize().catch(app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_10__.reportError);
      return;
    }
    const holder = this.gristDoc.fieldEditorHolder;
    const clearOwn = () => this.isEditorActive() && holder.clear();
    const cell = editRow.cells[this.field.colId()];
    const value = cell && cell();
    if (app_common_gristTypes__WEBPACK_IMPORTED_MODULE_26__.isCensored(value) && !this.origColumn.isFormula.peek()) {
      return clearOwn();
    }
    const editorCtor = app_client_widgets_UserTypeImpl__WEBPACK_IMPORTED_MODULE_25__.getEditorConstructor(this.options().widget, this._readOnlyPureType());
    if (!editorCtor) {
      return clearOwn();
    }
    if (this._readonly.get() && editorCtor.supportsReadonly && !editorCtor.supportsReadonly()) {
      return clearOwn();
    }
    if (!this._readonly.get() && (0,app_client_widgets_FieldEditor__WEBPACK_IMPORTED_MODULE_21__.saveWithoutEditor)(editorCtor, editRow, this.field, options.init)) {
      return clearOwn();
    }
    const cellElem = this._rowMap.get(mainRowModel);
    const fieldEditor = app_client_widgets_FieldEditor__WEBPACK_IMPORTED_MODULE_21__.FieldEditor.create(holder, {
      gristDoc: this.gristDoc,
      field: this.field,
      cursor: this._cursor,
      editRow,
      cellElem,
      editorCtor,
      state: options.state,
      startVal: this._readonly.get() ? void 0 : options.init,
      readonly: this._readonly.get()
    });
    this._isEditorActive.set(true);
    fieldEditor.onDispose(() => {
      this._isEditorActive.set(false);
      this.gristDoc.activeEditor.set(null);
    });
    this.gristDoc.activeEditor.set(fieldEditor);
  }
  buildDiscussionPopup(editRow, mainRowModel, discussionId) {
    const owner = this.gristDoc.fieldEditorHolder;
    const cellElem = this._rowMap.get(mainRowModel);
    if (this.columnTransform) {
      this.columnTransform.finalize().catch(app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_10__.reportError);
      return;
    }
    if (editRow._isAddRow.peek() || this._readonly.get()) {
      return;
    }
    const holder = this.gristDoc.fieldEditorHolder;
    const cell = editRow.cells[this.field.colId()];
    const value = cell && cell();
    if (app_common_gristTypes__WEBPACK_IMPORTED_MODULE_26__.isCensored(value)) {
      holder.clear();
      return;
    }
    const tableRef = this.field.viewSection.peek().tableRef.peek();
    const discussionHolder = grainjs__WEBPACK_IMPORTED_MODULE_27__.MultiHolder.create(owner);
    const discussions = app_client_widgets_DiscussionEditor__WEBPACK_IMPORTED_MODULE_22__.EmptyCell.create(discussionHolder, {
      gristDoc: this.gristDoc,
      tableRef,
      column: this.field.column.peek(),
      rowId: editRow.id.peek()
    });
    app_client_widgets_DiscussionEditor__WEBPACK_IMPORTED_MODULE_22__.CellDiscussionPopup.create(discussionHolder, {
      domEl: cellElem,
      topic: discussions,
      discussionId,
      gristDoc: this.gristDoc,
      closeClicked: () => owner.clear()
    });
  }
  isEditorActive() {
    const holder = this.gristDoc.fieldEditorHolder;
    return !holder.isEmpty() && this._isEditorActive.get();
  }
  openSideFormulaEditor(options) {
    const { editRow, refElem, canDetach, editValue, onSave, onCancel } = options;
    const position = this.gristDoc.cursorPosition.get();
    const floatController = {
      attach: async (content) => {
        if (refElem.isConnected) {
          formulaEditor.attach(refElem);
        } else {
          formulaEditor.dispose();
          grainjs__WEBPACK_IMPORTED_MODULE_27__.dom.domDispose(content);
          await this.gristDoc.recursiveMoveToCursorPos(position, true);
        }
      },
      detach() {
        return formulaEditor.detach();
      },
      autoDispose(el) {
        return formulaEditor.autoDispose(el);
      },
      dispose() {
        formulaEditor.dispose();
      }
    };
    function setupEditorCleanup(owner, gristDoc, editingFormula, _saveEdit) {
      const saveOnFocus = () => floatingExtension.active.get() ? void 0 : _saveEdit().catch(app_client_models_AppModel__WEBPACK_IMPORTED_MODULE_10__.reportError);
      app_client_components_UnsavedChanges__WEBPACK_IMPORTED_MODULE_4__.UnsavedChange.create(owner, async () => {
        await saveOnFocus();
      });
      gristDoc.app.on("clipboard_focus", saveOnFocus);
      owner.onDispose(() => {
        gristDoc.app.off("clipboard_focus", saveOnFocus);
        editingFormula(false);
      });
    }
    const field = this.gristDoc.docModel.viewFields.getRowModel(this.field.getRowId());
    const formulaEditor = (0,app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_23__.openFormulaEditor)({
      gristDoc: this.gristDoc,
      field,
      editingFormula: this.field.editingFormula,
      setupCleanup: setupEditorCleanup,
      editRow,
      refElem,
      editValue,
      canDetach,
      onSave,
      onCancel
    });
    const floatingExtension = app_client_widgets_FloatingEditor__WEBPACK_IMPORTED_MODULE_3__.FloatingEditor.create(formulaEditor, floatController, {
      gristDoc: this.gristDoc,
      refElem,
      placement: "overlapping"
    });
    this.gristDoc.fieldEditorHolder.autoDispose(formulaEditor);
  }
}
const cssTypeSelectMenu = (0,grainjs__WEBPACK_IMPORTED_MODULE_27__.styled)("div", `
  max-height: 500px;
`);
const cssSeparator = (0,grainjs__WEBPACK_IMPORTED_MODULE_27__.styled)("div", `
  border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_17__.theme.pagePanelsBorder};
  margin-top: 16px;
`);
function notTransparent(color) {
  if (!color) {
    return color;
  } else if (color.startsWith("#") && color.length === 9) {
    return color.substring(0, 7);
  } else if (color.startsWith("rgba")) {
    return color.replace(/^rgba\((\d+)[,\s]+(\d+)[,\s]+(\d+)[/,\s]+([\d.%]+)\)$/i, "rgb($1, $2, $3)");
  }
  return color;
}


/***/ }),

/***/ "./app/client/widgets/FieldEditor.ts":
/*!*******************************************!*\
  !*** ./app/client/widgets/FieldEditor.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FieldEditor": () => (/* binding */ FieldEditor),
/* harmony export */   "saveWithoutEditor": () => (/* binding */ saveWithoutEditor),
/* harmony export */   "setAndSave": () => (/* binding */ setAndSave),
/* harmony export */   "setupEditorCleanup": () => (/* binding */ setupEditorCleanup)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_components_UnsavedChanges__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/components/UnsavedChanges */ "./app/client/components/UnsavedChanges.ts");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_widgets_EditorTooltip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/widgets/EditorTooltip */ "./app/client/widgets/EditorTooltip.ts");
/* harmony import */ var app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/widgets/FormulaEditor */ "./app/client/widgets/FormulaEditor.ts");
/* harmony import */ var app_common_AsyncCreate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/common/AsyncCreate */ "./app/common/AsyncCreate.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_client_widgets_FloatingEditor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/widgets/FloatingEditor */ "./app/client/widgets/FloatingEditor.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");









const isEqual = __webpack_require__(/*! lodash/isEqual */ "./node_modules/lodash/isEqual.js");

const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__.makeT)("FieldEditor");
function saveWithoutEditor(editorCtor, editRow, field, typedVal) {
  if (!field.column.peek().isRealFormula.peek() && editorCtor.skipEditor) {
    const origVal = editRow.cells[field.colId()].peek();
    const skipEditorValue = editorCtor.skipEditor(typedVal, origVal);
    if (skipEditorValue !== void 0) {
      setAndSave(editRow, field, skipEditorValue).catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
      return true;
    }
  }
  return false;
}
async function setAndSave(editRow, field, value) {
  const obs = editRow.cells[field.colId()];
  if (!isEqual(value, obs.peek())) {
    return obs.setAndSave(value);
  }
}
class FieldEditor extends grainjs__WEBPACK_IMPORTED_MODULE_9__.Disposable {
  constructor(options) {
    super();
    this.saveEmitter = this.autoDispose(new grainjs__WEBPACK_IMPORTED_MODULE_9__.Emitter());
    this.cancelEmitter = this.autoDispose(new grainjs__WEBPACK_IMPORTED_MODULE_9__.Emitter());
    this.changeEmitter = this.autoDispose(new grainjs__WEBPACK_IMPORTED_MODULE_9__.Emitter());
    this._editorHolder = grainjs__WEBPACK_IMPORTED_MODULE_9__.Holder.create(this);
    this._saveEdit = (0,app_common_AsyncCreate__WEBPACK_IMPORTED_MODULE_6__.asyncOnce)(() => this._doSaveEdit());
    this._editorHasChanged = false;
    this._isFormula = false;
    this._readonly = false;
    this._detached = grainjs__WEBPACK_IMPORTED_MODULE_9__.Observable.create(this, false);
    this._detachedAt = null;
    this._gristDoc = options.gristDoc;
    this._field = options.field;
    this._cursor = options.cursor;
    this._editRow = options.editRow;
    this._editorCtor = options.editorCtor;
    this._cellElem = options.cellElem;
    this._readonly = options.readonly;
    const startVal = options.startVal;
    let offerToMakeFormula = false;
    const column = this._field.column();
    this._isFormula = column.isRealFormula.peek();
    let editValue = startVal;
    if (!options.readonly && startVal && app_common_gutil__WEBPACK_IMPORTED_MODULE_7__.startsWith(startVal, "=")) {
      if (this._isFormula || this._field.column().isEmpty()) {
        this._isFormula = true;
        editValue = app_common_gutil__WEBPACK_IMPORTED_MODULE_7__.removePrefix(startVal, "=");
      } else {
        offerToMakeFormula = true;
      }
    }
    this._editCommands = {
      fieldEditSave: () => {
        this._saveEdit().then((jumped) => {
          if (!jumped) {
            app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.fieldEditSave.run();
          }
        }).catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
      },
      fieldEditSaveHere: () => {
        this._saveEdit().catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
      },
      fieldEditCancel: () => {
        this._cancelEdit();
      },
      prevField: () => {
        this._saveEdit().then(app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.prevField.run).catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
      },
      nextField: () => {
        this._saveEdit().then(app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.nextField.run).catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
      },
      makeFormula: () => this._makeFormula(),
      unmakeFormula: () => this._unmakeFormula()
    };
    if (options.readonly) {
      this._editCommands.fieldEditSave = () => {
        this._editCommands.fieldEditCancel();
        app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.fieldEditSave.run();
      };
      this._editCommands.fieldEditSaveHere = this._editCommands.fieldEditCancel;
      this._editCommands.prevField = () => {
        this._cancelEdit();
        app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.prevField.run();
      };
      this._editCommands.nextField = () => {
        this._cancelEdit();
        app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.nextField.run();
      };
      this._editCommands.makeFormula = () => true;
      this._editCommands.unmakeFormula = () => true;
    }
    this.rebuildEditor(editValue, Number.POSITIVE_INFINITY, options.state);
    this.floatingEditor = app_client_widgets_FloatingEditor__WEBPACK_IMPORTED_MODULE_8__.FloatingEditor.create(this, this, {
      gristDoc: this._gristDoc,
      refElem: this._cellElem,
      placement: "adjacent"
    });
    if (offerToMakeFormula) {
      this._offerToMakeFormula();
    }
    this._gristDoc.editorMonitor.monitorEditor(this);
    const onCleanup = async () => {
      if (this._detached.get()) {
        return;
      }
      await this._saveEdit();
    };
    if (!options.readonly) {
      setupEditorCleanup(this, this._gristDoc, this._field.editingFormula, onCleanup);
    } else {
      setupReadonlyEditorCleanup(this, this._gristDoc, this._field, () => this._cancelEdit());
    }
  }
  rebuildEditor(editValue, cursorPos, state) {
    const editorCtor = this._isFormula ? app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_5__.FormulaEditor : this._editorCtor;
    const column = this._field.column();
    const cellCurrentValue = this._editRow.cells[this._field.colId()].peek();
    let cellValue;
    if (column.isFormula()) {
      cellValue = column.formula();
    } else if (Array.isArray(cellCurrentValue) && cellCurrentValue[0] === "C") {
      cellValue = "";
    } else {
      cellValue = cellCurrentValue;
    }
    const errorHolder = new grainjs__WEBPACK_IMPORTED_MODULE_9__.MultiHolder();
    const error = (0,app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_5__.getFormulaError)(errorHolder, {
      gristDoc: this._gristDoc,
      editRow: this._editRow,
      field: this._field
    });
    if (!this._readonly) {
      const active = this._isFormula && editValue !== void 0;
      this._field.editingFormula(active);
    }
    this._detached.set(false);
    this._editorHasChanged = false;
    const editor = this._editorHolder.autoDispose(editorCtor.create({
      gristDoc: this._gristDoc,
      field: this._field,
      column: this._field.column(),
      editingFormula: this._field.editingFormula,
      cellValue,
      rowId: this._editRow.id(),
      formulaError: error,
      editValue,
      cursorPos,
      state,
      canDetach: true,
      commands: this._editCommands,
      readonly: this._readonly
    }));
    editor.autoDispose(errorHolder);
    if (editor.editorState) {
      editor.autoDispose(editor.editorState.addListener((currentState) => {
        this._editorHasChanged = true;
        const event = {
          position: this.cellPosition(),
          wasModified: this._editorHasChanged,
          currentState,
          type: this._field.column.peek().pureType.peek()
        };
        this.changeEmitter.emit(event);
      }));
    }
    editor.attach(this._cellElem);
  }
  detach() {
    this._detached.set(true);
    this._detachedAt = this._gristDoc.cursorPosition.get();
    return this._editorHolder.get().detach();
  }
  async attach(content) {
    var _a;
    if (!this._cellElem.isConnected) {
      grainjs__WEBPACK_IMPORTED_MODULE_9__.dom.domDispose(content);
      if (await this._gristDoc.recursiveMoveToCursorPos(this._detachedAt, true)) {
        await this._gristDoc.activateEditorAtCursor();
      }
      this.dispose();
      return;
    }
    this._detached.set(false);
    (_a = this._editorHolder.get()) == null ? void 0 : _a.attach(this._cellElem);
    this._field.viewSection.peek().hasFocus(true);
  }
  getDom() {
    var _a;
    return (_a = this._editorHolder.get()) == null ? void 0 : _a.getDom();
  }
  cellPosition() {
    const rowId = this._editRow.getRowId();
    const colRef = this._field.column.peek().origColRef.peek();
    const sectionId = this._field.viewSection.peek().id.peek();
    const position = {
      rowId,
      colRef,
      sectionId
    };
    return position;
  }
  _makeFormula() {
    const editor = this._editorHolder.get();
    if (editor && !this._field.editingFormula.peek() && editor.getCursorPos() === 0) {
      if (this._field.column().isEmpty()) {
        this._isFormula = true;
        this.rebuildEditor(editor.getTextValue(), 0);
        return false;
      } else {
        this._offerToMakeFormula();
      }
    }
    return true;
  }
  _unmakeFormula() {
    const editor = this._editorHolder.get();
    if (editor instanceof app_client_widgets_FormulaEditor__WEBPACK_IMPORTED_MODULE_5__.FormulaEditor && editor.isDetached.get()) {
      return true;
    }
    if (editor && this._field.editingFormula.peek() && editor.getCursorPos() === 0 && !this._field.column().isRealFormula()) {
      this._isFormula = false;
      this.rebuildEditor("=" + editor.getTextValue(), 1);
      return false;
    }
    return true;
  }
  _offerToMakeFormula() {
    var _a;
    const editorDom = (_a = this._editorHolder.get()) == null ? void 0 : _a.getDom();
    if (!editorDom) {
      return;
    }
    (0,app_client_widgets_EditorTooltip__WEBPACK_IMPORTED_MODULE_4__.showTooltipToCreateFormula)(editorDom, () => this._convertEditorToFormula());
  }
  _convertEditorToFormula() {
    const editor = this._editorHolder.get();
    if (editor) {
      const editValue = editor.getTextValue();
      const formulaValue = editValue.startsWith("=") ? editValue.slice(1) : editValue;
      this._isFormula = true;
      this.rebuildEditor(formulaValue, 0);
    }
  }
  _cancelEdit() {
    var _a, _b;
    if (this.isDisposed()) {
      return;
    }
    const event = {
      position: this.cellPosition(),
      wasModified: this._editorHasChanged,
      currentState: (_b = (_a = this._editorHolder.get()) == null ? void 0 : _a.editorState) == null ? void 0 : _b.get(),
      type: this._field.column.peek().pureType.peek()
    };
    this.cancelEmitter.emit(event);
    this.dispose();
  }
  async _doSaveEdit() {
    var _a, _b, _c;
    const editor = this._editorHolder.get();
    if (!editor) {
      return false;
    }
    const saveIndex = this._cursor.rowIndex();
    await editor.prepForSave();
    if (this.isDisposed()) {
      console.warn(t("Unable to finish saving edited cell"));
      return false;
    }
    const isFormula = this._field.editingFormula();
    const col = this._field.column();
    let waitPromise = null;
    if (isFormula) {
      const formula = String((_a = editor.getCellValue()) != null ? _a : "");
      if (isFormula !== col.isFormula.peek() || formula !== col.formula.peek()) {
        waitPromise = this._gristDoc.docData.bundleActions(null, () => Promise.all([
          col.updateColValues({ isFormula, formula }),
          !this._detached.get() && this._editRow._isAddRow.peek() && formula !== "" ? this._editRow.updateColValues({}) : void 0
        ]));
      }
    } else {
      const value = editor.getCellValue();
      if (col.isRealFormula()) {
        console.warn(t("It should be impossible to save a plain data value into a formula column"));
      } else {
        waitPromise = setAndSave(this._editRow, this._field, value);
      }
    }
    const event = {
      position: this.cellPosition(),
      wasModified: this._editorHasChanged,
      currentState: (_c = (_b = this._editorHolder.get()) == null ? void 0 : _b.editorState) == null ? void 0 : _c.get(),
      type: this._field.column.peek().pureType.peek()
    };
    this.saveEmitter.emit(event);
    const cursor = this._cursor;
    this.dispose();
    await waitPromise;
    return isFormula || saveIndex !== cursor.rowIndex();
  }
}
function setupReadonlyEditorCleanup(owner, gristDoc, field, cancelEdit) {
  gristDoc.app.on("clipboard_focus", cancelEdit);
  owner.onDispose(() => {
    field.editingFormula(false);
    gristDoc.app.off("clipboard_focus", cancelEdit);
  });
}
function setupEditorCleanup(owner, gristDoc, editingFormula, _saveEdit) {
  const saveEdit = () => _saveEdit().catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
  gristDoc.app.on("clipboard_focus", saveEdit);
  app_client_components_UnsavedChanges__WEBPACK_IMPORTED_MODULE_1__.UnsavedChange.create(owner, async () => {
    await saveEdit();
  });
  owner.onDispose(() => {
    gristDoc.app.off("clipboard_focus", saveEdit);
    editingFormula(false);
  });
}


/***/ }),

/***/ "./app/client/widgets/FloatingEditor.ts":
/*!**********************************************!*\
  !*** ./app/client/widgets/FloatingEditor.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FloatingEditor": () => (/* binding */ FloatingEditor),
/* harmony export */   "createDetachedIcon": () => (/* binding */ createDetachedIcon)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/dom */ "./app/client/lib/dom.js");
/* harmony import */ var app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var app_client_lib_FocusLayer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/FocusLayer */ "./app/client/lib/FocusLayer.ts");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui_FloatingPopup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui/FloatingPopup */ "./app/client/ui/FloatingPopup.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
var _a;








const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_3__.makeT)("FloatingEditor");
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.makeTestId)("test-floating-editor-");
class FloatingEditor extends grainjs__WEBPACK_IMPORTED_MODULE_7__.Disposable {
  constructor(_fieldEditor, _options) {
    super();
    this._fieldEditor = _fieldEditor;
    this._options = _options;
    this.active = grainjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create(this, false);
    this._gristDoc = this._options.gristDoc;
    this._placement = (_a = this._options.placement) != null ? _a : "fixed";
    this._refElem = this._options.refElem;
    this.autoDispose(app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.createGroup({
      detachEditor: this.createPopup.bind(this)
    }, this, true));
  }
  createPopup() {
    const editor = this._fieldEditor;
    const popupOwner = grainjs__WEBPACK_IMPORTED_MODULE_7__.Holder.create(editor);
    const tempOwner = new grainjs__WEBPACK_IMPORTED_MODULE_7__.MultiHolder();
    try {
      app_client_lib_FocusLayer__WEBPACK_IMPORTED_MODULE_2__.FocusLayer.create(tempOwner, { defaultFocusElem: document.activeElement });
      const cursor = this._gristDoc.cursorPosition.get();
      const vs = this._gristDoc.docModel.viewSections.getRowModel(cursor.sectionId);
      const table = vs.tableId.peek();
      const field = vs.viewFields.peek().at(cursor.fieldIndex);
      const title = `${table}.${field.label.peek()}`;
      let content;
      const popup = app_client_ui_FloatingPopup__WEBPACK_IMPORTED_MODULE_4__.FloatingPopup.create(popupOwner, {
        content: () => content = editor.detach(),
        title: () => title,
        closeButton: true,
        closeButtonIcon: "Minimize",
        closeButtonHover: () => t("Collapse Editor"),
        onClose: async () => {
          const layer = app_client_lib_FocusLayer__WEBPACK_IMPORTED_MODULE_2__.FocusLayer.create(null, { defaultFocusElem: document.activeElement });
          try {
            (0,app_client_lib_dom__WEBPACK_IMPORTED_MODULE_1__.detachNode)(content);
            popupOwner.dispose();
            await editor.attach(content);
          } finally {
            layer.dispose();
          }
        },
        minHeight: 550,
        initialPosition: this._getInitialPosition(),
        args: [testId("popup")]
      });
      this.active.set(true);
      popup.onDispose(() => {
        this.active.set(false);
      });
      popup.showPopup();
    } finally {
      tempOwner.dispose();
    }
  }
  _getInitialPosition() {
    if (!this._refElem || this._placement === "fixed") {
      return void 0;
    }
    const refElem = this._refElem;
    const refElemBoundingRect = refElem.getBoundingClientRect();
    if (this._placement === "overlapping") {
      return [
        refElemBoundingRect.left,
        refElemBoundingRect.top
      ];
    } else {
      if (window.innerWidth - refElemBoundingRect.right >= app_client_ui_FloatingPopup__WEBPACK_IMPORTED_MODULE_4__.FLOATING_POPUP_MAX_WIDTH_PX) {
        return [
          refElemBoundingRect.right,
          refElemBoundingRect.top
        ];
      } else {
        return [
          refElemBoundingRect.left - app_client_ui_FloatingPopup__WEBPACK_IMPORTED_MODULE_4__.FLOATING_POPUP_MAX_WIDTH_PX,
          refElemBoundingRect.top
        ];
      }
    }
  }
}
function createDetachedIcon(...args) {
  return cssResizeIconWrapper(cssSmallIcon("Maximize"), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("click", (e) => {
    e.stopPropagation();
    e.preventDefault();
    app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.detachEditor.run();
  }), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.on("mousedown", (e) => {
    e.preventDefault();
    e.stopPropagation();
  }), testId("detach-button"), ...args);
}
const cssSmallIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_6__.icon, `
  width: 14px;
  height: 14px;
`);
const cssResizeIconWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div", `
  position: absolute;
  right: -2px;
  top: -20px;
  line-height: 0px;
  cursor: pointer;
  z-index: 10;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_5__.theme.cellBg};
  background: var(--grist-theme-control-primary-bg, var(--grist-primary-fg));
  height: 20px;
  width: 21px;
  --icon-color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 0px;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  &:hover {
    background: var(--grist-theme-control-primary-hover-bg, var(--grist-primary-fg-hover))
  }
  & > div {
    transition: background .05s ease-in-out;
  }
`);


/***/ }),

/***/ "./app/client/widgets/FormulaAssistant.ts":
/*!************************************************!*\
  !*** ./app/client/widgets/FormulaAssistant.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FormulaAssistant": () => (/* binding */ FormulaAssistant)
/* harmony export */ });
/* harmony import */ var app_client_components_Banner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/Banner */ "./app/client/components/Banner.ts");
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_lib_localStorageObs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/lib/localStorageObs */ "./app/client/lib/localStorageObs.ts");
/* harmony import */ var app_client_lib_popupUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/lib/popupUtils */ "./app/client/lib/popupUtils.ts");
/* harmony import */ var app_client_lib_telemetry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/lib/telemetry */ "./app/client/lib/telemetry.ts");
/* harmony import */ var app_client_models_features__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/models/features */ "./app/client/models/features.ts");
/* harmony import */ var app_client_models_gristUrlState__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/models/gristUrlState */ "./app/client/models/gristUrlState.ts");
/* harmony import */ var app_client_ui_CodeHighlight__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui/CodeHighlight */ "./app/client/ui/CodeHighlight.ts");
/* harmony import */ var app_client_ui_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/ui/forms */ "./app/client/ui/forms.ts");
/* harmony import */ var app_client_ui_sanitizeHTML__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/ui/sanitizeHTML */ "./app/client/ui/sanitizeHTML.ts");
/* harmony import */ var app_client_ui_UserImage__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/ui/UserImage */ "./app/client/ui/UserImage.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/client/ui2018/links */ "./app/client/ui2018/links.ts");
/* harmony import */ var app_client_ui2018_loaders__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app/client/ui2018/loaders */ "./app/client/ui2018/loaders.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_common_ApiError__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/common/ApiError */ "./app/common/ApiError.ts");
/* harmony import */ var app_common_Features__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! app/common/Features */ "./app/common/Features.ts");
/* harmony import */ var app_common_gristUrls__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! app/common/gristUrls */ "./app/common/gristUrls.ts");
/* harmony import */ var app_common_urlUtils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! app/common/urlUtils */ "./app/common/urlUtils.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var lodash_noop__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! lodash/noop */ "./node_modules/lodash/noop.js");
/* harmony import */ var lodash_noop__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(lodash_noop__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var marked__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! marked */ "./node_modules/marked/lib/marked.esm.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/index.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_26__);
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var _a, _b, _c, _d;



























const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__.makeT)("FormulaEditor");
const testId = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.makeTestId)("test-formula-editor-");
const LOW_CREDITS_WARNING_BANNER_THRESHOLD = 10;
class FormulaAssistant extends grainjs__WEBPACK_IMPORTED_MODULE_22__.Disposable {
  constructor(_options) {
    super();
    this._options = _options;
    this._gristDoc = this._options.gristDoc;
    this._appModel = this._gristDoc.appModel;
    this._userInput = grainjs__WEBPACK_IMPORTED_MODULE_22__.Observable.create(this, "");
    this._assistantExpanded = this.autoDispose((0,app_client_lib_localStorageObs__WEBPACK_IMPORTED_MODULE_3__.localStorageBoolObs)(`u:${(_b = (_a = this._appModel.currentUser) == null ? void 0 : _a.id) != null ? _b : 0};formulaAssistantExpanded`, true));
    this._waiting = grainjs__WEBPACK_IMPORTED_MODULE_22__.Observable.create(this, false);
    this._triggerFinalize = (lodash_noop__WEBPACK_IMPORTED_MODULE_24___default());
    this._action = "close";
    this._chatPanelBodyClientHeight = grainjs__WEBPACK_IMPORTED_MODULE_22__.Observable.create(this, 0);
    this._hasExpandedOnce = false;
    this._isResizing = grainjs__WEBPACK_IMPORTED_MODULE_22__.Observable.create(this, false);
    this._showApproachingLimitBanner = this.autoDispose((0,app_client_lib_localStorageObs__WEBPACK_IMPORTED_MODULE_3__.sessionStorageBoolObs)(`org:${(_d = (_c = this._appModel.currentOrg) == null ? void 0 : _c.id) != null ? _d : 0};formulaAssistantShowApproachingLimitBanner`, true));
    this._numRemainingCredits = grainjs__WEBPACK_IMPORTED_MODULE_22__.Observable.create(this, null);
    this._resizeEditor = lodash_debounce__WEBPACK_IMPORTED_MODULE_23___default()(() => {
      if (!this.isDisposed()) {
        this._options.editor.resize();
      }
    }, 10);
    this._assistantEnabled = (0,app_client_models_features__WEBPACK_IMPORTED_MODULE_6__.HAS_FORMULA_ASSISTANT)();
    if (!this._options.field) {
      throw new Error("Formula assistant requires a field to be passed.");
    }
    this._chat = ChatHistory.create(this, __spreadProps(__spreadValues({}, this._options), {
      apply: this._apply.bind(this),
      logTelemetryEvent: this._logTelemetryEvent.bind(this)
    }));
    this.autoDispose(app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.createGroup({
      activateAssistant: () => {
        this._expandChatPanel();
        setTimeout(() => {
          this._focusChatInput();
        }, 0);
      }
    }, this, true));
    const observer = new ResizeObserver(this._resizeEditor);
    observer.observe(this._options.editor.getDom());
    this.onDispose(() => observer.disconnect());
    const bundleInfo = this._options.gristDoc.docData.startBundlingActions({
      description: "Formula Editor",
      prepare: () => this._preparePreview(),
      finalize: () => this._cleanupPreview(),
      shouldIncludeInBundle: (actions) => {
        if (actions.length !== 1) {
          return false;
        }
        const actionName = actions[0][0];
        if (actionName === "ModifyColumn") {
          const tableId = this._options.column.table.peek().tableId.peek();
          return actions[0][1] === tableId && typeof actions[0][2] === "string" && [this._transformColId, this._options.column.id.peek()].includes(actions[0][2]);
        } else if (actionName === "UpdateRecord") {
          return actions[0][1] === "_grist_Tables_column" && actions[0][2] === this._transformColRef;
        } else {
          return false;
        }
      }
    });
    this._triggerFinalize = bundleInfo.triggerFinalize;
    this.onDispose(() => {
      if (this._hasExpandedOnce) {
        this._logTelemetryEvent("assistantClose", false, {
          suggestionApplied: this._chat.conversationSuggestedFormulas.get().includes(this._options.column.formula.peek()),
          conversationLength: this._chat.conversationLength.get(),
          conversationHistoryLength: this._chat.conversationHistoryLength.get()
        });
      }
      this._triggerFinalize();
    });
  }
  buildDom() {
    const observer = new ResizeObserver(this._resizeEditor);
    this._domElement = cssTools((el) => observer.observe(el), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onDispose(() => observer.disconnect()), cssButtons((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_12__.basicButton)(t("Cancel"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => {
      this._cancel();
    }), testId("cancel-button")), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_12__.basicButton)(t("Preview"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", async () => {
      await this._preview();
    }), testId("preview-button")), (0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_12__.primaryButton)(t("Save"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => {
      this._saveOrClose();
    }), testId("save-button"))), this._buildChatPanel());
    if (this._assistantEnabled) {
      if (!this._assistantExpanded.get()) {
        this._chatPanelBody.style.setProperty("height", "0px");
      } else {
        this._chatPanelBody.style.setProperty("height", "999px");
      }
    }
    if (this._assistantEnabled && this._assistantExpanded.get()) {
      this._logTelemetryEvent("assistantOpen", true);
      this._hasExpandedOnce = true;
    }
    return this._domElement;
  }
  _buildChatPanel() {
    return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.maybe(this._assistantEnabled, () => {
      return cssChatPanel(cssChatPanelHeaderResizer((0,app_client_lib_popupUtils__WEBPACK_IMPORTED_MODULE_4__.movable)({
        onStart: this._onResizeStart.bind(this),
        onMove: this._onResizeMove.bind(this),
        onEnd: this._onResizeEnd.bind(this)
      }), cssChatPanelHeaderResizer.cls("-collapsed", (use) => !use(this._assistantExpanded))), this._buildChatPanelHeader(), this._buildChatPanelBody());
    });
  }
  _logTelemetryEvent(event, includeContext = false, metadata = {}) {
    (0,app_client_lib_telemetry__WEBPACK_IMPORTED_MODULE_5__.logTelemetryEvent)(event, {
      full: __spreadValues(__spreadValues({
        docIdDigest: this._gristDoc.docId,
        conversationId: this._chat.conversationId.get()
      }, !includeContext ? {} : { context: {
        type: "formula",
        tableId: this._options.column.table.peek().tableId.peek(),
        colId: this._options.column.colId.peek()
      } }), metadata)
    });
  }
  _buildChatPanelHeader() {
    return cssChatPanelHeader(cssChatPanelHeaderTitle((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__.icon)("Robot"), t("AI Assistant")), cssChatPanelHeaderButtons(cssChatPanelHeaderButton(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domComputed(this._assistantExpanded, (isExpanded) => isExpanded ? (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__.icon)("Dropdown") : (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__.icon)("DropdownUp")), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => {
      if (this._assistantExpanded.get()) {
        this._collapseChatPanel();
      } else {
        this._expandChatPanel();
      }
    }), testId("ai-assistant-expand-collapse")), cssChatPanelHeaderButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__.icon)("Dots"), (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_17__.menu)(() => [
      (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_17__.menuItem)(() => this._clear(), t("Clear Conversation"), testId("ai-assistant-options-clear-conversation"))
    ], { menuCssClass: app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_17__.menuCssClass + " " + cssChatOptionsMenu.className }), testId("ai-assistant-options"))));
  }
  _buildChatPanelBody() {
    setTimeout(() => {
      if (!this.isDisposed()) {
        this._chat.scrollDown(false);
      }
      this._options.editor.resize();
    }, 0);
    const observer = new ResizeObserver(() => {
      this._chatPanelBodyClientHeight.set(this._chatPanelBody.clientHeight);
    });
    this._chatPanelBody = cssChatPanelBody(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onDispose(() => observer.disconnect()), testId("ai-assistant-chat-panel"), this._buildChatPanelBanner(), this._chat.buildDom(), this._appModel.currentValidUser ? this._buildChatInput() : this._buildSignupNudge(), cssChatPanelBody.cls("-resizing", this._isResizing), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("mousedown", (ev) => ev.stopPropagation()));
    observer.observe(this._chatPanelBody);
    return this._chatPanelBody;
  }
  _buildChatPanelBanner() {
    return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domComputed((use) => {
      const numCredits = use(this._numRemainingCredits);
      if (numCredits === null || numCredits > LOW_CREDITS_WARNING_BANNER_THRESHOLD) {
        return null;
      } else if (numCredits === 0) {
        return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(app_client_components_Banner__WEBPACK_IMPORTED_MODULE_0__.Banner, {
          content: (0,app_client_components_Banner__WEBPACK_IMPORTED_MODULE_0__.buildBannerMessage)(t("You have used all available credits."), " ", this._buildBannerUpgradeMessage(), testId("ai-assistant-banner-message")),
          style: "error",
          bannerCssClass: cssBanner.className
        });
      } else {
        const showBanner = use(this._showApproachingLimitBanner);
        if (!showBanner) {
          return null;
        }
        return grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.create(app_client_components_Banner__WEBPACK_IMPORTED_MODULE_0__.Banner, {
          content: (0,app_client_components_Banner__WEBPACK_IMPORTED_MODULE_0__.buildBannerMessage)(t("You have {{numCredits}} remaining credits.", { numCredits }), " ", this._buildBannerUpgradeMessage(), testId("ai-assistant-banner-message")),
          style: "warning",
          showCloseButton: true,
          onClose: () => {
            this._showApproachingLimitBanner.set(false);
          },
          bannerCssClass: cssBanner.className
        });
      }
    });
  }
  _buildBannerUpgradeMessage() {
    const canUpgradeSite = this._appModel.isOwner() && Boolean(this._appModel.planName && (0,app_common_Features__WEBPACK_IMPORTED_MODULE_19__.isFreePlan)(this._appModel.planName));
    const isBillingManager = this._appModel.isBillingManager() || this._appModel.isSupport();
    if (!canUpgradeSite && !isBillingManager) {
      return t("For higher limits, contact the site owner.");
    }
    return t("For higher limits, {{upgradeNudge}}.", {
      upgradeNudge: (0,app_client_components_Banner__WEBPACK_IMPORTED_MODULE_0__.cssBannerLink)(canUpgradeSite ? t("upgrade to the Pro Team plan") : t("upgrade your plan"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", async () => {
        if (canUpgradeSite) {
          this._gristDoc.appModel.showUpgradeModal();
        } else {
          await (0,app_client_models_gristUrlState__WEBPACK_IMPORTED_MODULE_7__.urlState)().pushUrl({ billing: "billing" });
        }
      }))
    });
  }
  _saveOrClose() {
    if (this._hasExpandedOnce) {
      this._logTelemetryEvent("assistantSave", true, {
        oldFormula: this._options.column.formula.peek(),
        newFormula: this._options.editor.getTextValue()
      });
    }
    this._action = "save";
    this._triggerFinalize();
  }
  _cancel() {
    if (this._hasExpandedOnce) {
      this._logTelemetryEvent("assistantCancel", true);
    }
    this._action = "cancel";
    this._triggerFinalize();
  }
  async _preview() {
    const tableId = this._options.column.table.peek().tableId.peek();
    const formula = this._options.editor.getCellValue();
    const isFormula = true;
    await this._options.gristDoc.docData.sendAction([
      "ModifyColumn",
      tableId,
      this._transformColId,
      { formula, isFormula }
    ]);
    if (!this.isDisposed()) {
      this._options.editor.focus();
    }
  }
  async _preparePreview() {
    var _a2, _b2, _c2, _d2, _e;
    const docData = this._options.gristDoc.docData;
    const tableId = this._options.column.table.peek().tableId.peek();
    const { colRef, colId } = await docData.sendAction(["AddColumn", tableId, "gristHelper_Transform", {
      type: this._options.column.type.peek(),
      label: this._options.column.colId.peek(),
      isFormula: true,
      formula: this._options.column.formula.peek(),
      widgetOptions: JSON.stringify((_a2 = this._options.field) == null ? void 0 : _a2.widgetOptionsJson())
    }]);
    this._transformColRef = colRef;
    this._transformColId = colId;
    const rules = (_b2 = this._options.field) == null ? void 0 : _b2.rulesList();
    if (rules) {
      await docData.sendAction(["UpdateRecord", "_grist_Tables_column", colRef, {
        rules: (_c2 = this._options.field) == null ? void 0 : _c2.rulesList()
      }]);
    }
    (_d2 = this._options.field) == null ? void 0 : _d2.colRef(colRef);
    const transformColumn = (_e = this._options.field) == null ? void 0 : _e.column.peek();
    if (transformColumn) {
      transformColumn.isTransforming(true);
      this._options.column.isTransforming(true);
      transformColumn.origColRef(this._options.column.getRowId());
    }
  }
  async _cleanupPreview() {
    var _a2, _b2;
    this._triggerFinalize = (lodash_noop__WEBPACK_IMPORTED_MODULE_24___default());
    const docData = this._options.gristDoc.docData;
    const tableId = this._options.column.table.peek().tableId.peek();
    const column = this._options.column;
    try {
      if (this._action === "save") {
        const formula = this._options.editor.getCellValue();
        await docData.sendActions([
          ["ModifyColumn", tableId, column.colId.peek(), { formula, isFormula: true }]
        ]);
      }
      (_a2 = this._options.field) == null ? void 0 : _a2.colRef(column.getRowId());
      if (this._action === "save") {
        app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.allCommands.fieldEditSaveHere.run();
      } else if (this._action === "cancel") {
        app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.allCommands.fieldEditCancel.run();
      } else {
        if (this._action !== "close") {
          throw new Error("Unexpected value for _action");
        }
        if (!this.isDisposed()) {
          app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.allCommands.fieldEditCancel.run();
        }
      }
      await docData.sendActions([
        ["RemoveColumn", tableId, this._transformColId]
      ]);
    } finally {
      (_b2 = this._options.field) == null ? void 0 : _b2.colRef(column.getRowId());
      column.isTransforming(false);
    }
  }
  _collapseChatPanel() {
    if (!this._assistantExpanded.get()) {
      return;
    }
    this._assistantExpanded.set(false);
    this._chatPanelBody.style.setProperty("transition", "none");
    this._chatPanelBody.style.setProperty("height", `${this._chatPanelBody.clientHeight}px`);
    this._chatPanelBody.offsetHeight;
    this._chatPanelBody.style.removeProperty("transition");
    this._chatPanelBody.style.setProperty("height", "0px");
    this._resizeEditor();
  }
  _expandChatPanel() {
    if (!this._hasExpandedOnce) {
      this._logTelemetryEvent("assistantOpen", true);
      this._hasExpandedOnce = true;
    }
    if (this._assistantExpanded.get()) {
      return;
    }
    this._assistantExpanded.set(true);
    const editor = this._options.editor.getDom();
    let availableSpace = editor.clientHeight - MIN_FORMULA_EDITOR_HEIGHT_PX - FORMULA_EDITOR_BUTTONS_HEIGHT_PX - CHAT_PANEL_HEADER_HEIGHT_PX;
    if (editor.querySelector(".error_msg")) {
      availableSpace -= editor.querySelector(".error_msg").clientHeight;
    }
    if (editor.querySelector(".error_details")) {
      availableSpace -= editor.querySelector(".error_details").clientHeight;
    }
    if (this._lastChatPanelHeight) {
      const height = Math.min(Math.max(this._lastChatPanelHeight, 220), availableSpace);
      this._chatPanelBody.style.setProperty("height", `${height}px`);
      this._lastChatPanelHeight = height;
    } else {
      this._lastChatPanelHeight = availableSpace;
      this._chatPanelBody.style.setProperty("height", `${this._lastChatPanelHeight}px`);
    }
    this._resizeEditor();
  }
  _onResizeStart() {
    var _a2;
    this._isResizing.set(true);
    const start = (_a2 = this._domElement) == null ? void 0 : _a2.clientHeight;
    const total = this._options.editor.getDom().clientHeight;
    return {
      start,
      total
    };
  }
  _onResizeMove(x, y, { start, total }) {
    const newChatPanelBodyHeight = start - y - CHAT_PANEL_HEADER_HEIGHT_PX - FORMULA_EDITOR_BUTTONS_HEIGHT_PX;
    if (newChatPanelBodyHeight < MIN_CHAT_PANEL_BODY_HEIGHT_PX && this._isResizing.get()) {
      this._isResizing.set(false);
    } else if (newChatPanelBodyHeight >= MIN_CHAT_PANEL_BODY_HEIGHT_PX && !this._isResizing.get()) {
      this._isResizing.set(true);
    }
    const collapseThreshold = 78;
    if (newChatPanelBodyHeight < collapseThreshold) {
      this._collapseChatPanel();
    } else {
      this._expandChatPanel();
      const calculatedHeight = Math.max(MIN_CHAT_PANEL_BODY_HEIGHT_PX, Math.min(total - MIN_FORMULA_EDITOR_HEIGHT_PX, newChatPanelBodyHeight));
      this._chatPanelBody.style.height = `${calculatedHeight}px`;
    }
  }
  _onResizeEnd() {
    this._isResizing.set(false);
    if (this._assistantExpanded.get()) {
      this._lastChatPanelHeight = this._chatPanelBody.clientHeight;
    }
  }
  _buildChatInput() {
    if (this._input) {
      grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.domDispose(this._input);
    }
    this._input = cssInput(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("input", (ev) => {
      this._userInput.set(ev.target.value);
    }), (0,app_client_ui_forms__WEBPACK_IMPORTED_MODULE_9__.autoGrow)(this._userInput), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.style("max-height", (use) => {
      var _a2, _b2, _c2, _d2;
      const panelHeight = use(this._chatPanelBodyClientHeight);
      const availableInputHeight = panelHeight - (((_b2 = (_a2 = this._inputWrapper) == null ? void 0 : _a2.clientHeight) != null ? _b2 : 0) - ((_d2 = (_c2 = this._input) == null ? void 0 : _c2.clientHeight) != null ? _d2 : 0)) - MIN_CHAT_HISTORY_HEIGHT_PX;
      return `${Math.max(availableInputHeight, MIN_CHAT_INPUT_HEIGHT_PX)}px`;
    }), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.onKeyDown({
      Enter$: (ev) => this._handleChatEnterKeyDown(ev),
      Escape: () => this._cancel()
    }), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.autoDispose(this._userInput.addListener((value) => this._input.value = value)), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.prop("disabled", this._waiting), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.prop("placeholder", (use) => {
      const lastFormula = use(this._chat.lastSuggestedFormula);
      if (lastFormula) {
        return t("Press Enter to apply suggested formula.");
      } else {
        return t("What do you need help with?");
      }
    }), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.autoDispose(this._waiting.addListener((value) => {
      if (!value) {
        setTimeout(() => this._focusChatInput(), 0);
      }
    })));
    return this._inputWrapper = cssHContainer(testId("ai-assistant-chat-input"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.cls(cssTopBorder.className), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.cls(cssVSpace.className), cssInputWrapper(grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.cls(cssTypography.className), this._input, cssInputButtonsRow(cssSendMessageButton((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__.icon)("FieldAny"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", this._handleSendMessageClick.bind(this)), cssSendMessageButton.cls("-disabled", (use) => use(this._waiting) || use(this._userInput).length === 0)), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", (ev) => {
      ev.stopPropagation();
      this._focusChatInput();
    }), cssInputButtonsRow.cls("-disabled", this._waiting)), cssInputWrapper.cls("-disabled", this._waiting)));
  }
  _buildSignupNudge() {
    const { deploymentType } = (0,app_common_urlUtils__WEBPACK_IMPORTED_MODULE_21__.getGristConfig)();
    return deploymentType === "saas" ? buildSignupNudge() : buildAnonNudge();
  }
  async _handleChatEnterKeyDown(ev) {
    if (ev.shiftKey) {
      return;
    }
    ev.preventDefault();
    const lastFormula = this._chat.lastSuggestedFormula.get();
    if (this._input.value === "" && lastFormula) {
      this._apply(lastFormula).catch(reportError);
    } else {
      this._ask().catch(reportError);
    }
  }
  async _handleSendMessageClick(ev) {
    if (this._waiting.get() || this._input.value.length === 0) {
      return;
    }
    await this._ask();
  }
  async _apply(formula) {
    this._options.editor.setFormula(formula);
    this._resizeEditor();
    await this._preview();
  }
  async _sendMessage(description) {
    const { column, gristDoc } = this._options;
    const conversationId = this._chat.conversationId.get();
    const prevState = column.chatHistory.peek().get().state;
    const { reply, suggestedActions, suggestedFormula, state, limit } = await askAI(gristDoc, {
      conversationId,
      column,
      description,
      state: prevState
    });
    if (limit && limit.limit >= 0) {
      this._numRemainingCredits.set(Math.max(limit.limit - limit.usage, 0));
    } else {
      this._numRemainingCredits.set(null);
    }
    console.debug("received formula assistant response: ", { suggestedActions, suggestedFormula, reply, state });
    const chatHistoryNew = column.chatHistory.peek();
    const value = chatHistoryNew.get();
    value.state = state;
    const prettyMessage = state ? reply || suggestedFormula || "" : suggestedFormula || reply || "";
    return {
      message: prettyMessage,
      formula: suggestedFormula,
      action: suggestedActions[0],
      sender: "ai"
    };
  }
  _focusChatInput() {
    if (!this._input) {
      return;
    }
    this._input.focus();
    if (this._input.value.length > 0) {
      this._input.selectionStart = this._input.value.length;
      this._input.scrollTop = this._input.scrollHeight;
    }
  }
  _clear() {
    this._chat.clear();
    this._userInput.set("");
  }
  async _ask() {
    if (this._waiting.get()) {
      return;
    }
    const message = this._userInput.get();
    if (!message) {
      return;
    }
    this._chat.addQuestion(message);
    this._userInput.set("");
    await this._doAsk(message);
  }
  async _doAsk(message) {
    var _a2;
    this._chat.thinking();
    this._waiting.set(true);
    try {
      const response = await this._sendMessage(message);
      this._chat.addResponse(response);
    } catch (err) {
      if (err instanceof app_common_ApiError__WEBPACK_IMPORTED_MODULE_18__.ApiError && err.status === 429 && ((_a2 = err.details) == null ? void 0 : _a2.limit)) {
        const { projectedValue, maximum } = err.details.limit;
        if (projectedValue >= maximum) {
          this._numRemainingCredits.set(0);
          return;
        }
      }
      throw err;
    } finally {
      this._chat.thinking(false);
      this._waiting.set(false);
    }
  }
}
class ChatHistory extends grainjs__WEBPACK_IMPORTED_MODULE_22__.Disposable {
  constructor(_options) {
    super();
    this._options = _options;
    const column = this._options.column;
    let conversationId = column.chatHistory.peek().get().conversationId;
    if (!conversationId) {
      conversationId = (0,uuid__WEBPACK_IMPORTED_MODULE_26__.v4)();
      const chatHistory = column.chatHistory.peek();
      chatHistory.set(__spreadProps(__spreadValues({}, chatHistory.get()), { conversationId }));
    }
    this.conversationId = grainjs__WEBPACK_IMPORTED_MODULE_22__.Observable.create(this, conversationId);
    this.autoDispose(this.conversationId.addListener((newConversationId) => {
      const chatHistory = column.chatHistory.peek();
      chatHistory.set(__spreadProps(__spreadValues({}, chatHistory.get()), { conversationId: newConversationId }));
    }));
    this.conversationHistory = this.autoDispose((0,grainjs__WEBPACK_IMPORTED_MODULE_22__.obsArray)(column.chatHistory.peek().get().messages));
    this.autoDispose(this.conversationHistory.addListener((cur) => {
      const chatHistory = column.chatHistory.peek();
      chatHistory.set(__spreadProps(__spreadValues({}, chatHistory.get()), { messages: [...cur] }));
    }));
    this.conversation = this.autoDispose((0,grainjs__WEBPACK_IMPORTED_MODULE_22__.obsArray)());
    this.conversationHistoryLength = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(this, (use) => use(this.conversationHistory).length);
    this.conversationLength = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(this, (use) => use(this.conversation).length);
    this.conversationSuggestedFormulas = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(this, (use) => {
      return use(this.conversation).map(({ formula }) => formula).filter((formula) => Boolean(formula));
    });
    this.lastSuggestedFormula = grainjs__WEBPACK_IMPORTED_MODULE_22__.Computed.create(this, (use) => {
      var _a2, _b2;
      return (_b2 = (_a2 = [...use(this.conversationHistory)].reverse().find(({ formula }) => formula)) == null ? void 0 : _a2.formula) != null ? _b2 : null;
    });
  }
  thinking(on = true) {
    if (!on) {
      const messages = [...this.conversationHistory.get()].filter((m) => m.message === "...");
      for (const message of messages) {
        this.conversationHistory.splice(this.conversationHistory.get().indexOf(message), 1);
      }
    } else {
      this.conversationHistory.push({
        message: "...",
        sender: "ai"
      });
      this.scrollDown();
    }
  }
  supportsMarkdown() {
    return this._options.column.chatHistory.peek().get().state !== void 0;
  }
  addResponse(message) {
    this.thinking(false);
    const entry = __spreadProps(__spreadValues({}, message), { sender: "ai" });
    this.conversationHistory.push(entry);
    this.conversation.push(entry);
    this.scrollDown();
  }
  addQuestion(message) {
    this.thinking(false);
    const entry = { message, sender: "user" };
    this.conversationHistory.push(entry);
    this.conversation.push(entry);
  }
  lastQuestion() {
    const list = this.conversationHistory.get();
    if (list.length === 0) {
      return null;
    }
    const lastMessage = list[list.length - 1];
    if ((lastMessage == null ? void 0 : lastMessage.sender) === "user") {
      return lastMessage.message;
    }
    throw new Error("No last question found");
  }
  removeLastResponse() {
    const lastMessage = this.conversationHistory.get()[this.conversationHistory.get().length - 1];
    if ((lastMessage == null ? void 0 : lastMessage.sender) === "ai") {
      this.conversationHistory.pop();
    }
  }
  clear() {
    this._options.logTelemetryEvent("assistantClearConversation", true);
    this.conversationId.set((0,uuid__WEBPACK_IMPORTED_MODULE_26__.v4)());
    this.conversationHistory.set([]);
    const { column } = this._options;
    const prevState = column.chatHistory.peek().get();
    prevState.state = void 0;
  }
  scrollDown(smooth = true) {
    this._element.scroll({
      top: 99999,
      behavior: smooth ? "smooth" : "auto"
    });
  }
  buildDom() {
    return this._element = cssHistory(this._buildIntroMessage(), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.forEach(this.conversationHistory, (entry) => {
      if (entry.sender === "user") {
        return cssMessage((0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("span", grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.text(entry.message), testId("ai-assistant-message-user"), testId("ai-assistant-message")), cssAvatar(buildAvatar(this._options.gristDoc)));
      } else {
        return (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", cssAiMessage(cssAvatar(cssAiImage()), entry.message === "..." ? cssLoadingDots() : this._render(entry.message, grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.cls("formula-assistant-message"), testId("ai-assistant-message-ai"), testId("ai-assistant-message"))), cssAiMessageButtonsRow(cssAiMessageButtons((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_12__.primaryButton)(t("Apply"), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.on("click", () => {
          this._options.apply(entry.formula);
        }))), grainjs__WEBPACK_IMPORTED_MODULE_22__.dom.show(Boolean(entry.formula))));
      }
    }));
  }
  _buildIntroMessage() {
    return cssAiIntroMessage(cssAvatar(cssAiImage()), (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", cssAiMessageParagraph(t(`Hi, I'm the Grist Formula AI Assistant.`)), cssAiMessageParagraph(t(`There are some things you should know when working with me:`)), cssAiMessageParagraph(cssAiMessageBullet(cssTickIcon("Tick"), t("I can only help with formulas. I cannot build tables, columns, and views, or write access rules.")), cssAiMessageBullet(cssTickIcon("Tick"), t('Talk to me like a person. No need to specify tables and column names. For example, you can ask "Please calculate the total invoice amount."')), (0,app_client_models_features__WEBPACK_IMPORTED_MODULE_6__.WHICH_FORMULA_ASSISTANT)() === "OpenAI" ? cssAiMessageBullet(cssTickIcon("Tick"), (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", t("When you talk to me, your questions and your document structure (visible in {{codeView}}) are sent to OpenAI. {{learnMore}}.", {
      codeView: (0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_15__.cssLink)(t("Code View"), (0,app_client_models_gristUrlState__WEBPACK_IMPORTED_MODULE_7__.urlState)().setLinkUrl({ docPage: "code" })),
      learnMore: (0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_15__.cssLink)(t("Learn more"), { href: app_common_gristUrls__WEBPACK_IMPORTED_MODULE_20__.commonUrls.helpAssistantDataUse, target: "_blank" })
    }))) : null), cssAiMessageParagraph(t("For more help with formulas, check out our {{functionList}} and {{formulaCheatSheet}}, or visit our {{community}} for more help.", {
      functionList: (0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_15__.cssLink)(t("Function List"), { href: app_common_gristUrls__WEBPACK_IMPORTED_MODULE_20__.commonUrls.functions, target: "_blank" }),
      formulaCheatSheet: (0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_15__.cssLink)(t("Formula Cheat Sheet"), { href: app_common_gristUrls__WEBPACK_IMPORTED_MODULE_20__.commonUrls.formulaSheet, target: "_blank" }),
      community: (0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_15__.cssLink)(t("Community"), { href: app_common_gristUrls__WEBPACK_IMPORTED_MODULE_20__.commonUrls.community, target: "_blank" })
    }))), testId("ai-assistant-message-intro"));
  }
  _render(message, ...args) {
    const doc = this._options.gristDoc;
    if (this.supportsMarkdown()) {
      return (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", (el) => (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.subscribeElem)(el, doc.currentTheme, () => {
        const content = (0,app_client_ui_sanitizeHTML__WEBPACK_IMPORTED_MODULE_10__.sanitizeHTML)((0,marked__WEBPACK_IMPORTED_MODULE_25__.marked)(message, {
          highlight: (code) => {
            const codeBlock = (0,app_client_ui_CodeHighlight__WEBPACK_IMPORTED_MODULE_8__.buildHighlightedCode)(code, {
              gristTheme: doc.currentTheme,
              maxLines: 60
            });
            return codeBlock.innerHTML;
          }
        }));
        el.innerHTML = content;
      }), ...args);
    } else {
      return (0,app_client_ui_CodeHighlight__WEBPACK_IMPORTED_MODULE_8__.buildHighlightedCode)(message, {
        gristTheme: doc.currentTheme,
        maxLines: 100
      });
    }
  }
}
async function askAI(grist, options) {
  const { column, description, conversationId, state } = options;
  const tableId = column.table.peek().tableId.peek();
  const colId = column.colId.peek();
  return await grist.docApi.getAssistance({
    conversationId,
    context: { type: "formula", tableId, colId },
    text: description,
    state
  });
}
function buildAvatar(grist) {
  var _a2;
  const user = ((_a2 = grist.app.topAppModel.appObs.get()) == null ? void 0 : _a2.currentUser) || null;
  if (user) {
    return (0,app_client_ui_UserImage__WEBPACK_IMPORTED_MODULE_11__.createUserImage)(user, "medium");
  } else {
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.dom)("div", "");
  }
}
function buildSignupNudge() {
  return cssSignupNudgeWrapper(cssSignupNudgeParagraph(t("Sign up for a free Grist account to start using the Formula AI Assistant.")), cssSignupNudgeButtonsRow((0,app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_12__.bigPrimaryButtonLink)(t("Sign Up for Free"), { href: (0,app_client_models_gristUrlState__WEBPACK_IMPORTED_MODULE_7__.getLoginOrSignupUrl)() }, testId("ai-assistant-sign-up"))));
}
function buildAnonNudge() {
  return cssSignupNudgeWrapper(cssSignupNudgeWrapper.cls("-center"), cssSignupNudgeParagraph(t("Formula AI Assistant is only available for logged in users.")));
}
const MIN_FORMULA_EDITOR_HEIGHT_PX = 100;
const FORMULA_EDITOR_BUTTONS_HEIGHT_PX = 42;
const MIN_CHAT_HISTORY_HEIGHT_PX = 160;
const MIN_CHAT_PANEL_BODY_HEIGHT_PX = 180;
const CHAT_PANEL_HEADER_HEIGHT_PX = 30;
const MIN_CHAT_INPUT_HEIGHT_PX = 42;
const cssChatPanel = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  position: relative;
  display: flex;
  flex-direction: column;
  overflow:hidden;
  flex-grow: 1;
`);
const cssChatPanelHeader = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-shrink: 0;
  padding: 0px 8px 0px 8px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.formulaAssistantHeaderBg};
  height: ${CHAT_PANEL_HEADER_HEIGHT_PX}px;
  border-top: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.formulaAssistantBorder};
  border-bottom: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.formulaAssistantBorder};
`);
const cssChatPanelHeaderTitle = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  align-items: center;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.lightText};
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.accentIcon};
  column-gap: 8px;
  user-select: none;
`);
const cssChatPanelHeaderButtons = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  align-items: center;
  column-gap: 8px;
`);
const cssChatPanelHeaderButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.controlSecondaryFg};
  border-radius: 3px;
  padding: 3px;
  cursor: pointer;
  user-select: none;
  &:hover, &.weasel-popup-open {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.hover};
  }
`);
const cssChatPanelHeaderResizer = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  position: absolute;
  top: -3px;
  height: 7px;
  width: 100%;
  cursor: ns-resize;
`);
const cssChatPanelBody = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  overflow: hidden;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  transition: height 0.4s;

  &-resizing {
    transition: unset;
  }
`);
const cssTopBorder = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  border-top: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.formulaAssistantBorder};
`);
const cssVSpace = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  padding-top: 18px;
  padding-bottom: 18px;
`);
const cssHContainer = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  margin-top: auto;
  padding-left: 18px;
  padding-right: 18px;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
`);
const cssTypography = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.inputFg};
`);
const cssHistory = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  overflow: auto;
  display: flex;
  flex-direction: column;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.inputFg};
`);
const cssInputWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  flex-direction: column;
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.inputBorder};
  border-radius: 3px;
  align-items: center;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.controlSecondaryFg};
  &-disabled {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.inputDisabledBg};
  }
  & > input {
    outline: none;
    padding: 0px;
    align-self: stretch;
    flex: 1;
    border: none;
    background-color: inherit;
  }
`);
const cssMessage = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: grid;
  grid-template-columns: 1fr 60px;
  border-top: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.formulaAssistantBorder};
  padding: 20px 0px 20px 20px;
`);
const cssAiMessage = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  position: relative;
  display: grid;
  grid-template-columns: 60px 1fr;
  border-top: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.formulaAssistantBorder};
  padding: 20px 20px 20px 0px;

  & pre {
    border: none;
    background: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.formulaAssistantPreformattedTextBg};
    font-size: 10px;
  }

  & pre .ace-chrome, & pre .ace-dracula {
    background: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.formulaAssistantPreformattedTextBg} !important;
  }

  & p > code {
    background: #FFFFFF;
    border: 1px solid #E1E4E5;
    color: #333333;
    white-space: pre-wrap;
    word-wrap: break-word;
  }
`);
const cssAiIntroMessage = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(cssAiMessage, `
  border-top: unset;
`);
const cssAvatar = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  align-items: flex-start;
  justify-content: center;
`);
const cssAiImage = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  flex: none;
  height: 32px;
  width: 32px;
  border-radius: 50%;
  background-color: white;
  background-image: var(--icon-GristLogo);
  background-size: 22px 22px;
  background-repeat: no-repeat;
  background-position: center;
`);
const cssButtons = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  justify-content: flex-end;
  gap: 8px;
  padding: 8px;
`);
const cssTools = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div._tools_container", `
  display: flex;
  flex-direction: column;
  overflow: hidden;
`);
const cssInputButtonsRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  padding-top: 8px;
  width: 100%;
  justify-content: flex-end;
  cursor: text;
  display: flex;

  &-disabled {
    cursor: default;
  }
`);
const cssSendMessageButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  padding: 3px;
  border-radius: 4px;
  align-self: flex-end;
  margin-bottom: 6px;
  margin-right: 6px;

  &-disabled {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.controlSecondaryFg};
  }

  &:not(&-disabled) {
    cursor: pointer;
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.controlPrimaryFg};
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.controlPrimaryFg};
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.controlPrimaryBg};
  }

  &:hover:not(&-disabled) {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.controlPrimaryHoverBg};
  }
`);
const cssInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("textarea", `
  border: 0px;
  flex-grow: 1;
  outline: none;
  width: 100%;
  padding: 4px 6px;
  padding-top: 6px;
  resize: none;
  min-height: ${MIN_CHAT_INPUT_HEIGHT_PX}px;
  background: transparent;

  &:disabled {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.inputDisabledBg};
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.inputDisabledFg};
  }

  &::placeholder {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.inputPlaceholderFg};
  }
`);
const cssChatOptionsMenu = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  z-index: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.vars.floatingPopupMenuZIndex};
`);
const cssAiMessageButtonsRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  justify-content: flex-end;
  padding: 8px;
`);
const cssAiMessageButtons = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  column-gap: 8px;
`);
const cssAiMessageParagraph = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  margin-bottom: 8px;
`);
const cssAiMessageBullet = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  align-items: flex-start;
  margin-bottom: 6px;
`);
const cssTickIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_14__.icon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.accentIcon};
  margin-right: 8px;
  flex-shrink: 0;
`);
const cssLoadingDots = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)(app_client_ui2018_loaders__WEBPACK_IMPORTED_MODULE_16__.loadingDots, `
  --dot-size: 5px;
  align-items: center;
`);
const cssSignupNudgeWrapper = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  border-top: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.theme.formulaAssistantBorder};
  padding: 16px;
  margin-top: auto;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  &-center {
    display: flex;
    justify-content: center;
    align-items: center;
  }
`);
const cssSignupNudgeParagraph = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_13__.vars.mediumFontSize};
  font-weight: 500;
  margin-bottom: 12px;
  text-align: center;
`);
const cssSignupNudgeButtonsRow = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  display: flex;
  justify-content: center;
`);
const cssBanner = (0,grainjs__WEBPACK_IMPORTED_MODULE_22__.styled)("div", `
  padding: 6px 8px 6px 8px;
`);


/***/ }),

/***/ "./app/client/widgets/FormulaEditor.ts":
/*!*********************************************!*\
  !*** ./app/client/widgets/FormulaEditor.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FormulaEditor": () => (/* binding */ FormulaEditor),
/* harmony export */   "createFormulaErrorObs": () => (/* binding */ createFormulaErrorObs),
/* harmony export */   "cssError": () => (/* binding */ cssError),
/* harmony export */   "getFormulaError": () => (/* binding */ getFormulaError),
/* harmony export */   "openFormulaEditor": () => (/* binding */ openFormulaEditor)
/* harmony export */ });
/* harmony import */ var app_client_components_AceEditor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/AceEditor */ "./app/client/components/AceEditor.js");
/* harmony import */ var app_client_components_AceEditor__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(app_client_components_AceEditor__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_models_features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/models/features */ "./app/client/models/features.ts");
/* harmony import */ var app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui/tooltips */ "./app/client/ui/tooltips.ts");
/* harmony import */ var app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/ui2018/buttons */ "./app/client/ui2018/buttons.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/widgets/EditorButtons */ "./app/client/widgets/EditorButtons.ts");
/* harmony import */ var app_client_widgets_EditorPlacement__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/widgets/EditorPlacement */ "./app/client/widgets/EditorPlacement.ts");
/* harmony import */ var app_client_widgets_FloatingEditor__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/widgets/FloatingEditor */ "./app/client/widgets/FloatingEditor.ts");
/* harmony import */ var app_client_widgets_FormulaAssistant__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/client/widgets/FormulaAssistant */ "./app/client/widgets/FormulaAssistant.ts");
/* harmony import */ var app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/client/widgets/NewBaseEditor */ "./app/client/widgets/NewBaseEditor.ts");
/* harmony import */ var app_common_AsyncCreate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/common/AsyncCreate */ "./app/common/AsyncCreate.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};



















const debounce = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
const minFormulaErrorWidth = 400;
const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_2__.makeT)("FormulaEditor");
class FormulaEditor extends app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_13__.NewBaseEditor {
  constructor(options) {
    super(options);
    this.isDetached = grainjs__WEBPACK_IMPORTED_MODULE_18__.Observable.create(this, false);
    this._placementHolder = grainjs__WEBPACK_IMPORTED_MODULE_18__.Holder.create(this);
    const editingFormula = options.editingFormula;
    const initialValue = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_16__.undef)(options.state, options.editValue, String(options.cellValue));
    this.editorState = grainjs__WEBPACK_IMPORTED_MODULE_18__.Observable.create(this, initialValue);
    this._isEmpty = grainjs__WEBPACK_IMPORTED_MODULE_18__.Computed.create(this, this.editorState, (_use, state) => state === "");
    this._aceEditor = app_client_components_AceEditor__WEBPACK_IMPORTED_MODULE_0__.create({
      column: options.column,
      calcSize: this._calcSize.bind(this),
      gristDoc: options.gristDoc,
      saveValueOnBlurEvent: !options.readonly,
      editorState: this.editorState,
      readonly: options.readonly
    });
    const cursorCommands = options.readonly ? {} : { setCursor: this._onSetCursor };
    const isActive = grainjs__WEBPACK_IMPORTED_MODULE_18__.Computed.create(this, (use) => Boolean(use(editingFormula)));
    const commandGroup = this.autoDispose(app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.createGroup(cursorCommands, this, isActive));
    const editorGroup = this.autoDispose(app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.createGroup(__spreadValues({}, options.commands), this, true));
    const aceCommands = {
      knownKeys: __spreadValues(__spreadValues({}, commandGroup.knownKeys), editorGroup.knownKeys),
      commands: __spreadValues(__spreadValues({}, commandGroup.commands), editorGroup.commands)
    };
    const passThrough = (name) => () => {
      var _a, _b;
      if (this.isDetached.get()) {
        return true;
      }
      return (_b = (_a = app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.allCommands[name]) == null ? void 0 : _a.run()) != null ? _b : false;
    };
    const detachedCommands = this.autoDispose(app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.createGroup({
      nextField: passThrough("nextField"),
      prevField: passThrough("prevField"),
      fieldEditSave: passThrough("fieldEditSave")
    }, this, false));
    Object.assign(aceCommands.knownKeys, detachedCommands.knownKeys);
    Object.assign(aceCommands.commands, detachedCommands.commands);
    const hideErrDetails = grainjs__WEBPACK_IMPORTED_MODULE_18__.Observable.create(this, true);
    const raisedException = grainjs__WEBPACK_IMPORTED_MODULE_18__.Computed.create(this, (use) => {
      if (!options.formulaError || !use(options.formulaError)) {
        return null;
      }
      const error = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_15__.isRaisedException)(use(options.formulaError)) ? (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_17__.decodeObject)(use(options.formulaError)) : new app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_17__.RaisedException(["Unknown error"]);
      return error;
    });
    const errorText = grainjs__WEBPACK_IMPORTED_MODULE_18__.Computed.create(this, raisedException, (_, error) => {
      if (!error) {
        return "";
      }
      return error.message ? `${error.name} : ${error.message}` : error.name;
    });
    const errorDetails = grainjs__WEBPACK_IMPORTED_MODULE_18__.Computed.create(this, raisedException, (_, error) => {
      var _a;
      if (!error) {
        return "";
      }
      return (_a = error.details) != null ? _a : "";
    });
    this.autoDispose(errorDetails.addListener(() => setTimeout(this.resize.bind(this), 0)));
    this._canDetach = Boolean(options.canDetach && !options.readonly);
    this.autoDispose(this._aceEditor);
    this._isEmpty.addListener(() => this._updateEditorPlaceholder());
    this.isDetached.addListener((isDetached) => {
      if (isDetached) {
        options.gristDoc.getUndoStack().disable();
      } else {
        options.gristDoc.getUndoStack().enable();
      }
    });
    this.onDispose(() => {
      options.gristDoc.getUndoStack().enable();
    });
    this._dom = cssFormulaEditor(grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.cls("readonly_editor", options.readonly), (0,app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_9__.createMobileButtons)(options.commands), options.cssClass ? grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.cls(options.cssClass) : null, grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.on("mousedown", (ev) => {
      if (this.isDetached.get()) {
        const clickedOnInput = ev.target instanceof HTMLInputElement || ev.target instanceof HTMLTextAreaElement;
        if (clickedOnInput && this._dom.contains(ev.target)) {
          return;
        }
      }
      if (ev.target instanceof HTMLElement && (ev.target.classList.contains("error_msg") || ev.target.classList.contains("error_details_inner"))) {
        return;
      }
      ev.preventDefault();
      this.focus();
    }), !this._canDetach ? null : (0,app_client_widgets_FloatingEditor__WEBPACK_IMPORTED_MODULE_11__.createDetachedIcon)((0,app_client_ui_tooltips__WEBPACK_IMPORTED_MODULE_5__.hoverTooltip)(t("Expand Editor")), grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.hide(this.isDetached)), cssFormulaEditor.cls("-detached", this.isDetached), (0,grainjs__WEBPACK_IMPORTED_MODULE_18__.dom)("div.formula_editor.formula_field_edit", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("formula-editor"), this._aceEditor.buildDom((aceObj) => {
      aceObj.setFontSize(11);
      aceObj.setHighlightActiveLine(false);
      aceObj.getSession().setUseWrapMode(false);
      aceObj.renderer.setPadding(0);
      const val = initialValue;
      const pos = Math.min(options.cursorPos, val.length);
      this._aceEditor.setValue(val, pos);
      this._aceEditor.attachCommandGroup(aceCommands);
      if (options.state || options.readonly) {
        editingFormula(true);
      }
      if (options.readonly) {
        this._aceEditor.enable(false);
        aceObj.gotoLine(0, 0);
      }
      aceObj.once("change", () => {
        editingFormula == null ? void 0 : editingFormula(true);
      });
      if (val === "") {
        this._updateEditorPlaceholder();
      }
    })), grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.maybe(options.formulaError, () => [
      (0,grainjs__WEBPACK_IMPORTED_MODULE_18__.dom)("div.error_msg", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("formula-error-msg"), grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.attr("tabindex", "-1"), grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.maybe(errorDetails, () => grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.domComputed(hideErrDetails, (hide) => cssCollapseIcon(hide ? "Expand" : "Collapse", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("formula-error-expand"), grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.on("click", () => {
        if (errorDetails.get()) {
          hideErrDetails.set(!hideErrDetails.get());
          this._aceEditor.resize();
        }
      })))), grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.text(errorText)),
      grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.maybe((use) => Boolean(use(errorDetails) && !use(hideErrDetails)), () => (0,grainjs__WEBPACK_IMPORTED_MODULE_18__.dom)("div.error_details", grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.attr("tabindex", "-1"), (0,grainjs__WEBPACK_IMPORTED_MODULE_18__.dom)("div.error_details_inner", grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.text(errorDetails)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("formula-error-details")))
    ]), grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.maybe(this.isDetached, () => {
      return grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.create(app_client_widgets_FormulaAssistant__WEBPACK_IMPORTED_MODULE_12__.FormulaAssistant, {
        column: this.options.column,
        field: this.options.field,
        gristDoc: this.options.gristDoc,
        editor: this
      });
    }));
  }
  attach(cellElem) {
    this.isDetached.set(false);
    this._editorPlacement = app_client_widgets_EditorPlacement__WEBPACK_IMPORTED_MODULE_10__.EditorPlacement.create(this._placementHolder, this._dom, cellElem, { margins: (0,app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_9__.getButtonMargins)() });
    this.autoDispose(this._editorPlacement.onReposition.addListener(this._aceEditor.resize, this._aceEditor));
    this._aceEditor.onAttach();
    this._updateEditorPlaceholder();
    this._aceEditor.resize();
    this.focus();
  }
  getDom() {
    return this._dom;
  }
  setFormula(formula) {
    this._aceEditor.setValue(formula);
  }
  getCellValue() {
    const value = this._aceEditor.getValue();
    return value[0] === "=" ? value.slice(1) : value;
  }
  getTextValue() {
    return this._aceEditor.getValue();
  }
  getCursorPos() {
    const aceObj = this._aceEditor.getEditor();
    return aceObj.getSession().getDocument().positionToIndex(aceObj.getCursorPosition());
  }
  focus() {
    if (this.isDisposed()) {
      return;
    }
    this._aceEditor.getEditor().focus();
  }
  resize() {
    if (this.isDisposed()) {
      return;
    }
    this._aceEditor.resize();
  }
  detach() {
    var _a;
    (_a = this._dom.parentNode) == null ? void 0 : _a.removeChild(this._dom);
    this.isDetached.set(true);
    this._placementHolder.clear();
    this.options.editingFormula(true);
    this._updateEditorPlaceholder();
    setTimeout(() => !this.isDisposed() && this._aceEditor.resize(), 0);
    return this._dom;
  }
  _updateEditorPlaceholder() {
    const editor = this._aceEditor.getEditor();
    const shouldShowPlaceholder = editor.session.getValue().length === 0;
    if (editor.renderer.emptyMessageNode) {
      editor.renderer.scroller.removeChild(editor.renderer.emptyMessageNode);
    }
    if (!shouldShowPlaceholder) {
      editor.renderer.emptyMessageNode = null;
    } else {
      const withAiButton = this._canDetach && !this.isDetached.get() && (0,app_client_models_features__WEBPACK_IMPORTED_MODULE_4__.HAS_FORMULA_ASSISTANT)();
      editor.renderer.emptyMessageNode = cssFormulaPlaceholder(!withAiButton ? t("Enter formula.") : t("Enter formula or {{button}}.", {
        button: cssUseAssistantButton(t("use AI Assistant"), grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.on("click", (ev) => this._handleUseAssistantButtonClick(ev)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.testId)("formula-editor-use-ai-assistant"))
      }));
      editor.renderer.scroller.appendChild(editor.renderer.emptyMessageNode);
    }
  }
  _handleUseAssistantButtonClick(ev) {
    ev.stopPropagation();
    ev.preventDefault();
    app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.allCommands.detachEditor.run();
    app_client_components_commands__WEBPACK_IMPORTED_MODULE_1__.allCommands.activateAssistant.run();
  }
  _calcSize(elem, desiredElemSize) {
    if (this.isDetached.get()) {
      return {
        height: 0,
        width: 0
      };
    }
    const placeholder = this._aceEditor.getEditor().renderer.emptyMessageNode;
    if (placeholder) {
      return this._editorPlacement.calcSizeWithPadding(elem, {
        width: placeholder.scrollWidth,
        height: placeholder.scrollHeight
      });
    }
    const errorBox = this._dom.querySelector(".error_details");
    const errorBoxStartHeight = (errorBox == null ? void 0 : errorBox.getBoundingClientRect().height) || 0;
    const errorBoxDesiredHeight = (errorBox == null ? void 0 : errorBox.scrollHeight) || 0;
    const desiredSize = {
      width: Math.max(desiredElemSize.width, this.options.formulaError.get() ? minFormulaErrorWidth : 0),
      height: desiredElemSize.height + (errorBoxDesiredHeight - errorBoxStartHeight)
    };
    const result = this._editorPlacement.calcSizeWithPadding(elem, desiredSize);
    if (errorBox) {
      const availableForError = errorBoxStartHeight + (result.height - desiredElemSize.height);
      const errorBoxEndHeight = Math.min(errorBoxDesiredHeight, Math.max(availableForError, 64));
      errorBox.style.height = `${errorBoxEndHeight}px`;
      result.height -= errorBoxEndHeight - errorBoxStartHeight;
    }
    return result;
  }
  _onSetCursor(row, col) {
    if (this.options.readonly) {
      return;
    }
    if (!col) {
      return;
    }
    const colId = col.origCol.peek().colId.peek();
    if (col.tableId.peek() !== this.options.column.table.peek().tableId.peek()) {
      this.options.gristDoc.onSetCursorPos(row, col).catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
      return;
    }
    const aceObj = this._aceEditor.getEditor();
    if (!aceObj.selection.isEmpty()) {
      aceObj.session.replace(aceObj.selection.getRange(), "$" + colId);
    } else {
      const pos = aceObj.getCursorPosition();
      const line = aceObj.session.getLine(pos.row);
      const result = _isInIdentifier(line, pos.column);
      if (!result) {
        aceObj.insert("$" + colId);
      } else if (result.ident.startsWith("$")) {
        const idRange = app_client_components_AceEditor__WEBPACK_IMPORTED_MODULE_0__.makeRange(pos.row, result.start, pos.row, result.end);
        aceObj.session.replace(idRange, "$" + colId);
      }
    }
    this._aceEditor.resize();
    aceObj.focus();
    const lis = grainjs__WEBPACK_IMPORTED_MODULE_18__.dom.onElem(aceObj.textInput.getElement(), "blur", (e) => {
      lis.dispose();
      aceObj.focus();
    });
    setTimeout(() => lis.dispose(), 0);
  }
}
function _isInIdentifier(line, column) {
  const prefix = line.slice(0, column);
  let startOfIdent = prefix.search(/[$A-Za-z0-9_]+$/);
  if (startOfIdent < 0) {
    startOfIdent = column;
  }
  const match = line.slice(startOfIdent).match(/^[$a-zA-Z0-9_]+/);
  if (match) {
    const ident = match[0];
    return { ident, start: startOfIdent, end: startOfIdent + ident.length };
  } else {
    return null;
  }
}
function openFormulaEditor(options) {
  var _a, _b, _c, _d;
  const { gristDoc, editRow, refElem, setupCleanup } = options;
  const attachedHolder = new grainjs__WEBPACK_IMPORTED_MODULE_18__.MultiHolder();
  if (options.field) {
    options.column = options.field.origCol();
  } else if (options.canDetach) {
    throw new Error("Field is required for detached editor");
  }
  const column = (_b = options.column) != null ? _b : (_a = options.field) == null ? void 0 : _a.column();
  if (!column) {
    throw new Error("Column or field is required");
  }
  const saveEdit = (0,app_common_AsyncCreate__WEBPACK_IMPORTED_MODULE_14__.asyncOnce)(async () => {
    var _a2;
    const detached = editor.isDetached.get();
    if (detached) {
      editor.dispose();
      return;
    }
    const formula = String(editor.getCellValue());
    if (formula !== column.formula.peek()) {
      if (options.onSave) {
        await options.onSave(column, formula);
      } else {
        await column.updateColValues({ formula });
      }
      editor.dispose();
    } else {
      editor.dispose();
      (_a2 = options.onCancel) == null ? void 0 : _a2.call(options);
    }
  });
  const editCommands = {
    fieldEditSave: () => {
      saveEdit().catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
    },
    fieldEditSaveHere: () => {
      saveEdit().catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
    },
    fieldEditCancel: () => {
      var _a2;
      editor.dispose();
      (_a2 = options.onCancel) == null ? void 0 : _a2.call(options);
    }
  };
  const formulaError = editRow ? getFormulaError(attachedHolder, {
    gristDoc,
    editRow,
    column,
    field: options.field
  }) : void 0;
  const editor = FormulaEditor.create(null, {
    gristDoc,
    column,
    field: options.field,
    editingFormula: options.editingFormula,
    rowId: editRow ? editRow.id() : 0,
    cellValue: column.formula(),
    formulaError,
    editValue: options.editValue,
    cursorPos: Number.POSITIVE_INFINITY,
    commands: editCommands,
    cssClass: "formula_editor_sidepane",
    readonly: false,
    canDetach: options.canDetach
  });
  editor.autoDispose(attachedHolder);
  editor.attach(refElem);
  const editingFormula = (_d = options.editingFormula) != null ? _d : (_c = options == null ? void 0 : options.field) == null ? void 0 : _c.editingFormula;
  if (!editingFormula) {
    throw new Error(t("editingFormula is required"));
  }
  if (!column.formula()) {
    editingFormula(true);
  }
  setupCleanup(editor, gristDoc, editingFormula, saveEdit);
  return editor;
}
function getFormulaError(owner, options) {
  const { gristDoc, editRow } = options;
  const formulaError = grainjs__WEBPACK_IMPORTED_MODULE_18__.Observable.create(owner, void 0);
  if (!options.field) {
    const column = options.column;
    const colId = column.colId.peek();
    const onValueChange = errorMonitor(gristDoc, column, editRow, owner, formulaError);
    const subscription = editRow.cells[colId].subscribe(onValueChange);
    owner.autoDispose(subscription);
    onValueChange(editRow.cells[colId].peek());
    return formulaError;
  } else {
    const errorRow = gristDoc.getTableModel(options.field.tableId.peek()).createFloatingRowModel();
    errorRow.assign(editRow.getRowId());
    owner.autoDispose(errorRow);
    grainjs__WEBPACK_IMPORTED_MODULE_18__.Computed.create(owner, (use) => {
      const holder = grainjs__WEBPACK_IMPORTED_MODULE_18__.MultiHolder.create(use.owner);
      const column = use(options.field.column);
      const colId = use(column.colId);
      const onValueChange = errorMonitor(gristDoc, column, errorRow, holder, formulaError);
      holder.autoDispose(errorRow.cells[colId].subscribe(onValueChange));
      onValueChange(errorRow.cells[colId].peek());
      return holder;
    });
  }
  return formulaError;
}
function errorMonitor(gristDoc, column, editRow, holder, formulaError) {
  return function onValueChange(cellCurrentValue) {
    const isFormula = column.isFormula() || column.hasTriggerFormula();
    if (isFormula && (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_15__.isRaisedException)(cellCurrentValue)) {
      if (!formulaError.get()) {
        formulaError.set(cellCurrentValue);
      }
      gristDoc.docData.getFormulaError(column.table().tableId(), column.colId(), editRow.getRowId()).then((value) => {
        if (holder.isDisposed()) {
          return;
        }
        formulaError.set(value);
      }).catch((er) => {
        if (!holder.isDisposed()) {
          (0,app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError)(er);
        }
      });
    } else {
      formulaError.set(void 0);
    }
  };
}
function createFormulaErrorObs(owner, gristDoc, origColumn) {
  const errorMessage = grainjs__WEBPACK_IMPORTED_MODULE_18__.Observable.create(owner, "");
  function countErrors() {
    var _a;
    if (owner.isDisposed()) {
      return;
    }
    const tableData = gristDoc.docData.getTable(origColumn.table.peek().tableId.peek());
    const isFormula = origColumn.isRealFormula.peek() || origColumn.hasTriggerFormula.peek();
    if (tableData && isFormula) {
      const colId = origColumn.colId.peek();
      const numCells = ((_a = tableData.getColValues(colId)) == null ? void 0 : _a.length) || 0;
      const numErrors = tableData.countErrors(colId) || 0;
      errorMessage.set(numErrors === 0 ? "" : numCells === 1 ? t(`Error in the cell`) : numErrors === numCells ? t(`Errors in all {{numErrors}} cells`, { numErrors }) : t(`Errors in {{numErrors}} of {{numCells}} cells`, { numErrors, numCells }));
    } else {
      errorMessage.set("");
    }
  }
  const debouncedCountErrors = debounce(countErrors, 0);
  grainjs__WEBPACK_IMPORTED_MODULE_18__.Computed.create(owner, (use) => {
    const tableData = gristDoc.docData.getTable(use(use(origColumn.table).tableId));
    return tableData ? use.owner.autoDispose(tableData.tableActionEmitter.addListener(debouncedCountErrors)) : null;
  });
  owner.autoDispose((0,grainjs__WEBPACK_IMPORTED_MODULE_18__.subscribe)((use) => {
    use(origColumn.id);
    use(origColumn.isRealFormula);
    debouncedCountErrors();
  }));
  return errorMessage;
}
const cssCollapseIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_18__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_8__.icon, `
  margin: -3px 4px 0 4px;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.colors.slate};
  cursor: pointer;
  position: sticky;
  top: 0px;
  flex-shrink: 0;
`);
const cssError = (0,grainjs__WEBPACK_IMPORTED_MODULE_18__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.errorText};
`);
const cssFormulaEditor = (0,grainjs__WEBPACK_IMPORTED_MODULE_18__.styled)("div.default_editor.formula_editor_wrapper", `
  &-detached {
    height: 100%;
    position: relative;
    box-shadow: none;
  }
  &-detached .formula_editor {
    flex-grow: 1;
    min-height: 100px;
  }

  &-detached .error_msg, &-detached .error_details {
    max-height: 100px;
    flex-shrink: 0;
  }

  &-detached .code_editor_container {
    height: 100%;
    width: 100%;
  }

  &-detached .ace_editor {
    height: 100% !important;
    width: 100% !important;
  }
`);
const cssFormulaPlaceholder = (0,grainjs__WEBPACK_IMPORTED_MODULE_18__.styled)("div", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.theme.lightText};
  font-style: italic;
  white-space: nowrap;
`);
const cssUseAssistantButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_18__.styled)(app_client_ui2018_buttons__WEBPACK_IMPORTED_MODULE_6__.textButton, `
  font-size: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_7__.vars.smallFontSize};
`);


/***/ }),

/***/ "./app/client/widgets/HyperLinkEditor.ts":
/*!***********************************************!*\
  !*** ./app/client/widgets/HyperLinkEditor.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HyperLinkEditor": () => (/* binding */ HyperLinkEditor)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_widgets_NTextEditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/widgets/NTextEditor */ "./app/client/widgets/NTextEditor.ts");


const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("HyperLinkEditor");
class HyperLinkEditor extends app_client_widgets_NTextEditor__WEBPACK_IMPORTED_MODULE_1__.NTextEditor {
  constructor(options) {
    super(options);
    this.textInput.setAttribute("placeholder", t("[link label] url"));
  }
}


/***/ }),

/***/ "./app/client/widgets/HyperLinkTextBox.ts":
/*!************************************************!*\
  !*** ./app/client/widgets/HyperLinkTextBox.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HyperLinkTextBox": () => (/* binding */ HyperLinkTextBox)
/* harmony export */ });
/* harmony import */ var app_client_models_gristUrlState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/models/gristUrlState */ "./app/client/models/gristUrlState.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/links */ "./app/client/ui2018/links.ts");
/* harmony import */ var app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/widgets/NTextBox */ "./app/client/widgets/NTextBox.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");






class HyperLinkTextBox extends app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_4__.NTextBox {
  constructor(field) {
    super(field, { defaultTextColor: app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.colors.lightGreen.value });
  }
  buildDom(row) {
    const value = row.cells[this.field.colId()];
    const url = grainjs__WEBPACK_IMPORTED_MODULE_5__.Computed.create(null, (use) => (0,app_client_models_gristUrlState__WEBPACK_IMPORTED_MODULE_0__.constructUrl)(use(value)));
    return cssFieldClip(grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.autoDispose(url), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.style("text-align", this.alignment), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.cls("text_wrapping", this.wrapping), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.maybe((use) => Boolean(use(value)), () => (0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_3__.gristLink)(url, (0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_2__.cssIconBackground)((0,app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_2__.icon)("FieldLink", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.testId)("tb-link-icon")), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.cls(cssHoverOnField.className)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.testId)("tb-link"))), grainjs__WEBPACK_IMPORTED_MODULE_5__.dom.text((use) => _formatValue(use(value))));
  }
}
function _formatValue(value) {
  if (typeof value !== "string") {
    return "";
  }
  const index = value.lastIndexOf(" ");
  return index >= 0 ? value.slice(0, index) : value;
}
const cssFieldClip = (0,grainjs__WEBPACK_IMPORTED_MODULE_5__.styled)("div.field_clip", `
  color: var(--grist-actual-cell-color, ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.colors.lightGreen});
`);
const cssHoverOnField = (0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_3__.cssHoverIn)(cssFieldClip.className);


/***/ }),

/***/ "./app/client/widgets/NTextBox.ts":
/*!****************************************!*\
  !*** ./app/client/widgets/NTextBox.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NTextBox": () => (/* binding */ NTextBox)
/* harmony export */ });
/* harmony import */ var app_client_lib_fromKoSave__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/fromKoSave */ "./app/client/lib/fromKoSave.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/buttonSelect */ "./app/client/ui2018/buttonSelect.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/links */ "./app/client/ui2018/links.ts");
/* harmony import */ var app_client_widgets_NewAbstractWidget__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/widgets/NewAbstractWidget */ "./app/client/widgets/NewAbstractWidget.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");








const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_7__.makeT)("NTextBox");
class NTextBox extends app_client_widgets_NewAbstractWidget__WEBPACK_IMPORTED_MODULE_5__.NewAbstractWidget {
  constructor(field, options = {}) {
    super(field, options);
    this.alignment = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(this.options.prop("alignment"));
    this.wrapping = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(this.field.wrap);
    this.autoDispose(this.wrapping.addListener(() => {
      this.field.viewSection().events.trigger("rowHeightChange");
    }));
  }
  buildConfigDom() {
    const toggle = () => {
      const newValue = !this.field.config.wrap.peek();
      this.field.config.wrap.setAndSave(newValue).catch(reportError);
    };
    const options = this.field.config.options;
    const alignmentDisabled = grainjs__WEBPACK_IMPORTED_MODULE_6__.Computed.create(this, (use) => use(options.disabled("alignment")));
    const wrapDisabled = grainjs__WEBPACK_IMPORTED_MODULE_6__.Computed.create(this, (use) => use(options.disabled("wrap")));
    return [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__.cssRow)((0,app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_2__.alignmentSelect)((0,app_client_lib_fromKoSave__WEBPACK_IMPORTED_MODULE_0__.fromKoSave)(this.field.config.alignment), app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_2__.cssButtonSelect.cls("-disabled", alignmentDisabled)), (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.dom)("div", { style: "margin-left: 8px;" }, (0,app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_2__.makeButtonSelect)((0,grainjs__WEBPACK_IMPORTED_MODULE_6__.fromKo)(this.field.config.wrap), [{ value: true, icon: "Wrap" }], toggle, app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_2__.cssButtonSelect.cls("-disabled", wrapDisabled)), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("tb-wrap-text")))
    ];
  }
  buildDom(row) {
    const value = row.cells[this.field.colId.peek()];
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.dom)("div.field_clip", grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.style("text-align", this.alignment), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.cls("text_wrapping", this.wrapping), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.domComputed((use) => use(row._isAddRow) || this.isDisposed() ? null : (0,app_client_ui2018_links__WEBPACK_IMPORTED_MODULE_4__.makeLinks)(use(this.valueFormatter).formatAny(use(value), t))));
  }
}


/***/ }),

/***/ "./app/client/widgets/NTextEditor.ts":
/*!*******************************************!*\
  !*** ./app/client/widgets/NTextEditor.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NTextEditor": () => (/* binding */ NTextEditor)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/widgets/EditorButtons */ "./app/client/widgets/EditorButtons.ts");
/* harmony import */ var app_client_widgets_EditorPlacement__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/widgets/EditorPlacement */ "./app/client/widgets/EditorPlacement.ts");
/* harmony import */ var app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/widgets/NewBaseEditor */ "./app/client/widgets/NewBaseEditor.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");







class NTextEditor extends app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_4__.NewBaseEditor {
  constructor(options) {
    var _a;
    super(options);
    this.options = options;
    const initialValue = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_5__.undef)(options.state, options.editValue, String((_a = options.cellValue) != null ? _a : ""));
    this.editorState = grainjs__WEBPACK_IMPORTED_MODULE_6__.Observable.create(this, initialValue);
    this.commandGroup = this.autoDispose((0,app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.createGroup)(options.commands, this, true));
    this._alignment = options.field.widgetOptionsJson.peek().alignment || "left";
    this._dom = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.dom)("div.default_editor", grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.cls("readonly_editor", options.readonly), this.cellEditorDiv = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.dom)("div.celleditor_cursor_editor", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_1__.testId)("widget-text-editor"), this._contentSizer = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.dom)("div.celleditor_content_measure"), this.textInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_6__.dom)("textarea", grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.cls("celleditor_text_editor"), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.style("text-align", this._alignment), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.prop("value", initialValue), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.boolAttr("readonly", options.readonly), this.commandGroup.attach(), grainjs__WEBPACK_IMPORTED_MODULE_6__.dom.on("input", () => this.onInput()))), (0,app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_2__.createMobileButtons)(options.commands));
  }
  attach(cellElem) {
    this._editorPlacement = app_client_widgets_EditorPlacement__WEBPACK_IMPORTED_MODULE_3__.EditorPlacement.create(this, this._dom, cellElem, { margins: (0,app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_2__.getButtonMargins)() });
    this.autoDispose(this._editorPlacement.onReposition.addListener(this.resizeInput, this));
    this.setSizerLimits();
    this.resizeInput();
    this.textInput.focus();
    const pos = Math.min(this.options.cursorPos, this.textInput.value.length);
    this.textInput.setSelectionRange(pos, pos);
  }
  getDom() {
    return this._dom;
  }
  getCellValue() {
    const valueParser = this.options.field.createValueParser();
    return valueParser(this.getTextValue());
  }
  getTextValue() {
    return this.textInput.value;
  }
  getCursorPos() {
    return this.textInput.selectionStart;
  }
  setSizerLimits() {
    const maxSize = this._editorPlacement.calcSizeWithPadding(this.textInput, { width: Infinity, height: Infinity }, { calcOnly: true });
    this._contentSizer.style.maxWidth = Math.ceil(maxSize.width) + "px";
  }
  onInput() {
    this.resizeInput();
    this.editorState.set(String(this.getTextValue()));
  }
  resizeInput() {
    const textInput = this.textInput;
    this._contentSizer.textContent = textInput.value + "\u200B";
    const rect = this._contentSizer.getBoundingClientRect();
    if (this._alignment === "left") {
      rect.width += 16;
    }
    const size = this._editorPlacement.calcSizeWithPadding(textInput, rect);
    textInput.style.width = size.width + "px";
    textInput.style.height = size.height + "px";
    if (enoughSpace(rect, size) && hasScroll(textInput)) {
      textInput.style.overflow = "hidden";
      textInput.clientHeight;
      textInput.style.overflow = "auto";
    }
  }
}
function enoughSpace(requested, received) {
  return requested.width <= received.width && requested.height <= received.height;
}
function hasScroll(el) {
  return el.scrollHeight > el.clientHeight || el.scrollWidth > el.clientWidth;
}


/***/ }),

/***/ "./app/client/widgets/NewAbstractWidget.ts":
/*!*************************************************!*\
  !*** ./app/client/widgets/NewAbstractWidget.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NewAbstractWidget": () => (/* binding */ NewAbstractWidget)
/* harmony export */ });
/* harmony import */ var app_client_widgets_CellStyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/widgets/CellStyle */ "./app/client/widgets/CellStyle.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");


class NewAbstractWidget extends grainjs__WEBPACK_IMPORTED_MODULE_1__.Disposable {
  constructor(field, opts = {}) {
    super();
    this.field = field;
    this.options = field.widgetOptionsJson;
    this.valueFormatter = (0,grainjs__WEBPACK_IMPORTED_MODULE_1__.fromKo)(field.formatter);
    this.defaultTextColor = (opts == null ? void 0 : opts.defaultTextColor) || "#000000";
  }
  static create(...args) {
    return grainjs__WEBPACK_IMPORTED_MODULE_1__.Disposable.create.call(this, null, ...args);
  }
  buildConfigDom() {
    return null;
  }
  buildTransformConfigDom() {
    return null;
  }
  buildColorConfigDom(gristDoc) {
    return grainjs__WEBPACK_IMPORTED_MODULE_1__.dom.create(app_client_widgets_CellStyle__WEBPACK_IMPORTED_MODULE_0__.CellStyle, this.field, gristDoc, this.defaultTextColor);
  }
  _getDocData() {
    return this.field._table.tableData.docData;
  }
  _getDocComm() {
    return this._getDocData().docComm;
  }
}


/***/ }),

/***/ "./app/client/widgets/NewBaseEditor.ts":
/*!*********************************************!*\
  !*** ./app/client/widgets/NewBaseEditor.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NewBaseEditor": () => (/* binding */ NewBaseEditor)
/* harmony export */ });
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");

class NewBaseEditor extends grainjs__WEBPACK_IMPORTED_MODULE_0__.Disposable {
  constructor(options) {
    super();
    this.options = options;
  }
  static create(ownerOrOptions, options) {
    return options ? grainjs__WEBPACK_IMPORTED_MODULE_0__.Disposable.create.call(this, ownerOrOptions, options) : grainjs__WEBPACK_IMPORTED_MODULE_0__.Disposable.create.call(this, null, ownerOrOptions);
  }
  static skipEditor(typedVal, origVal) {
    return void 0;
  }
  static supportsReadonly() {
    return true;
  }
  detach() {
    return null;
  }
  getDom() {
    return null;
  }
  prepForSave() {
  }
}


/***/ }),

/***/ "./app/client/widgets/NumericTextBox.ts":
/*!**********************************************!*\
  !*** ./app/client/widgets/NumericTextBox.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NumericTextBox": () => (/* binding */ NumericTextBox)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/buttonSelect */ "./app/client/ui2018/buttonSelect.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_widgets_CurrencyPicker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/widgets/CurrencyPicker */ "./app/client/widgets/CurrencyPicker.ts");
/* harmony import */ var app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/widgets/NTextBox */ "./app/client/widgets/NTextBox.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/common/NumberFormat */ "./app/common/NumberFormat.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var locale_currency__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! locale-currency */ "./node_modules/locale-currency/index.js");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));












const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("NumericTextBox");
const modeOptions = [
  { value: "currency", label: "$" },
  { value: "decimal", label: "," },
  { value: "percent", label: "%" },
  { value: "scientific", label: "Exp" }
];
const signOptions = [
  { value: "parens", label: "(-)" }
];
class NumericTextBox extends app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_7__.NTextBox {
  constructor(field) {
    super(field);
  }
  buildConfigDom() {
    const holder = new grainjs__WEBPACK_IMPORTED_MODULE_10__.MultiHolder();
    const resolved = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, (use) => {
      const { numMode: numMode2 } = use(this.field.config.options);
      const docSettings2 = use(this.field.documentSettings);
      return (0,app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_9__.buildNumberFormat)({ numMode: numMode2 }, docSettings2).resolvedOptions();
    });
    const fieldOptions = this.field.config.options;
    const options = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.fromKo)(fieldOptions);
    const docSettings = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.fromKo)(this.field.documentSettings);
    const numMode = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, options, (use, opts) => opts.numMode || null);
    const numSign = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, options, (use, opts) => opts.numSign || null);
    const currency = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, options, (use, opts) => opts.currency);
    const disabled = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, (use) => use(this.field.config.options.disabled("currency")));
    const minDecimals = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, options, (use, opts) => numberOrDefault(opts.decimals, ""));
    const maxDecimals = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, options, (use, opts) => numberOrDefault(opts.maxDecimals, ""));
    const defaultMin = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, resolved, (use, res) => res.minimumFractionDigits);
    const defaultMax = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, resolved, (use, res) => res.maximumFractionDigits);
    const docCurrency = grainjs__WEBPACK_IMPORTED_MODULE_10__.Computed.create(holder, docSettings, (use, settings) => {
      var _a, _b;
      return (_b = settings.currency) != null ? _b : locale_currency__WEBPACK_IMPORTED_MODULE_11__.getCurrency((_a = settings.locale) != null ? _a : "en-US");
    });
    const setSave = (prop, value) => {
      const orig = __spreadValues({}, fieldOptions.peek());
      if (value !== orig[prop]) {
        fieldOptions(__spreadValues(__spreadProps(__spreadValues({}, orig), { [prop]: value }), updateOptions(prop, value)));
        fieldOptions.save().catch((err) => {
          (0,app_client_models_errors__WEBPACK_IMPORTED_MODULE_1__.reportError)(err);
          fieldOptions(orig);
        });
      }
    };
    const setMinDecimals = (val) => setSave("decimals", val && (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_8__.clamp)(val, 0, 20));
    const setMaxDecimals = (val) => setSave("maxDecimals", val && (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_8__.clamp)(val, 0, 20));
    const setMode = (val) => setSave("numMode", val !== numMode.get() ? val : void 0);
    const setSign = (val) => setSave("numSign", val !== numSign.get() ? val : void 0);
    const setCurrency = (val) => setSave("currency", val);
    const disabledStyle = app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_3__.cssButtonSelect.cls("-disabled", disabled);
    return [
      super.buildConfigDom(),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssLabel)(t("Number Format")),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssRow)(grainjs__WEBPACK_IMPORTED_MODULE_10__.dom.autoDispose(holder), (0,app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_3__.makeButtonSelect)(numMode, modeOptions, setMode, disabledStyle, cssModeSelect.cls(""), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("numeric-mode")), (0,app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_3__.makeButtonSelect)(numSign, signOptions, setSign, disabledStyle, cssSignSelect.cls(""), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("numeric-sign"))),
      grainjs__WEBPACK_IMPORTED_MODULE_10__.dom.maybe((use) => use(numMode) === "currency", () => [
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssLabel)(t("Currency")),
        (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssRow)(grainjs__WEBPACK_IMPORTED_MODULE_10__.dom.domComputed(docCurrency, (defaultCurrency) => (0,app_client_widgets_CurrencyPicker__WEBPACK_IMPORTED_MODULE_6__.buildCurrencyPicker)(holder, currency, setCurrency, { defaultCurrencyLabel: t(`Default currency ({{defaultCurrency}})`, { defaultCurrency }), disabled })), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("numeric-currency"))
      ]),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssLabel)(t("Decimals")),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_2__.cssRow)(decimals("min", minDecimals, defaultMin, setMinDecimals, disabled, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("numeric-min-decimals")), decimals("max", maxDecimals, defaultMax, setMaxDecimals, disabled, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("numeric-max-decimals")))
    ];
  }
}
function numberOrDefault(value, def) {
  return value !== null && value !== void 0 ? Number(value) : def;
}
function updateOptions(prop, value) {
  if (prop === "numMode" && (!value || value === "scientific" || value === "percent")) {
    return { numSign: void 0 };
  }
  return {};
}
function decimals(label, value, defaultValue, setFunc, disabled, ...args) {
  return cssDecimalsBox(cssDecimalsBox.cls("-disabled", disabled), cssNumLabel(label), cssNumInput({ type: "text", size: "2", min: "0" }, grainjs__WEBPACK_IMPORTED_MODULE_10__.dom.prop("value", value), grainjs__WEBPACK_IMPORTED_MODULE_10__.dom.prop("placeholder", defaultValue), grainjs__WEBPACK_IMPORTED_MODULE_10__.dom.on("change", (ev, elem) => {
    const newVal = parseInt(elem.value, 10);
    elem.value = String(value.get());
    setFunc(Number.isNaN(newVal) ? void 0 : newVal);
    elem.blur();
  }), grainjs__WEBPACK_IMPORTED_MODULE_10__.dom.on("focus", (ev, elem) => elem.select())), cssSpinner(cssSpinnerBtn(cssSpinnerTop("DropdownUp"), grainjs__WEBPACK_IMPORTED_MODULE_10__.dom.on("click", () => setFunc(numberOrDefault(value.get(), defaultValue.get()) + 1))), cssSpinnerBtn(cssSpinnerBottom("Dropdown"), grainjs__WEBPACK_IMPORTED_MODULE_10__.dom.on("click", () => setFunc(numberOrDefault(value.get(), defaultValue.get()) - 1)))), ...args);
}
const cssDecimalsBox = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.styled)("div", `
  position: relative;
  flex: auto;
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.lightText};
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.lightText};
  font-weight: normal;
  display: flex;
  align-items: center;
  &:first-child {
    margin-right: 16px;
  }
  &-disabled {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.rightPanelToggleButtonDisabledBg};
    pointer-events: none;
  }
`);
const cssNumLabel = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.styled)("div", `
  position: absolute;
  padding-left: 8px;
  pointer-events: none;
`);
const cssNumInput = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.styled)("input", `
  padding: 4px 32px 4px 40px;
  border: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputBorder};
  border-radius: 3px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputBg};
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputFg};
  width: 100%;
  text-align: right;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
`);
const cssSpinner = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.styled)("div", `
  position: absolute;
  right: 8px;
  width: 16px;
  height: 100%;
  display: flex;
  flex-direction: column;
`);
const cssSpinnerBtn = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.styled)("div", `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.controlSecondaryFg};
  flex: 1 1 0px;
  min-height: 0px;
  position: relative;
  cursor: pointer;
  overflow: hidden;
  &:hover {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.controlSecondaryHoverFg};
  }
`);
const cssSpinnerTop = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_5__.icon, `
  position: absolute;
  top: 0px;
`);
const cssSpinnerBottom = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_5__.icon, `
  position: absolute;
  bottom: 0px;
`);
const cssModeSelect = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.styled)(app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_3__.makeButtonSelect, `
  flex: 4 4 0px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputBg};
`);
const cssSignSelect = (0,grainjs__WEBPACK_IMPORTED_MODULE_10__.styled)(app_client_ui2018_buttonSelect__WEBPACK_IMPORTED_MODULE_3__.makeButtonSelect, `
  flex: 1 1 0px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.inputBg};
  margin-left: 16px;
`);


/***/ }),

/***/ "./app/client/widgets/Reference.ts":
/*!*****************************************!*\
  !*** ./app/client/widgets/Reference.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Reference": () => (/* binding */ Reference)
/* harmony export */ });
/* harmony import */ var app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/localization */ "./app/client/lib/localization.ts");
/* harmony import */ var app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/widgets/NTextBox */ "./app/client/widgets/NTextBox.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");








const t = (0,app_client_lib_localization__WEBPACK_IMPORTED_MODULE_0__.makeT)("Reference");
class Reference extends app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_5__.NTextBox {
  constructor(field) {
    super(field);
    this._visibleColRef = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(this, (use) => use(this.field.visibleColRef));
    this._visibleColRef.onWrite((val) => this.field.visibleColRef.saveOnly(val));
    this._validCols = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(this, (use) => {
      const refTable = use(use(this.field.column).refTable);
      if (!refTable) {
        return [];
      }
      return use(use(refTable.columns).getObservable()).filter((col) => !use(col.isHiddenCol)).map((col) => ({
        label: use(col.label),
        value: col.getRowId(),
        icon: "FieldColumn",
        disabled: (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_6__.isFullReferencingType)(use(col.type)) || use(col.isTransforming)
      })).concat([{ label: t("Row ID"), value: 0, icon: "FieldColumn" }]);
    });
  }
  buildConfigDom() {
    return [
      this.buildTransformConfigDom(),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__.cssLabel)(t("CELL FORMAT")),
      super.buildConfigDom()
    ];
  }
  buildTransformConfigDom() {
    const disabled = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(null, (use) => use(this.field.config.multiselect));
    return [
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__.cssLabel)(t("SHOW COLUMN")),
      (0,app_client_ui_RightPanelStyles__WEBPACK_IMPORTED_MODULE_1__.cssRow)(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(disabled), (0,app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_4__.select)(this._visibleColRef, this._validCols, {
        disabled
      }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("fbuilder-ref-col-select"))
    ];
  }
  buildDom(row) {
    const referenceId = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(null, (use) => {
      const id = row.cells[use(this.field.colId)];
      return id && use(id);
    });
    const formattedValue = grainjs__WEBPACK_IMPORTED_MODULE_7__.Computed.create(null, (use) => {
      let [value, hasBlankReference] = ["", false];
      if (use(row._isAddRow) || this.isDisposed() || use(this.field.displayColModel).isDisposed()) {
        return { value, hasBlankReference };
      }
      const displayValueObs = row.cells[use(use(this.field.displayColModel).colId)];
      if (!displayValueObs) {
        return { value, hasBlankReference };
      }
      const displayValue = use(displayValueObs);
      value = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_6__.isVersions)(displayValue) ? use(this.field.formatter).formatAny(displayValue[1].local || displayValue[1].parent) : use(this.field.formatter).formatAny(displayValue);
      hasBlankReference = referenceId.get() !== 0 && value.trim() === "";
      return { value, hasBlankReference };
    });
    return cssRef(grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(formattedValue), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.autoDispose(referenceId), cssRef.cls("-blank", (use) => use(formattedValue).hasBlankReference), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.style("text-align", this.alignment), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.cls("text_wrapping", this.wrapping), cssRefIcon("FieldReference", (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("ref-link-icon"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.hideInPrintView)()), grainjs__WEBPACK_IMPORTED_MODULE_7__.dom.text((use) => {
      if (use(referenceId) === 0) {
        return "";
      }
      if (use(formattedValue).hasBlankReference) {
        return "[Blank]";
      }
      return use(formattedValue).value;
    }));
  }
}
const cssRefIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_3__.icon, `
  float: left;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.colors.slate};
  margin: -1px 2px 2px 0;
`);
const cssRef = (0,grainjs__WEBPACK_IMPORTED_MODULE_7__.styled)("div.field_clip", `
  &-blank {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.colors.slate}
  }
`);


/***/ }),

/***/ "./app/client/widgets/ReferenceEditor.ts":
/*!***********************************************!*\
  !*** ./app/client/widgets/ReferenceEditor.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReferenceEditor": () => (/* binding */ ReferenceEditor),
/* harmony export */   "cssPlusButton": () => (/* binding */ cssPlusButton),
/* harmony export */   "cssPlusIcon": () => (/* binding */ cssPlusIcon),
/* harmony export */   "cssRefList": () => (/* binding */ cssRefList),
/* harmony export */   "renderACItem": () => (/* binding */ renderACItem)
/* harmony export */ });
/* harmony import */ var app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/ACIndex */ "./app/client/lib/ACIndex.ts");
/* harmony import */ var app_client_lib_autocomplete__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/autocomplete */ "./app/client/lib/autocomplete.ts");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/icons */ "./app/client/ui2018/icons.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_client_widgets_NTextEditor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/widgets/NTextEditor */ "./app/client/widgets/NTextEditor.ts");
/* harmony import */ var app_client_lib_ReferenceUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/lib/ReferenceUtils */ "./app/client/lib/ReferenceUtils.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");










class ReferenceEditor extends app_client_widgets_NTextEditor__WEBPACK_IMPORTED_MODULE_6__.NTextEditor {
  constructor(options) {
    super(options);
    this._showAddNew = false;
    const docData = options.gristDoc.docData;
    this._utils = new app_client_lib_ReferenceUtils__WEBPACK_IMPORTED_MODULE_7__.ReferenceUtils(options.field, docData);
    const vcol = this._utils.visibleColModel;
    this._enableAddNew = vcol && !vcol.isRealFormula() && !!vcol.colId();
    if (!options.readonly) {
      this.cellEditorDiv.classList.add(cssRefEditor.className);
      this.cellEditorDiv.appendChild(cssRefEditIcon("FieldReference"));
    }
    this.textInput.value = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_8__.undef)(options.state, options.editValue, this._idToText());
    const needReload = options.editValue === void 0 && !this._utils.tableData.isLoaded;
    docData.fetchTable(this._utils.refTableId).then(() => {
      if (this.isDisposed()) {
        return;
      }
      if (needReload && this.textInput.value === "") {
        this.textInput.value = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_8__.undef)(options.state, options.editValue, this._idToText());
        this.resizeInput();
      }
      if (this._autocomplete) {
        if (options.editValue === void 0) {
          this._autocomplete.search((items) => items.findIndex((item) => item.rowId === options.cellValue));
        } else {
          this._autocomplete.search();
        }
      }
    }).catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_2__.reportError);
  }
  attach(cellElem) {
    super.attach(cellElem);
    if (this.options.readonly) {
      return;
    }
    this._autocomplete = this.autoDispose(new app_client_lib_autocomplete__WEBPACK_IMPORTED_MODULE_1__.Autocomplete(this.textInput, {
      menuCssClass: app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_5__.menuCssClass + " " + cssRefList.className,
      search: this._doSearch.bind(this),
      renderItem: this._renderItem.bind(this),
      getItemText: (item) => item.text,
      onClick: () => this.options.commands.fieldEditSaveHere()
    }));
  }
  async prepForSave() {
    const selectedItem = this._autocomplete && this._autocomplete.getSelectedItem();
    if (selectedItem && selectedItem.rowId === "new" && selectedItem.text === this.textInput.value) {
      const colInfo = { [this._utils.visibleColId]: this.textInput.value };
      selectedItem.rowId = await this._utils.tableData.sendTableAction(["AddRecord", null, colInfo]);
    }
  }
  getCellValue() {
    const selectedItem = this._autocomplete && this._autocomplete.getSelectedItem();
    if (selectedItem) {
      return selectedItem.rowId;
    } else if ((0,app_client_lib_ReferenceUtils__WEBPACK_IMPORTED_MODULE_7__.nocaseEqual)(this.textInput.value, this._idToText())) {
      return this.options.cellValue;
    }
    return super.getCellValue();
  }
  _idToText() {
    return this._utils.idToText(this.options.cellValue);
  }
  async _doSearch(text) {
    const result = this._utils.autocompleteSearch(text);
    this._showAddNew = false;
    if (!this._enableAddNew || !text) {
      return result;
    }
    const cleanText = (0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_0__.normalizeText)(text);
    if (result.items.find((item) => item.cleanText === cleanText)) {
      return result;
    }
    result.items.push({ rowId: "new", text, cleanText });
    this._showAddNew = true;
    return result;
  }
  _renderItem(item, highlightFunc) {
    return renderACItem(item.text, highlightFunc, item.rowId === "new", this._showAddNew);
  }
}
function renderACItem(text, highlightFunc, isAddNew, withSpaceForNew) {
  if (isAddNew) {
    return cssRefItem(cssRefItem.cls("-new"), cssPlusButton(cssPlusIcon("Plus")), text, (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("ref-editor-item"), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("ref-editor-new-item"));
  }
  return cssRefItem(cssRefItem.cls("-with-new", withSpaceForNew), (0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_0__.buildHighlightedDom)(text, highlightFunc, cssMatchText), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.testId)("ref-editor-item"));
}
const cssRefEditor = (0,grainjs__WEBPACK_IMPORTED_MODULE_9__.styled)("div", `
  & > .celleditor_text_editor, & > .celleditor_content_measure {
    padding-left: 18px;
  }
`);
const cssRefList = (0,grainjs__WEBPACK_IMPORTED_MODULE_9__.styled)("div", `
  z-index: 1001;
  overflow-y: auto;
  padding: 8px 0 0 0;
  --weaseljs-menu-item-padding: 8px 16px;
`);
const addNewHeight = "37px";
const cssRefItem = (0,grainjs__WEBPACK_IMPORTED_MODULE_9__.styled)("li", `
  display: block;
  font-family: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.vars.fontFamily};
  white-space: pre;
  overflow: hidden;
  text-overflow: ellipsis;
  outline: none;
  padding: var(--weaseljs-menu-item-padding, 8px 24px);
  cursor: pointer;
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.menuItemFg};

  &.selected {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.menuItemSelectedBg};
    color:            ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.menuItemSelectedFg};
  }
  &-with-new {
    scroll-margin-bottom: ${addNewHeight};
  }
  &-new {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.lightText};
    position: sticky;
    bottom: 0px;
    height: ${addNewHeight};
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.menuBg};
    border-top: 1px solid ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.menuBorder};
    scroll-margin-bottom: initial;
  }
  &-new.selected {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.menuItemSelectedFg};
  }
`);
const cssPlusButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_9__.styled)("div", `
  display: inline-block;
  width: 20px;
  height: 20px;
  border-radius: 20px;
  margin-right: 8px;
  text-align: center;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.lightGreen};
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.light};

  .selected > & {
    background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.darkGreen};
  }
`);
const cssPlusIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_9__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon, `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.light};
`);
const cssRefEditIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_9__.styled)(app_client_ui2018_icons__WEBPACK_IMPORTED_MODULE_4__.icon, `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.colors.slate};
  position: absolute;
  top: 0;
  left: 0;
  margin: 3px 3px 0 3px;
`);
const cssMatchText = (0,grainjs__WEBPACK_IMPORTED_MODULE_9__.styled)("span", `
  color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.autocompleteMatchText};
  .selected > & {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_3__.theme.autocompleteSelectedMatchText};
  }
`);


/***/ }),

/***/ "./app/client/widgets/ReferenceList.ts":
/*!*********************************************!*\
  !*** ./app/client/widgets/ReferenceList.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReferenceList": () => (/* binding */ ReferenceList)
/* harmony export */ });
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var app_client_widgets_ChoiceListCell__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/widgets/ChoiceListCell */ "./app/client/widgets/ChoiceListCell.ts");
/* harmony import */ var app_client_widgets_Reference__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/widgets/Reference */ "./app/client/widgets/Reference.ts");
/* harmony import */ var app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/widgets/ChoiceToken */ "./app/client/widgets/ChoiceToken.ts");






class ReferenceList extends app_client_widgets_Reference__WEBPACK_IMPORTED_MODULE_4__.Reference {
  buildDom(row) {
    return (0,app_client_widgets_ChoiceListCell__WEBPACK_IMPORTED_MODULE_3__.cssChoiceList)(grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.cls("field_clip"), app_client_widgets_ChoiceListCell__WEBPACK_IMPORTED_MODULE_3__.cssChoiceList.cls("-wrap", this.wrapping), grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.style("justify-content", (use) => use(this.alignment) === "right" ? "flex-end" : use(this.alignment)), grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.domComputed((use) => {
      if (use(row._isAddRow) || this.isDisposed() || use(this.field.displayColModel).isDisposed()) {
        return null;
      }
      const value = row.cells[use(use(this.field.displayColModel).colId)];
      if (!value) {
        return null;
      }
      const content = use(value);
      if (!content) {
        return null;
      }
      const items = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.isList)(content) ? content.slice(1) : [content];
      const formatter = use(this.field.visibleColFormatter);
      return items.map((item) => formatter.formatAny(item));
    }, (input) => {
      if (!input) {
        return null;
      }
      return input.map((token) => {
        const isBlankReference = token.trim() === "";
        return (0,app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_5__.choiceToken)(isBlankReference ? "[Blank]" : token, {
          textColor: isBlankReference ? app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.colors.slate.value : void 0
        }, grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.cls(app_client_widgets_ChoiceListCell__WEBPACK_IMPORTED_MODULE_3__.cssToken.className), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_0__.testId)("ref-list-cell-token"));
      });
    }));
  }
}


/***/ }),

/***/ "./app/client/widgets/ReferenceListEditor.ts":
/*!***************************************************!*\
  !*** ./app/client/widgets/ReferenceListEditor.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReferenceListEditor": () => (/* binding */ ReferenceListEditor)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/ACIndex */ "./app/client/lib/ACIndex.ts");
/* harmony import */ var app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/lib/TokenField */ "./app/client/lib/TokenField.ts");
/* harmony import */ var app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
/* harmony import */ var app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/widgets/ChoiceToken */ "./app/client/widgets/ChoiceToken.ts");
/* harmony import */ var app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/widgets/EditorButtons */ "./app/client/widgets/EditorButtons.ts");
/* harmony import */ var app_client_widgets_EditorPlacement__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/widgets/EditorPlacement */ "./app/client/widgets/EditorPlacement.ts");
/* harmony import */ var app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/widgets/NewBaseEditor */ "./app/client/widgets/NewBaseEditor.ts");
/* harmony import */ var app_client_widgets_ReferenceEditor__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/widgets/ReferenceEditor */ "./app/client/widgets/ReferenceEditor.ts");
/* harmony import */ var app_client_lib_ReferenceUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/lib/ReferenceUtils */ "./app/client/lib/ReferenceUtils.ts");
/* harmony import */ var app_common_csvFormat__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/common/csvFormat */ "./app/common/csvFormat.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");















class ReferenceItem {
  constructor(text, rowId) {
    this.text = text;
    this.rowId = rowId;
    this.label = typeof this.rowId === "number" ? String(this.rowId) : this.text;
    this.cleanText = (0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_1__.normalizeText)(this.text);
  }
}
class ReferenceListEditor extends app_client_widgets_NewBaseEditor__WEBPACK_IMPORTED_MODULE_9__.NewBaseEditor {
  constructor(options) {
    super(options);
    this.options = options;
    this._showAddNew = false;
    const docData = options.gristDoc.docData;
    this._utils = new app_client_lib_ReferenceUtils__WEBPACK_IMPORTED_MODULE_11__.ReferenceUtils(options.field, docData);
    const vcol = this._utils.visibleColModel;
    this._enableAddNew = vcol && !vcol.isRealFormula() && !!vcol.colId();
    const acOptions = {
      menuCssClass: `${app_client_ui2018_menus__WEBPACK_IMPORTED_MODULE_5__.menuCssClass} ${app_client_widgets_ReferenceEditor__WEBPACK_IMPORTED_MODULE_10__.cssRefList.className}`,
      search: this._doSearch.bind(this),
      renderItem: this._renderItem.bind(this),
      getItemText: (item) => item.text
    };
    this.commandGroup = this.autoDispose((0,app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.createGroup)(options.commands, null, true));
    this._alignment = options.field.widgetOptionsJson.peek().alignment || "left";
    const cellValue = (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_13__.decodeObject)(options.cellValue);
    const startRowIds = options.editValue !== void 0 || !Array.isArray(cellValue) ? [] : cellValue;
    const needReload = options.editValue === void 0 && !this._utils.tableData.isLoaded;
    const startTokens = needReload ? [] : startRowIds.map((id) => new ReferenceItem(this._utils.idToText(id), typeof id === "number" ? id : "invalid"));
    this._tokenField = app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.TokenField.ctor().create(this, {
      initialValue: startTokens,
      renderToken: (item) => {
        const isBlankReference = item.cleanText === "";
        return [
          isBlankReference ? "[Blank]" : item.text,
          cssToken.cls("-blank", isBlankReference),
          app_client_widgets_ChoiceToken__WEBPACK_IMPORTED_MODULE_6__.cssChoiceToken.cls("-invalid", item.rowId === "invalid")
        ];
      },
      createToken: (text) => new ReferenceItem(text, "invalid"),
      acOptions,
      openAutocompleteOnFocus: true,
      readonly: options.readonly,
      trimLabels: true,
      styles: { cssTokenField, cssToken, cssDeleteButton, cssDeleteIcon }
    });
    this._dom = (0,grainjs__WEBPACK_IMPORTED_MODULE_14__.dom)("div.default_editor", grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.cls("readonly_editor", options.readonly), grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.cls(cssReadonlyStyle.className, options.readonly), this.cellEditorDiv = cssCellEditor((0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.testId)("widget-text-editor"), this._contentSizer = cssContentSizer(), (elem) => this._tokenField.attach(elem)), (0,app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_7__.createMobileButtons)(options.commands));
    this._textInput = this._tokenField.getTextInput();
    grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.update(this._tokenField.getRootElem(), grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.style("justify-content", this._alignment));
    grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.update(this._tokenField.getHiddenInput(), this.commandGroup.attach());
    grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.update(this._textInput, grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.on("input", () => this.resizeInput(true)), grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.prop("value", options.editValue || ""), this.commandGroup.attach());
    docData.fetchTable(this._utils.refTableId).then(() => {
      if (this.isDisposed()) {
        return;
      }
      if (needReload) {
        this._tokenField.setTokens(startRowIds.map((id) => new ReferenceItem(this._utils.idToText(id), typeof id === "number" ? id : "invalid")));
        this.resizeInput();
      }
      const autocomplete = this._tokenField.getAutocomplete();
      if (autocomplete) {
        autocomplete.search();
      }
    }).catch(app_client_models_errors__WEBPACK_IMPORTED_MODULE_3__.reportError);
  }
  attach(cellElem) {
    this._editorPlacement = app_client_widgets_EditorPlacement__WEBPACK_IMPORTED_MODULE_8__.EditorPlacement.create(this, this._dom, cellElem, { margins: (0,app_client_widgets_EditorButtons__WEBPACK_IMPORTED_MODULE_7__.getButtonMargins)() });
    this.autoDispose(this._editorPlacement.onReposition.addListener(() => this.resizeInput()));
    this.autoDispose(this._tokenField.tokensObs.addListener(() => Promise.resolve().then(() => this.resizeInput())));
    this.setSizerLimits();
    this.resizeInput();
    this._textInput.focus();
    const pos = Math.min(this.options.cursorPos, this._textInput.value.length);
    this._textInput.setSelectionRange(pos, pos);
  }
  getDom() {
    return this._dom;
  }
  getCellValue() {
    const rowIds = this._tokenField.tokensObs.get().map((t) => typeof t.rowId === "number" ? t.rowId : t.text);
    return (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_13__.encodeObject)(rowIds);
  }
  getTextValue() {
    const rowIds = this._tokenField.tokensObs.get().map((t) => typeof t.rowId === "number" ? String(t.rowId) : t.text);
    return (0,app_common_csvFormat__WEBPACK_IMPORTED_MODULE_12__.csvEncodeRow)(rowIds, { prettier: true });
  }
  getCursorPos() {
    return this._textInput.selectionStart || 0;
  }
  async prepForSave() {
    const tokens = this._tokenField.tokensObs.get();
    const newValues = tokens.filter((t) => t.rowId === "new");
    if (newValues.length === 0) {
      return;
    }
    const colInfo = { [this._utils.visibleColId]: newValues.map((t) => t.text) };
    const rowIds = await this._utils.tableData.sendTableAction(["BulkAddRecord", new Array(newValues.length).fill(null), colInfo]);
    let i = 0;
    const newTokens = tokens.map((t) => {
      return t.rowId === "new" ? new ReferenceItem(t.text, rowIds[i++]) : t;
    });
    this._tokenField.setTokens(newTokens);
  }
  setSizerLimits() {
    const rootElem = this._tokenField.getRootElem();
    const maxSize = this._editorPlacement.calcSizeWithPadding(rootElem, { width: Infinity, height: Infinity }, { calcOnly: true });
    this._contentSizer.style.maxWidth = Math.ceil(maxSize.width) + "px";
  }
  resizeInput(onlyTextInput = false) {
    if (this.isDisposed()) {
      return;
    }
    const rootElem = this._tokenField.getRootElem();
    if (!onlyTextInput || !this._inputSizer) {
      this._contentSizer.innerHTML = "";
      grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.update(this._contentSizer, grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.update(rootElem.cloneNode(true), grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.style("width", ""), grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.style("height", ""), this._inputSizer = cssInputSizer(), grainjs__WEBPACK_IMPORTED_MODULE_14__.dom.cls("test-tokenfield", false)));
    }
    this._inputSizer.textContent = this._textInput.value + "\u200B";
    const rect = this._contentSizer.getBoundingClientRect();
    const size = this._editorPlacement.calcSizeWithPadding(rootElem, rect);
    rootElem.style.width = size.width + "px";
    rootElem.style.height = size.height + "px";
    this._textInput.style.width = this._inputSizer.getBoundingClientRect().width + "px";
  }
  async _doSearch(text) {
    const { items, selectIndex, highlightFunc } = this._utils.autocompleteSearch(text);
    const result = {
      selectIndex,
      highlightFunc,
      items: items.map((i) => new ReferenceItem(i.text, i.rowId))
    };
    this._showAddNew = false;
    if (!this._enableAddNew || !text) {
      return result;
    }
    const cleanText = (0,app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_1__.normalizeText)(text);
    if (result.items.find((item) => item.cleanText === cleanText)) {
      return result;
    }
    result.items.push(new ReferenceItem(text, "new"));
    this._showAddNew = true;
    return result;
  }
  _renderItem(item, highlightFunc) {
    return (0,app_client_widgets_ReferenceEditor__WEBPACK_IMPORTED_MODULE_10__.renderACItem)(item.text, highlightFunc, item.rowId === "new", this._showAddNew);
  }
}
const cssCellEditor = (0,grainjs__WEBPACK_IMPORTED_MODULE_14__.styled)("div", `
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.theme.cellEditorBg};
  font-family: var(--grist-font-family-data);
  font-size: var(--grist-medium-font-size);
`);
const cssTokenField = (0,grainjs__WEBPACK_IMPORTED_MODULE_14__.styled)(app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssTokenField, `
  border: none;
  align-items: start;
  align-content: start;
  padding: 0 3px;
  height: min-content;
  min-height: 22px;
  color: black;
  flex-wrap: wrap;
`);
const cssToken = (0,grainjs__WEBPACK_IMPORTED_MODULE_14__.styled)(app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssToken, `
  padding: 1px 4px;
  margin: 2px;
  line-height: 16px;
  white-space: pre;

  &.selected {
    box-shadow: inset 0 0 0 1px ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.lightGreen};
  }

  &-blank {
    color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.slate};
  }
`);
const cssDeleteButton = (0,grainjs__WEBPACK_IMPORTED_MODULE_14__.styled)(app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssDeleteButton, `
  position: absolute;
  top: -8px;
  right: -6px;
  border-radius: 16px;
  background-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.dark};
  width: 14px;
  height: 14px;
  cursor: pointer;
  z-index: 1;
  display: none;
  align-items: center;
  justify-content: center;

  .${cssToken.className}:hover & {
    display: flex;
  }
  .${cssTokenField.className}.token-dragactive & {
    cursor: unset;
  }
`);
const cssDeleteIcon = (0,grainjs__WEBPACK_IMPORTED_MODULE_14__.styled)(app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssDeleteIcon, `
  --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.light};
  &:hover {
    --icon-color: ${app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_4__.colors.darkGrey};
  }
`);
const cssContentSizer = (0,grainjs__WEBPACK_IMPORTED_MODULE_14__.styled)("div", `
  position: absolute;
  left: 0;
  top: -100px;
  border: none;
  visibility: hidden;
  overflow: visible;
  width: max-content;

  & .${app_client_lib_TokenField__WEBPACK_IMPORTED_MODULE_2__.tokenFieldStyles.cssInputWrapper.className} {
    display: none;
  }
`);
const cssInputSizer = (0,grainjs__WEBPACK_IMPORTED_MODULE_14__.styled)("div", `
  flex: auto;
  min-width: 24px;
  margin: 3px 2px;
`);
const cssReadonlyStyle = (0,grainjs__WEBPACK_IMPORTED_MODULE_14__.styled)("div", `
  padding-left: 16px;
  background: white;
`);


/***/ }),

/***/ "./app/client/widgets/Spinner.ts":
/*!***************************************!*\
  !*** ./app/client/widgets/Spinner.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Spinner": () => (/* binding */ Spinner)
/* harmony export */ });
/* harmony import */ var app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/koForm */ "./app/client/lib/koForm.js");
/* harmony import */ var app_client_widgets_NumericTextBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/widgets/NumericTextBox */ "./app/client/widgets/NumericTextBox.ts");
/* harmony import */ var app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/NumberFormat */ "./app/common/NumberFormat.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
/* harmony import */ var knockout__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(knockout__WEBPACK_IMPORTED_MODULE_4__);





class Spinner extends app_client_widgets_NumericTextBox__WEBPACK_IMPORTED_MODULE_1__.NumericTextBox {
  constructor(field) {
    super(field);
    const resolved = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_4__.computed(() => {
      const { numMode } = this.options();
      const docSettings = this.field.documentSettings();
      return (0,app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_2__.buildNumberFormat)({ numMode }, docSettings).resolvedOptions();
    }));
    this._stepSize = this.autoDispose(knockout__WEBPACK_IMPORTED_MODULE_4__.computed(() => {
      const extraScaling = this.options().numMode === "percent" ? 2 : 0;
      return Math.pow(10, -(this.options().decimals || resolved().minimumFractionDigits) - extraScaling);
    }));
  }
  buildDom(row) {
    const value = row.cells[this.field.colId.peek()];
    return grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.update(super.buildDom(row), grainjs__WEBPACK_IMPORTED_MODULE_3__.dom.cls("widget_spinner"), app_client_lib_koForm__WEBPACK_IMPORTED_MODULE_0__.spinner(value, this._stepSize));
  }
}


/***/ }),

/***/ "./app/client/widgets/TZAutocomplete.ts":
/*!**********************************************!*\
  !*** ./app/client/widgets/TZAutocomplete.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildTZAutocomplete": () => (/* binding */ buildTZAutocomplete),
/* harmony export */   "timezoneOptionsImpl": () => (/* binding */ timezoneOptionsImpl)
/* harmony export */ });
/* harmony import */ var app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/lib/ACIndex */ "./app/client/lib/ACIndex.ts");
/* harmony import */ var app_client_lib_ACSelect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/lib/ACSelect */ "./app/client/lib/ACSelect.ts");
/* harmony import */ var app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));




function timezoneOptionsImpl(timestamp, names, moment) {
  const m = moment.unix(timestamp / 1e3);
  const options = names.map((value) => ({
    cleanText: value.toLowerCase().trim(),
    value,
    label: `(GMT${m.tz(value).format("Z")}) ${value}`,
    offset: -moment.tz.zone(value).parse(timestamp)
  }));
  options.sort((a, b) => (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_3__.nativeCompare)(a.offset, b.offset) || (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_3__.nativeCompare)(a.value, b.value));
  return options;
}
function timezoneOptions(moment) {
  return timezoneOptionsImpl(Date.now(), moment.tz.names(), moment);
}
function buildTZAutocomplete(owner, moment, valueObs, save, options) {
  const acIndex = new app_client_lib_ACIndex__WEBPACK_IMPORTED_MODULE_0__.ACIndexImpl(timezoneOptions(moment), 1e3, true);
  const saveTZ = (value, item) => {
    if (!item) {
      const results = acIndex.search(value);
      if (results.selectIndex >= 0 && results.items.length > 0) {
        item = results.items[results.selectIndex];
        value = item.value;
      }
    }
    if (!item) {
      throw new Error("Invalid time zone");
    }
    if (value !== valueObs.get()) {
      return save(value);
    }
  };
  return (0,app_client_lib_ACSelect__WEBPACK_IMPORTED_MODULE_1__.buildACSelect)(owner, __spreadProps(__spreadValues({}, options), { acIndex, valueObs, save: saveTZ }), (0,app_client_ui2018_cssVars__WEBPACK_IMPORTED_MODULE_2__.testId)("tz-autocomplete"));
}


/***/ }),

/***/ "./app/client/widgets/Toggle.ts":
/*!**************************************!*\
  !*** ./app/client/widgets/Toggle.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToggleCheckBox": () => (/* binding */ ToggleCheckBox),
/* harmony export */   "ToggleSwitch": () => (/* binding */ ToggleSwitch)
/* harmony export */ });
/* harmony import */ var app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/components/commands */ "./app/client/components/commands.ts");
/* harmony import */ var app_client_widgets_NewAbstractWidget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/widgets/NewAbstractWidget */ "./app/client/widgets/NewAbstractWidget.ts");
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");



class ToggleBase extends app_client_widgets_NewAbstractWidget__WEBPACK_IMPORTED_MODULE_1__.NewAbstractWidget {
  _addClickEventHandler(row) {
    return grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.on("click", (event) => {
      if (event.shiftKey) {
        return;
      }
      if (!this.field.column().isRealFormula()) {
        app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.setCursor.run(row, this.field);
        app_client_components_commands__WEBPACK_IMPORTED_MODULE_0__.allCommands.input.run(" ");
      }
    });
  }
}
class ToggleCheckBox extends ToggleBase {
  constructor(field, _options = {}) {
    super(field, { defaultTextColor: "#606060" });
  }
  buildDom(row) {
    const value = row.cells[this.field.colId.peek()];
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.field_clip", (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.widget_checkbox", (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.widget_checkmark", grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.show(value), (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.checkmark_kick"), (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.checkmark_stem")), this._addClickEventHandler(row)));
  }
}
class ToggleSwitch extends ToggleBase {
  constructor(field, _options = {}) {
    super(field, { defaultTextColor: "#2CB0AF" });
  }
  buildDom(row) {
    const value = row.cells[this.field.colId.peek()];
    return (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.field_clip", (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.widget_switch", grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.cls("switch_on", value), grainjs__WEBPACK_IMPORTED_MODULE_2__.dom.cls("switch_transition", row._isRealChange), (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.switch_slider"), (0,grainjs__WEBPACK_IMPORTED_MODULE_2__.dom)("div.switch_circle"), this._addClickEventHandler(row)));
  }
}


/***/ }),

/***/ "./app/client/widgets/UserType.ts":
/*!****************************************!*\
  !*** ./app/client/widgets/UserType.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getWidgetConfiguration": () => (/* binding */ getWidgetConfiguration),
/* harmony export */   "mergeOptions": () => (/* binding */ mergeOptions),
/* harmony export */   "typeDefs": () => (/* binding */ typeDefs)
/* harmony export */ });
/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");

function getWidgetConfiguration(widgetName, type) {
  const oneTypeDef = typeDefs[type] || typeDefs.Text;
  if (!(widgetName in oneTypeDef.widgets)) {
    widgetName = oneTypeDef.default;
  }
  return {
    name: widgetName,
    config: oneTypeDef.widgets[widgetName]
  };
}
function mergeOptions(options, type) {
  const { name, config } = getWidgetConfiguration(options.widget, type);
  return underscore__WEBPACK_IMPORTED_MODULE_0__["default"].defaults({ widget: name }, options, config.options);
}
const typeDefs = {
  Any: {
    label: "Any",
    icon: "FieldAny",
    widgets: {
      TextBox: {
        cons: "TextBox",
        editCons: "TextEditor",
        icon: "FieldTextbox",
        options: {
          alignment: "left",
          wrap: void 0
        }
      }
    },
    default: "TextBox"
  },
  Text: {
    label: "Text",
    icon: "FieldText",
    widgets: {
      TextBox: {
        cons: "TextBox",
        editCons: "TextEditor",
        icon: "FieldTextbox",
        options: {
          alignment: "left",
          wrap: void 0
        }
      },
      HyperLink: {
        cons: "HyperLinkTextBox",
        editCons: "HyperLinkEditor",
        icon: "FieldLink",
        options: {
          alignment: "left",
          wrap: void 0
        }
      }
    },
    default: "TextBox"
  },
  Numeric: {
    label: "Numeric",
    icon: "FieldNumeric",
    widgets: {
      TextBox: {
        cons: "NumericTextBox",
        editCons: "TextEditor",
        icon: "FieldTextbox",
        options: {
          alignment: "right",
          wrap: void 0,
          decimals: void 0,
          maxDecimals: void 0,
          numMode: void 0,
          numSign: void 0,
          currency: void 0
        }
      },
      Spinner: {
        cons: "Spinner",
        editCons: "TextEditor",
        icon: "FieldSpinner",
        options: {
          alignment: "right",
          wrap: void 0,
          decimals: void 0,
          maxDecimals: void 0,
          numMode: void 0,
          numSign: void 0,
          currency: void 0
        }
      }
    },
    default: "TextBox"
  },
  Int: {
    label: "Integer",
    icon: "FieldInteger",
    widgets: {
      TextBox: {
        cons: "NumericTextBox",
        editCons: "TextEditor",
        icon: "FieldTextbox",
        options: {
          decimals: 0,
          alignment: "right",
          wrap: void 0,
          maxDecimals: void 0,
          numMode: void 0,
          numSign: void 0,
          currency: void 0
        }
      },
      Spinner: {
        cons: "Spinner",
        editCons: "TextEditor",
        icon: "FieldSpinner",
        options: {
          decimals: 0,
          alignment: "right",
          wrap: void 0,
          maxDecimals: void 0,
          numMode: void 0,
          numSign: void 0,
          currency: void 0
        }
      }
    },
    default: "TextBox"
  },
  Bool: {
    label: "Toggle",
    icon: "FieldToggle",
    widgets: {
      TextBox: {
        cons: "TextBox",
        editCons: "TextEditor",
        icon: "FieldTextbox",
        options: {
          alignment: "center",
          wrap: void 0
        }
      },
      CheckBox: {
        cons: "CheckBox",
        editCons: "CheckBoxEditor",
        icon: "FieldCheckbox",
        options: {}
      },
      Switch: {
        cons: "Switch",
        editCons: "CheckBoxEditor",
        icon: "FieldSwitcher",
        options: {}
      }
    },
    default: "CheckBox"
  },
  Date: {
    label: "Date",
    icon: "FieldDate",
    widgets: {
      TextBox: {
        cons: "DateTextBox",
        editCons: "DateEditor",
        icon: "FieldTextbox",
        options: {
          dateFormat: "YYYY-MM-DD",
          isCustomDateFormat: false,
          alignment: "left"
        }
      }
    },
    default: "TextBox"
  },
  DateTime: {
    label: "DateTime",
    icon: "FieldDateTime",
    widgets: {
      TextBox: {
        cons: "DateTimeTextBox",
        editCons: "DateTimeEditor",
        icon: "FieldTextbox",
        options: {
          dateFormat: "YYYY-MM-DD",
          timeFormat: "h:mma",
          isCustomDateFormat: false,
          isCustomTimeFormat: false,
          alignment: "left"
        }
      }
    },
    default: "TextBox"
  },
  Choice: {
    label: "Choice",
    icon: "FieldChoice",
    widgets: {
      TextBox: {
        cons: "ChoiceTextBox",
        editCons: "ChoiceEditor",
        icon: "FieldTextbox",
        options: {
          alignment: "left",
          wrap: void 0,
          choices: void 0,
          choiceOptions: void 0
        }
      }
    },
    default: "TextBox"
  },
  ChoiceList: {
    label: "Choice List",
    icon: "FieldChoice",
    widgets: {
      TextBox: {
        cons: "ChoiceListCell",
        editCons: "ChoiceListEditor",
        icon: "FieldTextbox",
        options: {
          alignment: "left",
          wrap: void 0,
          choices: void 0,
          choiceOptions: void 0
        }
      }
    },
    default: "TextBox"
  },
  Ref: {
    label: "Reference",
    icon: "FieldReference",
    widgets: {
      Reference: {
        cons: "Reference",
        editCons: "ReferenceEditor",
        icon: "FieldReference",
        options: {
          alignment: "left",
          wrap: void 0
        }
      }
    },
    default: "Reference"
  },
  RefList: {
    label: "Reference List",
    icon: "FieldReference",
    widgets: {
      Reference: {
        cons: "ReferenceList",
        editCons: "ReferenceListEditor",
        icon: "FieldReference",
        options: {
          alignment: "left",
          wrap: void 0
        }
      }
    },
    default: "Reference"
  },
  Attachments: {
    label: "Attachment",
    icon: "FieldAttachment",
    widgets: {
      Attachments: {
        cons: "AttachmentsWidget",
        editCons: "AttachmentsEditor",
        icon: "FieldAttachment",
        options: {
          height: "36"
        }
      }
    },
    default: "Attachments"
  }
};


/***/ }),

/***/ "./app/client/widgets/UserTypeImpl.ts":
/*!********************************************!*\
  !*** ./app/client/widgets/UserTypeImpl.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getEditorConstructor": () => (/* binding */ getEditorConstructor),
/* harmony export */   "getWidgetConstructor": () => (/* binding */ getWidgetConstructor),
/* harmony export */   "nameToWidget": () => (/* binding */ nameToWidget)
/* harmony export */ });
/* harmony import */ var app_client_widgets_AttachmentsEditor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/client/widgets/AttachmentsEditor */ "./app/client/widgets/AttachmentsEditor.ts");
/* harmony import */ var app_client_widgets_AttachmentsWidget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/client/widgets/AttachmentsWidget */ "./app/client/widgets/AttachmentsWidget.ts");
/* harmony import */ var app_client_widgets_CheckBoxEditor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/client/widgets/CheckBoxEditor */ "./app/client/widgets/CheckBoxEditor.js");
/* harmony import */ var app_client_widgets_CheckBoxEditor__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(app_client_widgets_CheckBoxEditor__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var app_client_widgets_ChoiceEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/client/widgets/ChoiceEditor */ "./app/client/widgets/ChoiceEditor.js");
/* harmony import */ var app_client_widgets_ChoiceEditor__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(app_client_widgets_ChoiceEditor__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var app_client_widgets_ChoiceListCell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/client/widgets/ChoiceListCell */ "./app/client/widgets/ChoiceListCell.ts");
/* harmony import */ var app_client_widgets_ChoiceListEditor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/client/widgets/ChoiceListEditor */ "./app/client/widgets/ChoiceListEditor.ts");
/* harmony import */ var app_client_widgets_ChoiceTextBox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/client/widgets/ChoiceTextBox */ "./app/client/widgets/ChoiceTextBox.ts");
/* harmony import */ var app_client_widgets_DateEditor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/client/widgets/DateEditor */ "./app/client/widgets/DateEditor.js");
/* harmony import */ var app_client_widgets_DateEditor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(app_client_widgets_DateEditor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var app_client_widgets_DateTextBox__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/client/widgets/DateTextBox */ "./app/client/widgets/DateTextBox.js");
/* harmony import */ var app_client_widgets_DateTextBox__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(app_client_widgets_DateTextBox__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var app_client_widgets_DateTimeEditor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/client/widgets/DateTimeEditor */ "./app/client/widgets/DateTimeEditor.js");
/* harmony import */ var app_client_widgets_DateTimeEditor__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(app_client_widgets_DateTimeEditor__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var app_client_widgets_DateTimeTextBox__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/client/widgets/DateTimeTextBox */ "./app/client/widgets/DateTimeTextBox.js");
/* harmony import */ var app_client_widgets_DateTimeTextBox__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(app_client_widgets_DateTimeTextBox__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var app_client_widgets_HyperLinkEditor__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/client/widgets/HyperLinkEditor */ "./app/client/widgets/HyperLinkEditor.ts");
/* harmony import */ var app_client_widgets_HyperLinkTextBox__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/client/widgets/HyperLinkTextBox */ "./app/client/widgets/HyperLinkTextBox.ts");
/* harmony import */ var app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/client/widgets/NTextBox */ "./app/client/widgets/NTextBox.ts");
/* harmony import */ var app_client_widgets_NTextEditor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/client/widgets/NTextEditor */ "./app/client/widgets/NTextEditor.ts");
/* harmony import */ var app_client_widgets_NumericTextBox__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/client/widgets/NumericTextBox */ "./app/client/widgets/NumericTextBox.ts");
/* harmony import */ var app_client_widgets_Reference__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app/client/widgets/Reference */ "./app/client/widgets/Reference.ts");
/* harmony import */ var app_client_widgets_ReferenceEditor__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/client/widgets/ReferenceEditor */ "./app/client/widgets/ReferenceEditor.ts");
/* harmony import */ var app_client_widgets_ReferenceList__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/client/widgets/ReferenceList */ "./app/client/widgets/ReferenceList.ts");
/* harmony import */ var app_client_widgets_ReferenceListEditor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! app/client/widgets/ReferenceListEditor */ "./app/client/widgets/ReferenceListEditor.ts");
/* harmony import */ var app_client_widgets_Spinner__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! app/client/widgets/Spinner */ "./app/client/widgets/Spinner.ts");
/* harmony import */ var app_client_widgets_Toggle__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! app/client/widgets/Toggle */ "./app/client/widgets/Toggle.ts");
/* harmony import */ var app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! app/client/widgets/UserType */ "./app/client/widgets/UserType.ts");























const nameToWidget = {
  "TextBox": app_client_widgets_NTextBox__WEBPACK_IMPORTED_MODULE_13__.NTextBox,
  "TextEditor": app_client_widgets_NTextEditor__WEBPACK_IMPORTED_MODULE_14__.NTextEditor,
  "NumericTextBox": app_client_widgets_NumericTextBox__WEBPACK_IMPORTED_MODULE_15__.NumericTextBox,
  "HyperLinkTextBox": app_client_widgets_HyperLinkTextBox__WEBPACK_IMPORTED_MODULE_12__.HyperLinkTextBox,
  "HyperLinkEditor": app_client_widgets_HyperLinkEditor__WEBPACK_IMPORTED_MODULE_11__.HyperLinkEditor,
  "Spinner": app_client_widgets_Spinner__WEBPACK_IMPORTED_MODULE_20__.Spinner,
  "CheckBox": app_client_widgets_Toggle__WEBPACK_IMPORTED_MODULE_21__.ToggleCheckBox,
  "CheckBoxEditor": (app_client_widgets_CheckBoxEditor__WEBPACK_IMPORTED_MODULE_2___default()),
  "Reference": app_client_widgets_Reference__WEBPACK_IMPORTED_MODULE_16__.Reference,
  "Switch": app_client_widgets_Toggle__WEBPACK_IMPORTED_MODULE_21__.ToggleSwitch,
  "ReferenceEditor": app_client_widgets_ReferenceEditor__WEBPACK_IMPORTED_MODULE_17__.ReferenceEditor,
  "ReferenceList": app_client_widgets_ReferenceList__WEBPACK_IMPORTED_MODULE_18__.ReferenceList,
  "ReferenceListEditor": app_client_widgets_ReferenceListEditor__WEBPACK_IMPORTED_MODULE_19__.ReferenceListEditor,
  "ChoiceTextBox": app_client_widgets_ChoiceTextBox__WEBPACK_IMPORTED_MODULE_6__.ChoiceTextBox,
  "ChoiceEditor": (app_client_widgets_ChoiceEditor__WEBPACK_IMPORTED_MODULE_3___default()),
  "ChoiceListCell": app_client_widgets_ChoiceListCell__WEBPACK_IMPORTED_MODULE_4__.ChoiceListCell,
  "ChoiceListEditor": app_client_widgets_ChoiceListEditor__WEBPACK_IMPORTED_MODULE_5__.ChoiceListEditor,
  "DateTimeTextBox": (app_client_widgets_DateTimeTextBox__WEBPACK_IMPORTED_MODULE_10___default()),
  "DateTextBox": (app_client_widgets_DateTextBox__WEBPACK_IMPORTED_MODULE_8___default()),
  "DateEditor": (app_client_widgets_DateEditor__WEBPACK_IMPORTED_MODULE_7___default()),
  "AttachmentsWidget": app_client_widgets_AttachmentsWidget__WEBPACK_IMPORTED_MODULE_1__.AttachmentsWidget,
  "AttachmentsEditor": app_client_widgets_AttachmentsEditor__WEBPACK_IMPORTED_MODULE_0__.AttachmentsEditor,
  "DateTimeEditor": (app_client_widgets_DateTimeEditor__WEBPACK_IMPORTED_MODULE_9___default())
};
function getWidgetConstructor(widget, type) {
  const { config } = (0,app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_22__.getWidgetConfiguration)(widget, type);
  return nameToWidget[config.cons];
}
function getEditorConstructor(widget, type) {
  const { config } = (0,app_client_widgets_UserType__WEBPACK_IMPORTED_MODULE_22__.getWidgetConfiguration)(widget, type);
  return nameToWidget[config.editCons];
}


/***/ }),

/***/ "./app/common/ActionRouter.ts":
/*!************************************!*\
  !*** ./app/common/ActionRouter.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ActionRouter": () => (/* binding */ ActionRouter)
/* harmony export */ });
class ActionRouter {
  constructor(_rpc) {
    this._rpc = _rpc;
    this._subscribedTables = /* @__PURE__ */ new Set();
  }
  subscribeTable(tableId) {
    this._subscribedTables.add(tableId);
    return Promise.resolve();
  }
  unsubscribeTable(tableId) {
    this._subscribedTables.delete(tableId);
    return Promise.resolve();
  }
  process(action) {
    const tableId = action[1];
    if (!this._subscribedTables.has(tableId)) {
      return Promise.resolve();
    }
    switch (action[0]) {
      case "RemoveTable":
        this._subscribedTables.delete(tableId);
        break;
      case "RenameTable":
        this._subscribedTables.delete(tableId);
        this._subscribedTables.add(action[2]);
        break;
    }
    return this._rpc.postMessage({ type: "docAction", action });
  }
}


/***/ }),

/***/ "./app/common/ActionSummary.ts":
/*!*************************************!*\
  !*** ./app/common/ActionSummary.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "asTabularDiffs": () => (/* binding */ asTabularDiffs),
/* harmony export */   "createEmptyActionSummary": () => (/* binding */ createEmptyActionSummary),
/* harmony export */   "createEmptyTableDelta": () => (/* binding */ createEmptyTableDelta),
/* harmony export */   "defunctTableName": () => (/* binding */ defunctTableName),
/* harmony export */   "getAffectedTables": () => (/* binding */ getAffectedTables),
/* harmony export */   "getTableIdAfter": () => (/* binding */ getTableIdAfter),
/* harmony export */   "getTableIdBefore": () => (/* binding */ getTableIdBefore),
/* harmony export */   "rootTableName": () => (/* binding */ rootTableName)
/* harmony export */ });
const toPairs = __webpack_require__(/*! lodash/toPairs */ "./node_modules/lodash/toPairs.js");
function createEmptyActionSummary() {
  return { tableRenames: [], tableDeltas: {} };
}
function createEmptyTableDelta() {
  return {
    updateRows: [],
    removeRows: [],
    addRows: [],
    columnDeltas: {},
    columnRenames: []
  };
}
function asTabularDiffs(summary) {
  const allChanges = {};
  for (const [tableId, td] of toPairs(summary.tableDeltas)) {
    const tableChanges = allChanges[tableId] = {
      header: [],
      cells: []
    };
    const perRow = {};
    const activeCols = /* @__PURE__ */ new Set();
    for (const [col, perCol] of toPairs(td.columnDeltas)) {
      activeCols.add(col);
      for (const row of Object.keys(perCol)) {
        if (!perRow[row]) {
          perRow[row] = {};
        }
        perRow[row][col] = perCol[row];
      }
    }
    const activeColsWithoutManualSort = [...activeCols].filter((c) => c !== "manualSort");
    tableChanges.header = activeColsWithoutManualSort;
    const addedRows = new Set(td.addRows);
    const removedRows = new Set(td.removeRows);
    const updatedRows = new Set(td.updateRows);
    const rowIds = Object.keys(perRow).map((row) => parseInt(row, 10));
    const presentRows = new Set(rowIds);
    const droppedRows = [...addedRows, ...removedRows, ...updatedRows].filter((x) => !presentRows.has(x)).sort((a, b) => a - b);
    for (const rowId of rowIds) {
      if (droppedRows.length > 0) {
        if (rowId > droppedRows[0]) {
          tableChanges.cells.push([
            "...",
            droppedRows[0],
            activeColsWithoutManualSort.map((x) => [null, null])
          ]);
          while (rowId > droppedRows[0]) {
            droppedRows.shift();
          }
        }
      }
      const versions = [];
      if (addedRows.has(rowId) && removedRows.has(rowId)) {
        versions.push(["-", (diff) => [diff[0], null]]);
        versions.push(["+", (diff) => [null, diff[1]]]);
      } else {
        let code = "...";
        if (updatedRows.has(rowId)) {
          code = "\u2192";
        }
        if (addedRows.has(rowId)) {
          code = "+";
        }
        if (removedRows.has(rowId)) {
          code = "-";
        }
        versions.push([code, (diff) => diff]);
      }
      for (const [code, transform] of versions) {
        const acc = [];
        const perCol = perRow[rowId];
        activeColsWithoutManualSort.forEach((col) => {
          const diff = perCol ? perCol[col] : null;
          if (!diff) {
            acc.push([null, null]);
          } else {
            acc.push(transform(diff));
          }
        });
        tableChanges.cells.push([code, rowId, acc]);
      }
    }
  }
  return allChanges;
}
function defunctTableName(id) {
  return `-${id}`;
}
function rootTableName(id) {
  return id.replace("-", "");
}
function getAffectedTables(summary) {
  return [
    ...summary.tableRenames.map((pair) => pair[1] || defunctTableName(pair[0] || "")),
    ...Object.keys(summary.tableDeltas)
  ];
}
function getTableIdBefore(renames, tableIdAfter) {
  if (tableIdAfter === null) {
    return tableIdAfter;
  }
  const rename = renames.find((_rename) => _rename[1] === tableIdAfter);
  return rename ? rename[0] : tableIdAfter;
}
function getTableIdAfter(renames, tableIdBefore) {
  if (tableIdBefore === null) {
    return tableIdBefore;
  }
  const rename = renames.find((_rename) => _rename[0] === tableIdBefore);
  const tableIdAfter = rename ? rename[1] : tableIdBefore;
  if (tableIdAfter == null ? void 0 : tableIdAfter.startsWith("-")) {
    return null;
  }
  return tableIdAfter;
}


/***/ }),

/***/ "./app/common/AsyncCreate.ts":
/*!***********************************!*\
  !*** ./app/common/AsyncCreate.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AsyncCreate": () => (/* binding */ AsyncCreate),
/* harmony export */   "MapWithTTL": () => (/* binding */ MapWithTTL),
/* harmony export */   "asyncOnce": () => (/* binding */ asyncOnce),
/* harmony export */   "freezeError": () => (/* binding */ freezeError),
/* harmony export */   "mapGetOrSet": () => (/* binding */ mapGetOrSet),
/* harmony export */   "mapSetOrClear": () => (/* binding */ mapSetOrClear)
/* harmony export */ });
class AsyncCreate {
  constructor(_createFunc) {
    this._createFunc = _createFunc;
    this._value = void 0;
  }
  get() {
    return this._value || (this._value = this._clearOnError(this._createFunc.call(null)));
  }
  clear() {
    this._value = void 0;
  }
  isSet() {
    return Boolean(this._value);
  }
  async getIfValid() {
    return this._value ? this._value.catch(() => void 0) : void 0;
  }
  _clearOnError(p) {
    p.catch(() => this.clear());
    return p;
  }
}
function asyncOnce(createFunc) {
  let value;
  function clearOnError(p) {
    p.catch(() => {
      value = void 0;
    });
    return p;
  }
  return () => value || (value = clearOnError(createFunc.call(null)));
}
function mapGetOrSet(map, key, creator) {
  return map.get(key) || mapSetOrClear(map, key, creator(key));
}
function mapSetOrClear(map, key, pvalue) {
  pvalue.catch(() => map.delete(key));
  map.set(key, pvalue);
  return pvalue;
}
class MapWithTTL extends Map {
  constructor(_ttlMs) {
    super();
    this._ttlMs = _ttlMs;
    this._timeouts = /* @__PURE__ */ new Map();
  }
  set(key, value) {
    return this.setWithCustomTTL(key, value, this._ttlMs);
  }
  setWithCustomTTL(key, value, ttlMs) {
    const curr = this._timeouts.get(key);
    if (curr) {
      clearTimeout(curr);
    }
    super.set(key, value);
    this._timeouts.set(key, setTimeout(this.delete.bind(this, key), ttlMs));
    return this;
  }
  delete(key) {
    const result = super.delete(key);
    const timeout = this._timeouts.get(key);
    if (timeout) {
      clearTimeout(timeout);
      this._timeouts.delete(key);
    }
    return result;
  }
  clear() {
    for (const timeout of this._timeouts.values()) {
      clearTimeout(timeout);
    }
    this._timeouts.clear();
    super.clear();
  }
}
async function freezeError(promise) {
  try {
    const value = await promise;
    return { unfreeze: async () => value };
  } catch (error) {
    return { unfreeze: async () => {
      throw error;
    } };
  }
}


/***/ }),

/***/ "./app/common/ColumnFilterFunc.ts":
/*!****************************************!*\
  !*** ./app/common/ColumnFilterFunc.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildColFilter": () => (/* binding */ buildColFilter),
/* harmony export */   "makeFilterFunc": () => (/* binding */ makeFilterFunc)
/* harmony export */ });
/* harmony import */ var app_common_FilterState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/FilterState */ "./app/common/FilterState.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/common/RelativeDates */ "./app/common/RelativeDates.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_5__);






function makeFilterFunc(state, columnType = "") {
  if ((0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_0__.isRangeFilter)(state)) {
    let { min, max } = state;
    if ((0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_3__.isNumberType)(columnType) || (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_3__.isDateLikeType)(columnType)) {
      if ((0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_3__.isDateLikeType)(columnType)) {
        const info = (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_3__.extractInfoFromColType)(columnType);
        const timezone = info.type === "DateTime" && info.timezone || "utc";
        min = changeTimezone(min, timezone, (m) => m.startOf("day"));
        max = changeTimezone(max, timezone, (m) => m.endOf("day"));
      }
      return (val) => {
        if (typeof val !== "number") {
          return false;
        }
        return (max === void 0 ? true : val <= max) && (min === void 0 ? true : min <= val);
      };
    } else {
      return () => true;
    }
  }
  const { include, values } = state;
  return (val) => {
    if ((0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_3__.isList)(val) && columnType && (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_3__.isListType)(columnType)) {
      const list = (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_1__.decodeObject)(val);
      if (list.length) {
        return list.some((item) => values.has(item) === include);
      }
      val = columnType === "ChoiceList" ? "" : null;
    }
    return values.has(Array.isArray(val) ? JSON.stringify(val) : val) === include;
  };
}
function buildColFilter(filterJson, columnType) {
  return filterJson ? makeFilterFunc((0,app_common_FilterState__WEBPACK_IMPORTED_MODULE_0__.makeFilterState)(filterJson), columnType) : null;
}
function changeTimezone(date, timezone, mod = lodash__WEBPACK_IMPORTED_MODULE_5__.noop) {
  if (date === void 0) {
    return void 0;
  }
  const val = (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_4__.isRelativeBound)(date) ? (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_4__.relativeDateToUnixTimestamp)(date) : date;
  const m = moment_timezone__WEBPACK_IMPORTED_MODULE_2___default().tz(val * 1e3, timezone);
  mod(m);
  return Math.floor(m.valueOf() / 1e3);
}


/***/ }),

/***/ "./app/common/CustomWidget.ts":
/*!************************************!*\
  !*** ./app/common/CustomWidget.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AccessLevel": () => (/* binding */ AccessLevel),
/* harmony export */   "isSatisfied": () => (/* binding */ isSatisfied)
/* harmony export */ });
var AccessLevel = /* @__PURE__ */ ((AccessLevel2) => {
  AccessLevel2["none"] = "none";
  AccessLevel2["read_table"] = "read table";
  AccessLevel2["full"] = "full";
  return AccessLevel2;
})(AccessLevel || {});
function isSatisfied(current, minimum) {
  function ordered(level) {
    switch (level) {
      case "none" /* none */:
        return 0;
      case "read table" /* read_table */:
        return 1;
      case "full" /* full */:
        return 2;
      default:
        throw new Error(`Unrecognized access level ${level}`);
    }
  }
  return ordered(current) >= ordered(minimum);
}


/***/ }),

/***/ "./app/common/DisposableWithEvents.ts":
/*!********************************************!*\
  !*** ./app/common/DisposableWithEvents.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DisposableWithEvents": () => (/* binding */ DisposableWithEvents)
/* harmony export */ });
/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! backbone */ "./node_modules/backbone/backbone.js");
/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(backbone__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var grainjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");


class DisposableWithEvents extends grainjs__WEBPACK_IMPORTED_MODULE_1__.Disposable {
  constructor() {
    super();
    this.onDispose(this.stopListening, this);
  }
}
Object.assign(DisposableWithEvents.prototype, backbone__WEBPACK_IMPORTED_MODULE_0__.Events);


/***/ }),

/***/ "./app/common/FilterState.ts":
/*!***********************************!*\
  !*** ./app/common/FilterState.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isEquivalentBound": () => (/* binding */ isEquivalentBound),
/* harmony export */   "isEquivalentFilter": () => (/* binding */ isEquivalentFilter),
/* harmony export */   "isRangeFilter": () => (/* binding */ isRangeFilter),
/* harmony export */   "isRelativeBound": () => (/* reexport safe */ app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.isRelativeBound),
/* harmony export */   "makeFilterState": () => (/* binding */ makeFilterState)
/* harmony export */ });
/* harmony import */ var app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/RelativeDates */ "./app/common/RelativeDates.ts");


function makeFilterState(spec) {
  if (typeof spec === "string") {
    return makeFilterState(spec && JSON.parse(spec) || {});
  }
  if (spec.min !== void 0 || spec.max !== void 0) {
    return { min: spec.min, max: spec.max };
  }
  return {
    include: Boolean(spec.included),
    values: new Set(spec.included || spec.excluded || [])
  };
}
function isEquivalentFilter(state, spec) {
  const other = makeFilterState(spec);
  if (!isRangeFilter(state) && !isRangeFilter(other)) {
    if (state.include !== other.include) {
      return false;
    }
    if (state.values.size !== other.values.size) {
      return false;
    }
    if (other.values) {
      for (const val of other.values) {
        if (!state.values.has(val)) {
          return false;
        }
      }
    }
  } else {
    if (isRangeFilter(state) && isRangeFilter(other)) {
      if (state.min !== other.min || state.max !== other.max) {
        return false;
      }
    } else {
      return false;
    }
  }
  return true;
}
function isRangeFilter(state) {
  const { min, max } = state;
  return min !== void 0 || max !== void 0;
}
function isEquivalentBound(a, b) {
  if ((0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.isRelativeBound)(a) && (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.isRelativeBound)(b)) {
    return (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.isEquivalentRelativeDate)(a, b);
  }
  if ((0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.isRelativeBound)(a) || (0,app_common_RelativeDates__WEBPACK_IMPORTED_MODULE_0__.isRelativeBound)(b)) {
    return false;
  }
  return a === b;
}


/***/ }),

/***/ "./app/common/NumberFormat.ts":
/*!************************************!*\
  !*** ./app/common/NumberFormat.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NumMode": () => (/* binding */ NumMode),
/* harmony export */   "buildNumberFormat": () => (/* binding */ buildNumberFormat),
/* harmony export */   "getCurrency": () => (/* binding */ getCurrency),
/* harmony export */   "parseNumMode": () => (/* binding */ parseNumMode)
/* harmony export */ });
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_StringUnion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/StringUnion */ "./app/common/StringUnion.ts");
/* harmony import */ var locale_currency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! locale-currency */ "./node_modules/locale-currency/index.js");



const NumMode = (0,app_common_StringUnion__WEBPACK_IMPORTED_MODULE_1__.StringUnion)("currency", "decimal", "percent", "scientific");
function getCurrency(options, docSettings) {
  var _a;
  return options.currency || docSettings.currency || locale_currency__WEBPACK_IMPORTED_MODULE_2__.getCurrency((_a = docSettings.locale) != null ? _a : "en-US");
}
function buildNumberFormat(options, docSettings) {
  const currency = getCurrency(options, docSettings);
  const nfOptions = parseNumMode(options.numMode, currency);
  if (options.decimals !== void 0 && options.decimals !== null) {
    nfOptions.minimumFractionDigits = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.clamp)(Number(options.decimals), 0, 20);
  }
  const tmp = new Intl.NumberFormat(docSettings.locale, nfOptions).resolvedOptions();
  if (options.maxDecimals !== void 0 && options.maxDecimals !== null) {
    nfOptions.maximumFractionDigits = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.clamp)(Number(options.maxDecimals), tmp.minimumFractionDigits || 0, 20);
  } else if (!options.numMode) {
    nfOptions.maximumFractionDigits = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.clamp)(10, tmp.minimumFractionDigits || 0, 20);
  }
  return new Intl.NumberFormat(docSettings.locale, nfOptions);
}
const currencyDisplay = function() {
  try {
    new Intl.NumberFormat("en-US", { style: "currency", currency: "USD", currencyDisplay: "narrowSymbol" });
    return "narrowSymbol";
  } catch (err) {
    return "symbol";
  }
}();
function parseNumMode(numMode, currency) {
  switch (numMode) {
    case "currency":
      return { style: "currency", currency, currencyDisplay };
    case "decimal":
      return { useGrouping: true };
    case "percent":
      return { style: "percent" };
    case "scientific":
      return { notation: "scientific" };
    default:
      return { useGrouping: false };
  }
}


/***/ }),

/***/ "./app/common/NumberParse.ts":
/*!***********************************!*\
  !*** ./app/common/NumberParse.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ NumberParse)
/* harmony export */ });
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/NumberFormat */ "./app/common/NumberFormat.ts");


const escapeRegExp = __webpack_require__(/*! lodash/escapeRegExp */ "./node_modules/lodash/escapeRegExp.js");
const last = __webpack_require__(/*! lodash/last */ "./node_modules/lodash/last.js");
function getDigitsMap(locale) {
  const formatter = Intl.NumberFormat(locale);
  const result = /* @__PURE__ */ new Map();
  for (let i = 0; i < 10; i++) {
    const digit = String(i);
    const localeDigit = formatter.format(i);
    if (localeDigit !== digit) {
      result.set(localeDigit, digit);
    }
  }
  return result;
}
const _NumberParse = class {
  static fromSettings(docSettings, options = {}) {
    return new _NumberParse(docSettings.locale, (0,app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_1__.getCurrency)(options, docSettings));
  }
  constructor(locale, currency) {
    var _a;
    const parts = /* @__PURE__ */ new Map();
    for (const numMode of app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_1__.NumMode.values) {
      const formatter = Intl.NumberFormat(locale, (0,app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_1__.parseNumMode)(numMode, currency));
      const formatParts = formatter.formatToParts(-12345675678e-4);
      parts.set(numMode, formatParts);
    }
    function getPart(partType, numMode = "decimal") {
      const part = parts.get(numMode).find((p) => p.type === partType);
      return (part == null ? void 0 : part.value) || "";
    }
    this.currencySymbol = getPart("currency", "currency");
    this.percentageSymbol = getPart("percentSign", "percent");
    this.exponentSeparator = getPart("exponentSeparator", "scientific");
    this.minusSign = getPart("minusSign");
    this.decimalSeparator = getPart("decimal");
    this.digitGroupSeparator = getPart("group");
    this.digitGroupSeparatorCurrency = getPart("group", "currency");
    this.currencyEndsInMinusSign = last(parts.get("currency")).type === "minusSign";
    this.defaultNumDecimalsCurrency = ((_a = getPart("fraction", "currency")) == null ? void 0 : _a.length) || 0;
    this._exponentSeparatorRegex = new RegExp(escapeRegExp(this.exponentSeparator), "i");
    this._digitGroupSeparatorRegex = new RegExp(`[${escapeRegExp(this.digitGroupSeparator + this.digitGroupSeparatorCurrency)}](\\d\\d)`, "g");
    const digitsMap = this.digitsMap = getDigitsMap(locale);
    if (digitsMap.size === 0) {
      this._replaceDigits = (s) => s;
    } else {
      const digitsRegex = new RegExp([...digitsMap.keys()].join("|"), "g");
      this._replaceDigits = (s) => s.replace(digitsRegex, (d) => digitsMap.get(d) || d);
    }
  }
  parse(value) {
    const [value2, isCurrency] = removeSymbol(value, this.currencySymbol);
    const [value3, isPercent] = removeSymbol(value2, this.percentageSymbol);
    value = value3.replace(_NumberParse.removeCharsRegex, "");
    const isParenthesised = value[0] === "(" && value[value.length - 1] === ")";
    if (isParenthesised) {
      value = value.substring(1, value.length - 1);
    }
    if (value === "") {
      return null;
    }
    const withExponent = value;
    value = value.replace(this._exponentSeparatorRegex, "e");
    const isScientific = withExponent !== value;
    value = this._replaceDigits(value);
    const withSeparators = value;
    value = value.replace(this._digitGroupSeparatorRegex, "$1");
    const hasDigitGroupSeparator = withSeparators !== value;
    value = value.replace(this.decimalSeparator, ".");
    value = value.replace(this.minusSign, "-");
    value = value.replace(this.minusSign, "-");
    if (isCurrency && this.currencyEndsInMinusSign && value.endsWith("-")) {
      value = "-" + value.substring(0, value.length - 1);
    }
    let result = Number(value);
    if (isNaN(result)) {
      return null;
    }
    if (isParenthesised) {
      if (result <= 0) {
        return null;
      }
      result = -result;
    }
    if (isPercent) {
      result *= 0.01;
    }
    return {
      result,
      cleaned: value,
      options: { isCurrency, isPercent, isParenthesised, hasDigitGroupSeparator, isScientific }
    };
  }
  guessOptions(values) {
    let parens = null;
    let anyHasDigitGroupSeparator = false;
    let decimals = 0;
    const decimalsRegex = /\.\d+/;
    let maxDecimals = 0;
    const modes = {};
    for (const mode of app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_1__.NumMode.values) {
      modes[mode] = 0;
    }
    for (const value of (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.getDistinctValues)(values)) {
      if (!value) {
        continue;
      }
      const parsed = this.parse(value);
      if (!parsed) {
        continue;
      }
      const {
        result: result2,
        cleaned,
        options: { isCurrency, isPercent, isParenthesised, hasDigitGroupSeparator, isScientific }
      } = parsed;
      if (result2 < 0 && !isParenthesised) {
        parens = false;
      } else if (parens === null && isParenthesised) {
        parens = true;
      }
      anyHasDigitGroupSeparator = anyHasDigitGroupSeparator || hasDigitGroupSeparator;
      let mode = "decimal";
      if (isCurrency) {
        mode = "currency";
      } else if (isPercent) {
        mode = "percent";
      } else if (isScientific) {
        mode = "scientific";
      }
      modes[mode] += 1;
      const decimalsMatch = decimalsRegex.exec(cleaned);
      if (decimalsMatch) {
        const numDecimals = decimalsMatch[0].length - 1;
        maxDecimals = Math.max(maxDecimals, numDecimals);
        if (decimalsMatch[0].endsWith("0")) {
          decimals = Math.max(decimals, numDecimals);
        }
      }
    }
    const maxCount = Math.max(...Object.values(modes));
    if (maxCount === 0) {
      return {};
    }
    const result = {};
    const maxMode = app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_1__.NumMode.values.find((k) => modes[k] === maxCount);
    if (maxMode !== "decimal" || anyHasDigitGroupSeparator) {
      result.numMode = maxMode;
    }
    if (parens) {
      result.numSign = "parens";
    }
    if (decimals > 0 || maxMode === "currency" && maxDecimals < this.defaultNumDecimalsCurrency) {
      result.decimals = decimals;
    }
    return result;
  }
};
let NumberParse = _NumberParse;
NumberParse.removeCharsRegex = /[\s\u200e\u200f\u061c]/g;

function removeSymbol(value, symbol) {
  const removed = value.replace(symbol, "");
  const wasPresent = removed.length < value.length;
  return [removed, wasPresent];
}


/***/ }),

/***/ "./app/common/PluginInstance.ts":
/*!**************************************!*\
  !*** ./app/common/PluginInstance.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseComponent": () => (/* binding */ BaseComponent),
/* harmony export */   "PluginInstance": () => (/* binding */ PluginInstance),
/* harmony export */   "createRpcLogger": () => (/* binding */ createRpcLogger),
/* harmony export */   "warnIfNotReady": () => (/* binding */ warnIfNotReady)
/* harmony export */ });
/* harmony import */ var grain_rpc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grain-rpc */ "./node_modules/grain-rpc/dist/lib/index.js");
/* harmony import */ var grain_rpc__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grain_rpc__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var app_common_InactivityTimer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/InactivityTimer */ "./app/common/InactivityTimer.ts");


class BaseComponent {
  constructor(plugin, _logger) {
    this._logger = _logger;
    this._activated = false;
    const deactivate = plugin.components.deactivate;
    const delay = deactivate && deactivate.inactivitySec ? deactivate.inactivitySec : 300;
    this.inactivityTimer = new app_common_InactivityTimer__WEBPACK_IMPORTED_MODULE_1__.InactivityTimer(() => this.deactivate(), delay * 1e3);
  }
  activated() {
    return this._activated;
  }
  async activate() {
    if (this._logger.info) {
      this._logger.info("Activating plugin component");
    }
    await this.activateImplementation();
    this._activated = true;
    this.inactivityTimer.enable();
  }
  async deactivate() {
    if (this._activated) {
      if (this._logger.info) {
        this._logger.info("Deactivating plugin component");
      }
      this._activated = false;
      this.inactivityTimer.disable();
      try {
        await this.deactivateImplementation();
      } catch (e) {
        if (this._logger.warn) {
          this._logger.warn(`Deactivate failed: ${e.message}`);
        }
      }
    }
  }
  async forwardCall(c) {
    if (!this._activated) {
      await this.activate();
    }
    return await this.inactivityTimer.disableUntilFinish(this.doForwardCall(c));
  }
  async forwardMessage(msg) {
    if (!this._activated) {
      await this.activate();
    }
    this.inactivityTimer.ping();
    this.doForwardMessage(msg);
  }
}
class PluginInstance {
  constructor(definition, rpcLogger) {
    this.definition = definition;
    this._renderTargets = /* @__PURE__ */ new Map();
    this._nextRenderTargetId = 0;
    const rpc = this.rpc = new grain_rpc__WEBPACK_IMPORTED_MODULE_0__.Rpc({ logger: rpcLogger });
    rpc.setSendMessage((mssg) => rpc.receiveMessage(mssg));
    this._renderTargets.set("fullscreen", renderFullScreen);
  }
  getStub(implementation, checker) {
    const components = this.definition.manifest.components;
    const forwardName = components[implementation.component];
    return this.rpc.getStubForward(forwardName, implementation.name, checker);
  }
  async shutdown() {
    await Promise.all([
      this.safeBrowser && this.safeBrowser.deactivate(),
      this.safePython && this.safePython.deactivate(),
      this.unsafeNode && this.unsafeNode.deactivate()
    ]);
  }
  addRenderTarget(renderPluginContent) {
    const id = this._nextRenderTargetId++;
    this._renderTargets.set(id, renderPluginContent);
    return id;
  }
  getRenderTarget(target, options) {
    const targetRenderPluginContent = this._renderTargets.get(target);
    if (!targetRenderPluginContent) {
      throw new Error(`Unknown render target ${target}`);
    }
    return (containerElement, opts) => targetRenderPluginContent(containerElement, opts || options);
  }
  removeRenderTarget(target) {
    return this._renderTargets.delete(target);
  }
}
function renderFullScreen(element) {
  element.classList.add("plugin_instance_fullscreen");
  document.body.appendChild(element);
}
function createRpcLogger(baseLog, prefix) {
  const info = baseLog.debug || baseLog.log;
  const warn = baseLog.warn;
  return {
    warn: warn && ((msg) => warn("%s %s", prefix, msg)),
    info: info && ((msg) => info("%s %s", prefix, msg))
  };
}
function warnIfNotReady(rpc, msec, message) {
  if (!rpc._logger.warn) {
    return;
  }
  const timer = setTimeout(() => rpc._logger.warn(message), msec);
  const origDispatch = rpc._dispatch;
  rpc._dispatch = (msg) => {
    if (msg.mtype === grain_rpc__WEBPACK_IMPORTED_MODULE_0__.MsgType.Ready) {
      clearTimeout(timer);
    }
    origDispatch.call(rpc, msg);
  };
}


/***/ }),

/***/ "./app/common/RelativeDates.ts":
/*!*************************************!*\
  !*** ./app/common/RelativeDates.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CURRENT_DATE": () => (/* binding */ CURRENT_DATE),
/* harmony export */   "diffUnit": () => (/* binding */ diffUnit),
/* harmony export */   "formatRelBounds": () => (/* binding */ formatRelBounds),
/* harmony export */   "isEquivalentRelativeDate": () => (/* binding */ isEquivalentRelativeDate),
/* harmony export */   "isRelativeBound": () => (/* binding */ isRelativeBound),
/* harmony export */   "localTimestampToUTC": () => (/* binding */ localTimestampToUTC),
/* harmony export */   "relativeDateToUnixTimestamp": () => (/* binding */ relativeDateToUnixTimestamp)
/* harmony export */ });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var app_common_getCurrentTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/getCurrentTime */ "./app/common/getCurrentTime.ts");



const CURRENT_DATE = [{ quantity: 0, unit: "day" }];
function isRelativeBound(bound) {
  return !(0,lodash__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(bound) && !(0,lodash__WEBPACK_IMPORTED_MODULE_0__.isNumber)(bound);
}
function relativeDateToUnixTimestamp(bound) {
  const localDate = (0,app_common_getCurrentTime__WEBPACK_IMPORTED_MODULE_2__["default"])().startOf("day");
  const date = moment_timezone__WEBPACK_IMPORTED_MODULE_1___default().utc(localDate.toObject());
  const periods = Array.isArray(bound) ? bound : [bound];
  for (const period of periods) {
    const { quantity, unit, endOf } = period;
    date.add(quantity, unit);
    if (endOf) {
      date.endOf(unit);
      date.startOf("day");
    } else {
      date.startOf(unit);
    }
  }
  return Math.floor(date.valueOf() / 1e3);
}
function formatRelBounds(periods) {
  var _a;
  periods = ((_a = periods[1]) == null ? void 0 : _a.quantity) ? periods : [periods[0]];
  if (periods.length === 1) {
    const { quantity, unit, endOf } = periods[0];
    if (unit === "day") {
      if (quantity === 0) {
        return "Today";
      }
      if (quantity === -1) {
        return "Yesterday";
      }
      if (quantity === 1) {
        return "Tomorrow";
      }
      return formatReference(periods[0]);
    }
    if (endOf) {
      return `Last day of ${formatReference(periods[0])}`;
    } else {
      return `1st day of ${formatReference(periods[0])}`;
    }
  }
  if (periods.length === 2) {
    let dayQuantity = periods[1].quantity;
    if (periods[0].endOf) {
      dayQuantity -= 1;
    }
    let startOrEnd = "";
    if (periods[0].unit === "week") {
      if (periods[1].quantity === 0) {
        startOrEnd = "start ";
      } else if (periods[1].quantity === 6) {
        startOrEnd = "end ";
      }
    }
    return `${formatDay(dayQuantity, periods[0].unit)} ${startOrEnd}of ${formatReference(periods[0])}`;
  }
  throw new Error(`Relative date spec does not support more that 2 periods: ${periods.length}`);
}
function localTimestampToUTC(timestamp, timezone) {
  return moment_timezone__WEBPACK_IMPORTED_MODULE_1___default().unix(timestamp).utc().tz(timezone, true).unix();
}
function formatDay(quantity, refUnit) {
  if (refUnit === "week") {
    const n = (quantity + 7) % 7;
    return ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"][n];
  }
  const ord = (n) => moment_timezone__WEBPACK_IMPORTED_MODULE_1___default().localeData().ordinal(n);
  if (quantity < 0) {
    if (quantity === -1) {
      return "Last day";
    }
    return `${ord(-quantity)} to last day`;
  } else {
    return `${ord(quantity + 1)} day`;
  }
}
function formatReference(period) {
  const { quantity, unit } = period;
  if (quantity === 0) {
    return `this ${unit}`;
  }
  if (quantity === -1) {
    return `last ${unit}`;
  }
  if (quantity === 1) {
    return `next ${unit}`;
  }
  const n = Math.abs(quantity);
  const plurals = n > 1 ? "s" : "";
  return `${n} ${unit}${plurals} ${quantity < 1 ? "ago" : "from now"}`;
}
function isEquivalentRelativeDate(a, b) {
  a = Array.isArray(a) ? a : [a];
  b = Array.isArray(b) ? b : [b];
  if (a.length === 2 && a[1].quantity === 0) {
    a = [a[0]];
  }
  if (b.length === 2 && b[1].quantity === 0) {
    b = [b[0]];
  }
  const compactA = a.map((period) => (0,lodash__WEBPACK_IMPORTED_MODULE_0__.omitBy)(period, lodash__WEBPACK_IMPORTED_MODULE_0__.isUndefined));
  const compactB = b.map((period) => (0,lodash__WEBPACK_IMPORTED_MODULE_0__.omitBy)(period, lodash__WEBPACK_IMPORTED_MODULE_0__.isUndefined));
  return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.isEqual)(compactA, compactB);
}
function diffUnit(a, b, unit) {
  return a.clone().startOf(unit).diff(b.clone().startOf(unit), unit);
}


/***/ }),

/***/ "./app/common/RowFilterFunc.ts":
/*!*************************************!*\
  !*** ./app/common/RowFilterFunc.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildRowFilter": () => (/* binding */ buildRowFilter),
/* harmony export */   "getLinkingFilterFunc": () => (/* binding */ getLinkingFilterFunc)
/* harmony export */ });
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");


function buildRowFilter(getter, filterFunc) {
  if (!getter || !filterFunc) {
    return () => true;
  }
  return (rowId) => filterFunc(getter(rowId));
}
function getLinkingFilterFunc(columnGetters, { filters, operations }) {
  const colFuncs = Object.keys(filters).sort().map((colId) => {
    const getter = columnGetters.getColGetterByColId(colId);
    if (!getter) {
      return () => true;
    }
    const values = new Set(filters[colId]);
    switch (operations[colId]) {
      case "intersects":
        return (rowId) => {
          const value = getter(rowId);
          return (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.isList)(value) && (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_1__.decodeObject)(value).some((v) => values.has(v));
        };
      case "empty":
        return (rowId) => {
          const value = getter(rowId);
          return !value || (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_0__.isList)(value) && value.length === 1;
        };
      case "in":
        return (rowId) => values.has(getter(rowId));
    }
  });
  return (rowId) => colFuncs.every((f) => f(rowId));
}


/***/ }),

/***/ "./app/common/SortFunc.ts":
/*!********************************!*\
  !*** ./app/common/SortFunc.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SortFunc": () => (/* binding */ SortFunc),
/* harmony export */   "choiceGetter": () => (/* binding */ choiceGetter),
/* harmony export */   "emptyCompare": () => (/* binding */ emptyCompare),
/* harmony export */   "typedCompare": () => (/* binding */ typedCompare)
/* harmony export */ });
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_SortSpec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/SortSpec */ "./app/common/SortSpec.ts");


function choiceGetter(getter, choices) {
  return (rowId) => {
    const value = getter(rowId);
    const index = choices.indexOf(value);
    return index >= 0 ? String(index).padStart(5, "0") : value;
  };
}
const collator = new Intl.Collator(void 0, { numeric: true });
function naturalCompare(val1, val2) {
  if (typeof val1 === "string" && typeof val2 === "string") {
    return collator.compare(val1, val2);
  }
  return typedCompare(val1, val2);
}
const emptyCompare = (next) => (val1, val2) => {
  const isEmptyValue1 = !val1 && typeof val1 !== "number";
  const isEmptyValue2 = !val2 && typeof val2 !== "number";
  if (isEmptyValue1 && !isEmptyValue2) {
    return 1;
  }
  if (isEmptyValue2 && !isEmptyValue1) {
    return -1;
  }
  return next(val1, val2);
};
function typedCompare(val1, val2) {
  let result, type1, array1;
  if ((result = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.nativeCompare)(type1 = typeof val1, typeof val2)) !== 0) {
    return result;
  }
  if (type1 === "object") {
    if ((result = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.nativeCompare)(array1 = val1 instanceof Array, val2 instanceof Array)) !== 0) {
      return result;
    }
    if (array1) {
      return _arrayCompare(val1, val2);
    }
  }
  if (type1 === "string") {
    return (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.localeCompare)(val1, val2);
  }
  return (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.nativeCompare)(val1, val2);
}
function _arrayCompare(val1, val2) {
  for (let i = 0; i < val1.length; i++) {
    if (i >= val2.length) {
      return 1;
    }
    const value = typedCompare(val1[i], val2[i]);
    if (value) {
      return value;
    }
  }
  return val1.length === val2.length ? 0 : -1;
}
class SortFunc {
  constructor(_getters) {
    this._getters = _getters;
    this._colGetters = [];
    this._directions = [];
    this._comparators = [];
  }
  updateSpec(sortSpec) {
    this._colGetters = sortSpec.map((colSpec) => {
      return this._getters.getColGetter(colSpec);
    }).filter((getter) => getter);
    this._directions = sortSpec.map((colSpec) => app_common_SortSpec__WEBPACK_IMPORTED_MODULE_1__.Sort.direction(colSpec));
    this._comparators = sortSpec.map((colSpec) => {
      const details = app_common_SortSpec__WEBPACK_IMPORTED_MODULE_1__.Sort.specToDetails(colSpec);
      let comparator = typedCompare;
      if (details.naturalSort) {
        comparator = naturalCompare;
      }
      if (details.emptyLast) {
        comparator = emptyCompare(comparator);
      }
      return comparator;
    });
    const manualSortGetter = this._getters.getManualSortGetter();
    if (manualSortGetter) {
      this._colGetters.push(manualSortGetter);
      this._directions.push(1);
      this._comparators.push(typedCompare);
    }
  }
  compare(rowId1, rowId2) {
    for (let i = 0, len = this._colGetters.length; i < len; i++) {
      const getter = this._colGetters[i];
      const val1 = getter(rowId1);
      const val2 = getter(rowId2);
      const comparator = this._comparators[i];
      const result = comparator(val1, val2);
      if (result !== 0) {
        return result * this._directions[i];
      }
    }
    return (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.nativeCompare)(rowId1, rowId2);
  }
}


/***/ }),

/***/ "./app/common/SortSpec.ts":
/*!********************************!*\
  !*** ./app/common/SortSpec.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Sort": () => (/* binding */ Sort)
/* harmony export */ });
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var Sort;
((Sort2) => {
  Sort2.ASC = 1;
  Sort2.DESC = -1;
  const NOT_FOUND = -1;
  const FLAG_SEPARATOR = ";";
  const OPTION_SEPARATOR = ":";
  function hasOptions(colSpec) {
    if (typeof colSpec === "number") {
      return false;
    }
    const details = typeof colSpec !== "object" ? specToDetails(colSpec) : colSpec;
    return Boolean(details.emptyLast || details.naturalSort || details.orderByChoice);
  }
  Sort2.hasOptions = hasOptions;
  function detailsToSpec(d) {
    const head = `${d.direction === Sort2.ASC ? "" : "-"}${d.colRef}`;
    const tail = [];
    if (d.emptyLast) {
      tail.push("emptyLast");
    }
    if (d.naturalSort) {
      tail.push("naturalSort");
    }
    if (d.orderByChoice) {
      tail.push("orderByChoice");
    }
    if (!tail.length) {
      return +head;
    }
    return head + (tail.length ? OPTION_SEPARATOR : "") + tail.join(FLAG_SEPARATOR);
  }
  Sort2.detailsToSpec = detailsToSpec;
  function specToDetails(colSpec) {
    return typeof colSpec === "number" ? {
      colRef: Math.abs(colSpec),
      direction: colSpec >= 0 ? Sort2.ASC : Sort2.DESC
    } : parseColSpec(colSpec);
  }
  Sort2.specToDetails = specToDetails;
  function parseColSpec(colString) {
    const REGEX = /^(-)?(\d+)(:([\w\d;]+))?$/;
    const match = colString.match(REGEX);
    if (!match) {
      throw new Error("Error parsing sort expression " + colString);
    }
    const [, sign, colRef, , flag] = match;
    const flags = flag == null ? void 0 : flag.split(";");
    return {
      colRef: +colRef,
      direction: sign === "-" ? Sort2.DESC : Sort2.ASC,
      orderByChoice: flags == null ? void 0 : flags.includes("orderByChoice"),
      emptyLast: flags == null ? void 0 : flags.includes("emptyLast"),
      naturalSort: flags == null ? void 0 : flags.includes("naturalSort")
    };
  }
  function getColRef(colSpec) {
    if (typeof colSpec === "number") {
      return Math.abs(colSpec);
    }
    return parseColSpec(colSpec).colRef;
  }
  Sort2.getColRef = getColRef;
  function swap(spec, colA, colB) {
    const aIndex = findColIndex(spec, colA);
    const bIndex = findColIndex(spec, colB);
    if (aIndex === NOT_FOUND || bIndex === NOT_FOUND) {
      throw new Error(`Column expressions can be found (${colA} or ${colB})`);
    }
    const clone = spec.slice();
    clone[aIndex] = spec[bIndex];
    clone[bIndex] = spec[aIndex];
    return clone;
  }
  Sort2.swap = swap;
  function setColDirection(colSpec, dir) {
    if (typeof colSpec === "number") {
      return Math.abs(colSpec) * dir;
    }
    return detailsToSpec(__spreadProps(__spreadValues({}, parseColSpec(colSpec)), { direction: dir }));
  }
  Sort2.setColDirection = setColDirection;
  function createColSpec(colRef, dir) {
    return colRef * dir;
  }
  Sort2.createColSpec = createColSpec;
  function contains(spec, colSpec, dir) {
    const existing = findCol(spec, colSpec);
    return !!existing && getColRef(existing) === getColRef(colSpec) && direction(existing) === dir;
  }
  Sort2.contains = contains;
  function containsOnly(spec, colSpec, dir) {
    return spec.length === 1 && contains(spec, colSpec, dir);
  }
  Sort2.containsOnly = containsOnly;
  function isAscending(colSpec) {
    if (typeof colSpec === "number") {
      return colSpec >= 0;
    }
    return parseColSpec(colSpec).direction === Sort2.ASC;
  }
  Sort2.isAscending = isAscending;
  function direction(colSpec) {
    return isAscending(colSpec) ? Sort2.ASC : Sort2.DESC;
  }
  Sort2.direction = direction;
  function sameColumn(colSpec, colRef) {
    return getColRef(colSpec) === getColRef(colRef);
  }
  Sort2.sameColumn = sameColumn;
  function swapColRef(colSpec, colRef) {
    if (typeof colSpec === "number") {
      return colSpec >= 0 ? colRef : -colRef;
    }
    const spec = parseColSpec(colSpec);
    return detailsToSpec(__spreadProps(__spreadValues({}, spec), { colRef }));
  }
  Sort2.swapColRef = swapColRef;
  function findColIndex(sortSpec, colRef) {
    return sortSpec.findIndex((colSpec) => sameColumn(colSpec, colRef));
  }
  Sort2.findColIndex = findColIndex;
  function removeCol(sortSpec, colRef) {
    return sortSpec.filter((col) => getColRef(col) !== getColRef(colRef));
  }
  Sort2.removeCol = removeCol;
  function findCol(sortSpec, colRef) {
    const result = sortSpec.find((colSpec) => sameColumn(colSpec, colRef));
    return result;
  }
  Sort2.findCol = findCol;
  function replace(sortSpec, colRef, newSpec) {
    const index = findColIndex(sortSpec, colRef);
    if (index >= 0) {
      const updated = sortSpec.slice();
      updated[index] = typeof newSpec === "object" ? detailsToSpec(newSpec) : newSpec;
      return updated;
    }
    return sortSpec;
  }
  Sort2.replace = replace;
  function flipCol(colSpec) {
    if (typeof colSpec === "number") {
      return -colSpec;
    }
    const spec = parseColSpec(colSpec);
    return detailsToSpec(__spreadProps(__spreadValues({}, spec), { direction: spec.direction === Sort2.ASC ? Sort2.DESC : Sort2.ASC }));
  }
  Sort2.flipCol = flipCol;
  function flipSort(spec, colSpec) {
    const idx = findColIndex(spec, getColRef(colSpec));
    if (idx !== NOT_FOUND) {
      const newSpec = Array.from(spec);
      newSpec[idx] = flipCol(newSpec[idx]);
      return newSpec;
    }
    return spec;
  }
  Sort2.flipSort = flipSort;
  function setSortDirection(spec, colSpec, dir) {
    const idx = findColIndex(spec, getColRef(colSpec));
    if (idx !== NOT_FOUND) {
      const newSpec = Array.from(spec);
      newSpec[idx] = setColDirection(newSpec[idx], dir);
      return newSpec;
    }
    return spec;
  }
  Sort2.setSortDirection = setSortDirection;
  function parseSortColRefs(sortColRefs) {
    try {
      return JSON.parse(sortColRefs);
    } catch (err) {
      return [];
    }
  }
  Sort2.parseSortColRefs = parseSortColRefs;
  function reorderSortRefs(spec, colSpec, nextColSpec) {
    const updatedSpec = spec.slice();
    const _idx = findColIndex(updatedSpec, colSpec);
    if (_idx === NOT_FOUND) {
      return spec;
    }
    updatedSpec.splice(_idx, 1);
    const _nextIdx = nextColSpec ? findColIndex(updatedSpec, nextColSpec) : updatedSpec.length;
    if (_nextIdx === NOT_FOUND) {
      return spec;
    }
    updatedSpec.splice(_nextIdx, 0, colSpec);
    return updatedSpec;
  }
  Sort2.reorderSortRefs = reorderSortRefs;
  function parseNames(sort, colIdToRef) {
    const COL_SPEC_REG = /^(-)?([\w]+)(:.+)?/;
    return sort.map((colSpec) => {
      const match = colSpec.match(COL_SPEC_REG);
      if (!match) {
        throw new Error(`unknown key ${colSpec}`);
      }
      const [, sign, key, options] = match;
      let colRef = Number(key);
      if (!isNaN(colRef)) {
        if (![...colIdToRef.values()].includes(colRef)) {
          throw new Error(`invalid column id ${key}`);
        }
      } else if (!colIdToRef.has(key)) {
        throw new Error(`unknown key ${key}`);
      } else {
        colRef = colIdToRef.get(key);
      }
      return `${sign || ""}${colRef}${options != null ? options : ""}`;
    });
  }
  Sort2.parseNames = parseNames;
})(Sort || (Sort = {}));


/***/ }),

/***/ "./app/common/ValueFormatter.ts":
/*!**************************************!*\
  !*** ./app/common/ValueFormatter.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseFormatter": () => (/* binding */ BaseFormatter),
/* harmony export */   "BoolFormatter": () => (/* binding */ BoolFormatter),
/* harmony export */   "NumericFormatter": () => (/* binding */ NumericFormatter),
/* harmony export */   "PENDING_DATA_PLACEHOLDER": () => (/* reexport safe */ app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_7__.PENDING_DATA_PLACEHOLDER),
/* harmony export */   "createFormatter": () => (/* binding */ createFormatter),
/* harmony export */   "createFullFormatterFromDocData": () => (/* binding */ createFullFormatterFromDocData),
/* harmony export */   "createFullFormatterRaw": () => (/* binding */ createFullFormatterRaw),
/* harmony export */   "createVisibleColFormatterRaw": () => (/* binding */ createVisibleColFormatterRaw),
/* harmony export */   "formatDecoded": () => (/* binding */ formatDecoded),
/* harmony export */   "formatUnknown": () => (/* binding */ formatUnknown)
/* harmony export */ });
/* harmony import */ var app_common_csvFormat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/csvFormat */ "./app/common/csvFormat.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_isHiddenTable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/isHiddenTable */ "./app/common/isHiddenTable.ts");
/* harmony import */ var app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/common/NumberFormat */ "./app/common/NumberFormat.ts");
/* harmony import */ var app_common_ValueParser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/common/ValueParser */ "./app/common/ValueParser.ts");
/* harmony import */ var app_plugin_GristData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/plugin/GristData */ "./app/plugin/GristData.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_8__);
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));










const isPlainObject = __webpack_require__(/*! lodash/isPlainObject */ "./node_modules/lodash/isPlainObject.js");

function formatUnknown(value) {
  return formatDecoded((0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_7__.decodeObject)(value));
}
function hasNestedObjects(value) {
  return value.some((v) => typeof v === "object" && v && (Array.isArray(v) || isPlainObject(v)));
}
function formatDecoded(value, isTopLevel = true) {
  if (typeof value === "object" && value) {
    if (Array.isArray(value)) {
      if (!isTopLevel || hasNestedObjects(value)) {
        return "[" + value.map((v) => formatDecoded(v, false)).join(", ") + "]";
      } else {
        return (0,app_common_csvFormat__WEBPACK_IMPORTED_MODULE_0__.csvEncodeRow)(value.map((v) => formatDecoded(v, true)), { prettier: true });
      }
    } else if (isPlainObject(value)) {
      const obj = value;
      const items = Object.keys(obj).map((k) => `${JSON.stringify(k)}: ${formatDecoded(obj[k], false)}`);
      return "{" + items.join(", ") + "}";
    } else if (isTopLevel && value instanceof app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_7__.GristDateTime) {
      return moment_timezone__WEBPACK_IMPORTED_MODULE_8___default()(value).tz(value.timezone).format("YYYY-MM-DD HH:mm:ssZ");
    }
    return String(value);
  }
  if (isTopLevel) {
    return value == null ? "" : String(value);
  }
  return JSON.stringify(value);
}
class BaseFormatter {
  constructor(type, widgetOpts, docSettings) {
    this.type = type;
    this.widgetOpts = widgetOpts;
    this.docSettings = docSettings;
    this.isRightType = app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.isRightType(app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.extractTypeFromColType(type)) || app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.isRightType("Any");
  }
  formatAny(value, translate) {
    return this.isRightType(value) ? this.format(value, translate) : formatUnknown(value);
  }
  format(value, _translate) {
    return String(value);
  }
}
class BoolFormatter extends BaseFormatter {
  format(value, translate) {
    if (typeof value === "boolean" && translate) {
      return translate(String(value));
    }
    return super.format(value, translate);
  }
}
class AnyFormatter extends BaseFormatter {
  format(value) {
    return formatUnknown(value);
  }
}
class NumericFormatter extends BaseFormatter {
  constructor(type, options, docSettings) {
    super(type, options, docSettings);
    this._numFormat = (0,app_common_NumberFormat__WEBPACK_IMPORTED_MODULE_4__.buildNumberFormat)(options, docSettings);
    this._formatter = options.numSign === "parens" ? this._formatParens : this._formatPlain;
  }
  format(value) {
    return value === null ? "" : this._formatter(value);
  }
  _formatPlain(value) {
    return this._numFormat.format(value);
  }
  _formatParens(value) {
    return value >= 0 ? ` ${this._numFormat.format(value)} ` : `(${this._numFormat.format(-value)})`;
  }
}
class IntFormatter extends NumericFormatter {
  constructor(type, opts, docSettings) {
    super(type, __spreadValues({ decimals: 0 }, opts), docSettings);
  }
}
class DateFormatter extends BaseFormatter {
  constructor(type, widgetOpts, docSettings, timezone = "UTC") {
    super(type, widgetOpts, docSettings);
    this.isRightType = (value) => value === null || typeof value === "number" || Array.isArray(value) && (value[0] === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_6__.GristObjCode.Date || value[0] === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_6__.GristObjCode.DateTime);
    this._dateTimeFormat = widgetOpts.dateFormat || "YYYY-MM-DD";
    this._timezone = timezone;
  }
  format(value) {
    if (value === null) {
      return "";
    }
    let timezone = this._timezone;
    if (Array.isArray(value)) {
      timezone = value[2] || timezone;
      value = value[1];
    }
    const time = moment_timezone__WEBPACK_IMPORTED_MODULE_8___default().tz(value * 1e3, timezone);
    return time.format(this._dateTimeFormat);
  }
}
class DateTimeFormatter extends DateFormatter {
  constructor(type, widgetOpts, docSettings) {
    const timezone = app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.removePrefix(type, "DateTime:") || "";
    super(type, widgetOpts, docSettings, timezone);
    const timeFormat = widgetOpts.timeFormat === void 0 ? "h:mma" : widgetOpts.timeFormat;
    this._dateTimeFormat = (widgetOpts.dateFormat || "YYYY-MM-DD") + " " + timeFormat;
  }
}
class RowIdFormatter extends BaseFormatter {
  format(value) {
    return value > 0 ? `${this.widgetOpts.tableId}[${value}]` : "";
  }
}
class ReferenceFormatter extends BaseFormatter {
  constructor(type, widgetOpts, docSettings) {
    super(type, widgetOpts, docSettings);
    this.visibleColFormatter = widgetOpts.visibleColFormatter || createFormatter("Id", { tableId: (0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.getReferencedTableId)(type) }, docSettings);
  }
  formatAny(value) {
    var _a, _b;
    if (Array.isArray(value) && value[0] === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_6__.GristObjCode.Exception && value[1] === "InvalidTypedValue" && ((_b = (_a = value[2]) == null ? void 0 : _a.startsWith) == null ? void 0 : _b.call(_a, "Ref"))) {
      return value[3];
    }
    return this.formatNotInvalidRef(value);
  }
  formatNotInvalidRef(value) {
    return this.visibleColFormatter.formatAny(value);
  }
}
class ReferenceListFormatter extends ReferenceFormatter {
  formatNotInvalidRef(value) {
    if (!(0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.isList)(value) || hasNestedObjects((0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_7__.decodeObject)(value))) {
      return formatUnknown(value);
    }
    const formattedValues = value.slice(1).map((v) => super.formatNotInvalidRef(v));
    return (0,app_common_csvFormat__WEBPACK_IMPORTED_MODULE_0__.csvEncodeRow)(formattedValues, { prettier: true });
  }
}
const formatters = {
  Numeric: NumericFormatter,
  Int: IntFormatter,
  Bool: BoolFormatter,
  Date: DateFormatter,
  DateTime: DateTimeFormatter,
  Ref: ReferenceFormatter,
  RefList: ReferenceListFormatter,
  Id: RowIdFormatter
};
function createFormatter(type, widgetOpts, docSettings) {
  const ctor = formatters[app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.extractTypeFromColType(type)] || AnyFormatter;
  return new ctor(type, widgetOpts, docSettings);
}
function createFullFormatterFromDocData(docData, colRef, fieldRef) {
  const [type, widgetOpts, docSettings] = (0,app_common_ValueParser__WEBPACK_IMPORTED_MODULE_5__.createParserOrFormatterArguments)(docData, colRef, fieldRef);
  const { visibleColType, visibleColWidgetOpts } = widgetOpts;
  return createFullFormatterRaw({
    docData,
    type,
    widgetOpts,
    visibleColType,
    visibleColWidgetOpts,
    docSettings
  });
}
function createFullFormatterRaw(args) {
  const { type, widgetOpts, docSettings } = args;
  const visibleColFormatter = createVisibleColFormatterRaw(args);
  return createFormatter(type, __spreadProps(__spreadValues({}, widgetOpts), { visibleColFormatter }), docSettings);
}
function createVisibleColFormatterRaw({
  docData,
  docSettings,
  type,
  visibleColType,
  visibleColWidgetOpts,
  widgetOpts
}) {
  let referencedTableId = app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.getReferencedTableId(type);
  if (!referencedTableId) {
    return createFormatter(type, widgetOpts, docSettings);
  } else if (visibleColType) {
    return createFormatter(visibleColType, visibleColWidgetOpts, docSettings);
  } else {
    const tablesData = docData.getMetaTable("_grist_Tables");
    const tableRef = tablesData.findRow("tableId", referencedTableId);
    if ((0,app_common_isHiddenTable__WEBPACK_IMPORTED_MODULE_3__.isHiddenTable)(tablesData, tableRef)) {
      referencedTableId = "";
    }
    return createFormatter("Id", { tableId: referencedTableId }, docSettings);
  }
}


/***/ }),

/***/ "./app/common/ValueParser.ts":
/*!***********************************!*\
  !*** ./app/common/ValueParser.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NumericParser": () => (/* binding */ NumericParser),
/* harmony export */   "ReferenceListParser": () => (/* binding */ ReferenceListParser),
/* harmony export */   "ReferenceParser": () => (/* binding */ ReferenceParser),
/* harmony export */   "ValueParser": () => (/* binding */ ValueParser),
/* harmony export */   "createParser": () => (/* binding */ createParser),
/* harmony export */   "createParserOrFormatterArguments": () => (/* binding */ createParserOrFormatterArguments),
/* harmony export */   "createParserOrFormatterArgumentsRaw": () => (/* binding */ createParserOrFormatterArgumentsRaw),
/* harmony export */   "createParserRaw": () => (/* binding */ createParserRaw),
/* harmony export */   "parseUserAction": () => (/* binding */ parseUserAction),
/* harmony export */   "valueParserClasses": () => (/* binding */ valueParserClasses)
/* harmony export */ });
/* harmony import */ var app_common_csvFormat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/csvFormat */ "./app/common/csvFormat.ts");
/* harmony import */ var app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var app_common_NumberParse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/common/NumberParse */ "./app/common/NumberParse.ts");
/* harmony import */ var app_common_parseDate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/common/parseDate */ "./app/common/parseDate.ts");
/* harmony import */ var app_common_ValueFormatter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/common/ValueFormatter */ "./app/common/ValueFormatter.ts");
/* harmony import */ var app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/plugin/objtypes */ "./app/plugin/objtypes.ts");
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));









const flatMap = __webpack_require__(/*! lodash/flatMap */ "./node_modules/lodash/flatMap.js");
const mapValues = __webpack_require__(/*! lodash/mapValues */ "./node_modules/lodash/mapValues.js");
class ValueParser {
  constructor(type, widgetOpts, docSettings) {
    this.type = type;
    this.widgetOpts = widgetOpts;
    this.docSettings = docSettings;
  }
  cleanParse(value) {
    var _a;
    if (!value) {
      return value;
    }
    return (_a = this.parse(value)) != null ? _a : value;
  }
  parse(value) {
    return value;
  }
}
class IdentityParser extends ValueParser {
}
class NumericParser extends ValueParser {
  constructor(type, options, docSettings) {
    super(type, options, docSettings);
    this._parse = app_common_NumberParse__WEBPACK_IMPORTED_MODULE_3__["default"].fromSettings(docSettings, options);
  }
  parse(value) {
    var _a, _b;
    return (_b = (_a = this._parse.parse(value)) == null ? void 0 : _a.result) != null ? _b : null;
  }
}
class DateParser extends ValueParser {
  parse(value) {
    return (0,app_common_parseDate__WEBPACK_IMPORTED_MODULE_4__.parseDateStrict)(value, this.widgetOpts.dateFormat);
  }
}
class DateTimeParser extends ValueParser {
  constructor(type, widgetOpts, docSettings) {
    super(type, widgetOpts, docSettings);
    const timezone = app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.removePrefix(type, "DateTime:") || "";
    this.widgetOpts = __spreadProps(__spreadValues({}, widgetOpts), { timezone });
  }
  parse(value) {
    return (0,app_common_parseDate__WEBPACK_IMPORTED_MODULE_4__.parseDateTime)(value, this.widgetOpts);
  }
}
class ChoiceListParser extends ValueParser {
  cleanParse(value) {
    value = value.trim();
    const result = (this._parseJson(value) || this._parseCsv(value)).map((v) => v.trim()).filter((v) => v);
    if (!result.length) {
      return null;
    }
    return ["L", ...result];
  }
  _parseJson(value) {
    if (value[0] === "[") {
      const arr = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(value, null);
      return arr == null ? void 0 : arr.filter((v) => v || v === 0).map((v) => (0,app_common_ValueFormatter__WEBPACK_IMPORTED_MODULE_5__.formatDecoded)(v));
    }
  }
  _parseCsv(value) {
    return flatMap(value.split(/[\n\r]+/), (row) => {
      return (0,app_common_csvFormat__WEBPACK_IMPORTED_MODULE_0__.csvDecodeRow)(row).map((v) => v.trim());
    });
  }
}
class ReferenceParser extends ValueParser {
  constructor() {
    super(...arguments);
    this.tableData = this.widgetOpts.tableData;
    this.visibleColParser = createParserRaw(this.widgetOpts.visibleColType, this.widgetOpts.visibleColWidgetOpts, this.docSettings);
    this._visibleColId = this.widgetOpts.visibleColId;
  }
  parse(raw) {
    const value = this.visibleColParser.cleanParse(raw);
    return this.lookup(value, raw);
  }
  lookup(value, raw) {
    var _a;
    if (value == null || value === "" || !raw) {
      return 0;
    }
    if (this._visibleColId === "id") {
      const n = Number(value);
      if (Number.isInteger(n)) {
        value = n;
      } else {
        return raw;
      }
    }
    if (!((_a = this.tableData) == null ? void 0 : _a.isLoaded)) {
      const options = { column: this._visibleColId };
      if (value !== raw) {
        options.raw = raw;
      }
      return ["l", value, options];
    }
    return this.tableData.findMatchingRowId({ [this._visibleColId]: value }) || raw;
  }
}
class ReferenceListParser extends ReferenceParser {
  parse(raw) {
    var _a;
    let values;
    try {
      values = JSON.parse(raw);
    } catch (e) {
      values = null;
    }
    if (!Array.isArray(values)) {
      values = (0,app_common_csvFormat__WEBPACK_IMPORTED_MODULE_0__.csvDecodeRow)(raw);
    }
    values = values.map((v) => typeof v === "string" ? this.visibleColParser.cleanParse(v) : (0,app_plugin_objtypes__WEBPACK_IMPORTED_MODULE_6__.encodeObject)(v));
    if (!values.length || !raw) {
      return null;
    }
    if (this._visibleColId === "id") {
      const numbers = values.map(Number);
      if (numbers.every(Number.isInteger)) {
        values = numbers;
      } else {
        return raw;
      }
    }
    if (!((_a = this.tableData) == null ? void 0 : _a.isLoaded)) {
      const options = { column: this._visibleColId };
      if (!(values.length === 1 && values[0] === raw)) {
        options.raw = raw;
      }
      return ["l", values, options];
    }
    const rowIds = [];
    for (const value of values) {
      const rowId = this.tableData.findMatchingRowId({ [this._visibleColId]: value });
      if (rowId) {
        rowIds.push(rowId);
      } else {
        return raw;
      }
    }
    return ["L", ...rowIds];
  }
}
const valueParserClasses = {
  Numeric: NumericParser,
  Int: NumericParser,
  Date: DateParser,
  DateTime: DateTimeParser,
  ChoiceList: ChoiceListParser,
  Ref: ReferenceParser,
  RefList: ReferenceListParser,
  Attachments: ReferenceListParser
};
function createParserRaw(type, widgetOpts, docSettings) {
  const cls = valueParserClasses[app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.extractTypeFromColType(type)] || IdentityParser;
  return new cls(type, widgetOpts, docSettings);
}
function createParser(docData, colRef, fieldRef) {
  return createParserRaw(...createParserOrFormatterArguments(docData, colRef, fieldRef));
}
function createParserOrFormatterArguments(docData, colRef, fieldRef) {
  const columnsTable = docData.getMetaTable("_grist_Tables_column");
  const fieldsTable = docData.getMetaTable("_grist_Views_section_field");
  const col = columnsTable.getRecord(colRef);
  let fieldOrCol = col;
  if (fieldRef) {
    const field = fieldsTable.getRecord(fieldRef);
    fieldOrCol = (field == null ? void 0 : field.widgetOptions) ? field : col;
  }
  return createParserOrFormatterArgumentsRaw(docData, col.type, fieldOrCol.widgetOptions, fieldOrCol.visibleCol);
}
function createParserOrFormatterArgumentsRaw(docData, type, widgetOptions, visibleColRef) {
  const columnsTable = docData.getMetaTable("_grist_Tables_column");
  const widgetOpts = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(widgetOptions, {});
  if ((0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.isFullReferencingType)(type)) {
    const vcol = columnsTable.getRecord(visibleColRef);
    widgetOpts.visibleColId = (vcol == null ? void 0 : vcol.colId) || "id";
    widgetOpts.visibleColType = vcol == null ? void 0 : vcol.type;
    widgetOpts.visibleColWidgetOpts = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)((vcol == null ? void 0 : vcol.widgetOptions) || "", {});
    widgetOpts.tableData = docData.getTable((0,app_common_gristTypes__WEBPACK_IMPORTED_MODULE_1__.getReferencedTableId)(type));
  }
  return [type, widgetOpts, docData.docSettings()];
}
function parseColValues(tableId, colValues, docData, bulk) {
  const columnsTable = docData.getMetaTable("_grist_Tables_column");
  const tablesTable = docData.getMetaTable("_grist_Tables");
  const tableRef = tablesTable.findRow("tableId", tableId);
  if (!tableRef) {
    return colValues;
  }
  return mapValues(colValues, (values, colId) => {
    const colRef = columnsTable.findMatchingRowId({ colId, parentId: tableRef });
    if (!colRef) {
      return values;
    }
    const parser = createParser(docData, colRef);
    if (parser instanceof IdentityParser) {
      return values;
    }
    function parseIfString(val) {
      return typeof val === "string" ? parser.cleanParse(val) : val;
    }
    if (bulk) {
      if (!Array.isArray(values)) {
        return values;
      }
      return values.map(parseIfString);
    } else {
      return parseIfString(values);
    }
  });
}
function parseUserAction(ua, docData) {
  switch (ua[0]) {
    case "AddRecord":
    case "UpdateRecord":
      return _parseUserActionColValues(ua, docData, false);
    case "BulkAddRecord":
    case "BulkUpdateRecord":
    case "ReplaceTableData":
      return _parseUserActionColValues(ua, docData, true);
    case "AddOrUpdateRecord":
      ua = _parseUserActionColValues(ua, docData, false, 2);
      ua = _parseUserActionColValues(ua, docData, false, 3);
      return ua;
    case "BulkAddOrUpdateRecord":
      ua = _parseUserActionColValues(ua, docData, true, 2);
      ua = _parseUserActionColValues(ua, docData, true, 3);
      return ua;
    default:
      return ua;
  }
}
function _parseUserActionColValues(ua, docData, parseBulk, index) {
  ua = ua.slice();
  const tableId = ua[1];
  if (index === void 0) {
    index = ua.length - 1;
  }
  const colValues = ua[index];
  ua[index] = parseColValues(tableId, colValues, docData, parseBulk);
  return ua;
}


/***/ }),

/***/ "./app/common/getCurrentTime.ts":
/*!**************************************!*\
  !*** ./app/common/getCurrentTime.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getCurrentTime)
/* harmony export */ });
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_0__);

function getCurrentTime() {
  const getDefault = () => moment_timezone__WEBPACK_IMPORTED_MODULE_0___default()();
  if (typeof window === "undefined" || !window) {
    return getDefault();
  }
  const searchParams = new URLSearchParams(window.location.search);
  return searchParams.has("currentTime") ? moment_timezone__WEBPACK_IMPORTED_MODULE_0___default()(searchParams.get("currentTime") || void 0) : getDefault();
}


/***/ }),

/***/ "./app/common/gristTypes.ts":
/*!**********************************!*\
  !*** ./app/common/gristTypes.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CellInfoType": () => (/* binding */ CellInfoType),
/* harmony export */   "MANUALSORT": () => (/* binding */ MANUALSORT),
/* harmony export */   "RecalcWhen": () => (/* binding */ RecalcWhen),
/* harmony export */   "extractInfoFromColType": () => (/* binding */ extractInfoFromColType),
/* harmony export */   "extractTypeFromColType": () => (/* binding */ extractTypeFromColType),
/* harmony export */   "getDefaultForType": () => (/* binding */ getDefaultForType),
/* harmony export */   "getObjCode": () => (/* binding */ getObjCode),
/* harmony export */   "getReferencedTableId": () => (/* binding */ getReferencedTableId),
/* harmony export */   "isCensored": () => (/* binding */ isCensored),
/* harmony export */   "isDateLikeType": () => (/* binding */ isDateLikeType),
/* harmony export */   "isEmptyList": () => (/* binding */ isEmptyList),
/* harmony export */   "isFullReferencingType": () => (/* binding */ isFullReferencingType),
/* harmony export */   "isHiddenCol": () => (/* binding */ isHiddenCol),
/* harmony export */   "isList": () => (/* binding */ isList),
/* harmony export */   "isListOrNull": () => (/* binding */ isListOrNull),
/* harmony export */   "isListType": () => (/* binding */ isListType),
/* harmony export */   "isNumberType": () => (/* binding */ isNumberType),
/* harmony export */   "isObject": () => (/* binding */ isObject),
/* harmony export */   "isRaisedException": () => (/* binding */ isRaisedException),
/* harmony export */   "isRefListType": () => (/* binding */ isRefListType),
/* harmony export */   "isReference": () => (/* binding */ isReference),
/* harmony export */   "isReferenceList": () => (/* binding */ isReferenceList),
/* harmony export */   "isReferencing": () => (/* binding */ isReferencing),
/* harmony export */   "isRightType": () => (/* binding */ isRightType),
/* harmony export */   "isSkip": () => (/* binding */ isSkip),
/* harmony export */   "isValidRuleValue": () => (/* binding */ isValidRuleValue),
/* harmony export */   "isVersions": () => (/* binding */ isVersions),
/* harmony export */   "reencodeAsAny": () => (/* binding */ reencodeAsAny),
/* harmony export */   "sequelizeToGristType": () => (/* binding */ sequelizeToGristType)
/* harmony export */ });
/* harmony import */ var app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/plugin/GristData */ "./app/plugin/GristData.ts");
/* harmony import */ var _gutil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gutil */ "./app/common/gutil.ts");

const isString = __webpack_require__(/*! lodash/isString */ "./node_modules/lodash/isString.js");

const MANUALSORT = "manualSort";
function isHiddenCol(colId) {
  return colId.startsWith("gristHelper_") || colId === MANUALSORT;
}
const _defaultValues = {
  "Any": [null, "NULL"],
  "Attachments": [null, "NULL"],
  "Blob": [null, "NULL"],
  "Bool": [false, "0"],
  "Choice": ["", "''"],
  "ChoiceList": [null, "NULL"],
  "Date": [null, "NULL"],
  "DateTime": [null, "NULL"],
  "Id": [0, "0"],
  "Int": [0, "0"],
  "ManualSortPos": [Number.POSITIVE_INFINITY, "1e999"],
  "Numeric": [0, "0"],
  "PositionNumber": [Number.POSITIVE_INFINITY, "1e999"],
  "Ref": [0, "0"],
  "RefList": [null, "NULL"],
  "Text": ["", "''"]
};
function getDefaultForType(colType, options = {}) {
  const type = extractTypeFromColType(colType);
  return (_defaultValues[type] || _defaultValues.Any)[options.sqlFormatted ? 1 : 0];
}
function extractInfoFromColType(colType) {
  if (colType === "Attachments") {
    return { type: "RefList", tableId: "_grist_Attachments" };
  }
  const colon = colType.indexOf(":");
  const [type, arg] = colon === -1 ? [colType] : [colType.slice(0, colon), colType.slice(colon + 1)];
  return type === "Ref" ? { type, tableId: String(arg) } : type === "RefList" ? { type, tableId: String(arg) } : type === "DateTime" ? { type, timezone: String(arg) } : { type };
}
function reencodeAsAny(value, typeInfo) {
  if (typeof value === "number") {
    switch (typeInfo.type) {
      case "Date":
        return [app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Date, value];
      case "DateTime":
        return [app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.DateTime, value, typeInfo.timezone];
      case "Ref":
        return [app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Reference, typeInfo.tableId, value];
    }
  }
  return value;
}
function isObject(value) {
  return Array.isArray(value);
}
function getObjCode(value) {
  return Array.isArray(value) ? value[0] : null;
}
function isRaisedException(value) {
  return getObjCode(value) === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Exception;
}
function isVersions(value) {
  return getObjCode(value) === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Versions;
}
function isSkip(value) {
  return getObjCode(value) === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Skip;
}
function isCensored(value) {
  return getObjCode(value) === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Censored;
}
function isList(value) {
  return Array.isArray(value) && value[0] === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.List;
}
function isReference(value) {
  return Array.isArray(value) && value[0] === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Reference;
}
function isReferenceList(value) {
  return Array.isArray(value) && value[0] === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.ReferenceList;
}
function isReferencing(value) {
  return Array.isArray(value) && (value[0] === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.ReferenceList || value[0] === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Reference);
}
function isListOrNull(value) {
  return value === null || isList(value);
}
function isEmptyList(value) {
  return Array.isArray(value) && value.length === 1 && value[0] === app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.List;
}
function isNumber(v) {
  return typeof v === "number" || typeof v === "boolean";
}
function isNumberOrNull(v) {
  return isNumber(v) || v === null;
}
function isBoolean(v) {
  return typeof v === "boolean" || v === 1 || v === 0;
}
const abnormalValueTypes = [
  app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Exception,
  app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Pending,
  app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Skip,
  app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Unmarshallable,
  app_plugin_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Versions
];
function isNormalValue(value) {
  return !abnormalValueTypes.includes(getObjCode(value));
}
const rightType = {
  Any: isNormalValue,
  Attachments: isListOrNull,
  Text: isString,
  Blob: isString,
  Int: isNumberOrNull,
  Bool: isBoolean,
  Date: isNumberOrNull,
  DateTime: isNumberOrNull,
  Numeric: isNumberOrNull,
  Id: isNumber,
  PositionNumber: isNumber,
  ManualSortPos: isNumber,
  Ref: isNumber,
  RefList: isListOrNull,
  Choice: isString,
  ChoiceList: isListOrNull
};
function isRightType(type) {
  return rightType[type];
}
function extractTypeFromColType(type) {
  if (!type) {
    return type;
  }
  const colon = type.indexOf(":");
  return colon === -1 ? type : type.slice(0, colon);
}
var RecalcWhen = /* @__PURE__ */ ((RecalcWhen2) => {
  RecalcWhen2[RecalcWhen2["DEFAULT"] = 0] = "DEFAULT";
  RecalcWhen2[RecalcWhen2["NEVER"] = 1] = "NEVER";
  RecalcWhen2[RecalcWhen2["MANUAL_UPDATES"] = 2] = "MANUAL_UPDATES";
  return RecalcWhen2;
})(RecalcWhen || {});
function sequelizeToGristType(sqlType) {
  let endMarker = sqlType.length;
  const parensMarker = sqlType.indexOf("(");
  endMarker = parensMarker > 0 ? parensMarker : endMarker;
  const spaceMarker = sqlType.indexOf(" ");
  endMarker = spaceMarker > 0 && spaceMarker < endMarker ? spaceMarker : endMarker;
  switch (sqlType.substring(0, endMarker)) {
    case "INTEGER":
    case "BIGINT":
    case "SMALLINT":
    case "INT":
      return "Int";
    case "NUMBER":
    case "FLOAT":
    case "DECIMAL":
    case "NUMERIC":
    case "REAL":
    case "DOUBLE":
    case "DOUBLE PRECISION":
      return "Numeric";
    case "BOOLEAN":
    case "TINYINT":
      return "Bool";
    case "STRING":
    case "CHAR":
    case "TEXT":
    case "UUID":
    case "UUIDV1":
    case "UUIDV4":
    case "VARCHAR":
    case "NVARCHAR":
    case "TINYTEXT":
    case "MEDIUMTEXT":
    case "LONGTEXT":
    case "ENUM":
      return "Text";
    case "TIME":
    case "DATE":
    case "DATEONLY":
    case "DATETIME":
    case "NOW":
      return "Text";
    case "BLOB":
    case "TINYBLOB":
    case "MEDIUMBLOB":
    case "LONGBLOB":
      throw new Error("SQL type: `" + sqlType + "` is currently unsupported");
    case "NONE":
    case "HSTORE":
    case "JSON":
    case "JSONB":
    case "VIRTUAL":
    case "ARRAY":
    case "RANGE":
    case "GEOMETRY":
      throw new Error("SQL type: `" + sqlType + "` is currently untested");
    default:
      throw new Error("Unrecognized datatype: `" + sqlType + "`");
  }
}
function getReferencedTableId(type) {
  if (type === "Attachments") {
    return "_grist_Attachments";
  }
  return (0,_gutil__WEBPACK_IMPORTED_MODULE_1__.removePrefix)(type, "Ref:") || (0,_gutil__WEBPACK_IMPORTED_MODULE_1__.removePrefix)(type, "RefList:");
}
function isRefListType(type) {
  return type === "Attachments" || (type == null ? void 0 : type.startsWith("RefList:"));
}
function isListType(type) {
  return type === "ChoiceList" || isRefListType(type);
}
function isNumberType(type) {
  return ["Numeric", "Int"].includes(type || "");
}
function isDateLikeType(type) {
  return type === "Date" || type.startsWith("DateTime");
}
function isFullReferencingType(type) {
  return type.startsWith("Ref:") || isRefListType(type);
}
function isValidRuleValue(value) {
  return value === null || typeof value === "boolean";
}
var CellInfoType = /* @__PURE__ */ ((CellInfoType2) => {
  CellInfoType2[CellInfoType2["COMMENT"] = 1] = "COMMENT";
  return CellInfoType2;
})(CellInfoType || {});


/***/ }),

/***/ "./app/common/isHiddenTable.ts":
/*!*************************************!*\
  !*** ./app/common/isHiddenTable.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isHiddenTable": () => (/* binding */ isHiddenTable),
/* harmony export */   "isSummaryTable": () => (/* binding */ isSummaryTable),
/* harmony export */   "isTableCensored": () => (/* binding */ isTableCensored)
/* harmony export */ });
function isHiddenTable(tablesData, tableRef) {
  const tableId = tablesData.getValue(tableRef, "tableId");
  return !tableId || isSummaryTable(tablesData, tableRef) || tableId.startsWith("GristHidden_");
}
function isSummaryTable(tablesData, tableRef) {
  return tablesData.getValue(tableRef, "summarySourceTable") !== 0;
}
function isTableCensored(tablesData, tableRef) {
  const tableId = tablesData.getValue(tableRef, "tableId");
  return !tableId;
}


/***/ }),

/***/ "./app/common/parseDate.ts":
/*!*********************************!*\
  !*** ./app/common/parseDate.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TWO_DIGIT_YEAR_THRESHOLD": () => (/* binding */ TWO_DIGIT_YEAR_THRESHOLD),
/* harmony export */   "dateFormatOptions": () => (/* binding */ dateFormatOptions),
/* harmony export */   "dateTimeWidgetOptions": () => (/* binding */ dateTimeWidgetOptions),
/* harmony export */   "guessDateFormat": () => (/* binding */ guessDateFormat),
/* harmony export */   "guessDateFormats": () => (/* binding */ guessDateFormats),
/* harmony export */   "parseDate": () => (/* binding */ parseDate),
/* harmony export */   "parseDateStrict": () => (/* binding */ parseDateStrict),
/* harmony export */   "parseDateTime": () => (/* binding */ parseDateTime),
/* harmony export */   "timeFormatOptions": () => (/* binding */ timeFormatOptions)
/* harmony export */ });
/* harmony import */ var app_common_gutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
/* harmony import */ var _gristlabs_moment_guess_dist_bundle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @gristlabs/moment-guess/dist/bundle.js */ "./node_modules/@gristlabs/moment-guess/dist/bundle.js");
/* harmony import */ var _gristlabs_moment_guess_dist_bundle_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_gristlabs_moment_guess_dist_bundle_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_2__);
const escapeRegExp = __webpack_require__(/*! lodash/escapeRegExp */ "./node_modules/lodash/escapeRegExp.js");
const last = __webpack_require__(/*! lodash/last */ "./node_modules/lodash/last.js");
const memoize = __webpack_require__(/*! lodash/memoize */ "./node_modules/lodash/memoize.js");



const TWO_DIGIT_YEAR_THRESHOLD = 10;
const MAX_TWO_DIGIT_YEAR = new Date().getFullYear() + TWO_DIGIT_YEAR_THRESHOLD - 2e3;
(moment_timezone__WEBPACK_IMPORTED_MODULE_2___default().parseTwoDigitYear) = function(yearString) {
  const year = parseInt(yearString, 10);
  return year + (year > MAX_TWO_DIGIT_YEAR ? 1900 : 2e3);
};
const PARSER_FORMATS = [
  "M D YYYY",
  "M D YY",
  "M D",
  "M",
  "MMMM D YYYY",
  "MMMM D",
  "MMMM Do YYYY",
  "MMMM Do",
  "D MMMM YYYY",
  "D MMMM",
  "Do MMMM YYYY",
  "Do MMMM",
  "MMMM",
  "MMM D YYYY",
  "MMM D",
  "MMM Do YYYY",
  "MMM Do",
  "D MMM YYYY",
  "D MMM",
  "Do MMM YYYY",
  "Do MMM",
  "MMM",
  "YYYY M D",
  "YYYY M",
  "YYYY",
  "D M YYYY",
  "D M YY",
  "D M",
  "D"
];
const UNAMBIGUOUS_FORMATS = [
  "YYYY M D",
  ...PARSER_FORMATS.filter((f) => f.includes("MMM"))
];
const TIME_REGEX = /(?:^|\s+|T)(?:(\d\d?)(?::(\d\d?)(?::(\d\d?))?)?|(\d\d?)(\d\d))\s*([ap]m?)?$/i;
const UTC_REGEX = /[^a-zA-Z](UTC?|GMT|Z)$/i;
const NUMERIC_TZ_REGEX = /([+-]\d\d?)(?::?(\d\d))?$/i;
const SEPARATORS = /[\W_]+/g;
const tzAbbreviations = memoize((tzName) => {
  const abbreviations = new Set(moment_timezone__WEBPACK_IMPORTED_MODULE_2___default().tz.zone(tzName).abbrs.map(escapeRegExp));
  const union = [...abbreviations].join("|");
  return new RegExp(`[^a-zA-Z](${union})$`, "i");
});
function parseDate(date, options = {}) {
  if (!date) {
    return null;
  }
  const dateFormat = options.dateFormat || "YYYY-MM-DD";
  const dateFormats = [..._buildVariations(dateFormat, date), ...PARSER_FORMATS];
  const cleanDate = date.replace(SEPARATORS, " ");
  let datetime = cleanDate.trim();
  let timeformat = "";
  let time = options.time;
  if (time) {
    const parsedTimeZone = parseTimeZone(time, options.timezone);
    const parsedTime = standardizeTime(parsedTimeZone.remaining);
    if (!parsedTime || parsedTime.remaining) {
      return null;
    }
    time = parsedTime.time;
    const { tzOffset } = parsedTimeZone;
    datetime += " " + time + tzOffset;
    timeformat = " HH:mm:ss" + (tzOffset ? "Z" : "");
  }
  for (const f of dateFormats) {
    const fullFormat = f + timeformat;
    const m = moment_timezone__WEBPACK_IMPORTED_MODULE_2___default().tz(datetime, fullFormat, true, options.timezone || "UTC");
    if (m.isValid()) {
      return m.valueOf() / 1e3;
    }
  }
  return null;
}
function parseDateStrict(date, dateFormat, results, timezone = "UTC") {
  if (!date) {
    return;
  }
  dateFormat = dateFormat || "YYYY-MM-DD";
  const dateFormats = [..._buildVariations(dateFormat, date), ...UNAMBIGUOUS_FORMATS];
  const cleanDate = date.replace(SEPARATORS, " ").trim();
  for (const format of dateFormats) {
    const m = moment_timezone__WEBPACK_IMPORTED_MODULE_2___default().tz(cleanDate, format, true, timezone);
    if (m.isValid()) {
      const value = m.valueOf() / 1e3;
      if (results) {
        results.add(value);
      } else {
        return value;
      }
    }
  }
}
function parseDateTime(dateTime, options) {
  dateTime = dateTime.trim();
  if (!dateTime) {
    return;
  }
  const dateFormat = options.dateFormat || "YYYY-MM-DD";
  const timezone = options.timezone || "UTC";
  const dateOnly = parseDateStrict(dateTime, dateFormat, void 0, timezone);
  if (dateOnly) {
    return dateOnly;
  }
  const parsedTimeZone = parseTimeZone(dateTime, timezone);
  let tzOffset = "";
  if (parsedTimeZone) {
    tzOffset = parsedTimeZone.tzOffset;
    dateTime = parsedTimeZone.remaining;
  }
  const parsedTime = standardizeTime(dateTime);
  if (!parsedTime) {
    return;
  }
  dateTime = parsedTime.remaining;
  const date = parseDateStrict(dateTime, dateFormat);
  if (!date) {
    return;
  }
  const dateString = moment_timezone__WEBPACK_IMPORTED_MODULE_2___default().unix(date).utc().format("YYYY-MM-DD");
  dateTime = dateString + " " + parsedTime.time + tzOffset;
  const fullFormat = "YYYY-MM-DD HH:mm:ss" + (tzOffset ? "Z" : "");
  return moment_timezone__WEBPACK_IMPORTED_MODULE_2___default().tz(dateTime, fullFormat, true, timezone).valueOf() / 1e3;
}
function _getPartialFormat(input, format) {
  var _a, _b;
  const re = /Y+|M+o?|D+o?|[a-zA-Z0-9]+/ig;
  const numInputParts = ((_a = input.match(re)) == null ? void 0 : _a.length) || 0;
  let numFormatParts = ((_b = format.match(re)) == null ? void 0 : _b.length) || 0;
  if (numFormatParts > numInputParts) {
    if (/Y+/.test(format)) {
      format = format.replace(/Y+/, " ").trim();
      numFormatParts -= 1;
    }
    if (numFormatParts > numInputParts) {
      format = format.replace(/M+/, " ").trim();
    }
  }
  return format;
}
function _buildVariations(dateFormat, date) {
  let format = dateFormat.replace(/MM+/g, (m) => m === "MM" ? "M" : m).replace(/DD+/g, (m) => m === "DD" ? "D" : m).replace(SEPARATORS, " ").trim();
  if (format.includes("M") && format.includes("D") && !format.includes("Y")) {
    format += " YYYY";
  }
  format = _getPartialFormat(date, format);
  const variations = /* @__PURE__ */ new Set([format]);
  const otherYear = format.replace(/Y{2,4}/, (m) => m === "YY" ? "YYYY" : m === "YYYY" ? "YY" : m);
  variations.add(otherYear);
  variations.add(format.replace(/MMM+/, "M"));
  if (otherYear !== format) {
    variations.add(otherYear.replace(/MMM+/, "M"));
  }
  return variations;
}
function calculateOffset(tzMatch) {
  const [, hhOffset, mmOffset] = tzMatch;
  const sign = hhOffset.slice(0, 1);
  return sign + hhOffset.slice(1).padStart(2, "0") + ":" + (mmOffset || "0").padStart(2, "0");
}
function parseTimeZone(str, timezone) {
  str = str.trim();
  let tzMatch = UTC_REGEX.exec(str);
  let matchStart = 0;
  let tzOffset = "";
  if (tzMatch) {
    tzOffset = "+00:00";
    matchStart = tzMatch.index + 1;
  } else {
    tzMatch = NUMERIC_TZ_REGEX.exec(str);
    if (tzMatch) {
      tzOffset = calculateOffset(tzMatch);
      matchStart = tzMatch.index;
    } else if (timezone) {
      tzMatch = tzAbbreviations(timezone).exec(str);
      if (tzMatch) {
        matchStart = tzMatch.index + 1;
      }
    }
  }
  if (tzMatch) {
    str = str.slice(0, matchStart).trim();
  }
  return { remaining: str, tzOffset };
}
function standardizeTime(timeString) {
  const match = TIME_REGEX.exec(timeString);
  if (!match) {
    return;
  }
  let hours = parseInt(match[1] || match[4], 10);
  const mm = (match[2] || match[5] || "0").padStart(2, "0");
  const ss = (match[3] || "0").padStart(2, "0");
  const ampm = (match[6] || "").toLowerCase();
  if (hours < 12 && hours > 0 && ampm.startsWith("p")) {
    hours += 12;
  } else if (hours === 12 && ampm.startsWith("a")) {
    hours = 0;
  }
  const hh = String(hours).padStart(2, "0");
  return { remaining: timeString.slice(0, match.index).trim(), time: `${hh}:${mm}:${ss}` };
}
function guessDateFormat(values, timezone = "UTC") {
  const formats = guessDateFormats(values, timezone);
  if (!formats) {
    return "YYYY-MM-DD";
  }
  return last(formats);
}
function guessDateFormats(values, timezone = "UTC") {
  const dateStrings = values.filter(app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.isNonNullish);
  const sample = (0,app_common_gutil__WEBPACK_IMPORTED_MODULE_0__.getDistinctValues)(dateStrings, 100);
  const formats = {};
  for (const dateString of sample) {
    let guessed;
    try {
      guessed = _gristlabs_moment_guess_dist_bundle_js__WEBPACK_IMPORTED_MODULE_1___default()(dateString);
    } catch (e) {
      continue;
    }
    if (typeof guessed === "string") {
      guessed = [guessed];
    }
    for (const guess of guessed) {
      formats[guess] = 0;
    }
  }
  const formatKeys = Object.keys(formats);
  if (!formatKeys.length || formatKeys.length > 10) {
    return null;
  }
  for (const format of formatKeys) {
    for (const dateString of dateStrings) {
      const m = moment_timezone__WEBPACK_IMPORTED_MODULE_2___default().tz(dateString, format, true, timezone);
      if (m.isValid()) {
        formats[format] += 1;
      }
    }
  }
  const maxCount = Math.max(...Object.values(formats));
  return formatKeys.filter((format) => formats[format] === maxCount).sort();
}
const dateFormatOptions = [
  "YYYY-MM-DD",
  "MM-DD-YYYY",
  "MM/DD/YYYY",
  "MM-DD-YY",
  "MM/DD/YY",
  "DD MMM YYYY",
  "MMMM Do, YYYY",
  "DD-MM-YYYY"
];
const timeFormatOptions = [
  "h:mma",
  "h:mma z",
  "HH:mm",
  "HH:mm z",
  "HH:mm:ss",
  "HH:mm:ss z"
];
function dateTimeWidgetOptions(fullFormat, defaultTimeFormat) {
  const index = fullFormat.match(/[hHkaAmsSzZT]|$/).index;
  const dateFormat = fullFormat.substr(0, index).trim();
  const timeFormat = fullFormat.substr(index).trim() || (defaultTimeFormat ? timeFormatOptions[0] : "");
  return {
    dateFormat,
    timeFormat,
    isCustomDateFormat: !dateFormatOptions.includes(dateFormat),
    isCustomTimeFormat: !timeFormatOptions.includes(timeFormat)
  };
}


/***/ }),

/***/ "./app/common/tsvFormat.ts":
/*!*********************************!*\
  !*** ./app/common/tsvFormat.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tsvDecode": () => (/* binding */ tsvDecode),
/* harmony export */   "tsvEncode": () => (/* binding */ tsvEncode)
/* harmony export */ });
function tsvEncode(data) {
  return data.map((row) => row.map((value) => encode(value)).join("	")).join("\n");
}
function encode(rawValue) {
  const value = typeof rawValue === "string" ? rawValue : rawValue == null ? "" : String(rawValue);
  if (value.includes("	") || value.includes("\n")) {
    return '"' + value.replace(/"/g, '""') + '"';
  }
  return value;
}
function tsvDecode(tsvString) {
  const lines = [];
  let row = [];
  const fieldRegexp = /(("([^"]*"")*[^"]*"(?!"))?[^\t\n]*)(\t|\n|$)/g;
  for (; ; ) {
    const m = fieldRegexp.exec(tsvString);
    if (!m) {
      break;
    }
    const sep = m[4];
    let value = m[1];
    if (value.startsWith('"')) {
      value = value.replace(/"([^"]*"")*[^"]*"(?!")/, (q) => q.slice(1, -1).replace(/""/g, '"'));
    }
    row.push(value);
    if (sep !== "	") {
      lines.push(row);
      row = [];
      if (sep === "") {
        break;
      }
    }
  }
  return lines;
}


/***/ }),

/***/ "./app/common/uploads.ts":
/*!*******************************!*\
  !*** ./app/common/uploads.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UPLOAD_URL_PATH": () => (/* binding */ UPLOAD_URL_PATH)
/* harmony export */ });
const UPLOAD_URL_PATH = "uploads";


/***/ }),

/***/ "./app/plugin/CustomSectionAPI-ti.ts":
/*!*******************************************!*\
  !*** ./app/plugin/CustomSectionAPI-ti.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ColumnToMap": () => (/* binding */ ColumnToMap),
/* harmony export */   "ColumnsToMap": () => (/* binding */ ColumnsToMap),
/* harmony export */   "CustomSectionAPI": () => (/* binding */ CustomSectionAPI),
/* harmony export */   "InteractionOptions": () => (/* binding */ InteractionOptions),
/* harmony export */   "InteractionOptionsRequest": () => (/* binding */ InteractionOptionsRequest),
/* harmony export */   "WidgetColumnMap": () => (/* binding */ WidgetColumnMap),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);

const ColumnToMap = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "name": "string",
  "title": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("string", "null")),
  "description": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("string", "null")),
  "type": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("string"),
  "optional": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("boolean"),
  "allowMultiple": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("boolean")
});
const ColumnsToMap = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("string", "ColumnToMap"));
const InteractionOptionsRequest = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "requiredAccess": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("string"),
  "hasCustomOptions": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("boolean"),
  "columns": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("ColumnsToMap"),
  "allowSelectBy": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("boolean")
});
const InteractionOptions = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "accessLevel": "string"
});
const WidgetColumnMap = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  [ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.indexKey]: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("string", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("string"), "null")
});
const CustomSectionAPI = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "configure": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("customOptions", "InteractionOptionsRequest")),
  "mappings": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("WidgetColumnMap", "null"))
});
const exportedTypeSuite = {
  ColumnToMap,
  ColumnsToMap,
  InteractionOptionsRequest,
  InteractionOptions,
  WidgetColumnMap,
  CustomSectionAPI
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exportedTypeSuite);


/***/ }),

/***/ "./app/plugin/FileParserAPI-ti.ts":
/*!****************************************!*\
  !*** ./app/plugin/FileParserAPI-ti.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EditOptionsAPI": () => (/* binding */ EditOptionsAPI),
/* harmony export */   "FileSource": () => (/* binding */ FileSource),
/* harmony export */   "ParseFileAPI": () => (/* binding */ ParseFileAPI),
/* harmony export */   "ParseFileResult": () => (/* binding */ ParseFileResult),
/* harmony export */   "ParseOptionSchema": () => (/* binding */ ParseOptionSchema),
/* harmony export */   "ParseOptions": () => (/* binding */ ParseOptions),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);

const EditOptionsAPI = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "getParseOptions": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("ParseOptions", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("parseOptions", "ParseOptions", true))
});
const ParseFileAPI = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "parseFile": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("ParseFileResult", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("file", "FileSource"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("parseOptions", "ParseOptions", true))
});
const ParseOptions = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "NUM_ROWS": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("number"),
  "SCHEMA": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("ParseOptionSchema")),
  "WARNING": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("string")
});
const ParseOptionSchema = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "name": "string",
  "label": "string",
  "type": "string",
  "visible": "boolean"
});
const FileSource = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "path": "string",
  "origName": "string"
});
const ParseFileResult = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface(["GristTables"], {
  "parseOptions": "ParseOptions"
});
const exportedTypeSuite = {
  EditOptionsAPI,
  ParseFileAPI,
  ParseOptions,
  ParseOptionSchema,
  FileSource,
  ParseFileResult
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exportedTypeSuite);


/***/ }),

/***/ "./app/plugin/GristAPI-ti.ts":
/*!***********************************!*\
  !*** ./app/plugin/GristAPI-ti.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AccessTokenOptions": () => (/* binding */ AccessTokenOptions),
/* harmony export */   "AccessTokenResult": () => (/* binding */ AccessTokenResult),
/* harmony export */   "ComponentKind": () => (/* binding */ ComponentKind),
/* harmony export */   "CursorPos": () => (/* binding */ CursorPos),
/* harmony export */   "GristAPI": () => (/* binding */ GristAPI),
/* harmony export */   "GristDocAPI": () => (/* binding */ GristDocAPI),
/* harmony export */   "GristView": () => (/* binding */ GristView),
/* harmony export */   "UIRowId": () => (/* binding */ UIRowId),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);

const UIRowId = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("number", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit("new"));
const CursorPos = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "rowId": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("UIRowId"),
  "rowIndex": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("number"),
  "fieldIndex": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("number"),
  "sectionId": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("number")
});
const ComponentKind = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit("safeBrowser"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit("safePython"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit("unsafeNode"));
const GristAPI = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "render": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("number", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("path", "string"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("target", "RenderTarget"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("options", "RenderOptions", true)),
  "dispose": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("procId", "number")),
  "subscribe": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("tableId", "string")),
  "unsubscribe": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("tableId", "string"))
});
const GristDocAPI = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "getDocName": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("string"),
  "listTables": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("string")),
  "fetchTable": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("any", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("tableId", "string")),
  "applyUserActions": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("any", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("actions", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("any"))), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("options", "any", true)),
  "getAccessToken": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("AccessTokenResult", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("options", "AccessTokenOptions"))
});
const GristView = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "fetchSelectedTable": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("any"),
  "fetchSelectedRecord": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("any", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("rowId", "number")),
  "allowSelectBy": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void"),
  "setSelectedRows": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("rowIds", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("number"), "null"))),
  "setCursorPos": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("pos", "CursorPos"))
});
const AccessTokenOptions = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "readOnly": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("boolean")
});
const AccessTokenResult = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "token": "string",
  "baseUrl": "string",
  "ttlMsecs": "number"
});
const exportedTypeSuite = {
  UIRowId,
  CursorPos,
  ComponentKind,
  GristAPI,
  GristDocAPI,
  GristView,
  AccessTokenOptions,
  AccessTokenResult
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exportedTypeSuite);


/***/ }),

/***/ "./app/plugin/GristAPI.ts":
/*!********************************!*\
  !*** ./app/plugin/GristAPI.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RPC_GRISTAPI_INTERFACE": () => (/* binding */ RPC_GRISTAPI_INTERFACE)
/* harmony export */ });
const RPC_GRISTAPI_INTERFACE = "_grist_api";


/***/ }),

/***/ "./app/plugin/GristData.ts":
/*!*********************************!*\
  !*** ./app/plugin/GristData.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GristObjCode": () => (/* binding */ GristObjCode)
/* harmony export */ });
var GristObjCode = /* @__PURE__ */ ((GristObjCode2) => {
  GristObjCode2["List"] = "L";
  GristObjCode2["LookUp"] = "l";
  GristObjCode2["Dict"] = "O";
  GristObjCode2["DateTime"] = "D";
  GristObjCode2["Date"] = "d";
  GristObjCode2["Skip"] = "S";
  GristObjCode2["Censored"] = "C";
  GristObjCode2["Reference"] = "R";
  GristObjCode2["ReferenceList"] = "r";
  GristObjCode2["Exception"] = "E";
  GristObjCode2["Pending"] = "P";
  GristObjCode2["Unmarshallable"] = "U";
  GristObjCode2["Versions"] = "V";
  return GristObjCode2;
})(GristObjCode || {});


/***/ }),

/***/ "./app/plugin/GristTable-ti.ts":
/*!*************************************!*\
  !*** ./app/plugin/GristTable-ti.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "APIType": () => (/* binding */ APIType),
/* harmony export */   "GristColumn": () => (/* binding */ GristColumn),
/* harmony export */   "GristTable": () => (/* binding */ GristTable),
/* harmony export */   "GristTables": () => (/* binding */ GristTables),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);

const GristTable = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "table_name": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("string", "null"),
  "column_metadata": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("GristColumn"),
  "table_data": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("any"))
});
const GristTables = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "tables": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("GristTable")
});
const GristColumn = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "id": "string",
  "type": "string"
});
const APIType = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.enumtype({
  "ImportSourceAPI": 0,
  "ImportProcessorAPI": 1,
  "ParseOptionsAPI": 2,
  "ParseFileAPI": 3
});
const exportedTypeSuite = {
  GristTable,
  GristTables,
  GristColumn,
  APIType
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exportedTypeSuite);


/***/ }),

/***/ "./app/plugin/ImportSourceAPI-ti.ts":
/*!******************************************!*\
  !*** ./app/plugin/ImportSourceAPI-ti.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FileContent": () => (/* binding */ FileContent),
/* harmony export */   "FileListItem": () => (/* binding */ FileListItem),
/* harmony export */   "ImportProcessorAPI": () => (/* binding */ ImportProcessorAPI),
/* harmony export */   "ImportSource": () => (/* binding */ ImportSource),
/* harmony export */   "ImportSourceAPI": () => (/* binding */ ImportSourceAPI),
/* harmony export */   "URL": () => (/* binding */ URL),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);

const ImportSourceAPI = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "getImportSource": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("ImportSource", "undefined"))
});
const ImportProcessorAPI = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "processImport": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("GristTable"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("source", "ImportSource"))
});
const FileContent = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "content": "any",
  "name": "string"
});
const FileListItem = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "kind": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit("fileList"),
  "files": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array("FileContent")
});
const URL = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "kind": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit("url"),
  "url": "string"
});
const ImportSource = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "item": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("FileListItem", "URL"),
  "options": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("string", "Buffer")),
  "description": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("string")
});
const exportedTypeSuite = {
  ImportSourceAPI,
  ImportProcessorAPI,
  FileContent,
  FileListItem,
  URL,
  ImportSource
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exportedTypeSuite);


/***/ }),

/***/ "./app/plugin/InternalImportSourceAPI-ti.ts":
/*!**************************************************!*\
  !*** ./app/plugin/InternalImportSourceAPI-ti.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InternalImportSourceAPI": () => (/* binding */ InternalImportSourceAPI),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);

const InternalImportSourceAPI = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "getImportSource": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("ImportSource", "undefined"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("inlineTarget", "RenderTarget"))
});
const exportedTypeSuite = {
  InternalImportSourceAPI
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exportedTypeSuite);


/***/ }),

/***/ "./app/plugin/RenderOptions-ti.ts":
/*!****************************************!*\
  !*** ./app/plugin/RenderOptions-ti.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RenderOptions": () => (/* binding */ RenderOptions),
/* harmony export */   "RenderTarget": () => (/* binding */ RenderTarget),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);

const RenderTarget = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit("fullscreen"), "number");
const RenderOptions = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "height": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt("string")
});
const exportedTypeSuite = {
  RenderTarget,
  RenderOptions
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exportedTypeSuite);


/***/ }),

/***/ "./app/plugin/StorageAPI-ti.ts":
/*!*************************************!*\
  !*** ./app/plugin/StorageAPI-ti.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Storage": () => (/* binding */ Storage),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);

const Storage = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "getItem": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("any", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("key", "string")),
  "hasItem": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("boolean", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("key", "string")),
  "setItem": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("key", "string"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("value", "any")),
  "removeItem": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("key", "string")),
  "clear": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void")
});
const exportedTypeSuite = {
  Storage
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exportedTypeSuite);


/***/ }),

/***/ "./app/plugin/TypeCheckers.ts":
/*!************************************!*\
  !*** ./app/plugin/TypeCheckers.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomSectionAPITI": () => (/* reexport safe */ _CustomSectionAPI_ti__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "FileParserAPITI": () => (/* reexport safe */ _FileParserAPI_ti__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "GristAPITI": () => (/* reexport safe */ _GristAPI_ti__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "GristTableTI": () => (/* reexport safe */ _GristTable_ti__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "ImportSourceAPITI": () => (/* reexport safe */ _ImportSourceAPI_ti__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "InternalImportSourceAPITI": () => (/* reexport safe */ _InternalImportSourceAPI_ti__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "RenderOptionsTI": () => (/* reexport safe */ _RenderOptions_ti__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   "StorageAPITI": () => (/* reexport safe */ _StorageAPI_ti__WEBPACK_IMPORTED_MODULE_8__["default"]),
/* harmony export */   "WidgetAPITI": () => (/* reexport safe */ _WidgetAPI_ti__WEBPACK_IMPORTED_MODULE_9__["default"]),
/* harmony export */   "checkers": () => (/* binding */ checkers)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _CustomSectionAPI_ti__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CustomSectionAPI-ti */ "./app/plugin/CustomSectionAPI-ti.ts");
/* harmony import */ var _FileParserAPI_ti__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FileParserAPI-ti */ "./app/plugin/FileParserAPI-ti.ts");
/* harmony import */ var _GristAPI_ti__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GristAPI-ti */ "./app/plugin/GristAPI-ti.ts");
/* harmony import */ var _GristTable_ti__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GristTable-ti */ "./app/plugin/GristTable-ti.ts");
/* harmony import */ var _ImportSourceAPI_ti__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ImportSourceAPI-ti */ "./app/plugin/ImportSourceAPI-ti.ts");
/* harmony import */ var _InternalImportSourceAPI_ti__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./InternalImportSourceAPI-ti */ "./app/plugin/InternalImportSourceAPI-ti.ts");
/* harmony import */ var _RenderOptions_ti__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RenderOptions-ti */ "./app/plugin/RenderOptions-ti.ts");
/* harmony import */ var _StorageAPI_ti__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./StorageAPI-ti */ "./app/plugin/StorageAPI-ti.ts");
/* harmony import */ var _WidgetAPI_ti__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./WidgetAPI-ti */ "./app/plugin/WidgetAPI-ti.ts");
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];











const allTypes = [
  _CustomSectionAPI_ti__WEBPACK_IMPORTED_MODULE_1__["default"],
  _FileParserAPI_ti__WEBPACK_IMPORTED_MODULE_2__["default"],
  _GristAPI_ti__WEBPACK_IMPORTED_MODULE_3__["default"],
  _GristTable_ti__WEBPACK_IMPORTED_MODULE_4__["default"],
  _ImportSourceAPI_ti__WEBPACK_IMPORTED_MODULE_5__["default"],
  _InternalImportSourceAPI_ti__WEBPACK_IMPORTED_MODULE_6__["default"],
  _RenderOptions_ti__WEBPACK_IMPORTED_MODULE_7__["default"],
  _StorageAPI_ti__WEBPACK_IMPORTED_MODULE_8__["default"],
  _WidgetAPI_ti__WEBPACK_IMPORTED_MODULE_9__["default"]
];
if (typeof Buffer === "undefined") {
  allTypes.push({ Buffer: new ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.BasicType((v) => false, "Buffer is not supported") });
}
function checkDuplicates(types) {
  const seen = /* @__PURE__ */ new Set();
  for (const t of types) {
    for (const key of Object.keys(t)) {
      if (seen.has(key)) {
        throw new Error(`TypeCheckers: Duplicate type name ${key}`);
      }
      seen.add(key);
    }
  }
}
checkDuplicates(allTypes);
const checkers = (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.createCheckers)(...allTypes);


/***/ }),

/***/ "./app/plugin/WidgetAPI-ti.ts":
/*!************************************!*\
  !*** ./app/plugin/WidgetAPI-ti.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WidgetAPI": () => (/* binding */ WidgetAPI),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ "./node_modules/ts-interface-checker/dist/index.js");
/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);

const WidgetAPI = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
  "getOptions": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union("object", "null")),
  "setOptions": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("options", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {
    [ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.indexKey]: "any"
  }))),
  "clearOptions": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void"),
  "setOption": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("void", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("key", "string"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("value", "any")),
  "getOption": ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.func("any", ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.param("key", "string"))
});
const exportedTypeSuite = {
  WidgetAPI
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (exportedTypeSuite);


/***/ }),

/***/ "./app/plugin/objtypes.ts":
/*!********************************!*\
  !*** ./app/plugin/objtypes.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CensoredValue": () => (/* binding */ CensoredValue),
/* harmony export */   "GristDate": () => (/* binding */ GristDate),
/* harmony export */   "GristDateTime": () => (/* binding */ GristDateTime),
/* harmony export */   "PENDING_DATA_PLACEHOLDER": () => (/* binding */ PENDING_DATA_PLACEHOLDER),
/* harmony export */   "PendingValue": () => (/* binding */ PendingValue),
/* harmony export */   "RaisedException": () => (/* binding */ RaisedException),
/* harmony export */   "Reference": () => (/* binding */ Reference),
/* harmony export */   "ReferenceList": () => (/* binding */ ReferenceList),
/* harmony export */   "SkipValue": () => (/* binding */ SkipValue),
/* harmony export */   "UnknownValue": () => (/* binding */ UnknownValue),
/* harmony export */   "decodeObject": () => (/* binding */ decodeObject),
/* harmony export */   "encodeObject": () => (/* binding */ encodeObject),
/* harmony export */   "mapValues": () => (/* binding */ mapValues)
/* harmony export */ });
/* harmony import */ var _GristData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GristData */ "./app/plugin/GristData.ts");

const isPlainObject = __webpack_require__(/*! lodash/isPlainObject */ "./node_modules/lodash/isPlainObject.js");
const PENDING_DATA_PLACEHOLDER = "Loading...";
class GristDate extends Date {
  static fromGristValue(epochSec) {
    return new GristDate(epochSec * 1e3);
  }
  toString() {
    return this.toISOString().slice(0, 10);
  }
}
class GristDateTime extends Date {
  static fromGristValue(epochSec, timezone) {
    return Object.assign(new GristDateTime(epochSec * 1e3), { timezone });
  }
  toString() {
    return this.toISOString();
  }
}
class Reference {
  constructor(tableId, rowId) {
    this.tableId = tableId;
    this.rowId = rowId;
  }
  toString() {
    return `${this.tableId}[${this.rowId}]`;
  }
}
class ReferenceList {
  constructor(tableId, rowIds) {
    this.tableId = tableId;
    this.rowIds = rowIds;
  }
  toString() {
    return `${this.tableId}[[${this.rowIds}]]`;
  }
}
class RaisedException {
  constructor(list) {
    var _a;
    if (!list.length) {
      throw new Error("RaisedException requires a name as first element");
    }
    list = [...list];
    this.name = list.shift();
    this.message = list.shift();
    this.details = list.shift();
    this.user_input = (_a = list.shift()) == null ? void 0 : _a.u;
  }
  toString() {
    switch (this.name) {
      case "ZeroDivisionError":
        return "#DIV/0!";
      case "UnmarshallableError":
        return this.details || "#" + this.name;
      case "InvalidTypedValue":
        return `#Invalid ${this.message}: ${this.details}`;
    }
    return "#" + this.name;
  }
}
class UnknownValue {
  constructor(value) {
    this.value = value;
  }
  static safeRepr(value) {
    try {
      return String(value);
    } catch (e) {
      return `<${typeof value}>`;
    }
  }
  toString() {
    return String(this.value);
  }
}
class PendingValue {
  toString() {
    return PENDING_DATA_PLACEHOLDER;
  }
}
class SkipValue {
  toString() {
    return "...";
  }
}
class CensoredValue {
  toString() {
    return "CENSORED";
  }
}
function encodeObject(value) {
  try {
    switch (typeof value) {
      case "string":
      case "number":
      case "boolean":
        return value;
    }
    if (value == null) {
      return null;
    } else if (value instanceof Reference) {
      return [_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Reference, value.tableId, value.rowId];
    } else if (value instanceof ReferenceList) {
      return [_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.ReferenceList, value.tableId, value.rowIds];
    } else if (value instanceof Date) {
      const timestamp = value.valueOf() / 1e3;
      if ("timezone" in value) {
        return [_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.DateTime, timestamp, value.timezone];
      } else {
        return [_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.DateTime, timestamp, "UTC"];
      }
    } else if (value instanceof CensoredValue) {
      return [_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Censored];
    } else if (value instanceof RaisedException) {
      return [_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Exception, value.name, value.message, value.details];
    } else if (Array.isArray(value)) {
      return [_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.List, ...value.map(encodeObject)];
    } else if (isPlainObject(value)) {
      return [_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Dict, mapValues(value, encodeObject, { sort: true })];
    }
  } catch (e) {
  }
  return [_GristData__WEBPACK_IMPORTED_MODULE_0__.GristObjCode.Unmarshallable, UnknownValue.safeRepr(value)];
}
function decodeObject(value) {
  if (!Array.isArray(value)) {
    return value;
  }
  const code = value[0];
  const args = value.slice(1);
  let err;
  try {
    switch (code) {
      case "D":
        return GristDateTime.fromGristValue(args[0], String(args[1]));
      case "d":
        return GristDate.fromGristValue(args[0]);
      case "E":
        return new RaisedException(args);
      case "L":
        return args.map(decodeObject);
      case "O":
        return mapValues(args[0], decodeObject, { sort: true });
      case "P":
        return new PendingValue();
      case "r":
        return new ReferenceList(String(args[0]), args[1]);
      case "R":
        return new Reference(String(args[0]), args[1]);
      case "S":
        return new SkipValue();
      case "C":
        return new CensoredValue();
      case "U":
        return new UnknownValue(args[0]);
    }
  } catch (e) {
    err = e;
  }
  return new UnknownValue(`${code}(${JSON.stringify(args).slice(1, -1)})` + (err ? `#${err.name}(${err.message})` : ""));
}
function mapValues(sourceObj, mapper, options = {}) {
  const result = {};
  const keys = Object.keys(sourceObj);
  if (options.sort) {
    keys.sort();
  }
  for (const key of keys) {
    result[key] = mapper(sourceObj[key]);
  }
  return result;
}


/***/ }),

/***/ "./app/client/components/AceEditor.js":
/*!********************************************!*\
  !*** ./app/client/components/AceEditor.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ace = __webpack_require__(/*! ace-builds */ "./node_modules/ace-builds/src-noconflict/ace.js");
var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
__webpack_require__(/*! ace-builds/src-noconflict/mode-python */ "./node_modules/ace-builds/src-noconflict/mode-python.js");
__webpack_require__(/*! ace-builds/src-noconflict/theme-chrome */ "./node_modules/ace-builds/src-noconflict/theme-chrome.js");
__webpack_require__(/*! ace-builds/src-noconflict/theme-dracula */ "./node_modules/ace-builds/src-noconflict/theme-dracula.js");
__webpack_require__(/*! ace-builds/src-noconflict/ext-language_tools */ "./node_modules/ace-builds/src-noconflict/ext-language_tools.js");
var { setupAceEditorCompletions } = __webpack_require__(/*! ./AceEditorCompletions */ "./app/client/components/AceEditorCompletions.ts");
var { getGristConfig } = __webpack_require__(/*! ../../common/urlUtils */ "./app/common/urlUtils.ts");
var dom = __webpack_require__(/*! ../lib/dom */ "./app/client/lib/dom.js");
var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
var modelUtil = __webpack_require__(/*! ../models/modelUtil */ "./app/client/models/modelUtil.js");
function AceEditor(options) {
  options = options || {};
  this.observable = options.observable || null;
  this.saveValueOnBlurEvent = !(options.saveValueOnBlurEvent === false);
  this.calcSize = options.calcSize || ((_elem, size) => size);
  this.gristDoc = options.gristDoc || null;
  this.column = options.column || null;
  this.editorState = options.editorState || null;
  this._readonly = options.readonly || false;
  this.editor = null;
  this.editorDom = null;
  this.session = null;
  this._setupCallback = null;
  this._setupTimer = null;
  this.textPadding = 10;
}
dispose.makeDisposable(AceEditor);
AceEditor.prototype.buildDom = function(optSetupCallback) {
  this._fullDom = dom("div.code_editor_container", this.editorDom = dom("div"));
  this._setupCallback = optSetupCallback;
  this._setupTimer = setTimeout(() => this._setup(), 0);
  return this._fullDom;
};
AceEditor.prototype.onAttach = function() {
  if (this._setupTimer) {
    clearTimeout(this._setupTimer);
    this._setupTimer = null;
    this._setup();
  }
};
AceEditor.prototype.writeObservable = function() {
  if (this.observable) {
    modelUtil.setSaveValue(this.observable, this.getValue());
  }
};
AceEditor.prototype.getEditor = function() {
  return this.editor;
};
AceEditor.prototype.getValue = function() {
  return this.editor && this.editor.getValue();
};
AceEditor.prototype.setValue = function(val, optCursorPos) {
  this.editor.setValue(val, optCursorPos === 0 ? -1 : 1);
  if (optCursorPos > 0 && optCursorPos < val.length) {
    var pos = this.session.getDocument().indexToPosition(optCursorPos);
    this.editor.moveCursorTo(pos.row, pos.column);
  }
};
AceEditor.prototype.isBuilt = function() {
  return this.editor !== null;
};
AceEditor.prototype.enable = function(bool) {
  var editor = this.editor;
  editor.setReadOnly(!bool);
  editor.renderer.$cursorLayer.element.style.opacity = bool ? 100 : 0;
  editor.gotoLine(Infinity, Infinity);
};
AceEditor.prototype.attachCommandGroup = function(commandGroup) {
  _.each(commandGroup.knownKeys, (commandName, key) => {
    this.editor.commands.addCommand({
      name: commandName,
      readOnly: this._readonly,
      bindKey: {
        win: key,
        mac: key,
        sender: "editor|cli"
      },
      exec: () => !commandGroup.commands[commandName]()
    });
  });
};
AceEditor.prototype.attachSaveCommand = function() {
  if (!this.observable) {
    throw new Error("Cannot attach save command to editor with no bound observable");
  }
  this.editor.commands.addCommand({
    name: "saveFormula",
    bindKey: {
      sender: "editor|cli"
    },
    exec: () => {
      this.writeObservable();
      return true;
    }
  });
};
AceEditor.prototype.adjustContentToWidth = function() {
  var characterWidth = this.editor.renderer.characterWidth;
  var contentWidth = this.editor.renderer.scroller.clientWidth;
  if (contentWidth > 0) {
    this.editor.getSession().setWrapLimit(parseInt(contentWidth / characterWidth, 10) - 1);
  }
};
AceEditor.prototype.onChange = function() {
  if (this.editorState)
    this.editorState.set(this.getValue());
  this.resize();
};
AceEditor.prototype.setFontSize = function(pxVal) {
  this.editor.setFontSize(pxVal);
  this.resize();
};
AceEditor.prototype._setup = function() {
  var _a;
  this.editor = this.autoDisposeWith("destroy", ace.edit(this.editorDom));
  if (this.gristDoc && this.column) {
    const getSuggestions = (prefix) => {
      const section = this.gristDoc.viewModel.activeSection();
      if (!(section == null ? void 0 : section.getRowId())) {
        return [];
      }
      const tableId = section.table().tableId();
      const columnId = this.column.colId();
      const rowId = section.activeRowId();
      return this.gristDoc.docComm.autocomplete(prefix, tableId, columnId, rowId);
    };
    setupAceEditorCompletions(this.editor, { getSuggestions });
  }
  this.editor.setOptions({
    enableLiveAutocompletion: true
  });
  this.session = this.editor.getSession();
  this.session.setMode("ace/mode/python");
  const gristTheme = (_a = this.gristDoc) == null ? void 0 : _a.currentTheme;
  this._setAceTheme(gristTheme == null ? void 0 : gristTheme.get());
  if (!getGristConfig().enableCustomCss && gristTheme) {
    this.autoDispose(gristTheme.addListener((theme) => {
      this._setAceTheme(theme);
    }));
  }
  this.editor.renderer.setShowGutter(false);
  this.session.setTabSize(2);
  this.session.setUseWrapMode(true);
  this.editor.on("change", this.onChange.bind(this));
  this.editor.$blockScrolling = Infinity;
  this.editor.setFontSize(11);
  this.resize();
  if (this.observable) {
    var subscription = this.observable.subscribeInit((val) => {
      if (val !== void 0) {
        this.setValue(val);
      }
    });
    dom(this.editorDom, dom.autoDispose(subscription));
    if (this.saveValueOnBlurEvent) {
      this.editor.on("blur", () => {
        this.writeObservable();
      });
    }
  }
  if (this._setupCallback) {
    this._setupCallback.call(null, this.editor);
    this._setupCallback = null;
  }
};
AceEditor.prototype.resize = function() {
  var wrap = this.session.getUseWrapMode();
  var contentWidth = wrap ? 0 : this._getContentWidth();
  var contentHeight = this._getContentHeight();
  var desiredSize = {
    width: wrap ? 0 : contentWidth + this.textPadding,
    height: contentHeight
  };
  var size = this.calcSize(this._fullDom, desiredSize);
  if (size.height < contentHeight) {
    desiredSize.width += 20;
    size = this.calcSize(this._fullDom, desiredSize);
  }
  if (size.width < contentWidth) {
    desiredSize.height += 20;
    size = this.calcSize(this._fullDom, desiredSize);
  }
  this.editorDom.style.width = size.width ? Math.ceil(size.width) + "px" : "auto";
  this.editorDom.style.height = size.height ? Math.ceil(size.height) + "px" : "auto";
  this.editor.resize();
};
AceEditor.prototype._getContentWidth = function() {
  return this.session.getScreenWidth() * this.editor.renderer.characterWidth;
};
AceEditor.prototype._getContentHeight = function() {
  return Math.max(1, this.session.getScreenLength()) * this.editor.renderer.lineHeight;
};
AceEditor.prototype._setAceTheme = function(gristTheme) {
  const { enableCustomCss } = getGristConfig();
  const gristAppearance = gristTheme == null ? void 0 : gristTheme.appearance;
  const aceTheme = gristAppearance === "dark" && !enableCustomCss ? "dracula" : "chrome";
  this.editor.setTheme(`ace/theme/${aceTheme}`);
};
let _RangeConstructor = null;
AceEditor.makeRange = function(a, b, c, d) {
  _RangeConstructor = _RangeConstructor || ace.require("ace/range").Range;
  return new _RangeConstructor(a, b, c, d);
};
module.exports = AceEditor;


/***/ }),

/***/ "./app/client/components/Base.js":
/*!***************************************!*\
  !*** ./app/client/components/Base.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
function Base(gristDoc) {
  this.gristDoc = gristDoc;
  this._debugName = this.constructor.name + "[" + Base._nextObjectId + "]";
  this._eventNamespace = ".Events_" + Base._nextObjectId++;
  this._eventSources = [];
  this.autoDisposeCallback(this.clearEvents);
}
Base._nextObjectId = 1;
Base.setBaseFor = function(ctor) {
  ctor.prototype = Object.create(Base.prototype, {
    constructor: {
      value: ctor,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  dispose.makeDisposable(ctor);
};
Base.prototype.onEvent = function(source, eventType, optSelector, method) {
  if (typeof optSelector != "string") {
    method = optSelector;
    optSelector = null;
  }
  if (this._eventSources.indexOf(source) === -1)
    this._eventSources.push(source);
  var self = this;
  $(source).on(eventType + this._eventNamespace, optSelector, function(event_args) {
    Array.prototype.unshift.call(arguments, this);
    if (self._eventSources)
      return method.apply(self, arguments);
  });
};
Base.prototype.clearEvent = function(source, eventType) {
  $(source).off(eventType + this._eventNamespace);
};
Base.prototype.clearEvents = function() {
  var sources = this._eventSources;
  for (var i = 0; i < sources.length; i++) {
    $(sources[i]).off(this._eventNamespace);
  }
  this._eventSources.length = 0;
};
module.exports = Base;


/***/ }),

/***/ "./app/client/components/BaseView.js":
/*!*******************************************!*\
  !*** ./app/client/components/BaseView.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
const ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
const moment = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
const { nativeCompare, roundDownToMultiple, waitObs } = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
const gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
const MANUALSORT = (__webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts").MANUALSORT);
const gristTypes = __webpack_require__(/*! app/common/gristTypes */ "./app/common/gristTypes.ts");
const tableUtil = __webpack_require__(/*! ../lib/tableUtil */ "./app/client/lib/tableUtil.ts");
const { DataRowModel } = __webpack_require__(/*! ../models/DataRowModel */ "./app/client/models/DataRowModel.ts");
const { DynamicQuerySet } = __webpack_require__(/*! ../models/QuerySet */ "./app/client/models/QuerySet.ts");
const { SortFunc } = __webpack_require__(/*! app/common/SortFunc */ "./app/common/SortFunc.ts");
const rowset = __webpack_require__(/*! ../models/rowset */ "./app/client/models/rowset.ts");
const Base = __webpack_require__(/*! ./Base */ "./app/client/components/Base.js");
const { Cursor } = __webpack_require__(/*! ./Cursor */ "./app/client/components/Cursor.ts");
const FieldBuilder = __webpack_require__(/*! ../widgets/FieldBuilder */ "./app/client/widgets/FieldBuilder.ts");
const commands = __webpack_require__(/*! ./commands */ "./app/client/components/commands.ts");
const BackboneEvents = (__webpack_require__(/*! backbone */ "./node_modules/backbone/backbone.js").Events);
const { ClientColumnGetters } = __webpack_require__(/*! app/client/models/ClientColumnGetters */ "./app/client/models/ClientColumnGetters.ts");
const { reportError, reportSuccess } = __webpack_require__(/*! app/client/models/errors */ "./app/client/models/errors.ts");
const { urlState } = __webpack_require__(/*! app/client/models/gristUrlState */ "./app/client/models/gristUrlState.ts");
const { SectionFilter } = __webpack_require__(/*! app/client/models/SectionFilter */ "./app/client/models/SectionFilter.ts");
const { copyToClipboard } = __webpack_require__(/*! app/client/lib/clipboardUtils */ "./app/client/lib/clipboardUtils.ts");
const { setTestState } = __webpack_require__(/*! app/client/lib/testState */ "./app/client/lib/testState.ts");
const { ExtraRows } = __webpack_require__(/*! app/client/models/DataTableModelWithDiff */ "./app/client/models/DataTableModelWithDiff.ts");
const { createFilterMenu } = __webpack_require__(/*! app/client/ui/ColumnFilterMenu */ "./app/client/ui/ColumnFilterMenu.ts");
const { closeRegisteredMenu } = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
const { COMMENTS } = __webpack_require__(/*! app/client/models/features */ "./app/client/models/features.ts");
const { DismissedPopup } = __webpack_require__(/*! app/common/Prefs */ "./app/common/Prefs.ts");
const { markAsSeen } = __webpack_require__(/*! app/client/models/UserPrefs */ "./app/client/models/UserPrefs.ts");
const { buildConfirmDelete, reportUndo } = __webpack_require__(/*! app/client/components/modals */ "./app/client/components/modals.ts");
function BaseView(gristDoc, viewSectionModel, options) {
  var _a;
  Base.call(this, gristDoc);
  this.options = options || {};
  this.viewSection = viewSectionModel;
  this._name = this.viewSection.titleDef.peek();
  this.schemaModel = this.viewSection.table();
  this.comparison = this.gristDoc.comparison;
  this.tableModel = this.gristDoc.getTableModelMaybeWithDiff(this.schemaModel.tableId());
  this.extraRows = new ExtraRows(this.schemaModel.tableId(), this.comparison && this.comparison.details);
  this._queryRowSource = DynamicQuerySet.create(this, gristDoc.querySetManager, this.tableModel);
  this._mainRowSource = this._queryRowSource;
  if (this.comparison) {
    const extraRowIds = this.extraRows.getExtraRows();
    this._mainRowSource = rowset.ExtendedRowSource.create(this, this._mainRowSource, extraRowIds);
  }
  this._sectionFilter = SectionFilter.create(this, this.viewSection, this.tableModel.tableData);
  this._filteredRowSource = rowset.FilteredRowSource.create(this, this._sectionFilter.sectionFilterFunc.get());
  this._filteredRowSource.subscribeTo(this._mainRowSource);
  this.autoDispose(this._sectionFilter.sectionFilterFunc.addListener((filterFunc) => {
    this._filteredRowSource.updateFilter(filterFunc);
  }));
  this.rowSource = this._filteredRowSource;
  this.sortedRows = rowset.SortedRowSet.create(this, null, this.tableModel.tableData);
  this.sortFunc = new SortFunc(new ClientColumnGetters(this.tableModel, { unversioned: true }));
  this.autoDispose(this.viewSection.activeDisplaySortSpec.subscribeInit(function(spec) {
    this.sortFunc.updateSpec(spec);
    this.sortedRows.updateSort((rowId1, rowId2) => {
      var value = nativeCompare(rowId1 === "new", rowId2 === "new");
      return value || this.sortFunc.compare(rowId1, rowId2);
    });
  }, this));
  this.sortedRows.subscribeTo(this._filteredRowSource);
  this.newRowSource = rowset.RowSource.create(this);
  this.newRowSource.getAllRows = function() {
    return ["new"];
  };
  this.viewData = this.autoDispose(this.tableModel.createLazyRowsModel(this.sortedRows));
  this.editRowModel = this.autoDispose(this.tableModel.createFloatingRowModel());
  this.editRowModel._saveField = (colName, value) => this._saveEditRowField(this.editRowModel, colName, value);
  this.listenTo(this.viewData, "rowModelNotify", (rowModels) => this.onRowResize(rowModels));
  this.listenTo(this.viewSection.events, "rowHeightChange", this.onResize);
  this.autoDispose(commands.createGroup(BaseView.commonCommands, this, this.viewSection.hasFocus));
  this.linkedRowId = this.autoDispose(ko.computed(() => {
    let linking = this.viewSection.linkingState();
    return linking && linking.cursorPos ? linking.cursorPos() : null;
  }).extend({ deferred: true }));
  this.autoDispose(this.linkedRowId.subscribe((rowId) => {
    if (this.viewSection.linkingState.peek()) {
      this.setCursorPos({ rowId: rowId || "new" });
    }
  }));
  this.isLinkSource = this.autoDispose(ko.pureComputed(() => this.viewSection.linkedSections().all().length > 0));
  this.disableEditing = this.autoDispose(ko.computed(() => {
    const linking = this.viewSection.linkingState();
    return linking && linking.disableEditing();
  }));
  this.isPreview = (_a = this.options.isPreview) != null ? _a : false;
  this.enableAddRow = this.autoDispose(ko.computed(() => this.options.addNewRow && !this.viewSection.disableAddRemoveRows() && !this.disableEditing()));
  this.autoDispose(this.enableAddRow.subscribeInit((_enableAddRow) => {
    if (_enableAddRow) {
      this.sortedRows.subscribeTo(this.newRowSource);
    } else {
      this.sortedRows.unsubscribeFrom(this.newRowSource);
    }
  }));
  this._isLoading = ko.observable(true);
  this._pendingCursorPos = this.viewSection.lastCursorPos;
  console.log("%s BaseView viewSection %s (%s) lastCursorPos %s", this._debugName, this.viewSection.getRowId(), this.viewSection.table().tableId(), JSON.stringify(this.viewSection.lastCursorPos));
  this.cursor = this.autoDispose(Cursor.create(null, this, this.viewSection.lastCursorPos));
  this.currentColumn = this.autoDispose(ko.pureComputed(() => this.viewSection.viewFields().at(this.cursor.fieldIndex()).column()).extend({ rateLimit: 0 }));
  this.currentEditingColumnIndex = ko.observable(-1);
  this.fieldBuilders = this.autoDispose(FieldBuilder.createAllFieldWidgets(this.gristDoc, this.viewSection.viewFields, this.cursor, {
    isPreview: this.isPreview
  }));
  this.activeFieldBuilder = this.autoDispose(ko.pureComputed(() => this.fieldBuilders.at(this.cursor.fieldIndex())));
  this.selectedColumns = null;
  this.isTruncated = ko.observable(false);
  this.autoDispose(ko.computed(() => {
    this._isLoading(true);
    const linkingFilter = this.viewSection.linkingFilter();
    this._queryRowSource.makeQuery(linkingFilter.filters, linkingFilter.operations, (err) => {
      if (this.isDisposed()) {
        return;
      }
      if (err) {
        reportError(err);
      }
      this.onTableLoaded();
    });
  }));
  this.autoDispose(this.viewSection.linkingFilter.subscribe((x) => this.onLinkFilterChange()));
  this.autoDispose(this.viewSection.activeSortSpec.subscribe(() => this.setCursorPos({ rowIndex: 0 })));
  this.copySelection = ko.observable(null);
  this._isPrinting = ko.observable(false);
}
Base.setBaseFor(BaseView);
_.extend(Base.prototype, BackboneEvents);
BaseView.commonCommands = {
  input: function(init) {
    this.scrollToCursor(true).catch(reportError);
    this.activateEditorAtCursor({ init });
  },
  editField: function() {
    closeRegisteredMenu();
    this.scrollToCursor(true);
    this.activateEditorAtCursor();
  },
  insertRecordBefore: function() {
    this.insertRow(this.cursor.rowIndex());
  },
  insertRecordAfter: function() {
    this.insertRow(this.cursor.rowIndex() + 1);
  },
  insertCurrentDate: function() {
    this.insertCurrentDate(false);
  },
  insertCurrentDateTime: function() {
    this.insertCurrentDate(true);
  },
  copyLink: function() {
    this.copyLink().catch(reportError);
  },
  deleteRecords: function(source) {
    this.deleteRecords(source);
  },
  filterByThisCellValue: function() {
    this.filterByThisCellValue();
  },
  duplicateRows: function() {
    this._duplicateRows().catch(reportError);
  },
  openDiscussion: function() {
    this.openDiscussionAtCursor();
  }
};
BaseView.prototype.selectedRows = function() {
  return [];
};
BaseView.prototype.deleteRows = function(rowIds) {
  return this.tableModel.sendTableAction(["BulkRemoveRecord", rowIds]);
};
BaseView.prototype.deleteRecords = function(source) {
  const rowIds = this.selectedRows();
  if (this.viewSection.disableAddRemoveRows() || rowIds.length === 0) {
    return;
  }
  const isKeyboard = source instanceof KeyboardEvent;
  const popups = this.gristDoc.docPageModel.appModel.dismissedPopups;
  const popupName = DismissedPopup.check("deleteRecords");
  const onSave = async (remember) => {
    if (remember) {
      markAsSeen(popups, popupName);
    }
    return this.deleteRows(rowIds);
  };
  if (isKeyboard && !popups.get().includes(popupName)) {
    this.scrollToCursor();
    const selectedCell = this.viewPane.querySelector(".selected_cursor") || this.viewPane;
    buildConfirmDelete(selectedCell, onSave, rowIds.length <= 1);
  } else {
    onSave().then(() => {
      reportUndo(this.gristDoc, `You deleted ${rowIds.length} row${rowIds.length > 1 ? "s" : ""}.`);
      return true;
    });
  }
};
BaseView.prototype.setCursorPos = function(cursorPos) {
  if (this.isDisposed()) {
    return;
  }
  if (!this._isLoading.peek()) {
    this.cursor.setCursorPos(cursorPos);
  } else {
    this._pendingCursorPos = cursorPos;
    this.cursor.setLive(false);
  }
};
BaseView.prototype.getLoadingDonePromise = function() {
  return waitObs(this._isLoading, (value) => !value);
};
BaseView.prototype.activateEditorAtCursor = function(options) {
  var builder = this.activeFieldBuilder();
  if (builder.isEditorActive()) {
    return;
  }
  var rowId = this.viewData.getRowId(this.cursor.rowIndex());
  var lazyRow = this.getRenderedRowModel(rowId);
  if (!lazyRow) {
    return;
  }
  this.editRowModel.assign(rowId);
  builder.buildEditorDom(this.editRowModel, lazyRow, options || {});
};
BaseView.prototype.openDiscussionAtCursor = function(id) {
  if (!COMMENTS().get()) {
    return false;
  }
  var builder = this.activeFieldBuilder();
  if (builder.isEditorActive()) {
    return false;
  }
  var rowId = this.viewData.getRowId(this.cursor.rowIndex());
  var lazyRow = this.getRenderedRowModel(rowId);
  if (!lazyRow) {
    return false;
  }
  this.editRowModel.assign(rowId);
  builder.buildDiscussionPopup(this.editRowModel, lazyRow, id);
  return true;
};
BaseView.prototype.moveEditRowToCursor = function() {
  var rowId = this.viewData.getRowId(this.cursor.rowIndex());
  this.editRowModel.assign(rowId);
  return this.editRowModel;
};
BaseView.prototype.getAnchorLinkForSection = function(sectionId) {
  const rowId = this.viewData.getRowId(this.cursor.rowIndex()) || this.tableModel.tableData.findMatchingRowId({}) || "new";
  const fieldIndex = this.cursor.fieldIndex.peek();
  const field = fieldIndex !== null ? this.viewSection.viewFields().peek()[fieldIndex] : null;
  const colRef = field == null ? void 0 : field.colRef.peek();
  return { hash: { sectionId, rowId, colRef } };
};
BaseView.prototype.copyLink = async function() {
  const sectionId = this.viewSection.getRowId();
  const anchorUrlState = this.getAnchorLinkForSection(sectionId);
  try {
    const link = urlState().makeUrl(anchorUrlState);
    await copyToClipboard(link);
    setTestState({ clipboard: link });
    reportSuccess("Link copied to clipboard", { key: "clipboard" });
  } catch (e) {
    throw new Error("cannot copy to clipboard");
  }
};
BaseView.prototype.filterByThisCellValue = function() {
  const rowId = this.viewData.getRowId(this.cursor.rowIndex());
  const col = this.viewSection.viewFields().peek()[this.cursor.fieldIndex()].column();
  let value = this.tableModel.tableData.getValue(rowId, col.colId.peek());
  let filterValues;
  const colType = col.type.peek();
  if (gristTypes.isList(value) && gristTypes.isListType(colType)) {
    filterValues = value.slice(1);
    if (!filterValues.length) {
      filterValues = [colType === "ChoiceList" ? "" : null];
    }
  } else {
    if (Array.isArray(value)) {
      value = JSON.stringify(value);
    }
    filterValues = [value];
  }
  this.viewSection.setFilter(col.getRowId(), { filter: JSON.stringify({ included: filterValues }) });
};
BaseView.prototype.insertRow = function(index) {
  if (this.viewSection.disableAddRemoveRows() || this.disableEditing()) {
    return;
  }
  var rowId = this.viewData.getRowId(index);
  var insertPos = Number.isInteger(rowId) ? this.tableModel.tableData.getValue(rowId, "manualSort") : null;
  return this.sendTableAction(["AddRecord", null, { "manualSort": insertPos }]).then((rowId2) => {
    if (!this.isDisposed()) {
      this._sectionFilter.addTemporaryRow(rowId2);
      this.setCursorPos({ rowId: rowId2 });
    }
    return rowId2;
  });
};
BaseView.prototype._getDefaultColValues = function() {
  const linkingState = this.viewSection.linkingState.peek();
  if (!linkingState) {
    return {};
  }
  return linkingState.getDefaultColValues();
};
BaseView.prototype._enhanceAction = function(action) {
  if (action[0] === "AddRecord" || action[0] === "BulkAddRecord") {
    let colValues = this._getDefaultColValues();
    let rowIds = action[1];
    if (action[0] === "BulkAddRecord") {
      colValues = _.mapObject(colValues, (v) => rowIds.map(() => v));
    }
    Object.assign(colValues, action[2]);
    return [action[0], rowIds, colValues];
  } else {
    return action;
  }
};
BaseView.prototype.prepTableActions = function(actions) {
  actions = actions.map((a) => this._enhanceAction(a));
  actions.forEach((action_) => {
    action_.splice(1, 0, this.tableModel.tableData.tableId);
  });
  return actions;
};
BaseView.prototype.sendTableActions = function(actions, optDesc) {
  return this.tableModel.sendTableActions(actions.map((a) => this._enhanceAction(a)), optDesc);
};
BaseView.prototype.sendTableAction = function(action, optDesc) {
  return action ? this.tableModel.sendTableAction(this._enhanceAction(action), optDesc) : null;
};
BaseView.prototype.insertCurrentDate = function(withTime) {
  let column = this.currentColumn();
  if (column.isRealFormula()) {
    return;
  }
  let type = column.pureType();
  let value, now = Date.now();
  const docTimezone = this.gristDoc.docInfo.timezone.peek();
  if (type === "Text" || type === "Any") {
    value = moment.tz(now, docTimezone).format("YYYY-MM-DD" + (withTime ? " HH:mm:ss" : ""));
  } else if (type === "Date") {
    const offsetMinutes = moment.tz(now, docTimezone).utcOffset();
    value = roundDownToMultiple(now / 1e3 + offsetMinutes * 60, 24 * 3600);
  } else if (type === "DateTime") {
    value = now / 1e3;
  } else {
    return;
  }
  var rowId = this.viewData.getRowId(this.cursor.rowIndex());
  this.editRowModel.assign(rowId);
  this.editRowModel[column.colId()].setAndSave(value);
};
BaseView.prototype._saveEditRowField = function(editRowModel, colName, value) {
  if (editRowModel._isAddRow.peek()) {
    this.cursor.setLive(false);
    const colValues = this._getDefaultColValues();
    colValues[colName] = value;
    return editRowModel.updateColValues(colValues).then((rowId2) => {
      if (!this.isDisposed()) {
        this._sectionFilter.addTemporaryRow(rowId2);
        this.setCursorPos({ rowId: rowId2 });
      }
      return rowId2;
    }).finally(() => !this.isDisposed() && this.cursor.setLive(true));
  } else {
    var rowId = editRowModel.getRowId();
    var mainRowModel = this.getRenderedRowModel(rowId);
    if (mainRowModel) {
      mainRowModel[colName](value);
    }
    const ret = DataRowModel.prototype._saveField.call(editRowModel, colName, value).then((result) => {
      if (!this.isDisposed() && this.currentColumn().pureType() !== "Bool") {
        this._sectionFilter.addTemporaryRow(rowId);
      }
      return result;
    }).finally(() => !this.isDisposed() && mainRowModel && mainRowModel._assignColumn(colName));
    return this.viewSection.isSorted() ? ret : null;
  }
};
BaseView.prototype.copy = function(selection) {
  commands.allCommands.clearCopySelection.run();
  this.copySelection(selection);
  return {
    data: this.tableModel.tableData,
    selection
  };
};
BaseView.prototype.cut = function(selection) {
  commands.allCommands.clearCopySelection.run();
  this.copySelection(selection);
  return {
    data: this.tableModel.tableData,
    selection,
    cutCallback: () => tableUtil.makeDeleteAction(selection)
  };
};
BaseView.prototype.sendPasteActions = function(cutCallback, actions) {
  let cutAction = null;
  if (cutCallback) {
    cutAction = cutCallback();
    if (cutAction) {
      actions.unshift(cutAction);
    }
  }
  return this.gristDoc.docData.sendActions(actions);
};
BaseView.prototype.buildDom = function() {
  throw new Error("Not Implemented");
};
BaseView.prototype.buildTitleControls = function() {
  return null;
};
BaseView.prototype.onTableLoaded = function() {
  if (this._pendingCursorPos) {
    this.cursor.setCursorPos(this._pendingCursorPos);
    this._pendingCursorPos = null;
  }
  this._isLoading(false);
  this.isTruncated(this._queryRowSource.isTruncated);
  this.cursor.setLive(true);
};
BaseView.prototype.onResize = function() {
};
BaseView.prototype.onRowResize = function(rowModels) {
};
BaseView.prototype.onLinkFilterChange = function(rowId) {
  if (this.viewSection.linkingState.peek()) {
    this.setCursorPos({ rowIndex: 0 });
  }
};
BaseView.prototype.prepareToPrint = function(onOff) {
  this._isPrinting(onOff);
};
BaseView.prototype.getRenderedRowModel = function(rowId) {
  return this.viewData.getRowModel(rowId);
};
BaseView.prototype.getLastDataRowIndex = function() {
  let last = this.viewData.peekLength - 1;
  return last >= 0 && this.viewData.getRowId(last) === "new" ? last - 1 : last;
};
BaseView.prototype.createFilterMenu = function(openCtl, filterInfo, options) {
  const { showAllFiltersButton, onClose } = options;
  return createFilterMenu({
    openCtl,
    sectionFilter: this._sectionFilter,
    filterInfo,
    rowSource: this._mainRowSource,
    tableData: this.tableModel.tableData,
    gristDoc: this.gristDoc,
    showAllFiltersButton,
    onClose
  });
};
BaseView.prototype.isFiltered = function() {
  return this._filteredRowSource.getNumRows() < this.tableModel.tableData.numRecords();
};
BaseView.prototype.scrollToCursor = function() {
  return Promise.resolve();
};
BaseView.prototype._getRowInsertPos = function(index, numInserts) {
  var rowId = this.viewData.getRowId(index);
  var insertPos = this.tableModel.tableData.getValue(rowId, MANUALSORT);
  return Array(numInserts).fill(insertPos);
};
BaseView.prototype._duplicateRows = async function() {
  if (this.viewSection.disableAddRemoveRows() || this.disableEditing()) {
    return;
  }
  const selection = this.getSelection();
  const rowIds = selection.rowIds;
  const length = rowIds.length;
  const action = ["BulkAddRecord"];
  action.push(gutil.arrayRepeat(length, null));
  const columns = {};
  action.push(columns);
  const lastSelectedIndex = this.viewData.getRowIndex(rowIds[length - 1]);
  columns.manualSort = this._getRowInsertPos(lastSelectedIndex + 1, length);
  for (const col of this.viewSection.columns.peek()) {
    const colId = col.colId.peek();
    if (col.isFormula.peek()) {
      continue;
    }
    columns[colId] = rowIds.map((id) => this.tableModel.tableData.getValue(id, colId));
    if (columns[colId].every(gristTypes.isCensored)) {
      delete columns[colId];
    } else {
      columns[colId].forEach((val, i) => {
        if (gristTypes.isCensored(val)) {
          columns[colId][i] = null;
        }
      });
    }
  }
  const result = await this.sendTableAction(action, `Duplicated rows ${rowIds}`);
  return result;
};
module.exports = BaseView;


/***/ }),

/***/ "./app/client/lib/dispose.js":
/*!***********************************!*\
  !*** ./app/client/lib/dispose.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
var util = __webpack_require__(/*! util */ "./node_modules/util/util.js");
var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var G = (__webpack_require__(/*! ./browserGlobals */ "./app/client/lib/browserGlobals.js").get)("DocumentFragment", "Node");
class Disposable {
  constructor(...args) {
    safelyConstruct(this.create, this, args);
  }
  static create(...args) {
    return new this(...args);
  }
}
Object.assign(Disposable.prototype, {
  autoDispose: function(obj) {
    return this.autoDisposeWith(defaultDisposer, obj);
  },
  autoDisposePromise: function(objPromise) {
    return objPromise.then((obj) => {
      if (this.isDisposed()) {
        defaultDisposer(obj);
        return null;
      }
      this.autoDispose(obj);
      return obj;
    });
  },
  autoDisposeWith: function(disposer, obj) {
    var list = this._disposalList || (this._disposalList = []);
    list.push({
      obj,
      disposer: typeof disposer === "string" ? methodDisposer(disposer) : disposer
    });
    return obj;
  },
  autoDisposeCallback: function(callback) {
    this.autoDisposeWith(callFuncHelper, callback);
  },
  disposeRelease: function(obj) {
    removeObjectToDispose(this._disposalList, obj);
    return obj;
  },
  disposeDiscard: function(obj) {
    var entry = removeObjectToDispose(this._disposalList, obj);
    if (entry) {
      entry.disposer.call(this, obj);
    }
  },
  isDisposed: function() {
    return this._disposalList === WIPED_VALUE;
  },
  dispose: function() {
    if (this.isDisposed()) {
      return;
    }
    var disposalList = this._disposalList;
    this._disposalList = WIPED_VALUE;
    if (disposalList) {
      for (var i = disposalList.length - 1; i >= 0; i--) {
        var entry = disposalList[i];
        disposeHelper(this, entry.disposer, entry.obj);
      }
    }
    if (typeof this.stopListening === "function") {
      disposeHelper(this, callFuncHelper, this.stopListening);
    }
    wipeOutObject(this);
  }
});
exports.Disposable = Disposable;
function makeDisposable(Constructor) {
  Object.assign(Constructor.prototype, Disposable.prototype);
  Constructor.create = safeConstructor;
}
exports.makeDisposable = makeDisposable;
function safeCreate(Constructor, varArgs) {
  return safeConstructor.apply(Constructor, Array.prototype.slice.call(arguments, 1));
}
exports.safeCreate = safeCreate;
var safeConstructor = function(varArgs) {
  var Constructor = this;
  var obj = Object.create(Constructor.prototype);
  return safelyConstruct(Constructor, obj, arguments);
};
var safelyConstruct = function(Constructor, obj, args) {
  try {
    Constructor.apply(obj, args);
    return obj;
  } catch (e) {
    if (!e.printed) {
      let name = obj.constructor.name || Constructor.name;
      console.error("Error constructing %s:", name, e);
      if (_.isObject(e)) {
        e.printed = true;
      }
    }
    obj.dispose();
    throw e;
  }
};
var WIPED_VALUE = null;
function wipeOutObject(obj) {
  for (var k in obj) {
    if (obj.hasOwnProperty(k)) {
      obj[k] = WIPED_VALUE;
    }
  }
}
function removeObjectToDispose(disposalList, obj) {
  if (disposalList) {
    for (var i = 0; i < disposalList.length; i++) {
      if (disposalList[i].obj === obj) {
        var entry = disposalList[i];
        disposalList.splice(i, 1);
        return entry;
      }
    }
  }
  return null;
}
var callFuncHelper = function(callback) {
  callback.call(this);
};
function methodDisposer(methodName) {
  return function(obj) {
    obj[methodName]();
  };
}
function disposeHelper(owner, disposer, obj) {
  try {
    disposer.call(owner, obj);
  } catch (e) {
    console.error("While disposing %s, error disposing %s: %s", describe(owner), describe(obj), e);
  }
}
function describe(obj) {
  return obj && obj.constructor && obj.constructor.name ? obj.constructor.name : util.inspect(obj, { depth: 1 });
}
function defaultDisposer(obj) {
  if (obj instanceof G.Node) {
    ko.removeNode(obj);
  } else if (typeof obj.dispose === "function") {
    obj.dispose();
  } else {
    throw new Error("Object has no 'dispose' method");
  }
}
function emptyNode(node) {
  ko.virtualElements.emptyNode(node);
  ko.cleanNode(node);
}
exports.emptyNode = emptyNode;


/***/ }),

/***/ "./app/client/lib/koArray.js":
/*!***********************************!*\
  !*** ./app/client/lib/koArray.js ***!
  \***********************************/
/***/ ((module, exports, __webpack_require__) => {

var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
var Promise = __webpack_require__(/*! bluebird */ "./node_modules/bluebird/js/browser/bluebird.js");
var dispose = __webpack_require__(/*! ./dispose */ "./app/client/lib/dispose.js");
var gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
__webpack_require__(/*! ./koUtil */ "./app/client/lib/koUtil.js");
function koArray(optInitialValues) {
  return KoArray.create(optInitialValues);
}
module.exports = exports = koArray;
exports["default"] = koArray;
koArray.isKoArray = function(obj) {
  return obj && typeof obj.subscribe === "function" && typeof obj.all === "function";
};
exports.isKoArray = koArray.isKoArray;
koArray.syncedKoArray = function(koArrayObservable, optCallback, optCallbackTarget) {
  var ret = koArray();
  optCallback = optCallback || identity;
  ret.autoDispose(koArrayObservable.subscribeInit(function(currentArray) {
    if (koArray.isKoArray(currentArray)) {
      ret.syncMap(currentArray, optCallback, optCallbackTarget);
    } else if (currentArray) {
      ret.syncMapDisable();
      ret.assign(currentArray.map(function(item, i) {
        return optCallback.call(optCallbackTarget, item, i);
      }));
    }
  }));
  return ret;
};
exports.syncedKoArray = koArray.syncedKoArray;
function SyncedState(constructFunc, key) {
  constructFunc(this, key);
}
dispose.makeDisposable(SyncedState);
koArray.syncedMap = function(koArrayObj, constructFunc, options) {
  var map = /* @__PURE__ */ new Map();
  var sub = koArrayObj.subscribeForEach({
    add: (item) => map.set(item, SyncedState.create(constructFunc, item)),
    remove: (item) => gutil.popFromMap(map, item).dispose(),
    addDelay: options && options.addDelay
  });
  map.dispose = () => {
    sub.dispose();
    map.forEach((stateObj, item) => stateObj.dispose());
  };
  return map;
};
function KoArray(initialValues) {
  this._array = ko.observable(initialValues || []);
  this._preparedSpliceEvent = null;
  this._syncSubscription = null;
  this._disposeElements = noop;
  this.autoDispose(this._array.subscribe(this._emitPreparedEvent, this, "spectate"));
  this.autoDisposeCallback(function() {
    this._disposeElements(this.peek());
  });
}
exports.KoArray = KoArray;
dispose.makeDisposable(KoArray);
KoArray.prototype.setAutoDisposeValues = function() {
  this._disposeElements = this._doDisposeElements;
  return this;
};
KoArray.prototype.all = function() {
  return this._array();
};
KoArray.prototype.peek = function() {
  return this._array.peek();
};
KoArray.prototype.getObservable = function() {
  return this._array;
};
Object.defineProperty(KoArray.prototype, "peekLength", {
  configurable: false,
  enumerable: false,
  get: function() {
    return this._array.peek().length;
  }
});
KoArray.prototype.at = function(index) {
  var arr = this._array();
  return index >= 0 && index < arr.length ? arr[index] : null;
};
KoArray.prototype.assign = function(newValues) {
  var oldArray = this.peek();
  this._prepareSpliceEvent(0, newValues.length, oldArray);
  this._array(newValues.slice());
  this._disposeElements(oldArray);
};
KoArray.prototype.subscribe = function(callback, callbackTarget, event) {
  return this._array.subscribe(callback, callbackTarget, event);
};
KoArray.prototype._prepareSpliceEvent = function(start, numAdded, deleted) {
  this._preparedSpliceEvent = {
    array: null,
    start,
    added: numAdded,
    deleted
  };
};
KoArray.prototype._emitPreparedEvent = function() {
  var event = this._preparedSpliceEvent;
  if (event) {
    event.array = this.peek();
    this._preparedSpliceEvent = null;
    this._array.notifySubscribers(event, "spliceChange");
  }
};
KoArray.prototype._preChange = function() {
  this._array.valueWillMutate();
};
KoArray.prototype._postChange = function() {
  this._array.valueHasMutated();
};
KoArray.prototype._doDisposeElements = function(elements) {
  for (var i = 0; i < elements.length; i++) {
    elements[i].dispose();
  }
};
KoArray.prototype.push = function() {
  var array = this.peek();
  var start = array.length;
  this._preChange();
  var ret = array.push.apply(array, arguments);
  this._prepareSpliceEvent(start, arguments.length, []);
  this._postChange();
  return ret;
};
KoArray.prototype.unshift = function() {
  var array = this.peek();
  this._preChange();
  var ret = array.unshift.apply(array, arguments);
  this._prepareSpliceEvent(0, arguments.length, []);
  this._postChange();
  return ret;
};
KoArray.prototype.splice = function(start, optDeleteCount) {
  return this.arraySplice(start, optDeleteCount, Array.prototype.slice.call(arguments, 2));
};
KoArray.prototype.arraySplice = function(start, optDeleteCount, arrToInsert) {
  var array = this.peek();
  var len = array.length;
  var startIndex = Math.min(len, Math.max(0, start < 0 ? len + start : start));
  this._preChange();
  var ret = optDeleteCount === void 0 ? array.splice(start) : array.splice(start, optDeleteCount);
  gutil.arraySplice(array, startIndex, arrToInsert);
  this._prepareSpliceEvent(startIndex, arrToInsert.length, ret);
  this._postChange();
  this._disposeElements(ret);
  return ret;
};
KoArray.prototype.slice = function() {
  var array = this.all();
  return array.slice.apply(array, arguments);
};
KoArray.prototype.map = function(callback, optThis) {
  var newArray = new KoArray();
  newArray.syncMap(this, callback, optThis);
  return newArray;
};
function noop() {
}
function identity(x) {
  return x;
}
KoArray.prototype.syncMap = function(otherKoArray, optCallback, optCallbackTarget) {
  this.syncMapDisable();
  optCallback = optCallback || identity;
  this.assign(otherKoArray.peek().map(function(item, i) {
    return optCallback.call(optCallbackTarget, item, i);
  }));
  this._syncSubscription = this.autoDispose(otherKoArray.subscribe(function(splice) {
    var arr = splice.array;
    var newValues = [];
    for (var i = splice.start, n = 0; n < splice.added; i++, n++) {
      newValues.push(optCallback.call(optCallbackTarget, arr[i], i));
    }
    this.arraySplice(splice.start, splice.deleted.length, newValues);
  }, this, "spliceChange"));
};
KoArray.prototype.syncMapDisable = function() {
  if (this._syncSubscription) {
    this.disposeDiscard(this._syncSubscription);
    this._syncSubscription = null;
  }
};
KoArray.prototype.subscribeForEach = function(options) {
  var context = options.context;
  var onAdd = options.add || noop;
  var onRemove = options.remove || noop;
  var shouldDelay = typeof options.addDelay === "number";
  var subscription = this.subscribe(function(splice) {
    var i, arr = splice.array;
    for (i = 0; i < splice.deleted.length; i++) {
      onRemove.call(context, splice.deleted[i], this);
    }
    var callAdd = () => {
      var end = splice.start + splice.added;
      for (i = splice.start; i < end; i++) {
        onAdd.call(context, arr[i], i, this);
      }
    };
    if (!shouldDelay) {
      callAdd();
    } else if (options.addDelay > 0) {
      setTimeout(callAdd, options.addDelay);
    } else {
      Promise.resolve(null).then(callAdd);
    }
  }, this, "spliceChange");
  this.peek().forEach(function(item, i) {
    onAdd.call(context, item, i, this);
  }, this);
  return subscription;
};
KoArray.prototype.clampIndex = function(index) {
  var len = this.peekLength;
  return len === 0 ? null : gutil.clamp(index || 0, 0, len - 1);
};
KoArray.prototype.makeLiveIndex = function(optInitialIndex) {
  var index = ko.observable(this.clampIndex(optInitialIndex));
  var isLive = true;
  this.subscribe(function(splice) {
    var idx = index.peek();
    if (!isLive) {
      index(this.clampIndex(idx));
    } else if (idx === null) {
      index(this.clampIndex(0));
    } else if (idx >= splice.start + splice.deleted.length) {
      index(this.clampIndex(idx + splice.added - splice.deleted.length));
    } else if (idx >= splice.start + splice.added) {
      index(this.clampIndex(splice.start + splice.added));
    }
  }, this, "spliceChange");
  var ret = ko.pureComputed({
    read: index,
    write: function(val) {
      index(this.clampIndex(val));
    },
    owner: this
  });
  ret.setLive = (val) => {
    isLive = val;
  };
  return ret;
};


/***/ }),

/***/ "./app/client/lib/koDom.js":
/*!*********************************!*\
  !*** ./app/client/lib/koDom.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var G = (__webpack_require__(/*! ./browserGlobals */ "./app/client/lib/browserGlobals.js").get)("document", "Node");
var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
var dom = __webpack_require__(/*! ./dom */ "./app/client/lib/dom.js");
var koArray = __webpack_require__(/*! ./koArray */ "./app/client/lib/koArray.js");
function setBinding(elem, valueOrFunc, updaterFunc) {
  var subscription;
  if (ko.isObservable(valueOrFunc)) {
    subscription = valueOrFunc.subscribe(function(v) {
      updaterFunc(elem, v);
    });
    ko.utils.domNodeDisposal.addDisposeCallback(elem, function() {
      subscription.dispose();
    });
    updaterFunc(elem, valueOrFunc.peek());
  } else if (typeof valueOrFunc === "function") {
    valueOrFunc = ko.computed(valueOrFunc);
    subscription = valueOrFunc.subscribe(function(v) {
      updaterFunc(elem, v);
    });
    ko.utils.domNodeDisposal.addDisposeCallback(elem, function() {
      subscription.dispose();
      valueOrFunc.dispose();
    });
    updaterFunc(elem, valueOrFunc.peek());
  } else {
    updaterFunc(elem, valueOrFunc);
  }
}
exports.setBinding = setBinding;
function makeBinding(valueOrFunc, updaterFunc) {
  return function(elem) {
    setBinding(elem, valueOrFunc, updaterFunc);
  };
}
exports.makeBinding = makeBinding;
function text(valueOrFunc) {
  return function(elem) {
    var textNode = G.document.createTextNode("");
    setBinding(elem, valueOrFunc, function(elem2, value2) {
      textNode.nodeValue = value2;
    });
    elem.appendChild(textNode);
  };
}
exports.text = text;
function bootstrapToken(templateToken, valueOrFunc) {
  var clone = templateToken.cloneNode();
  setBinding(clone, valueOrFunc, function(e, value2) {
    clone.textContent = value2;
  });
  return clone;
}
exports.bootstrapToken = bootstrapToken;
function attr(attrName, valueOrFunc) {
  return makeBinding(valueOrFunc, function(elem, value2) {
    if (value2 === null || value2 === void 0) {
      elem.removeAttribute(attrName);
    } else {
      elem.setAttribute(attrName, value2);
    }
  });
}
exports.attr = attr;
function boolAttr(attrName, valueOrFunc) {
  return makeBinding(valueOrFunc, function(elem, value2) {
    if (!value2) {
      elem.removeAttribute(attrName);
    } else {
      elem.setAttribute(attrName, "");
    }
  });
}
exports.boolAttr = boolAttr;
function style(property, valueOrFunc) {
  return makeBinding(valueOrFunc, function(elem, value2) {
    if (property.startsWith("--")) {
      elem.style.setProperty(property, value2);
    } else {
      elem.style[property] = value2;
    }
  });
}
exports.style = style;
function show(boolValueOrFunc) {
  return makeBinding(boolValueOrFunc, function(elem, value2) {
    elem.style.display = value2 ? "" : "none";
  });
}
exports.show = show;
function hide(boolValueOrFunc) {
  return makeBinding(boolValueOrFunc, function(elem, value2) {
    elem.style.display = value2 ? "none" : "";
  });
}
exports.hide = hide;
function domData(key, valueOrFunc) {
  return makeBinding(valueOrFunc, function(elem, value2) {
    ko.utils.domData.set(elem, key, value2);
  });
}
exports.domData = domData;
function value(valueOrFunc) {
  return makeBinding(valueOrFunc, function(elem, value2) {
    if (elem.value !== value2) {
      elem.value = value2;
    }
  });
}
exports.value = value;
function toggleClass(className, boolValueOrFunc) {
  return makeBinding(boolValueOrFunc, function(elem, value2) {
    elem.classList.toggle(className, !!value2);
  });
}
exports.toggleClass = toggleClass;
function toggleDisabled(boolValueOrFunc) {
  return makeBinding(boolValueOrFunc, function(elem, disabled) {
    if (disabled) {
      elem.setAttribute("disabled", "disabled");
    } else {
      elem.removeAttribute("disabled");
    }
  });
}
exports.toggleDisabled = toggleDisabled;
function cssClass(valueOrFunc) {
  var prevClass;
  return makeBinding(valueOrFunc, function(elem, value2) {
    if (prevClass) {
      for (const name of prevClass.split(" ")) {
        elem.classList.remove(name);
      }
    }
    prevClass = value2;
    if (value2) {
      for (const name of value2.split(" ")) {
        elem.classList.add(name);
      }
    }
  });
}
exports.cssClass = cssClass;
function scrollChildIntoView(valueOrFunc) {
  return makeBinding(valueOrFunc, doScrollChildIntoView);
}
const indexKey = Symbol();
function doScrollChildIntoView(elem, index, sync) {
  if (index === null) {
    return Promise.resolve();
  }
  const scrolly = ko.utils.domData.get(elem, "scrolly");
  if (scrolly) {
    if (sync) {
      scrolly.scrollRowIntoView(index);
      elem[indexKey] = null;
      return Promise.resolve();
    } else {
      elem[indexKey] = index;
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          try {
            if (elem[indexKey] === null) {
              resolve();
              return;
            }
            if (!scrolly.isDisposed()) {
              scrolly.scrollRowIntoView(elem[indexKey]);
            }
            resolve();
          } catch (err) {
            reject(err);
          } finally {
            elem[indexKey] = null;
          }
        }, 0);
      });
    }
  } else {
    const child = elem.children[index];
    if (child) {
      if (index === 0) {
        elem.scrollTop = 0;
      }
      const childRect = child.getBoundingClientRect();
      const parentRect = elem.getBoundingClientRect();
      if (childRect.top < parentRect.top) {
        child.scrollIntoView(true);
      } else if (childRect.bottom > parentRect.bottom) {
        child.scrollIntoView(false);
      }
    }
  }
  return Promise.resolve();
}
exports.scrollChildIntoView = scrollChildIntoView;
exports.doScrollChildIntoView = doScrollChildIntoView;
function scope(valueOrFunc, contentFunc) {
  var marker, contentNodes = [];
  return makeBinding(valueOrFunc, function(elem, value2) {
    if (!marker) {
      marker = elem.appendChild(G.document.createComment(""));
    }
    var content = dom.frag(contentFunc(value2));
    for (var i = 0; i < contentNodes.length; i++) {
      if (contentNodes[i].parentNode === elem) {
        ko.removeNode(contentNodes[i]);
      }
    }
    contentNodes.length = 0;
    var next = marker.nextSibling;
    elem.insertBefore(content, next);
    for (var n = marker.nextSibling; n !== next; n = n.nextSibling) {
      contentNodes.push(n);
    }
  });
}
exports.scope = scope;
function maybe(boolValueOrFunc, contentFunc) {
  return scope(boolValueOrFunc, function(yesNo) {
    return yesNo ? contentFunc(yesNo) : null;
  });
}
exports.maybe = maybe;
function foreach(data, itemCreateFunc) {
  var marker;
  var children = [];
  return function(elem) {
    if (!marker) {
      marker = elem.appendChild(G.document.createComment(""));
    }
    var spliceFunc = function(splice) {
      var i, start = splice.start;
      var deletedElems = children.splice(start, splice.deleted.length);
      for (i = 0; i < deletedElems.length; i++) {
        if (deletedElems[i] && deletedElems[i].parentNode === elem) {
          ko.removeNode(deletedElems[i]);
        }
      }
      if (splice.added > 0) {
        var frag = G.document.createDocumentFragment();
        var spliceArgs = [start, 0];
        for (i = 0; i < splice.added; i++) {
          var itemModel = splice.array[start + i];
          var insertEl = itemCreateFunc(itemModel);
          if (insertEl) {
            ko.utils.domData.set(insertEl, "itemModel", itemModel);
            frag.appendChild(insertEl);
          }
          spliceArgs.push(insertEl);
        }
        Array.prototype.splice.apply(children, spliceArgs);
        var baseElem = marker;
        for (i = start - 1; i >= 0; i--) {
          if (children[i] && children[i].parentNode === elem) {
            baseElem = children[i];
            break;
          }
        }
        elem.insertBefore(frag, baseElem.nextSibling);
      }
    };
    var array = data;
    if (koArray.isKoArray(data)) {
      var subscription = data.subscribe(spliceFunc, null, "spliceChange");
      ko.utils.domNodeDisposal.addDisposeCallback(elem, function() {
        subscription.dispose();
      });
      array = data.all();
    } else if (!Array.isArray(data)) {
      throw new Error("koDom.foreach applied to non-array: " + data);
    }
    spliceFunc({ array, start: 0, added: array.length, deleted: [] });
  };
}
exports.foreach = foreach;


/***/ }),

/***/ "./app/client/lib/koForm.js":
/*!**********************************!*\
  !*** ./app/client/lib/koForm.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var G = (__webpack_require__(/*! ./browserGlobals */ "./app/client/lib/browserGlobals.js").get)("$", "window", "document");
const identity = __webpack_require__(/*! lodash/identity */ "./node_modules/lodash/identity.js");
const defaults = __webpack_require__(/*! lodash/defaults */ "./node_modules/lodash/defaults.js");
const debounce = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
const pick = __webpack_require__(/*! lodash/pick */ "./node_modules/lodash/pick.js");
var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
var Promise = __webpack_require__(/*! bluebird */ "./node_modules/bluebird/js/browser/bluebird.js");
var gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
var commands = __webpack_require__(/*! ../components/commands */ "./app/client/components/commands.ts");
var dom = __webpack_require__(/*! ./dom */ "./app/client/lib/dom.js");
var kd = __webpack_require__(/*! ./koDom */ "./app/client/lib/koDom.js");
var koArray = __webpack_require__(/*! ./koArray */ "./app/client/lib/koArray.js");
var modelUtil = __webpack_require__(/*! ../models/modelUtil */ "./app/client/models/modelUtil.js");
var setSaveValue = modelUtil.setSaveValue;
exports.button = function(clickFunc, ...moreContentArgs) {
  return dom("div.kf_button.flexitem", dom.on("click", function() {
    if (!this.classList.contains("disabled")) {
      clickFunc();
    }
  }), moreContentArgs);
};
exports.accentButton = function(clickFunc, ...moreContentArgs) {
  return this.button(clickFunc, { "class": "kf_button flexitem accent" }, moreContentArgs);
};
exports.liteButton = function(clickFunc, ...moreContentArgs) {
  return this.button(clickFunc, { "class": "kf_button flexitem lite" }, moreContentArgs);
};
exports.logoButton = function(clickFunc, logoUrl, text, ...moreContentArgs) {
  return this.button(clickFunc, { "class": "kf_button kf_logo_button flexitem flexhbox" }, dom("div.kf_btn_logo", { style: `background-image: url(${logoUrl})` }), dom("div.kf_btn_text", text), moreContentArgs);
};
exports.buttonGroup = function(moreButtonArgs) {
  return dom("div.kf_button_group.kf_elem.flexhbox", dom.fwdArgs(arguments, 0));
};
exports.accentButtonGroup = function(moreButtonArgs) {
  return this.buttonGroup([{ "class": "kf_button_group kf_elem flexhbox accent" }].concat(dom.fwdArgs(arguments, 0)));
};
exports.liteButtonGroup = function(moreButtonArgs) {
  return this.buttonGroup([{ "class": "kf_button_group kf_elem flexhbox lite" }].concat(dom.fwdArgs(arguments, 0)));
};
exports.checkButton = function(valueObservable, moreContentArgs) {
  return dom("div.kf_button.kf_check_button.flexitem", kd.toggleClass("active", valueObservable), dom.on("click", function() {
    if (!this.classList.contains("disabled")) {
      setSaveValue(valueObservable, !valueObservable());
    }
  }), dom.fwdArgs(arguments, 1));
};
exports.flatCheckButton = function(valueObservable, moreContentArgs) {
  return dom("div.flexnone", kd.toggleClass("mod-active", valueObservable), dom.on("click", function() {
    if (!this.classList.contains("mod-disabled")) {
      setSaveValue(valueObservable, !valueObservable());
    }
  }), dom.fwdArgs(arguments, 1));
};
exports.buttonSelect = function(valueObservable, moreButtonArgs) {
  var groupElem = dom("div.kf_button_group.kf_elem.flexhbox", dom.fwdArgs(arguments, 1));
  G.$(groupElem).on("click", ".kf_button:not(.disabled)", function() {
    setSaveValue(valueObservable, ko.utils.domData.get(this, "kfOptionValue"));
  });
  kd.makeBinding(valueObservable, function(groupElem2, value) {
    Array.prototype.forEach.call(groupElem2.querySelectorAll(".kf_button"), function(elem, i) {
      var v = ko.utils.domData.get(elem, "kfOptionValue");
      elem.classList.toggle("active", v === value);
    });
  })(groupElem);
  return groupElem;
};
exports.optionButton = function(value, moreContentArgs) {
  return dom("div.kf_button.flexitem", function(elem) {
    ko.utils.domData.set(elem, "kfOptionValue", value);
  }, dom.fwdArgs(arguments, 1));
};
exports.toolTip = function(contentArgs) {
  return dom("div.kf_tooltip", dom("div.kf_tooltip_pointer"), dom("div.kf_tooltip_content", dom.fwdArgs(arguments, 0)), dom.defer(function(elem) {
    var elemWidth = elem.getBoundingClientRect().width;
    var parentRect = elem.parentNode.getBoundingClientRect();
    elem.style.left = -elemWidth / 2 + parentRect.width / 2 + "px";
    elem.style.top = parentRect.height + "px";
  }));
};
exports.prompt = function(contentArgs) {
  return dom("div.kf_prompt", dom("div.kf_prompt_pointer"), dom("div.kf_prompt_pointer_overlap"), dom("div.kf_prompt_content", dom.fwdArgs(arguments, 0)));
};
exports.checkbox = function(valueObservable, moreContentArgs) {
  return dom("label.kf_checkbox_label.kf_elem", dom("input.kf_checkbox", { type: "checkbox" }, kd.makeBinding(valueObservable, function(elem, value) {
    elem.checked = value;
  }), dom.on("change", function() {
    setSaveValue(valueObservable, this.checked);
  })), dom.fwdArgs(arguments, 1));
};
exports.radio = function(value, valueObservable, ...domArgs) {
  return dom("label.kf_radio_label", dom("input.kf_radio", { type: "radio" }, kd.makeBinding(valueObservable, (elem, val) => {
    elem.checked = val === value;
  }), dom.on("change", function() {
    if (this.checked) {
      setSaveValue(valueObservable, value);
    }
  })), ...domArgs);
};
function genSpinner(valueObservable, getNewValue, shouldDisable) {
  let timeout = null;
  let origValue = null;
  function startChange(elem, direction) {
    stopAutoRepeat();
    G.$(G.window).on("mouseup", onMouseUp);
    origValue = valueObservable.peek();
    doChange(direction, true);
  }
  function onMouseUp() {
    G.$(G.window).off("mouseup", onMouseUp);
    stopAutoRepeat();
    setSaveValue(valueObservable, valueObservable.peek(), origValue);
  }
  function doChange(direction, isFirst) {
    const newValue = getNewValue(valueObservable.peek(), direction);
    if (newValue !== valueObservable.peek()) {
      valueObservable(newValue);
      timeout = setTimeout(doChange, isFirst ? 600 : 100, direction, false);
    }
  }
  function stopAutoRepeat() {
    if (timeout) {
      clearTimeout(timeout);
      timeout = null;
    }
  }
  return dom("div.kf_spinner", dom("div.kf_spinner_half", dom("div.kf_spinner_arrow.up"), kd.toggleClass("disabled", () => shouldDisable(valueObservable(), 1)), dom.on("mousedown", () => {
    startChange(this, 1);
  })), dom("div.kf_spinner_half", dom("div.kf_spinner_arrow.down"), kd.toggleClass("disabled", () => shouldDisable(valueObservable(), -1)), dom.on("mousedown", () => {
    startChange(this, -1);
  })), dom.on("dblclick", () => false));
}
exports.spinner = function(valueObservable, stepSizeObservable, optMin, optMax) {
  var max = optMax !== void 0 ? optMax : Infinity;
  var min = optMin !== void 0 ? optMin : -Infinity;
  function getNewValue(value, direction) {
    const step = (ko.unwrap(stepSizeObservable) || 1) * direction;
    value = value || 0;
    value = Math.round(value / step) * step + step;
    value = parseFloat(value.toPrecision(15));
    return gutil.clamp(value, min, max);
  }
  function shouldDisable(value, direction) {
    return direction > 0 ? value >= max : value <= min;
  }
  return genSpinner(valueObservable, getNewValue, shouldDisable);
};
exports.selectSpinner = function(valueObservable, optionObservable) {
  function getNewValue(value, direction) {
    const choices = optionObservable.peek();
    const index = choices.indexOf(value);
    const newIndex = gutil.mod(index + direction, choices.length);
    return choices[newIndex];
  }
  function shouldDisable(value, direction) {
    return optionObservable().length <= 1;
  }
  return genSpinner(valueObservable, getNewValue, shouldDisable);
};
exports.alignmentSelector = function(valueObservable) {
  return this.buttonSelect(valueObservable, this.optionButton("left", dom("span.glyphicon.glyphicon-align-left"), dom.testId("koForm_alignLeft")), this.optionButton("center", dom("span.glyphicon.glyphicon-align-center"), dom.testId("koForm_alignCenter")), this.optionButton("right", dom("span.glyphicon.glyphicon-align-right"), dom.testId("koForm_alignRight")));
};
exports.collapserLabel = function(isCollapsedObs, moreContentArgs) {
  return dom("div.kf_collapser.kf_elem", dom("span.kf_triangle_toggle", kd.text(function() {
    return isCollapsedObs() ? "\u25BA" : "\u25BC";
  })), dom.on("click", function() {
    isCollapsedObs(!isCollapsedObs.peek());
  }), dom.fwdArgs(arguments, 1));
};
exports.collapsible = function(contentFunc, isMountedCollapsed) {
  var isCollapsed = ko.observable(isMountedCollapsed === void 0 ? true : isMountedCollapsed);
  var content = contentFunc(isCollapsed);
  return [
    content[0],
    dom("div", kd.hide(isCollapsed), dom.fwdArgs(content, 1))
  ];
};
exports.draggableList = function(contentArray, itemCreateFunc, options) {
  options = options || {};
  defaults(options, {
    removeButton: true,
    axis: "y",
    drag_indicator: true,
    itemClass: "kf_draggable__item"
  });
  var reorderFunc, removeFunc;
  itemCreateFunc = itemCreateFunc || identity;
  var list = dom("div.kf_drag_container", function(elem) {
    if (options.reorder) {
      reorderFunc = Promise.method(options.reorder);
      ko.utils.domData.set(elem, "reorderFunc", reorderFunc);
    }
    if (options.remove) {
      removeFunc = Promise.method(options.remove);
      ko.utils.domData.set(elem, "removeFunc", removeFunc);
    }
    if (options.receive) {
      ko.utils.domData.set(elem, "receiveFunc", Promise.method(options.receive));
    }
  }, kd.foreach(contentArray, (item) => {
    var row = itemCreateFunc(item);
    if (row) {
      return dom("div.kf_draggable", dom.on("mousedown", () => G.document.activeElement.blur()), kd.cssClass(options.itemClass), options.drag_indicator ? typeof options.drag_indicator === "boolean" ? dom("span.kf_drag_indicator.glyphicon.glyphicon-option-vertical") : options.drag_indicator() : null, kd.style("display", options.axis === "x" ? "inline-block" : "block"), kd.domData("model", item), kd.maybe(removeFunc !== void 0 && options.removeButton, function() {
        return dom("span.drag_delete.glyphicon.glyphicon-remove", dom.on("click", function() {
          removeFunc(item).catch(function(err) {
            console.warn("Failed to remove item", err);
          });
        }));
      }), dom("span.kf_draggable_content.flexauto", row));
    } else {
      return null;
    }
  }));
  G.$(list).sortable({
    axis: options.axis,
    tolerance: "pointer",
    forcePlaceholderSize: true,
    placeholder: "kf_draggable__placeholder--" + (options.axis === "x" ? "horizontal" : "vertical")
  });
  if (reorderFunc === void 0) {
    G.$(list).sortable("option", { disabled: true });
  }
  G.$(list).on("sortstart", function(e, ui) {
    ko.utils.domData.set(ui.item[0], "originalParent", ui.item.parent());
    ko.utils.domData.set(ui.item[0], "originalPrev", ui.item.prev());
  });
  G.$(list).on("sortstop", function(e, ui) {
    if (!ko.utils.domData.get(ui.item[0], "crossedContainers")) {
      handleReorderStop.bind(null, list).call(this, e, ui);
    } else {
      handleConnectedStop.call(list, e, ui);
    }
  });
  return list;
};
function handleReorderStop(container, e, ui) {
  var reorderFunc = ko.utils.domData.get(container, "reorderFunc");
  var originalPrev = ko.utils.domData.get(ui.item[0], "originalPrev");
  if (reorderFunc && !ui.item.prev().is(originalPrev)) {
    var movingItem = ko.utils.domData.get(ui.item[0], "model");
    reorderFunc(movingItem, getNextDraggableItemModel(ui.item)).catch(function(err) {
      console.warn("Failed to reorder item", err);
      G.$(container).sortable("cancel");
    });
  }
  resetDraggedItem(ui.item[0]);
}
function handleConnectedStop(e, ui) {
  var originalParent = ko.utils.domData.get(ui.item[0], "originalParent");
  var removeOriginal = ko.utils.domData.get(originalParent[0], "removeFunc");
  var receive = ko.utils.domData.get(ui.item.parent()[0], "receiveFunc");
  if (removeOriginal && receive) {
    removeOriginal(ko.utils.domData.get(ui.item[0], "model")).then(function(removedItem) {
      return receive(removedItem, getNextDraggableItemModel(ui.item)).then(function() {
        ui.item.remove();
      }).catch(revertRemovedItem.bind(null, ui, originalParent, removedItem));
    }).catch(function(err) {
      console.warn("Error removing item", err);
      G.$(originalParent).sortable("cancel");
    }).finally(function() {
      resetDraggedItem(ui.item[0]);
    });
  } else {
    console.warn("Missing remove or receive");
  }
}
function revertRemovedItem(ui, parent, item, err) {
  console.warn("Error receiving item. Trying to return removed item.", err);
  var originalReceiveFunc = ko.utils.domData.get(parent[0], "receiveFunc");
  if (originalReceiveFunc) {
    var originalPrev = ko.utils.domData.get(ui.item[0], "originalPrev");
    var originalNextItem = originalPrev.length > 0 ? getNextDraggableItemModel(originalPrev) : getDraggableItemModel(parent.children(".kf_draggable").first());
    originalReceiveFunc(item, originalNextItem).catch(function(err2) {
      console.warn("Failed to receive item in original collection.", err2);
    }).finally(function() {
      ui.item.remove();
    });
  }
}
function getDraggableItemModel(elem) {
  if (elem.length && elem.length > 0) {
    return ko.utils.domData.get(elem[0], "model");
  }
  return null;
}
function getNextDraggableItemModel(elem) {
  return elem.next ? getDraggableItemModel(elem.next(".kf_draggable")) : null;
}
function resetDraggedItem(elem) {
  ko.utils.domData.set(elem, "originalPrev", null);
  ko.utils.domData.set(elem, "originalParent", null);
  ko.utils.domData.set(elem, "crossedContainers", false);
}
function enableDraggableConnection(draggable) {
  G.$(draggable).on("sortremove", function(e, ui) {
    ko.utils.domData.set(ui.item[0], "crossedContainers", true);
    ko.utils.domData.set(ui.item[0], "stopIndex", ui.item.index());
  });
  if (G.$(draggable).sortable("option", "disabled") && (ko.utils.domData.get(draggable, "receiveFunc") || ko.utils.domData.get(draggable, "removeFunc"))) {
    G.$(draggable).sortable("option", { disabled: false });
  }
}
function connectDraggableToClass(draggable, className) {
  enableDraggableConnection(draggable);
  G.$(draggable).addClass(className);
  G.$(draggable).sortable("option", { connectWith: "." + className });
}
var connectedDraggables = 0;
exports.connectAllDraggables = function(draggableArgs) {
  if (draggableArgs.length < 2) {
    console.warn("connectAllDraggables requires at least 2 draggable components");
  }
  var className = "connected-draggable-" + connectedDraggables++;
  for (var i = 0; i < arguments.length; i++) {
    connectDraggableToClass(arguments[i], className);
  }
};
exports.connectDraggableOneWay = function(fromDraggable, toDraggable) {
  fromDraggable.id = "connected-draggable-" + connectedDraggables++;
  toDraggable.id = "connected-draggable-" + connectedDraggables++;
  enableDraggableConnection(fromDraggable);
  enableDraggableConnection(toDraggable);
  G.$(fromDraggable).sortable("option", { connectWith: "#" + toDraggable.id });
};
exports.label = function(moreContentArgs) {
  return dom("div.kf_label.kf_elem", dom.fwdArgs(arguments, 0));
};
exports.lightLabel = function(moreContentArgs) {
  return dom("div.kf_light_label.kf_elem", dom.fwdArgs(arguments, 0));
};
exports.midTabs = function(optObservable) {
  return _initTabs(optObservable, ".kf_mid_tab_label", dom("div.flexitem.kf_mid_tabs", dom("div.flexhbox.flexnone.kf_mid_tab_labels"), exports.scrollable()));
};
exports.midTab = function(label, moreContentArgs) {
  return _addTab(".kf_mid_tabs", dom("div.kf_mid_tab_label.flexitem", label), dom("div.kf_mid_tab_content", dom.fwdArgs(arguments, 1)));
};
exports.numText = function(valueObservable, options) {
  var attr = { type: "number" };
  options = options || {};
  if (options.placeholder)
    attr.placeholder = options.placeholder;
  if (typeof options.min !== "undefined")
    attr.min = options.min;
  if (typeof options.max !== "undefined")
    attr.max = options.max;
  return dom("div.kf_elem", dom("input.kf_num_text", attr, kd.value(valueObservable), dom.on("input", function() {
    setSaveValue(valueObservable, Number(this.value));
  })));
};
function textInput(valueObservable, options, moreArgs) {
  var attr = {};
  if (options) {
    if (options.type) {
      attr.type = options.type;
    }
    if (options.maxSize) {
      attr.maxlength = options.maxSize;
      attr.style = "max-width: " + (options.maxSize + 2) + "em";
    }
    if (options.placeholder) {
      attr.placeholder = options.placeholder;
    }
  }
  var saveValue = (e) => setSaveValue(valueObservable, e.target.value);
  var debounced = debounce(saveValue, options.delay);
  var setValue = (elem) => {
    if (options && options.delay) {
      dom(elem, dom.on("input", debounced), dom.on("change", (e) => {
        debounced(e);
        debounced.flush();
      }));
    } else {
      dom(elem, dom.on("change", saveValue));
    }
  };
  return dom("div.kf_elem", dom("input.kf_text", attr, kd.toggleDisabled(options.disabled || false), kd.value(valueObservable), setValue, dom.fwdArgs(arguments, 2)));
}
exports.text = function(valueObservable, options, ...moreArgs) {
  options = Object.assign({ type: "text" }, options || {});
  return textInput(valueObservable, options, moreArgs);
};
exports.color = function(valueObservable, ...moreArgs) {
  const saveValue = debounce((e) => setSaveValue(valueObservable, e.target.value), 300);
  return dom("div.kf_elem", dom("input.kf_color", { type: "color" }, kd.value(valueObservable), dom.on("change", saveValue), ...moreArgs));
};
exports.password = function(valueObservable, options, ...moreArgs) {
  options = Object.assign({ type: "password" }, options || {});
  return textInput(valueObservable, options, moreArgs);
};
exports.statusPanel = function(valueObservable, options) {
  var statusMap = {};
  ["success", "info", "warning", "error"].forEach(function(key) {
    var statusLookupValue;
    if (options[key]) {
      statusLookupValue = options[key].value !== void 0 ? options[key].value : options[key];
      statusMap[statusLookupValue] = {};
      statusMap[statusLookupValue].className = "kf_status_" + key;
      statusMap[statusLookupValue].label = options[key].label || null;
    }
  });
  var hasLabel = ko.pureComputed(function() {
    return statusMap[valueObservable()].label !== void 0;
  });
  return dom("div.kf_status_panel.flexhbox", dom.autoDispose(hasLabel), dom("div.kf_status_indicator.flexauto", kd.cssClass(function() {
    if (statusMap[valueObservable()]) {
      return statusMap[valueObservable()].className;
    }
    console.error("Status must match an available status code", Object.keys(statusMap));
  }), "\u25CF"), dom("div.kf_status_detail.flexauto", kd.maybe(options.heading, function() {
    return exports.row(exports.label(options.heading));
  }), kd.maybe(hasLabel, function() {
    return exports.row(exports.lightLabel(kd.text(ko.pureComputed(function() {
      return statusMap[valueObservable()].label;
    }))));
  })));
};
exports.editableLabel = function(valueObservable, optToggleObservable) {
  var isEditing = optToggleObservable || ko.observable(false);
  var cancelEdit = false;
  var editingCommands = {
    cancel: function() {
      cancelEdit = true;
      isEditing(false);
    },
    accept: function() {
      cancelEdit = false;
      isEditing(false);
    }
  };
  var contentSizer;
  return dom("div.kf_editable_label", dom("div.kf_elabel_text", kd.text(valueObservable), kd.hide(isEditing)), contentSizer = dom("div.elabel_content_measure"), !optToggleObservable ? dom.on("click", () => isEditing(true)) : null, kd.maybe(isEditing, function() {
    var commandGroup = commands.createGroup(editingCommands, this, true);
    return dom("input.kf_elabel_input", { type: "text" }, (elem) => dom.hide(elem), kd.value(valueObservable), dom.autoDispose(commandGroup), commandGroup.attach(), dom.on("blur", function() {
      isEditing(false);
    }), dom.on("change", function() {
      isEditing(false);
    }), dom.on("input", function() {
      _resizeElem(this, contentSizer);
    }), dom.onDispose((elem) => {
      if (!cancelEdit && valueObservable() !== elem.value) {
        setSaveValue(valueObservable, elem.value);
      }
    }), dom.defer(function(elem) {
      cancelEdit = false;
      _resizeElem(elem, contentSizer);
      dom.show(elem);
      elem.focus();
      elem.select();
    }));
  }));
};
function _resizeElem(elem, contentSizer) {
  contentSizer.textContent = elem.value;
  var rect = contentSizer.getBoundingClientRect();
  elem.style.width = Math.ceil(rect.width) + "px";
}
exports.row = function(childOrColSpanArgs) {
  var colSpan = 1;
  var elem = dom("div.kf_row.flexhbox");
  for (var i = 0; i < arguments.length; i++) {
    var arg = arguments[i];
    if (typeof arg === "number") {
      colSpan = arg;
    } else if (typeof arg === "function") {
      arg(elem);
    } else if (typeof arg !== "undefined") {
      if (typeof arg === "string" || Array.isArray(arg)) {
        arg = dom("div", arg);
      }
      arg.style.flex = arg.style.webkitFlex = colSpan + " 1 0px";
      elem.appendChild(arg);
      colSpan = 1;
    }
  }
  return elem;
};
exports.helpRow = function(childOrColSpan) {
  var elem = exports.row.apply(null, arguments);
  elem.classList.add("kf_help_row");
  return elem;
};
exports.scrollable = function(contentArgs) {
  var elem, shadow;
  return [
    dom("div.flexnone.kf_scroll_shadow_outer", shadow = dom("div.kf_scroll_shadow", dom.hide)),
    elem = dom("div.flexitem.kf_scrollable", dom.on("scroll", function() {
      shadow.style.display = elem.scrollTop > 0 ? "" : "none";
    }), dom.fwdArgs(arguments, 0))
  ];
};
exports.select = function(valueObservable, optionArray, options) {
  options = options || {};
  var setValue = (elem, value) => {
    let valuesSet = new Set(options.multiple ? value : [value]);
    for (let option of elem.querySelectorAll("option")) {
      option.selected = valuesSet.has(ko.utils.domData.get(option, "value"));
    }
  };
  return dom("div.kf_elem", dom("div.kf_select_arrow", dom("select.kf_select", pick(options, ["size", "multiple"]), kd.toggleDisabled(options.disabled || false), kd.foreach(optionArray, function(option) {
    if (!option) {
      return null;
    }
    let value = typeof option === "string" ? option : option.value;
    let label = typeof option === "string" ? option : option.label;
    let disabled = typeof option === "string" ? false : option.disabled;
    return dom("option", { value }, kd.domData("value", value), kd.toggleDisabled(disabled), kd.text(label));
  }), kd.makeBinding(koArray.isKoArray(optionArray) ? optionArray.getObservable() : optionArray, (elem) => setValue(elem, valueObservable())), kd.makeBinding(valueObservable, (elem, value) => setValue(elem, value)), dom.on("change", function() {
    let valuesArray = [];
    let optionElements = this.querySelectorAll("option");
    for (let i = 0; i < optionElements.length; i++) {
      if (optionElements[i].selected) {
        let value = ko.utils.domData.get(optionElements[i], "value");
        valuesArray.push(value);
        if (!options.multiple) {
          break;
        }
      }
    }
    valuesArray.sort();
    setSaveValue(valueObservable, options.multiple ? valuesArray : valuesArray[0]);
  }))));
};
exports.separator = function() {
  return dom("hr.kf_separator");
};
exports.topTabs = function(optObservable) {
  return _initTabs(optObservable, ".kf_top_tab_label", dom("div.flexvbox.kf_top_tabs", dom("div.flexhbox.flexnone.kf_top_tab_labels"), dom("div.flexitem.kf_top_tab_container")));
};
exports.topTab = function(label, moreContentArgs) {
  return _addTab(".kf_top_tabs", dom("div.kf_top_tab_label.flexitem", label), dom("div.kf_top_tab_content.flexvbox", dom.fwdArgs(arguments, 1)));
};
function _initTabs(optObservable, labelSelector, elem) {
  var selectedTab = optObservable || ko.observable(0);
  G.$(elem).on("click", labelSelector, function() {
    selectedTab(dom.childIndex(this));
  });
  ko.utils.domData.set(elem, "kfSelectedTab", selectedTab);
  return elem;
}
function _addTab(tabsSelector, labelElem, contentElem) {
  return function(elem) {
    var tabsEl = dom.findLastChild(elem, tabsSelector);
    if (!tabsEl) {
      console.log("koForm: Attempting to add tab without an existing tabs container");
      return;
    }
    var selectedTab = ko.utils.domData.get(tabsEl, "kfSelectedTab");
    var labels = tabsEl.firstChild;
    var container = tabsEl.lastChild;
    var index = labels.childNodes.length;
    var isSelected = ko.computed(function() {
      return selectedTab() === index;
    });
    kd.toggleClass("active", isSelected)(labelElem);
    dom.autoDispose(labelElem, isSelected);
    kd.show(isSelected)(contentElem);
    labels.appendChild(labelElem);
    container.appendChild(contentElem);
  };
}


/***/ }),

/***/ "./app/client/lib/koUtil.js":
/*!**********************************!*\
  !*** ./app/client/lib/koUtil.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
function withKoUtils(obj) {
  return obj;
}
exports.withKoUtils = withKoUtils;
ko.subscribable.fn.subscribeInit = function(callback, target, event) {
  var sub = this.subscribe(callback, target, event);
  callback.call(target, this.peek());
  return sub;
};
ko.subscribable.fn.assign = function(value) {
  this(value);
};
ko.subscribable.fn.modifyAssign = function(modifierFunc) {
  var value = this.peek();
  modifierFunc(value);
  this(value);
};
ko.subscribable.fn.onlyNotifyUnequal = function() {
  this.equalityComparer = function(a, b) {
    return a === b;
  };
  return this;
};
ko.subscribable.fn.previousOnUndefined = function() {
  this.equalityComparer = function(a, b) {
    return a === b || b === void 0;
  };
  return this;
};
let _handlerFunc = (err) => {
};
let _origKoComputed = ko.computed;
function _wrapComputedRead(readFunc) {
  let lastValue;
  return function() {
    try {
      return lastValue = readFunc.call(this);
    } catch (err) {
      console.error("ERROR in ko.computed: %s", err);
      _handlerFunc(err);
      return lastValue;
    }
  };
}
function setComputedErrorHandler(handlerFunc) {
  _handlerFunc = handlerFunc;
  ko.computed = function(funcOrOptions, funcTarget, options) {
    if (typeof funcOrOptions === "function") {
      funcOrOptions = _wrapComputedRead(funcOrOptions);
    } else {
      funcOrOptions.read = _wrapComputedRead(funcOrOptions.read);
    }
    return _origKoComputed(funcOrOptions, funcTarget, options);
  };
}
exports.setComputedErrorHandler = setComputedErrorHandler;
function observableWithDefault(obs, defaultOrFunc, optContext) {
  if (typeof defaultOrFunc !== "function") {
    var def = defaultOrFunc;
    defaultOrFunc = function() {
      return def;
    };
  }
  return ko.pureComputed({
    read: function() {
      const value = obs();
      if (typeof value === "boolean") {
        return value;
      }
      return value || defaultOrFunc.call(this);
    },
    write: function(val) {
      obs(val);
    },
    owner: optContext
  });
}
exports.observableWithDefault = observableWithDefault;
function observableNumber(obs) {
  return ko.pureComputed({
    read: () => Number(obs()),
    write: (val) => {
      obs(Number(val));
    }
  });
}
exports.observableNumber = observableNumber;
function computedAutoDispose(optionsOrReadFunc, target, options) {
  var value = null;
  function setNewValue(newValue) {
    if (value && value !== newValue) {
      ko.ignoreDependencies(value.dispose, value);
    }
    value = newValue;
    return newValue;
  }
  var origRead;
  if (typeof optionsOrReadFunc === "object") {
    origRead = optionsOrReadFunc.read;
    options = _.clone(optionsOrReadFunc);
  } else {
    origRead = optionsOrReadFunc;
    options = _.defaults({ owner: target }, options || {});
  }
  options.read = function() {
    return setNewValue(origRead.call(this));
  };
  var result = ko.computed(options);
  var origDispose = result.dispose;
  result.dispose = function() {
    setNewValue(null);
    origDispose.call(result);
  };
  return result;
}
exports.computedAutoDispose = computedAutoDispose;
function computedBuilder(callback, optContext) {
  return computedAutoDispose(function() {
    var builder = callback.call(optContext);
    return builder ? ko.ignoreDependencies(builder) : null;
  }, null, { pure: false });
}
exports.computedBuilder = computedBuilder;


/***/ }),

/***/ "./app/client/models/BaseRowModel.js":
/*!*******************************************!*\
  !*** ./app/client/models/BaseRowModel.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
var gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
var modelUtil = __webpack_require__(/*! ./modelUtil */ "./app/client/models/modelUtil.js");
function BaseRowModel(tableModel, colNames) {
  this._table = tableModel;
  this._fields = colNames.slice(0);
  this._index = ko.observable(null);
  this._rowId = null;
  this._fields.forEach(function(colName) {
    this._createField(colName);
  }, this);
}
dispose.makeDisposable(BaseRowModel);
_.extend(BaseRowModel.prototype, modelUtil.ActionDispatcher);
BaseRowModel.prototype.getRowId = function() {
  return this._rowId;
};
BaseRowModel.prototype._createField = function(colName) {
  this[colName] = modelUtil.addSaveInterface(ko.observable(), (v) => this._saveField(colName, v));
};
BaseRowModel.prototype._saveField = function(colName, value) {
  var colValues = {};
  colValues[colName] = value;
  return this.updateColValues(colValues);
};
BaseRowModel.prototype.updateColValues = function(colValues) {
  return this._table.sendTableAction(["UpdateRecord", this._rowId, colValues]);
};
BaseRowModel.prototype._assignColumn = function(colName) {
  throw new Error("Not Implemented");
};
BaseRowModel.prototype._process_RemoveColumn = function(action, tableId, colId) {
  if (!gutil.arrayRemove(this._fields, colId)) {
    console.error("RowModel #RemoveColumn %s %s: column not found", tableId, colId);
  }
  delete this[colId];
};
BaseRowModel.prototype._process_ModifyColumn = function(action, tableId, colId, colInfo) {
};
BaseRowModel.prototype._process_UpdateRecord = function(action, tableId, rowId, columnValues) {
  for (var colName in columnValues) {
    this._assignColumn(colName);
  }
};
BaseRowModel.prototype._process_BulkUpdateRecord = function(action, tableId, rowId, columnValues) {
  for (var colName in columnValues) {
    this._assignColumn(colName);
  }
};
BaseRowModel.prototype._process_AddColumn = function(action, tableId, colId, colInfo) {
  this._fields.push(colId);
  this._createField(colId);
  this._assignColumn(colId);
};
BaseRowModel.prototype._process_RenameColumn = function(action, tableId, oldColId, newColId) {
  if (this._fields.indexOf(newColId) !== -1) {
    console.error("RowModel #RenameColumn %s %s %s: already exists", tableId, oldColId, newColId);
    return;
  }
  var index = this._fields.indexOf(oldColId);
  if (index === -1) {
    console.error("RowModel #RenameColumn %s %s %s: not found", tableId, oldColId, newColId);
    return;
  }
  this._fields[index] = newColId;
  this[newColId] = this[oldColId];
  modelUtil.addSaveInterface(this[newColId], this._saveField.bind(this, newColId));
  this._assignColumn(newColId);
  delete this[oldColId];
};
module.exports = BaseRowModel;


/***/ }),

/***/ "./app/client/models/DataTableModel.js":
/*!*********************************************!*\
  !*** ./app/client/models/DataTableModel.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var assert = __webpack_require__(/*! assert */ "./node_modules/assert/assert.js");
var BackboneEvents = (__webpack_require__(/*! backbone */ "./node_modules/backbone/backbone.js").Events);
var gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
var koArray = __webpack_require__(/*! ../lib/koArray */ "./app/client/lib/koArray.js");
var rowset = __webpack_require__(/*! ./rowset */ "./app/client/models/rowset.ts");
var TableModel = __webpack_require__(/*! ./TableModel */ "./app/client/models/TableModel.js");
var { DataRowModel } = __webpack_require__(/*! ./DataRowModel */ "./app/client/models/DataRowModel.ts");
const { TableQuerySets } = __webpack_require__(/*! ./QuerySet */ "./app/client/models/QuerySet.ts");
function DataTableModel(docModel, tableData, tableMetaRow) {
  TableModel.call(this, docModel, tableData);
  this.tableMetaRow = tableMetaRow;
  this.tableQuerySets = new TableQuerySets(this.tableData);
  var fields = tableData.getColIds();
  assert(fields.includes("id"), "Expecting tableData columns to include `id`");
  this._newRowModel = this.autoDispose(new DataRowModel(this, fields));
  this._floatingRows = /* @__PURE__ */ new Set();
  this.listenTo(this, "rowNotify", function(rows, action) {
    if (rows === rowset.ALL) {
      this._newRowModel.dispatchAction(action);
      this._floatingRows.forEach((row) => {
        row.dispatchAction(action);
      });
    } else {
      this._floatingRows.forEach((row) => {
        if (rows.includes(row.getRowId())) {
          row.dispatchAction(action);
        }
      });
    }
  });
}
dispose.makeDisposable(DataTableModel);
_.extend(DataTableModel.prototype, TableModel.prototype);
DataTableModel.prototype.createLazyRowsModel = function(sortedRowSet, optRowModelClass) {
  var RowModelClass = optRowModelClass || DataRowModel;
  var self = this;
  return new LazyArrayModel(sortedRowSet, function makeRowModel() {
    return new RowModelClass(self, self._newRowModel._fields);
  });
};
DataTableModel.prototype.createFloatingRowModel = function(optRowModelClass) {
  var RowModelClass = optRowModelClass || DataRowModel;
  var model = new RowModelClass(this, this._newRowModel._fields);
  this._floatingRows.add(model);
  model.autoDisposeCallback(() => {
    this._floatingRows.delete(model);
  });
  return model;
};
function LazyArrayModel(sortedRowSet, makeRowModelFunc) {
  koArray.KoArray.call(this, sortedRowSet.getKoArray().peek().map(function(r) {
    return null;
  }));
  this._rowIdArray = sortedRowSet.getKoArray();
  this._makeRowModel = makeRowModelFunc;
  this._assignedRowModels = /* @__PURE__ */ new Map();
  this._allRowModels = /* @__PURE__ */ new Set();
  this.autoDispose(this._rowIdArray.subscribe(this._onSpliceChange, this, "spliceChange"));
  this.listenTo(sortedRowSet, "rowNotify", this.onRowNotify);
  this.autoDisposeCallback(function() {
    for (let r of this._allRowModels) {
      if (typeof r.dispose === "function") {
        r.dispose();
      }
    }
  });
}
LazyArrayModel.prototype = Object.create(koArray.KoArray.prototype);
dispose.makeDisposable(LazyArrayModel);
_.extend(LazyArrayModel.prototype, BackboneEvents);
LazyArrayModel.prototype.makeItemModel = function() {
  var rowModel = this._makeRowModel();
  this._allRowModels.add(rowModel);
  return rowModel;
};
LazyArrayModel.prototype.unsetItemModel = function(rowModel) {
  this.setItemModel(rowModel, null);
};
LazyArrayModel.prototype.setItemModel = function(rowModel, index) {
  var arr = this.peek();
  var oldIndex = rowModel._index.peek();
  if (oldIndex !== null && arr[oldIndex] === rowModel) {
    arr[oldIndex] = null;
  }
  if (rowModel._rowId !== null) {
    this._assignedRowModels.delete(rowModel._rowId);
  }
  this._setItemModel(rowModel, index);
  if (index !== null && arr.length !== 0) {
    index = gutil.clamp(index, 0, arr.length - 1);
    if (arr[index] !== null && arr[index] !== rowModel) {
      this.unsetItemModel(arr[index]);
    }
    arr[index] = rowModel;
    this._assignedRowModels.set(rowModel._rowId, rowModel);
  }
};
LazyArrayModel.prototype.setFloatingRowModel = function(rowModel, index) {
  this._setItemModel(rowModel, index);
};
LazyArrayModel.prototype._setItemModel = function(rowModel, index) {
  var arr = this.peek();
  if (index === null || arr.length === 0) {
    rowModel._index(null);
    rowModel.assign(null);
  } else {
    index = gutil.clamp(index, 0, arr.length - 1);
    rowModel._index(index);
    rowModel.assign(this._rowIdArray.peek()[index]);
  }
};
LazyArrayModel.prototype.onRowNotify = function(rows, action) {
  if (rows === rowset.ALL) {
    for (let rowModel2 of this._allRowModels) {
      rowModel2.dispatchAction(action);
    }
    this.trigger("rowModelNotify", this._allRowModels);
  } else {
    var affectedRowModels = [];
    for (let r of rows) {
      var rowModel = this._assignedRowModels.get(r);
      if (rowModel) {
        rowModel.dispatchAction(action);
        affectedRowModels.push(rowModel);
      }
    }
    this.trigger("rowModelNotify", affectedRowModels);
  }
};
LazyArrayModel.prototype._onSpliceChange = function(splice) {
  var numDeleted = splice.deleted.length;
  var i, n;
  var arr = this.peek();
  for (i = splice.start, n = 0; n < numDeleted; i++, n++) {
    if (arr[i]) {
      this.unsetItemModel(arr[i]);
    }
  }
  var delta = splice.added - numDeleted;
  if (delta !== 0) {
    var firstToAdjust = splice.start + numDeleted;
    for (let rowModel of this._assignedRowModels.values()) {
      var index = rowModel._index.peek();
      if (index >= firstToAdjust) {
        rowModel._index(index + delta);
      }
    }
  }
  var newSpliceArgs = new Array(2 + splice.added);
  newSpliceArgs[0] = splice.start;
  newSpliceArgs[1] = numDeleted;
  for (i = 2; i < newSpliceArgs.length; i++) {
    newSpliceArgs[i] = null;
  }
  this.arraySplice(splice.start, numDeleted, gutil.arrayRepeat(splice.added, null));
};
LazyArrayModel.prototype.getRowId = function(index) {
  return this._rowIdArray.at(index);
};
LazyArrayModel.prototype.getRowIndex = function(rowId) {
  return this._rowIdArray.peek().indexOf(rowId);
};
LazyArrayModel.prototype.getRowIndexWithSub = function(rowId) {
  return this._rowIdArray.all().indexOf(rowId);
};
LazyArrayModel.prototype.getRowModel = function(rowId) {
  return this._assignedRowModels.get(rowId);
};
module.exports = DataTableModel;


/***/ }),

/***/ "./app/client/models/TableModel.js":
/*!*****************************************!*\
  !*** ./app/client/models/TableModel.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
var rowset = __webpack_require__(/*! ./rowset */ "./app/client/models/rowset.ts");
var modelUtil = __webpack_require__(/*! ./modelUtil */ "./app/client/models/modelUtil.js");
function TableModel(docModel, tableData) {
  this.docModel = docModel;
  this.tableData = tableData;
  this.rowGroupings = {};
  this.isLoaded = ko.observable(tableData.isLoaded);
  this.autoDispose(tableData.dataLoadedEmitter.addListener(this.onDataLoaded, this));
  this.autoDispose(tableData.tableActionEmitter.addListener(this.dispatchAction, this));
}
dispose.makeDisposable(TableModel);
_.extend(TableModel.prototype, rowset.RowSource.prototype, modelUtil.ActionDispatcher);
TableModel.prototype.fetch = function(force) {
  if (this.isLoaded.peek() && force) {
    this.isLoaded(false);
  }
  return this.tableData.docData.fetchTable(this.tableData.tableId, force);
};
TableModel.prototype.getAllRows = function() {
  return this.tableData.getRowIds();
};
TableModel.prototype.getNumRows = function() {
  return this.tableData.numRecords();
};
TableModel.prototype.getRowGrouping = function(groupByCol) {
  var grouping = this.rowGroupings[groupByCol];
  if (!grouping) {
    grouping = rowset.RowGrouping.create(null, this.tableData.getRowPropFunc(groupByCol));
    grouping.subscribeTo(this);
    this.rowGroupings[groupByCol] = grouping;
  }
  return grouping;
};
TableModel.prototype.onDataLoaded = function(oldRowIds, newRowIds) {
  this.trigger("rowChange", "remove", oldRowIds);
  this.trigger("rowChange", "add", newRowIds);
  this.isLoaded(true);
};
TableModel.prototype.sendTableActions = function(actions, optDesc) {
  return this.tableData.sendTableActions(actions, optDesc);
};
TableModel.prototype.sendTableAction = function(action, optDesc) {
  return this.tableData.sendTableAction(action, optDesc);
};
TableModel.prototype._process_AddRecord = function(action, tableId, rowId, columnValues) {
  this.trigger("rowChange", "add", [rowId]);
};
TableModel.prototype._process_RemoveRecord = function(action, tableId, rowId) {
  this.trigger("rowChange", "remove", [rowId]);
};
TableModel.prototype._process_UpdateRecord = function(action, tableId, rowId, columnValues) {
  this.trigger("rowChange", "update", [rowId]);
  this.trigger("rowNotify", [rowId], action);
};
TableModel.prototype._process_ReplaceTableData = function() {
};
TableModel.prototype._process_BulkAddRecord = function(action, tableId, rowIds, columns) {
  this.trigger("rowChange", "add", rowIds);
};
TableModel.prototype._process_BulkRemoveRecord = function(action, tableId, rowIds) {
  this.trigger("rowChange", "remove", rowIds);
};
TableModel.prototype._process_BulkUpdateRecord = function(action, tableId, rowIds, columns) {
  this.trigger("rowChange", "update", rowIds);
  this.trigger("rowNotify", rowIds, action);
};
TableModel.prototype.applySchemaAction = function(action) {
  this.trigger("rowNotify", rowset.ALL, action);
};
TableModel.prototype._process_AddColumn = function(action) {
  this.applySchemaAction(action);
};
TableModel.prototype._process_RemoveColumn = function(action) {
  this.applySchemaAction(action);
};
TableModel.prototype._process_RenameColumn = function(action) {
  this.applySchemaAction(action);
};
TableModel.prototype._process_ModifyColumn = function(action) {
  this.applySchemaAction(action);
};
TableModel.prototype._process_RenameTable = _.noop;
TableModel.prototype._process_RemoveTable = _.noop;
module.exports = TableModel;


/***/ }),

/***/ "./app/client/models/modelUtil.js":
/*!****************************************!*\
  !*** ./app/client/models/modelUtil.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var Promise = __webpack_require__(/*! bluebird */ "./node_modules/bluebird/js/browser/bluebird.js");
var assert = __webpack_require__(/*! assert */ "./node_modules/assert/assert.js");
var gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
var koUtil = __webpack_require__(/*! ../lib/koUtil */ "./app/client/lib/koUtil.js");
function addSaveInterface(observable, saveFunc) {
  observable.saveOnly = function(value) {
    return Promise.try(() => saveFunc.call(this, value)).tap(() => observable.notifySubscribers(value, "save"));
  };
  observable.save = function() {
    return this.saveOnly(this.peek());
  };
  observable.setAndSave = function(value) {
    this(value);
    return this.saveOnly(value);
  };
  return observable;
}
exports.addSaveInterface = addSaveInterface;
function savingComputed(options) {
  return addSaveInterface(ko.pureComputed({
    read: options.read,
    write: (val) => options.write(_writeSetter, val)
  }), (val) => options.write(_saveSetter, val));
}
exports.savingComputed = savingComputed;
function _writeSetter(obs, val) {
  return obs(val);
}
function _saveSetter(obs, val) {
  return obs.saveOnly(val);
}
function setSaveValue(observable, value, optOrigValue) {
  let orig = optOrigValue === void 0 ? observable.peek() : optOrigValue;
  if (value !== orig) {
    observable(value);
    if (observable.save) {
      return Promise.try(() => observable.save()).catch((err) => {
        console.warn("setSaveValue %s -> %s failed: %s", orig, value, err);
        observable(orig);
        throw err;
      });
    }
  }
}
exports.setSaveValue = setSaveValue;
function createField(saveFunc) {
  return addSaveInterface(ko.observable(), saveFunc);
}
exports.createField = createField;
function fieldWithDefault(fieldObs, defaultOrFunc, optContext) {
  var obsWithDef = koUtil.observableWithDefault(fieldObs, defaultOrFunc, optContext);
  if (fieldObs.saveOnly) {
    addSaveInterface(obsWithDef, fieldObs.saveOnly);
  }
  return obsWithDef;
}
exports.fieldWithDefault = fieldWithDefault;
function _createJsonProp(jsonObservable2, propName) {
  var jsonProp = ko.pureComputed({
    read: function() {
      return jsonObservable2()[propName];
    },
    write: function(value) {
      var obj = jsonObservable2.peek();
      obj[propName] = value;
      jsonObservable2(obj);
    }
  });
  if (jsonObservable2.saveOnly) {
    addSaveInterface(jsonProp, function(value) {
      var obj = _.clone(jsonObservable2.peek());
      obj[propName] = value;
      return jsonObservable2.saveOnly(obj);
    });
  }
  return jsonProp;
}
function jsonObservable(stringObservable, modifierFunc, optContext) {
  modifierFunc = modifierFunc || function(obj) {
    return obj || {};
  };
  var obs = ko.pureComputed({
    read: function() {
      var json = stringObservable();
      return modifierFunc.call(optContext, json ? JSON.parse(json) : null);
    },
    write: function(obj) {
      stringObservable(JSON.stringify(obj));
    }
  });
  if (stringObservable.saveOnly) {
    addSaveInterface(obs, function(obj) {
      return stringObservable.saveOnly(JSON.stringify(obj));
    });
  }
  return objObservable(obs);
}
exports.jsonObservable = jsonObservable;
function objObservable(objectObservable) {
  objectObservable.update = function(obj) {
    this(_.extend(this.peek(), obj));
  };
  objectObservable._props = {};
  objectObservable.prop = function(propName) {
    return this._props[propName] || (this._props[propName] = _createJsonProp(this, propName));
  };
  return objectObservable;
}
exports.objObservable = objObservable;
var _sentinel = {};
function customValue(savedObservable) {
  var options = { read: () => savedObservable() };
  if (savedObservable.saveOnly) {
    options.save = (val) => savedObservable.saveOnly(val);
  }
  return customComputed(options);
}
exports.customValue = customValue;
function customComputed(options) {
  var current = ko.observable(_sentinel);
  var read = options.read;
  var save = options.save;
  var active = ko.pureComputed({
    read: () => current() !== _sentinel ? current() : read(),
    write: (val) => current(val !== read() ? val : _sentinel)
  });
  active.isSaved = ko.pureComputed(() => current() === _sentinel);
  active.revert = function() {
    current(_sentinel);
  };
  if (save) {
    addSaveInterface(active, (val) => Promise.try(() => val !== read() ? save(val) : null).finally(active.revert));
  }
  return active;
}
exports.customComputed = customComputed;
function bulkActionExpand(bulkAction, callback, context) {
  assert(gutil.startsWith(bulkAction[0], "Bulk"));
  var rowIds = bulkAction[2];
  var columnValues = bulkAction[3];
  var indivAction = bulkAction.slice(0);
  indivAction[0] = indivAction[0].slice(4);
  var colValues = indivAction[3] = columnValues && _.clone(columnValues);
  for (var i = 0; i < rowIds.length; i++) {
    indivAction[2] = rowIds[i];
    if (colValues) {
      for (var col in colValues) {
        colValues[col] = columnValues[col][i];
      }
    }
    callback.call(context, indivAction);
  }
}
exports.bulkActionExpand = bulkActionExpand;
var ActionDispatcher = {
  dispatchAction: function(action) {
    console.assert(!(typeof this.isDisposed === "function" && this.isDisposed()), `Dispatching action ${action[0]} on disposed object`, this);
    var methodName = "_process_" + action[0];
    var func = this[methodName];
    if (typeof func === "function") {
      var args = action.slice(0);
      args[0] = action;
      return func.apply(this, args);
    } else {
      console.warn("Received unknown action %s", action[0]);
    }
  },
  dispatchBulk: function(action, tableId, rowIds, columnValues) {
    bulkActionExpand(action, this.dispatchAction, this);
  }
};
exports.ActionDispatcher = ActionDispatcher;


/***/ }),

/***/ "./app/client/widgets/AbstractWidget.js":
/*!**********************************************!*\
  !*** ./app/client/widgets/AbstractWidget.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
const { CellStyle } = __webpack_require__(/*! app/client/widgets/CellStyle */ "./app/client/widgets/CellStyle.ts");
const { dom } = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
function AbstractWidget(field, opts = {}) {
  this.field = field;
  this.options = field.widgetOptionsJson;
  const { defaultTextColor = "#000000" } = opts;
  this.defaultTextColor = defaultTextColor;
  this.valueFormatter = this.field.visibleColFormatter;
  this.defaultTextColor = opts.defaultTextColor || "#000000";
}
dispose.makeDisposable(AbstractWidget);
AbstractWidget.prototype.buildConfigDom = function() {
  throw new Error("Not Implemented");
};
AbstractWidget.prototype.buildTransformConfigDom = function() {
  return null;
};
AbstractWidget.prototype.buildDom = function(row) {
  throw new Error("Not Implemented");
};
AbstractWidget.prototype.buildColorConfigDom = function(gristDoc) {
  return dom.create(CellStyle, this.field, gristDoc, this.defaultTextColor);
};
module.exports = AbstractWidget;


/***/ }),

/***/ "./app/client/widgets/BaseEditor.js":
/*!******************************************!*\
  !*** ./app/client/widgets/BaseEditor.js ***!
  \******************************************/
/***/ ((module) => {

function BaseEditor(options) {
}
BaseEditor.prototype.attach = function(cellElem) {
};
BaseEditor.prototype.getDom = function() {
  return null;
};
BaseEditor.prototype.getCellValue = function() {
  throw new Error("Not Implemented");
};
BaseEditor.prototype.prepForSave = function() {
};
BaseEditor.prototype.getTextValue = function() {
  throw new Error("Not Implemented");
};
BaseEditor.prototype.getCursorPos = function() {
  throw new Error("Not Implemented");
};
module.exports = BaseEditor;


/***/ }),

/***/ "./app/client/widgets/CheckBoxEditor.js":
/*!**********************************************!*\
  !*** ./app/client/widgets/CheckBoxEditor.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var TextEditor = __webpack_require__(/*! ./TextEditor */ "./app/client/widgets/TextEditor.js");
function CheckBoxEditor(options) {
  TextEditor.call(this, options);
}
dispose.makeDisposable(CheckBoxEditor);
_.extend(CheckBoxEditor.prototype, TextEditor.prototype);
CheckBoxEditor.skipEditor = function(typedVal, cellVal) {
  if (typedVal === " ") {
    return !cellVal;
  }
};
CheckBoxEditor.supportsReadonly = function() {
  return false;
};
module.exports = CheckBoxEditor;


/***/ }),

/***/ "./app/client/widgets/ChoiceEditor.js":
/*!********************************************!*\
  !*** ./app/client/widgets/ChoiceEditor.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var dispose = __webpack_require__(/*! app/client/lib/dispose */ "./app/client/lib/dispose.js");
var TextEditor = __webpack_require__(/*! app/client/widgets/TextEditor */ "./app/client/widgets/TextEditor.js");
const { Autocomplete } = __webpack_require__(/*! app/client/lib/autocomplete */ "./app/client/lib/autocomplete.ts");
const { ACIndexImpl, buildHighlightedDom } = __webpack_require__(/*! app/client/lib/ACIndex */ "./app/client/lib/ACIndex.ts");
const {
  ChoiceItem,
  cssChoiceList,
  cssMatchText,
  cssPlusButton,
  cssPlusIcon
} = __webpack_require__(/*! app/client/widgets/ChoiceListEditor */ "./app/client/widgets/ChoiceListEditor.ts");
const { menuCssClass } = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
const { testId, colors } = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
const { choiceToken, cssChoiceACItem } = __webpack_require__(/*! app/client/widgets/ChoiceToken */ "./app/client/widgets/ChoiceToken.ts");
const { dom, styled } = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
const { icon } = __webpack_require__(/*! ../ui2018/icons */ "./app/client/ui2018/icons.ts");
function ChoiceEditor(options) {
  TextEditor.call(this, options);
  this.choices = options.field.widgetOptionsJson.peek().choices || [];
  this.choiceOptions = options.field.widgetOptionsJson.peek().choiceOptions || {};
  if (!options.readonly && options.field.viewSection().parentKey() === "single") {
    this.cellEditorDiv.classList.add(cssChoiceEditor.className);
    this.cellEditorDiv.appendChild(cssChoiceEditIcon("Dropdown"));
  }
  this.enableAddNew = true;
}
dispose.makeDisposable(ChoiceEditor);
_.extend(ChoiceEditor.prototype, TextEditor.prototype);
ChoiceEditor.prototype.getCellValue = function() {
  const selectedItem = this.autocomplete && this.autocomplete.getSelectedItem();
  return selectedItem ? selectedItem.label : TextEditor.prototype.getCellValue.call(this);
};
ChoiceEditor.prototype.renderACItem = function(item, highlightFunc) {
  const options = this.choiceOptions[item.label];
  return cssChoiceACItem(item.isNew ? [cssChoiceACItem.cls("-new"), cssPlusButton(cssPlusIcon("Plus")), testId("choice-editor-new-item")] : [cssChoiceACItem.cls("-with-new", this.showAddNew)], choiceToken(buildHighlightedDom(item.label, highlightFunc, cssMatchText), options || {}, dom.style("max-width", "100%"), testId("choice-editor-item-label")), testId("choice-editor-item"));
};
ChoiceEditor.prototype.attach = function(cellElem) {
  TextEditor.prototype.attach.call(this, cellElem);
  if (this.options.readonly) {
    return;
  }
  const acItems = this.choices.map((c) => new ChoiceItem(c, false));
  const acIndex = new ACIndexImpl(acItems);
  const acOptions = {
    popperOptions: {
      placement: "bottom"
    },
    menuCssClass: `${menuCssClass} ${cssChoiceList.className} test-autocomplete`,
    search: (term) => this.maybeShowAddNew(acIndex.search(term), term),
    renderItem: (item, highlightFunc) => this.renderACItem(item, highlightFunc),
    getItemText: (item) => item.label,
    onClick: () => this.options.commands.fieldEditSave()
  };
  this.autocomplete = Autocomplete.create(this, this.textInput, acOptions);
};
ChoiceEditor.prototype.prepForSave = async function() {
  const selectedItem = this.autocomplete && this.autocomplete.getSelectedItem();
  if (selectedItem && selectedItem.isNew) {
    const choices = this.options.field.widgetOptionsJson.prop("choices");
    await choices.saveOnly([...choices.peek() || [], selectedItem.label]);
  }
};
ChoiceEditor.prototype.maybeShowAddNew = function(result, text) {
  this.showAddNew = false;
  const trimmedText = text.trim();
  if (!this.enableAddNew || !trimmedText) {
    return result;
  }
  const addNewItem = new ChoiceItem(trimmedText, false, true);
  if (result.items.find((item) => item.cleanText === addNewItem.cleanText)) {
    return result;
  }
  result.items.push(addNewItem);
  this.showAddNew = true;
  return result;
};
const cssChoiceEditIcon = styled(icon, `
  background-color: ${colors.slate};
  position: absolute;
  top: 0;
  left: 0;
  margin: 3px 3px 0 3px;
`);
const cssChoiceEditor = styled("div", `
  & > .celleditor_text_editor, & > .celleditor_content_measure {
    padding-left: 18px;
  }
`);
module.exports = ChoiceEditor;


/***/ }),

/***/ "./app/client/widgets/DateEditor.js":
/*!******************************************!*\
  !*** ./app/client/widgets/DateEditor.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const moment = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
const _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
const gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
const commands = __webpack_require__(/*! ../components/commands */ "./app/client/components/commands.ts");
const dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
const dom = __webpack_require__(/*! ../lib/dom */ "./app/client/lib/dom.js");
const kd = __webpack_require__(/*! ../lib/koDom */ "./app/client/lib/koDom.js");
const TextEditor = __webpack_require__(/*! ./TextEditor */ "./app/client/widgets/TextEditor.js");
const { parseDate, TWO_DIGIT_YEAR_THRESHOLD } = __webpack_require__(/*! app/common/parseDate */ "./app/common/parseDate.ts");
var Datepicker = $.fn.datepicker.Constructor;
Object.defineProperty(Datepicker.prototype, "isInput", {
  get: function() {
    return true;
  },
  set: function(v) {
  }
});
function DateEditor(options) {
  this.timezone = options.timezone || "UTC";
  this.dateFormat = options.field.widgetOptionsJson.peek().dateFormat;
  this.locale = options.field.documentSettings.peek().locale;
  this.safeFormat = makeFullMomentFormat(this.dateFormat);
  const defaultTimezone = moment.tz.guess();
  let placeholder = moment.tz(defaultTimezone).format(this.safeFormat);
  if (options.readonly) {
    placeholder = null;
  }
  TextEditor.call(this, _.defaults(options, { placeholder }));
  const cellValue = this.formatValue(options.cellValue, this.safeFormat, true);
  this.textInput.value = gutil.undef(options.state, options.editValue, cellValue);
  if (!options.readonly) {
    this._keyboardNav = false;
    this._datePickerWidget = $(this.textInput).datepicker({
      keyboardNavigation: false,
      forceParse: false,
      todayHighlight: true,
      todayBtn: "linked",
      assumeNearbyYear: TWO_DIGIT_YEAR_THRESHOLD,
      language: this.getLanguage(),
      format: {
        toDisplay: (date, format, language) => moment.utc(date).format(this.safeFormat),
        toValue: (date, format, language) => {
          const timestampSec = parseDate(date, {
            dateFormat: this.safeFormat,
            timezone: "UTC"
          });
          return timestampSec === null ? null : new Date(timestampSec * 1e3);
        }
      }
    });
    this.autoDisposeCallback(() => this._datePickerWidget.datepicker("destroy"));
    this._datePickerWidget.on("keydown", (e) => {
      if (e.keyCode === 13 || e.keyCode === 27) {
        this._datePickerWidget.datepicker("destroy");
        setTimeout(() => e.currentTarget.dispatchEvent(e.originalEvent), 0);
      }
    });
    let datepickerCommands = Object.assign({}, options.commands, {
      datepickerFocus: () => {
        this._allowKeyboardNav(true);
      }
    });
    this._datepickerCommands = this.autoDispose(commands.createGroup(datepickerCommands, this, true));
    this._datePickerWidget.on("show", () => {
      dom(document.querySelector(".datepicker"), kd.attr("tabIndex", 0), kd.toggleClass("clipboard_focus", true));
      dom(this.textInput, dom.on("input", () => {
        this._allowKeyboardNav(false);
      }), this._datepickerCommands.attach());
    });
  }
}
dispose.makeDisposable(DateEditor);
_.extend(DateEditor.prototype, TextEditor.prototype);
DateEditor.prototype.getCellValue = function() {
  let timestamp = parseDate(this.textInput.value, {
    dateFormat: this.safeFormat,
    timezone: this.timezone
  });
  return timestamp !== null ? timestamp : this.textInput.value;
};
DateEditor.prototype._allowKeyboardNav = function(bool) {
  if (this._keyboardNav !== bool) {
    this._keyboardNav = bool;
    $(this.textInput).data().datepicker.o.keyboardNavigation = bool;
    $(this.textInput).data().datepicker.o.forceParse = bool;
  }
};
DateEditor.prototype.formatValue = function(value, formatString, shouldFallBackToValue) {
  if (_.isNumber(value) && formatString) {
    return moment.tz(value * 1e3, this.timezone).format(formatString);
  } else {
    return shouldFallBackToValue && typeof value === "string" ? value : "";
  }
};
DateEditor.prototype.getLanguage = function() {
  return this.locale.substr(0, this.locale.indexOf("-"));
};
function makeFullMomentFormat(mFormat) {
  let safeFormat = mFormat;
  if (!safeFormat.includes("Y")) {
    safeFormat += " YYYY";
  }
  if (!safeFormat.includes("D") || !safeFormat.includes("M")) {
    safeFormat = "YYYY-MM-DD";
  }
  return safeFormat;
}
module.exports = DateEditor;


/***/ }),

/***/ "./app/client/widgets/DateTextBox.js":
/*!*******************************************!*\
  !*** ./app/client/widgets/DateTextBox.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
var dom = __webpack_require__(/*! ../lib/dom */ "./app/client/lib/dom.js");
var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
var kd = __webpack_require__(/*! ../lib/koDom */ "./app/client/lib/koDom.js");
var kf = __webpack_require__(/*! ../lib/koForm */ "./app/client/lib/koForm.js");
var AbstractWidget = __webpack_require__(/*! ./AbstractWidget */ "./app/client/widgets/AbstractWidget.js");
const { fromKoSave } = __webpack_require__(/*! app/client/lib/fromKoSave */ "./app/client/lib/fromKoSave.ts");
const { alignmentSelect, cssButtonSelect } = __webpack_require__(/*! app/client/ui2018/buttonSelect */ "./app/client/ui2018/buttonSelect.ts");
const { cssRow, cssLabel } = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
const { cssTextInput } = __webpack_require__(/*! app/client/ui2018/editableLabel */ "./app/client/ui2018/editableLabel.ts");
const { styled, fromKo } = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
const { select } = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
const { dateFormatOptions } = __webpack_require__(/*! app/common/parseDate */ "./app/common/parseDate.ts");
function DateTextBox(field) {
  AbstractWidget.call(this, field);
  this.alignment = this.options.prop("alignment");
  this.dateFormat = this.field.config.options.prop("dateFormat");
  this.isCustomDateFormat = this.field.config.options.prop("isCustomDateFormat");
  this.mixedDateFormat = ko.pureComputed(() => this.dateFormat() === null || this.isCustomDateFormat() === null);
  this.standardDateFormat = this.autoDispose(ko.computed({
    owner: this,
    read: function() {
      return this.mixedDateFormat() ? null : this.isCustomDateFormat() ? "Custom" : this.dateFormat();
    },
    write: function(val) {
      if (val === "Custom") {
        this.isCustomDateFormat.setAndSave(true);
      } else {
        this.field.config.options.update({ isCustomDateFormat: false, dateFormat: val });
        this.field.config.options.save();
      }
    }
  }));
  this.timezone = ko.observable("UTC");
}
dispose.makeDisposable(DateTextBox);
_.extend(DateTextBox.prototype, AbstractWidget.prototype);
DateTextBox.prototype.buildDateConfigDom = function() {
  const disabled = this.field.config.options.disabled("dateFormat");
  return dom("div", cssLabel("Date Format"), cssRow(dom(select(fromKo(this.standardDateFormat), [...dateFormatOptions, "Custom"], { disabled, defaultLabel: "Mixed format" }), dom.testId("Widget_dateFormat"))), kd.maybe(() => !this.mixedDateFormat() && this.isCustomDateFormat(), () => {
    return cssRow(dom(textbox(this.dateFormat, { disabled }), dom.testId("Widget_dateCustomFormat")));
  }));
};
DateTextBox.prototype.buildConfigDom = function() {
  return dom("div", this.buildDateConfigDom(), cssRow(alignmentSelect(fromKoSave(this.field.config.options.prop("alignment")), cssButtonSelect.cls("-disabled", this.field.config.options.disabled("alignment")))));
};
DateTextBox.prototype.buildTransformConfigDom = function() {
  return this.buildDateConfigDom();
};
DateTextBox.prototype.buildDom = function(row) {
  let value = row[this.field.colId()];
  return dom("div.field_clip", kd.style("text-align", this.alignment), kd.text(() => row._isAddRow() || this.isDisposed() ? "" : this.valueFormatter().format(value())));
};
const cssClean = styled("div", `
  flex: 1;
  margin: 0px;
`);
const cssFocus = styled("div", `
  &:focus {
    outline: none;
    box-shadow: 0 0 3px 2px var(--grist-color-cursor);
    border: 1px solid transparent;
  }
`);
function textbox(value, options) {
  const textDom = kf.text(value, options != null ? options : {});
  const tzInput = textDom.querySelector("input");
  dom(tzInput, kd.cssClass(cssTextInput.className), kd.cssClass(cssFocus.className));
  dom(textDom, kd.cssClass(cssClean.className));
  return textDom;
}
module.exports = DateTextBox;


/***/ }),

/***/ "./app/client/widgets/DateTimeEditor.js":
/*!**********************************************!*\
  !*** ./app/client/widgets/DateTimeEditor.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const moment = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
const _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
const dom = __webpack_require__(/*! ../lib/dom */ "./app/client/lib/dom.js");
const dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
const kd = __webpack_require__(/*! ../lib/koDom */ "./app/client/lib/koDom.js");
const DateEditor = __webpack_require__(/*! ./DateEditor */ "./app/client/widgets/DateEditor.js");
const gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
const { parseDate } = __webpack_require__(/*! app/common/parseDate */ "./app/common/parseDate.ts");
const TextEditor = __webpack_require__(/*! ./TextEditor */ "./app/client/widgets/TextEditor.js");
function DateTimeEditor(options) {
  options.timezone = gutil.removePrefix(options.field.column().type(), "DateTime:");
  var origCommands = options.commands;
  if (!options.readonly) {
    options.commands = Object.assign({}, origCommands, {
      prevField: () => this._focusIndex() === 1 ? this._setFocus(0) : origCommands.prevField(),
      nextField: () => this._focusIndex() === 0 ? this._setFocus(1) : origCommands.nextField()
    });
  }
  DateEditor.call(this, options);
  this._timeFormat = options.field.widgetOptionsJson.peek().timeFormat;
  this._dateSizer = this.contentSizer;
  this._dateInput = this.textInput;
  const isValid = _.isNumber(options.cellValue);
  const formatted = this.formatValue(options.cellValue, this._timeFormat, false);
  const placeholder = moment.tz("0", "H", this.timezone).format(this._timeFormat);
  if (options.readonly) {
    if (!isValid) {
    } else {
      const time = formatted || placeholder;
      const sep = time ? " " : "";
      this.textInput.value = this.textInput.value + sep + time;
    }
  } else {
    dom(this.dom, kd.toggleClass("celleditor_datetime", true));
    dom(this.dom.firstChild, kd.toggleClass("celleditor_datetime_editor", true));
    this.dom.appendChild(dom("div.celleditor_cursor_editor.celleditor_datetime_editor", this._timeSizer = dom("div.celleditor_content_measure"), this._timeInput = dom("textarea.celleditor_text_editor", kd.attr("placeholder", placeholder), kd.value(formatted), this.commandGroup.attach(), dom.on("input", () => this.onChange()))));
  }
  if (typeof options.state == "string") {
    try {
      const { date, time } = JSON.parse(options.state);
      this._dateInput.value = date;
      this._timeInput.value = time;
      this.onChange();
    } catch (e) {
      console.error("DateTimeEditor can't restore its previous state");
    }
  }
}
dispose.makeDisposable(DateTimeEditor);
_.extend(DateTimeEditor.prototype, DateEditor.prototype);
DateTimeEditor.prototype.setSizerLimits = function() {
  var maxSize = this.editorPlacement.calcSize({ width: Infinity, height: Infinity }, { calcOnly: true });
  if (this.options.readonly) {
    return;
  }
  this._dateSizer.style.maxWidth = this._timeSizer.style.maxWidth = Math.ceil(maxSize.width / 2 - 6) + "px";
};
DateTimeEditor.prototype._focusIndex = function() {
  return document.activeElement === this._dateInput ? 0 : document.activeElement === this._timeInput ? 1 : null;
};
DateTimeEditor.prototype._setFocus = function(index) {
  var elem = index === 0 ? this._dateInput : index === 1 ? this._timeInput : null;
  if (elem) {
    elem.focus();
    elem.selectionStart = 0;
    elem.selectionEnd = elem.value.length;
  }
};
DateTimeEditor.prototype.onChange = function() {
  this._resizeInput();
  const date = this._dateInput.value;
  const time = this._timeInput.value;
  this.editorState.set(JSON.stringify({ date, time }));
};
DateTimeEditor.prototype.getCellValue = function() {
  let date = this._dateInput.value;
  let time = this._timeInput.value;
  let timestamp = parseDate(date, {
    dateFormat: this.safeFormat,
    time,
    timeFormat: this._timeFormat,
    timezone: this.timezone
  });
  return timestamp !== null ? timestamp : date && time ? `${date} ${time}` : date || time;
};
DateTimeEditor.prototype._resizeInput = function() {
  if (this.options.readonly) {
    TextEditor.prototype._resizeInput.call(this);
    return;
  }
  this._dateSizer.textContent = this._dateInput.value;
  this._timeSizer.textContent = this._timeInput.value;
  var dateRect = this._dateSizer.getBoundingClientRect();
  var timeRect = this._timeSizer.getBoundingClientRect();
  var size = this.editorPlacement.calcSize({
    width: dateRect.width + timeRect.width + 12,
    height: Math.max(dateRect.height, timeRect.height) + 3
  });
  this.dom.style.width = size.width + "px";
  this._dateInput.parentNode.style.flexBasis = dateRect.width + 6 + "px";
  this._timeInput.parentNode.style.flexBasis = timeRect.width + 6 + "px";
  this._dateInput.style.height = Math.ceil(size.height - 3) + "px";
  this._timeInput.style.height = Math.ceil(size.height - 3) + "px";
};
module.exports = DateTimeEditor;


/***/ }),

/***/ "./app/client/widgets/DateTimeTextBox.js":
/*!***********************************************!*\
  !*** ./app/client/widgets/DateTimeTextBox.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var ko = __webpack_require__(/*! knockout */ "./node_modules/knockout/build/output/knockout-latest.js");
var moment = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
var dom = __webpack_require__(/*! ../lib/dom */ "./app/client/lib/dom.js");
var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
var kd = __webpack_require__(/*! ../lib/koDom */ "./app/client/lib/koDom.js");
var kf = __webpack_require__(/*! ../lib/koForm */ "./app/client/lib/koForm.js");
var DateTextBox = __webpack_require__(/*! ./DateTextBox */ "./app/client/widgets/DateTextBox.js");
var gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
const { fromKoSave } = __webpack_require__(/*! app/client/lib/fromKoSave */ "./app/client/lib/fromKoSave.ts");
const { alignmentSelect, cssButtonSelect } = __webpack_require__(/*! app/client/ui2018/buttonSelect */ "./app/client/ui2018/buttonSelect.ts");
const { cssRow, cssLabel } = __webpack_require__(/*! app/client/ui/RightPanelStyles */ "./app/client/ui/RightPanelStyles.ts");
const { cssTextInput } = __webpack_require__(/*! app/client/ui2018/editableLabel */ "./app/client/ui2018/editableLabel.ts");
const { dom: gdom, styled, fromKo } = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
const { select } = __webpack_require__(/*! app/client/ui2018/menus */ "./app/client/ui2018/menus.ts");
const { buildTZAutocomplete } = __webpack_require__(/*! app/client/widgets/TZAutocomplete */ "./app/client/widgets/TZAutocomplete.ts");
const { timeFormatOptions } = __webpack_require__(/*! app/common/parseDate */ "./app/common/parseDate.ts");
function DateTimeTextBox(field) {
  DateTextBox.call(this, field);
  this._timezone = this.autoDispose(ko.computed(() => gutil.removePrefix(field.column().type(), "DateTime:")));
  this._setTimezone = (val) => field.column().type.setAndSave("DateTime:" + val);
  this.timeFormat = this.field.config.options.prop("timeFormat");
  this.isCustomTimeFormat = this.field.config.options.prop("isCustomTimeFormat");
  this.mixedTimeFormat = ko.pureComputed(() => this.timeFormat() === null || this.isCustomTimeFormat() === null);
  this.standardTimeFormat = this.autoDispose(ko.computed({
    owner: this,
    read: function() {
      return this.isCustomTimeFormat() ? "Custom" : this.timeFormat();
    },
    write: function(val) {
      if (val === "Custom") {
        this.isCustomTimeFormat.setAndSave(true);
      } else {
        this.isCustomTimeFormat.setAndSave(false);
        this.timeFormat.setAndSave(val);
      }
    }
  }));
}
dispose.makeDisposable(DateTimeTextBox);
_.extend(DateTimeTextBox.prototype, DateTextBox.prototype);
DateTimeTextBox.prototype.buildConfigDom = function(isTransformConfig) {
  const disabled = ko.pureComputed(() => {
    return this.field.config.options.disabled("timeFormat")() || this.field.column().disableEditData();
  });
  const alignment = fromKoSave(this.field.config.options.prop("alignment"));
  return dom("div", cssLabel("Timezone"), cssRow(gdom.create(buildTZAutocomplete, moment, fromKo(this._timezone), this._setTimezone, { disabled: fromKo(disabled) })), this.buildDateConfigDom(), cssLabel("Time Format"), cssRow(dom(select(fromKo(this.standardTimeFormat), [...timeFormatOptions, "Custom"], { disabled: fromKo(disabled), defaultLabel: "Mixed format" }), dom.testId("Widget_timeFormat"))), kd.maybe(() => !this.mixedTimeFormat() && this.isCustomTimeFormat(), () => {
    return cssRow(dom(textbox(this.timeFormat, { disabled: this.field.config.options.disabled("timeFormat") }), dom.testId("Widget_timeCustomFormat")));
  }), isTransformConfig ? null : cssRow(alignmentSelect(alignment, cssButtonSelect.cls("-disabled", this.field.config.options.disabled("alignment")))));
};
DateTimeTextBox.prototype.buildTransformConfigDom = function() {
  return this.buildConfigDom(true);
};
const cssClean = styled("div", `
  flex: 1;
  margin: 0px;
`);
const cssFocus = styled("div", `
  &:focus {
    outline: none;
    box-shadow: 0 0 3px 2px #5e9ed6;
    border: 1px solid transparent;
  }
`);
function textbox(value, options) {
  const textDom = kf.text(value, options || {});
  const tzInput = textDom.querySelector("input");
  dom(tzInput, kd.cssClass(cssTextInput.className), kd.cssClass(cssFocus.className));
  dom(textDom, kd.cssClass(cssClean.className));
  return textDom;
}
module.exports = DateTimeTextBox;


/***/ }),

/***/ "./app/client/widgets/TextEditor.js":
/*!******************************************!*\
  !*** ./app/client/widgets/TextEditor.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _ = __webpack_require__(/*! underscore */ "./node_modules/underscore/modules/index-all.js");
var gutil = __webpack_require__(/*! app/common/gutil */ "./app/common/gutil.ts");
var dom = __webpack_require__(/*! ../lib/dom */ "./app/client/lib/dom.js");
var kd = __webpack_require__(/*! ../lib/koDom */ "./app/client/lib/koDom.js");
var dispose = __webpack_require__(/*! ../lib/dispose */ "./app/client/lib/dispose.js");
var BaseEditor = __webpack_require__(/*! ./BaseEditor */ "./app/client/widgets/BaseEditor.js");
var commands = __webpack_require__(/*! ../components/commands */ "./app/client/components/commands.ts");
const { testId } = __webpack_require__(/*! app/client/ui2018/cssVars */ "./app/client/ui2018/cssVars.ts");
const { createMobileButtons, getButtonMargins } = __webpack_require__(/*! app/client/widgets/EditorButtons */ "./app/client/widgets/EditorButtons.ts");
const { EditorPlacement } = __webpack_require__(/*! app/client/widgets/EditorPlacement */ "./app/client/widgets/EditorPlacement.ts");
const { observable } = __webpack_require__(/*! grainjs */ "./node_modules/grainjs/dist/esm/index.js");
function TextEditor(options) {
  this.options = options;
  this.commandGroup = this.autoDispose(commands.createGroup(options.commands, null, true));
  this._alignment = options.field.widgetOptionsJson.peek().alignment || "left";
  const initialValue = gutil.undef(options.state, options.editValue, String(options.cellValue == null ? "" : options.cellValue));
  this.editorState = this.autoDispose(observable(initialValue));
  this.dom = dom("div.default_editor", kd.toggleClass("readonly_editor", options.readonly), this.cellEditorDiv = dom("div.celleditor_cursor_editor", dom.testId("TextEditor_editor"), testId("widget-text-editor"), this.contentSizer = dom("div.celleditor_content_measure"), this.textInput = dom("textarea.celleditor_text_editor", kd.attr("placeholder", options.placeholder || ""), kd.style("text-align", this._alignment), kd.boolAttr("readonly", options.readonly), kd.value(initialValue), this.commandGroup.attach(), dom.on("input", () => this.onChange()))), createMobileButtons(options.commands));
}
dispose.makeDisposable(TextEditor);
_.extend(TextEditor.prototype, BaseEditor.prototype);
TextEditor.prototype.attach = function(cellElem) {
  this.editorPlacement = EditorPlacement.create(this, this.dom, cellElem, { margins: getButtonMargins() });
  this.autoDispose(this.editorPlacement.onReposition.addListener(this._resizeInput, this));
  this.setSizerLimits();
  this._resizeInput();
  this.textInput.focus();
  var pos = Math.min(this.options.cursorPos, this.textInput.value.length);
  this.textInput.setSelectionRange(pos, pos);
};
TextEditor.prototype.getDom = function() {
  return this.dom;
};
TextEditor.prototype.setSizerLimits = function() {
  const maxSize = this.editorPlacement.calcSizeWithPadding(this.textInput, { width: Infinity, height: Infinity }, { calcOnly: true });
  this.contentSizer.style.maxWidth = Math.ceil(maxSize.width) + "px";
};
TextEditor.prototype.getCellValue = function() {
  return this.textInput.value;
};
TextEditor.prototype.onChange = function() {
  if (this.editorState)
    this.editorState.set(this.getTextValue());
  this._resizeInput();
};
TextEditor.prototype.getTextValue = function() {
  return this.textInput.value;
};
TextEditor.prototype.getCursorPos = function() {
  return this.textInput.selectionStart;
};
TextEditor.prototype._resizeInput = function() {
  var textInput = this.textInput;
  this.contentSizer.textContent = textInput.value + "\u200B";
  var rect = this.contentSizer.getBoundingClientRect();
  if (this._alignment === "left") {
    rect.width += 16;
  }
  var size = this.editorPlacement.calcSizeWithPadding(textInput, rect);
  textInput.style.width = size.width + "px";
  textInput.style.height = size.height + "px";
};
module.exports = TextEditor;


/***/ }),

/***/ "./node_modules/moment/locale sync recursive \\b\\B":
/*!***********************************************!*\
  !*** ./node_modules/moment/locale/ sync \b\B ***!
  \***********************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/moment/locale sync recursive \\b\\B";
module.exports = webpackEmptyContext;

/***/ })

}]);
//# sourceMappingURL=app_client_components_ChartView_ts-app_client_lib_CustomSectionElement_ts-app_client_ui_Filte-81c500.bundle.js.map