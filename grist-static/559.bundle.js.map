{"version":3,"file":"559.bundle.js","mappings":"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","sources":["./app/client/lib/ACIndex.ts?","./app/client/lib/ACSelect.ts?","./app/client/lib/clipboardUtils.ts?","./app/client/lib/testState.ts?","./app/client/ui/UserItem.ts?","./app/client/lib/MultiUserManager.ts?","./app/client/lib/ACUserManager.ts?","./app/common/ShareAnnotator.ts?","./app/client/models/UserManagerModel.ts?","./app/client/ui/UserManager.ts?","./app/client/ui/inputs.ts?","./app/client/ui/shadowScroll.ts?","./app/common/emails.ts?","./node_modules/lodash/_asciiToArray.js?","./node_modules/lodash/_baseIsRegExp.js?","./node_modules/lodash/_basePropertyOf.js?","./node_modules/lodash/_baseSlice.js?","./node_modules/lodash/_baseSome.js?","./node_modules/lodash/_castSlice.js?","./node_modules/lodash/_deburrLetter.js?","./node_modules/lodash/_hasUnicode.js?","./node_modules/lodash/_stringToArray.js?","./node_modules/lodash/_unicodeToArray.js?","./node_modules/lodash/deburr.js?","./node_modules/lodash/escapeRegExp.js?","./node_modules/lodash/isRegExp.js?","./node_modules/lodash/some.js?","./node_modules/lodash/split.js?"],"sourcesContent":["/**\n * A search index for auto-complete suggestions.\n *\n * This implementation indexes words, and suggests items based on a best-match score, including\n * amount of overlap and position of words. It searches case-insensitively and only at the start\n * of words. E.g. searching for \"Blue\" would match \"Blu\" in \"Lavender Blush\", but searching for\n * \"lush\" would only match the \"L\" in \"Lavender\".\n */\n\nimport {localeCompare, nativeCompare, sortedIndex} from 'app/common/gutil';\nimport {DomContents} from 'grainjs';\nimport escapeRegExp = require(\"lodash/escapeRegExp\");\nimport deburr = require(\"lodash/deburr\");\nimport split = require(\"lodash/split\");\n\nexport interface ACItem {\n  // This should be a trimmed lowercase version of the item's text. It may be an accessor.\n  // Note that items with empty cleanText are never suggested.\n  cleanText: string;\n}\n\n// Returns a trimmed, lowercase version of a string,\n// from which accents and other diacritics have been removed,\n// so that autocomplete is case- and accent-insensitive.\nexport function normalizeText(text: string): string {\n  return deburr(text).trim().toLowerCase();\n}\n\n// Regexp used to split text into words; includes nearly all punctuation. This means that\n// \"foo-bar\" may be searched by \"bar\", but it's impossible to search for punctuation itself (e.g.\n// \"a-b\" and \"a+b\" are not distinguished). (It's easy to exclude unicode punctuation too if the\n// need arises, see https://stackoverflow.com/a/25575009/328565).\nconst wordSepRegexp = /[\\s!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~]+/;\n\n/**\n * An auto-complete index, which simply allows searching for a string.\n */\nexport interface ACIndex<Item extends ACItem> {\n  search(searchText: string): ACResults<Item>;\n}\n\n// Splits text into an array of pieces, with odd-indexed pieces being the ones to highlight.\nexport type HighlightFunc = (text: string) => string[];\n\nexport const highlightNone: HighlightFunc = (text) => [text];\n\n/**\n * AutoComplete results include the suggested items, which one to highlight, and a function for\n * highlighting the matched portion of each item.\n */\nexport interface ACResults<Item extends ACItem> {\n  // Matching items in order from best match to worst.\n  items: Item[];\n\n  // May be used to highlight matches using buildHighlightedDom().\n  highlightFunc: HighlightFunc;\n\n  // index of a good match (normally 0), or -1 if no great match\n  selectIndex: number;\n}\n\ninterface Word {\n  word: string;     // The indexed word\n  index: number;    // Index into _allItems for the item containing this word.\n  pos: number;      // Position of the word within the item where it occurred.\n}\n\n/**\n * Implements a search index. It doesn't currently support updates; when any values change, the\n * index needs to be rebuilt from scratch.\n */\nexport class ACIndexImpl<Item extends ACItem> implements ACIndex<Item> {\n  private _allItems: Item[];\n\n  // All words from _allItems, sorted.\n  private _words: Word[];\n\n  // Creates an index for the given list of items.\n  // The max number of items to suggest may be set using _maxResults (default is 50).\n  // If _keepOrder is true, best matches will be suggested in the order they occur in items,\n  // rather than order by best score.\n  constructor(items: Item[], private _maxResults: number = 50, private _keepOrder = false) {\n    this._allItems = items.slice(0);\n\n    // Collects [word, occurrence, position] tuples for all words in _allItems.\n    const allWords: Word[] = [];\n    for (let index = 0; index < this._allItems.length; index++) {\n      const item = this._allItems[index];\n      const words = item.cleanText.split(wordSepRegexp).filter(w => w);\n      for (let pos = 0; pos < words.length; pos++) {\n        allWords.push({word: words[pos], index, pos});\n      }\n    }\n\n    allWords.sort((a, b) => localeCompare(a.word, b.word));\n    this._words = allWords;\n  }\n\n\n  // The main search function. SearchText will be cleaned (trimmed and lowercased) at the start.\n  // Empty search text returns the first N items in the search universe.\n  public search(searchText: string): ACResults<Item> {\n    const cleanedSearchText = normalizeText(searchText);\n    const searchWords = cleanedSearchText.split(wordSepRegexp).filter(w => w);\n\n    // Maps item index in _allItems to its score.\n    const myMatches = new Map<number, number>();\n\n    if (searchWords.length > 0) {\n      // For each of searchWords, go through items with an overlap, and update their scores.\n      for (let k = 0; k < searchWords.length; k++) {\n        const searchWord = searchWords[k];\n        for (const [itemIndex, score] of this._findOverlaps(searchWord, k)) {\n          myMatches.set(itemIndex, (myMatches.get(itemIndex) || 0) + score);\n        }\n      }\n\n      // Give an extra point to items that start with the searchText.\n      for (const [itemIndex, score] of myMatches) {\n        if (this._allItems[itemIndex].cleanText.startsWith(cleanedSearchText)) {\n          myMatches.set(itemIndex, score + 1);\n        }\n      }\n    }\n\n    // Array of pairs [itemIndex, score], sorted by score (desc) and itemIndex.\n    const sortedMatches = Array.from(myMatches)\n      .sort((a, b) => nativeCompare(b[1], a[1]) || nativeCompare(a[0], b[0]))\n      .slice(0, this._maxResults);\n\n    const itemIndices: number[] = sortedMatches.map(([index, score]) => index);\n\n    // Append enough non-matching indices to reach maxResults.\n    for (let i = 0; i < this._allItems.length && itemIndices.length < this._maxResults; i++) {\n      if (this._allItems[i].cleanText && !myMatches.has(i)) {\n        itemIndices.push(i);\n      }\n    }\n\n    if (this._keepOrder) {\n      itemIndices.sort(nativeCompare);\n    }\n    const items = itemIndices.map(index => this._allItems[index]);\n\n    if (!cleanedSearchText) {\n      // In this case we are just returning the first few items.\n      return {items, highlightFunc: highlightNone, selectIndex: -1};\n    }\n\n    const highlightFunc = highlightMatches.bind(null, searchWords);\n\n    // If we have a best match, and any word in it actually starts with the search text, report it\n    // as a default selection for highlighting. Otherwise, no item will be auto-selected.\n    let selectIndex = sortedMatches.length > 0 ? itemIndices.indexOf(sortedMatches[0][0]) : -1;\n    if (selectIndex >= 0 && !startsWithText(items[selectIndex], cleanedSearchText, searchWords)) {\n      selectIndex = -1;\n    }\n    return {items, highlightFunc, selectIndex};\n  }\n\n  /**\n   * Given one of the search words, looks it up in the indexed list of words and searches up and\n   * down the list for all words that share a prefix with it. Each such word contributes something\n   * to the score of the index entry it is a part of.\n   *\n   * Returns a Map from the index entry (index into _allItems) to the score which this searchWord\n   * contributes to it.\n   *\n   * The searchWordPos argument is the position of searchWord in the overall search text (e.g. 0\n   * if it's the first word). It is used for the position bonus, to give higher scores to entries\n   * whose words occur in the same order as in the search text.\n   */\n  private _findOverlaps(searchWord: string, searchWordPos: number): Map<number, number> {\n    const insertIndex = sortedIndex<{word: string}>(this._words, {word: searchWord},\n      (a, b) => localeCompare(a.word, b.word));\n\n    // Maps index of item to its score.\n    const scored = new Map<number, number>();\n\n    // Search up and down the list, accepting smaller and smaller overlap.\n    for (const step of [1, -1]) {\n      let prefix = searchWord;\n      let index = insertIndex + (step > 0 ? 0 : -1);\n      while (prefix && index >= 0 && index < this._words.length) {\n        for ( ; index >= 0 && index < this._words.length; index += step) {\n          const wordEntry = this._words[index];\n          // Once we reach a word that doesn't start with our prefix, break this loop, so we can\n          // reduce the length of the prefix and keep scanning.\n          if (!wordEntry.word.startsWith(prefix)) { break; }\n\n          // The contribution of this word's to the score consists primarily of the length of\n          // overlap (i.e. length for the current prefix).\n          const baseScore = prefix.length;\n\n          // To this we add 1 if the word matches exactly.\n          const fullWordBonus = (wordEntry.word === searchWord ? 1 : 0);\n\n          // To prefer matches where words occur in the same order as searched (e.g. searching for\n          // \"Foo B\" should prefer \"Foo Bar\" over \"Bar Foo\"), we give a bonus based on the\n          // position of the word in the search text and the entry text. (If positions match as\n          // 0:0 and 1:1, the total position bonus is 2^0+2^(-2)=1.25; while the bonus from 0:1\n          // and 1:0 would be 2^(-1) + 2^(-1)=1.0.)\n          const positionBonus = Math.pow(2, -(searchWordPos + wordEntry.pos));\n\n          const itemScore = baseScore + fullWordBonus + positionBonus;\n          // Each search word contributes only one score (e.g. a search for \"Foo\" will partially\n          // match both words in \"forty five\", but only the higher of the matches will count).\n          if (itemScore >= (scored.get(wordEntry.index) || 0)) {\n            scored.set(wordEntry.index, itemScore);\n          }\n        }\n        prefix = prefix.slice(0, -1);\n      }\n    }\n    return scored;\n  }\n}\n\n\nexport type BuildHighlightFunc = (match: string) => DomContents;\n\n/**\n * Converts text to DOM with matching bits of text rendered using highlight(match) function.\n */\nexport function buildHighlightedDom(\n  text: string, highlightFunc: HighlightFunc, highlight: BuildHighlightFunc\n): DomContents {\n  if (!text) { return text; }\n  const parts = highlightFunc(text);\n  return parts.map((part, k) => k % 2 ? highlight(part) : part);\n}\n\n\n// Same as wordSepRegexp, but with capturing parentheses.\nconst wordSepRegexpParen = new RegExp(`(${wordSepRegexp.source})`);\n\n/**\n * Splits text into pieces, with odd-numbered pieces the ones matching a prefix of some\n * searchWord, i.e. the ones to highlight.\n */\nfunction highlightMatches(searchWords: string[], text: string): string[] {\n  const textParts = text.split(wordSepRegexpParen);\n  const outputs = [''];\n  for (let i = 0; i < textParts.length; i += 2) {\n    const word = textParts[i];\n    const separator = textParts[i + 1] || '';\n    // deburr (remove diacritics) was used to produce searchWords, so `word` needs to match that.\n    const prefixLen = findLongestPrefixLen(deburr(word).toLowerCase(), searchWords);\n    if (prefixLen === 0) {\n      outputs[outputs.length - 1] += word + separator;\n    } else {\n      // Split into unicode 'characters' that keep diacritics combined\n      const chars = split(word, '');\n      outputs.push(\n        chars.slice(0, prefixLen).join(''),\n        chars.slice(prefixLen).join('') + separator\n      );\n    }\n  }\n  return outputs;\n}\n\nfunction findLongestPrefixLen(text: string, choices: string[]): number {\n  return choices.reduce((max, choice) => Math.max(max, findCommonPrefixLength(text, choice)), 0);\n}\n\nfunction findCommonPrefixLength(text1: string, text2: string): number {\n  let i = 0;\n  while (i < text1.length && text1[i] === text2[i]) { ++i; }\n  return i;\n}\n\n/**\n * Checks whether `item` starts with `text`, or whether all words of text are prefixes of the\n * words of `item`. (E.g. it would return true if item is \"New York\", and text is \"ne yo\".)\n */\nfunction startsWithText(item: ACItem, text: string, searchWords: string[]): boolean {\n  if (item.cleanText.startsWith(text)) { return true; }\n\n  const regexp = new RegExp(searchWords.map(w => `\\\\b` + escapeRegExp(w)).join('.*'));\n  const cleanText = item.cleanText.split(wordSepRegexp).join(' ');\n  return regexp.test(cleanText);\n}\n","import {ACIndex, ACItem, buildHighlightedDom} from 'app/client/lib/ACIndex';\nimport {Autocomplete, IAutocompleteOptions} from 'app/client/lib/autocomplete';\nimport {theme} from \"app/client/ui2018/cssVars\";\nimport {icon} from \"app/client/ui2018/icons\";\nimport {menuCssClass} from 'app/client/ui2018/menus';\nimport {dom, DomElementArg, Holder, IDisposableOwner, Observable, styled} from 'grainjs';\n\nexport interface ACSelectItem extends ACItem {\n  value: string;\n  label: string;\n}\n\n/**\n * Builds a text input with an autocomplete dropdown.\n * Note that because it is currently only used in the right-side panel, it is designed to avoid\n * keeping focus.\n */\nexport function buildACSelect(\n  owner: IDisposableOwner,\n  options: {\n    disabled?: Observable<boolean>,\n    acIndex: ACIndex<ACSelectItem>,\n    valueObs: Observable<string>,\n    save: (value: string, item: ACSelectItem|undefined) => Promise<void>|void\n  },\n  ...args: DomElementArg[]\n) {\n  const {acIndex, valueObs, save} = options;\n  const acHolder = Holder.create<Autocomplete<ACSelectItem>>(owner);\n  let textInput: HTMLInputElement;\n\n  const isOpen = () => !acHolder.isEmpty();\n  const acOpen = () => acHolder.isEmpty() && Autocomplete.create(acHolder, textInput, acOptions);\n  const acClose = () => acHolder.clear();\n  const finish = () => { acClose(); textInput.blur(); };\n  const revert = () => { textInput.value = valueObs.get(); finish(); };\n  const commitOrRevert = async () => { (await commitIfValid()) || revert(); };\n  const openOrCommit = () => { isOpen() ? commitOrRevert().catch(() => {}) : acOpen(); };\n\n  const commitIfValid = async () => {\n    const item = acHolder.get()?.getSelectedItem();\n    if (item) {\n      textInput.value = item.value;\n    }\n    textInput.disabled = true;\n    try {\n      await save(textInput.value, item);\n      finish();\n      return true;\n    } catch (e) {\n      return false;\n    } finally {\n      textInput.disabled = false;\n    }\n  };\n\n  const onMouseDown = (ev: MouseEvent) => {\n    ev.preventDefault();    // Don't let it affect focus, since we focus/blur manually.\n    if (options.disabled?.get()) {\n      return;\n    }\n    if (!isOpen()) { textInput.focus(); }\n    openOrCommit();\n  };\n\n  const acOptions: IAutocompleteOptions<ACSelectItem> = {\n    menuCssClass: `${menuCssClass} test-acselect-dropdown`,\n    search: async (term: string) => acIndex.search(term),\n    renderItem: (item, highlightFunc) =>\n      cssSelectItem(buildHighlightedDom(item.label, highlightFunc, cssMatchText)),\n    getItemText: (item) => item.value,\n    onClick: commitIfValid,\n  };\n\n  return cssSelectBtn(\n    textInput = cssInput({type: 'text'},\n      dom.prop('value', valueObs),\n      dom.on('focus', (ev, elem) => elem.select()),\n      dom.on('blur', commitOrRevert),\n      dom.prop(\"disabled\", (use) => options.disabled ? use(options.disabled) : false),\n      dom.onKeyDown({\n        Escape: revert,\n        Enter: openOrCommit,\n        ArrowDown: acOpen,\n        Tab: commitIfValid,\n      }),\n      dom.on('input', acOpen),\n    ),\n    dom.on('mousedown', onMouseDown),\n    cssIcon('Dropdown'),\n    ...args\n  );\n}\n\nconst cssSelectBtn = styled('div', `\n  position: relative;\n  width: 100%;\n  height: 30px;\n  color: ${theme.selectButtonFg};\n  --icon-color: ${theme.selectButtonFg};\n`);\n\nexport const cssSelectItem = styled('li', `\n  color: ${theme.menuItemFg};\n  display: block;\n  white-space: pre;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  outline: none;\n  padding: var(--weaseljs-menu-item-padding, 8px 24px);\n  cursor: pointer;\n\n  &.selected {\n    background-color: ${theme.menuItemSelectedBg};\n    color:            ${theme.menuItemSelectedFg};\n  }\n`);\n\nconst cssInput = styled('input', `\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  height: 100%;\n  width: 100%;\n  padding: 0 6px;\n  outline: none;\n  border: 1px solid ${theme.inputBorder};\n  border-radius: 3px;\n  cursor: pointer;\n  line-height: 16px;\n  cursor: pointer;\n\n  &:disabled {\n    color: ${theme.inputDisabledFg};\n    background-color: ${theme.inputDisabledBg};\n  }\n  &:focus {\n    cursor: initial;\n    outline: none;\n    box-shadow: 0px 0px 2px 2px ${theme.inputFocus};\n  }\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n`);\n\nconst cssIcon = styled(icon, `\n  position: absolute;\n  right: 6px;\n  top: calc(50% - 8px);\n`);\n\nconst cssMatchText = styled('span', `\n  color: ${theme.autocompleteMatchText};\n  .selected > & {\n    color: ${theme.autocompleteSelectedMatchText};\n  }\n`);\n","import {get as getBrowserGlobals} from 'app/client/lib/browserGlobals';\n\nconst G = getBrowserGlobals('document', 'window');\n\n/**\n * Copy text or data to the clipboard.\n */\nexport async function copyToClipboard(data: string | ClipboardItem) {\n  if (typeof data === 'string') {\n    await copyTextToClipboard(data);\n  } else {\n    await copyDataToClipboard(data);\n  }\n}\n\n/**\n * Copy text to the clipboard.\n */\nasync function copyTextToClipboard(txt: string) {\n  // If present and we have permission to use it, the navigator.clipboard interface\n  // is convenient.  This method works in non-headless tests, and regular chrome\n  // and firefox.\n  if (G.window.navigator && G.window.navigator.clipboard && G.window.navigator.clipboard.writeText) {\n    try {\n      await G.window.navigator.clipboard.writeText(txt);\n      return;\n    } catch (e) {\n      // no joy, try another way.\n    }\n  }\n  // Otherwise fall back on document.execCommand('copy'), which requires text in\n  // the dom to be selected.  Implementation here based on:\n  //   https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\n  // This fallback takes effect at least in headless tests, and in Safari.\n  const stash = G.document.createElement('textarea');\n  stash.value = txt;\n  stash.setAttribute('readonly', '');\n  stash.style.position = 'absolute';\n  stash.style.left = '-10000px';\n  G.document.body.appendChild(stash);\n  const selection = G.document.getSelection().rangeCount > 0 && G.document.getSelection().getRangeAt(0);\n  stash.select();\n  G.document.execCommand('copy');\n  G.document.body.removeChild(stash);\n  if (selection) {\n    G.document.getSelection().removeAllRanges();\n    G.document.getSelection().addRange(selection);\n  }\n}\n\n/**\n * Copy data to the clipboard.\n */\nasync function copyDataToClipboard(data: ClipboardItem) {\n  if (!G.window.navigator?.clipboard?.write) {\n    throw new Error('navigator.clipboard.write is not supported on this browser');\n  }\n\n  await G.window.navigator.clipboard.write([data]);\n}\n\n/**\n * Read text from the clipboard.\n */\nexport function readTextFromClipboard(): Promise<string> {\n  if (!G.window.navigator?.clipboard?.readText) {\n    throw new Error('navigator.clipboard.readText is not supported on this browser');\n  }\n\n  return G.window.navigator.clipboard.readText();\n}\n\n/**\n * Read data from the clipboard.\n */\nexport function readDataFromClipboard(): Promise<ClipboardItem[]> {\n  if (!G.window.navigator?.clipboard?.read) {\n    throw new Error('navigator.clipboard.read is not supported on this browser');\n  }\n\n  return G.window.navigator.clipboard.read();\n}\n","import {get as getBrowserGlobals} from 'app/client/lib/browserGlobals';\nimport {TestState} from 'app/common/TestState';\n\nconst G = getBrowserGlobals('window');\n\nexport function setTestState(state: Partial<TestState>) {\n  if (!('testGrist' in G.window)) {\n    G.window.testGrist = {};\n  }\n  Object.assign(G.window.testGrist, state);\n}\n","import {colors, theme, vars} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {input, styled} from 'grainjs';\nimport {cssMenuItem} from 'popweasel';\n\n// Styled elements used for rendering a user, e.g. in the UserManager, Billing, etc.\n// There is a general structure, but enough small variation that there is no helper at this point.\n//\n//   cssMemberListItem(\n//     cssMemberImage(\n//       createUserImage(getFullUser(member), 'large')\n//     ),\n//     cssMemberText(\n//       cssMemberPrimary(NAME),\n//       cssMemberSecondary(EMAIL),\n//       cssMemberType(DESCRIPTION),\n//     )\n//   )\n\nexport const cssMemberListItem = styled('div', `\n  display: flex;\n  width: 460px;\n  min-height: 64px;\n  margin: 0 auto;\n  padding: 12px 0;\n`);\n\nexport const cssMemberImage = styled('div', `\n  width: 40px;\n  height: 40px;\n  margin: 0 4px;\n  border-radius: 20px;\n  background-color: ${colors.lightGreen};\n  background-size: cover;\n\n  .${cssMemberListItem.className}-removed & {\n    opacity: 0.4;\n  }\n`);\n\nexport const cssMemberText = styled('div', `\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 2px 12px;\n  flex: 1 1 0;\n  min-width: 0px;\n  font-size: ${vars.mediumFontSize};\n\n  .${cssMemberListItem.className}-removed & {\n    opacity: 0.4;\n  }\n`);\n\nexport const cssMemberPrimary = styled('span', `\n  font-weight: bold;\n  color: ${theme.text};\n  padding: 2px 0;\n\n  .${cssMenuItem.className}-sel & {\n    color: ${theme.menuItemSelectedFg};\n  }\n`);\n\nexport const cssMemberSecondary = styled('span', `\n  color: ${theme.lightText};\n  /* the following just undo annoying bootstrap styles that apply to all labels */\n  margin: 0px;\n  font-weight: normal;\n  padding: 2px 0;\n  white-space: nowrap;\n\n  .${cssMenuItem.className}-sel & {\n    color: ${theme.menuItemSelectedFg};\n  }\n`);\n\nexport const cssMemberType = styled('span', `\n  color: ${theme.lightText};\n  /* the following just undo annoying bootstrap styles that apply to all labels */\n  margin: 0px;\n  font-weight: normal;\n  padding: 2px 0;\n  white-space: nowrap;\n\n  .${cssMenuItem.className}-sel & {\n    color: ${theme.menuItemSelectedFg};\n  }\n`);\n\nexport const cssMemberTypeProblem = styled('span', `\n  color: ${theme.errorText};\n  /* the following just undo annoying bootstrap styles that apply to all labels */\n  margin: 0px;\n  font-weight: normal;\n  padding: 2px 0;\n  white-space: nowrap;\n\n  .${cssMenuItem.className}-sel & {\n    color: ${theme.menuItemSelectedFg};\n  }\n`);\n\nexport const cssMemberBtn = styled('div', `\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n\n  &-disabled {\n    opacity: 0.3;\n    cursor: default;\n  }\n`);\n\nexport const cssRemoveIcon = styled(icon, `\n  background-color: ${theme.lightText};\n  margin: 12px 0;\n`);\n\nexport const cssEmailInputContainer = styled('div', `\n  position: relative;\n  display: flex;\n  height: 42px;\n  padding: 0 3px;\n  margin: 16px 63px;\n  border: 1px solid ${theme.inputBorder};\n  border-radius: 3px;\n  font-size: ${vars.mediumFontSize};\n  outline: none;\n\n  &-green {\n    border: 1px solid ${theme.inputValid};\n  }\n`);\n\nexport const cssEmailInput = styled(input, `\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n  flex: 1 1 0;\n  font-size: ${vars.mediumFontSize};\n  font-family: ${vars.fontFamily};\n  outline: none;\n  border: none;\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n`);\n\nexport const cssMailIcon = styled(icon, `\n  margin: 12px 8px 12px 13px;\n  background-color: ${theme.lightText};\n`);\n","import {computed, Computed, dom, DomElementArg, IDisposableOwner, Observable, styled} from \"grainjs\";\nimport {cssAnimatedModal, cssModalBody, cssModalButtons, cssModalTitle,\n        IModalControl, modal} from 'app/client/ui2018/modals';\nimport {bigBasicButton, bigPrimaryButton} from 'app/client/ui2018/buttons';\nimport {mediaXSmall, testId, theme, vars} from 'app/client/ui2018/cssVars';\nimport {IOrgMemberSelectOption, UserManagerModel} from 'app/client/models/UserManagerModel';\nimport {icon} from 'app/client/ui2018/icons';\nimport {textarea} from \"app/client/ui/inputs\";\nimport {BasicRole, isBasicRole, NonGuestRole, VIEWER} from \"app/common/roles\";\nimport {menu, menuItem} from 'app/client/ui2018/menus';\n\nfunction parseEmailList(emailListRaw: string): Array<string> {\n  return emailListRaw\n    .split('\\n')\n    .map(email => email.trim().toLowerCase())\n    .filter(email => email !== \"\");\n}\n\nfunction validateEmail(email: string): boolean {\n  const mailformat = /\\S+@\\S+\\.\\S+/;\n  return mailformat.test(email);\n}\n\nexport function buildMultiUserManagerModal(\n  owner: IDisposableOwner,\n  model: UserManagerModel,\n  onAdd: (email: string, role: NonGuestRole) => void,\n) {\n  const emailListObs = Observable.create(owner, \"\");\n  const rolesObs = Observable.create<BasicRole>(owner, VIEWER);\n  const isValidObs = Observable.create(owner, true);\n\n  const enableAdd: Computed<boolean> = computed(\n    (use) => Boolean(use(emailListObs) && use(rolesObs) && use(isValidObs))\n  );\n\n  const save = (ctl: IModalControl) => {\n    const emailList = parseEmailList(emailListObs.get());\n    const role = rolesObs.get();\n    if (emailList.some(email => !validateEmail(email))) {\n      isValidObs.set(false);\n    } else {\n      emailList.forEach(email => onAdd(email, role));\n      ctl.close();\n    }\n  };\n\n  return modal(ctl => [\n    { style: 'padding: 0;' },\n    dom.cls(cssAnimatedModal.className),\n    cssTitle(\n      'Invite Users',\n      testId('um-header'),\n    ),\n    cssModalBody(\n      cssUserManagerBody(\n        buildEmailsTextarea(emailListObs, isValidObs),\n        dom.maybe(use => !use(isValidObs), () => cssErrorMessage('At least one email is invalid')),\n        cssInheritRoles(\n          dom('span', 'Access: '),\n          buildRolesSelect(rolesObs, model)\n        )\n      ),\n    ),\n    cssModalButtons(\n      { style: 'margin: 32px 64px; display: flex;' },\n      bigPrimaryButton('Confirm',\n        dom.boolAttr('disabled', (use) => !use(enableAdd)),\n        dom.on('click', () => save(ctl)),\n        testId('um-confirm')\n      ),\n      bigBasicButton(\n        'Cancel',\n        dom.on('click', () => ctl.close()),\n        testId('um-cancel')\n      ),\n    )\n  ]);\n}\n\nfunction buildRolesSelect(\n  roleSelectedObs: Observable<BasicRole>,\n  model: UserManagerModel,\n) {\n  const allRoles = (model.isOrg ? model.orgUserSelectOptions : model.userSelectOptions)\n    .filter((x): x is {value: BasicRole, label: string} => isBasicRole(x.value));\n  return cssOptionBtn(\n    menu(() => [\n      dom.forEach(allRoles, (_role) =>\n        menuItem(() => roleSelectedObs.set(_role.value), _role.label,\n          testId(`um-role-option`)\n        )\n      )\n    ]),\n    dom.text((use) => {\n      // Get the label of the active role.\n      const activeRole = allRoles.find((_role: IOrgMemberSelectOption) => use(roleSelectedObs) === _role.value);\n      return activeRole ? activeRole.label : \"\";\n    }),\n    cssCollapseIcon('Collapse'),\n    testId('um-role-select')\n  );\n}\n\n\nfunction buildEmailsTextarea(\n  emailListObs: Observable<string>,\n  isValidObs: Observable<boolean>,\n  ...args: DomElementArg[]\n) {\n  return cssTextarea(emailListObs,\n    {onInput: true, isValid: isValidObs},\n    {placeholder: \"Enter one email address per line\"},\n    dom.on('change', (_ev) => isValidObs.set(true)),\n     ...args,\n  );\n}\n\n\nconst cssTitle = styled(cssModalTitle, `\n  margin: 40px 64px 0 64px;\n\n  @media ${mediaXSmall} {\n    & {\n      margin: 16px;\n    }\n  }\n`);\n\nconst cssInheritRoles = styled('span', `\n  margin: 13px 63px 42px;\n`);\n\nconst cssErrorMessage = styled('span', `\n  margin: 0 63px;\n  color: ${theme.errorText};\n`);\n\nconst cssOptionBtn = styled('span', `\n  display: inline-flex;\n  font-size: ${vars.mediumFontSize};\n  color: ${theme.controlFg};\n  cursor: pointer;\n`);\n\nconst cssCollapseIcon = styled(icon, `\n  margin-top: 1px;\n  background-color: ${theme.controlFg};\n`);\n\nconst cssAccessDetailsBody = styled('div', `\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n  font-size: ${vars.mediumFontSize};\n`);\n\nconst cssUserManagerBody = styled(cssAccessDetailsBody, `\n  height: 374px;\n  border-bottom: 1px solid ${theme.modalBorderDark};\n`);\n\nconst cssTextarea = styled(textarea, `\n  margin: 16px 63px;\n  padding: 12px 10px;\n  border-radius: 3px;\n  resize: none;\n  border: 1px solid ${theme.inputBorder};\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n  flex: 1 1 0;\n  font-size: ${vars.mediumFontSize};\n  font-family: ${vars.fontFamily};\n  outline: none;\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n`);\n","import {makeT} from 'app/client/lib/localization';\nimport {ACIndex, ACItem, ACResults, buildHighlightedDom, normalizeText} from \"app/client/lib/ACIndex\";\nimport {cssSelectItem} from \"app/client/lib/ACSelect\";\nimport {Autocomplete, IAutocompleteOptions} from \"app/client/lib/autocomplete\";\nimport {colors, testId, theme} from \"app/client/ui2018/cssVars\";\nimport {menuCssClass} from \"app/client/ui2018/menus\";\nimport {\n  cssEmailInput,\n  cssEmailInputContainer,\n  cssMailIcon,\n  cssMemberImage,\n  cssMemberListItem,\n  cssMemberPrimary,\n  cssMemberSecondary,\n  cssMemberText,\n} from \"app/client/ui/UserItem\";\nimport {createUserImage, cssUserImage} from \"app/client/ui/UserImage\";\nimport {Computed, computed, dom, DomElementArg, Holder, IDisposableOwner, Observable, styled} from \"grainjs\";\nimport {cssMenuItem} from \"popweasel\";\n\nconst t = makeT('ACUserManager');\n\nexport interface ACUserItem extends ACItem {\n  value: string;\n  label: string;\n  name: string;\n  email: string;\n  id: number;\n  picture?: string | null; // when present, a url to a public image of unspecified dimensions.\n  isNew?: boolean;\n}\n\nexport function buildACMemberEmail(\n  owner: IDisposableOwner,\n  options: {\n    acIndex: ACIndex<ACUserItem>;\n    emailObs: Observable<string>;\n    save: (value: string) => void;\n    prompt?: {email: string},\n  },\n  ...args: DomElementArg[]\n) {\n  const {acIndex, emailObs, save, prompt} = options;\n  const acHolder = Holder.create<Autocomplete<ACUserItem>>(owner);\n  let emailInput: HTMLInputElement;\n\n  const isValid = Observable.create(owner, true);\n\n  const isOpen = () => !acHolder.isEmpty();\n  const acOpen = () => acHolder.isEmpty() && Autocomplete.create(acHolder, emailInput, acOptions);\n  const acClose = () => acHolder.clear();\n  const finish = () => {\n    acClose();\n    emailObs.set(\"\");\n    emailInput.value = emailObs.get();\n    emailInput.focus();\n  };\n  const onEnter = () => {\n    isOpen() ? commitIfValid() : acOpen();\n  };\n\n  const commitIfValid = () => {\n    const item = acHolder.get()?.getSelectedItem();\n    if (item) {\n      emailObs.set(item.value);\n    }\n    emailInput.setCustomValidity(\"\");\n    isValid.set(emailInput.checkValidity());\n\n    const selectedEmail = item?.value || emailObs.get();\n    try {\n      if (selectedEmail && isValid.get()) {\n        save(emailObs.get());\n        finish();\n      }\n    } catch (e) {\n      emailInput.setCustomValidity(e.message);\n    } finally {\n      emailInput.reportValidity();\n    }\n  };\n\n  const maybeShowAddNew = async (results: ACResults<ACUserItem>, text: string): Promise<ACResults<ACUserItem>> => {\n    const cleanText = normalizeText(text);\n    const items = results.items\n      .filter(item => item.cleanText.includes(cleanText))\n      .sort((a, b) => a.cleanText.localeCompare(b.cleanText));\n    results.items = items;\n    if (!results.items.length && cleanText) {\n      const newObject = {\n        value: text,\n        cleanText,\n        name: \"\",\n        email: \"\",\n        isNew: true,\n        label: text,\n        id: 0,\n      };\n      results.items.push(newObject);\n    }\n    return results;\n  };\n\n  const renderSearchItem = (item: ACUserItem, highlightFunc: any): HTMLLIElement => (item?.isNew ? cssSelectItem(\n    cssMemberListItem(\n      cssUserImagePlus(\n        \"+\",\n        cssUserImage.cls(\"-large\"),\n        cssUserImagePlus.cls('-invalid', (use) => !use(enableAdd),\n        )),\n      cssMemberText(\n        cssMemberPrimaryPlus(t(\"Invite new member\")),\n        cssMemberSecondaryPlus(\n          // dom.text(use => `We'll email an invite to ${use(emailObs)}`)\n          dom.text(use => t(\"We'll email an invite to {{email}}\", {email: use(emailObs)})) // TODO i18next\n        )\n      ),\n      testId(\"um-add-email\")\n    )\n  ) : cssSelectItem(\n    cssMemberListItem(\n      cssMemberImage(createUserImage(item, \"large\")),\n      cssMemberText(\n        cssMemberPrimaryPlus(item.name, testId(\"um-member-name\")),\n        cssMemberSecondaryPlus(buildHighlightedDom(item.label, highlightFunc, cssMatchText))\n      )\n    )\n  ));\n\n  const enableAdd: Computed<boolean> = computed((use) => Boolean(use(emailObs) && use(isValid)));\n\n  const acOptions: IAutocompleteOptions<ACUserItem> = {\n    attach: null,\n    menuCssClass: `${menuCssClass} test-acselect-dropdown`,\n    search: (term) => maybeShowAddNew(acIndex.search(term), term),\n    renderItem: renderSearchItem,\n    getItemText: (item) => item.value,\n    onClick: commitIfValid,\n  };\n\n  const result = cssEmailInputContainer(\n    cssMailIcon(\"Mail\"),\n    (emailInput = cssEmailInput(\n      emailObs,\n      {onInput: true, isValid},\n      {type: \"email\", placeholder: t(\"Enter email address\")},\n      dom.on(\"input\", acOpen),\n      dom.on(\"focus\", acOpen),\n      dom.on(\"click\", acOpen),\n      dom.on(\"blur\", acClose),\n      dom.onKeyDown({\n        Escape: finish,\n        Enter: onEnter,\n        ArrowDown: acOpen,\n        Tab: commitIfValid,\n      }),\n    )),\n    cssEmailInputContainer.cls('-green', enableAdd),\n    ...args\n  );\n\n  // Reset custom validity that we sometimes set.\n  owner.autoDispose(emailObs.addListener(() => emailInput.setCustomValidity(\"\")));\n\n  if (prompt) { setTimeout(() => emailInput.focus(), 0); }\n\n  return result;\n}\n\nconst cssMemberPrimaryPlus = styled(cssMemberPrimary, `\n  .${cssSelectItem.className}.selected & {\n    color: ${theme.menuItemSelectedFg};\n  }\n`);\n\nconst cssMemberSecondaryPlus = styled(cssMemberSecondary, `\n  .${cssSelectItem.className}.selected & {\n    color: ${theme.menuItemSelectedFg};\n  }\n`);\n\nconst cssMatchText = styled(\"span\", `\n  color: ${theme.autocompleteMatchText};\n  .${cssSelectItem.className}.selected & {\n    color: ${theme.autocompleteSelectedMatchText};\n  }\n`);\n\nconst cssUserImagePlus = styled(cssUserImage, `\n  background-color: ${colors.lightGreen};\n  margin: auto 0;\n\n  &-invalid {\n    background-color: ${colors.mediumGrey};\n  }\n\n  .${cssMenuItem.className}-sel & {\n    background-color: ${theme.menuItemIconSelectedFg};\n    color: ${theme.menuItemSelectedBg};\n  }\n`);\n","import { isTeamPlan, Product } from 'app/common/Features';\nimport { normalizeEmail } from 'app/common/emails';\nimport { PermissionData, PermissionDelta } from 'app/common/UserAPI';\n\n/**\n * Mark that the share is share number #at of a maximum of #top. The #at values\n * start at 1.\n */\nexport interface ShareLimitAnnotation {\n  at: number;\n  top?: number;\n}\n\n/**\n * Some facts about a share.\n */\nexport interface ShareAnnotation {\n  isMember?: boolean;   // Is the share for a team member.\n  isSupport?: boolean;  // Is the share for a support user.\n  collaboratorLimit?: ShareLimitAnnotation;  // Does the share count towards a collaborator limit.\n}\n\n/**\n * Facts about all shares for a resource.\n */\nexport interface ShareAnnotations {\n  hasTeam?: boolean;   // Is the resource in a team site?\n  users: Map<string, ShareAnnotation>;  // Annotations keyed by normalized user email.\n}\n\nexport interface ShareAnnotatorOptions {\n  supportEmail?: string;   // Known email address of the support user (e.g. support@getgrist.com).\n}\n\n/**\n * Helper for annotating users mentioned in a proposed change of shares, given the\n * current shares in place.\n */\nexport class ShareAnnotator {\n  private _features = this._product?.features ?? {};\n  private _supportEmail = this._options.supportEmail;\n\n  constructor(\n    private _product: Product|null,\n    private _state: PermissionData,\n    private _options: ShareAnnotatorOptions = {}\n  ) {\n  }\n\n  public updateState(state: PermissionData) {\n    this._state = state;\n  }\n\n  public annotateChanges(change: PermissionDelta): ShareAnnotations {\n    const features = this._features;\n    const annotations: ShareAnnotations = {\n      hasTeam: !this._product || isTeamPlan(this._product.name),\n      users: new Map(),\n    };\n    if (features.maxSharesPerDocPerRole || features.maxSharesPerWorkspace) {\n      // For simplicity, don't try to annotate if limits not used at the time of writing\n      // are in place.\n      return annotations;\n    }\n    const top = features.maxSharesPerDoc;\n    let at = 0;\n    const makeAnnotation = (user: {email: string, isMember?: boolean, isSupport?: boolean, access: string|null}) => {\n      const annotation: ShareAnnotation = {\n        isMember: user.isMember,\n      };\n      if (user.isSupport) {\n        return { isSupport: true };\n      }\n      if (!annotation.isMember && user.access) {\n        at++;\n        annotation.collaboratorLimit = {\n          at,\n          top\n        };\n      }\n      return annotation;\n    };\n    const removed = new Set(\n      Object.entries(change?.users||{}).filter(([, v]) => v === null)\n        .map(([k, ]) => normalizeEmail(k)));\n    for (const user of this._state.users) {\n      if (removed.has(user.email)) { continue; }\n      if (!user.isMember && !user.access) { continue; }\n      annotations.users.set(user.email, makeAnnotation(user));\n    }\n    const tweaks = new Set(\n      Object.entries(change?.users||{}).filter(([, v]) => v !== null)\n        .map(([k, ]) => normalizeEmail(k)));\n    for (const email of tweaks) {\n      const annotation = annotations.users.get(email) || makeAnnotation({\n        email,\n        isMember: false,\n        isSupport: Boolean(email.trim() !== '' && email === this._supportEmail),\n        access: '<set>',\n      });\n      annotations.users.set(email, annotation);\n    }\n    return annotations;\n  }\n}\n","import {makeT} from 'app/client/lib/localization';\nimport {GristDoc} from 'app/client/components/GristDoc';\nimport {AppModel} from 'app/client/models/AppModel';\nimport {DocPageModel} from 'app/client/models/DocPageModel';\nimport {ShareAnnotations, ShareAnnotator} from 'app/common/ShareAnnotator';\nimport {normalizeEmail} from 'app/common/emails';\nimport {GristLoadConfig} from 'app/common/gristUrls';\nimport * as roles from 'app/common/roles';\nimport {getGristConfig} from 'app/common/urlUtils';\nimport {ANONYMOUS_USER_EMAIL, Document, EVERYONE_EMAIL, FullUser, getRealAccess, Organization,\n        PermissionData, PermissionDelta, UserAPI, Workspace} from 'app/common/UserAPI';\nimport {computed, Computed, Disposable, obsArray, ObsArray, observable, Observable} from 'grainjs';\nimport some = require('lodash/some');\n\nconst t = makeT('UserManagerModel');\n\nexport interface UserManagerModel {\n  initData: PermissionData;                    // PermissionData used to initialize the UserManager\n  resource: Resource|null;                     // The access resource.\n  resourceType: ResourceType;                  // String representing the access resource type.\n  userSelectOptions: IMemberSelectOption[];    // Select options for each user's role dropdown\n  orgUserSelectOptions: IOrgMemberSelectOption[];  // Select options for each user's role dropdown on the org\n  inheritSelectOptions: IMemberSelectOption[]; // Select options for the maxInheritedRole dropdown\n  publicUserSelectOptions: IMemberSelectOption[]; // Select options for the public member's role dropdown\n  maxInheritedRole: Observable<roles.BasicRole|null>;  // Current unsaved maxInheritedRole setting\n  membersEdited: ObsArray<IEditableMember>;    // Current unsaved editable array of members\n  publicMember: IEditableMember|null;          // Member whose access (VIEWER or null) represents that of\n                                               // anon@ or everyone@ (depending on the settings and resource).\n  isAnythingChanged: Computed<boolean>;        // Indicates whether there are unsaved changes\n  isSelfRemoved: Computed<boolean>;            // Indicates whether current user is removed\n  isOrg: boolean;                              // Indicates if the UserManager is for an org\n  annotations: Observable<ShareAnnotations>;   // More information about shares, keyed by email.\n  isPersonal: boolean;                         // If user access info/control is restricted to self.\n  isPublicMember: boolean;                     // Indicates if current user is a public member.\n\n  activeUser: FullUser|null;                   // Populated if current user is logged in.\n  gristDoc: GristDoc|null;                     // Populated if there is an open document.\n\n  // Analyze the relation that users have to the resource or site.\n  annotate(): void;\n  // Resets all unsaved changes\n  reset(): void;\n  // Recreate annotations, factoring in any changes on the back-end.\n  reloadAnnotations(): Promise<void>;\n  // Writes all unsaved changes to the server.\n  save(userApi: UserAPI, resourceId: number|string): Promise<void>;\n  // Adds a member to membersEdited\n  add(email: string, role: roles.Role|null): void;\n  // Removes a member from membersEdited\n  remove(member: IEditableMember): void;\n  // Returns a boolean indicating if the member is the currently active user.\n  isActiveUser(member: IEditableMember): boolean;\n  // Returns the PermissionDelta reflecting the current unsaved changes in the model.\n  getDelta(): PermissionDelta;\n}\n\nexport type ResourceType = 'organization'|'workspace'|'document';\n\nexport type Resource = Organization|Workspace|Document;\n\nexport interface IEditableMember {\n  id: number;    // Newly invited members do not have ids and are represented by -1\n  name: string;\n  email: string;\n  picture?: string|null;\n  locale?: string|null;\n  access: Observable<roles.Role|null>;\n  parentAccess: roles.BasicRole|null;\n  inheritedAccess: Computed<roles.BasicRole|null>;\n  effectiveAccess: Computed<roles.Role|null>;\n  origAccess: roles.Role|null;\n  isNew: boolean;\n  isRemoved: boolean;\n  isTeamMember?: boolean;\n}\n\n// An option for the select elements used in the UserManager.\nexport interface IMemberSelectOption {\n  value: roles.BasicRole|null;\n  label: string;\n}\n\n// An option for the organization select elements used in the UserManager.\nexport interface IOrgMemberSelectOption {\n  value: roles.NonGuestRole|null;\n  label: string;\n}\n\ninterface IBuildMemberOptions {\n  id: number;\n  name: string;\n  email: string;\n  picture?: string|null;\n  access: roles.Role|null;\n  parentAccess: roles.BasicRole|null;\n  isTeamMember?: boolean;\n}\n\n/**\n *\n */\nexport class UserManagerModelImpl extends Disposable implements UserManagerModel {\n  // Select options for each individual user's role dropdown.\n  public readonly userSelectOptions: IMemberSelectOption[] = [\n    { value: roles.OWNER,  label: t(\"Owner\")  },\n    { value: roles.EDITOR, label: t(\"Editor\") },\n    { value: roles.VIEWER, label: t(\"Viewer\") }\n  ];\n  // Select options for each individual user's role dropdown in the org.\n  public readonly orgUserSelectOptions: IOrgMemberSelectOption[] = [\n    { value: roles.OWNER,  label: t(\"Owner\")  },\n    { value: roles.EDITOR, label: t(\"Editor\") },\n    { value: roles.VIEWER, label: t(\"Viewer\") },\n    { value: roles.MEMBER, label: t(\"No Default Access\") },\n  ];\n  // Select options for the resource's maxInheritedRole dropdown.\n  public readonly inheritSelectOptions: IMemberSelectOption[] = [\n    { value: roles.OWNER,  label: t(\"In Full\")     },\n    { value: roles.EDITOR, label: t(\"View & Edit\") },\n    { value: roles.VIEWER, label: t(\"View Only\")   },\n    { value: null,         label: t(\"None\")        }\n  ];\n  // Select options for the public member's role dropdown.\n  public readonly publicUserSelectOptions: IMemberSelectOption[] = [\n    { value: roles.EDITOR, label: t(\"Editor\") },\n    { value: roles.VIEWER, label: t(\"Viewer\") },\n  ];\n\n  public activeUser: FullUser|null = this._options.activeUser ?? null;\n\n  public resource: Resource|null = this._options.resource ?? null;\n\n  public maxInheritedRole: Observable<roles.BasicRole|null> =\n    observable(this.initData.maxInheritedRole || null);\n\n  // The public member's access settings reflect either those of anonymous users (when\n  // shouldSupportAnon() is true) or those of everyone@ (i.e. access granted to all users,\n  // supported for docs only). The member is null when public access is not supported.\n  public publicMember: IEditableMember|null = this._buildPublicMember();\n\n  public membersEdited = this.autoDispose(obsArray<IEditableMember>(this._buildAllMembers()));\n\n  public annotations = this.autoDispose(observable({users: new Map()}));\n\n  public isPersonal = this.initData.personal ?? false;\n\n  public isPublicMember = this.initData.public ?? false;\n\n  public isOrg: boolean = this.resourceType === 'organization';\n\n  public gristDoc: GristDoc|null = this._options.docPageModel?.gristDoc.get() ?? null;\n\n  // Checks if any members were added/removed/changed, if the max inherited role changed or if the\n  // anonymous access setting changed to enable the confirm button to write changes to the server.\n  public readonly isAnythingChanged: Computed<boolean> = this.autoDispose(computed<boolean>((use) => {\n    const isMemberChangedFn = (m: IEditableMember) => m.isNew || m.isRemoved ||\n      use(m.access) !== m.origAccess;\n    const isInheritanceChanged = !this.isOrg && use(this.maxInheritedRole) !== this.initData.maxInheritedRole;\n    return some(use(this.membersEdited), isMemberChangedFn) || isInheritanceChanged ||\n      (this.publicMember ? isMemberChangedFn(this.publicMember) : false);\n  }));\n\n  // Check if the current user is being removed.\n  public readonly isSelfRemoved: Computed<boolean> = this.autoDispose(computed<boolean>((use) => {\n    return some(use(this.membersEdited), m => m.isRemoved && m.email === this.activeUser?.email);\n  }));\n\n  private _shareAnnotator?: ShareAnnotator;\n\n  constructor(\n    public initData: PermissionData,\n    public resourceType: ResourceType,\n    private _options: {\n      activeUser?: FullUser|null,\n      reload?: () => Promise<PermissionData>,\n      docPageModel?: DocPageModel,\n      appModel?: AppModel,\n      resource?: Resource,\n    }\n  ) {\n    super();\n    if (this._options.appModel) {\n      const product = this._options.appModel.currentProduct;\n      const {supportEmail} = getGristConfig();\n      this._shareAnnotator = new ShareAnnotator(product, initData, {supportEmail});\n    }\n    this.annotate();\n  }\n\n  public reset(): void {\n    this.membersEdited.set(this._buildAllMembers());\n    this.annotate();\n  }\n\n  public async reloadAnnotations(): Promise<void> {\n    if (!this._options.reload || !this._shareAnnotator) { return; }\n    const data = await this._options.reload();\n    // Update the permission data backing the annotations. We don't update the full model\n    // itself - that would be nice, but tricky since the user may have made changes to it.\n    // But at least we can easily update annotations. This is good for the potentially\n    // common flow of opening a doc, starting to add a user, following the suggestion of\n    // adding that user as a member of the site, then returning to finish off adding\n    // them to the doc.\n    this._shareAnnotator.updateState(data);\n    this.annotate();\n  }\n\n  public async save(userApi: UserAPI, resourceId: number|string): Promise<void> {\n    if (this.resourceType === 'organization') {\n      await userApi.updateOrgPermissions(resourceId as number, this.getDelta());\n    } else if (this.resourceType === 'workspace') {\n      await userApi.updateWorkspacePermissions(resourceId as number, this.getDelta());\n    } else if (this.resourceType === 'document') {\n      await userApi.updateDocPermissions(resourceId as string, this.getDelta());\n    }\n  }\n\n  public add(email: string, role: roles.Role|null): void {\n    email = normalizeEmail(email);\n    const members = this.membersEdited.get();\n    const index = members.findIndex((m) => m.email === email);\n    const existing = index > -1 ? members[index] : null;\n    if (existing && existing.isRemoved) {\n      // The member is replaced with the isRemoved set to false to trigger an\n      // update to the membersEdited observable array.\n      this.membersEdited.splice(index, 1, {...existing, isRemoved: false});\n    } else if (existing) {\n      const effective = existing.effectiveAccess.get();\n      if (effective && effective !== roles.GUEST) {\n        // If the member is visible, throw to inform the user.\n        throw new Error(\"This user is already in the list\");\n      }\n      // If the member exists but is not visible, update their access to make them visible.\n      // They should be treated as a new user - removing them should make them invisible again.\n      existing.access.set(role);\n      existing.isNew = true;\n    } else {\n      const newMember = this._buildEditableMember({\n        id: -1, // Use a placeholder for the unknown userId\n        email,\n        name: \"\",\n        access: role,\n        parentAccess: null\n      });\n      newMember.isNew = true;\n      this.membersEdited.push(newMember);\n    }\n    this.annotate();\n  }\n\n  public remove(member: IEditableMember): void {\n    const index = this.membersEdited.get().indexOf(member);\n    if (member.isNew) {\n      this.membersEdited.splice(index, 1);\n    } else {\n      // Keep it in the array with a flag, to simplify comparing \"before\" and \"after\" arrays.\n      this.membersEdited.splice(index, 1, {...member, isRemoved: true});\n    }\n    this.annotate();\n  }\n\n  public isActiveUser(member: IEditableMember): boolean {\n    return member.email === this.activeUser?.email;\n  }\n\n  public annotate() {\n    // Only attempt for documents for now.\n    // TODO: extend to workspaces.\n    if (!this._shareAnnotator) { return; }\n    this.annotations.set(this._shareAnnotator.annotateChanges(this.getDelta({silent: true})));\n  }\n\n  // Construct the permission delta from the changed users/maxInheritedRole.\n  // Give warnings or errors as appropriate (these are suppressed if silent is set).\n  public getDelta(options?: {silent: boolean}): PermissionDelta {\n    const delta: PermissionDelta = { users: {} };\n    if (this.resourceType !== 'organization') {\n      const maxInheritedRole = this.maxInheritedRole.get();\n      if (this.initData.maxInheritedRole !== maxInheritedRole) {\n        delta.maxInheritedRole = maxInheritedRole;\n      }\n    }\n    const members = [...this.membersEdited.get()];\n    if (this.publicMember) {\n      members.push(this.publicMember);\n    }\n    // Loop through the members and update the delta.\n    for (const m of members) {\n      const access = m.access.get();\n      if (!roles.isValidRole(access)) {\n        if (!options?.silent) {\n          throw new Error(`Cannot update user to invalid role ${access}`);\n        }\n        continue;\n      }\n      if (m.isNew || m.isRemoved || m.origAccess !== access) {\n        // Add users whose access changed.\n        delta.users![m.email] = m.isRemoved ? null : access as roles.NonGuestRole;\n      }\n    }\n    return delta;\n  }\n\n  private _buildAllMembers(): IEditableMember[] {\n    // If the UI supports some public access, strip the supported public user (anon@ or\n    // everyone@). Otherwise, keep it, to allow the non-fancy way of adding/removing public access.\n    let users = this.initData.users;\n    const publicMember = this.publicMember;\n    if (publicMember) {\n      users = users.filter(m => m.email !== publicMember.email);\n    }\n    return users.map(m =>\n      this._buildEditableMember({\n        id: m.id,\n        email: m.email,\n        name: m.name,\n        picture: m.picture,\n        access: m.access,\n        parentAccess: m.parentAccess || null,\n        isTeamMember: m.isMember,\n      })\n    );\n  }\n\n  private _buildPublicMember(): IEditableMember|null {\n    // shouldSupportAnon() changes \"public\" access to \"anonymous\" access, and enables it for\n    // workspaces and org level. It's currently used for on-premise installs only.\n    // TODO Think through proper public sharing or workspaces/orgs, and get rid of\n    // shouldSupportAnon() exceptions.\n    const email =\n      shouldSupportAnon() ? ANONYMOUS_USER_EMAIL :\n      (this.resourceType === 'document') ? EVERYONE_EMAIL : null;\n    if (!email) { return null; }\n    const user = this.initData.users.find(m => m.email === email);\n    return this._buildEditableMember({\n      id: user ? user.id : -1,\n      email,\n      name: \"\",\n      access: user ? user.access : null,\n      parentAccess: user ? (user.parentAccess || null) : null,\n    });\n  }\n\n  private _buildEditableMember(member: IBuildMemberOptions): IEditableMember {\n    // Represents the member's access set specifically on the resource of interest.\n    const access = Observable.create(this, member.access);\n    let inheritedAccess: Computed<roles.BasicRole|null>;\n\n    if (member.email === this.activeUser?.email) {\n      // Note that we currently prevent the active user's role from changing to prevent users from\n      // locking themselves out of resources. We ensure that by setting inheritedAccess to the\n      // active user's initial access level, which is OWNER normally. (It's sometimes possible to\n      // open UserManager by a less-privileged user, e.g. if access was just lowered, in which\n      // case any attempted changes will fail on saving.)\n      const initialAccessBasicRole = roles.getEffectiveRole(getRealAccess(member, this.initData));\n      // This pretends to be a computed to match the other case, but is really a constant.\n      inheritedAccess = Computed.create(this, (use) => initialAccessBasicRole);\n    } else {\n      // Gives the role inherited from parent taking the maxInheritedRole into account.\n      inheritedAccess = Computed.create(this, this.maxInheritedRole, (use, maxInherited) =>\n        roles.getWeakestRole(member.parentAccess, maxInherited));\n    }\n    // Gives the effective role of the member on the resource, taking everything into account.\n    const effectiveAccess = Computed.create(this, (use) =>\n      roles.getStrongestRole(use(access), use(inheritedAccess)));\n    effectiveAccess.onWrite((value) => {\n      // For UI simplicity, we use a single dropdown to represent the effective access level of\n      // the user AND to allow changing it. As a result, we do NOT allow using the dropdown to\n      // write/show values that provide less direct access than what the user already inherits.\n      // It is confusing to show and results in no change in the effective access.\n      const inherited = inheritedAccess.get();\n      const isAboveInherit = roles.getStrongestRole(value, inherited) !== inherited;\n      access.set(isAboveInherit ? value : null);\n    });\n    return {\n      id: member.id,\n      email: member.email,\n      name: member.name,\n      picture: member.picture,\n      access,\n      parentAccess: member.parentAccess || null,\n      inheritedAccess,\n      effectiveAccess,\n      origAccess: member.access,\n      isNew: false,\n      isRemoved: false,\n      isTeamMember: member.isTeamMember,\n    };\n  }\n}\n\nexport function getResourceParent(resource: ResourceType): ResourceType|null {\n  if (resource === 'workspace') {\n    return 'organization';\n  } else if (resource === 'document') {\n    return 'workspace';\n  } else {\n    return null;\n  }\n}\n\n// Check whether anon should be supported in the UI\nexport function shouldSupportAnon(): boolean {\n  const gristConfig: GristLoadConfig = (window as any).gristConfig || {};\n  return gristConfig.supportAnon || false;\n}\n","/**\n * This module exports a UserManager component, consisting of a list of emails, each with an\n * associated role (See app/common/roles), and a way to change roles, and add or remove new users.\n * The component is instantiated as a modal with a confirm button to pass changes to the server.\n *\n * It can be instantiated by calling showUserManagerModal with the UserAPI and IUserManagerOptions.\n */\nimport { makeT } from 'app/client/lib/localization';\nimport {commonUrls} from 'app/common/gristUrls';\nimport {capitalizeFirstWord, isLongerThan} from 'app/common/gutil';\nimport {FullUser} from 'app/common/LoginSessionAPI';\nimport * as roles from 'app/common/roles';\nimport {Organization, PermissionData, UserAPI} from 'app/common/UserAPI';\nimport {Computed, Disposable, dom, DomElementArg, Observable, observable, styled} from 'grainjs';\nimport pick = require('lodash/pick');\n\nimport {ACIndexImpl, normalizeText} from 'app/client/lib/ACIndex';\nimport {copyToClipboard} from 'app/client/lib/clipboardUtils';\nimport {setTestState} from 'app/client/lib/testState';\nimport {buildMultiUserManagerModal} from 'app/client/lib/MultiUserManager';\nimport {ACUserItem, buildACMemberEmail} from 'app/client/lib/ACUserManager';\nimport {AppModel} from 'app/client/models/AppModel';\nimport {DocPageModel} from 'app/client/models/DocPageModel';\nimport {reportError} from 'app/client/models/errors';\nimport {urlState} from 'app/client/models/gristUrlState';\nimport {IEditableMember, IMemberSelectOption, IOrgMemberSelectOption,\n        Resource} from 'app/client/models/UserManagerModel';\nimport {UserManagerModel, UserManagerModelImpl} from 'app/client/models/UserManagerModel';\nimport {getResourceParent, ResourceType} from 'app/client/models/UserManagerModel';\nimport {GristTooltips} from 'app/client/ui/GristTooltips';\nimport {shadowScroll} from 'app/client/ui/shadowScroll';\nimport {hoverTooltip, ITooltipControl, showTransientTooltip, withInfoTooltip} from 'app/client/ui/tooltips';\nimport {createUserImage} from 'app/client/ui/UserImage';\nimport {cssMemberBtn, cssMemberImage, cssMemberListItem,\n        cssMemberPrimary, cssMemberSecondary, cssMemberText, cssMemberType, cssMemberTypeProblem,\n        cssRemoveIcon} from 'app/client/ui/UserItem';\nimport {basicButton, bigBasicButton, bigPrimaryButton} from 'app/client/ui2018/buttons';\nimport {mediaXSmall, testId, theme, vars} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {cssLink} from 'app/client/ui2018/links';\nimport {loadingSpinner} from 'app/client/ui2018/loaders';\nimport {menu, menuItem, menuText} from 'app/client/ui2018/menus';\nimport {confirmModal, cssAnimatedModal, cssModalBody, cssModalButtons, cssModalTitle,\n        IModalControl, modal} from 'app/client/ui2018/modals';\n\nconst t = makeT('UserManager');\n\nexport interface IUserManagerOptions {\n  permissionData: Promise<PermissionData>;\n  activeUser: FullUser|null;\n  resourceType: ResourceType;\n  resourceId: string|number;\n  resource?: Resource;\n  docPageModel?: DocPageModel;\n  appModel?: AppModel;  // If present, we offer access to a nested team-level dialog.\n  linkToCopy?: string;\n  reload?: () => Promise<PermissionData>;\n  onSave?: (personal: boolean) => Promise<unknown>;\n  prompt?: {  // If set, user manager should open with this email filled in and ready to go.\n    email: string;\n  };\n  showAnimation?: boolean; // If true, animates opening of the modal. Defaults to false.\n}\n\n// Returns an instance of UserManagerModel given IUserManagerOptions. Makes the async call for the\n// required properties of the options.\nasync function getModel(options: IUserManagerOptions): Promise<UserManagerModelImpl> {\n  const permissionData = await options.permissionData;\n  return new UserManagerModelImpl(\n    permissionData, options.resourceType,\n    pick(options, ['activeUser', 'reload', 'appModel', 'docPageModel', 'resource'])\n  );\n}\n\n/**\n * Public interface for creating the UserManager in the app. Creates a modal that includes\n * the UserManager menu with save and cancel buttons.\n */\nexport function showUserManagerModal(userApi: UserAPI, options: IUserManagerOptions) {\n  const modelObs: Observable<UserManagerModel|null|\"slow\"> = observable(null);\n\n  async function onConfirm(ctl: IModalControl) {\n    const model = modelObs.get();\n    if (!model || model === \"slow\") {\n      ctl.close();\n      return;\n    }\n    const tryToSaveChanges = async () => {\n      // Save changes to the server, reporting any errors to the app.\n      try {\n        const isAnythingChanged = model.isAnythingChanged.get();\n        if (isAnythingChanged) {\n          await model.save(userApi, options.resourceId);\n        }\n        await options.onSave?.(model.isPersonal);\n        ctl.close();\n        if (model.isPersonal && isAnythingChanged) {\n          // the only thing an individual without ACL_EDIT rights can do is\n          // remove themselves - so reload.\n          window.location.reload();\n        }\n      } catch (err) {\n        reportError(err);\n      }\n    };\n    if (model.isSelfRemoved.get()) {\n      const resourceType = resourceName(model.resourceType);\n      confirmModal(\n        t(`You are about to remove your own access to this {{resourceType}}`, { resourceType }),\n        t('Remove my access'), tryToSaveChanges,\n        {\n          explanation: (\n            t(`Once you have removed your own access, \\\nyou will not be able to get it back without assistance \\\nfrom someone else with sufficient access to the {{resourceType}}.`, { resourceType })\n          ),\n        }\n      );\n    } else {\n      tryToSaveChanges().catch(reportError);\n    }\n  }\n\n  // Get the model and assign it to the observable. Report errors to the app.\n  const waitPromise = getModel(options)\n    .then(model => modelObs.set(model))\n    .catch(reportError);\n\n  isLongerThan(waitPromise, 400).then((slow) => slow && modelObs.set(\"slow\")).catch(() => {});\n\n  return buildUserManagerModal(modelObs, onConfirm, options);\n}\n\nfunction buildUserManagerModal(\n  modelObs: Observable<UserManagerModel|null|\"slow\">,\n  onConfirm: (ctl: IModalControl) => Promise<void>,\n  options: IUserManagerOptions\n) {\n  return modal(ctl => [\n    // We set the padding to 0 since the body scroll shadows extend to the edge of the modal.\n    { style: 'padding: 0;' },\n    options.showAnimation ? dom.cls(cssAnimatedModal.className) : null,\n    dom.domComputed(modelObs, model => {\n      if (!model) { return null; }\n      if (model === \"slow\") { return cssSpinner(loadingSpinner()); }\n\n      const cssBody = model.isPersonal ? cssAccessDetailsBody : cssUserManagerBody;\n      return [\n        cssTitle(\n          renderTitle(options.resourceType, options.resource, model.isPersonal),\n          (options.resourceType === 'document' && (!model.isPersonal || model.isPublicMember)\n            ? makeCopyBtn(options.linkToCopy, cssCopyBtn.cls('-header'))\n            : null\n          ),\n          testId('um-header'),\n        ),\n        cssModalBody(\n          cssBody(\n            new UserManager(\n              model,\n              pick(options, 'linkToCopy', 'docPageModel', 'appModel', 'prompt', 'resource')\n            ).buildDom()\n          ),\n        ),\n        cssModalButtons(\n          { style: 'margin: 32px 64px; display: flex;' },\n          (model.isPublicMember ? null :\n            bigPrimaryButton(t('Confirm'),\n              dom.boolAttr('disabled', (use) => !use(model.isAnythingChanged)),\n              dom.on('click', () => onConfirm(ctl)),\n              testId('um-confirm')\n            )\n          ),\n          bigBasicButton(\n            model.isPublicMember ? t('Close') : t('Cancel'),\n            dom.on('click', () => ctl.close()),\n            testId('um-cancel')\n          ),\n          (model.resourceType === 'document' && model.gristDoc && !model.isPersonal\n            ? withInfoTooltip(\n                cssLink({href: urlState().makeUrl({docPage: 'acl'})},\n                  dom.text(use => use(model.isAnythingChanged) ? t('Save & ') : ''),\n                  t('Open Access Rules'),\n                  dom.on('click', (ev) => {\n                    ev.preventDefault();\n                    return onConfirm(ctl).then(() => urlState().pushUrl({docPage: 'acl'}));\n                  }),\n                  testId('um-open-access-rules'),\n                ),\n                GristTooltips.openAccessRules(),\n                {domArgs: [cssAccessLink.cls('')]},\n            )\n            : null\n          ),\n          testId('um-buttons'),\n        )\n      ];\n    })\n  ]);\n}\n\n/**\n * See module documentation for overview.\n *\n * Usage:\n *    const um = new UserManager(model);\n *    um.buildDom();\n */\nexport class UserManager extends Disposable {\n  private _dom: HTMLDivElement;\n\n  constructor(\n    private _model: UserManagerModel,\n    private _options: {\n      linkToCopy?: string,\n      docPageModel?: DocPageModel,\n      appModel?: AppModel,\n      prompt?: {email: string},\n      resource?: Resource,\n  }) {\n    super();\n  }\n\n  public buildDom() {\n    if (this._model.isPublicMember) {\n      return this._buildSelfPublicAccessDom();\n    }\n\n    if (this._model.isPersonal) {\n      return this._buildSelfAccessDom();\n    }\n\n    const acMemberEmail = this.autoDispose(new ACMemberEmail(\n      this._onAdd.bind(this),\n      this._model.membersEdited.get(),\n      this._options.prompt,\n    ));\n\n    return [\n      acMemberEmail.buildDom(),\n      this._buildOptionsDom(),\n      this._dom = shadowScroll(\n        testId('um-members'),\n        this._buildPublicAccessMember(),\n        dom.forEach(this._model.membersEdited, (member) => this._buildMemberDom(member)),\n      ),\n    ];\n  }\n\n  private _onAddOrEdit(email: string, role: roles.NonGuestRole) {\n    const members = this._model.membersEdited.get();\n    const maybeMember = members.find(m => m.email === email);\n    if (maybeMember) {\n      maybeMember.access.set(role);\n    } else {\n      this._onAdd(email, role);\n    }\n  }\n\n  private _onAdd(email: string, role: roles.NonGuestRole) {\n    this._model.add(email, role);\n    // Make sure the entry we have just added is actually visible - confusing if not.\n    Array.from(this._dom.querySelectorAll('.member-email'))\n      .find(el => el.textContent === email)\n      ?.scrollIntoView();\n  }\n\n  private _buildOptionsDom(): Element {\n    const publicMember = this._model.publicMember;\n    let tooltipControl: ITooltipControl | undefined;\n    return dom('div',\n      cssOptionRowMultiple(\n        icon('AddUser'),\n        cssLabel(t('Invite multiple')),\n        dom.on('click', (_ev) => buildMultiUserManagerModal(\n          this,\n          this._model,\n          (email, role) => {\n            this._onAddOrEdit(email, role);\n          },\n        ))\n      ),\n      cssOptionRow(\n        // TODO: Consider adding a tooltip explaining inheritance. A brief text caption may\n        // be used to fill whitespace in org UserManager.\n        this._model.isOrg ? null : dom('span', { style: `float: left;` },\n          dom('span', 'Inherit access: '),\n          this._inheritRoleSelector()\n        ),\n        publicMember ? dom('span', { style: `float: right;` },\n          cssSmallPublicMemberIcon('PublicFilled'),\n          dom('span', t('Public access: ')),\n          cssOptionBtn(\n            menu(() => {\n              tooltipControl?.close();\n              return [\n                menuItem(() => publicMember.access.set(roles.VIEWER), t('On'), testId(`um-public-option`)),\n                menuItem(() => publicMember.access.set(null), t('Off'),\n                  // Disable null access if anonymous access is inherited.\n                  dom.cls('disabled', (use) => use(publicMember.inheritedAccess) !== null),\n                  testId(`um-public-option`)\n                ),\n                // If the 'Off' setting is disabled, show an explanation.\n                dom.maybe((use) => use(publicMember.inheritedAccess) !== null, () => menuText(\n                  t(`Public access inherited from {{parent}}. To remove, set 'Inherit access' option to 'None'.`,\n                    { parent: getResourceParent(this._model.resourceType) }\n                  )))\n              ];\n            }),\n            dom.text((use) => use(publicMember.effectiveAccess) ? t('On') : t('Off')),\n            cssCollapseIcon('Collapse'),\n            testId('um-public-access')\n          ),\n          hoverTooltip((ctl) => {\n            tooltipControl = ctl;\n            return t('Allow anyone with the link to open.');\n          }),\n        ) : null,\n      ),\n    );\n  }\n\n  // Build a single member row.\n  private _buildMemberDom(member: IEditableMember) {\n    const disableRemove = Computed.create(null, (use) =>\n      this._model.isPersonal ? !member.origAccess :\n      Boolean(this._model.isActiveUser(member) || use(member.inheritedAccess)));\n    return dom('div',\n      dom.autoDispose(disableRemove),\n      dom.maybe((use) => use(member.effectiveAccess) && use(member.effectiveAccess) !== roles.GUEST, () =>\n        cssMemberListItem(\n          cssMemberListItem.cls('-removed', member.isRemoved),\n          cssMemberImage(\n            createUserImage(getFullUser(member), 'large')\n          ),\n          cssMemberText(\n            cssMemberPrimary(\n              member.name || member.email,\n              member.email ? dom.cls('member-email') : null,\n              testId('um-member-name'),\n            ),\n            !member.name ? null : cssMemberSecondary(\n              member.email, dom.cls('member-email'), testId('um-member-email')\n            ),\n            (this._model.isPersonal\n              ? this._buildSelfAnnotationDom(member)\n              : this._buildAnnotationDom(member)\n            ),\n          ),\n          member.isRemoved ? null : this._memberRoleSelector(member.effectiveAccess,\n            member.inheritedAccess, this._model.isActiveUser(member)),\n          // Only show delete buttons when editing the org users or when a user is being newly\n          // added to any resource. In workspace/doc UserManager instances we want to see all the\n          // users in the org, whether or not they have access to the resource of interest. They may\n          // be denied access via the role dropdown.\n          // Show the undo icon when an item has been removed but its removal has not been saved to\n          // the server.\n          cssMemberBtn(\n            // Button icon.\n            member.isRemoved ? cssUndoIcon('Undo', testId('um-member-undo')) :\n              cssRemoveIcon('Remove', testId('um-member-delete')),\n            cssMemberBtn.cls('-disabled', disableRemove),\n            // Click handler.\n            dom.on('click', () => disableRemove.get() ||\n              (member.isRemoved ? this._model.add(member.email, member.access.get()) :\n                this._model.remove(member)))\n          ),\n          testId('um-member')\n        )\n      )\n    );\n  }\n\n  // Build an annotation for a single member in the Manage Users dialog.\n  private _buildAnnotationDom(member: IEditableMember) {\n    return dom.domComputed(this._model.annotations, (annotations) => {\n      const annotation = annotations.users.get(member.email);\n      if (!annotation) { return null; }\n      if (annotation.isSupport) {\n        return cssMemberType(t('Grist support'));\n      }\n      if (annotation.isMember && annotations.hasTeam) {\n        return cssMemberType(t('Team member'));\n      }\n      const collaborator = annotations.hasTeam ? t('guest') : t('free collaborator');\n      const limit = annotation.collaboratorLimit;\n      if (!limit || !limit.top) { return null; }\n      const elements: HTMLSpanElement[] = [];\n      if (limit.at <= limit.top) {\n        elements.push(cssMemberType(\n          t(`{{limitAt}} of {{limitTop}} {{collaborator}}s`, { limitAt: limit.at, limitTop: limit.top, collaborator }))\n        );\n      } else {\n        elements.push(cssMemberTypeProblem(\n          t(`{{collaborator}} limit exceeded`, { collaborator: capitalizeFirstWord(collaborator) }))\n        );\n      }\n      if (annotations.hasTeam) {\n        // Add a link for adding a member. For a doc, streamline this so user can make\n        // the change and continue seamlessly.\n        // TODO: streamline for workspaces.\n        elements.push(cssLink(\n          {href: urlState().makeUrl({manageUsers: true})},\n          dom.on('click', (e) => {\n            if (this._options.appModel) {\n              e.preventDefault();\n              manageTeam(this._options.appModel,\n                         () => this._model.reloadAnnotations(),\n                         { email: member.email }).catch(reportError);\n            }\n          }),\n          t(`Add {{member}} to your team`, { member: member.name || t('member') })));\n      } else if (limit.at >= limit.top) {\n        elements.push(cssLink({href: commonUrls.plans, target: '_blank'},\n          t('Create a team to share with more people')));\n      }\n      return elements;\n    });\n  }\n\n  // Build an annotation for the current user in the Access Details dialog.\n  private _buildSelfAnnotationDom(user: IEditableMember) {\n    return dom.domComputed(this._model.annotations, (annotations) => {\n      const annotation = annotations.users.get(user.email);\n      if (!annotation) { return null; }\n\n      let memberType: string;\n      if (annotation.isSupport) {\n        memberType = t('Grist support');\n      } else if (annotation.isMember && annotations.hasTeam) {\n        memberType = t('Team member');\n      } else if (annotations.hasTeam) {\n        memberType = t('Outside collaborator');\n      } else {\n        memberType = t('Collaborator');\n      }\n\n      return cssMemberType(memberType, testId('um-member-annotation'));\n    });\n  }\n\n  private _buildPublicAccessMember() {\n    const publicMember = this._model.publicMember;\n    if (!publicMember) { return null; }\n    return dom('div',\n      dom.maybe((use) => Boolean(use(publicMember.effectiveAccess)), () =>\n        cssMemberListItem(\n          cssPublicMemberIcon('PublicFilled'),\n          cssMemberText(\n            cssMemberPrimary(t('Public Access')),\n            cssMemberSecondary(t('Anyone with link '), makeCopyBtn(this._options.linkToCopy)),\n          ),\n          this._memberRoleSelector(publicMember.effectiveAccess, publicMember.inheritedAccess, false,\n            this._model.publicUserSelectOptions\n          ),\n          cssMemberBtn(\n            cssRemoveIcon('Remove', testId('um-member-delete')),\n            dom.on('click', () => publicMember.access.set(null)),\n          ),\n          testId('um-public-member')\n        )\n      )\n    );\n  }\n\n  private _buildSelfPublicAccessDom() {\n    const accessValue = this._options.resource?.access;\n    const accessLabel = this._model.publicUserSelectOptions\n      .find(opt => opt.value === accessValue)?.label;\n    const activeUser = this._model.activeUser;\n    const name = activeUser?.name ?? 'Anonymous';\n\n    return dom('div',\n      cssMemberListItem(\n        (!activeUser\n          ? cssPublicMemberIcon('PublicFilled')\n          : cssMemberImage(createUserImage(activeUser, 'large'))\n        ),\n        cssMemberText(\n          cssMemberPrimary(name, testId('um-member-name')),\n          activeUser?.email ? cssMemberSecondary(activeUser.email) : null,\n          cssMemberPublicAccess(\n            dom('span', t('Public access'), testId('um-member-annotation')),\n            cssPublicAccessIcon('PublicFilled'),\n          ),\n        ),\n        cssRoleBtn(\n          accessLabel ?? t('Guest'),\n          cssCollapseIcon('Collapse'),\n          dom.cls('disabled'),\n          testId('um-member-role'),\n        ),\n        testId('um-member'),\n      ),\n      testId('um-members'),\n    );\n  }\n\n  private _buildSelfAccessDom() {\n    return dom('div',\n      dom.domComputed(this._model.membersEdited, members =>\n        members[0] ? this._buildMemberDom(members[0]) : null\n      ),\n      testId('um-members'),\n    );\n  }\n\n  // Returns a div containing a button that opens a menu to choose between roles.\n  private _memberRoleSelector(\n    role: Observable<string|null>,\n    inherited: Observable<roles.Role|null>,\n    isActiveUser: boolean,\n    allRolesOverride?: IOrgMemberSelectOption[],\n  ) {\n    const allRoles = allRolesOverride ||\n      (this._model.isOrg ? this._model.orgUserSelectOptions : this._model.userSelectOptions);\n    return cssRoleBtn(\n      // Don't include the menu if we're only showing access details for the current user.\n      this._model.isPersonal ? null : menu(() => [\n        dom.forEach(allRoles, _role =>\n          // The active user should be prevented from changing their own role.\n          menuItem(() => isActiveUser || role.set(_role.value), _role.label,\n            // Indicate which option is inherited, if any.\n            dom.text((use) => use(inherited) && (use(inherited) === _role.value)\n              && !isActiveUser ? ' (inherited)' : ''),\n            // Disable everything providing less access than the inherited access\n            dom.cls('disabled', (use) =>\n              roles.getStrongestRole(_role.value, use(inherited)) !== _role.value),\n            testId(`um-role-option`)\n          )\n        ),\n        // If the user's access is inherited, give an explanation on how to change it.\n        isActiveUser ? menuText(t(`User may not modify their own access.`)) : null,\n        // If the user's access is inherited, give an explanation on how to change it.\n        dom.maybe((use) => use(inherited) && !isActiveUser, () => menuText(\n          t(`User inherits permissions from {{parent}}. To remove, \\\nset 'Inherit access' option to 'None'.`, { parent: getResourceParent(this._model.resourceType) }))),\n        // If the user is a guest, give a description of the guest permission.\n        dom.maybe((use) => !this._model.isOrg && use(role) === roles.GUEST, () => menuText(\n          t(`User has view access to {{resource}} resulting from manually-set access \\\nto resources inside. If removed here, this user will lose access to resources inside.`,\n            { resource: this._model.resourceType }))),\n        this._model.isOrg ? menuText(t(`No default access allows access to be \\\ngranted to individual documents or workspaces, rather than the full team site.`)) : null\n      ]),\n      dom.text((use) => {\n        // Get the label of the active role. Note that the 'Guest' role is assigned when the role\n        // is not found because it is not included as a selection.\n        const activeRole = allRoles.find((_role: IOrgMemberSelectOption) => use(role) === _role.value);\n        return activeRole ? activeRole.label : t(\"Guest\");\n      }),\n      cssCollapseIcon('Collapse'),\n      this._model.isPersonal ? dom.cls('disabled') : null,\n      testId('um-member-role')\n    );\n  }\n\n  // Builds the max inherited role selection button and menu.\n  private _inheritRoleSelector() {\n    const role = this._model.maxInheritedRole;\n    const allRoles = this._model.inheritSelectOptions;\n    return cssOptionBtn(\n      menu(() => [\n        dom.forEach(allRoles, _role =>\n          menuItem(() => role.set(_role.value), _role.label,\n            testId(`um-role-option`)\n          )\n        )\n      ]),\n      dom.text((use) => {\n        // Get the label of the active role.\n        const activeRole = allRoles.find((_role: IMemberSelectOption) => use(role) === _role.value);\n        return activeRole ? activeRole.label : \"\";\n      }),\n      cssCollapseIcon('Collapse'),\n      testId('um-max-inherited-role')\n    );\n  }\n}\n\nfunction getUserItem(member: IEditableMember): ACUserItem {\n  return {\n    value: member.email,\n    label: member.email,\n    cleanText: normalizeText(member.email),\n    email: member.email,\n    name: member.name,\n    picture: member?.picture,\n    id: member.id,\n  };\n}\n\n/**\n * Represents the widget that allows typing in an email and adding it.\n */\nexport class ACMemberEmail extends Disposable {\n  private _email = this.autoDispose(observable<string>(\"\"));\n\n  constructor(\n    private _onAdd: (email: string, role: roles.NonGuestRole) => void,\n    private _members: Array<IEditableMember>,\n    private _prompt?: {email: string}\n  ) {\n    super();\n    if (_prompt) {\n      this._email.set(_prompt.email);\n    }\n  }\n\n  public buildDom() {\n    const acUserItem = this._members\n      // Only suggest team members in autocomplete.\n      .filter((member: IEditableMember) => member.isTeamMember)\n      .map((member: IEditableMember) => getUserItem(member));\n    const acIndex = new ACIndexImpl<ACUserItem>(acUserItem);\n\n    return buildACMemberEmail(this,\n      {\n        acIndex,\n        emailObs: this._email,\n        save: this._handleSave.bind(this),\n        prompt: this._prompt,\n      },\n      testId('um-member-new')\n    );\n  }\n\n  private _handleSave(selectedEmail: string) {\n    this._onAdd(selectedEmail, roles.VIEWER);\n  }\n}\n\n// Returns a new FullUser object from an IEditableMember.\nfunction getFullUser(member: IEditableMember): FullUser {\n  return {\n    id: member.id,\n    name: member.name,\n    email: member.email,\n    picture: member.picture,\n    locale: member.locale\n  };\n}\n\n// Create a \"Copy Link\" button.\nfunction makeCopyBtn(linkToCopy: string|undefined, ...domArgs: DomElementArg[]) {\n  return linkToCopy && cssCopyBtn(cssCopyIcon('Copy'), t('Copy Link'),\n    dom.on('click', (ev, elem) => copyLink(elem, linkToCopy)),\n    testId('um-copy-link'),\n    ...domArgs,\n  );\n}\n\n// Copy the current document link to clipboard, and notify the user with a transient popup near\n// the given element.\nasync function copyLink(elem: HTMLElement, link: string) {\n  await copyToClipboard(link);\n  setTestState({clipboard: link});\n  showTransientTooltip(elem, t('Link copied to clipboard'), { key: 'copy-doc-link' });\n}\n\nasync function manageTeam(appModel: AppModel,\n                          onSave?: () => Promise<void>,\n                          prompt?: { email: string }) {\n  await urlState().pushUrl({manageUsers: false});\n  const user = appModel.currentValidUser;\n  const currentOrg = appModel.currentOrg;\n  if (currentOrg) {\n    const api = appModel.api;\n    showUserManagerModal(api, {\n      permissionData: api.getOrgAccess(currentOrg.id),\n      activeUser: user,\n      resourceType: 'organization',\n      resourceId: currentOrg.id,\n      resource: currentOrg,\n      onSave,\n      prompt,\n      showAnimation: true,\n    });\n  }\n}\n\nconst cssAccessDetailsBody = styled('div', `\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n  font-size: ${vars.mediumFontSize};\n`);\n\nconst cssUserManagerBody = styled(cssAccessDetailsBody, `\n  height: 374px;\n  border-bottom: 1px solid ${theme.modalBorderDark};\n`);\n\nconst cssSpinner = styled('div', `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 32px;\n`);\n\nconst cssCopyBtn = styled(basicButton, `\n  border: none;\n  font-weight: normal;\n  padding: 0 8px;\n  &-header {\n    float: right;\n    margin-top: 8px;\n  }\n`);\n\nconst cssCopyIcon = styled(icon, `\n  margin-right: 4px;\n  margin-top: -2px;\n`);\n\nconst cssOptionRow = styled('div', `\n  font-size: ${vars.mediumFontSize};\n  margin: 0 63px 23px 63px;\n`);\n\nconst cssOptionRowMultiple = styled('div', `\n  margin: 0 63px 12px 63px;\n  font-size: ${vars.mediumFontSize};\n  display: flex;\n  cursor: pointer;\n  color: ${theme.controlFg};\n  --icon-color: ${theme.controlFg};\n\n  &:hover {\n    color: ${theme.controlHoverFg};\n    --icon-color: ${theme.controlHoverFg};\n  }\n`);\n\nconst cssLabel = styled('span', `\n  margin-left: 4px;\n`);\n\nconst cssOptionBtn = styled('span', `\n  display: inline-flex;\n  font-size: ${vars.mediumFontSize};\n  color: ${theme.controlFg};\n  cursor: pointer;\n`);\n\nconst cssPublicMemberIcon = styled(icon, `\n  width: 40px;\n  height: 40px;\n  margin: 0 4px;\n  --icon-color: ${theme.accentIcon};\n`);\n\nconst cssSmallPublicMemberIcon = styled(cssPublicMemberIcon, `\n  width: 16px;\n  height: 16px;\n  top: -2px;\n`);\n\nconst cssPublicAccessIcon = styled(icon, `\n  --icon-color: ${theme.accentIcon};\n`);\n\nconst cssUndoIcon = styled(icon, `\n  --icon-color: ${theme.controlSecondaryFg};\n  margin: 12px 0;\n`);\n\nconst cssRoleBtn = styled('div', `\n  display: flex;\n  justify-content: flex-end;\n  font-size: ${vars.mediumFontSize};\n  color: ${theme.controlFg};\n  margin: 12px 24px;\n  cursor: pointer;\n\n  &.disabled {\n    opacity: 0.5;\n    cursor: default;\n  }\n`);\n\nconst cssCollapseIcon = styled(icon, `\n  margin-top: 1px;\n  background-color: ${theme.controlFg};\n`);\n\nconst cssAccessLink = styled(cssLink, `\n  align-self: center;\n  margin-left: auto;\n`);\n\nconst cssOrgName = styled('div', `\n  font-size: ${vars.largeFontSize};\n`);\n\nconst cssOrgDomain = styled('span', `\n  color: ${theme.accentText};\n`);\n\nconst cssTitle = styled(cssModalTitle, `\n  margin: 40px 64px 0 64px;\n\n  @media ${mediaXSmall} {\n    & {\n      margin: 16px;\n    }\n  }\n`);\n\nconst cssMemberPublicAccess = styled(cssMemberSecondary, `\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`);\n\n// Render the UserManager title for `resourceType` (e.g. org as \"team site\").\nfunction renderTitle(resourceType: ResourceType, resource?: Resource, personal?: boolean) {\n  switch (resourceType) {\n    case 'organization': {\n      if (personal) { return t('Your role for this team site'); }\n      return [\n        t('Manage members of team site'),\n        !resource ? null : cssOrgName(\n          `${(resource as Organization).name} (`,\n          cssOrgDomain(`${(resource as Organization).domain}.getgrist.com`),\n          ')',\n        )\n      ];\n    }\n    default: {\n      return personal ?\n        t(`Your role for this {{resourceType}}`, { resourceType }) :\n        t(`Invite people to {{resourceType}}`, { resourceType });\n    }\n  }\n}\n\n// Rename organization to team site.\nfunction resourceName(resourceType: ResourceType): string {\n  return resourceType === 'organization' ? t('team site') : resourceType;\n}\n","import {theme, vars} from 'app/client/ui2018/cssVars';\nimport {dom, DomElementArg, IDomArgs, IInputOptions, Observable, styled, subscribe} from 'grainjs';\n\nexport const cssInput = styled('input', `\n  font-size: ${vars.mediumFontSize};\n  height: 48px;\n  line-height: 20px;\n  width: 100%;\n  padding: 14px;\n  border: 1px solid ${theme.inputBorder};\n  border-radius: 4px;\n  outline: none;\n  display: block;\n  color: ${theme.inputFg};\n  background-color: ${theme.inputBg};\n\n  &::placeholder {\n    color: ${theme.inputPlaceholderFg};\n  }\n\n  &[type=number] {\n    -moz-appearance: textfield;\n  }\n  &[type=number]::-webkit-inner-spin-button,\n  &[type=number]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &-invalid {\n    border: 1px solid ${theme.inputInvalid};\n  }\n\n  &-valid {\n    border: 1px solid ${theme.inputValid};\n  }\n`);\n\n/**\n * Builds a text input that updates `obs` as you type.\n */\nexport function textInput(obs: Observable<string>, ...args: DomElementArg[]): HTMLInputElement {\n  return cssInput(\n    dom.prop('value', obs),\n    dom.on('input', (_e, elem) => obs.set(elem.value)),\n    ...args,\n  );\n}\n\nexport function textarea(\n  obs: Observable<string>, options: IInputOptions, ...args: IDomArgs<HTMLTextAreaElement>\n): HTMLTextAreaElement {\n\n  const isValid = options.isValid;\n\n  function setValue(elem: HTMLTextAreaElement) {\n    obs.set(elem.value);\n    if (isValid) { isValid.set(elem.validity.valid); }\n  }\n\n  return dom('textarea', ...args,\n    dom.prop('value', obs),\n    (isValid ?\n      (elem) => dom.autoDisposeElem(elem,\n        subscribe(obs, (use) => isValid.set(elem.checkValidity()))) :\n      null),\n    options.onInput ? dom.on('input', (e, elem) => setValue(elem)) : null,\n    dom.on('change', (e, elem) => setValue(elem)),\n  );\n}","import {dom, IDomArgs, Observable, styled} from 'grainjs';\n\n// Shadow css settings for member scroll top and bottom.\nconst SHADOW_TOP = 'inset 0 4px 6px 0 rgba(217,217,217,0.4)';\nconst SHADOW_BTM = 'inset 0 -4px 6px 0 rgba(217,217,217,0.4)';\n\n/**\n * Creates a scroll div used in the UserManager and moveDoc menus to display\n * shadows at the top and bottom of a list of scrollable items.\n */\nexport function shadowScroll(...args: IDomArgs<HTMLDivElement>) {\n  // Observables to indicate the scroll position.\n  const scrollTop = Observable.create(null, true);\n  const scrollBtm = Observable.create(null, true);\n  return cssScrollMenu(\n    dom.autoDispose(scrollTop),\n    dom.autoDispose(scrollBtm),\n    // Update scroll positions on init and on scroll.\n    (elem) => { setTimeout(() => scrollBtm.set(isAtScrollBtm(elem)), 0); },\n    dom.on('scroll', (_, elem) => {\n      scrollTop.set(isAtScrollTop(elem));\n      scrollBtm.set(isAtScrollBtm(elem));\n    }),\n    // Add shadows on the top/bottom if the list is scrolled away from either.\n    dom.style('box-shadow', (use) => {\n      const shadows = [use(scrollTop) ? null : SHADOW_TOP, use(scrollBtm) ? null : SHADOW_BTM];\n      return shadows.filter(css => css).join(', ');\n    }),\n    ...args\n  );\n}\n\n// Indicates that an element is currently scrolled such that the top of the element is visible.\nfunction isAtScrollTop(elem: Element): boolean {\n  return elem.scrollTop === 0;\n}\n\n// Indicates that an element is currently scrolled such that the bottom of the element is visible.\n// It is expected that the elem arg has the offsetHeight property set.\nfunction isAtScrollBtm(elem: HTMLElement): boolean {\n  return elem.scrollTop >= (elem.scrollHeight - elem.offsetHeight);\n}\n\nconst cssScrollMenu = styled('div', `\n  flex: 1 1 0;\n  width: 100%;\n  overflow-y: auto;\n`);\n","/**\n *\n * Utilities related to email normalization.  Currently\n * trivial, but could potentially need special per-domain\n * rules in future.\n *\n * Email addresses are a bit slippery.  Domain names are\n * case insensitive, but user names may or may not be,\n * depending on the mail server handling the domain.\n * Other special treatment of user names may also be in\n * place for particular domains (periods, plus sign, etc).\n *\n * We treat emails as case-insensitive for the purposes\n * of determining equality of emails, and indexing users\n * by email address.\n *\n */\n\n/**\n *\n * Convert the supplied email address to a normalized form\n * that we will use for indexing and equality tests.\n * Many possible email addresses could map to the same\n * normalized result; as far as we are concerned those\n * addresses are equivalent.\n *\n * The normalization we do is a simple lowercase.  This\n * means we won't be able to treat both Jane@x.y and\n * jane@x.y as separate email addresses, even through\n * they may in fact be separate mailboxes on x.y.\n *\n * The normalized email is not something we should show\n * the user in the UI, but is rather for internal purposes.\n *\n * The original non-normalized email is called a\n * \"display email\" to distinguish it from a \"normalized\n * email\"\n *\n */\nexport function normalizeEmail(displayEmail: string): string {\n  // We take the lower case, without use of locale.\n  return displayEmail.toLowerCase();\n}\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nmodule.exports = baseIsRegExp;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n","var baseIsRegExp = require('./_baseIsRegExp'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nmodule.exports = isRegExp;\n","var arraySome = require('./_arraySome'),\n    baseIteratee = require('./_baseIteratee'),\n    baseSome = require('./_baseSome'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = some;\n","var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    isIterateeCall = require('./_isIterateeCall'),\n    isRegExp = require('./isRegExp'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Splits `string` by `separator`.\n *\n * **Note:** This method is based on\n * [`String#split`](https://mdn.io/String/split).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to split.\n * @param {RegExp|string} separator The separator pattern to split by.\n * @param {number} [limit] The length to truncate results to.\n * @returns {Array} Returns the string segments.\n * @example\n *\n * _.split('a-b-c', '-', 2);\n * // => ['a', 'b']\n */\nfunction split(string, separator, limit) {\n  if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n    separator = limit = undefined;\n  }\n  limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n  if (!limit) {\n    return [];\n  }\n  string = toString(string);\n  if (string && (\n        typeof separator == 'string' ||\n        (separator != null && !isRegExp(separator))\n      )) {\n    separator = baseToString(separator);\n    if (!separator && hasUnicode(string)) {\n      return castSlice(stringToArray(string), 0, limit);\n    }\n  }\n  return string.split(separator, limit);\n}\n\nmodule.exports = split;\n"],"names":["escapeRegExp","deburr","split","normalizeText","text","trim","toLowerCase","wordSepRegexp","highlightNone","ACIndexImpl","constructor","items","_maxResults","_keepOrder","this","_allItems","slice","allWords","index","length","words","cleanText","filter","w","pos","push","word","sort","a","b","localeCompare","_words","searchText","cleanedSearchText","searchWords","myMatches","Map","k","searchWord","itemIndex","score","_findOverlaps","set","get","startsWith","sortedMatches","Array","from","nativeCompare","itemIndices","map","i","has","highlightFunc","selectIndex","highlightMatches","bind","indexOf","item","regexp","RegExp","join","test","startsWithText","searchWordPos","insertIndex","sortedIndex","scored","step","prefix","wordEntry","itemScore","Math","pow","buildHighlightedDom","highlight","part","wordSepRegexpParen","source","textParts","outputs","separator","prefixLen","findLongestPrefixLen","chars","choices","reduce","max","choice","text1","text2","findCommonPrefixLength","buildACSelect","owner","options","args","acIndex","valueObs","save","acHolder","Holder","textInput","isOpen","isEmpty","acOpen","Autocomplete","acOptions","finish","clear","blur","revert","value","commitOrRevert","async","commitIfValid","openOrCommit","catch","getSelectedItem","disabled","e","menuCssClass","search","term","renderItem","cssSelectItem","label","cssMatchText","getItemText","onClick","cssSelectBtn","cssInput","type","dom","ev","elem","select","use","Escape","Enter","ArrowDown","Tab","preventDefault","focus","cssIcon","styled","theme","icon","G","copyToClipboard","data","txt","window","navigator","clipboard","writeText","stash","document","createElement","setAttribute","style","position","left","body","appendChild","selection","getSelection","rangeCount","getRangeAt","execCommand","removeChild","removeAllRanges","addRange","copyTextToClipboard","write","Error","copyDataToClipboard","readTextFromClipboard","readText","readDataFromClipboard","read","setTestState","state","testGrist","Object","assign","cssMemberListItem","cssMemberImage","colors","className","cssMemberText","vars","cssMemberPrimary","cssMenuItem","cssMemberSecondary","cssMemberType","cssMemberTypeProblem","cssMemberBtn","cssRemoveIcon","cssEmailInputContainer","cssEmailInput","input","cssMailIcon","buildRolesSelect","roleSelectedObs","model","allRoles","isOrg","orgUserSelectOptions","userSelectOptions","x","cssOptionBtn","menu","_role","menuItem","testId","activeRole","find","cssCollapseIcon","buildEmailsTextarea","emailListObs","isValidObs","cssTextarea","onInput","isValid","placeholder","_ev","cssTitle","cssModalTitle","mediaXSmall","cssInheritRoles","cssErrorMessage","cssAccessDetailsBody","cssUserManagerBody","t","makeT","cssMemberPrimaryPlus","cssMemberSecondaryPlus","cssUserImagePlus","ShareAnnotator","_product","_state","_options","_features","features","_supportEmail","supportEmail","change","annotations","hasTeam","name","users","maxSharesPerDocPerRole","maxSharesPerWorkspace","top","maxSharesPerDoc","at","makeAnnotation","user","annotation","isMember","isSupport","access","collaboratorLimit","removed","Set","entries","v","email","tweaks","Boolean","some","UserManagerModelImpl","Disposable","initData","resourceType","super","roles","inheritSelectOptions","publicUserSelectOptions","activeUser","resource","maxInheritedRole","observable","publicMember","_buildPublicMember","membersEdited","autoDispose","obsArray","_buildAllMembers","isPersonal","personal","isPublicMember","public","gristDoc","docPageModel","isAnythingChanged","computed","isMemberChangedFn","m","isNew","isRemoved","origAccess","isInheritanceChanged","isSelfRemoved","appModel","product","currentProduct","getGristConfig","_shareAnnotator","annotate","reload","updateState","userApi","resourceId","updateOrgPermissions","getDelta","updateWorkspacePermissions","updateDocPermissions","role","members","findIndex","existing","splice","effective","effectiveAccess","newMember","_buildEditableMember","id","parentAccess","member","annotateChanges","silent","delta","picture","isTeamMember","gristConfig","supportAnon","Observable","inheritedAccess","initialAccessBasicRole","Computed","maxInherited","onWrite","inherited","isAboveInherit","getResourceParent","pick","showUserManagerModal","modelObs","waitPromise","permissionData","getModel","then","reportError","isLongerThan","slow","onConfirm","modal","ctl","showAnimation","cssAnimatedModal","cssSpinner","cssBody","cssOrgName","cssOrgDomain","domain","makeCopyBtn","linkToCopy","cssCopyBtn","cls","cssModalBody","UserManager","buildDom","cssModalButtons","bigPrimaryButton","bigBasicButton","close","withInfoTooltip","href","urlState","makeUrl","docPage","pushUrl","GristTooltips","domArgs","cssAccessLink","buildUserManagerModal","tryToSaveChanges","onSave","location","err","resourceName","confirmModal","explanation","_model","_buildSelfPublicAccessDom","_buildSelfAccessDom","ACMemberEmail","_onAdd","prompt","_buildOptionsDom","_dom","shadowScroll","_buildPublicAccessMember","_buildMemberDom","maybeMember","add","querySelectorAll","el","textContent","scrollIntoView","tooltipControl","cssOptionRowMultiple","cssLabel","onAdd","rolesObs","enableAdd","emailList","validateEmail","forEach","buildMultiUserManagerModal","_onAddOrEdit","cssOptionRow","_inheritRoleSelector","cssSmallPublicMemberIcon","menuText","parent","hoverTooltip","disableRemove","isActiveUser","locale","getFullUser","_buildSelfAnnotationDom","_buildAnnotationDom","_memberRoleSelector","cssUndoIcon","remove","collaborator","limit","elements","limitAt","limitTop","capitalizeFirstWord","manageUsers","currentValidUser","currentOrg","api","getOrgAccess","manageTeam","reloadAnnotations","target","memberType","cssPublicMemberIcon","accessValue","accessLabel","opt","cssMemberPublicAccess","cssPublicAccessIcon","cssRoleBtn","allRolesOverride","_members","_prompt","_email","acUserItem","getUserItem","emailObs","emailInput","acClose","setCustomValidity","checkValidity","selectedEmail","message","reportValidity","attach","results","includes","newObject","maybeShowAddNew","result","addListener","setTimeout","buildACMemberEmail","ACIndex","_handleSave","cssCopyIcon","link","showTransientTooltip","key","copyLink","basicButton","obs","_e","textarea","validity","valid","subscribe","setValue","scrollTop","scrollBtm","cssScrollMenu","isAtScrollBtm","_","isAtScrollTop","css","scrollHeight","offsetHeight","normalizeEmail","displayEmail","module","exports","string","baseGetTag","isObjectLike","object","undefined","array","start","end","baseEach","collection","predicate","baseSlice","deburrLetter","basePropertyOf","reHasUnicode","asciiToArray","hasUnicode","unicodeToArray","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsModifier","rsOptVar","rsSeq","rsSymbol","reUnicode","match","toString","reLatin","reComboMark","replace","reRegExpChar","reHasRegExpChar","baseIsRegExp","baseUnary","nodeUtil","nodeIsRegExp","isRegExp","arraySome","baseIteratee","baseSome","isArray","isIterateeCall","guard","func","baseToString","castSlice","stringToArray"],"sourceRoot":""}