{"version":3,"file":"app_client_ui_SupportGristPage_ts.bundle.js","mappings":"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","sources":["./app/client/ui/SupportGristPage.ts?","./stubs/app/client/components/Banners.ts?"],"sourcesContent":["import {buildHomeBanners} from 'app/client/components/Banners';\nimport {makeT} from 'app/client/lib/localization';\nimport {AppModel} from 'app/client/models/AppModel';\nimport {urlState} from 'app/client/models/gristUrlState';\nimport {TelemetryModel, TelemetryModelImpl} from 'app/client/models/TelemetryModel';\nimport {AppHeader} from 'app/client/ui/AppHeader';\nimport {leftPanelBasic} from 'app/client/ui/LeftPanelCommon';\nimport {pagePanels} from 'app/client/ui/PagePanels';\nimport {createTopBarHome} from 'app/client/ui/TopBar';\nimport {cssBreadcrumbs, separator} from 'app/client/ui2018/breadcrumbs';\nimport {bigBasicButton, bigBasicButtonLink, bigPrimaryButton} from 'app/client/ui2018/buttons';\nimport {mediaSmall, theme, vars} from 'app/client/ui2018/cssVars';\nimport {icon} from 'app/client/ui2018/icons';\nimport {cssLink} from 'app/client/ui2018/links';\nimport {loadingSpinner} from 'app/client/ui2018/loaders';\nimport {commonUrls} from 'app/common/gristUrls';\nimport {TelemetryPrefsWithSources} from 'app/common/InstallAPI';\nimport {getGristConfig} from 'app/common/urlUtils';\nimport {Computed, Disposable, dom, makeTestId, Observable, styled} from 'grainjs';\n\nconst testId = makeTestId('test-support-grist-page-');\n\nconst t = makeT('SupportGristPage');\n\nexport class SupportGristPage extends Disposable {\n  private readonly _model: TelemetryModel = new TelemetryModelImpl(this._appModel);\n  private readonly _optInToTelemetry = Computed.create(this, this._model.prefs,\n    (_use, prefs) => {\n      if (!prefs) { return null; }\n\n      return prefs.telemetryLevel.value !== 'off';\n    })\n    .onWrite(async (optIn) => {\n      const telemetryLevel = optIn ? 'limited' : 'off';\n      await this._model.updateTelemetryPrefs({telemetryLevel});\n    });\n\n  constructor(private _appModel: AppModel) {\n    super();\n    this._model.fetchTelemetryPrefs().catch(reportError);\n  }\n\n  public buildDom() {\n    const panelOpen = Observable.create(this, false);\n    return pagePanels({\n      leftPanel: {\n        panelWidth: Observable.create(this, 240),\n        panelOpen,\n        hideOpener: true,\n        header: dom.create(AppHeader, this._appModel),\n        content: leftPanelBasic(this._appModel, panelOpen),\n      },\n      headerMain: this._buildMainHeader(),\n      contentTop: buildHomeBanners(this._appModel),\n      contentMain: this._buildMainContent(),\n    });\n  }\n\n  private _buildMainHeader() {\n    return dom.frag(\n      cssBreadcrumbs({style: 'margin-left: 16px;'},\n        cssLink(\n          urlState().setLinkUrl({}),\n          t('Home'),\n        ),\n        separator(' / '),\n        dom('span', t('Support Grist')),\n      ),\n      createTopBarHome(this._appModel),\n    );\n  }\n\n  private _buildMainContent() {\n    return cssPageContainer(\n      cssPage(\n        dom('div',\n          cssPageTitle(t('Support Grist')),\n          this._buildTelemetrySection(),\n          this._buildSponsorshipSection(),\n        ),\n      ),\n    );\n  }\n\n  private _buildTelemetrySection() {\n    return cssSection(\n      cssSectionTitle(t('Telemetry')),\n      dom.domComputed(this._model.prefs, prefs => {\n        if (prefs === null) {\n          return cssSpinnerBox(loadingSpinner());\n        }\n\n        const {activation} = getGristConfig();\n        if (!activation?.isManager) {\n          if (prefs.telemetryLevel.value === 'limited') {\n            return [\n              cssParagraph(t(\n                'This instance is opted in to telemetry. Only the site administrator has permission to change this.',\n              ))\n            ];\n          } else {\n            return [\n              cssParagraph(t(\n                'This instance is opted out of telemetry. Only the site administrator has permission to change this.',\n              ))\n            ];\n          }\n        } else {\n          return [\n            cssParagraph(t(\n              'Support Grist by opting in to telemetry, which helps us understand how the product ' +\n              'is used, so that we can prioritize future improvements.'\n            )),\n            cssParagraph(\n              t('We only collect usage statistics, as detailed in our {{link}}, never document contents.', {\n                link: telemetryHelpCenterLink(),\n              }),\n            ),\n            cssParagraph(t('You can opt out of telemetry at any time from this page.')),\n            this._buildTelemetrySectionButtons(prefs),\n          ];\n        }\n      }),\n      testId('telemetry-section'),\n    );\n  }\n\n  private _buildTelemetrySectionButtons(prefs: TelemetryPrefsWithSources) {\n    const {telemetryLevel: {value, source}} = prefs;\n    if (source === 'preferences') {\n      return dom.domComputed(this._optInToTelemetry, (optedIn) => {\n        if (optedIn) {\n          return [\n            cssOptInOutMessage(\n              t('You have opted in to telemetry. Thank you!'), ' 🙏',\n              testId('telemetry-section-message'),\n            ),\n            cssOptOutButton(t('Opt out of Telemetry'),\n              dom.on('click', () => this._optInToTelemetry.set(false)),\n            ),\n          ];\n        } else {\n          return [\n            cssOptInButton(t('Opt in to Telemetry'),\n              dom.on('click', () => this._optInToTelemetry.set(true)),\n            ),\n          ];\n        }\n      });\n    } else {\n      return cssOptInOutMessage(\n        value !== 'off'\n          ? [t('You have opted in to telemetry. Thank you!'), ' 🙏']\n          : t('You have opted out of telemetry.'),\n        testId('telemetry-section-message'),\n      );\n    }\n  }\n\n  private _buildSponsorshipSection() {\n    return cssSection(\n      cssSectionTitle(t('Sponsor Grist Labs on GitHub')),\n      cssParagraph(\n        t(\n          'Grist software is developed by Grist Labs, which offers free and paid ' +\n          'hosted plans. We also make Grist code available under a standard free ' +\n          'and open OSS license (Apache 2.0) on {{link}}.',\n          {link: gristCoreLink()},\n        ),\n      ),\n      cssParagraph(\n        t(\n          'You can support Grist open-source development by sponsoring ' +\n          'us on our {{link}}.',\n          {link: sponsorGristLink()},\n        ),\n      ),\n      cssParagraph(t(\n        'We are a small and determined team. Your support matters a lot to us. ' +\n        'It also shows to others that there is a determined community behind this product.'\n      )),\n      cssSponsorButton(\n        cssButtonIconAndText(icon('Heart'), cssButtonText(t('Manage Sponsorship'))),\n        {href: commonUrls.githubSponsorGristLabs, target: '_blank'},\n      ),\n      testId('sponsorship-section'),\n    );\n  }\n}\n\nfunction telemetryHelpCenterLink() {\n  return cssLink(\n    t('Help Center'),\n    {href: commonUrls.helpTelemetryLimited, target: '_blank'},\n  );\n}\n\nfunction sponsorGristLink() {\n  return cssLink(\n    t('GitHub Sponsors page'),\n    {href: commonUrls.githubSponsorGristLabs, target: '_blank'},\n  );\n}\n\nfunction gristCoreLink() {\n  return cssLink(\n    t('GitHub'),\n    {href: commonUrls.githubGristCore, target: '_blank'},\n  );\n}\n\nconst cssPageContainer = styled('div', `\n  overflow: auto;\n  padding: 64px 80px;\n\n  @media ${mediaSmall} {\n    & {\n      padding: 0px;\n    }\n  }\n`);\n\nconst cssPage = styled('div', `\n  padding: 16px;\n  max-width: 600px;\n  width: 100%;\n`);\n\nconst cssPageTitle = styled('div', `\n  height: 32px;\n  line-height: 32px;\n  margin-bottom: 24px;\n  color: ${theme.text};\n  font-size: 24px;\n  font-weight: ${vars.headerControlTextWeight};\n`);\n\nconst cssSectionTitle = styled('div', `\n  height: 24px;\n  line-height: 24px;\n  margin-bottom: 24px;\n  color: ${theme.text};\n  font-size: ${vars.xlargeFontSize};\n  font-weight: ${vars.headerControlTextWeight};\n`);\n\nconst cssSection = styled('div', `\n  margin-bottom: 60px;\n`);\n\nconst cssParagraph = styled('div', `\n  color: ${theme.text};\n  font-size: 14px;\n  line-height: 20px;\n  margin-bottom: 12px;\n`);\n\nconst cssOptInOutMessage = styled(cssParagraph, `\n  line-height: 40px;\n  font-weight: 600;\n  margin-top: 24px;\n  margin-bottom: 0px;\n`);\n\nconst cssOptInButton = styled(bigPrimaryButton, `\n  margin-top: 24px;\n`);\n\nconst cssOptOutButton = styled(bigBasicButton, `\n  margin-top: 24px;\n`);\n\nconst cssSponsorButton = styled(bigBasicButtonLink, `\n  margin-top: 24px;\n`);\n\nconst cssButtonIconAndText = styled('div', `\n  display: flex;\n  align-items: center;\n`);\n\nconst cssButtonText = styled('span', `\n  margin-left: 8px;\n`);\n\nconst cssSpinnerBox = styled('div', `\n  margin-top: 24px;\n  text-align: center;\n`);\n","import {AppModel} from 'app/client/models/AppModel';\nimport {DocPageModel} from 'app/client/models/DocPageModel';\n\nexport function buildHomeBanners(_app: AppModel) {\n  return null;\n}\n\nexport function buildDocumentBanners(_docPageModel: DocPageModel) {\n  return null;\n}\n"],"names":[],"sourceRoot":""}