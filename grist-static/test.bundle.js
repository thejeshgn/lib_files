/*! For license information please see test.bundle.js.LICENSE.txt */
(()=>{var __webpack_modules__={87346:(e,n,t)=>{"use strict";t.r(n),t.d(n,{Layout:()=>b,LayoutBox:()=>h});var l=t(81294),r=t.n(l),i=t(13988),a=t.n(i),o=t(92979),u=t(88438),s=t(20543),c=t.n(s),d=t(86277),p=t(29301),f=t(54156);class h extends u.Disposable{constructor(){super(...arguments),this.dom=null}create(e){this.layout=e,this.parentBox=(0,p.observable)(null),this.childBoxes=a()(),this.leafId=(0,p.observable)(null),this.leafContent=(0,p.observable)(null),this.uniqueId=(0,f.uniqueId)("lb"),this.isVBox=this.autoDispose((0,p.computed)((()=>!this.parentBox()||!this.parentBox().isVBox()),this)),this.isHBox=this.autoDispose((0,p.computed)((()=>!this.isVBox()))),this.isLeaf=this.autoDispose((0,p.computed)((()=>null!==this.leafId()),this)),this.isMaximized=this.autoDispose(p.pureComputed((()=>{var e;const n=null==(e=this.layout)?void 0:e.maximizedLeaf();return!!n&&(n===this.leafId()||this.childBoxes.all().some((function(e){return e.isMaximized()})))}),this)),this.isHidden=this.autoDispose(p.pureComputed((()=>{var e;return!!(null==(e=this.layout)?void 0:e.maximizedLeaf())&&!this.isMaximized()}),this)),this.flexSize=(0,p.observable)(100),this.dom=null,this._parentBeingDisposed=!1,this.autoDisposeCallback((()=>{this._parentBeingDisposed||this.removeFromParent(),this.childBoxes.peek().forEach((function(e){e._parentBeingDisposed=!0,e.dispose()}))}))}getDom(){return this.dom||(this.dom=this.autoDispose(this.buildDom()))}maximize(){this.layout.maximizedLeaf.peek()!==this.leafId.peek()?this.layout.maximizedLeaf(this.leafId()):this.layout.maximizedLeaf(null)}buildDom(){const e=this,n=this.layout.needDynamic?f.identity:m;return r()("div.layout_box",(0,o.toggleClass)("layout_leaf",n(this.isLeaf)),(0,o.toggleClass)("layout_hidden",this.isHidden),(0,o.toggleClass)(this.layout.leafId,n(this.isLeaf)),(0,o.cssClass)(n((function(){return e.isVBox()?"layout_vbox":"layout_hbox"}))),(0,o.cssClass)(n((function(){return e.layout.fillWindow?"layout_fill_window":e.isLastChild()?"layout_last_child":null}))),(0,o.style)("--flex-grow",n((function(){return e.isVBox()||e.isHBox()&&e.layout.fillWindow?e.flexSize():""}))),(0,o.domData)("layoutBox",this),(0,o.foreach)(n(this.childBoxes),(function(e){return e.getDom()})),(0,o.scope)(n(this.leafContent),(function(e){return e})))}takeLeafFrom(e){this.leafId(e.leafId.peek()),this.leafContent((0,l.detachNode)(e.leafContent.peek())),e.leafId(null),e.leafContent(null)}setChildren(e){e.forEach((e=>e.parentBox(this))),this.childBoxes.assign(e)}isFirstChild(){return!this.parentBox()||this.parentBox().childBoxes.peek()[0]===this}isLastChild(){return!this.parentBox()||(0,f.last)(this.parentBox().childBoxes.all())===this}isDomDetached(){return!(this.dom&&this.dom.parentNode)}getSiblingBox(e){if(!this.parentBox())return null;const n=this.parentBox().childBoxes.peek();let t=n.indexOf(this);return t<0?null:(t+=e?1:-1,t<0||t>=n.length?null:n[t])}_addChild(e,n,t){let l;c()(null===e.parentBox(),"LayoutBox._addChild: child already has parentBox set"),l=t?this.childBoxes.peek().indexOf(t)+(n?1:0):n?this.childBoxes.peekLength:0,e.parentBox(this),this.childBoxes.splice(l,0,e)}addSibling(e,n){e.removeFromParent();const t=this.parentBox();if(t)t._addChild(e,n,this);else if(1===this.childBoxes.peekLength){const t=this.childBoxes.peek()[0];c()(!t.isLeaf(),"LayoutBox.addSibling: should not have leaf as a single child"),t._addChild(e,n)}else{const t=h.create(this.layout),l=h.create(this.layout);t._addChild(l,!1),l._addChild(this,!1),l._addChild(e,n),this.layout.setRoot(t)}this.layout.trigger("layoutChanged")}addChild(e,n){if(e.removeFromParent(),this.isLeaf()){const e=h.create(this.layout);e.takeLeafFrom(this),this._addChild(e,!1)}this._addChild(e,n),this.layout.trigger("layoutChanged")}toString(){return this.isDisposed()?this.uniqueId+"[disposed]":this.uniqueId+(this.isHBox()?"H":"V")+(this.isLeaf()?"("+this.leafId()+")":"["+this.childBoxes.peek().map((function(e){return e.toString()})).join(",")+"]")}_removeChildBox(e){let n=this.childBoxes.peek().indexOf(e);if(e.parentBox(null),n>=0&&(this.childBoxes.splice(n,1),this.rescaleFlexSizes()),1===this.childBoxes.peekLength){const e=this.childBoxes.peek()[0],t=this.parentBox();if(e.isLeaf())this.takeLeafFrom(e),e.dispose();else if(t){n=t.childBoxes.peek().indexOf(this),c()(n>=0,"LayoutBox._removeChildBox: box not found in parent");const l=e.childBoxes.peek();l.forEach((function(e){e.parentBox(t)})),t.childBoxes.arraySplice(n,0,l),e.childBoxes.splice(0,e.childBoxes.peekLength),this.removeFromParent(),e.dispose(),this.dispose()}}}removeFromParent(){this.parentBox()&&(this.parentBox()._removeChildBox(this),this.layout.trigger("layoutChanged"))}rescaleFlexSizes(){const e=this.childBoxes.peek(),n=Math.min.apply(null,e.map((function(e){return e.flexSize()})));n<1&&e.forEach((function(e){e.flexSize(e.flexSize()/n)}))}}function m(e){return(0,p.isObservable)(e)||(0,i.isKoArray)(e)?e.peek():"function"==typeof e?e():e}class b extends u.Disposable{static getContainingBox(e,n){const t=(0,l.findAncestor)(e,n,".layout_box");return t?p.utils.domData.get(t,"layoutBox"):null}create(e,n,t){this.maximizedLeaf=(0,p.observable)(null),this.rootBox=(0,p.observable)(null),this.createLeafFunc=n,this._leafIdMap=null,this.fillWindow=t||!1,this.needDynamic=!1,this.rootElem=this.autoDispose(this.buildDom()),this.leafId=(0,f.uniqueId)("layout_leaf_"),this.buildLayout(e||{}),this.listenTo(this,"layoutChanged",(()=>{this._leafIdMap=null})),this.autoDisposeCallback((()=>{this.rootBox()&&this.rootBox().dispose()}))}getLeafBox(e){return this.getLeafIdMap().get(e)}getAllLeafIds(){return Array.from(this.getLeafIdMap().keys())}setRoot(e){this.rootBox(e)}buildDom(){return r()("div.layout_root",(0,o.domData)("layoutModel",this),(0,o.toggleClass)("layout_fill_window",this.fillWindow),(0,o.toggleClass)("layout_box_maximized",this.maximizedLeaf),(0,o.scope)(this.rootBox,(e=>e?e.getDom():null)))}forEachBox(e,n){this.rootBox.peek()&&function t(l){e.call(n,l),l.childBoxes.peek().forEach(t)}(this.rootBox.peek())}buildLayoutBox(e){const n=h.create(this);return e.size&&n.flexSize(e.size),e.leaf?(n.leafId(e.leaf),n.leafContent(this.createLeafFunc(n.leafId()))):e.children&&n.setChildren(e.children.map(this.buildLayoutBox,this)),n}buildLayout(e,n=!1){this.needDynamic=n;const t=this.rootBox();this.rootBox(this.buildLayoutBox(e)),this.trigger("layoutChanged"),t&&t.dispose()}_getBoxSpec(e){const n={};return e.isDisposed()||(e.flexSize()&&100!==e.flexSize()&&(n.size=e.flexSize()),e.isLeaf()?n.leaf=e.leafId():n.children=e.childBoxes.peek().map(this._getBoxSpec,this)),n}getLayoutSpec(){return this._getBoxSpec(this.rootBox())}getLeafIdMap(){return this._leafIdMap||(this._leafIdMap=new Map,this.forEachBox((e=>{const n=e.leafId.peek();null!==n&&this._leafIdMap.set(n,e)}),this)),this._leafIdMap}getContainingBox(e){return b.getContainingBox(e,this.rootElem)}}Object.assign(b.prototype,d.Events)},29255:(e,n,t)=>{"use strict";t.r(n),t.d(n,{LayoutEditor:()=>A});var l=t(54156),r=t(29301),i=t(20543),a=t.n(i),o=t(74392),u=t.n(o),s=t(86277),c=t(88438),d=t(96682),p=t(81294),f=t.n(p),h=t(92979),m=t(87346);const b=(0,t(11527).get)("document","window","$");class g{constructor(e){this.scalePerFlexUnit=0,this.nextSiblings=[],this.origNextSizes=[],this.origSize=0,this.sumAll=0,this.sumPrev=0,this.sumNext=0,e&&(0,l.extend)(this,e)}}class M extends c.Disposable{create(e){this.leafId=(0,r.observable)(null),this.leafContent=(0,r.observable)(null),this.fillWindow=e||!1,this.dom=this.autoDispose(f()("div.layout_editor_floater",h.show(this.leafContent),h.scope(this.leafContent,(e=>e)))),b.document.body.appendChild(this.dom),this.mouseOffsetX=0,this.mouseOffsetY=0,this.lastMouseEvent=null}onInitialMouseMove(e,n){const t=n.dom.getBoundingClientRect();this.dom.style.width=t.width+"px",this.dom.style.height=t.height+"px",this.mouseOffsetX=.2*t.width,this.mouseOffsetY=.1*t.height,this.onMouseMove(e),this.leafId(n.leafId()),this.leafContent(n.leafContent()),n.leafId("empty"),n.leafContent(f()("div.layout_editor_empty_space",h.style("margin",.02*t.height+"px"),h.style("min-height",.96*t.height+"px")))}onMouseUp(){this.lastMouseEvent=null}onMouseMove(e){this.lastMouseEvent=e,this.dom.style.left=e.clientX-this.mouseOffsetX+"px",this.dom.style.top=e.clientY-this.mouseOffsetY+"px"}}class y extends c.Disposable{create(){this.overlayElem=this.autoDispose(f()("div.layout_editor_drop_overlay")),this.overlayRect=null,this.hBorder=null,this.vBorder=null}detach(){this.overlayElem.parentNode&&this.overlayElem.parentNode.removeChild(this.overlayElem)}attach(e){const n=this.overlayRect=e.getBoundingClientRect();this.hBorder=Math.floor(Math.min(n.height,2*n.width)/3),this.vBorder=Math.floor(Math.min(n.width,2*n.height)/3);const t=this.overlayElem.style;t.borderTopWidth=t.borderBottomWidth=this.hBorder+"px",t.borderLeftWidth=t.borderRightWidth=this.vBorder+"px"}getAffinity(e){const n=this.overlayRect,t=e.clientX-n.left,l=e.clientY-n.top,r=w(l,this.hBorder),i=w(n.height-l,this.hBorder),a=w(t,this.vBorder),o=w(n.width-t,this.vBorder),u=Math.min(r,i,a,o);return u===1/0?-1:[r,i,a,o].indexOf(u)}}class v extends c.Disposable{create(e){this.rootElem=e,this.targetsDom=null,this.currentBox=null,this.currentAffinity=null,this.delayedInsertion=d.Delay.create(),this.activeTarget=null,this.autoDisposeCallback(this.removeTargetHints)}removeTargetHints(){var e,n;(null==(n=null==(e=this.activeTarget)?void 0:e.box)?void 0:n.dom)&&(this.activeTarget.box.dom.style.transition="",this.activeTarget.box.dom.style.padding="0"),this.activeTarget=null,this.delayedInsertion.cancel(),this.targetsDom&&((0,r.removeNode)(this.targetsDom),this.targetsDom=null),this.currentBox=null,this.currentAffinity=null}updateTargetHints(e,n,t,l){if(!e||e===this.currentBox&&n===this.currentAffinity)return;if(this.removeTargetHints(),-1===n)return;this.currentBox=e,this.currentAffinity=n;const r=function(e){return e>>1==0}(n),i=function(e){return 1==(1&e)}(n),a=[];for(r===e.isVBox()&&e!==l&&a.push({box:e,isChild:!0,isAfter:i});e;){if(r===e.isHBox()){const n=e.childBoxes.peek();if(2===n.length&&(null==l?void 0:l.parentBox())===e?a.splice(a.length-1,1,{box:e,isChild:!1,isAfter:i}):l!==e&&l!==e.getSiblingBox(i)&&1!==n.length&&a.push({box:e,isChild:!1,isAfter:i}),i&&!e.isLastChild())break;if(!i&&!e.isFirstChild())break}e=e.parentBox()}if(0===a.length)return;i||a.reverse();const o=r?"top":"left",u=r?"height":"width",s=r?"left":"top",c=r?"width":"height";let d=r?t.hBorder:t.vBorder;const p=Math.floor(d/a.length);d=p*a.length;const m=this.rootElem.getBoundingClientRect(),b=this.currentBox.dom.getBoundingClientRect(),g=this;this.targetsDom=f()("div.layout_editor_drop_targeter",h.style(o,b[o]-m[o]+(i?b[u]-d:0)+"px"),a.map(((e,n)=>{const t=e.box.dom.getBoundingClientRect();return f()("div.layout_editor_drop_target",(e=>{e.style[u]=p+1+"px",e.style[c]=t[c]+"px",e.style[s]=t[s]-m[s]+"px",e.style[o]=p*n+"px"}),f().on("mouseenter",(function(){this.classList.add("layout_hover"),g.activeTarget=e;const n="padding"+(r?i?"Bottom":"Top":i?"Right":"Left");e.box.dom.style.transition="padding .3s",e.box.dom.style[n]="20px"})),f().on("mouseleave",(function(){this.classList.remove("layout_hover"),g.activeTarget=null,e.box.dom.style.padding="0"})),f().on("transitionend",this.triggerInsertion.bind(this,e)))}))),this.rootElem.appendChild(this.targetsDom)}triggerInsertion(e){this.removeTargetHints(),this.trigger("insertBox",(n=>{e.isChild?e.box.addChild(n,e.isAfter):e.box.addSibling(n,e.isAfter)}))}accelerateInsertion(){this.activeTarget&&(this.activeTarget.box.dom.style.transition="",this.activeTarget.box.dom.style.padding="0",this.triggerInsertion(this.activeTarget))}}(0,l.extend)(v.prototype,s.Events);class A extends c.Disposable{create(e){this.layout=e,this.rootElem=e.rootElem,this.layout.buildLayout(this.layout.getLayoutSpec(),!0),this.floater=this.autoDispose(M.create(this.layout.fillWindow)),this.dropOverlay=this.autoDispose(y.create()),this.dropTargeter=this.autoDispose(v.create(this.rootElem)),this.listenTo(this.dropTargeter,"insertBox",this.onInsertBox),this.measuringBox=this.autoDispose(f()("div.layout_editor_measuring_box")),this.rootElem.appendChild(this.measuringBox),this.transitionPromise=u().resolve(),this.trashDelay=d.Delay.create(),this.originalBox=null,this.targetBox=null,this.layout.forEachBox(this.makeResizable,this),this.listenTo(this.layout,"layoutChanged",(()=>{this.layout.forEachBox(this.makeResizable,this)}));const n=this;this.boundMouseDown=function(e){return n.handleMouseDown(e,this)},this.boundMouseMove=this.handleMouseMove.bind(this),this.boundMouseUp=this.handleMouseUp.bind(this),b.$(this.rootElem).on("mousedown",".layout_leaf",this.boundMouseDown),this.initialMouseDown=!1,this.lastTriggered="stop",this.autoDisposeCallback((()=>{b.$(b.window).off("mouseup",this.boundMouseUp),b.$(b.window).off("mousemove",this.boundMouseMove),b.$(this.rootElem).off("mousedown",this.boundMouseDown),this.layout.isDisposed()||(this.layout.buildLayout(this.layout.getLayoutSpec(),!1),this.layout.forEachBox(this.unmakeResizable,this))}))}triggerUserEditStart(){a()("stop"===this.lastTriggered,"UserEditStart triggered twice in succession"),this.lastTriggered="start",this.rootElem.setAttribute("data-useredit","start"),this.layout.trigger("layoutUserEditStart")}triggerUserEditStop(){a()("start"===this.lastTriggered,"UserEditStop triggered twice in succession"),this.lastTriggered="stop",this.layout.trigger("layoutUserEditStop"),this.rootElem.setAttribute("data-useredit","stop")}makeResizable(e){if(b.$(e.dom).resizable("instance")||e.isHBox()&&!this.layout.fillWindow||e.isLastChild())return;const n=new g({box:e}),t=e.isVBox();b.$(e.dom).resizable({handles:t?"e":"s",start:this.onResizeStart.bind(this,n,t),resize:this.onResizeMove.bind(this,n,t),stop:this.triggerUserEditStop.bind(this)})}unmakeResizable(e){b.$(e.dom).resizable("instance")&&b.$(e.dom).resizable("destroy")}onResizeStart(e,n,t,l){this.triggerUserEditStart();const r=n?l.originalSize.width:l.originalSize.height;e.scalePerFlexUnit=r/(e.box.flexSize()||1);const i=e.box.parentBox().childBoxes.peek(),a=i.indexOf(e.box);e.nextSiblings=i.slice(a+1),e.origNextSizes=e.nextSiblings.map((function(e){return e.flexSize()})),e.origSize=e.box.flexSize(),e.sumPrev=i.slice(0,a).reduce(z,0),e.sumAll=i.reduce(z,0),e.sumNext=e.sumAll-e.sumPrev}onResizeMove(e,n,t,l){let r=(n?l.size.width:l.size.height)/e.scalePerFlexUnit;r=_(r,e.sumPrev,e.sumAll);const i=(e.sumNext-r)/(e.sumNext-e.origSize);let a=e.sumPrev+r;const o=[];e.origNextSizes.forEach((function(n){const t=_(n*i,a,e.sumAll);a+=t,o.push(t)})),r<=0||o.some((e=>e<=0))||r!==e.box.flexSize.peek()&&(e.box.flexSize(r),e.nextSiblings.forEach((function(e,n){e.flexSize(o[n])})),this.layout.trigger("layoutResized"))}handleMouseDown(e,n){const t=e.target;if(0===e.button&&!(null==t?void 0:t.classList.contains("ui-resizable-handle")))return(null==t?void 0:t.classList.contains("layout_grabbable"))?(this.initialMouseDown=!0,this.originalBox=r.utils.domData.get(n,"layoutBox"),a()(this.originalBox,"MouseDown on element without an associated layoutBox"),b.$(b.window).on("mousemove",this.boundMouseMove),b.$(b.window).on("mouseup",this.boundMouseUp),!1):void 0}dragInNewBox(e,n){const t=this.layout.buildLayoutBox({leaf:n});this.measuringBox.appendChild(t.getDom()),this.handleMouseDown(e,t.dom)}startDragBox(e,n){this.triggerUserEditStart(),this.targetBox=n,this.floater.onInitialMouseMove(e,n),this.trigger("dragStart",this.originalBox)}handleMouseUp(e){var n;b.$(b.window).off("mousemove",this.boundMouseMove),b.$(b.window).off("mouseup",this.boundMouseUp),this.initialMouseDown?this.initialMouseDown=!1:(this.trigger("dragStop"),this.targetBox.takeLeafFrom(this.floater),this.trigger("dragDrop",this.targetBox),"empty"!==(null==(n=this.originalBox)?void 0:n.leafId())&&(this.dropTargeter.activeTarget?this.dropTargeter.accelerateInsertion():C(this.targetBox,"reset")),this.dropTargeter.removeTargetHints(),this.dropOverlay.detach(),this.trigger("dragEnd"),this.transitionPromise.finally((()=>{this.floater.onMouseUp(),C(this.targetBox,"reset"),this.targetBox=this.originalBox=null,(0,c.emptyNode)(this.measuringBox),this.triggerUserEditStop()})))}getBoxFromElement(e){const n=this.layout.getContainingBox(e);return n&&!n.isDomDetached()?n:null}getBox(e){return this.layout.getLeafBox(e)}removeContainingBox(e){e&&!e.isDomDetached()&&(this.triggerUserEditStart(),this.targetBox=e,this.doRemoveBox(e),this.triggerUserEditStop())}doRemoveBox(e){const n=e.dom.getBoundingClientRect();e.leafId("empty"),e.leafContent(f()("div.layout_editor_empty_space",h.style("min-height",n.height+"px"))),this.onInsertBox(l.noop).catch(l.noop)}handleMouseMove(e){var n;if(this.originalBox&&!(null==(n=this.originalBox)?void 0:n.isDisposed())&&(this.initialMouseDown&&(this.initialMouseDown=!1,this.startDragBox(e,this.originalBox)),this.floater.onMouseMove(e),this.trigger("dragMove",e,this.originalBox),!this.transitionPromise.isPending()))if(f().findAncestor(e.target,null,".layout_trash")){const e=this.targetBox&&this.targetBox.isDomDetached();this.trashDelay.isPending()||e||this.trashDelay.schedule(100,this.onInsertBox,this,l.noop)}else this.trashDelay.cancel(),this.updateTargets(e)}updateTargets(e){if(this.transitionPromise.isPending())return;const n=f().findAncestor(e.target,this.rootElem,"."+this.layout.leafId);if(n){const t=r.utils.domData.get(n,"layoutBox");this.dropOverlay.attach(n);const l=this.dropOverlay.getAffinity(e);this.dropTargeter.updateTargetHints(t,l,this.dropOverlay,this.targetBox)}else f().findAncestor(e.target,this.rootElem,".layout_editor_drop_target")||this.dropTargeter.removeTargetHints()}async onInsertBox(e){const n=this.targetBox;let t;this.targetBox=m.LayoutBox.create(this.layout),this.targetBox.takeLeafFrom(n),this.targetBox.flexSize(n.flexSize()),this.targetBox.getDom(),this.transitionPromise=new(u())((function(e,n){t=e})),e(this.targetBox);const l=n.dom.getBoundingClientRect(),r=n.dom.style.flexGrow;n.dom.style.flexGrow="0";const i=this.targetBox.dom.getBoundingClientRect();n.dom.style.flexGrow=r,await u().all([S(n,l,"collapse"),S(this.targetBox,"collapse",i)]),n.dispose(),this.targetBox&&(C(this.targetBox,"reset"),this.dropOverlay.attach(this.targetBox.dom)),t(),this.layout.trigger("layoutResized")}}function w(e,n){return e<n?e/n:1/0}function _(e,n,t){const l=(r=n+e,i=t/60,Math.round(r/i)*i);var r,i;return Math.min(l,t)-n}function C(e,n){const t="reset"===n,l="collapse"===n;"current"===n&&(n=e.dom.getBoundingClientRect()),e.isHBox()?e.dom.style.height=t?"":l?"0px":n.height+"px":e.dom.style.width=t?"":l?"0px":n.width+"px",e.dom.style.opacity=l?"0.0":"1.0"}function T(e){return"string"==typeof e?e:Math.floor(e.width)+"x"+Math.floor(e.height)}function S(e,n,t){if(e.isDomDetached())return u().resolve();const r=e.dom.style.flexGrow;return e.dom.style.flexGrow="0",C(e,n),(0,l.pick)(b.window.getComputedStyle(e.dom),"height","width"),e.dom.classList.add("layout_editor_resize_transition"),new(u())((function(n,l){f().once(e.dom,"transitionend",(function(){n()})),C(e,t)})).timeout(600).catch(u().TimeoutError,(function(){console.error("LayoutEditor.resizeLayoutBoxSmoothly %s %s->%s: transition didn't run",e,T(n),T(t))})).finally((function(){e.dom.classList.remove("layout_editor_resize_transition"),e.dom.style.flexGrow=r}))}function z(e,n){return e+n.flexSize.peek()}(0,l.extend)(A.prototype,s.Events)},9800:(e,n,t)=>{"use strict";t.d(n,{X:()=>l});const l=[{group:"General",commands:[{name:"shortcuts",keys:["F1","Mod+/"],desc:"Display shortcuts pane"},{name:"help",keys:[],desc:"Display Grist documentation"},{name:"undo",keys:["Mod+z"],desc:"Undo last action"},{name:"redo",keys:["Mod+Shift+Z","Ctrl+y"],desc:"Redo last action"},{name:"accept",keys:["Enter"],desc:null},{name:"cancel",keys:["Escape"],desc:null},{name:"find",keys:["Mod+f"],desc:"Find"},{name:"findNext",keys:["Mod+g"],desc:"Find next occurrence"},{name:"findPrev",keys:["Mod+Shift+G"],desc:"Find previous occurrence"},{name:"historyBack",keys:["Mod+Left"],desc:null},{name:"historyForward",keys:["Mod+Right"],desc:null},{name:"reloadPlugins",keys:["Mod+Alt+P"],desc:null}]},{group:"Menu shortcuts",commands:[{name:"closeActiveMenu",keys:["Esc"],desc:null},{name:"docTabOpen",keys:[],desc:"Shortcut to open document tab"},{name:"viewTabOpen",keys:[],desc:"Shortcut to open view tab"},{name:"viewTabFocus",keys:[],desc:"Shortcut to focus view tab if creator panel is open"},{name:"fieldTabOpen",keys:[],desc:"Shortcut to open field tab"},{name:"sortFilterTabOpen",keys:[],desc:"Shortcut to sort & filter tab"},{name:"sortFilterMenuOpen",keys:[],desc:"Shortcut to open sort & filter menu"},{name:"dataSelectionTabOpen",keys:[],desc:"Shortcut to data selection tab"},{name:"printSection",keys:[],desc:"Print currently selected page widget"},{name:"showRawData",keys:[],desc:"Show raw data widget for table of currently selected page widget"},{name:"openWidgetConfiguration",keys:[],desc:"Open Custom widget configuration screen"},{name:"maximizeActiveSection",keys:[],desc:"Maximize the active section"},{name:"leftPanelOpen",keys:[],desc:"Shortcut to open the left panel"},{name:"rightPanelOpen",keys:[],desc:"Shortcut to open the right panel"},{name:"videoTourToolsOpen",keys:[],desc:"Shortcut to open video tour from home left panel"},{name:"activateAssistant",keys:[],desc:"Activate assistant"}]},{group:"Navigation",commands:[{name:"cursorDown",keys:["Down"],desc:"Move downward to next record or field"},{name:"cursorUp",keys:["Up"],desc:"Move upward to previous record or field"},{name:"cursorRight",keys:["Right"],desc:"Move right to the next field"},{name:"cursorLeft",keys:["Left"],desc:"Move left to the previous field"},{name:"nextField",keys:["Tab"],desc:"Move to the next field, saving changes if editing a value"},{name:"prevField",keys:["Shift+Tab"],desc:"Move to the previous field, saving changes if editing a value"},{name:"pageDown",keys:["PageDown"],desc:"Move down one page of records, or to next record in a card list"},{name:"pageUp",keys:["PageUp"],desc:"Move up one page of records, or to previous record in a card list"},{name:"moveToFirstRecord",keys:["Mod+Up"],desc:"Move up to the first record"},{name:"moveToLastRecord",keys:["Mod+Down"],desc:"Move down to the last record"},{name:"moveToFirstField",keys:["Home"],desc:"Move to the first field or the beginning of a row"},{name:"moveToLastField",keys:["End"],desc:"Move to the last field or the end of a row"},{name:"skipDown",keys:[],desc:"Move downward five records"},{name:"skipUp",keys:[],desc:"Move upward five records"},{name:"setCursor",keys:[],desc:"Moves the cursor to the correct location"},{name:"openDocumentList",keys:[],desc:"Opens document list"},{name:"nextPage",keys:["Alt+Down"],desc:"Open next page"},{name:"prevPage",keys:["Alt+Up"],desc:"Open previous page"},{name:"nextSection",keys:["Mod+o"],desc:"Activate next page widget"},{name:"prevSection",keys:["Mod+Shift+O"],desc:"Activate previous page widget"}]},{group:"Selection",commands:[{name:"shiftDown",keys:["Shift+Down"],desc:"Adds the element below the cursor to the selected range"},{name:"shiftUp",keys:["Shift+Up"],desc:"Adds the element above the cursor to the selected range"},{name:"shiftRight",keys:["Shift+Right"],desc:"Adds the element to the right of the cursor to the selected range"},{name:"shiftLeft",keys:["Shift+Left"],desc:"Adds the element to the left of the cursor to the selected range"},{name:"ctrlShiftDown",keys:["Mod+Shift+Down"],desc:"Adds all elements below the cursor to the selected range"},{name:"ctrlShiftUp",keys:["Mod+Shift+Up"],desc:"Adds all elements above the cursor to the selected range"},{name:"ctrlShiftRight",keys:["Mod+Shift+Right"],desc:"Adds all elements to the right of the cursor to the selected range"},{name:"ctrlShiftLeft",keys:["Mod+Shift+Left"],desc:"Adds all elements to the left of the cursor to the selected range"},{name:"selectAll",keys:["Mod+A"],desc:"Selects all currently displayed cells"},{name:"copyLink",keys:["Mod+Shift+A"],desc:"Copy anchor link"},{name:"clearCopySelection",keys:[],desc:"Clears the current copy selection, if any"}]},{group:"Editing",commands:[{name:"editField",keys:["Enter","F2"],desc:"Start editing the currently-selected cell"},{name:"fieldEditSave",keys:["Enter"],desc:"Finish editing a cell, saving the value"},{name:"detachEditor",keys:[""],desc:"Detach active editor"},{name:"fieldEditSaveHere",keys:[],desc:"Finish editing a cell and save without moving to next record"},{name:"fieldEditCancel",keys:["Escape"],desc:"Discard changes to a cell value"},{name:"copy",keys:[],desc:"Copy current selection to clipboard"},{name:"cut",keys:[],desc:"Cut current selection to clipboard"},{name:"paste",keys:[],desc:"Paste clipboard contents at cursor"},{name:"contextMenuCopy",keys:["Mod+C"],desc:"Copy current selection to clipboard",bindKeys:!1},{name:"contextMenuCut",keys:["Mod+X"],desc:"Cut current selection to clipboard",bindKeys:!1},{name:"contextMenuPaste",keys:["Mod+V"],desc:"Paste clipboard contents at cursor",bindKeys:!1},{name:"fillSelectionDown",keys:["Mod+D"],desc:"Fills current selection with the contents of the top row in the selection"},{name:"clearValues",keys:["Backspace","Del"],desc:"Clears the currently selected cells"},{name:"input",keys:[],desc:"Enter text into currently-selected cell and start editing"},{name:"editLabel",keys:[],desc:"Edit label of the currently-selected field"},{name:"editLayout",keys:[],desc:"Edit record layout"},{name:"toggleCheckbox",keys:["Enter","Space"],desc:"Toggles the value of checkbox cells"},{name:"historyPrevious",keys:["Up"],desc:null},{name:"historyNext",keys:["Down"],desc:null},{name:"makeFormula",keys:["="],desc:"When typed at the start of a cell, make this a formula column"},{name:"unmakeFormula",keys:["Backspace"],desc:null},{name:"insertCurrentDate",keys:["Mod+;"],desc:"Insert the current date"},{name:"insertCurrentDateTime",keys:["Mod+Shift+;"],desc:"Insert the current date and time"},{name:"datepickerFocus",keys:["Up","Down"],desc:null},{name:"openDiscussion",keys:["Mod+Alt+M"],desc:"Comment"}]},{group:"Data manipulation",commands:[{name:"insertRecordBefore",keys:["Mod+Shift+Enter"],desc:"Insert a new record, before the currently selected one in an unsorted table"},{name:"insertRecordAfter",keys:["Mod+Enter"],desc:"Insert a new record, after the currently selected one in an unsorted table"},{name:"deleteRecords",keys:["Mod+Del","Mod+Backspace"],desc:"Delete the currently selected record"},{name:"insertFieldBefore",keys:["Alt+Shift+="],desc:"Insert a new column, before the currently selected one"},{name:"insertFieldAfter",keys:["Alt+="],desc:"Insert a new column, after the currently selected one"},{name:"renameField",keys:["Ctrl+m"],desc:"Rename the currently selected column"},{name:"hideFields",keys:["Alt+Shift+-"],desc:"Hide currently selected columns"},{name:"hideCardFields",keys:[],desc:"Hide currently selected fields"},{name:"toggleFreeze",keys:[],desc:"Freeze or unfreeze selected columns"},{name:"deleteFields",keys:["Alt+-"],desc:"Delete the currently selected columns"},{name:"clearColumns",keys:[],desc:"Clear the selected columns"},{name:"clearCardFields",keys:[],desc:"Clear the selected fields"},{name:"convertFormulasToData",keys:[],desc:"Convert the selected columns from formula to data"},{name:"addSection",keys:[],desc:"Add a new viewsection to the currently active view"},{name:"deleteSection",keys:[],desc:"Delete the currently active viewsection"},{name:"collapseSection",keys:[],desc:"Collapse the currently active viewsection"},{name:"expandSection",keys:[],desc:"Expand collapsed viewsection"},{name:"deleteCollapsedSection",keys:[],desc:"Delete collapsed viewsection"},{name:"duplicateRows",keys:["Mod+Shift+d"],desc:"Duplicate selected rows"}]},{group:"Sorting",commands:[{name:"sortAsc",keys:[],desc:"Sort the view data by the currently selected field in ascending order"},{name:"sortDesc",keys:[],desc:"Sort the view data by the currently selected field in descending order"},{name:"addSortAsc",keys:[],desc:"Adds the currently selected column(ascending) to the current view's sort spec"},{name:"addSortDesc",keys:[],desc:"Adds the currently selected column(descending) to the current view's sort spec"}]},{group:"Filtering",commands:[{name:"filterByThisCellValue",keys:[],desc:"Filter this column by just this cell's value"}]},{group:"Linking",commands:[{name:"enterLinkMode",keys:[],desc:"Enters section linking mode in the current view"},{name:"exitLinkMode",keys:[],desc:"Exits section linking mode in the current view"},{name:"saveLinks",keys:[],desc:"Saves the sections links in the current view"},{name:"revertLinks",keys:[],desc:"Reverts the sections links to the saved links the current view"},{name:"clearLinks",keys:[],desc:"Clears the section links in the current view"},{name:"clearSectionLinks",keys:[],desc:"Clears the section links in the current viewsection"}]},{group:"Transforming",commands:[{name:"transformUpdate",keys:["Shift+Enter"],desc:null}]}]},77709:(e,n,t)=>{"use strict";t.r(n),t.d(n,{Command:()=>v,CommandGroup:()=>A,allCommands:()=>h,createGroup:()=>w,getHumanKey:()=>y,init:()=>b,isMac:()=>f,setButtonCommand:()=>_});var l=t(50733),r=t(83277),i=t(81294),a=t.n(i),o=t(11527),u=t(9800),s=t(1310),c=t(54156),d=t(29301);const p=(0,o.get)("window"),f="undefined"!=typeof navigator&&navigator&&/Mac|iPod|iPhone|iPad/.test(navigator.platform),h={},m={};function b(e){const n=e||u.X;Object.keys(h).forEach((function(e){delete h[e]})),Object.keys(m).forEach((function(e){delete m[e]})),n.forEach((function(e){e.commands.forEach((function(e){h[e.name]?console.error("Ignoring duplicate command %s in commandList",e.name):h[e.name]=new v(e.name,e.desc,e.keys,{bindKeys:e.bindKeys,deprecated:e.deprecated})}))})),p.window.cmd={},c.each(h,(function(e,n){Object.defineProperty(p.window.cmd,n,{get:e.run})}))}const g={Mod:"⌘",Alt:"⌥",Shift:"⇧",Ctrl:"⌃",Left:"←",Right:"→",Up:"↑",Down:"↓"},M={Mod:"Ctrl",Left:"←",Right:"→",Up:"↑",Down:"↓"};function y(e,n){const t=n?g:M;let l=e.split("+").map((e=>e.trim()));return l=l.map((e=>e in t?t[e]:1===e.length?e.toUpperCase():e)),l.join(n?"":" + ")}class v{constructor(e,n,t,l={}){var r;this._implGroupStack=[],this._activeFunc=c.noop,this.name=e,this.desc=n,this.humanKeys=t.map((e=>y(e,f))),this.keys=t.map((function(e){return e.trim().toLowerCase().replace(/ *\+ */g,"+")})),this.bindKeys=null==(r=l.bindKeys)||r,this.isActive=d.observable(!1),this._implGroupStack=[],this._activeFunc=c.noop,this.deprecated=l.deprecated||!1,this.run=this._run.bind(this)}getKeysDesc(){return 0===this.humanKeys.length?null:`(${this.humanKeys.join(", ")})`}getDesc(){const e=[this.desc],n=this.getKeysDesc();return n&&e.push(n),e.join(" ")}getKeysDom(e){return a()("span.shortcut_keys",e?this.humanKeys.map(((n,t)=>[t?e():null,a()("span.shortcut_key_image",n)])):this.humanKeys.map((e=>a()("span.shortcut_key_image",e))))}addGroup(e){this._implGroupStack.push(e),this._updateActive()}removeGroup(e){(0,r.arrayRemove)(this._implGroupStack,e),this._updateActive()}_updateActive(){this._implGroupStack.length>0?(this.isActive(!0),this._activeFunc=c.last(this._implGroupStack).commands[this.name]):(this.isActive(!1),this._activeFunc=c.noop),this.bindKeys&&this.keys.forEach((function(e){const n=m[e];if(n&&n.length>0){const r=c.last(n),i=r.knownKeys[e];l.bind(e,(t=r.commands[i],function(){return t(...arguments)||!1}))}else l.unbind(e);var t}))}_run(...e){return this._activeFunc(...e)}}class A extends s.Disposable{constructor(e,n,t){super(),this.attach=a().inlinable((function(e){l.setCustomStopCallback(e,(e=>!this.knownKeys.hasOwnProperty(e)))})),this.commands={},this.isActive=!1;for(const t in e)h[t]?this.commands[t]=e[t].bind(n):console.warn("Ignoring unknown command %s",t);this.knownKeys={};for(const e in this.commands){const n=h[e].keys;for(let t=0;t<n.length;t++)this.knownKeys[n[t]]=e}this.onDispose(this._removeGroup.bind(this)),"boolean"==typeof t||void 0===t?this.activate(null!=t&&t):t&&(this.autoDispose(function(e,n){if(d.isObservable(e))return e.subscribe(n);if(e instanceof s.Observable)return e.addListener(n);throw new Error("Expected an observable")}(t,(e=>this.activate(e)))),this.activate((0,r.unwrap)(t)))}activate(e){e?this._addGroup():this._removeGroup()}_addGroup(){if(!this.isActive){this.isActive=!0;for(const e in this.knownKeys)(m[e]||(m[e]=[])).push(this);for(const e in this.commands)h[e].addGroup(this)}}_removeGroup(){if(this.isActive){for(const e in this.knownKeys)(0,r.arrayRemove)(m[e],this);for(const e in this.commands)h[e].removeGroup(this);this.isActive=!1}}}function w(e,n,t){return A.create(null,null!=e?e:{},n,t)}const _=a().inlinable((function(e,n){const t=h[n];e.setAttribute("title",t.getDesc()),a().on(e,"click",t.run)}))},96682:(e,n,t)=>{"use strict";t.d(n,{Delay:()=>r});var l=t(88438);class r extends l.Disposable{constructor(){super(...arguments),this._timeoutId=null}static wrapWithDelay(e,n,t){return function(...l){const r=t||this;setTimeout((()=>n.apply(r,l)),e)}}static untilAnimationFrame(e,n){let t=null;const l=function(...l){null===t&&(t=window.requestAnimationFrame((()=>{t=null,e.apply(n,l)})))};return l.dispose=function(){null!==t&&window.cancelAnimationFrame(t)},l}create(){this.autoDisposeCallback(this.cancel)}cancel(){null!==this._timeoutId&&(clearTimeout(this._timeoutId),this._timeoutId=null)}isPending(){return null!==this._timeoutId}schedule(e,n,t,...l){this.cancel(),this._timeoutId=setTimeout((()=>{this._timeoutId=null,n.apply(t,l)}),e)}}},3871:(e,n,t)=>{"use strict";t.r(n),t.d(n,{ALL:()=>u,ArrayRowSource:()=>p,BaseFilteredRowSource:()=>m,ExtendedRowSource:()=>h,FilteredRowSource:()=>b,MappedRowSource:()=>f,RowGrouping:()=>y,RowListener:()=>d,RowSource:()=>s,RowWatcher:()=>A,SortedRowSet:()=>v});var l=t(13988),r=t.n(l),i=t(9072),a=t(83277),o=t(1310);const u=Symbol("ALL");class s extends i.G{}const c={add:"onAddRows",remove:"onRemoveRows",update:"onUpdateRows"};class d extends i.G{subscribeTo(e){this.onAddRows(e.getAllRows()),this.listenTo(e,"rowChange",((e,n)=>{this[c[e]](n)})),this.listenTo(e,"rowNotify",this.onRowNotify)}unsubscribeFrom(e){this.stopListening(e,"rowChange"),this.stopListening(e,"rowNotify"),this.onRemoveRows(e.getAllRows())}onAddRows(e){}onRemoveRows(e){}onUpdateRows(e){}onRowNotify(e,n){this.trigger("rowNotify",e,n)}}class p extends s{constructor(e){super(),this._rows=e}getAllRows(){return this._rows}getNumRows(){return this._rows.length}}class f extends s{constructor(e,n){super(),this.parentRowSource=e,this._mapperFunc=e=>n(e),this.listenTo(e,"rowChange",((e,n)=>{this.trigger("rowChange",e,Array.from(n,this._mapperFunc))})),this.listenTo(e,"rowNotify",((e,n)=>{this.trigger("rowNotify",e===u?u:Array.from(e,this._mapperFunc),n)}))}getAllRows(){return Array.from(this.parentRowSource.getAllRows(),this._mapperFunc)}getNumRows(){return this.parentRowSource.getNumRows()}}class h extends s{constructor(e,n){super(),this.parentRowSource=e,this.extras=n,this.listenTo(e,"rowChange",((e,n)=>{this.trigger("rowChange",e,n)})),this.listenTo(e,"rowNotify",((e,n)=>{this.trigger("rowNotify",e===u?u:e,n)}))}getAllRows(){return[...this.parentRowSource.getAllRows()].concat(this.extras)}getNumRows(){return this.parentRowSource.getNumRows()+this.extras.length}}class m extends d{constructor(e){super(),this._filterFunc=e,this._matchingRows=new Set}getAllRows(){return this._matchingRows.values()}getNumRows(){return this._matchingRows.size}onAddRows(e){const n=[];for(const t of e)this._filterFunc(t)?(this._matchingRows.add(t),n.push(t)):this._addExcludedRow(t);n.length>0&&this.trigger("rowChange","add",n)}onRemoveRows(e){const n=[];for(const t of e)this._matchingRows.delete(t)&&n.push(t),this._deleteExcludedRow(t);n.length>0&&this.trigger("rowChange","remove",n)}onUpdateRows(e){const n=this._updateRowsHelper({},e);n.removes&&this.trigger("rowChange","remove",n.removes),n.updates&&this.trigger("rowChange","update",n.updates),n.adds&&this.trigger("rowChange","add",n.adds)}onRowNotify(e,n){if(e===u)this.trigger("rowNotify",u,n);else{const t=[];for(const n of e)this._matchingRows.has(n)&&t.push(n);t.length>0&&this.trigger("rowNotify",t,n)}}_updateRowsHelper(e,n){for(const t of n)this._filterFunc(t)?this._matchingRows.has(t)?(e.updates||(e.updates=[])).push(t):this._deleteExcludedRow(t)&&(this._matchingRows.add(t),(e.adds||(e.adds=[])).push(t)):this._matchingRows.delete(t)&&(this._addExcludedRow(t),(e.removes||(e.removes=[])).push(t));return e}_addExcludedRow(e){}_deleteExcludedRow(e){return!0}}class b extends m{constructor(){super(...arguments),this._excludedRows=new Set}updateFilter(e){this._filterFunc=e;const n={};this._updateRowsHelper(n,this._matchingRows),this._updateRowsHelper(n,this._excludedRows),n.removes&&this.trigger("rowChange","remove",n.removes),n.adds&&this.trigger("rowChange","add",n.adds)}refilterRows(e){const n=this._updateRowsHelper({},e);n.removes&&this.trigger("rowChange","remove",n.removes),n.adds&&this.trigger("rowChange","add",n.adds)}getHiddenRows(){return this._excludedRows.values()}_addExcludedRow(e){this._excludedRows.add(e)}_deleteExcludedRow(e){return this._excludedRows.delete(e)}}class g extends s{constructor(e){super(),this.groupValue=e,this._rows=new Set}getAllRows(){return this._rows.values()}getNumRows(){return this._rows.size}_addAll(e){for(const n of e)this._rows.add(n)}_removeAll(e){for(const n of e)this._rows.delete(n)}}function M(e,n,t){let l=e.get(n);l||e.set(n,l=[]),l.push(t)}class y extends d{constructor(e){super(),this._groupFunc=e,this._rowsToValues=new Map,this._valuesToGroups=new Map,this.onDispose((()=>{for(const e of this._valuesToGroups.values())e.dispose()}))}getGroup(e){let n=this._valuesToGroups.get(e);return n||(n=new g(e),this._valuesToGroups.set(e,n)),n}onAddRows(e){const n=new Map;for(const t of e){const e=this._groupFunc(t);M(n,e,t),this._rowsToValues.set(t,e)}n.forEach(((e,n)=>{const t=this.getGroup(n);t._addAll(e),t.trigger("rowChange","add",e)}))}onRemoveRows(e){const n=new Map;for(const t of e)M(n,this._rowsToValues.get(t),t),this._rowsToValues.delete(t);n.forEach(((e,n)=>{const t=this._valuesToGroups.get(n);t._removeAll(e),t.trigger("rowChange","remove",e)}))}onUpdateRows(e){let n,t,l;for(const r of e){const e=this._rowsToValues.get(r),i=this._groupFunc(r);i===e?M(n||(n=new Map),e,r):(this._rowsToValues.set(r,i),M(t||(t=new Map),e,r),M(l||(l=new Map),i,r))}t&&t.forEach(((e,n)=>{const t=this._valuesToGroups.get(n);t._removeAll(e),t.trigger("rowChange","remove",e)})),n&&n.forEach(((e,n)=>{this._valuesToGroups.get(n).trigger("rowChange","update",e)})),l&&l.forEach(((e,n)=>{const t=this.getGroup(n);t._addAll(e),t.trigger("rowChange","add",e)}))}onRowNotify(e,n){if(e===u)for(const e of this._valuesToGroups.values())e.trigger("rowNotify",u,n);else{const t=new Map;for(const n of e)M(t,this._rowsToValues.get(n),n);t.forEach(((e,t)=>{this._valuesToGroups.get(t).trigger("rowNotify",e,n)}))}}}class v extends d{constructor(e,n){super(),this._compareFunc=e,this._skippableRows=n,this._allRows=new Set,this._isPaused=!1,this._koArray=this.autoDispose(r()()),this._keepFunc=null==n?void 0:n.getKeepFunc()}getKoArray(){return this._koArray}pause(e){!e&&this._isPaused&&this._koArray.assign(Array.from(this._allRows).sort(this._compareFunc)),this._isPaused=Boolean(e)}updateSort(e){this._compareFunc=e,this._isPaused||this._koArray.assign(Array.from(this._koArray.peek()).sort(this._compareFunc))}onAddRows(e){for(const n of e)this._allRows.add(n);if(!this._isPaused)if(this._canChangeIncrementally(e))for(const n of e){const e=(0,a.sortedIndex)(this._koArray.peek(),n,this._compareFunc);this._koArray.splice(e,0,n)}else this._koArray.assign(this._keep(Array.from(this._allRows).sort(this._compareFunc)))}onRemoveRows(e){for(const n of e)this._allRows.delete(n);if(!this._isPaused)if(this._canChangeIncrementally(e))for(const n of e){const e=this._koArray.peek().indexOf(n);-1!==e&&this._koArray.splice(e,1)}else this._koArray.assign(this._keep(Array.from(this._allRows).sort(this._compareFunc)))}onUpdateRows(e){if(this._isPaused)return;const n=Array.from(e).sort(this._compareFunc);(function(e,n,t,l){let r=0;for(const i of t){if(!n.has(i))continue;const t=e.indexOf(i,r);if(-1===t||!w(e,t,l))return!1;r=t}return!0})(this._koArray.peek(),this._allRows,n,this._compareFunc)||(this._canChangeIncrementally(e)?(this.onRemoveRows(e),this.onAddRows(e)):this._koArray.assign(this._keep(Array.from(this._koArray.peek()).sort(this._compareFunc))))}_canChangeIncrementally(e){return!this._keepFunc&&function(e){return Array.isArray(e)&&e.length<=2}(e)}_keep(e,n=2){var t;if(!this._keepFunc)return e;const l=e.map(this._keepFunc),r=e.map((()=>!1)),i=e.length;i>=1&&(l[0]=!0),i>=2&&(l[i-1]=!0);let a=-n-1;for(let e=0;e<i;e++)l[e]?a=e:e-a<=n&&(l[e]=!0);a=i+n+1;for(let e=i-1;e>=0;e--)l[e]?a=e:a-e<=n&&(l[e]=!0);let o=!1;for(let e=0;e<i;e++)l[e]?o=!1:o||(r[e]=!0,o=!0);const u=(null==(t=this._skippableRows)?void 0:t.getSkipRowId())||0;return e.map(((e,n)=>r[n]?u:e)).filter(((e,n)=>l[n]||r[n]||"new"===e))}}class A extends d{constructor(){super(...arguments),this.rowFilter=o.Observable.create(this,(()=>!1)),this._rowCounter=new Map}clear(){this._rowCounter.clear(),this.rowFilter.set((()=>!1)),this.stopListening()}onAddRows(e){for(const n of e)this._rowCounter.set(n,(this._rowCounter.get(n)||0)+1);this.rowFilter.set((e=>{var n;return(null!=(n=this._rowCounter.get(e))?n:0)>0}))}onRemoveRows(e){for(const n of e)this._rowCounter.set(n,(this._rowCounter.get(n)||0)-1);this.rowFilter.set((e=>{var n;return(null!=(n=this._rowCounter.get(e))?n:0)>0}))}}function w(e,n,t){const l=e[n];return(0===n||t(e[n-1],l)<=0)&&(n===e.length-1||t(l,e[n+1])<=0)}},9072:(e,n,t)=>{"use strict";t.d(n,{G:()=>i});var l=t(86277),r=t(1310);class i extends r.Disposable{constructor(){super(),this.onDispose(this.stopListening,this)}}Object.assign(i.prototype,l.Events)},18967:(e,n,t)=>{"use strict";t.r(n),t.d(n,{arrayToString:()=>r,stringToArray:()=>i});var l=t(13039).Buffer;let r,i;if("undefined"!=typeof TextDecoder){const e=new TextDecoder("utf8"),n=new TextEncoder("utf8");r=function(n){return e.decode(n)},i=function(e){return n.encode(e)}}else r=function(e){return l.from(e).toString("utf8")},i=function(e){return new Uint8Array(l.from(e,"utf8"))}},39764:(e,n,t)=>{"use strict";function l(e){return new Promise((n=>setTimeout(n,e)))}t.d(n,{g:()=>l})},83277:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DOWN_TRIANGLE:()=>DOWN_TRIANGLE,PromiseChain:()=>PromiseChain,UP_TRIANGLE:()=>UP_TRIANGLE,addCountsToMap:()=>addCountsToMap,arrayAppend:()=>arrayAppend,arrayCopyBackward:()=>arrayCopyBackward,arrayCopyForward:()=>arrayCopyForward,arrayExtend:()=>arrayExtend,arrayInsertBefore:()=>arrayInsertBefore,arrayRemove:()=>arrayRemove,arrayRepeat:()=>app_plugin_gutil__WEBPACK_IMPORTED_MODULE_1__.v,arraySplice:()=>arraySplice,arraysEqual:()=>arraysEqual,assertIsDefined:()=>assertIsDefined,between:()=>between,byteString:()=>byteString,capitalize:()=>capitalize,capitalizeFirstWord:()=>capitalizeFirstWord,clamp:()=>clamp,cloneFunc:()=>cloneFunc,countIf:()=>countIf,deepExtend:()=>deepExtend,defaultCollator:()=>defaultCollator,defaultLocale:()=>defaultLocale,encodeQueryParam:()=>encodeQueryParam,encodeQueryParams:()=>encodeQueryParams,endsWith:()=>endsWith,firstDefined:()=>firstDefined,genRandomId:()=>genRandomId,getDistinctValues:()=>getDistinctValues,getReconnectTimeout:()=>getReconnectTimeout,getSetMapValue:()=>getSetMapValue,growMatrix:()=>growMatrix,hasDuplicates:()=>hasDuplicates,ifNotSet:()=>ifNotSet,indexOf:()=>indexOf,inlineStyle:()=>inlineStyle,isAffirmative:()=>isAffirmative,isColorDark:()=>isColorDark,isEmail:()=>isEmail,isLongerThan:()=>isLongerThan,isNonNullish:()=>isNonNullish,isNumber:()=>isNumber,isSubset:()=>isSubset,isValidHex:()=>isValidHex,localeCompare:()=>localeCompare,map2:()=>map2,mapToObject:()=>mapToObject,maxsplit:()=>maxsplit,mod:()=>mod,multiCompareFunc:()=>multiCompareFunc,nativeCompare:()=>nativeCompare,not:()=>not,notSet:()=>notSet,padStart:()=>padStart,popFromMap:()=>popFromMap,propertyCompare:()=>propertyCompare,pruneArray:()=>pruneArray,removePrefix:()=>removePrefix,removeSuffix:()=>removeSuffix,removeTrailingSlash:()=>removeTrailingSlash,retryOnce:()=>retryOnce,roundDownToMultiple:()=>roundDownToMultiple,safeJsonParse:()=>safeJsonParse,sanitizeIdent:()=>sanitizeIdent,setDefault:()=>setDefault,setDifference:()=>setDifference,sortedIndex:()=>sortedIndex,sortedScan:()=>sortedScan,startsWith:()=>startsWith,undef:()=>undef,undefDefault:()=>undefDefault,unwrap:()=>unwrap,waitGrainObs:()=>waitGrainObs,waitObs:()=>waitObs});var app_common_delay__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(39764),grainjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1310),app_plugin_gutil__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(64330);const identity=__webpack_require__(72827),UP_TRIANGLE="▲",DOWN_TRIANGLE="▼",EMAIL_RE=new RegExp("^\\w[\\w%+/='-]*(\\.[\\w%+/='-]+)*@([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z]{2,6}$","u");function startsWith(e,n){return 0===e.lastIndexOf(n,0)}function endsWith(e,n){return-1!==e.indexOf(n,e.length-n.length)}function removePrefix(e,n){return startsWith(e,n)?e.slice(n.length):null}function removeSuffix(e,n){return endsWith(e,n)?e.slice(0,e.length-n.length):null}function removeTrailingSlash(e){const n=removeSuffix(e,"/");return null===n?e:n}function padStart(e,n,t){return e.padStart(n,t)}function capitalize(e){return e.replace(/\b[a-z]/gi,(e=>e.toUpperCase()))}function capitalizeFirstWord(e){return e.replace(/\b[a-z]/i,(e=>e.toUpperCase()))}function isNumber(e){return!isNaN(parseFloat(e))&&isFinite(e)}function clamp(e,n,t){return Math.max(n,Math.min(t,e))}function between(e,n,t){const l=Math.min(n,t),r=Math.max(n,t);return l<=e&&e<=r}function mod(e,n){return(e%n+n)%n}function roundDownToMultiple(e,n){return Math.floor(e/n)*n}function undefDefault(e,n){return void 0!==e?e:n}function undef(...e){for(const n of e)if(void 0!==n)return n}async function firstDefined(...e){for(const n of e){const e=await n();if(void 0!==e)return e}}function safeJsonParse(e,n){try{return""!==e&&void 0!==e?JSON.parse(e):n}catch(e){return n}}function encodeQueryParam(e){return encodeURIComponent(String(void 0===e?null:e)).replace(/%2F/g,"/")}function encodeQueryParams(e){return Object.keys(e).map((n=>encodeQueryParam(n)+"="+encodeQueryParam(e[n]))).join("&")}function maxsplit(e,n,t){const l=[];let r,i=0;for(let a=0;a<t&&(r=e.indexOf(n,i),-1!==r);a++)l.push(e.slice(i,r)),i=r+n.length;return l.push(e.slice(i)),l}function arraysEqual(e,n){if(e===n)return!0;if(!e||!n)return!1;if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}function setDifference(e,n){const t=new Set;for(const l of e)n.has(l)||t.add(l);return t}function indexOf(e,n){return Array.prototype.indexOf.call(e,n)}function arrayRemove(e,n){const t=e.indexOf(n);return-1!==t&&(e.splice(t,1),!0)}function arrayInsertBefore(e,n,t){const l=e.indexOf(t);-1===l?e.push(n):e.splice(l,0,n)}function arrayExtend(e,n){for(let t=0,l=n.length;t<l;t++)e.push(n[t])}function arrayCopyForward(e,n,t,l,r){const i=n+r;for(const r=i-7;n<r;l+=8,n+=8)e[n]=t[l],e[n+1]=t[l+1],e[n+2]=t[l+2],e[n+3]=t[l+3],e[n+4]=t[l+4],e[n+5]=t[l+5],e[n+6]=t[l+6],e[n+7]=t[l+7];for(;n<i;++l,++n)e[n]=t[l]}function arrayCopyBackward(e,n,t,l,r){let i=n+r-1,a=l+r-1;for(const l=n+7;i>=l;i-=8,a-=8)e[i]=t[a],e[i-1]=t[a-1],e[i-2]=t[a-2],e[i-3]=t[a-3],e[i-4]=t[a-4],e[i-5]=t[a-5],e[i-6]=t[a-6],e[i-7]=t[a-7];for(;i>=n;--i,--a)e[i]=t[a]}function arrayAppend(e,n,t,l){if(1===l)e.push(n[t]);else{const r=e.length;e.length=r+l,arrayCopyForward(e,r,n,t,l)}}function arraySplice(e,n,t){const l=e.length,r=l-n,i=t.length;return e.length=l+i,i>r?(arrayCopyForward(e,l,t,r,i-r),arrayCopyForward(e,n+i,e,n,r),arrayCopyForward(e,n,t,0,r)):(arrayCopyForward(e,l,e,l-i,i),arrayCopyBackward(e,n+i,e,n,r-i),arrayCopyForward(e,n,t,0,i)),e}function sortedIndex(e,n,t){let l,r=0,i=e.length;if(0===e.length)return 0;for(;r<i;)l=Math.floor((r+i)/2),t(e[l],n)<0?r=l+1:i=l;return r}function hasDuplicates(e){const n=Object.create(null);for(const t of e){if(t in n)return!0;n[t]=!0}return!1}function countIf(e,n){let t=0;return e.forEach((e=>{n(e)&&t++})),t}function map2(e,n,t){const l=e.length,r=new Array(l);for(let i=0;i<l;i++)r[i]=t(e[i],n[i]);return r}function growMatrix(e,n,t){const l=e.map((e=>Array.from({length:t},((n,t)=>e[t%e.length]))));return Array.from({length:n},((e,n)=>l[n%l.length]))}function multiCompareFunc(e,n,t){if(e.length!==n.length)throw new Error("Number of sort key funcs must be the same as the number of compare funcs");const l=t||e.map((()=>1));return function(t,r){let i,a,o;for(let u=0;u<n.length;u++)if(a=e[u](t),o=e[u](r),i=n[u](a,o),0!==i)return l[u]*i;return 0}}function nativeCompare(e,n){return e<n?-1:e>n?1:0}function propertyCompare(e){return function(n,t){return nativeCompare(n[e],t[e])}}const defaultLocale="en-US",defaultCollator=new Intl.Collator(defaultLocale),localeCompare=defaultCollator.compare;function setDefault(e,n,t){return e.has(n)||e.set(n,t),e.get(n)}function getSetMapValue(e,n,t){return e.has(n)||e.set(n,t()),e.get(n)}function popFromMap(e,n){const t=e.get(n);return e.delete(n),t}function addCountsToMap(e,n,t=identity){for(const l of n){const n=t(l);e.set(n,(e.get(n)||0)+1)}}function isSubset(e,n){for(const t of e)if(!n.has(t))return!1;return!0}function deepExtend(e,n){for(let n=1;n<arguments.length;n++){const t=arguments[n];for(const n in t){if(!t.hasOwnProperty(n))continue;let l=t[n];if(l!==e&&void 0!==l){if(l){const t=e[n];Array.isArray(l)?l=deepExtend(t&&Array.isArray(t)?t:[],l):"object"==typeof l&&(l=deepExtend(t&&"object"==typeof t?t:{},l))}e[n]=l}}}return e}function byteString(e){return e<1024?e+"B":e<1048576?(e/1024).toFixed(1)+"KB":(e/1024/1024).toFixed(1)+"MB"}function mapToObject(e,n,t){const l=e.map(n,t),r={};for(let n=0;n<e.length;n++)r[e[n]]=l[n];return r}function pruneArray(e,n){if(0===n.length)return;if(1===n.length)return void e.splice(n[0],1);const t=e.length;let l=0,r=0;for(let i=0;i<t;i++)i!==n[r]?(i!==l&&(e[l]=e[i]),l++):r++;e.length=l}const _kwlist=["and","as","assert","break","class","continue","def","del","elif","else","except","exec","finally","for","from","global","if","import","in","is","lambda","not","or","pass","print","raise","return","try","while","with","yield","None","False","True"];function sanitizeIdent(e,n){for(n=n||"c",e=(e=(e=e.replace(/[^a-zA-Z0-9_]+/g,"_")).replace(/^_+|_+$/g,"")).replace(/^(?=[0-9])/g,n);_kwlist.includes(e);)e=n+e;return e}function cloneFunc(fn){return eval("("+fn.toString()+")")}function genRandomId(e,n){const t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";let l=n||"";for(let n=0;n<e;n++)l+=t[Math.floor(Math.random()*t.length)];return l}function sortedScan(e,n,t,l){const r=l||identity;let i=0,a=0;for(;i<e.length||a<n.length;){const l=e[i],o=n[a],u=i<e.length?r(l):null,s=a<n.length?r(o):null;null!==u&&(null===s||u<s)?(t(l,null),i++):null===u||u>s?(t(null,o),a++):(t(l,o),i++,a++)}}function getReconnectTimeout(e,n){if(e>=n.length){const e=n[n.length-1];return e+Math.random()*e}return n[e]}function isEmail(e){return EMAIL_RE.test(e.toLowerCase())}function waitObs(e,n=Boolean){return new Promise(((t,l)=>{const r=e.peek();if(n(r))return t(r);const i=e.subscribe((e=>{n(e)&&(i.dispose(),t(e))}))}))}async function waitGrainObs(e,n=Boolean){let t;const l=await new Promise(((l,r)=>{const i=e.get();if(n(i))return l(i);t=e.addListener((e=>{n(e)&&l(e)}))}));return t&&t.dispose(),l}function inlineStyle(e,n){return t=>(0,grainjs__WEBPACK_IMPORTED_MODULE_0__.subscribeElem)(t,n,(n=>{t.style.setProperty(e,n)}))}class PromiseChain{constructor(){this._last=Promise.resolve()}add(e){const n=this._last.catch((()=>{throw new Error("Skipped due to an earlier error")})).then(e);return n.catch((()=>{this._last=Promise.resolve()})),this._last=n,n}}function isColorDark(e,n=220){const t=e.substring(1),l=parseInt(t,16);return.2126*(l>>16&255)+.7152*(l>>8&255)+.0722*(l>>0&255)<n}function isValidHex(e){return/^#([0-9A-F]{6})$/i.test(e)}async function isLongerThan(e,n){let t=!0;const l=()=>{t=!1};return await Promise.race([e.then(l,l),(0,app_common_delay__WEBPACK_IMPORTED_MODULE_2__.g)(n)]),t}function isAffirmative(e){return["1","on","true","yes"].includes(String(e).toLowerCase())}function isNonNullish(e){return null!=e}const unwrap=e=>"_getDepItem"in e?e.get():e.peek(),not=e=>n=>!n(e);function getDistinctValues(e,n=1/0){const t=new Set;for(let l=0;l<e.length&&t.size<n;l++)t.add(e[l]);return t}function assertIsDefined(e,n){if(null==n)throw new Error(`Expected '${e}' to be defined, but received ${n}`)}async function retryOnce(e,n){try{return await e()}catch(t){return await n(t),await e()}}function notSet(e){return null==e||""===e||Array.isArray(e)&&!e.length||"object"==typeof e&&!Object.keys(e).length||["[object Map]","[object Set"].includes(e.toString())&&!e.size}function ifNotSet(e,n=null){return notSet(e)?n:e}},46649:(e,n,t)=>{"use strict";t.r(n),t.d(n,{Marshaller:()=>h,Unmarshaller:()=>b,WrappedObj:()=>f,dumpBase64:()=>M,loadBase64:()=>y,loads:()=>g,wrap:()=>p});class l{constructor(e,n,t){this._base=e,this._digits=n,this._sign=t}copy(){return new l(this._base,this._digits,this._sign)}toNative(){const e=this.toNumber();return Number.isSafeInteger(e)?e:this.toString(10)}toNumber(){let e=0,n=1;for(const t of this._digits)e+=t*n,n*=this._base;return e*(this._sign<0?-1:1)}toString(e=10){const n=this.copy(),t=[];for(;n._digits.length>0;)t.push(n._mod(e).toString(e)),n._divide(e);return 0===t.length?"0":(this._sign<0?"-":"")+t.reverse().join("")}_mod(e){let n=0,t=1;for(const l of this._digits)n=(n+l%e*t)%e,t=t*this._base%e;return n}_divide(e){if(0!==this._digits.length){for(let n=this._digits.length-1;n>0;n--)this._digits[n-1]+=this._digits[n]%e*this._base,this._digits[n]=Math.floor(this._digits[n]/e);for(this._digits[0]=Math.floor(this._digits[0]/e);this._digits.length>0&&0===this._digits[this._digits.length-1];)this._digits.pop()}}}var r=t(72604),i=t.n(r),a=t(82142),o=t(55723),u=t(13039).Buffer;function s(e){return e.charCodeAt(0)}const c={NULL:s("0"),NONE:s("N"),FALSE:s("F"),TRUE:s("T"),STOPITER:s("S"),ELLIPSIS:s("."),INT:s("i"),INT64:s("I"),BFLOAT:s("g"),FLOAT:s("f"),COMPLEX:s("x"),LONG:s("l"),STRING:s("s"),INTERNED:s("t"),STRINGREF:s("R"),TUPLE:s("("),LIST:s("["),DICT:s("{"),CODE:s("c"),UNICODE:s("u"),UNKNOWN:s("?"),SET:s("<"),FROZENSET:s(">")};function d(e){return e===+e&&e===(0|e)&&!Object.is(e,-0)}function p(e,n){return new f(c[e],n)}class f{constructor(e,n){this.code=e,this.value=n}inspect(){return o.inspect(this.value)}}class h{constructor(e){this._memBuf=new(i())(void 0),this._floatCode=e&&e.version&&e.version>=2?c.BFLOAT:c.FLOAT,this._stringCode=e&&e.stringToBuffer?c.STRING:c.UNICODE,this._keysAreBuffers=Boolean(null==e?void 0:e.keysAreBuffers)}dump(){const e=new Uint8Array(this._memBuf.asByteArray());return this._memBuf.clear(),e}dumpAsBuffer(){const e=u.from(this._memBuf.asByteArray());return this._memBuf.clear(),e}getCode(e){switch(typeof e){case"number":return d(e)?c.INT:this._floatCode;case"string":return this._stringCode;case"boolean":return e?c.TRUE:c.FALSE;case"undefined":return c.NONE;case"object":return e instanceof f?e.code:null===e?c.NONE:e instanceof Uint8Array||u.isBuffer(e)?c.STRING:Array.isArray(e)?c.LIST:c.DICT;default:throw new Error("Marshaller: Unsupported value of type "+typeof e)}}marshal(e){const n=this.getCode(e);switch(e instanceof f&&(e=e.value),this._memBuf.writeUint8(n),n){case c.NULL:case c.NONE:case c.FALSE:case c.TRUE:return;case c.INT:return this._memBuf.writeInt32LE(e);case c.INT64:return this._writeInt64(e);case c.FLOAT:return this._writeStringFloat(e);case c.BFLOAT:return this._memBuf.writeFloat64LE(e);case c.STRING:return e instanceof Uint8Array||u.isBuffer(e)?this._writeByteArray(e):this._writeUtf8String(e);case c.TUPLE:case c.LIST:return this._writeList(e);case c.DICT:return this._writeDict(e);case c.UNICODE:return this._writeUtf8String(e);default:throw new Error("Marshaller: Can't serialize code "+n)}}_writeInt64(e){if(!d(e))throw new Error("Marshaller: int64 still only supports 32-bit ints for now: "+e);this._memBuf.writeInt32LE(e),this._memBuf.writeInt32LE(e>=0?0:-1)}_writeStringFloat(e){const n=i().stringToArray(e.toString());if(n.byteLength>=127)throw new Error("Marshaller: Trying to write a float that takes "+n.byteLength+" bytes");this._memBuf.writeUint8(n.byteLength),this._memBuf.writeByteArray(n)}_writeByteArray(e){this._memBuf.writeInt32LE(e.length),this._memBuf.writeByteArray(e)}_writeUtf8String(e){const n=this._memBuf.size();this._memBuf.writeInt32LE(0),this._memBuf.writeString(e);const t=this._memBuf.size()-n-4;this._memBuf.asDataView.setInt32(this._memBuf.startPos+n,t,!0)}_writeList(e){this._memBuf.writeInt32LE(e.length);for(const n of e)this.marshal(n)}_writeDict(e){const n=Object.keys(e);n.sort();for(const t of n)this.marshal(this._keysAreBuffers?u.from(t):t),this.marshal(e[t]);this._memBuf.writeUint8(c.NULL)}}const m=4294967296;class b extends a.EventEmitter{constructor(e){super(),this._consumer=null,this._lastCode=null,this._stringTable=[],this.memBuf=new(i())(void 0),this._bufferToString=Boolean(e&&e.bufferToString),this._emitter=this.emit.bind(this,"value")}push(e){this.parse(e,this._emitter)}parse(e,n){this.memBuf.writeByteArray(e);try{for(;this.memBuf.size()>0;){this._consumer=this.memBuf.makeConsumer(),this._stringTable.length=0;const e=this._parse();if(this.memBuf.consume(this._consumer),!1===n(e))return}}catch(e){if(!e.needMoreData)throw e.message="Unmarshaller: "+e.message,e;(!e.consumedData||e.consumedData>1024)&&console.log("Unmarshaller: Need more data; wasted parsing of %d bytes",e.consumedData)}}_parse(){const e=this.memBuf.readUint8(this._consumer);switch(this._lastCode=e,e){case c.NULL:case c.NONE:return null;case c.FALSE:return!1;case c.TRUE:return!0;case c.INT:return this._parseInt();case c.INT64:return this._parseInt64();case c.FLOAT:return this._parseStringFloat();case c.BFLOAT:return this._parseBinaryFloat();case c.STRING:return this._parseByteString();case c.TUPLE:case c.LIST:return this._parseList();case c.DICT:return this._parseDict();case c.UNICODE:return this._parseUnicode();case c.INTERNED:return this._parseInterned();case c.STRINGREF:return this._parseStringRef();case c.LONG:return this._parseLong();default:throw new Error(`Unmarshaller: unsupported code "${String.fromCharCode(e)}" (${e})`)}}_parseInt(){return this.memBuf.readInt32LE(this._consumer)}_parseInt64(){const e=this.memBuf.readInt32LE(this._consumer),n=this.memBuf.readInt32LE(this._consumer);if(0===n&&e>=0||-1===n&&e<0)return e;const t=e<0?m+e:e;return n>=0?new l(m,[t,n],1).toNative():new l(m,[m-t,-n-1],-1).toNative()}_parseLong(){const e=this.memBuf.readInt32LE(this._consumer),n=e<0?-1:1,t=e<0?-e:e,r=[];for(let e=0;e<t;e++)r.push(this.memBuf.readInt16LE(this._consumer));return new l(32768,r,n).toNative()}_parseStringFloat(){const e=this.memBuf.readUint8(this._consumer),n=this.memBuf.readString(this._consumer,e);return parseFloat(n)}_parseBinaryFloat(){return this.memBuf.readFloat64LE(this._consumer)}_parseByteString(){const e=this.memBuf.readInt32LE(this._consumer);return this._bufferToString?this.memBuf.readString(this._consumer,e):this.memBuf.readByteArray(this._consumer,e)}_parseInterned(){const e=this._parseByteString();return this._stringTable.push(e),e}_parseStringRef(){const e=this._parseInt();return this._stringTable[e]}_parseList(){const e=this.memBuf.readInt32LE(this._consumer),n=[];for(let t=0;t<e;t++)n[t]=this._parse();return n}_parseDict(){const e={};for(;;){let n=this._parse();if(null===n&&this._lastCode===c.NULL)break;const t=this._parse();null!==n&&(n instanceof Uint8Array&&(n=i().arrayToString(n)),e[n]=t)}return e}_parseUnicode(){const e=this.memBuf.readInt32LE(this._consumer);return this.memBuf.readString(this._consumer,e)}}function g(e,n){const t=new b(n);let l;if(t.parse(e,(function(e){return l=e,!1})),void 0===l)throw new Error("loads: input data truncated");if(t.memBuf.size()>0)throw new Error("loads: extra bytes past end of input");return l}function M(e,n){const t=new h(n||{version:2});return t.marshal(e),t.dumpAsBuffer().toString("base64")}function y(e,n){return g(u.from(e,"base64"),n)}},85550:(e,n,t)=>{"use strict";function l(e,n){const t=e.toString();return t.length>=n?t:"00000000".slice(0,n-t.length)+t}t.r(n),t.d(n,{timeFormat:()=>a});const r={h:(e,n)=>e.push(l(n.getHours(),2)),m:(e,n)=>e.push(l(n.getMinutes(),2)),s:(e,n)=>e.push(l(n.getSeconds(),2)),d:(e,n)=>e.push(l(n.getDate(),2)),n:(e,n)=>e.push(l(n.getMonth()+1,2)),y:(e,n)=>e.push(""+n.getFullYear()),M:(e,n)=>e.push(l(n.getMilliseconds(),3)),Y:(e,n)=>i(e,"ynd",n),D:(e,n)=>i(e,"y-n-d",n),T:(e,n)=>i(e,"h:m:s",n),A:(e,n)=>i(e,"D T.M",n)};function i(e,n,t){for(let l=0,i=n.length;l<i;l++){const i=n[l],a=r[i];a?a(e,t):e.push(i)}}function a(e,n){const t=[];return i(t,e,n),t.join("")}},64330:(e,n,t)=>{"use strict";t.d(n,{v:()=>i});const l=t(27083),r=t(80417);function i(e,n){return r(e,l(n))}},50733:(e,n,t)=>{if("undefined"==typeof window)e.exports={bind:function(){},unbind:function(){}};else{var l=t(12462);l.addKeycodes({173:"-"});var r=new WeakMap,i=l.prototype,a=i.stopCallback;i.stopCallback=function(e,n,t,l){if(o)return!0;const i=r.get(n);if(i)return i(t);try{return a.call(this,e,n,t,l)}catch(e){if(!document.body.contains(n))return;throw e}};var o=!1;l.setPaused=function(e){o=e},l.setCustomStopCallback=function(e,n){r.set(e,n)},e.exports=l}},68914:(e,n,t)=>{var l=t(29301);function r(e){this.store=new Map,this.mapFunc=e;let n=e.subscribe((()=>{this.updateAll()}));this.autoDisposeCallback((()=>{n.dispose(),this.store.forEach(((e,n)=>e.forEach((e=>e.dispose())))),this.store.clear()}))}t(88438).makeDisposable(r),r.prototype.add=function(e){let n=e(),t=l.observable(this.mapFunc()(n));this._addKeyValue(n,t);let r=e.subscribe((e=>{t(this.mapFunc()(e)),n!==e&&(this._addKeyValue(e,t),this._delete(n,t),n=e)}));return t.dispose=()=>{this.isDisposed()||this._delete(n,t),r.dispose()},t},r.prototype.get=function(e){return this.store.get(e)},r.prototype._addKeyValue=function(e,n){this.store.has(e)?this.store.get(e).add(n):this.store.set(e,new Set([n]))},r.prototype.updateAll=function(){this.store.forEach(((e,n)=>this.updateKey(n)))},r.prototype.updateKeys=function(e){e.forEach((e=>this.updateKey(e)))},r.prototype.updateKey=function(e){this.store.has(e)&&this.store.get(e).size>0&&this.store.get(e).forEach((n=>{n(this.mapFunc()(e))}))},r.prototype._delete=function(e,n){this.store.has(e)&&this.store.get(e).size>0&&(this.store.get(e).delete(n),0===this.store.get(e).size&&this.store.delete(e))},e.exports=r},61075:(e,n,t)=>{var l=t(54156),r=t(29301);function i(){this._items={},this.count=r.observable(0)}t(88438).makeDisposable(i),i.prototype.add=function(e,n){var t=l.uniqueId(),r=this.autoDispose(e.subscribe((function(e){e?this._add(t,n):this._remove(t)}),this));return e.peek()&&this._add(t,n),{dispose:function(){this._remove(t),this.disposeDiscard(r)}.bind(this)}},i.prototype.all=function(){return l.values(this._items)},i.prototype._add=function(e,n){this._items.hasOwnProperty(e)||(this._items[e]=n,this.count(this.count()+1))},i.prototype._remove=function(e){this._items.hasOwnProperty(e)&&(delete this._items[e],this.count(this.count()-1))},e.exports=i},11527:(e,n)=>{var t=[],l="undefined"!=typeof window?window:{};function r(e){e.neededNames.forEach((function(n){e.globals[n]=l[n]}))}n.get=function(e){var n={neededNames:Array.prototype.slice.call(arguments),globals:{}};return r(n),t.push(n),n.globals},n.setGlobals=function(e){var n=l;return l=e,t.forEach((function(e){r(e)})),n}},88438:(e,n,t)=>{var l=t(29301),r=t(55723),i=t(54156),a=t(11527).get("DocumentFragment","Node");class o{constructor(...e){s(this.create,this,e)}static create(...e){return new this(...e)}}Object.assign(o.prototype,{autoDispose:function(e){return this.autoDisposeWith(m,e)},autoDisposePromise:function(e){return e.then((e=>this.isDisposed()?(m(e),null):(this.autoDispose(e),e)))},autoDisposeWith:function(e,n){var t;return(this._disposalList||(this._disposalList=[])).push({obj:n,disposer:"string"==typeof e?(t=e,function(e){e[t]()}):e}),n},autoDisposeCallback:function(e){this.autoDisposeWith(p,e)},disposeRelease:function(e){return d(this._disposalList,e),e},disposeDiscard:function(e){var n=d(this._disposalList,e);n&&n.disposer.call(this,e)},isDisposed:function(){return this._disposalList===c},dispose:function(){if(!this.isDisposed()){var e=this._disposalList;if(this._disposalList=c,e)for(var n=e.length-1;n>=0;n--){var t=e[n];f(this,t.disposer,t.obj)}"function"==typeof this.stopListening&&f(this,p,this.stopListening),function(e){for(var n in e)e.hasOwnProperty(n)&&(e[n]=c)}(this)}}}),n.Disposable=o,n.makeDisposable=function(e){Object.assign(e.prototype,o.prototype),e.create=u},n.safeCreate=function(e,n){return u.apply(e,Array.prototype.slice.call(arguments,1))};var u=function(e){var n=this,t=Object.create(n.prototype);return s(n,t,arguments)},s=function(e,n,t){try{return e.apply(n,t),n}catch(t){if(!t.printed){let l=n.constructor.name||e.name;console.error("Error constructing %s:",l,t),i.isObject(t)&&(t.printed=!0)}throw n.dispose(),t}},c=null;function d(e,n){if(e)for(var t=0;t<e.length;t++)if(e[t].obj===n){var l=e[t];return e.splice(t,1),l}return null}var p=function(e){e.call(this)};function f(e,n,t){try{n.call(e,t)}catch(n){console.error("While disposing %s, error disposing %s: %s",h(e),h(t),n)}}function h(e){return e&&e.constructor&&e.constructor.name?e.constructor.name:r.inspect(e,{depth:1})}function m(e){if(e instanceof a.Node)l.removeNode(e);else{if("function"!=typeof e.dispose)throw new Error("Object has no 'dispose' method");e.dispose()}}n.emptyNode=function(e){l.virtualElements.emptyNode(e),l.cleanNode(e)}},81294:(e,n,t)=>{var l=t(29301),r=t(11527).get("document","Node","$","window");function i(e,...n){let t;return t=e instanceof r.Node?e:a(e,o),s(t,arguments,1)}function a(e,n){let t,l,r,i=e.indexOf("."),a=e.indexOf("#");if(-1===i?i=e.length:r=e.substring(i+1).replace(/\./g," "),-1===a)t=e.substring(0,i);else{if(a>i)throw new Error('ID must come before classes in dom("'+e+'")');t=e.substring(0,a),l=e.substring(a+1,i)}let o=n(t);return l&&o.setAttribute("id",l),r&&o.setAttribute("class",r),o}function o(e){return r.document.createElement(e)}function u(e){return r.document.createElementNS("http://www.w3.org/2000/svg",e)}function s(e,n,t){for(var l=t,i=n.length;l<i;l++){var a=n[l];if(Array.isArray(a))a=s(e,a,0);else if("function"==typeof a)void 0!==(a=a(e))&&s(e,[a],0);else if(null==a);else if(a instanceof r.Node)e.appendChild(a);else if("object"==typeof a)for(var o in a)e.setAttribute(o,a[o]);else e.appendChild(r.document.createTextNode(a))}return e}function c(e,n,t){switch(t.length){case 0:return function(t){return e.call(n,t)};case 1:return function(l){return e.call(n,l,t[0])};case 2:return function(l){return e.call(n,l,t[0],t[1])};case 3:return function(l){return e.call(n,l,t[0],t[1],t[2])}}return function(l){return Array.prototype.unshift.call(t,l),e.apply(n,t)}}function d(e){return"string"==typeof e?function(n){return n.matches&&n.matches(e)}:e}i.svg=function(e,...n){let t=a(e,u);return s(t,arguments,1)},i.frag=function(e){var n=r.document.createDocumentFragment();return s(n,arguments,0)},i.fwdArgs=function(e,n){return function(t){s(t,e,n)}},i.inlinable=i.inlineable=function(e){return function(n){return n instanceof r.Node?e.apply(this,arguments):c(e,this,arguments)}},i.id=function(e){return r.document.getElementById(e)},i.hide=function(e){e.style.display="none"},i.show=function(e){e.style.display=""},i.toggle=function(e,n){return void 0===n&&(n="none"===e.style.display),e.style.display=n?"":"none","none"!==e.style.display},i.dragOverClass=i.inlinable((function(e,n){let t=0,l=null;i.on(e,"dragenter",(r=>{if(!Array.from(r.originalEvent.dataTransfer.types).includes("text/html"))return r.target!==l&&(l=r.target,r.originalEvent.dataTransfer.dropEffect="copy",t||e.classList.add(n),t++),!1})),i.on(e,"dragleave",(()=>{l=null,t=Math.max(0,t-1),t||e.classList.remove(n)})),i.on(e,"drop",(()=>{l=null,t=0,e.classList.remove(n)}))})),i.splice=function(e,n,t,l){for(var r=Math.min(n+t,e.childNodes.length),i=3;i<arguments.length;i++)null!==arguments[i]&&(n<r?(e.replaceChild(arguments[i],e.childNodes[n]),n++):n<e.childNodes.length?e.insertBefore(arguments[i],e.childNodes[n]):e.appendChild(arguments[i]));for(var a=Array.prototype.slice.call(e.childNodes,n,r);r>n;)e.removeChild(e.childNodes[--r]);return a},i.childIndex=function(e){return Array.prototype.indexOf.call(e.parentNode.childNodes,e)},i.findLastChild=function(e,n){for(var t=d(n),l=e.lastChild;l;l=l.previousSibling)if(t(l))return l;return null},i.findAncestor=function(e,n,t){2===arguments.length&&(t=n,n=null);for(var l=d(t),r=null;e;){if(!r&&l(e)&&(r=e,!n))return r;if(e===n)return r;e=e.parentNode}return null},i.detachNode=function(e){return e.parentNode&&e.parentNode.removeChild(e),e},i.on=i.inlinable((function(e,n,t,l,i){r.$(e).on(n,t,l,i)})),i.once=i.inlinable((function(e,n,t,l,i){r.$(e).one(n,t,l,i)})),i.defer=function(e,n){return function(t){setTimeout(e.bind(n,t),0)}},i.onDispose=i.inlinable((function(e,n,t){l.utils.domNodeDisposal.addDisposeCallback(e,n.bind(t))})),i.autoDispose=i.inlinable((function(e,n){l.utils.domNodeDisposal.addDisposeCallback(e,(function(){n.dispose()}))})),i.testId=i.inlinable((function(e,n){e.setAttribute("data-test-id",n)})),e.exports=i},13988:(e,n,t)=>{var l=t(29301),r=t(74392),i=t(88438),a=t(83277);function o(e){return s.create(e)}function u(e,n){e(this,n)}function s(e){this._array=l.observable(e||[]),this._preparedSpliceEvent=null,this._syncSubscription=null,this._disposeElements=c,this.autoDispose(this._array.subscribe(this._emitPreparedEvent,this,"spectate")),this.autoDisposeCallback((function(){this._disposeElements(this.peek())}))}function c(){}function d(e){return e}t(33620),e.exports=n=o,n.default=o,o.isKoArray=function(e){return e&&"function"==typeof e.subscribe&&"function"==typeof e.all},n.isKoArray=o.isKoArray,o.syncedKoArray=function(e,n,t){var l=o();return n=n||d,l.autoDispose(e.subscribeInit((function(e){o.isKoArray(e)?l.syncMap(e,n,t):e&&(l.syncMapDisable(),l.assign(e.map((function(e,l){return n.call(t,e,l)}))))}))),l},n.syncedKoArray=o.syncedKoArray,i.makeDisposable(u),o.syncedMap=function(e,n,t){var l=new Map,r=e.subscribeForEach({add:e=>l.set(e,u.create(n,e)),remove:e=>a.popFromMap(l,e).dispose(),addDelay:t&&t.addDelay});return l.dispose=()=>{r.dispose(),l.forEach(((e,n)=>e.dispose()))},l},n.KoArray=s,i.makeDisposable(s),s.prototype.setAutoDisposeValues=function(){return this._disposeElements=this._doDisposeElements,this},s.prototype.all=function(){return this._array()},s.prototype.peek=function(){return this._array.peek()},s.prototype.getObservable=function(){return this._array},Object.defineProperty(s.prototype,"peekLength",{configurable:!1,enumerable:!1,get:function(){return this._array.peek().length}}),s.prototype.at=function(e){var n=this._array();return e>=0&&e<n.length?n[e]:null},s.prototype.assign=function(e){var n=this.peek();this._prepareSpliceEvent(0,e.length,n),this._array(e.slice()),this._disposeElements(n)},s.prototype.subscribe=function(e,n,t){return this._array.subscribe(e,n,t)},s.prototype._prepareSpliceEvent=function(e,n,t){this._preparedSpliceEvent={array:null,start:e,added:n,deleted:t}},s.prototype._emitPreparedEvent=function(){var e=this._preparedSpliceEvent;e&&(e.array=this.peek(),this._preparedSpliceEvent=null,this._array.notifySubscribers(e,"spliceChange"))},s.prototype._preChange=function(){this._array.valueWillMutate()},s.prototype._postChange=function(){this._array.valueHasMutated()},s.prototype._doDisposeElements=function(e){for(var n=0;n<e.length;n++)e[n].dispose()},s.prototype.push=function(){var e=this.peek(),n=e.length;this._preChange();var t=e.push.apply(e,arguments);return this._prepareSpliceEvent(n,arguments.length,[]),this._postChange(),t},s.prototype.unshift=function(){var e=this.peek();this._preChange();var n=e.unshift.apply(e,arguments);return this._prepareSpliceEvent(0,arguments.length,[]),this._postChange(),n},s.prototype.splice=function(e,n){return this.arraySplice(e,n,Array.prototype.slice.call(arguments,2))},s.prototype.arraySplice=function(e,n,t){var l=this.peek(),r=l.length,i=Math.min(r,Math.max(0,e<0?r+e:e));this._preChange();var o=void 0===n?l.splice(e):l.splice(e,n);return a.arraySplice(l,i,t),this._prepareSpliceEvent(i,t.length,o),this._postChange(),this._disposeElements(o),o},s.prototype.slice=function(){var e=this.all();return e.slice.apply(e,arguments)},s.prototype.map=function(e,n){var t=new s;return t.syncMap(this,e,n),t},s.prototype.syncMap=function(e,n,t){this.syncMapDisable(),n=n||d,this.assign(e.peek().map((function(e,l){return n.call(t,e,l)}))),this._syncSubscription=this.autoDispose(e.subscribe((function(e){for(var l=e.array,r=[],i=e.start,a=0;a<e.added;i++,a++)r.push(n.call(t,l[i],i));this.arraySplice(e.start,e.deleted.length,r)}),this,"spliceChange"))},s.prototype.syncMapDisable=function(){this._syncSubscription&&(this.disposeDiscard(this._syncSubscription),this._syncSubscription=null)},s.prototype.subscribeForEach=function(e){var n=e.context,t=e.add||c,l=e.remove||c,i="number"==typeof e.addDelay,a=this.subscribe((function(a){var o,u=a.array;for(o=0;o<a.deleted.length;o++)l.call(n,a.deleted[o],this);var s=()=>{var e=a.start+a.added;for(o=a.start;o<e;o++)t.call(n,u[o],o,this)};i?e.addDelay>0?setTimeout(s,e.addDelay):r.resolve(null).then(s):s()}),this,"spliceChange");return this.peek().forEach((function(e,l){t.call(n,e,l,this)}),this),a},s.prototype.clampIndex=function(e){var n=this.peekLength;return 0===n?null:a.clamp(e||0,0,n-1)},s.prototype.makeLiveIndex=function(e){var n=l.observable(this.clampIndex(e)),t=!0;this.subscribe((function(e){var l=n.peek();t?null===l?n(this.clampIndex(0)):l>=e.start+e.deleted.length?n(this.clampIndex(l+e.added-e.deleted.length)):l>=e.start+e.added&&n(this.clampIndex(e.start+e.added)):n(this.clampIndex(l))}),this,"spliceChange");var r=l.pureComputed({read:n,write:function(e){n(this.clampIndex(e))},owner:this});return r.setLive=e=>{t=e},r}},92979:(e,n,t)=>{var l=t(11527).get("document","Node"),r=t(29301),i=t(81294),a=t(13988);function o(e,n,t){var l;r.isObservable(n)?(l=n.subscribe((function(n){t(e,n)})),r.utils.domNodeDisposal.addDisposeCallback(e,(function(){l.dispose()})),t(e,n.peek())):"function"==typeof n?(n=r.computed(n),l=n.subscribe((function(n){t(e,n)})),r.utils.domNodeDisposal.addDisposeCallback(e,(function(){l.dispose(),n.dispose()})),t(e,n.peek())):t(e,n)}function u(e,n){return function(t){o(t,e,n)}}n.setBinding=o,n.makeBinding=u,n.text=function(e){return function(n){var t=l.document.createTextNode("");o(n,e,(function(e,n){t.nodeValue=n})),n.appendChild(t)}},n.bootstrapToken=function(e,n){var t=e.cloneNode();return o(t,n,(function(e,n){t.textContent=n})),t},n.attr=function(e,n){return u(n,(function(n,t){null==t?n.removeAttribute(e):n.setAttribute(e,t)}))},n.boolAttr=function(e,n){return u(n,(function(n,t){t?n.setAttribute(e,""):n.removeAttribute(e)}))},n.style=function(e,n){return u(n,(function(n,t){e.startsWith("--")?n.style.setProperty(e,t):n.style[e]=t}))},n.show=function(e){return u(e,(function(e,n){e.style.display=n?"":"none"}))},n.hide=function(e){return u(e,(function(e,n){e.style.display=n?"none":""}))},n.domData=function(e,n){return u(n,(function(n,t){r.utils.domData.set(n,e,t)}))},n.value=function(e){return u(e,(function(e,n){e.value!==n&&(e.value=n)}))},n.toggleClass=function(e,n){return u(n,(function(n,t){n.classList.toggle(e,!!t)}))},n.toggleDisabled=function(e){return u(e,(function(e,n){n?e.setAttribute("disabled","disabled"):e.removeAttribute("disabled")}))},n.cssClass=function(e){var n;return u(e,(function(e,t){if(n)for(const t of n.split(" "))e.classList.remove(t);if(n=t,t)for(const n of t.split(" "))e.classList.add(n)}))};const s=Symbol();function c(e,n,t){if(null===n)return Promise.resolve();const l=r.utils.domData.get(e,"scrolly");if(l)return t?(l.scrollRowIntoView(n),e[s]=null,Promise.resolve()):(e[s]=n,new Promise(((n,t)=>{setTimeout((()=>{try{if(null===e[s])return void n();l.isDisposed()||l.scrollRowIntoView(e[s]),n()}catch(e){t(e)}finally{e[s]=null}}),0)})));{const t=e.children[n];if(t){0===n&&(e.scrollTop=0);const l=t.getBoundingClientRect(),r=e.getBoundingClientRect();l.top<r.top?t.scrollIntoView(!0):l.bottom>r.bottom&&t.scrollIntoView(!1)}}return Promise.resolve()}function d(e,n){var t,a=[];return u(e,(function(e,o){t||(t=e.appendChild(l.document.createComment("")));for(var u=i.frag(n(o)),s=0;s<a.length;s++)a[s].parentNode===e&&r.removeNode(a[s]);a.length=0;var c=t.nextSibling;e.insertBefore(u,c);for(var d=t.nextSibling;d!==c;d=d.nextSibling)a.push(d)}))}n.scrollChildIntoView=function(e){return u(e,c)},n.doScrollChildIntoView=c,n.scope=d,n.maybe=function(e,n){return d(e,(function(e){return e?n(e):null}))},n.foreach=function(e,n){var t,i=[];return function(o){t||(t=o.appendChild(l.document.createComment("")));var u=function(e){var a,u=e.start,s=i.splice(u,e.deleted.length);for(a=0;a<s.length;a++)s[a]&&s[a].parentNode===o&&r.removeNode(s[a]);if(e.added>0){var c=l.document.createDocumentFragment(),d=[u,0];for(a=0;a<e.added;a++){var p=e.array[u+a],f=n(p);f&&(r.utils.domData.set(f,"itemModel",p),c.appendChild(f)),d.push(f)}Array.prototype.splice.apply(i,d);var h=t;for(a=u-1;a>=0;a--)if(i[a]&&i[a].parentNode===o){h=i[a];break}o.insertBefore(c,h.nextSibling)}},s=e;if(a.isKoArray(e)){var c=e.subscribe(u,null,"spliceChange");r.utils.domNodeDisposal.addDisposeCallback(o,(function(){c.dispose()})),s=e.all()}else if(!Array.isArray(e))throw new Error("koDom.foreach applied to non-array: "+e);u({array:s,start:0,added:s.length,deleted:[]})}}},73783:(e,n,t)=>{var l=t(11527).get("$","window","document");const r=t(72827),i=t(52906),a=t(88466),o=t(68525);var u=t(29301),s=t(74392),c=t(83277),d=t(77709),p=t(81294),f=t(92979),h=t(13988),m=t(32529).setSaveValue;function b(e,n,t){let r=null,i=null;function a(n,t){s(),l.$(l.window).on("mouseup",o),i=e.peek(),u(t,!0)}function o(){l.$(l.window).off("mouseup",o),s(),m(e,e.peek(),i)}function u(t,l){const i=n(e.peek(),t);i!==e.peek()&&(e(i),r=setTimeout(u,l?600:100,t,!1))}function s(){r&&(clearTimeout(r),r=null)}return p("div.kf_spinner",p("div.kf_spinner_half",p("div.kf_spinner_arrow.up"),f.toggleClass("disabled",(()=>t(e(),1))),p.on("mousedown",(()=>{a(0,1)}))),p("div.kf_spinner_half",p("div.kf_spinner_arrow.down"),f.toggleClass("disabled",(()=>t(e(),-1))),p.on("mousedown",(()=>{a(0,-1)}))),p.on("dblclick",(()=>!1)))}function g(e,n,t){var r=u.utils.domData.get(e,"reorderFunc"),i=u.utils.domData.get(t.item[0],"originalPrev");r&&!t.item.prev().is(i)&&r(u.utils.domData.get(t.item[0],"model"),A(t.item)).catch((function(n){console.warn("Failed to reorder item",n),l.$(e).sortable("cancel")})),w(t.item[0])}function M(e,n){var t=u.utils.domData.get(n.item[0],"originalParent"),r=u.utils.domData.get(t[0],"removeFunc"),i=u.utils.domData.get(n.item.parent()[0],"receiveFunc");r&&i?r(u.utils.domData.get(n.item[0],"model")).then((function(e){return i(e,A(n.item)).then((function(){n.item.remove()})).catch(y.bind(null,n,t,e))})).catch((function(e){console.warn("Error removing item",e),l.$(t).sortable("cancel")})).finally((function(){w(n.item[0])})):console.warn("Missing remove or receive")}function y(e,n,t,l){console.warn("Error receiving item. Trying to return removed item.",l);var r=u.utils.domData.get(n[0],"receiveFunc");if(r){var i=u.utils.domData.get(e.item[0],"originalPrev");r(t,i.length>0?A(i):v(n.children(".kf_draggable").first())).catch((function(e){console.warn("Failed to receive item in original collection.",e)})).finally((function(){e.item.remove()}))}}function v(e){return e.length&&e.length>0?u.utils.domData.get(e[0],"model"):null}function A(e){return e.next?v(e.next(".kf_draggable")):null}function w(e){u.utils.domData.set(e,"originalPrev",null),u.utils.domData.set(e,"originalParent",null),u.utils.domData.set(e,"crossedContainers",!1)}function _(e){l.$(e).on("sortremove",(function(e,n){u.utils.domData.set(n.item[0],"crossedContainers",!0),u.utils.domData.set(n.item[0],"stopIndex",n.item.index())})),l.$(e).sortable("option","disabled")&&(u.utils.domData.get(e,"receiveFunc")||u.utils.domData.get(e,"removeFunc"))&&l.$(e).sortable("option",{disabled:!1})}function C(e,n){_(e),l.$(e).addClass(n),l.$(e).sortable("option",{connectWith:"."+n})}n.button=function(e,...n){return p("div.kf_button.flexitem",p.on("click",(function(){this.classList.contains("disabled")||e()})),n)},n.accentButton=function(e,...n){return this.button(e,{class:"kf_button flexitem accent"},n)},n.liteButton=function(e,...n){return this.button(e,{class:"kf_button flexitem lite"},n)},n.logoButton=function(e,n,t,...l){return this.button(e,{class:"kf_button kf_logo_button flexitem flexhbox"},p("div.kf_btn_logo",{style:`background-image: url(${n})`}),p("div.kf_btn_text",t),l)},n.buttonGroup=function(e){return p("div.kf_button_group.kf_elem.flexhbox",p.fwdArgs(arguments,0))},n.accentButtonGroup=function(e){return this.buttonGroup([{class:"kf_button_group kf_elem flexhbox accent"}].concat(p.fwdArgs(arguments,0)))},n.liteButtonGroup=function(e){return this.buttonGroup([{class:"kf_button_group kf_elem flexhbox lite"}].concat(p.fwdArgs(arguments,0)))},n.checkButton=function(e,n){return p("div.kf_button.kf_check_button.flexitem",f.toggleClass("active",e),p.on("click",(function(){this.classList.contains("disabled")||m(e,!e())})),p.fwdArgs(arguments,1))},n.flatCheckButton=function(e,n){return p("div.flexnone",f.toggleClass("mod-active",e),p.on("click",(function(){this.classList.contains("mod-disabled")||m(e,!e())})),p.fwdArgs(arguments,1))},n.buttonSelect=function(e,n){var t=p("div.kf_button_group.kf_elem.flexhbox",p.fwdArgs(arguments,1));return l.$(t).on("click",".kf_button:not(.disabled)",(function(){m(e,u.utils.domData.get(this,"kfOptionValue"))})),f.makeBinding(e,(function(e,n){Array.prototype.forEach.call(e.querySelectorAll(".kf_button"),(function(e,t){var l=u.utils.domData.get(e,"kfOptionValue");e.classList.toggle("active",l===n)}))}))(t),t},n.optionButton=function(e,n){return p("div.kf_button.flexitem",(function(n){u.utils.domData.set(n,"kfOptionValue",e)}),p.fwdArgs(arguments,1))},n.toolTip=function(e){return p("div.kf_tooltip",p("div.kf_tooltip_pointer"),p("div.kf_tooltip_content",p.fwdArgs(arguments,0)),p.defer((function(e){var n=e.getBoundingClientRect().width,t=e.parentNode.getBoundingClientRect();e.style.left=-n/2+t.width/2+"px",e.style.top=t.height+"px"})))},n.prompt=function(e){return p("div.kf_prompt",p("div.kf_prompt_pointer"),p("div.kf_prompt_pointer_overlap"),p("div.kf_prompt_content",p.fwdArgs(arguments,0)))},n.checkbox=function(e,n){return p("label.kf_checkbox_label.kf_elem",p("input.kf_checkbox",{type:"checkbox"},f.makeBinding(e,(function(e,n){e.checked=n})),p.on("change",(function(){m(e,this.checked)}))),p.fwdArgs(arguments,1))},n.radio=function(e,n,...t){return p("label.kf_radio_label",p("input.kf_radio",{type:"radio"},f.makeBinding(n,((n,t)=>{n.checked=t===e})),p.on("change",(function(){this.checked&&m(n,e)}))),...t)},n.spinner=function(e,n,t,l){var r=void 0!==l?l:1/0,i=void 0!==t?t:-1/0;return b(e,(function(e,t){const l=(u.unwrap(n)||1)*t;return e=e||0,e=Math.round(e/l)*l+l,e=parseFloat(e.toPrecision(15)),c.clamp(e,i,r)}),(function(e,n){return n>0?e>=r:e<=i}))},n.selectSpinner=function(e,n){return b(e,(function(e,t){const l=n.peek(),r=l.indexOf(e);return l[c.mod(r+t,l.length)]}),(function(e,t){return n().length<=1}))},n.alignmentSelector=function(e){return this.buttonSelect(e,this.optionButton("left",p("span.glyphicon.glyphicon-align-left"),p.testId("koForm_alignLeft")),this.optionButton("center",p("span.glyphicon.glyphicon-align-center"),p.testId("koForm_alignCenter")),this.optionButton("right",p("span.glyphicon.glyphicon-align-right"),p.testId("koForm_alignRight")))},n.collapserLabel=function(e,n){return p("div.kf_collapser.kf_elem",p("span.kf_triangle_toggle",f.text((function(){return e()?"►":"▼"}))),p.on("click",(function(){e(!e.peek())})),p.fwdArgs(arguments,1))},n.collapsible=function(e,n){var t=u.observable(void 0===n||n),l=e(t);return[l[0],p("div",f.hide(t),p.fwdArgs(l,1))]},n.draggableList=function(e,n,t){var a,o;i(t=t||{},{removeButton:!0,axis:"y",drag_indicator:!0,itemClass:"kf_draggable__item"}),n=n||r;var c=p("div.kf_drag_container",(function(e){t.reorder&&(a=s.method(t.reorder),u.utils.domData.set(e,"reorderFunc",a)),t.remove&&(o=s.method(t.remove),u.utils.domData.set(e,"removeFunc",o)),t.receive&&u.utils.domData.set(e,"receiveFunc",s.method(t.receive))}),f.foreach(e,(e=>{var r=n(e);return r?p("div.kf_draggable",p.on("mousedown",(()=>l.document.activeElement.blur())),f.cssClass(t.itemClass),t.drag_indicator?"boolean"==typeof t.drag_indicator?p("span.kf_drag_indicator.glyphicon.glyphicon-option-vertical"):t.drag_indicator():null,f.style("display","x"===t.axis?"inline-block":"block"),f.domData("model",e),f.maybe(void 0!==o&&t.removeButton,(function(){return p("span.drag_delete.glyphicon.glyphicon-remove",p.on("click",(function(){o(e).catch((function(e){console.warn("Failed to remove item",e)}))})))})),p("span.kf_draggable_content.flexauto",r)):null})));return l.$(c).sortable({axis:t.axis,tolerance:"pointer",forcePlaceholderSize:!0,placeholder:"kf_draggable__placeholder--"+("x"===t.axis?"horizontal":"vertical")}),void 0===a&&l.$(c).sortable("option",{disabled:!0}),l.$(c).on("sortstart",(function(e,n){u.utils.domData.set(n.item[0],"originalParent",n.item.parent()),u.utils.domData.set(n.item[0],"originalPrev",n.item.prev())})),l.$(c).on("sortstop",(function(e,n){u.utils.domData.get(n.item[0],"crossedContainers")?M.call(c,e,n):g.bind(null,c).call(this,e,n)})),c};var T=0;function S(e,n,t){var l={};n&&(n.type&&(l.type=n.type),n.maxSize&&(l.maxlength=n.maxSize,l.style="max-width: "+(n.maxSize+2)+"em"),n.placeholder&&(l.placeholder=n.placeholder));var r=n=>m(e,n.target.value),i=a(r,n.delay),o=e=>{n&&n.delay?p(e,p.on("input",i),p.on("change",(e=>{i(e),i.flush()}))):p(e,p.on("change",r))};return p("div.kf_elem",p("input.kf_text",l,f.toggleDisabled(n.disabled||!1),f.value(e),o,p.fwdArgs(arguments,2)))}function z(e,n){n.textContent=e.value;var t=n.getBoundingClientRect();e.style.width=Math.ceil(t.width)+"px"}function O(e,n,t){var r=e||u.observable(0);return l.$(t).on("click",n,(function(){r(p.childIndex(this))})),u.utils.domData.set(t,"kfSelectedTab",r),t}function E(e,n,t){return function(l){var r=p.findLastChild(l,e);if(r){var i=u.utils.domData.get(r,"kfSelectedTab"),a=r.firstChild,o=r.lastChild,s=a.childNodes.length,c=u.computed((function(){return i()===s}));f.toggleClass("active",c)(n),p.autoDispose(n,c),f.show(c)(t),a.appendChild(n),o.appendChild(t)}else console.log("koForm: Attempting to add tab without an existing tabs container")}}n.connectAllDraggables=function(e){e.length<2&&console.warn("connectAllDraggables requires at least 2 draggable components");for(var n="connected-draggable-"+T++,t=0;t<arguments.length;t++)C(arguments[t],n)},n.connectDraggableOneWay=function(e,n){e.id="connected-draggable-"+T++,n.id="connected-draggable-"+T++,_(e),_(n),l.$(e).sortable("option",{connectWith:"#"+n.id})},n.label=function(e){return p("div.kf_label.kf_elem",p.fwdArgs(arguments,0))},n.lightLabel=function(e){return p("div.kf_light_label.kf_elem",p.fwdArgs(arguments,0))},n.midTabs=function(e){return O(e,".kf_mid_tab_label",p("div.flexitem.kf_mid_tabs",p("div.flexhbox.flexnone.kf_mid_tab_labels"),n.scrollable()))},n.midTab=function(e,n){return E(".kf_mid_tabs",p("div.kf_mid_tab_label.flexitem",e),p("div.kf_mid_tab_content",p.fwdArgs(arguments,1)))},n.numText=function(e,n){var t={type:"number"};return(n=n||{}).placeholder&&(t.placeholder=n.placeholder),void 0!==n.min&&(t.min=n.min),void 0!==n.max&&(t.max=n.max),p("div.kf_elem",p("input.kf_num_text",t,f.value(e),p.on("input",(function(){m(e,Number(this.value))}))))},n.text=function(e,n,...t){return S(e,n=Object.assign({type:"text"},n||{}),t)},n.color=function(e,...n){const t=a((n=>m(e,n.target.value)),300);return p("div.kf_elem",p("input.kf_color",{type:"color"},f.value(e),p.on("change",t),...n))},n.password=function(e,n,...t){return S(e,n=Object.assign({type:"password"},n||{}),t)},n.statusPanel=function(e,t){var l={};["success","info","warning","error"].forEach((function(e){var n;t[e]&&(n=void 0!==t[e].value?t[e].value:t[e],l[n]={},l[n].className="kf_status_"+e,l[n].label=t[e].label||null)}));var r=u.pureComputed((function(){return void 0!==l[e()].label}));return p("div.kf_status_panel.flexhbox",p.autoDispose(r),p("div.kf_status_indicator.flexauto",f.cssClass((function(){if(l[e()])return l[e()].className;console.error("Status must match an available status code",Object.keys(l))})),"●"),p("div.kf_status_detail.flexauto",f.maybe(t.heading,(function(){return n.row(n.label(t.heading))})),f.maybe(r,(function(){return n.row(n.lightLabel(f.text(u.pureComputed((function(){return l[e()].label})))))}))))},n.editableLabel=function(e,n){var t,l=n||u.observable(!1),r=!1,i={cancel:function(){r=!0,l(!1)},accept:function(){r=!1,l(!1)}};return p("div.kf_editable_label",p("div.kf_elabel_text",f.text(e),f.hide(l)),t=p("div.elabel_content_measure"),n?null:p.on("click",(()=>l(!0))),f.maybe(l,(function(){var n=d.createGroup(i,this,!0);return p("input.kf_elabel_input",{type:"text"},(e=>p.hide(e)),f.value(e),p.autoDispose(n),n.attach(),p.on("blur",(function(){l(!1)})),p.on("change",(function(){l(!1)})),p.on("input",(function(){z(this,t)})),p.onDispose((n=>{r||e()===n.value||m(e,n.value)})),p.defer((function(e){r=!1,z(e,t),p.show(e),e.focus(),e.select()})))})))},n.row=function(e){for(var n=1,t=p("div.kf_row.flexhbox"),l=0;l<arguments.length;l++){var r=arguments[l];"number"==typeof r?n=r:"function"==typeof r?r(t):void 0!==r&&(("string"==typeof r||Array.isArray(r))&&(r=p("div",r)),r.style.flex=r.style.webkitFlex=n+" 1 0px",t.appendChild(r),n=1)}return t},n.helpRow=function(e){var t=n.row.apply(null,arguments);return t.classList.add("kf_help_row"),t},n.scrollable=function(e){var n,t;return[p("div.flexnone.kf_scroll_shadow_outer",t=p("div.kf_scroll_shadow",p.hide)),n=p("div.flexitem.kf_scrollable",p.on("scroll",(function(){t.style.display=n.scrollTop>0?"":"none"})),p.fwdArgs(arguments,0))]},n.select=function(e,n,t){var l=(e,n)=>{let l=new Set(t.multiple?n:[n]);for(let n of e.querySelectorAll("option"))n.selected=l.has(u.utils.domData.get(n,"value"))};return p("div.kf_elem",p("div.kf_select_arrow",p("select.kf_select",o(t=t||{},["size","multiple"]),f.toggleDisabled(t.disabled||!1),f.foreach(n,(function(e){if(!e)return null;let n="string"==typeof e?e:e.value,t="string"==typeof e?e:e.label,l="string"!=typeof e&&e.disabled;return p("option",{value:n},f.domData("value",n),f.toggleDisabled(l),f.text(t))})),f.makeBinding(h.isKoArray(n)?n.getObservable():n,(n=>l(n,e()))),f.makeBinding(e,((e,n)=>l(e,n))),p.on("change",(function(){let n=[],l=this.querySelectorAll("option");for(let e=0;e<l.length;e++)if(l[e].selected){let r=u.utils.domData.get(l[e],"value");if(n.push(r),!t.multiple)break}n.sort(),m(e,t.multiple?n:n[0])})))))},n.separator=function(){return p("hr.kf_separator")},n.topTabs=function(e){return O(e,".kf_top_tab_label",p("div.flexvbox.kf_top_tabs",p("div.flexhbox.flexnone.kf_top_tab_labels"),p("div.flexitem.kf_top_tab_container")))},n.topTab=function(e,n){return E(".kf_top_tabs",p("div.kf_top_tab_label.flexitem",e),p("div.kf_top_tab_content.flexvbox",p.fwdArgs(arguments,1)))}},33620:(e,n,t)=>{var l=t(54156),r=t(29301);n.withKoUtils=function(e){return e},r.subscribable.fn.subscribeInit=function(e,n,t){var l=this.subscribe(e,n,t);return e.call(n,this.peek()),l},r.subscribable.fn.assign=function(e){this(e)},r.subscribable.fn.modifyAssign=function(e){var n=this.peek();e(n),this(n)},r.subscribable.fn.onlyNotifyUnequal=function(){return this.equalityComparer=function(e,n){return e===n},this},r.subscribable.fn.previousOnUndefined=function(){return this.equalityComparer=function(e,n){return e===n||void 0===n},this};let i=e=>{},a=r.computed;function o(e){let n;return function(){try{return n=e.call(this)}catch(e){return console.error("ERROR in ko.computed: %s",e),i(e),n}}}function u(e,n,t){var i,a=null;function o(e){return a&&a!==e&&r.ignoreDependencies(a.dispose,a),a=e,e}"object"==typeof e?(i=e.read,t=l.clone(e)):(i=e,t=l.defaults({owner:n},t||{})),t.read=function(){return o(i.call(this))};var u=r.computed(t),s=u.dispose;return u.dispose=function(){o(null),s.call(u)},u}n.setComputedErrorHandler=function(e){i=e,r.computed=function(e,n,t){return"function"==typeof e?e=o(e):e.read=o(e.read),a(e,n,t)}},n.observableWithDefault=function(e,n,t){if("function"!=typeof n){var l=n;n=function(){return l}}return r.pureComputed({read:function(){const t=e();return"boolean"==typeof t?t:t||n.call(this)},write:function(n){e(n)},owner:t})},n.observableNumber=function(e){return r.pureComputed({read:()=>Number(e()),write:n=>{e(Number(n))}})},n.computedAutoDispose=u,n.computedBuilder=function(e,n){return u((function(){var t=e.call(n);return t?r.ignoreDependencies(t):null}),null,{pure:!1})}},32529:(e,n,t)=>{var l=t(54156),r=t(74392),i=t(20543),a=t(83277),o=t(29301),u=t(33620);function s(e,n){return e.saveOnly=function(t){return r.try((()=>n.call(this,t))).tap((()=>e.notifySubscribers(t,"save")))},e.save=function(){return this.saveOnly(this.peek())},e.setAndSave=function(e){return this(e),this.saveOnly(e)},e}function c(e,n){return e(n)}function d(e,n){return e.saveOnly(n)}function p(e){return e.update=function(e){this(l.extend(this.peek(),e))},e._props={},e.prop=function(e){return this._props[e]||(this._props[e]=function(e,n){var t=o.pureComputed({read:function(){return e()[n]},write:function(t){var l=e.peek();l[n]=t,e(l)}});return e.saveOnly&&s(t,(function(t){var r=l.clone(e.peek());return r[n]=t,e.saveOnly(r)})),t}(this,e))},e}n.addSaveInterface=s,n.savingComputed=function(e){return s(o.pureComputed({read:e.read,write:n=>e.write(c,n)}),(n=>e.write(d,n)))},n.setSaveValue=function(e,n,t){let l=void 0===t?e.peek():t;if(n!==l&&(e(n),e.save))return r.try((()=>e.save())).catch((t=>{throw console.warn("setSaveValue %s -> %s failed: %s",l,n,t),e(l),t}))},n.createField=function(e){return s(o.observable(),e)},n.fieldWithDefault=function(e,n,t){var l=u.observableWithDefault(e,n,t);return e.saveOnly&&s(l,e.saveOnly),l},n.jsonObservable=function(e,n,t){n=n||function(e){return e||{}};var l=o.pureComputed({read:function(){var l=e();return n.call(t,l?JSON.parse(l):null)},write:function(n){e(JSON.stringify(n))}});return e.saveOnly&&s(l,(function(n){return e.saveOnly(JSON.stringify(n))})),p(l)},n.objObservable=p;var f={};function h(e){var n=o.observable(f),t=e.read,l=e.save,i=o.pureComputed({read:()=>n()!==f?n():t(),write:e=>n(e!==t()?e:f)});return i.isSaved=o.pureComputed((()=>n()===f)),i.revert=function(){n(f)},l&&s(i,(e=>r.try((()=>e!==t()?l(e):null)).finally(i.revert))),i}function m(e,n,t){i(a.startsWith(e[0],"Bulk"));var r=e[2],o=e[3],u=e.slice(0);u[0]=u[0].slice(4);for(var s=u[3]=o&&l.clone(o),c=0;c<r.length;c++){if(u[2]=r[c],s)for(var d in s)s[d]=o[d][c];n.call(t,u)}}n.customValue=function(e){var n={read:()=>e()};return e.saveOnly&&(n.save=n=>e.saveOnly(n)),h(n)},n.customComputed=h,n.bulkActionExpand=m;var b={dispatchAction:function(e){console.assert(!("function"==typeof this.isDisposed&&this.isDisposed()),`Dispatching action ${e[0]} on disposed object`,this);var n=this["_process_"+e[0]];if("function"==typeof n){var t=e.slice(0);return t[0]=e,n.apply(this,t)}console.warn("Received unknown action %s",e[0])},dispatchBulk:function(e,n,t,l){m(e,this.dispatchAction,this)}};n.ActionDispatcher=b},10328:e=>{function n(e){if(this.tree=[],e>0){this.tree.length=e;for(var n=0;n<e;n++)this.tree[n]=0;this.mask=r(this.tree.length-1)}}function t(e){return e&-e}function l(e){return e&e-1}function r(e){if(0===e)return 0;for(var n=1;e>>>=1;)n<<=1;return n}function i(e){for(var n=e.length-1;n>=1;n--)e[n]-=e[n-1];return e}function a(e){for(var n=1;n<e.length;n++)e[n]+=e[n-1];return e}n.leastSignificantOne=t,n.stripLeastSignificantOne=l,n.mostSignificantOne=r,n.cumulToValues=i,n.valuesToCumul=a,n.prototype.size=function(){return this.tree.length},n.prototype.toCumulativeArray=function(){for(var e=[this.tree[0]],n=e.length=this.tree.length,t=1;t<n;t++)e[t]=this.tree[t]+e[l(t)];return e},n.prototype.toValueArray=function(){return i(this.toCumulativeArray())},n.prototype.fillFromCumulative=function(e){var n=this.tree.length=e.length;if(n>0){this.tree[0]=e[0];for(var t=1;t<n;t++)this.tree[t]=e[t]-e[l(t)];this.mask=r(this.tree.length-1)}else this.mask=0},n.prototype.fillFromValues=function(e){this.fillFromCumulative(a(e.slice()))},n.prototype.getCumulativeValue=function(e){for(var n=this.tree[0];e>0;)n+=this.tree[e],e=l(e);return n},n.prototype.getCumulativeValueRange=function(e,n){return this.getSumTo(n)-this.getSumTo(e)},n.prototype.getSumTo=function(e){return e>0?this.getCumulativeValue(e-1):0},n.prototype.getTotal=function(){return this.getCumulativeValue(this.tree.length-1)},n.prototype.getValue=function(e){var n=this.tree[e];if(e>0){var t=l(e);for(e--;e!==t;)n-=this.tree[e],e=l(e)}return n},n.prototype.addValue=function(e,n){if(0===e)this.tree[0]+=n;else for(;e<this.tree.length;)this.tree[e]+=n,e+=t(e)},n.prototype.setValue=function(e,n){this.addValue(e,n-this.getValue(e))},n.prototype.getIndex=function(e){if(0===this.tree.length||this.tree[0]>=e)return 0;for(var n=0,t=this.mask,l=this.tree[0];0!==t;){var r=n+t;r<this.tree.length&&l+this.tree[r]<e&&(n=r,l+=this.tree[n]),t>>>=1}return n+1},e.exports=n},46571:e=>{function n(e){this.maxLength=e,this._data=[],this._offset=0}Object.defineProperty(n.prototype,"length",{get:function(){return this._data.length}}),n.prototype.get=function(e){return this._data[(this._offset+e)%this.maxLength]},n.prototype.push=function(e){this._data.length<this.maxLength?this._data.push(e):(this._data[this._offset]=e,this._offset=(this._offset+1)%this.maxLength)},n.prototype.getArray=function(){return this._data.slice(this._offset).concat(this._data.slice(0,this._offset))},e.exports=n},72604:(e,n,t)=>{var l=t(13039).Buffer;const r=t(83277),{arrayToString:i,stringToArray:a}=t(18967);function o(e){this.buffer=new ArrayBuffer(e||64),this.asArray=new Uint8Array(this.buffer),this.asDataView=new DataView(this.buffer),this.startPos=0,this.endPos=0}o.arrayToString=i,o.stringToArray=a,o.prototype.size=function(){return this.endPos-this.startPos},o.prototype.reserved=function(){return this.buffer.byteLength-this.startPos},o.prototype.reserve=function(e){if(this.startPos+e>this.buffer.byteLength){var n=new Uint8Array(this.buffer,this.startPos,this.size());if(e>this.buffer.byteLength){var t=Math.max(e,2*this.buffer.byteLength);this.buffer=new ArrayBuffer(t),this.asArray=new Uint8Array(this.buffer),this.asDataView=new DataView(this.buffer)}this.asArray.set(n),this.endPos=this.size(),this.startPos=0}},o.prototype.clear=function(){this.startPos=this.endPos=0,this.buffer.byteLength>=262144&&(this.buffer=new ArrayBuffer(64),this.asArray=new Uint8Array(this.buffer),this.asDataView=new DataView(this.buffer))},o.prototype.asByteArray=function(){return new Uint8Array(this.buffer,this.startPos,this.size())},o.prototype.toString=function(){return i(this.asByteArray())};let u=r.cloneFunc(r.arrayCopyForward);if(o.prototype.writeByteArray=function(e){this.reserve(this.size()+e.length),u(this.asArray,this.endPos,e,0,e.length),this.endPos+=e.length},"undefined"!=typeof TextDecoder)o.prototype.writeString=function(e){this.writeByteArray(a(e))};else{var s=l.alloc(4096);o.prototype.writeString=function(e){this.reserve(this.size()+e.length);for(var n=0;n<e.length;n+=1024){var t=s.write(e.slice(n,n+1024));this.reserve(this.size()+t),u(this.asArray,this.endPos,s,0,t),this.endPos+=t}}}function c(e,n,t){var l=DataView.prototype["set"+e];return function(e){this.reserve(this.size()+n),l.call(this.asDataView,this.endPos,e,t),this.endPos+=n}}function d(e){this.mbuf=e,this.pos=e.startPos}if(o.prototype.writeInt8=c("Int8",1),o.prototype.writeUint8=c("Uint8",1),o.prototype.writeInt16LE=c("Int16",2,!0),o.prototype.writeInt16BE=c("Int16",2,!1),o.prototype.writeUint16LE=c("Uint16",2,!0),o.prototype.writeUint16BE=c("Uint16",2,!1),o.prototype.writeInt32LE=c("Int32",4,!0),o.prototype.writeInt32BE=c("Int32",4,!1),o.prototype.writeUint32LE=c("Uint32",4,!0),o.prototype.writeUint32BE=c("Uint32",4,!1),o.prototype.writeFloat32LE=c("Float32",4,!0),o.prototype.writeFloat32BE=c("Float32",4,!1),o.prototype.writeFloat64LE=c("Float64",8,!0),o.prototype.writeFloat64BE=c("Float64",8,!1),o.prototype.makeConsumer=function(){return new d(this)},o.prototype.consume=function(e){this.startPos=e.pos,0===this.size()&&(this.clear(),e.pos=this.startPos)},d.prototype._consume=function(e){var n=this.pos;if(this.pos+e>this.mbuf.endPos){var t=new RangeError("MemBuffer: read past end");throw t.needMoreData=!0,t.consumedData=this.pos-this.mbuf.startPos,t}return this.pos+=e,n},o.prototype.readByteArraySlice=function(e,n){return new Uint8Array(this.buffer,e._consume(n),n)},o.prototype.readByteArray=function(e,n){return new Uint8Array(this.readByteArraySlice(e,n))},o.prototype.readBuffer=function(e,n){return l.from(this.readByteArraySlice(e,n))},"undefined"!=typeof TextDecoder)o.prototype.readString=function(e,n){return i(this.readByteArraySlice(e,n))};else{var p=l.alloc(1024);o.prototype.readString=function(e,n){var t=e._consume(n);return n<=p.length?(r.arrayCopyForward(p,0,this.asArray,t,n),p.toString("utf8",0,n)):l.from(new Uint8Array(this.buffer,t,n)).toString()}}function f(e,n,t){var l=DataView.prototype["get"+e];return function(e){return l.call(this.asDataView,e._consume(n),t)}}o.prototype.readInt8=f("Int8",1),o.prototype.readUint8=f("Uint8",1),o.prototype.readInt16LE=f("Int16",2,!0),o.prototype.readUint16LE=f("Uint16",2,!0),o.prototype.readInt16BE=f("Int16",2,!1),o.prototype.readUint16BE=f("Uint16",2,!1),o.prototype.readInt32LE=f("Int32",4,!0),o.prototype.readUint32LE=f("Uint32",4,!0),o.prototype.readInt32BE=f("Int32",4,!1),o.prototype.readUint32BE=f("Uint32",4,!1),o.prototype.readFloat32LE=f("Float32",4,!0),o.prototype.readFloat32BE=f("Float32",4,!1),o.prototype.readFloat64LE=f("Float64",8,!0),o.prototype.readFloat64BE=f("Float64",8,!1),e.exports=o},79118:(e,n,t)=>{var l=t(36436).assert,r=t(74392),i=t(11527);function a(e,n,t){var i;return l(e.querySelectorAll,"Must provide a DOMElement or HTMLElement"),t=t||1,new r((function(l,r){i=setInterval((function(){var r=e.querySelectorAll(n);r.length>=t&&(clearInterval(i),l(r))}),50)})).timeout(1e3).catch((function(e){throw clearInterval(i),new Error("couldn't find selector: "+n)}))}n.setTmpMochaGlobals=function(){if("undefined"!=typeof window)return;const{JSDOM:e}=t(93102);var n;before((function(){const l=new e("<!doctype html><html></html>"),r=t(19567);l.window.$=r(l.window),n=i.setGlobals(l.window)})),after((function(){i.setGlobals(n)}))},n.waitForSelectorAll=a,n.waitForSelector=function(e,n){return a(e,n,1).then((function(e){return e[0]}))},n.querySelectorLast=function(e,n){var t=e.querySelectorAll(n);return t&&t[t.length-1]},n.appCommWaiter=function(e){return function(n,t){return r.resolve(e.comm.waitForActiveRequests()).timeout(n||250).delay(t||100)}},n.waitForChange=function(e,n){var t;return new r((function(n,l){t=e.subscribe((function(e){console.warn("observable changed: "+e.toString()),n(e)}))})).timeout(n).finally((function(){t.dispose()}))}},6817:(e,n,t)=>{var l=t(36436).assert,r=t(79118),i=t(81294),a=t(87346);describe("Layout",(function(){var e;r.setTmpMochaGlobals();var n={children:[{children:[{children:[{leaf:1},{leaf:2}]},{children:[{children:[{leaf:3},{leaf:4}]},{leaf:5}]}]},{leaf:6}]};function t(e){return i("div.layout_leaf_test","#"+e)}function o(e){return Array.prototype.slice.call(e.classList,0).sort()}beforeEach((function(){e=a.Layout.create(n,t)})),afterEach((function(){e.dispose(),e=null})),it("should generate same layout spec as it was built with",(function(){l.deepEqual(e.getLayoutSpec(),n),l.deepEqual(e.getAllLeafIds().sort(),[1,2,3,4,5,6])})),it("should generate nested DOM structure",(function(){var n=e.rootElem.querySelector(".layout_box");l(n),l.strictEqual(n,e.rootBox().dom),l.deepEqual(o(n),["layout_box","layout_last_child","layout_vbox"]);var t=n.children;l.equal(t.length,2),l.equal(t[0].children.length,2),l.deepEqual(o(t[0]),["layout_box","layout_hbox"]),l.deepEqual(o(t[0].children[0]),["layout_box","layout_vbox"]),l.deepEqual(o(t[0].children[1]),["layout_box","layout_last_child","layout_vbox"]),l.equal(t[1].children.length,1),l.includeMembers(o(t[1]),["layout_box","layout_hbox","layout_last_child","layout_leaf"])})),it("should correctly handle removing boxes",(function(){e.getLeafBox(4).removeFromParent(),e.getLeafBox(1).removeFromParent(),l.deepEqual(e.getAllLeafIds().sort(),[2,3,5,6]),l.deepEqual(e.getLayoutSpec(),{children:[{children:[{leaf:2},{children:[{leaf:3},{leaf:5}]}]},{leaf:6}]}),e.getLeafBox(6).removeFromParent(),l.deepEqual(e.getLayoutSpec(),{children:[{children:[{leaf:2},{children:[{leaf:3},{leaf:5}]}]}]}),l.deepEqual(e.getAllLeafIds().sort(),[2,3,5]),e.getLeafBox(2).removeFromParent(),l.deepEqual(e.getLayoutSpec(),{children:[{leaf:3},{leaf:5}]}),e.getLeafBox(3).removeFromParent(),l.deepEqual(e.getLayoutSpec(),{leaf:5}),l.deepEqual(e.getAllLeafIds().sort(),[5])})),it("should correctly handle adding child and sibling boxes",(function(){function r(n){return e.buildLayoutBox({leaf:n})}e=a.Layout.create({leaf:1},t),l.deepEqual(e.getLayoutSpec(),{leaf:1}),l.deepEqual(e.getAllLeafIds().sort(),[1]),l.strictEqual(e.rootBox(),e.getLeafBox(1)),e.getLeafBox(1).addSibling(r(5),!0),l.deepEqual(e.getLayoutSpec(),{children:[{children:[{leaf:1},{leaf:5}]}]}),l.notStrictEqual(e.rootBox(),e.getLeafBox(1)),e.rootBox().addSibling(r("foo"),!0),l.deepEqual(e.getLayoutSpec(),{children:[{children:[{leaf:1},{leaf:5},{leaf:"foo"}]}]}),l.deepEqual(e.getAllLeafIds().sort(),[1,5,"foo"]),e.getLeafBox("foo").dispose(),l.deepEqual(e.getAllLeafIds().sort(),[1,5]),e.getLeafBox(1).parentBox().addSibling(r(6),!0),e.getLeafBox(5).addChild(r(3),!1),e.getLeafBox(3).addChild(r(4),!0),e.getLeafBox(1).addChild(r(2),!0),l.deepEqual(e.getLayoutSpec(),n),l.deepEqual(e.getAllLeafIds().sort(),[1,2,3,4,5,6])}))}))},15481:(e,n,t)=>{var l=t(54156),r=t(85828),i=t(36436).assert,a=t(29301),o=t(50733),u=t(77709),s=t(79118);describe("commands",(function(){s.setTmpMochaGlobals(),before((function(){r.stub(o,"bind"),r.stub(o,"unbind")})),after((function(){o.bind.restore(),o.unbind.restore()})),beforeEach((function(){u.init([{group:"Foo",commands:[{name:"cmd1",keys:["Ctrl+a","Ctrl+b"],desc:"Command 1"},{name:"cmd2",keys:["Ctrl+c"],desc:"Command 2"},{name:"cmd3",keys:["Ctrl+a"],desc:"Command 1B"}]}])})),describe("activate",(function(){function e(e){var n={};return l.each(e,(function(e,t){l.each(e,(function(e,l){n[t+":"+l]=e.callCount}))})),n}function n(n,t,r){var a=e(n);"string"==typeof t?u.allCommands[t].run():null===t||t();var o,s,c=e(n);i.deepEqual((o=a,s=c,l.chain(s).mapObject((function(e,n){return e-o[n]})).pick((function(e,n){return e>0})).value()),r)}function t(e){function n(n){return Array.isArray(n[0])?l.contains(n[0],e):n[0]===e}var t=l.findLastIndex(o.bind.args,n),r=l.findLastIndex(o.unbind.args,n);return t<0?null:r<0?o.bind.args[t][1]:o.bind.getCall(t).calledBefore(o.unbind.getCall(r))?null:o.bind.args[t][1]}it("should invoke Mousetrap.bind/unbind",(function(){var e={},n=r.spy(),t=u.createGroup({cmd1:n},e,!0);r.assert.callCount(o.bind,2),r.assert.calledWith(o.bind,"ctrl+a"),r.assert.calledWith(o.bind,"ctrl+b"),o.bind.reset(),o.unbind.reset(),u.allCommands.cmd1.run(),r.assert.callCount(n,1),r.assert.calledOn(n,e),t.activate(!1),r.assert.callCount(o.bind,0),r.assert.callCount(o.unbind,2),r.assert.calledWith(o.unbind,"ctrl+a"),r.assert.calledWith(o.unbind,"ctrl+b"),o.bind.reset(),o.unbind.reset(),u.allCommands.cmd1.run(),r.assert.callCount(n,1),t.activate(!0),r.assert.callCount(o.bind,2),r.assert.calledWith(o.bind,"ctrl+a"),r.assert.calledWith(o.bind,"ctrl+b"),r.assert.callCount(o.unbind,0),u.allCommands.cmd1.run(),r.assert.callCount(n,2),t.dispose(),r.assert.callCount(o.unbind,2),r.assert.calledWith(o.unbind,"ctrl+a"),r.assert.calledWith(o.unbind,"ctrl+b"),u.allCommands.cmd1.run(),r.assert.callCount(n,2)})),it("should respect order of CommandGroups",(function(){var e={group1:{cmd1:r.spy(),cmd3:r.spy()},group2:{cmd1:r.spy(),cmd2:r.spy()},group3:{cmd3:r.spy()}},t=u.createGroup(e.group1,null,!0),l=u.createGroup(e.group2,null,!0),i=u.createGroup(e.group3,null,!1);n(e,"cmd1",{"group2:cmd1":1}),n(e,"cmd2",{"group2:cmd2":1}),n(e,"cmd3",{"group1:cmd3":1}),l.activate(!1),n(e,"cmd1",{"group1:cmd1":1}),n(e,"cmd2",{}),n(e,"cmd3",{"group1:cmd3":1}),i.activate(!0),t.activate(!1),n(e,"cmd1",{}),n(e,"cmd2",{}),n(e,"cmd3",{"group3:cmd3":1}),l.activate(!0),n(e,"cmd1",{"group2:cmd1":1}),n(e,"cmd2",{"group2:cmd2":1}),n(e,"cmd3",{"group3:cmd3":1})})),it("should allow use of observable for activation flag",(function(){var e={groupFoo:{cmd1:r.spy()}},t=a.observable(!1);u.createGroup(e.groupFoo,null,t),n(e,"cmd1",{}),t(!0),n(e,"cmd1",{"groupFoo:cmd1":1}),n(e,"cmd1",{"groupFoo:cmd1":1}),t(!1),n(e,"cmd1",{})})),it("should allow same keys used for different commands",(function(){o.bind.reset(),o.unbind.reset();var e={group1:{cmd1:r.spy()},group3:{cmd3:r.spy()}},l=u.createGroup(e.group1,null,!0),i=u.createGroup(e.group3,null,!0);n(e,t("ctrl+a"),{"group3:cmd3":1}),n(e,t("ctrl+b"),{"group1:cmd1":1}),i.activate(!1),n(e,t("ctrl+a"),{"group1:cmd1":1}),n(e,t("ctrl+b"),{"group1:cmd1":1}),l.activate(!1),n(e,t("ctrl+a"),{}),n(e,t("ctrl+b"),{}),i.activate(!0),n(e,t("ctrl+a"),{"group3:cmd3":1}),n(e,t("ctrl+b"),{})}))}))}))},27726:(e,n,t)=>{var l=t(81294),r=t(92979),i=t(73783),a=t(87346),o=t(29255);n.createTestTab=function(){return i.topTab("Layout",i.label("Layout Editor"))};var u={children:[{children:[{children:[{leaf:1},{leaf:2},{leaf:7},{leaf:8}]},{children:[{children:[{leaf:3},{leaf:4},{leaf:9},{leaf:10}]},{leaf:5}]}]},{leaf:6}]};function s(e){var n=e.children?Math.max.apply(Math,e.children.map(s)):-1/0;return Math.max(n,e.leaf||-1/0)}function c(e){return l("div.layout_leaf_test","#"+e,r.toggleClass("layout_leaf_test_big",e%2==0))}n.createTestPane=function(){var e=a.Layout.create(u,c),n=o.LayoutEditor.create(e),t=s(u);return l("div",l.autoDispose(n),l.autoDispose(e),l("div",l("div.layout_new.pull-left","+ Add New",l.on("mousedown",(function(e){return n.dragInNewBox(e,++t),!1}))),l("div.layout_trash.pull-right",l("span.glyphicon.glyphicon-trash")),l("div.clearfix")),e.rootElem)}},32777:(e,n,t)=>{const l=t(36436).assert,r=t(29301),i=t(79118),a=t(68914);describe("ObservableMap",(function(){let e,n,t,o,u,s,c,d;i.setTmpMochaGlobals(),before((function(){e=r.observable(2),o=0,n=r.computed((()=>{let n=e();return function(e){return e*n+o}})),t=a.create(n)})),it("should keep track of items and update values on key updates",(function(){u=r.observable(1),s=r.observable(2),l.isUndefined(t.get(1)),l.isUndefined(t.get(2)),c=t.add(u),d=t.add(s),l.equal(t.get(1).size,1),l.equal(t.get(2).size,1),l.equal(c(),2),l.equal(d(),4),u(2),l.isUndefined(t.get(1)),l.equal(t.get(2).size,2),l.equal(c(),4),l.equal(d(),4)})),it("should update all values if mapping function is updated",(function(){l.equal(c(),4),l.equal(d(),4),e(3),l.equal(c(),6),l.equal(d(),6),u(4),s(5),l.equal(c(),12),l.equal(d(),15)})),it("updateKeys should update values for that key, but not other values",(function(){o=7,t.updateKeys([4]),l.equal(c(),19),l.equal(d(),15)})),it("updateAll should update all values for all keys",(function(){o=8,t.updateAll(),l.equal(c(),20),l.equal(d(),23)})),it("should remove items when they are disposed",(function(){let e=r.observable(6),n=r.observable(6);l.isUndefined(t.get(6));let i=t.add(e),a=t.add(n);l(t.get(6).has(i)),l(t.get(6).has(a)),l.equal(t.get(6).size,2),i.dispose(),l.isFalse(t.get(6).has(i)),l.equal(t.get(6).size,1),a.dispose(),l.isUndefined(t.get(6))})),it("should unsubscribe from observables on disposal",(function(){l.equal(c(),20),l.equal(d(),23),t.dispose(),u(10),s(11),e(3),l.equal(c(),20),l.equal(d(),23)}))}))},20003:(e,n,t)=>{var l=t(36436).assert,r=t(29301),i=t(79118),a=t(61075);describe("ObservableSet",(function(){i.setTmpMochaGlobals(),it("should keep track of items",(function(){var e=a.create();l.equal(e.count(),0),l.deepEqual(e.all(),[]);var n=r.observable(!0),t={foo:5},i=r.observable(!1),o={foo:17},u=e.add(n,t),s=e.add(i,o);l.equal(e.count(),1),l.deepEqual(e.all(),[t]),n(!1),l.equal(e.count(),0),l.deepEqual(e.all(),[]),i(!0),l.equal(e.count(),1),l.deepEqual(e.all(),[o]),n(!0),l.equal(e.count(),2),l.deepEqual(e.all(),[t,o]),u.dispose(),l.equal(e.count(),1),l.deepEqual(e.all(),[o]),l.equal(n.getSubscriptionsCount(),0),l.equal(i.getSubscriptionsCount(),1),s.dispose(),l.equal(e.count(),0),l.deepEqual(e.all(),[]),l.equal(n.getSubscriptionsCount(),0),l.equal(i.getSubscriptionsCount(),0)}))}))},10815:(e,n,t)=>{var l=t(88438),r=t(74392),{assert:i}=t(36436),a=t(85828),o=t(79118),u=t(81294);t(36436).config.truncateThreshold=1e4,describe("dispose",(function(){function e(){this.dispose=a.spy(),this.destroy=a.spy()}o.setTmpMochaGlobals(),describe("Disposable",(function(){it("should dispose objects passed to autoDispose",(function(){var n=new e,t=new e,r=u("div",u("span")),o=u("div",u("span")),s=a.spy(),c=a.spy();function d(){this.bar=this.autoDispose(n),this.baz=this.autoDisposeWith("destroy",t),this.child1=this.autoDispose(r.appendChild(u("div"))),this.child2=o.appendChild(u("div")),this.autoDisposeWith(l.emptyNode,o),this.autoDisposeCallback(s),this.stopListening=c}l.makeDisposable(d);var p=new d;i(!p.isDisposed()),i.equal(r.children.length,2),i.equal(o.children.length,2),p.dispose(),i(p.isDisposed()),i.equal(n.dispose.callCount,1),i.equal(n.destroy.callCount,0),i.equal(t.dispose.callCount,0),i.equal(t.destroy.callCount,1),i.equal(c.callCount,1),i(n.dispose.calledOn(n)),i(n.dispose.calledWithExactly()),i(t.destroy.calledOn(t)),i(t.destroy.calledWithExactly()),i(s.calledOn(p)),i(s.calledWithExactly()),i(s.calledBefore(t.destroy)),i(t.destroy.calledBefore(n.dispose)),i(n.dispose.calledBefore(c)),i.equal(r.children.length,1),i.equal(o.children.length,0)})),it("should call multiple registered autoDisposeCallbacks in reverse order",(function(){let e=a.spy();function n(){this.autoDisposeCallback((()=>{e(1)})),this.autoDisposeCallback((()=>{e(2)}))}l.makeDisposable(n);var t=new n(e);t.autoDisposeCallback((()=>{e(3)})),t.dispose(),i(t.isDisposed()),i.equal(e.callCount,3),i.deepEqual(e.firstCall.args,[3]),i.deepEqual(e.secondCall.args,[2]),i.deepEqual(e.thirdCall.args,[1])}))})),describe("create",(function(){const n=[],t=console.error;before((function(){console.error=(...e)=>n.push(e.map((e=>""+e)))})),after((function(){console.error=t})),it("should dispose partially constructed objects",(function(){var t,r=new e,a=new e;function o(e){if(0===e)throw new Error("test-error1");if(this.bar=this.autoDispose(r),1===e)throw new Error("test-error2");if(this.baz=this.autoDispose(a),2===e)throw new Error("test-error3")}l.makeDisposable(o),i.throws((function(){t=o.create(0)}),/test-error1/),i.strictEqual(t,void 0),i.equal(r.dispose.callCount,0),i.equal(a.dispose.callCount,0),i.throws((function(){t=o.create(1)}),/test-error2/),i.strictEqual(t,void 0),i.equal(r.dispose.callCount,1),i.equal(a.dispose.callCount,0),r.dispose.resetHistory(),i.throws((function(){t=o.create(2)}),/test-error3/),i.strictEqual(t,void 0),i.equal(r.dispose.callCount,1),i.equal(a.dispose.callCount,1),i(a.dispose.calledBefore(r.dispose)),r.dispose.resetHistory(),a.dispose.resetHistory(),i.doesNotThrow((function(){t=o.create(3)})),i(!t.isDisposed()),i.equal(r.dispose.callCount,0),i.equal(a.dispose.callCount,0),t.dispose(),i(t.isDisposed()),i.equal(r.dispose.callCount,1),i.equal(a.dispose.callCount,1),i(a.dispose.calledBefore(r.dispose));const u=n[0][1];i("Foo"===u||"o"===u),i.deepEqual(n[0],["Error constructing %s:",u,"Error: test-error1"]),i.deepEqual(n[1],["Error constructing %s:",u,"Error: test-error2"]),i.deepEqual(n[2],["Error constructing %s:",u,"Error: test-error3"]),i.equal(n.length,3)})),it("promised objects should resolve during normal creation",(function(){const n=new e;n.marker=1;const t=r.Promise.resolve(n);function a(){this.bar=this.autoDisposePromise(t)}return l.makeDisposable(a),a.create().bar.then((e=>{i.ok(e.marker)}))})),it("promised objects should resolve to null if owner is disposed",(function(){let n;const t=new r.Promise((e=>n=e));function a(){this.bar=this.autoDisposePromise(t)}l.makeDisposable(a);const o=a.create(),u=o.bar;o.dispose(),i(o.isDisposed),i(null===o.bar);const s=new e;return n(s),u.then((e=>{i.isNull(e)}))}))}))}))},18892:(e,n,t)=>{var l=t(36436).assert,r=t(85828),i=t(74392),a=t(29301),o=t(81294),u=t(79118),s=t(11527).get("DocumentFragment"),c=t(42976);describe("dom",(function(){u.setTmpMochaGlobals(),describe("dom construction",(function(){it("should create elements with the right tag name, class and ID",(function(){var e=o("div","Hello world");l.equal(e.tagName,"DIV"),l(!e.className),l(!e.id),l.equal(e.textContent,"Hello world"),e=o("span#foo.bar.baz","Hello world"),l.equal(e.tagName,"SPAN"),l.equal(e.className,"bar baz"),l.equal(e.id,"foo"),l.equal(e.textContent,"Hello world")})),it("should set attributes",(function(){var e=o("a",{title:"foo",id:"bar"});l.equal(e.title,"foo"),l.equal(e.id,"bar")})),it("should set children",(function(){var e=o("div","foo",o("a#a"),[o("a#b"),"bar",o("a#c")],o.frag(o("a#d"),"baz",o("a#e")));l.equal(e.childNodes.length,8),l.equal(e.childNodes[0].data,"foo"),l.equal(e.childNodes[1].id,"a"),l.equal(e.childNodes[2].id,"b"),l.equal(e.childNodes[3].data,"bar"),l.equal(e.childNodes[4].id,"c"),l.equal(e.childNodes[5].id,"d"),l.equal(e.childNodes[6].data,"baz"),l.equal(e.childNodes[7].id,"e")})),it("should flatten nested arrays and arrays returned from functions",(function(){var e=o("ul",["apple","orange",["banana","mango"]].map((function(e,n){return o("li",e)})),[o("li","pear"),[o("li","peach"),o("li","cranberry")],o("li","date")]);l.equal(e.outerHTML,"<ul><li>apple</li><li>orange</li><li>bananamango</li><li>pear</li><li>peach</li><li>cranberry</li><li>date</li></ul>"),e=o("ul",(function(e){return[o("li","plum"),o("li","pomegranate")]}),(function(e){return function(e){return[o("li","strawberry"),o("li","blueberry")]}})),l.equal(e.outerHTML,"<ul><li>plum</li><li>pomegranate</li><li>strawberry</li><li>blueberry</li></ul>")})),it("should append append values returned from functions except undefined",(function(){var e=o("div",(function(e){return e.classList.add("yogurt"),o("div","sneakers")}),o("span","melon"));l.equal(e.classList[0],"yogurt","function shold have applied new class to outer div"),l.equal(e.childNodes.length,2),l.equal(e.childNodes[0].innerHTML,"sneakers"),l.equal(e.childNodes[1].innerHTML,"melon"),e=o("div",(function(e){})),l.equal(e.childNodes.length,0,"undefined returned from a function should not be added to the DOM tree")})),it("should not append nulls",(function(){var e=o("div",["hello",null,"world",null,"jazz"],"hands",null);l.equal(e.childNodes.length,4,"undefined returned from a function should not be added to the DOM tree"),l.equal(e.childNodes[0].data,"hello"),l.equal(e.childNodes[1].data,"world"),l.equal(e.childNodes[2].data,"jazz"),l.equal(e.childNodes[3].data,"hands")}))})),c.timing.describe("dom",(function(){var e,n;before((function(){n=o("bar")})),c.timing.it(40,"should be fast",(function(){e=c.repeat(100,(function(){return o("div#id1.class1.class2",{disabled:"disabled"},"foo",n,["hello","world"],(function(e){return"test"}))}))})),c.timing.it(40,"should be fast",(function(){c.repeat(100,(function(){o("div#id1.class1.class2.class3"),o("div#id1.class1.class2.class3"),o("div#id1.class1.class2.class3"),o("div#id1.class1.class2.class3"),o("div#id1.class1.class2.class3")}))})),after((function(){l.equal(e.getAttribute("disabled"),"disabled"),l.equal(e.tagName,"DIV"),l.equal(e.className,"class1 class2"),l.equal(e.childNodes.length,5),l.equal(e.childNodes[0].data,"foo"),l.equal(e.childNodes[1],n),l.equal(e.childNodes[2].data,"hello"),l.equal(e.childNodes[3].data,"world"),l.equal(e.childNodes[4].data,"test")}))})),describe("dom.frag",(function(){it("should create DocumentFragments",(function(){var e=o.frag(["hello","world"]);l(e instanceof s.DocumentFragment),l.equal(e.childNodes.length,2),l.equal(e.childNodes[0].data,"hello"),l.equal(e.childNodes[1].data,"world");var n=o.frag("hello","world");l(n instanceof s.DocumentFragment),l.equal(n.childNodes.length,2),l.equal(n.childNodes[0].data,"hello"),l.equal(n.childNodes[1].data,"world");var t=o.frag(o("div"),[o("span"),"hello"],"world");l.equal(t.childNodes.length,4),l.equal(t.childNodes[0].tagName,"DIV"),l.equal(t.childNodes[1].tagName,"SPAN"),l.equal(t.childNodes[2].data,"hello"),l.equal(t.childNodes[3].data,"world")}))})),describe("inlineable",(function(){it("should return a function suitable for use as dom argument",(function(){var e={a:1},n=o("span"),t={c:1},i=r.stub().returns(t),a=o.inlineable(i);a.call(e,n,t,1,"asdf"),r.assert.calledOnce(i),r.assert.calledOn(i,e),r.assert.calledWithExactly(i,n,t,1,"asdf"),l.strictEqual(i.returnValues[0],t),i.reset(),i.returns(t);var u=a.call(e,t,1,"asdf");r.assert.notCalled(i),l.equal(typeof u,"function"),l.deepEqual(i.returnValues,[]);let s=u(n);r.assert.calledOnce(i),r.assert.calledOn(i,e),r.assert.calledWithExactly(i,n,t,1,"asdf"),l.deepEqual(s,t),l.strictEqual(i.returnValues[0],t)}))})),c.timing.describe("dom.inlinable",(function(){var e,n,t,i,a=0;before((function(){e=o("span"),n=r.stub(),t=o.inlinable((function(e,n,t){a++})),i=o.inlinable(n)})),c.timing.it(25,"should be fast",(function(){c.repeat(1e4,(function(){t(1,"asdf")(e),t(1,"asdf")(e),t(1,"asdf")(e),t(1,"asdf")(e),t(1,"asdf")(e)})),i()(e),i(1)(e),i(1,"asdf")(e),i(1,"asdf",56)(e),i(1,"asdf",56,"hello")(e)})),after((function(){l.equal(a,5e4),r.assert.callCount(n,5),l.deepEqual(n.args[0],[e]),l.deepEqual(n.args[1],[e,1]),l.deepEqual(n.args[2],[e,1,"asdf"]),l.deepEqual(n.args[3],[e,1,"asdf",56]),l.deepEqual(n.args[4],[e,1,"asdf",56,"hello"])}))})),describe("dom.defer",(function(){it("should call supplied function after the current call stack",(function(){var e,n,t={},a=r.spy(),u=r.spy();return o("div",n=o("span",o.defer(a,t)),e=o("div",u)),r.assert.calledOnce(u),r.assert.calledWithExactly(u,e),r.assert.notCalled(a),i.delay(0).then((function(){r.assert.calledOnce(u),r.assert.calledOnce(a),l(u.calledBefore(a)),r.assert.calledOn(a,t),r.assert.calledWithExactly(a,n)}))}))})),describe("dom.onDispose",(function(){it("should call supplied function when an element is cleaned up",(function(){var e,n,t={},l=r.spy(),i=r.spy();e=o("div",n=o("span",o.onDispose(l,t)),o.onDispose(i)),r.assert.notCalled(l),r.assert.notCalled(i),a.virtualElements.emptyNode(e),r.assert.notCalled(i),r.assert.calledOnce(l),r.assert.calledOn(l,t),r.assert.calledWithExactly(l,n),a.removeNode(e),r.assert.calledOnce(l),r.assert.calledOnce(i),r.assert.calledOn(i,void 0),r.assert.calledWithExactly(i,e)}))})),describe("dom.autoDispose",(function(){it("should call dispose the supplied value when an element is cleaned up",(function(){var e={dispose:r.spy()},n=o("div",o.autoDispose(e));a.cleanNode(n),r.assert.calledOnce(e.dispose),r.assert.calledOn(e.dispose,e),r.assert.calledWithExactly(e.dispose)}))})),describe("dom.findLastChild",(function(){it("should return last matching child",(function(){var e=o("div",o("div.a.b"),o("div.b.c"),o("div.c.d"));l.equal(o.findLastChild(e,".b").className,"b c"),l.equal(o.findLastChild(e,".f"),null),l.equal(o.findLastChild(e,".c.d").className,"c d"),l.equal(o.findLastChild(e,".b.a").className,"a b"),l.equal(o.findLastChild(e,(function(e){return 2===e.classList.length})).className,"c d")}))})),describe("dom.findAncestor",(function(){var e,n,t,r;function i(e,n){l(e===n,"Expected "+e+" to be "+n)}function a(e){return 2===e.classList.length}before((function(){e=o("div.foo.bar",n=o("div.foo",t=o("div.baz")),r=o("div.foo.bar2"))})),it("should return the child itself if it matches",(function(){i(o.findAncestor(t,null,".baz"),t),i(o.findAncestor(t,t,".baz"),t)})),it("should stop at the nearest match",(function(){i(o.findAncestor(t,null,".foo"),n),i(o.findAncestor(t,e,".foo"),n),i(o.findAncestor(t,n,".foo"),n),i(o.findAncestor(t,t,".foo"),null)})),it("should not go past container",(function(){i(o.findAncestor(t,null,".bar"),e),i(o.findAncestor(t,e,".bar"),e),i(o.findAncestor(t,n,".bar"),null),i(o.findAncestor(t,t,".bar"),null)})),it("should fail if child is outside of container",(function(){i(o.findAncestor(t,r,".foo"),null),i(o.findAncestor(n,t,".foo"),null)})),it("should return null for no matches",(function(){i(o.findAncestor(t,null,".blah"),null),i(o.findAncestor(t,e,".blah"),null),i(o.findAncestor(t,n,".blah"),null),i(o.findAncestor(t,t,".blah"),null)})),it("should handle a custom filter function",(function(){i(o.findAncestor(t,null,a),e),i(o.findAncestor(t,e,a),e),i(o.findAncestor(t,n,a),null),i(o.findAncestor(t,t,a),null),i(o.findAncestor(t,r,a),null)}))}))}))},56697:(e,n,t)=>{var l=t(54156),r=t(20543),i=t(29301),a=t(85828),o=t(79118),u=t(13988);describe("koArray",(function(){o.setTmpMochaGlobals(),it("should emit spliceChange events",(function(){var e=u([1,2,3]),n=[];function t(e,t,l,i){r.equal(n.length,2);var a=n.shift();r.equal(a.type,"spliceChange"),r.equal(a.data.start,e),r.equal(a.data.added,t),r.deepEqual(a.data.deleted,l),a=n.shift(),r.equal(a.type,"change")}["change","spliceChange"].forEach((function(t){e.subscribe((function(e){n.push({type:t,data:e})}),null,t)})),r.deepEqual(e.all(),[1,2,3]),e.push("foo"),t(3,1,[]),e.push("bar"),t(4,1,[]),r.deepEqual(e.all(),[1,2,3,"foo","bar"]),r.deepEqual(e.peek(),[1,2,3,"foo","bar"]),r.equal(e.peekLength,5),e.splice(1,0,"hello","world"),t(1,2,[]),r.deepEqual(e.all(),[1,"hello","world",2,3,"foo","bar"]),e.splice(-6,2,"blah"),t(1,1,["hello","world"]),r.deepEqual(e.all(),[1,"blah",2,3,"foo","bar"]),r.deepEqual(e.slice(3,5),[3,"foo"]),r.equal(n.length,0),e.splice(-2,1),t(4,0,["foo"]),r.deepEqual(e.all(),[1,"blah",2,3,"bar"]),e.splice(1),t(1,0,["blah",2,3,"bar"]),r.deepEqual(e.all(),[1]);var l=[4,5,6];e.assign(l),t(0,3,[1]),e.push(7),t(3,1,[]),r.deepEqual(l,[4,5,6]),r.deepEqual(e.peek(),[4,5,6,7]),r.throws((function(){e.pop()}),Error),r.throws((function(){e.remove("b")}),Error)})),it("should create dependencies when needed",(function(){var e=u([1,2,3]),n=i.computed((function(){return e.all().reduce((function(e,n){return e+n}),0)})),t=i.computed((function(){return e.peek().reduce((function(e,n){return e+n}),0)}));r.equal(n(),6),r.equal(t(),6),e.push(10),r.equal(n(),16),r.equal(t(),6),e.splice(1,1),r.equal(n(),14),r.equal(t(),6),e.splice(0),r.equal(n(),0),r.equal(t(),6)})),describe("#arraySplice",(function(){it("should work similarly to splice",(function(){var e=u([1,2,3]);e.arraySplice(1,2,[]),r.deepEqual(e.peek(),[1]),e.arraySplice(1,0,[10,11]),r.deepEqual(e.peek(),[1,10,11]),e.arraySplice(0,0,[4,5]),r.deepEqual(e.peek(),[4,5,1,10,11])}))})),describe("#makeLiveIndex",(function(){it("should be kept valid",(function(){var e=u([1,2,3]),n=e.makeLiveIndex();r.equal(n(),0),n(-1),r.equal(n(),0),n(null),r.equal(n(),0),n(100),r.equal(n(),2),e.splice(1,1),r.deepEqual(e.peek(),[1,3]),r.equal(n(),1),e.splice(0,1,5,6,7),r.deepEqual(e.peek(),[5,6,7,3]),r.equal(n(),3),e.push(10),e.splice(2,2),r.deepEqual(e.peek(),[5,6,10]),r.equal(n(),2),e.splice(2,1),r.deepEqual(e.peek(),[5,6]),r.equal(n(),1),e.splice(0,2),r.deepEqual(e.peek(),[]),r.equal(n(),null),e.splice(0,0,1,2,3),r.deepEqual(e.peek(),[1,2,3]),r.equal(n(),0)}))})),describe("#map",(function(){it("should map immediately and continuously",(function(){var e=u([1,2,3]),n=e.map((function(e){return 10*e}));r.deepEqual(n.peek(),[10,20,30]),e.push(4),r.deepEqual(n.peek(),[10,20,30,40]),e.splice(1,1),r.deepEqual(n.peek(),[10,30,40]),e.splice(0,1,5,6,7),r.deepEqual(n.peek(),[50,60,70,30,40]),e.splice(2,0,2),r.deepEqual(n.peek(),[50,60,20,70,30,40]),e.splice(1,3),r.deepEqual(n.peek(),[50,30,40]),e.splice(0,0,1,2,3),r.deepEqual(n.peek(),[10,20,30,50,30,40]),e.splice(3,3),r.deepEqual(n.peek(),[10,20,30]);var t=e.map((function(e){return this.test(e)}),{test:function(e){return 100*e}});r.deepEqual(t.peek(),[100,200,300]),e.splice(1,0,4,5),r.deepEqual(t.peek(),[100,400,500,200,300])}))})),describe("#syncMap",(function(){it("should keep two arrays in sync",(function(){var e=u([1,2,3]),n=u([4,5,6]),t=u();t.syncMap(e),r.deepEqual(t.peek(),[1,2,3]),e.splice(1,1,8,9),r.deepEqual(t.peek(),[1,8,9,3]),t.syncMap(n,(function(e){return 10*e})),r.deepEqual(t.peek(),[40,50,60]),e.splice(1,1,8,9),r.deepEqual(t.peek(),[40,50,60]),n.push(8,9),r.deepEqual(t.peek(),[40,50,60,80,90])}))})),describe("#subscribeForEach",(function(){it("should call onAdd and onRemove callbacks",(function(){var e=u([1,2,3]),n=[],t=e.subscribeForEach({add:function(e){n.push(["add",e])},remove:function(e){n.push(["rm",e])}});r.deepEqual(n,[["add",1],["add",2],["add",3]]),n=[],e.push(4),r.deepEqual(n,[["add",4]]),n=[],e.splice(1,2),r.deepEqual(n,[["rm",2],["rm",3]]),n=[],e.splice(0,1,5,6),r.deepEqual(n,[["rm",1],["add",5],["add",6]]),t.dispose(),n=[],e.push(10),r.deepEqual(n,[])}))})),describe("#setAutoDisposeValues",(function(){it("should dispose elements when asked",(function(){var e=l.range(5).map((function(e){return{value:e,dispose:a.spy()}})),n=u(e.slice(0,3)).setAutoDisposeValues();r.equal(n.all().length,3),r.strictEqual(n.at(0),e[0]);var t=n.splice(0,2);r.equal(n.all().length,1),r.strictEqual(n.at(0),e[2]),r.equal(t.length,2),a.assert.calledOnce(t[0].dispose),a.assert.calledOnce(t[1].dispose),a.assert.notCalled(e[2].dispose),n.assign(e.slice(3,5)),r.equal(n.all().length,2),r.strictEqual(n.at(0),e[3]),a.assert.calledOnce(e[2].dispose),a.assert.notCalled(e[3].dispose),a.assert.notCalled(e[4].dispose),n.dispose(),a.assert.calledOnce(e[3].dispose),a.assert.calledOnce(e[4].dispose),a.assert.calledOnce(e[0].dispose),a.assert.calledOnce(e[1].dispose),a.assert.calledOnce(e[2].dispose)}))})),describe("syncedKoArray",(function(){it("should return array synced to the value of the observable",(function(){var e=u(["1","2","3"]),n=u(["foo","bar"]),t=["hello","world"],l=i.observable(e),a=u.syncedKoArray(l);r.deepEqual(a.all(),["1","2","3"]),e.push("4"),r.deepEqual(a.all(),["1","2","3","4"]),l(t),r.deepEqual(a.all(),["hello","world"]),e.push("4"),t.splice(0,1),t.push("qwer"),r.deepEqual(a.all(),["hello","world"]),l(n),r.deepEqual(a.all(),["foo","bar"]),n.splice(0,1),r.deepEqual(a.all(),["bar"]),n.splice(0,0,"this","is","a","test"),r.deepEqual(a.all(),["this","is","a","test","bar"]),n.assign(["10","20"]),r.deepEqual(a.all(),["10","20"]),r.equal(e.getObservable().getSubscriptionsCount(),1),r.equal(n.getObservable().getSubscriptionsCount(),2),r.equal(l.getSubscriptionsCount(),1),a.dispose(),r.equal(l.getSubscriptionsCount(),0),r.equal(n.getObservable().getSubscriptionsCount(),1)})),it("should work with a mapper callback",(function(){var e=u(["1","2","3"]),n=i.observable(),t=u.syncedKoArray(n,(function(e){return"x"+e}));r.deepEqual(t.all(),[]),n(e),r.deepEqual(t.all(),["x1","x2","x3"]),e.push("4"),r.deepEqual(t.all(),["x1","x2","x3","x4"]),n(["foo","bar"]),r.deepEqual(t.all(),["xfoo","xbar"]),e.splice(1,1),n(e),e.splice(1,1),r.deepEqual(t.all(),["x1","x4"])}))})),describe("syncedMap",(function(){it("should associate state with each item and dispose it",(function(){var e=u(["1","2","3"]),n=a.spy(),t=a.spy(),l=u.syncedMap(e,((e,l)=>{n(l),e.autoDisposeCallback((()=>t(l)))}));r.deepEqual(n.args,[["1"],["2"],["3"]]),r.deepEqual(t.args,[]),e.splice(1,0,"4","5"),r.deepEqual(e.peek(),["1","4","5","2","3"]),r.deepEqual(n.args,[["1"],["2"],["3"],["4"],["5"]]),r.deepEqual(t.args,[]),e.splice(0,2),r.deepEqual(n.args,[["1"],["2"],["3"],["4"],["5"]]),r.deepEqual(t.args,[["1"],["4"]]),l.dispose(),r.deepEqual(n.args,[["1"],["2"],["3"],["4"],["5"]]),r.deepEqual(t.args,[["1"],["4"],["2"],["3"],["5"]])}))}))}))},63967:(e,n,t)=>{var l=t(20543),r=t(29301),i=t(85828),a=t(81294),o=t(92979),u=t(13988),s=t(79118);describe("koDom",(function(){s.setTmpMochaGlobals(),describe("simple properties",(function(){it("should update dynamically",(function(){var e=r.observable("bar"),n=r.observable(17),t=a("div",o.attr("a1","foo"),o.attr("a2",e),o.attr("a3",(function(){return"a3"+e()})),o.text(e),o.style("width",(function(){return n()+"px"})),o.toggleClass("isbar",(function(){return"bar"===e()})),o.cssClass((function(){return"class"+e()})));l.equal(t.getAttribute("a1"),"foo"),l.equal(t.getAttribute("a2"),"bar"),l.equal(t.getAttribute("a3"),"a3bar"),l.equal(t.textContent,"bar"),l.equal(t.style.width,"17px"),l.equal(t.className,"isbar classbar"),e("BAZ"),n("34"),l.equal(t.getAttribute("a1"),"foo"),l.equal(t.getAttribute("a2"),"BAZ"),l.equal(t.getAttribute("a3"),"a3BAZ"),l.equal(t.textContent,"BAZ"),l.equal(t.style.width,"34px"),l.equal(t.className,"classBAZ"),e("bar"),l.equal(t.className,"isbar classbar")}))})),describe("domData",(function(){it("should set domData and reflect observables",(function(){var e=r.observable(null),n=a("div",o.domData("foo",e),o.domData("bar","BAR"));l.equal(r.utils.domData.get(n,"foo"),null),l.equal(r.utils.domData.get(n,"bar"),"BAR"),e(123),l.equal(r.utils.domData.get(n,"foo"),123)}))})),describe("scope",(function(){it("should handle any number of children",(function(){var e=r.observable(),n=a("div","Hello",o.scope(e,(function(e){return e})),"World");l.equal(n.textContent,"HelloWorld"),e("Foo"),l.equal(n.textContent,"HelloFooWorld"),e([]),l.equal(n.textContent,"HelloWorld"),e(["Foo","Bar"]),l.equal(n.textContent,"HelloFooBarWorld"),e(null),l.equal(n.textContent,"HelloWorld"),e([a.frag("Foo",a("span","Bar")),a("div","Baz")]),l.equal(n.textContent,"HelloFooBarBazWorld")})),it("should cope with children getting removed outside",(function(){var e=r.observable(),n=a("div","Hello",o.scope(e,(function(e){return e})),"World");l.equal(n.innerHTML,"Hello\x3c!----\x3eWorld"),e(a.frag(a("div","Foo"),a("div","Bar"))),l.equal(n.innerHTML,"Hello\x3c!----\x3e<div>Foo</div><div>Bar</div>World"),n.removeChild(n.childNodes[2]),l.equal(n.innerHTML,"Hello\x3c!----\x3e<div>Bar</div>World"),e(null),l.equal(n.innerHTML,"Hello\x3c!----\x3eWorld"),e(a.frag(a("div","Foo"),a("div","Bar"))),n.removeChild(n.childNodes[3]),l.equal(n.innerHTML,"Hello\x3c!----\x3e<div>Foo</div>World"),e(a.frag(a("div","Foo"),a("div","Bar"))),l.equal(n.innerHTML,"Hello\x3c!----\x3e<div>Foo</div><div>Bar</div>World")}))})),describe("maybe",(function(){it("should handle any number of children",(function(){var e=r.observable(0),n=a("div","Hello",o.maybe((function(){return e()>0}),(function(){return a("span","Foo")})),o.maybe((function(){return e()>1}),(function(){return[a("span","Foo"),a("span","Bar")]})),"World");l.equal(n.textContent,"HelloWorld"),e(1),l.equal(n.textContent,"HelloFooWorld"),e(2),l.equal(n.textContent,"HelloFooFooBarWorld"),e(0),l.equal(n.textContent,"HelloWorld")})),it("should pass truthy value to content function",(function(){var e=r.observable(null),n=a("div","Hello",o.maybe(e,(function(e){return e})),"World");l.equal(n.innerHTML,"Hello\x3c!----\x3eWorld"),e(a("span","Foo")),l.equal(n.innerHTML,"Hello\x3c!----\x3e<span>Foo</span>World"),e(0),l.equal(n.innerHTML,"Hello\x3c!----\x3eWorld")}))})),describe("foreach",(function(){it("should work with koArray",(function(){var e=u();e.assign(["a","b","c"]);var n=a("div","[",o.foreach(e,(function(e){return a("span",":",a("span",o.text(e)))})),"]");l.equal(n.textContent,"[:a:b:c]"),e.splice(0),l.equal(n.textContent,"[]"),e.push("hello"),l.equal(n.textContent,"[:hello]"),e.push("world"),l.equal(n.textContent,"[:hello:world]"),e.splice(0,1,"foo","bar","baz"),l.equal(n.textContent,"[:foo:bar:baz:world]"),e.splice(-3,2),l.equal(n.textContent,"[:foo:world]"),e.splice(1,0,"test2","test3"),l.equal(n.textContent,"[:foo:test2:test3:world]")})),it("should work when items disappear from under it",(function(){var e=[a("span","a"),a("span","b"),a("span","c")],n=u();n.assign(e);var t=a("div","[",o.foreach(n,(function(e){return e})),"]");l.equal(t.textContent,"[abc]");var r=n.splice(1,1);l.deepEqual(r,[e[1]]),l.deepEqual(n.peek(),[e[0],e[2]]),l.equal(t.textContent,"[ac]"),n.splice(1,0,e[1]),l.equal(t.textContent,"[abc]"),t.removeChild(e[1]),l.equal(t.textContent,"[ac]"),l.deepEqual(n.peek(),e),r=n.splice(2,1),l.deepEqual(r,[e[2]]),l.deepEqual(n.peek(),[e[0],e[1]]),l.equal(t.textContent,"[a]"),r=n.splice(0,2),l.deepEqual(r,[e[0],e[1]]),l.deepEqual(n.peek(),[]),l.equal(t.textContent,"[]")})),it("should work when items are null",(function(){var e=u(),n=a("div","[",o.foreach(e,(function(e){return e&&a("span",e)})),"]");l.equal(n.textContent,"[]"),e.splice(0,0,"a","b","c"),l.equal(n.textContent,"[abc]");var t=n.childNodes.length;e.splice(1,1,null),l.equal(n.childNodes.length,t-1),l.equal(n.textContent,"[ac]"),e.splice(1,0,"x"),l.equal(n.textContent,"[axc]"),e.splice(3,0,"y"),l.equal(n.textContent,"[axyc]"),e.splice(1,2),l.equal(n.textContent,"[ayc]"),e.splice(0,3),l.equal(n.textContent,"[]")})),it("should dispose subscribables for detached nodes",(function(){var e=r.observable("AAA"),n=i.spy((function(e){return e})),t=u([r.observable("foo"),r.observable("bar")]),s=a("div",o.foreach(t,(function(t){return a("div",o.text((function(){return n(t()+":"+e())})))})));l.equal(s.innerHTML,"\x3c!----\x3e<div>foo:AAA</div><div>bar:AAA</div>"),e("BBB"),l.equal(s.innerHTML,"\x3c!----\x3e<div>foo:BBB</div><div>bar:BBB</div>"),t.splice(1,1),l.equal(s.innerHTML,"\x3c!----\x3e<div>foo:BBB</div>"),n.resetHistory(),e("CCC"),l.equal(s.innerHTML,"\x3c!----\x3e<div>foo:CCC</div>"),i.assert.calledOnce(n),i.assert.calledWith(n,"foo:CCC")}))}))}))},59367:(e,n,t)=>{var l=t(36436).assert,r=t(29301),i=t(73783),a=t(13988),o=t(79118),u=t(11527).get("$");describe("koForm",(function(){function e(e,n,t){e[n]=t,u.$(e).trigger("input")}function n(e,n,t){e[n]=t,u.$(e).trigger("change")}function t(e){u.$(e).trigger("click")}o.setTmpMochaGlobals(),describe("button",(function(){it("should call a function",(function(){var e=0,n=i.button((function(){e++}),"Test");t(n),t(n),t(n),l.equal(e,3)}))})),describe("checkButton",(function(){it("should bind an observable",(function(){var e=r.observable(!1),n=i.checkButton(e,"Test");l(!n.classList.contains("active")),e(!0),l(n.classList.contains("active")),n=i.checkButton(e,"Test2"),l(n.classList.contains("active")),e(!1),l(!n.classList.contains("active")),l.equal(e(),!1),t(n),l.equal(e(),!0),t(n),l.equal(e(),!1)}))})),describe("buttonSelect",(function(){it("should bind an observable",(function(){var e,n,a,o=r.observable("b");i.buttonSelect(o,e=i.optionButton("a","Test A"),n=i.optionButton("b","Test B"),a=i.optionButton("c","Test C")),l(!e.classList.contains("active")),l(n.classList.contains("active")),l(!a.classList.contains("active")),o("a"),l(e.classList.contains("active")),l(!n.classList.contains("active")),o("c"),l(!e.classList.contains("active")),l(!n.classList.contains("active")),l(a.classList.contains("active")),l.equal(o(),"c"),t(n),l.equal(o(),"b")}))})),describe("checkbox",(function(){it("should bind an observable",(function(){var e=r.observable(!1),t=i.checkbox(e,"Foo").querySelector("input");l.equal(t.checked,!1),e(!0),l.equal(t.checked,!0),t=i.checkbox(e,"Foo").querySelector("input"),l.equal(t.checked,!0),e(!1),l.equal(t.checked,!1),n(t,"checked",!0),l.equal(e(),!0),l.equal(t.checked,!0),n(t,"checked",!1),l.equal(e(),!1),l.equal(t.checked,!1)}))})),describe("text",(function(){it("should bind an observable",(function(){var e=r.observable("hello"),t=i.text(e).querySelector("input");l.equal(t.value,"hello"),e("world"),l.equal(t.value,"world"),n(t,"value","foo"),l.equal(e(),"foo")}))})),describe("text debounce",(function(){it("should bind an observable",(function(){var t=r.observable("hello"),a=i.text(t,{delay:300}).querySelector("input");return l.equal(a.value,"hello"),t("world"),l.equal(a.value,"world"),e(a,"value","bar"),l.equal(a.value,"bar"),l.equal(t(),"world"),n(a,"value","bar"),l.equal(t(),"bar"),e(a,"value","helloworld"),a.selectionStart=3,a.selectionEnd=7,l.equal(a.value.substring(a.selectionStart,a.selectionEnd),"lowo"),l.equal(a.value,"helloworld"),l.equal(t(),"bar"),o.waitForChange(t,350).then((()=>{l.equal(t(),"helloworld"),l.equal(a.value,"helloworld"),l.equal(a.value.substring(a.selectionStart,a.selectionEnd),"lowo")}))}))})),describe("numText",(function(){it("should bind an observable",(function(){var n=r.observable(1234),t=i.numText(n).querySelector("input");l.equal(t.value,"1234"),n("-987.654"),l.equal(t.value,"-987.654"),e(t,"value","-1.2"),l.strictEqual(n(),-1.2)}))})),describe("select",(function(){it("should bind an observable",(function(){var e=r.observable("b"),t=i.select(e,["a","b","c"]).querySelector("select"),a=Array.prototype.slice.call(t.querySelectorAll("option"),0);function o(){return a.map((function(e){return e.selected}))}l.deepEqual(o(),[!1,!0,!1]),e("a"),l.deepEqual(o(),[!0,!1,!1]),e("c"),l.deepEqual(o(),[!1,!1,!0]),n(a[0],"selected",!0),l.deepEqual(o(),[!0,!1,!1]),l.equal(e(),"a"),n(a[1],"selected",!0),l.deepEqual(o(),[!1,!0,!1]),l.equal(e(),"b")})),it("should work with option array of objects",(function(){var e=r.observable(),t=r.observable("foo"),o=r.observable("bar"),u=a([{label:t,value:"a1"},{label:o,value:"b1"}]),s=i.select(e,u),c=Array.from(s.querySelectorAll("option"));l.deepEqual(c.map((e=>e.textContent)),["foo","bar"]),n(c[0],"selected",!0),l.equal(e(),"a1"),t("foo2"),o("bar2"),c=Array.from(s.querySelectorAll("option")),l.deepEqual(c.map((e=>e.textContent)),["foo2","bar2"]),n(c[1],"selected",!0),l.equal(e(),"b1")})),it("should store actual, non-stringified values",(function(){let e=r.observable(),t=[{label:"a",value:1},{label:"b",value:"2"},{label:"c",value:!0},{label:"d",value:{hello:"world"}},{label:"e",value:new Date}],a=Array.from(i.select(e,t).querySelectorAll("option"));for(let r=0;r<t.length;r++)n(a[r],"selected",!0),l.strictEqual(e(),t[r].value)})),it("should allow multi-select and save sorted values",(function(){let e=r.observable(),t={foo:"bar"},a=[{label:"a",value:t},"d",{label:"c",value:1},"b"],o=Array.from(i.select(e,a,{multiple:!0}).querySelectorAll("option"));n(o[0],"selected",!0),n(o[2],"selected",!0),n(o[3],"selected",!0),l.deepEqual(e(),[1,t,"b"])}))}))}))},75812:(e,n,t)=>{var l=t(20543),r=t(29301),i=t(85828),a=t(33620);describe("koUtil",(function(){describe("observableWithDefault",(function(){it("should be an observable with a default",(function(){var e=r.observable(),n=a.observableWithDefault(e,"defaultValue"),t={prop:17},i=a.observableWithDefault(e,(function(){return this.prop}),t);l.equal(n(),"defaultValue"),l.equal(i(),17),e("hello"),l.equal(n(),"hello"),l.equal(i(),"hello"),t.prop=28,e(0),l.equal(n(),"defaultValue"),l.equal(i(),28),n("world"),l.equal(e(),"world"),l.equal(n(),"world"),l.equal(i(),"world"),i("blah"),l.equal(e(),"blah"),l.equal(n(),"blah"),l.equal(i(),"blah"),n(null),l.equal(e(),null),l.equal(n(),"defaultValue"),l.equal(i(),28)}))})),describe("computedAutoDispose",(function(){function e(e){var n=[{dispose:i.spy()},{dispose:i.spy()},{dispose:i.spy()}],t=r.observable(0),o=i.spy((function(){return n[t()]})),u=a.computedAutoDispose({read:o,pure:e});l.equal(o.callCount,e?0:1),l.strictEqual(u(),n[0]),l.equal(o.callCount,1),t(1),l.strictEqual(u(),n[1]),l.equal(o.callCount,2),l.equal(n[0].dispose.callCount,1),l.equal(n[1].dispose.callCount,0),t(2),l.equal(o.callCount,e?2:3),l.equal(n[1].dispose.callCount,e?0:1),u.dispose(),l.equal(n[0].dispose.callCount,1),l.equal(n[1].dispose.callCount,1),l.equal(n[2].dispose.callCount,e?0:1)}it("autoDisposeValue for pure computed should be pure",(function(){e(!0)})),it("autoDisposeValue for non-pure computed should be non-pure",(function(){e(!1)}))})),describe("computedBuilder",(function(){it("should create appropriate dependencies and dispose values",(function(){var e=r.observable(0),n=r.observable("foo"),t=r.observable("faz"),o=[{dispose:i.spy((()=>t()))},{dispose:i.spy((()=>t()))}],u=i.spy((function(e){return o[e].foo=n(),o[e]})),s=a.computedBuilder((function(){return u.bind(null,e())}));l.equal(u.callCount,1),l.strictEqual(s(),o[0]),l.equal(s().foo,"foo"),n("bar"),l.equal(u.callCount,1),t("baz"),l.equal(u.callCount,1),e(1),l.equal(o[0].dispose.callCount,1),l.equal(u.callCount,2),l.strictEqual(s(),o[1]),l.equal(s().foo,"bar"),n("foo"),l.equal(u.callCount,2),t("faz"),l.equal(u.callCount,2),l.equal(o[1].dispose.callCount,0),s.dispose(),l.equal(o[1].dispose.callCount,1)}))}))}))},81266:(e,n,t)=>{var l=t(20543),r=t(29301),i=t(32529),a=t(85828);describe("modelUtil",(function(){describe("fieldWithDefault",(function(){it("should be an observable with a default",(function(){var e=i.createField("foo"),n=i.fieldWithDefault(e,"defaultValue");l.equal(n(),"defaultValue"),e("test"),l.equal(n(),"test"),n("hello"),l.equal(n(),"hello"),l.equal(e(),"hello"),e(""),l.equal(n(),"defaultValue"),l.equal(e(),"")})),it("should exhibit specific behavior when used as a jsonObservable",(function(){var e=i.createField("custom"),n=r.observable('{"foo": 2, "bar": 3}'),t=i.fieldWithDefault(e,(function(){return n()}));t=i.jsonObservable(t),l.deepEqual(t(),{foo:2,bar:3}),t({foo:20}),l.deepEqual(t(),{foo:20}),t(void 0),l.deepEqual(t(),{foo:2,bar:3}),t(void 0),t.prop("foo")(50),l.deepEqual(t(),{foo:50,bar:3}),n('{"bar": 60}'),t.prop("foo")(70),l.deepEqual(t(),{foo:70,bar:3})}))})),describe("jsonObservable",(function(){it("should auto parse and stringify",(function(){var e=r.observable(),n=i.jsonObservable(e);l.deepEqual(n(),{}),e('{"foo": 1, "bar": "baz"}'),l.deepEqual(n(),{foo:1,bar:"baz"}),n({foo:2,baz:"bar"}),l.equal(e(),'{"foo":2,"baz":"bar"}'),n.update({foo:17,bar:null}),l.equal(e(),'{"foo":17,"baz":"bar","bar":null}')})),it("should support saving",(function(){var e=r.observable('{"foo": 1, "bar": "baz"}'),n=null;e.saveOnly=function(e){n=e};var t=i.jsonObservable(e);t.saveOnly({foo:2}),l.equal(n,'{"foo":2}'),l.equal(e(),'{"foo": 1, "bar": "baz"}'),l.deepEqual(t(),{foo:1,bar:"baz"}),t.update({hello:"world"}),t.save(),l.equal(n,'{"foo":1,"bar":"baz","hello":"world"}'),l.equal(e(),'{"foo":1,"bar":"baz","hello":"world"}'),l.deepEqual(t(),{foo:1,bar:"baz",hello:"world"}),t.setAndSave({hello:"world"}),l.equal(n,'{"hello":"world"}'),l.equal(e(),'{"hello":"world"}'),l.deepEqual(t(),{hello:"world"})})),it("should support property observables",(function(){var e=r.observable('{"foo": 1, "bar": "baz"}'),n=null;e.saveOnly=function(e){n=e};var t=i.jsonObservable(e),a=t.prop("foo"),o=t.prop("hello");l.equal(a(),1),l.equal(o(),void 0),t.update({foo:17}),l.equal(a(),17),l.equal(o(),void 0),a(18),l.equal(e(),'{"foo":18,"bar":"baz"}'),o("world"),l.equal(n,null),l.equal(e(),'{"foo":18,"bar":"baz","hello":"world"}'),l.deepEqual(t(),{foo:18,bar:"baz",hello:"world"}),a.setAndSave(20),l.equal(n,'{"foo":20,"bar":"baz","hello":"world"}'),l.equal(e(),'{"foo":20,"bar":"baz","hello":"world"}'),l.deepEqual(t(),{foo:20,bar:"baz",hello:"world"})}))})),describe("objObservable",(function(){it("should support property observables",(function(){var e=r.observable({foo:1,bar:"baz"}),n=i.objObservable(e),t=n.prop("foo"),a=n.prop("hello");l.equal(t(),1),l.equal(a(),void 0),n.update({foo:17}),l.equal(t(),17),l.equal(a(),void 0),t(18),a("world"),l.deepEqual(n(),{foo:18,bar:"baz",hello:"world"})}))})),it("should support customComputed",(function(){var e=r.observable("hello"),n=a.spy(),t=i.customComputed({read:()=>e(),save:e=>n(e)});return l.equal(t(),"hello"),l.equal(t.isSaved(),!0),e("world2"),l.equal(t(),"world2"),l.equal(t.isSaved(),!0),t("foo"),l.equal(t(),"foo"),l.equal(t.isSaved(),!1),e("world"),l.equal(t(),"foo"),l.equal(t.isSaved(),!1),t.revert(),l.equal(t(),"world"),l.equal(t.isSaved(),!0),t("foo"),l.equal(t.isSaved(),!1),t("world"),l.equal(t.isSaved(),!0),t("foo"),l.equal(t(),"foo"),l.equal(t.isSaved(),!1),t.save().then((()=>(a.assert.calledOnce(n),a.assert.calledWithExactly(n,"foo"),l.equal(t(),"world"),l.equal(t.isSaved(),!0),n.resetHistory(),t.saveOnly("foo2")))).then((()=>(a.assert.calledOnce(n),a.assert.calledWithExactly(n,"foo2"),l.equal(t(),"world"),l.equal(t.isSaved(),!0),n.resetHistory(),t.saveOnly("world")))).then((()=>(a.assert.notCalled(n),l.equal(t(),"world"),l.equal(t.isSaved(),!0),n.resetHistory(),t.saveOnly("bar")))).then((()=>{l.equal(t(),"world"),l.equal(t.isSaved(),!0),a.assert.calledOnce(n),a.assert.calledWithExactly(n,"bar"),e("bar"),l.equal(t(),"bar"),l.equal(t.isSaved(),!0)}))}))}))},85320:(e,n,t)=>{var l=t(54156),r=t(36436).assert,i=t(85828),a=t(3871);describe("rowset",(function(){function e(e){it("should only forward matching rows",(function(){var n=a.RowSource.create(null);n.getAllRows=function(){return[1,2,3]};var t=e.create(null,(function(e){return e%2==0}));t.subscribeTo(n),r.deepEqual(Array.from(t.getAllRows()),[2]);var l=i.spy(),o=i.spy();t.on("rowChange",l),t.on("rowNotify",o),n.trigger("rowChange","add",[4,5,6]),n.trigger("rowChange","add",[7]),n.trigger("rowNotify",[2,3,4],"hello"),n.trigger("rowNotify",a.ALL,"world"),n.trigger("rowChange","remove",[1,5]),n.trigger("rowChange","remove",[2,3,6]),r.deepEqual(l.args[0],["add",[4,6]]),r.deepEqual(l.args[1],["remove",[2,6]]),r.equal(l.callCount,2),r.deepEqual(o.args[0],[[2,4],"hello"]),r.deepEqual(o.args[1],[a.ALL,"world"]),r.equal(o.callCount,2),r.deepEqual(Array.from(t.getAllRows()),[4])})),it("should translate updates to adds or removes if needed",(function(){var n=a.RowSource.create(null);n.getAllRows=function(){return[1,2,3]};var t=new Set([2,3,6]),l=e.create(null,(function(e){return t.has(e)}));l.subscribeTo(n),r.deepEqual(Array.from(l.getAllRows()),[2,3]);var o=i.spy();l.on("rowChange",o),n.trigger("rowChange","add",[4,5]),r.equal(o.callCount,0),t.add(4),t.delete(2),n.trigger("rowChange","update",[3,2,4,5]),r.equal(o.callCount,3),r.deepEqual(o.args[0],["remove",[2]]),r.deepEqual(o.args[1],["update",[3]]),r.deepEqual(o.args[2],["add",[4]]),o.resetHistory(),n.trigger("rowChange","update",[1]),r.equal(o.callCount,0)}))}describe("RowListener",(function(){it("should translate events to callbacks",(function(){var e=a.RowSource.create(null);e.getAllRows=function(){return[1,2,3]};var n=a.RowListener.create(null);i.spy(n,"onAddRows"),i.spy(n,"onRemoveRows"),i.spy(n,"onUpdateRows"),n.subscribeTo(e),r.deepEqual(n.onAddRows.args,[[[1,2,3]]]),n.onAddRows.resetHistory(),e.trigger("rowChange","add",[5,6]),e.trigger("rowChange","remove",[6,1]),e.trigger("rowChange","update",[3,5]),r.deepEqual(n.onAddRows.args,[[[5,6]]]),r.deepEqual(n.onRemoveRows.args,[[[6,1]]]),r.deepEqual(n.onUpdateRows.args,[[[3,5]]])})),it("should support subscribing to multiple sources",(function(){var e=a.RowSource.create(null);e.getAllRows=function(){return[1,2,3]};var n=a.RowSource.create(null);n.getAllRows=function(){return["a","b","c"]};var t=a.RowListener.create(null);i.spy(t,"onAddRows"),i.spy(t,"onRemoveRows"),i.spy(t,"onUpdateRows"),t.subscribeTo(e),t.subscribeTo(n),r.deepEqual(t.onAddRows.args,[[[1,2,3]],[["a","b","c"]]]),e.trigger("rowChange","update",[2,3]),n.trigger("rowChange","remove",["b"]),r.deepEqual(t.onUpdateRows.args,[[[2,3]]]),r.deepEqual(t.onRemoveRows.args,[[["b"]]]),t.onAddRows.resetHistory(),t.unsubscribeFrom(e),e.trigger("rowChange","add",[4]),n.trigger("rowChange","add",["d"]),r.deepEqual(t.onAddRows.args,[[["d"]]])}))})),describe("MappedRowSource",(function(){it("should map row identifiers",(function(){var e=a.RowSource.create(null);e.getAllRows=function(){return[1,2,3]};var n=a.MappedRowSource.create(null,e,(e=>"X"+e));r.deepEqual(n.getAllRows(),["X1","X2","X3"]);var t=i.spy(),l=i.spy();n.on("rowChange",t),n.on("rowNotify",l),e.trigger("rowChange","add",[4,5,6]),e.trigger("rowNotify",[2,3,4],"hello"),e.trigger("rowNotify",a.ALL,"world"),e.trigger("rowChange","remove",[1,5]),e.trigger("rowChange","update",[4,2]),r.deepEqual(t.args[0],["add",["X4","X5","X6"]]),r.deepEqual(t.args[1],["remove",["X1","X5"]]),r.deepEqual(t.args[2],["update",["X4","X2"]]),r.deepEqual(t.callCount,3),r.deepEqual(l.args[0],[["X2","X3","X4"],"hello"]),r.deepEqual(l.args[1],[a.ALL,"world"]),r.deepEqual(l.callCount,2)}))})),describe("BaseFilteredRowSource",(()=>{e(a.BaseFilteredRowSource)})),describe("FilteredRowSource",(()=>{e(a.FilteredRowSource),it("should support changing the filter function",(function(){var e=a.RowSource.create(null);e.getAllRows=function(){return[1,2,3,4,5]};var n=new Set([2,3,6]),t=a.FilteredRowSource.create(null,(function(e){return n.has(e)}));t.subscribeTo(e),r.deepEqual(Array.from(t.getAllRows()),[2,3]);var l=i.spy();t.on("rowChange",l),n.add(4),n.delete(2),t.updateFilter((function(e){return n.has(e)})),r.equal(l.callCount,2),r.deepEqual(l.args[0],["remove",[2]]),r.deepEqual(l.args[1],["add",[4]]),r.deepEqual(Array.from(t.getAllRows()),[3,4]),l.resetHistory(),n.add(5),n.add(17),n.delete(3),t.refilterRows([2,4,5,17]),r.deepEqual(Array.from(t.getAllRows()),[3,4,5]),r.equal(l.callCount,1),r.deepEqual(l.args[0],["add",[5]])}))})),describe("RowGrouping",(function(){it("should add/remove/notify rows in the correct group",(function(){var e=a.RowSource.create(null);e.getAllRows=function(){return["a","b","c"]};var n={a:1,b:2,c:2,d:1,e:3,f:3},t=a.RowGrouping.create(null,(function(e){return n[e]}));t.subscribeTo(e);var l=t.getGroup(1),o=t.getGroup(2);r.deepEqual(Array.from(l.getAllRows()),["a"]),r.deepEqual(Array.from(o.getAllRows()),["b","c"]);var u=i.spy(),s=i.spy(),c=i.spy(),d=i.spy();l.on("rowChange",u),o.on("rowChange",s),l.on("rowNotify",c),o.on("rowNotify",d),e.trigger("rowChange","add",["d","e","f"]),r.deepEqual(u.args,[["add",["d"]]]),r.deepEqual(s.args,[]),e.trigger("rowNotify",["a","e"],"foo"),e.trigger("rowNotify",a.ALL,"bar"),r.deepEqual(c.args,[[["a"],"foo"],[a.ALL,"bar"]]),r.deepEqual(d.args,[[a.ALL,"bar"]]),u.resetHistory(),s.resetHistory(),e.trigger("rowChange","remove",["a","b","d","e"]),r.deepEqual(u.args,[["remove",["a","d"]]]),r.deepEqual(s.args,[["remove",["b"]]]),r.deepEqual(Array.from(l.getAllRows()),[]),r.deepEqual(Array.from(o.getAllRows()),["c"]),r.deepEqual(Array.from(t.getGroup(3).getAllRows()),["f"])})),it("should translate updates to adds or removes if needed",(function(){var e=a.RowSource.create(null);e.getAllRows=function(){return["a","b","c","d","e"]};var n={a:1,b:2,c:2,d:1,e:3,f:3},t=a.RowGrouping.create(null,(function(e){return n[e]})),o=t.getGroup(1),u=t.getGroup(2);t.subscribeTo(e),r.deepEqual(Array.from(o.getAllRows()),["a","d"]),r.deepEqual(Array.from(u.getAllRows()),["b","c"]);var s=i.spy(),c=i.spy();o.on("rowChange",s),u.on("rowChange",c),l.extend(n,{a:2,b:3,e:1}),e.trigger("rowChange","update",["a","b","d","e"]),r.deepEqual(s.args,[["remove",["a"]],["update",["d"]],["add",["e"]]]),r.deepEqual(c.args,[["remove",["b"]],["add",["a"]]]),s.resetHistory(),c.resetHistory(),e.trigger("rowChange","update",["a","b","d","e"]),r.deepEqual(s.args,[["update",["d","e"]]]),r.deepEqual(c.args,[["update",["a"]]])}))})),describe("SortedRowSet",(function(){var e,n,t,o;beforeEach((function(){(e=a.RowSource.create(null)).getAllRows=function(){return["a","b","c","d","e"]},n={a:4,b:0,c:1,d:2,e:3},t=a.SortedRowSet.create(null,(function(e,t){return n[e]-n[t]})),o=t.getKoArray()})),it("should sort on first subscribe",(function(){r.deepEqual(o.peek(),[]),t.subscribeTo(e),r.deepEqual(o.peek(),["b","c","d","e","a"])})),it("should maintain sort on adds and removes",(function(){t.subscribeTo(e);var a=i.spy();o.subscribe(a,null,"spliceChange"),l.extend(n,{p:2.5,q:3.5}),e.trigger("rowChange","add",["p","q"]),r.deepEqual(o.peek(),["b","c","d","p","e","q","a"]),r.equal(a.callCount,2),r.equal(a.args[0][0].added,1),r.equal(a.args[1][0].added,1),a.resetHistory(),e.trigger("rowChange","remove",["a","c"]),r.deepEqual(o.peek(),["b","d","p","e","q"]),r.equal(a.callCount,2),r.deepEqual(a.args[0][0].deleted,["a"]),r.deepEqual(a.args[1][0].deleted,["c"]),a.resetHistory(),e.trigger("rowChange","remove",["d","e","q"]),r.deepEqual(o.peek(),["b","p"]),r.equal(a.callCount,1),a.resetHistory(),e.trigger("rowChange","add",["a","c","d","e","q"]),r.deepEqual(o.peek(),["b","c","d","p","e","q","a"]),r.equal(a.callCount,1)})),it("should maintain sort on updates",(function(){var a=i.spy();o.subscribe(a,null,"spliceChange"),t.subscribeTo(e),r.deepEqual(o.peek(),["b","c","d","e","a"]),r.equal(a.callCount,1),r.equal(a.args[0][0].added,5),a.resetHistory(),l.extend(n,{b:1.5,a:2.5}),e.trigger("rowChange","update",["b","a"]),r.deepEqual(o.peek(),["c","b","d","a","e"]),r.equal(a.callCount,4),r.deepEqual(a.args[0][0].deleted,["b"]),r.deepEqual(a.args[1][0].deleted,["a"]),r.deepEqual(a.args[2][0].added,1),r.deepEqual(a.args[3][0].added,1),a.resetHistory(),l.extend(n,{b:0,a:5,c:6}),e.trigger("rowChange","update",["c","b","a"]),r.deepEqual(o.peek(),["b","d","e","a","c"]),r.equal(a.callCount,1),r.deepEqual(a.args[0][0].added,5)})),it("should not splice on irrelevant changes",(function(){var n=i.spy();o.subscribe(n,null,"spliceChange"),t.subscribeTo(e),r.deepEqual(o.peek(),["b","c","d","e","a"]),n.resetHistory(),e.trigger("rowChange","update",["d"]),e.trigger("rowChange","update",["a","b","c"]),r.deepEqual(o.peek(),["b","c","d","e","a"]),r.equal(n.callCount,0)})),it("should pass on rowNotify events",(function(){var n=i.spy(),l=i.spy();t.subscribeTo(e),r.deepEqual(o.peek(),["b","c","d","e","a"]),o.subscribe(n,null,"spliceChange"),t.on("rowNotify",l),e.trigger("rowNotify",["b","e"],"hello"),e.trigger("rowNotify",a.ALL,"world"),r.equal(n.callCount,0),r.deepEqual(l.args,[[["b","e"],"hello"],[a.ALL,"world"]])})),it("should allow changing compareFunc",(function(){t.subscribeTo(e),r.deepEqual(o.peek(),["b","c","d","e","a"]);var l=i.spy();o.subscribe(l,null,"spliceChange"),t.updateSort((function(e,t){return n[t]-n[e]})),r.equal(l.callCount,1),r.deepEqual(l.args[0][0].added,5),r.deepEqual(o.peek(),["a","e","d","c","b"])})),it("should defer sorting while paused",(function(){var a=!1;r.deepEqual(o.peek(),[]),t.updateSort((function(e,t){return a=!0,n[e]-n[t]})),a=!1;var u=i.spy();function s(){r.equal(a,!1),r.equal(u.callCount,0)}o.subscribe(u,null,"spliceChange"),t.subscribeTo(e),r.equal(a,!0),r.equal(u.callCount,1),t.unsubscribeFrom(e),a=!1,u.resetHistory(),t.pause(!0),t.subscribeTo(e),s(),l.extend(n,{p:2.5,q:3.5}),e.trigger("rowChange","add",["p","q"]),s(),e.trigger("rowChange","remove",["q","c"]),s(),l.extend(n,{b:2.7,a:1}),e.trigger("rowChange","update",["b","a"]),s(),t.updateSort((function(e,t){return a=!0,n[t]-n[e]})),s();var c=i.spy();t.on("rowNotify",c),e.trigger("rowNotify",["p","e"],"hello"),r.deepEqual(c.args[0],[["p","e"],"hello"]),s(),t.pause(!1),r.equal(a,!0),r.equal(u.callCount,1),r.deepEqual(o.peek(),["e","b","p","d","a"])}))}))}))},1034:(e,n,t)=>{var l=t(20543),r=t(10328);describe("BinaryIndexedTree",(function(){describe("#leastSignificantOne",(function(){it("should only keep the least significant one",(function(){l.equal(r.leastSignificantOne(1),1),l.equal(r.leastSignificantOne(6),2),l.equal(r.leastSignificantOne(15),1),l.equal(r.leastSignificantOne(16),16),l.equal(r.leastSignificantOne(0),0)}))})),describe("#stripLeastSignificantOne",(function(){it("should strip the least significant one",(function(){l.equal(r.stripLeastSignificantOne(1),0),l.equal(r.stripLeastSignificantOne(6),4),l.equal(r.stripLeastSignificantOne(15),14),l.equal(r.stripLeastSignificantOne(16),0),l.equal(r.stripLeastSignificantOne(0),0),l.equal(r.stripLeastSignificantOne(24),16)}))})),describe("#mostSignificantOne",(function(){it("should keep the most significant one",(function(){l.equal(r.mostSignificantOne(1),1),l.equal(r.mostSignificantOne(6),4),l.equal(r.mostSignificantOne(15),8),l.equal(r.mostSignificantOne(16),16),l.equal(r.mostSignificantOne(24),16),l.equal(r.mostSignificantOne(0),0)}))})),describe("#cumulToValues",(function(){it("should convert cumulative array to regular values",(function(){l.deepEqual(r.cumulToValues([1,3,6,10]),[1,2,3,4]),l.deepEqual(r.cumulToValues([1,3,6,10,15,21]),[1,2,3,4,5,6]),l.deepEqual(r.cumulToValues([]),[])}))})),describe("#valuesToCumul",(function(){it("should convert value array to cumulative array",(function(){l.deepEqual(r.valuesToCumul([1,2,3,4]),[1,3,6,10]),l.deepEqual(r.valuesToCumul([1,2,3,4,5,6]),[1,3,6,10,15,21]),l.deepEqual(r.valuesToCumul([]),[])}))}));var e,n,t=[47,17,28,96,10,2,11,43,7,94,37,81,75,2,33,57,68,71,68,86,27,44,64,41,23],i=[722,106,637,881,752,940,989,295,344,716,283,609,482,268,884,782,628,778,442,456,171,821,346,367,12,46,582,164,876,421,749,357,586,319,847,79,649,353,545,353,609,865,229,476,697,579,109,935,412,286,701,712,288,45,990,176,775,143,187,241,721,691,162,460];function a(e,n){for(var t=0,l=0;t<=n;t++)l+=e[t];return l}before((function(){e=t.map((function(e,n){return a(t,n)})),n=i.map((function(e,n){return a(i,n)}))})),describe("BinaryIndexedTree class",(function(){it("should construct trees with zeroes",(function(){var e=new r;l.equal(e.size(),0),e.fillFromValues([0,0,0,0,0,0,0,0,0,0]);var n=new r(10);l.deepEqual(e,n)})),it("should convert from cumulative array and back",(function(){var a=new r;a.fillFromCumulative(e),l.equal(a.size(),25),l.deepEqual(a.toCumulativeArray(),e),l.deepEqual(a.toValueArray(),t),a.fillFromCumulative([]),l.equal(a.size(),0),l.deepEqual(a.toCumulativeArray(),[]),l.deepEqual(a.toValueArray(),[]),a.fillFromCumulative(n),l.equal(a.size(),64),l.deepEqual(a.toCumulativeArray(),n),l.deepEqual(a.toValueArray(),i)})),it("should convert from value array and back",(function(){var a=new r;a.fillFromValues(t),l.equal(a.size(),25),l.deepEqual(a.toCumulativeArray(),e),l.deepEqual(a.toValueArray(),t),a.fillFromValues([]),l.equal(a.size(),0),l.deepEqual(a.toCumulativeArray(),[]),l.deepEqual(a.toValueArray(),[]),a.fillFromValues(i),l.equal(a.size(),64),l.deepEqual(a.toCumulativeArray(),n),l.deepEqual(a.toValueArray(),i),a.fillFromValues([1,2,3,4,5]),l.equal(a.size(),5),l.deepEqual(a.toCumulativeArray(),[1,3,6,10,15]),l.deepEqual(a.toValueArray(),[1,2,3,4,5])})),it("should compute individual and cumulative values",(function(){var a,o=new r;for(o.fillFromValues(t),l.equal(o.size(),25),a=0;a<25;a++)l.equal(o.getValue(a),t[a]),l.equal(o.getCumulativeValue(a),e[a]),l.equal(o.getSumTo(a),e[a]-t[a]);for(l.equal(o.getTotal(),t.reduce((function(e,n){return e+n}))),o.fillFromValues(i),l.equal(o.size(),64),a=0;a<64;a++)l.equal(o.getValue(a),i[a]),l.equal(o.getCumulativeValue(a),n[a]),l.equal(o.getSumTo(a),n[a]-i[a]);l.equal(o.getTotal(),i.reduce((function(e,n){return e+n})))})),it("should compute cumulative range values",(function(){var a,o=new r;for(o.fillFromValues(t),l.equal(o.getCumulativeValueRange(0,t.length),o.getCumulativeValue(t.length-1)),a=1;a<25;a++)l.equal(o.getCumulativeValueRange(a,25),e[24]-e[a-1]);for(a=24;a>=0;a--)l.equal(o.getCumulativeValueRange(0,a+1),e[a]);for(o.fillFromValues(i),l.equal(o.getCumulativeValueRange(0,64),o.getCumulativeValue(63)),a=1;a<64;a++)l.equal(o.getCumulativeValueRange(a,64),n[63]-n[a-1]);for(a=63;a>=0;a--)l.equal(o.getCumulativeValueRange(0,a+1),n[a])})),it("should search by cumulative value",(function(){var e=new r;e.fillFromValues([1,2,3,4]),l.equal(e.getIndex(-1),0),l.equal(e.getIndex(0),0),l.equal(e.getIndex(1),0),l.equal(e.getIndex(2),1),l.equal(e.getIndex(3),1),l.equal(e.getIndex(4),2),l.equal(e.getIndex(5),2),l.equal(e.getIndex(6),2),l.equal(e.getIndex(7),3),l.equal(e.getIndex(8),3),l.equal(e.getIndex(9),3),l.equal(e.getIndex(10),3),l.equal(e.getIndex(11),4),e.fillFromValues(t),l.equal(e.getIndex(0),0),l.equal(e.getIndex(1),0),l.equal(e.getIndex(46.9),0),l.equal(e.getIndex(47),0),l.equal(e.getIndex(63),1),l.equal(e.getIndex(64),1),l.equal(e.getIndex(64.1),2),l.equal(e.getIndex(e.getCumulativeValue(5)),5),l.equal(e.getIndex(e.getCumulativeValue(20)),20),l.equal(e.getIndex(e.getCumulativeValue(24)),24),l.equal(e.getIndex(1e6),25)})),it("should support add and set",(function(){var e,n=new r(4);for(n.setValue(1,2),l.deepEqual(n.toValueArray(),[0,2,0,0]),n.setValue(3,4),l.deepEqual(n.toValueArray(),[0,2,0,4]),n.setValue(0,1),l.deepEqual(n.toValueArray(),[1,2,0,4]),n.addValue(2,1),l.deepEqual(n.toValueArray(),[1,2,1,4]),n.addValue(2,1),l.deepEqual(n.toValueArray(),[1,2,2,4]),n.addValue(2,1),l.deepEqual(n.toValueArray(),[1,2,3,4]),n.fillFromValues(t),e=0;e<t.length;e++)n.addValue(e,-t[e]);for(l.deepEqual(n.toValueArray(),t.map((function(){return 0}))),n.fillFromValues(t),e=t.length-1;e>=0;e--)n.addValue(e,t[e]);l.deepEqual(n.toValueArray(),t.map((function(e){return 2*e})))}))}))}))},36492:(e,n,t)=>{var l=t(20543),r=t(46571);describe("CircularArray",(function(){it("should lose old items",(function(){var e=new r(5);l.equal(e.maxLength,5),l.equal(e.length,0),e.push("a"),l.equal(e.get(0),"a"),e.push("b"),e.push("c"),l.equal(e.length,3),l.equal(e.get(2),"c"),l.deepEqual(e.getArray(),["a","b","c"]),e.push("d"),e.push("e"),l.equal(e.length,5),l.equal(e.get(4),"e"),l.deepEqual(e.getArray(),["a","b","c","d","e"]),e.push("f"),l.equal(e.length,5),l.equal(e.get(0),"b"),l.equal(e.get(4),"f"),l.deepEqual(e.getArray(),["b","c","d","e","f"]),e.push("g"),e.push("h"),e.push("i"),e.push("j"),l.equal(e.length,5),l.equal(e.get(0),"f"),l.equal(e.get(4),"j"),l.deepEqual(e.getArray(),["f","g","h","i","j"]),l.equal(e.maxLength,5)}))}))},57994:(e,n,t)=>{var l=t(20543),r=t(72604);function i(e,n){return new Array(n+1).join(e)}describe("MemBuffer",(function(){describe("#reserve",(function(){it("should reserve exponentially",(function(){var e=new r;l.equal(e.size(),0);for(var n="",t=e.reserved(),i=0,a=0;a<1e3;a++){var o="a".charCodeAt(0)+a%10;n+=String.fromCharCode(o),e.writeUint8(o),l.equal(e.size(),a+1),l.equal(e.toString(),n),l.ok(e.reserved()>=e.size()),e.reserved()!=t&&(t=e.reserved(),i++)}l.ok(i<10&&i>=2)})),it("should not realloc when it can move data",(function(){var e=new r;e.writeString(i("x",100)),l.equal(e.size(),100),l.ok(e.reserved()>=100&&e.reserved()<200);var n=e.makeConsumer(),t=e.readString(n,99);e.consume(n),l.equal(t,i("x",99)),l.equal(e.size(),1);var a=e.buffer;e.writeString(i("y",99)),l.strictEqual(e.buffer,a),l.equal(e.size(),100),l.ok(e.reserved()>=100&&e.reserved()<200),n=e.makeConsumer(),t=e.readString(n,100),e.consume(n),l.equal(t,"x"+i("y",99)),l.equal(e.size(),0),e.writeString(i("z",100)),l.strictEqual(e.buffer,a),l.equal(e.size(),100),l.equal(e.toString(),i("z",100)),e.writeString(i("w",100)),l.notStrictEqual(e.buffer,a),l.equal(e.size(),200),l.equal(e.toString(),i("z",100)+i("w",100))}))})),describe("#write",(function(){it("should append to the buffer",(function(){var e=new r;e.writeString("a"),e.writeString(i("x",100)),l.equal(e.toString(),"a"+i("x",100));var n=i("y",1e4);e.writeString(n),l.equal(e.toString(),"a"+i("x",100)+n)}))})),describe("#consume",(function(){it("should remove from start of buffer",(function(){var e=new r;e.writeString(i("x",90)),e.writeString(i("y",10)),l.equal(e.toString(),i("x",90)+i("y",10));var n=e.makeConsumer();l.equal(e.readString(n,1),"x"),l.equal(e.readString(n,90),i("x",89)+"y"),e.consume(n),l.equal(e.toString(),i("y",9)),l.throws((function(){e.readString(n,10)}),(function(e){return l.ok(e.needMoreData),!0})),l.equal(e.readString(n,9),i("y",9)),e.consume(n),l.equal(e.size(),0)})),it("should read large strings",(function(){var e=new r,n=i("y",1e4);e.writeString(n);var t=e.makeConsumer();l.equal(e.readString(t,1e4),n),e.consume(t),l.equal(e.size(),0)}))}))}))},21898:(e,n,t)=>{var l=t(2724),r=t(54156),i=t(36436).assert,a=t(83277),o=t(42976),u=Boolean(l.env.ENABLE_TIMING_TESTS);function s(e,n,t){return e.splice.apply(e,[n,0].concat(t)),e}function c(e,n,t){var l=t.length;if(1===l)e.splice(n,0,t[0]);else if(l>1){var r,i,a=e.slice(n);for(r=0;r<l;r++,n++)e[n]=t[r];for(r=0,i=a.length;r<i;r++,n++)e[n]=a[r]}return e}function d(e){var n=e.copyForward;return function(e,t,l){var r=e.slice(t),i=l.length;return n(e,t,l,0,i),n(e,t+i,r,0,r.length),e}}function p(e){var n=e.copyForward,t=e.copyBackward;return function(e,l,r){var i=r.length;return t(e,l+i,e,l,e.length-l),n(e,l,r,0,i),e}}function f(e){var n=e.append,t=e.copyForward,l=e.copyBackward;return function(e,r,i){var a=e.length,o=a-r,u=i.length;return u>o?(n(e,i,o,u-o),n(e,e,r,o),t(e,r,i,0,o)):(n(e,e,a-u,u),l(e,r+u,e,r,o-u),t(e,r,i,0,u)),e}}function h(e){var n=e.append;return function(e,t,l){var r=e.splice(t,e.length);return n(e,l,0,l.length),n(e,r,0,r.length),e}}var m={gutil:a.arrayCopyForward,copyForward1:function(e,n,t,l,r){for(var i=n+r;n<i;++n,++l)e[n]=t[l]},copyForward8:function(e,n,t,l,r){for(var i=n+r,a=i-7;n<a;l+=8,n+=8)e[n]=t[l],e[n+1]=t[l+1],e[n+2]=t[l+2],e[n+3]=t[l+3],e[n+4]=t[l+4],e[n+5]=t[l+5],e[n+6]=t[l+6],e[n+7]=t[l+7];for(;n<i;++l,++n)e[n]=t[l]},copyForward64:function(e,n,t,l,r){for(var i=n+r,a=i-63;n<a;l+=64,n+=64)e[n]=t[l],e[n+1]=t[l+1],e[n+2]=t[l+2],e[n+3]=t[l+3],e[n+4]=t[l+4],e[n+5]=t[l+5],e[n+6]=t[l+6],e[n+7]=t[l+7],e[n+8]=t[l+8],e[n+9]=t[l+9],e[n+10]=t[l+10],e[n+11]=t[l+11],e[n+12]=t[l+12],e[n+13]=t[l+13],e[n+14]=t[l+14],e[n+15]=t[l+15],e[n+16]=t[l+16],e[n+17]=t[l+17],e[n+18]=t[l+18],e[n+19]=t[l+19],e[n+20]=t[l+20],e[n+21]=t[l+21],e[n+22]=t[l+22],e[n+23]=t[l+23],e[n+24]=t[l+24],e[n+25]=t[l+25],e[n+26]=t[l+26],e[n+27]=t[l+27],e[n+28]=t[l+28],e[n+29]=t[l+29],e[n+30]=t[l+30],e[n+31]=t[l+31],e[n+32]=t[l+32],e[n+33]=t[l+33],e[n+34]=t[l+34],e[n+35]=t[l+35],e[n+36]=t[l+36],e[n+37]=t[l+37],e[n+38]=t[l+38],e[n+39]=t[l+39],e[n+40]=t[l+40],e[n+41]=t[l+41],e[n+42]=t[l+42],e[n+43]=t[l+43],e[n+44]=t[l+44],e[n+45]=t[l+45],e[n+46]=t[l+46],e[n+47]=t[l+47],e[n+48]=t[l+48],e[n+49]=t[l+49],e[n+50]=t[l+50],e[n+51]=t[l+51],e[n+52]=t[l+52],e[n+53]=t[l+53],e[n+54]=t[l+54],e[n+55]=t[l+55],e[n+56]=t[l+56],e[n+57]=t[l+57],e[n+58]=t[l+58],e[n+59]=t[l+59],e[n+60]=t[l+60],e[n+61]=t[l+61],e[n+62]=t[l+62],e[n+63]=t[l+63];for(;n<i;++l,++n)e[n]=t[l]}},b={gutil:a.arrayCopyBackward,copyBackward1:function(e,n,t,l,r){for(var i=n+r-1,a=l+r-1;i>=n;--i,--a)e[i]=t[a]},copyBackward8:function(e,n,t,l,r){for(var i=n+r-1,a=l+r-1,o=n+7;i>=o;i-=8,a-=8)e[i]=t[a],e[i-1]=t[a-1],e[i-2]=t[a-2],e[i-3]=t[a-3],e[i-4]=t[a-4],e[i-5]=t[a-5],e[i-6]=t[a-6],e[i-7]=t[a-7];for(;i>=n;--i,--a)e[i]=t[a]},copyBackward64:function(e,n,t,l,r){for(var i=n+r-1,a=l+r-1,o=n+63;i>=o;i-=64,a-=64)e[i]=t[a],e[i-1]=t[a-1],e[i-2]=t[a-2],e[i-3]=t[a-3],e[i-4]=t[a-4],e[i-5]=t[a-5],e[i-6]=t[a-6],e[i-7]=t[a-7],e[i-8]=t[a-8],e[i-9]=t[a-9],e[i-10]=t[a-10],e[i-11]=t[a-11],e[i-12]=t[a-12],e[i-13]=t[a-13],e[i-14]=t[a-14],e[i-15]=t[a-15],e[i-16]=t[a-16],e[i-17]=t[a-17],e[i-18]=t[a-18],e[i-19]=t[a-19],e[i-20]=t[a-20],e[i-21]=t[a-21],e[i-22]=t[a-22],e[i-23]=t[a-23],e[i-24]=t[a-24],e[i-25]=t[a-25],e[i-26]=t[a-26],e[i-27]=t[a-27],e[i-28]=t[a-28],e[i-29]=t[a-29],e[i-30]=t[a-30],e[i-31]=t[a-31],e[i-32]=t[a-32],e[i-33]=t[a-33],e[i-34]=t[a-34],e[i-35]=t[a-35],e[i-36]=t[a-36],e[i-37]=t[a-37],e[i-38]=t[a-38],e[i-39]=t[a-39],e[i-40]=t[a-40],e[i-41]=t[a-41],e[i-42]=t[a-42],e[i-43]=t[a-43],e[i-44]=t[a-44],e[i-45]=t[a-45],e[i-46]=t[a-46],e[i-47]=t[a-47],e[i-48]=t[a-48],e[i-49]=t[a-49],e[i-50]=t[a-50],e[i-51]=t[a-51],e[i-52]=t[a-52],e[i-53]=t[a-53],e[i-54]=t[a-54],e[i-55]=t[a-55],e[i-56]=t[a-56],e[i-57]=t[a-57],e[i-58]=t[a-58],e[i-59]=t[a-59],e[i-60]=t[a-60],e[i-61]=t[a-61],e[i-62]=t[a-62],e[i-63]=t[a-63];for(;i>=n;--i,--a)e[i]=t[a]}},g={gutil:a.arrayAppend,append1:function(e,n,t,l){for(var r=t+l,i=t;i<r;i++)e.push(n[i])},appendCopy1:function(e,n,t,l){if(1===l)e.push(n[t]);else if(l>1){var r=e.length;e.length=r+l,m.copyForward1(e,r,n,t,l)}},append8:function(e,n,t,l){for(var r=t+l,i=r-7;t<i;t+=8)e.push(n[t],n[t+1],n[t+2],n[t+3],n[t+4],n[t+5],n[t+6],n[t+7]);for(;t<r;++t)e.push(n[t])},append64:function(e,n,t,l){for(var r=t+l,i=r-63;t<i;t+=64)e.push(n[t],n[t+1],n[t+2],n[t+3],n[t+4],n[t+5],n[t+6],n[t+7],n[t+8],n[t+9],n[t+10],n[t+11],n[t+12],n[t+13],n[t+14],n[t+15],n[t+16],n[t+17],n[t+18],n[t+19],n[t+20],n[t+21],n[t+22],n[t+23],n[t+24],n[t+25],n[t+26],n[t+27],n[t+28],n[t+29],n[t+30],n[t+31],n[t+32],n[t+33],n[t+34],n[t+35],n[t+36],n[t+37],n[t+38],n[t+39],n[t+40],n[t+41],n[t+42],n[t+43],n[t+44],n[t+45],n[t+46],n[t+47],n[t+48],n[t+49],n[t+50],n[t+51],n[t+52],n[t+53],n[t+54],n[t+55],n[t+56],n[t+57],n[t+58],n[t+59],n[t+60],n[t+61],n[t+62],n[t+63]);for(;t<r;++t)e.push(n[t])},appendSlice64:function(e,n,t,l){for(var r=t+l;t<r;t+=64)Array.prototype.push.apply(e,n.slice(t,Math.min(t+64,r)))}},M={copyForward:m.copyForward1,copyBackward:b.copyBackward1,append:g.append1},y={copyForward:m.copyForward8,copyBackward:b.copyBackward8,append:g.append8},v={copyForward:m.copyForward64,copyBackward:b.copyBackward64,append:g.append64},A={spliceApplyConcat:s,spliceApplyUnshift:function(e,n,t){var l=t;l.unshift(n,0);try{e.splice.apply(e,l)}finally{l.splice(0,2)}return e},nonSpliceUsingSlice:function(e,n,t){return e.slice(0,n).concat(t,e.slice(n))},spliceGutil:a.arraySplice,spliceManualWithTailCopy:c,spliceCopyWithTail1:d(M),spliceCopyWithTail8:d(y),spliceCopyWithTail64:d(v),spliceFwdBackCopy1:p(M),spliceFwdBackCopy8:p(y),spliceFwdBackCopy64:p(v),spliceAppendCopy1:f(M),spliceAppendCopy8:f(y),spliceAppendCopy64:f(v),spliceAppendOnly1:h(M),spliceAppendOnly8:h(y),spliceAppendOnly64:h(v)},w={spliceGutil:a.arraySplice,spliceManualWithTailCopy:c,spliceCopyWithTail1:d(M),spliceAppendCopy1:f(M),spliceAppendCopy8:f(y),spliceAppendCopy64:f(v)};describe("array copy functions",(function(){it("copyForward should copy correctly",(function(){r.each(m,(function(e,n){var t=r.range(1e4);e(t,0,t,1,9999),e(t,0,t,1,9999),i.equal(t[0],2),i.equal(t[1],3),i.equal(t[9996],9998),i.equal(t[9997],9999),i.equal(t[9998],9999),i.equal(t[9999],9999)}))})),it("copyBackward should copy correctly",(function(){r.each(b,(function(e,n){var t=r.range(1e4);e(t,1,t,0,9999),e(t,1,t,0,9999),i.equal(t[0],0),i.equal(t[1],0),i.equal(t[2],0),i.equal(t[3],1),i.equal(t[9998],9996),i.equal(t[9999],9997)}))})),it("arrayAppend should append correctly",(function(){r.each(g,(function(e,n){var t=[],l=r.range(2e4);e(t,l,100,1),e(t,l,100,1e3),e(t,l,100,1e4),i.deepEqual(t.slice(0,4),[100,100,101,102]),i.deepEqual(t.slice(1e3,1004),[1099,100,101,102]),i.deepEqual(t.slice(11e3),[10099])}))})),u&&describe("timing",(function(){var e=r.range(1e6);describe("copyForward",(function(){r.each(m,(function(n,t){var l=e.slice(0);it(t,(function(){o.repeat(40,n,l,0,l,1,999999),i.deepEqual(l.slice(0,10),r.range(40,50)),i.equal(l[999958],999998),i.equal(l[999959],999999),i.deepEqual(l.slice(999960),r.times(40,r.constant(999999)))}))}))})),describe("copyBackward",(function(){r.each(b,(function(n,t){var l=e.slice(0);it(t,(function(){o.repeat(40,n,l,1,l,0,999999),i.deepEqual(l.slice(0,40),r.times(40,r.constant(0))),i.equal(l[40],0),i.equal(l[41],1),i.deepEqual(l.slice(999990),r.range(999950,999960))}))}))})),describe("append",(function(){var e=r.range(1e6);function n(e,n,t){for(var l=[],r=n.length/t,i=0;i<r;i++)e(l,n,i*t,t);return l}r.each(g,(function(t,l){it(l,(function(){var l=n(t,e,1),r=n(t,e,1e3),a=n(t,e,1e6);i.deepEqual(l.slice(0,10),e.slice(0,10)),i.deepEqual(l.slice(e.length-10),e.slice(e.length-10)),i.deepEqual(r.slice(0,10),e.slice(0,10)),i.deepEqual(r.slice(e.length-10),e.slice(e.length-10)),i.deepEqual(a.slice(0,10),e.slice(0,10)),i.deepEqual(a.slice(e.length-10),e.slice(e.length-10))}))}))}))}))})),describe("arraySplice",(function(){var e=s;it("all candidate functions should be correct for simpler cases",(function(){r.each(A,(function(n,t){var l=r.range(10),a=r.range(100);function o(l,r,a){i.deepEqual(n(l.slice(0),r,a),e(l.slice(0),r,a),"splice function incorrect for "+t)}o(l,5,a),o(a,50,l),o(a,90,l),o(a,0,l),o(a,100,l),o(l,0,a),o(l,10,a),o(l,1,l),o(l,5,l),o(l,5,[]),i.deepEqual(n(l.slice(0),5,l),[0,1,2,3,4,0,1,2,3,4,5,6,7,8,9,5,6,7,8,9])}))})),u&&describe("timing",(function(){var e=r.range(1),n=r.range(1e3),t=r.range(1e6);describe("insert-one",(function(){r.each(w,(function(n,l){var r=t.slice(0);it(l,(function(){o.repeat(40,n,r,5e5,e)}))}))})),describe("insert-1k",(function(){r.each(w,(function(e,l){var r=t.slice(0);it(l,(function(){o.repeat(40,e,r,5e5,n)}))}))})),describe("insert-1m",(function(){r.each(w,(function(e,n){var l=t.slice(0);it(n,(function(){o.repeat(4,e,l,5e5,t)}))}))}))}))}))},91561:(e,n,t)=>{var l=t(36436).assert,r=t(83277),i=t(54156);describe("gutil",(function(){describe("mapToObject",(function(){it("should produce an object with all keys",(function(){l.deepEqual(r.mapToObject(["foo","bar","baz"],(function(e,n){return[e.toUpperCase(),n]})),{foo:["FOO",0],bar:["BAR",1],baz:["BAZ",2]}),l.deepEqual(r.mapToObject(["foo","bar","baz"],(function(){})),{foo:void 0,bar:void 0,baz:void 0})})),it("should work on an empty array",(function(){var e=0;l.deepEqual(r.mapToObject([],(function(){e++})),{}),l.equal(e,0)})),it("should override values for duplicate keys",(function(){l.deepEqual(r.mapToObject(["foo","bar","foo"],(function(e,n){return n})),{foo:2,bar:1})}))})),describe("multiCompareFunc",(function(){var e={0:"John",1:"John",2:"John",3:"John",4:"Johnson",5:"Johnson"},n={0:"Smith",1:"Smith",2:"Smith",3:"Smithy",4:"Smithy",5:"Smith"},t={0:20,1:30,2:21,3:31,4:40,5:50};it("should do single comparisons",(function(){var n=[i.propertyOf(e)],t=r.multiCompareFunc(n,[r.nativeCompare],[1]),a=r.multiCompareFunc(n,[r.nativeCompare],[-1]);l.equal(t(0,1),0),l.equal(a(0,1),0),l.isBelow(t(0,4),0),l.isAbove(t(4,0),0),l.isAbove(a(0,4),0),l.isBelow(a(4,0),0)})),it("should do multiple comparisons",(function(){var a=[i.propertyOf(e),i.propertyOf(n)],o=[i.propertyOf(e),i.propertyOf(n),i.propertyOf(t)],u=r.multiCompareFunc(a,[r.nativeCompare,r.nativeCompare],[1,1]),s=r.multiCompareFunc(o,[r.nativeCompare,r.nativeCompare,r.nativeCompare],[1,1,-1]);l.equal(u(0,1),0),l.equal(u(1,2),0),l.isBelow(u(0,3),0),l.isBelow(u(0,4),0),l.isBelow(u(0,5),0),l.isAbove(s(0,1),0),l.isBelow(s(1,2),0),l.isBelow(s(0,3),0),l.isBelow(s(0,4),0),l.isBelow(s(3,4),0),l.isAbove(s(4,5),0)}))})),describe("deepExtend",(function(){var e={a:1,b:"hello",c:[1,2,3],d:{e:1,f:2}};it("should copy recursively",(function(){l.deepEqual(r.deepExtend({},{}),{}),l.deepEqual(r.deepExtend({},e),e),l.deepEqual(r.deepExtend({},e,{}),e),l.deepEqual(r.deepExtend({},e,e),e),l.deepEqual(r.deepExtend({},e,{a:2}).a,2),l.deepEqual(r.deepExtend({},e,{d:{g:3}}).d,{e:1,f:2,g:3}),l.deepEqual(r.deepExtend({c:[4,5,6,7],d:{g:3}},e).d,{e:1,f:2,g:3}),l.deepEqual(r.deepExtend({c:[4,5,6,7],d:{g:3}},e).c,[1,2,3,7])}))})),describe("maxsplit",(function(){it("should respect maxNumSplits parameter",(function(){l.deepEqual(r.maxsplit("foo bar baz"," ",0),["foo bar baz"]),l.deepEqual(r.maxsplit("foo bar baz"," ",1),["foo","bar baz"]),l.deepEqual(r.maxsplit("foo bar baz"," ",2),["foo","bar","baz"]),l.deepEqual(r.maxsplit("foo bar baz"," ",3),["foo","bar","baz"]),l.deepEqual(r.maxsplit("foo<x>bar<x>baz","<x>",1),["foo","bar<x>baz"])}))})),describe("arrayInsertBefore",(function(){it("should insert before the given nextValue",(function(){var e=["foo","bar","baz"];r.arrayInsertBefore(e,"asdf","foo"),l.deepEqual(e,["asdf","foo","bar","baz"]),r.arrayInsertBefore(e,"hello","baz"),l.deepEqual(e,["asdf","foo","bar","hello","baz"]),r.arrayInsertBefore(e,"zoo","unknown"),l.deepEqual(e,["asdf","foo","bar","hello","baz","zoo"])}))})),describe("popFromMap",(function(){it("should return the value for the popped key",(function(){var e=new Map([["foo",1],["bar",2],["baz",3]]);l.equal(r.popFromMap(e,"bar"),2),l.deepEqual(Array.from(e),[["foo",1],["baz",3]]),l.strictEqual(r.popFromMap(e,"unknown"),void 0),l.deepEqual(Array.from(e),[["foo",1],["baz",3]])}))})),describe("isSubset",(function(){it("should determine the subset relationship for Sets",(function(){let e=new Set,n=new Set([1]),t=new Set([2,3]),i=new Set([1,2,3]);l.isTrue(r.isSubset(e,n)),l.isFalse(r.isSubset(n,e)),l.isTrue(r.isSubset(n,i)),l.isFalse(r.isSubset(n,t)),l.isTrue(r.isSubset(t,i)),l.isTrue(r.isSubset(t,t)),l.isTrue(r.isSubset(i,i)),l.isFalse(r.isSubset(i,t))}))})),describe("growMatrix",(function(){it("should grow the matrix to the desired size",(function(){let e=[["a",1],["b",2],["c",3]];l.deepEqual(r.growMatrix(e,4,4),[["a",1,"a",1],["b",2,"b",2],["c",3,"c",3],["a",1,"a",1]]),l.deepEqual(r.growMatrix(e,3,4),[["a",1,"a",1],["b",2,"b",2],["c",3,"c",3]]),l.deepEqual(r.growMatrix(e,6,2),[["a",1],["b",2],["c",3],["a",1],["b",2],["c",3]])}))})),describe("sortedScan",(function(){it("should callback on the correct items for simple arrays",(function(){let e=[];r.sortedScan([1,2,4,5,7,8,9,10,11,15,17],[2,3,4,5,9,11,19],((n,t)=>{e.push([n,t])})),l.deepEqual(e,[[1,null],[2,2],[null,3],[4,4],[5,5],[7,null],[8,null],[9,9],[10,null],[11,11],[15,null],[17,null],[null,19]])})),it("should callback on the correct items for object arrays",(function(){const e=[{id:1,fruit:"apple"},{id:2,fruit:"banana"},{id:4,fruit:"orange"},{id:5,fruit:"peach"},{id:6,fruit:"plum"}],n=[{id:2,fruit:"apple"},{id:3,fruit:"avocado"},{id:4,fruit:"peach"},{id:6,fruit:"pear"},{id:9,fruit:"plum"},{id:10,fruit:"raspberry"}];let t=[];r.sortedScan(e,n,((e,n)=>{t.push([e?e.fruit:"",n?n.fruit:""])}),(e=>e.id)),l.deepEqual(t,[["apple",""],["banana","apple"],["","avocado"],["orange","peach"],["peach",""],["plum","pear"],["","plum"],["","raspberry"]]);let i=[];r.sortedScan(e,n,((e,n)=>{i.push([e?e.id:0,n?n.id:0])}),(e=>e.fruit)),l.deepEqual(i,[[1,2],[0,3],[2,0],[4,0],[5,4],[0,6],[6,9],[0,10]])}))})),describe("isEmail",(function(){it("should distinguish valid and invalid emails",(function(){l.isTrue(r.isEmail("email@domain.com")),l.isTrue(r.isEmail("e-mail_123@domain.com")),l.isTrue(r.isEmail("email@subdomain.do-main.com")),l.isTrue(r.isEmail("firstname+lastname@domain.com")),l.isTrue(r.isEmail("email@domain.co.jp")),l.isFalse(r.isEmail("plainaddress")),l.isFalse(r.isEmail("@domain.com")),l.isFalse(r.isEmail("email@domain@domain.com")),l.isFalse(r.isEmail(".email@domain.com")),l.isFalse(r.isEmail("email.@domain.com")),l.isFalse(r.isEmail("email..email@domain.com")),l.isFalse(r.isEmail("あいうえお@domain.com")),l.isFalse(r.isEmail("email@domain"))}))}))}))},75849:(e,n,t)=>{var l=t(36436).assert,r=t(46649),i=t(72604);describe("marshal",(function(){function e(e){for(var n=new Uint8Array(e.length),t=0;t<e.length;t++)n[t]=e.charCodeAt(t);return n}function n(e){return String.fromCharCode.apply(String,e)}var t=[[null,"N"],[1,"i\0\0\0"],[1e6,"i@B\0"],[-123456,"iÀþÿ"],[1.23,"g®Gáz®ó?",2],[-.0625,"g\0\0\0\0\0\0°¿",2],[12.34,"f12.34",0],[602e21,"f\b6.02e+23",0],[!0,"T"],[!1,"F"],[i.stringToArray("Hello world"),"s\v\0\0\0Hello world"],["Résumé","s\b\0\0\0RÃ©sumÃ©"],[[1,2,3],"[\0\0\0i\0\0\0i\0\0\0i\0\0\0"],[{This:4,is:0,a:i.stringToArray("test")},"{s\0\0\0Thisi\0\0\0s\0\0\0as\0\0\0tests\0\0\0isi\0\0\0\x000"]];function a(e){return new Uint8Array(e)}function o(e,n){var t=new r.Marshaller;return t.marshal(r.wrap(e,n)),t.dump()}describe("basic data structures",(function(){it("should serialize correctly",(function(){for(var i=new r.Marshaller({stringToBuffer:!0,version:0}),a=new r.Marshaller({stringToBuffer:!0,version:2}),o=0;o<t.length;o++){var u=t[o][0],s=e(t[o][1]),c=(3===t[o].length?t[o][2]:0)>=2?a:i;c.marshal(u);var d=c.dump();l.deepEqual(d,s,"Wrong serialization of "+JSON.stringify(u)+"\n        actual: "+escape(n(d))+"\n\n      expected: "+escape(n(s)))}})),it("should deserialize correctly",(function(){var n=new r.Unmarshaller,a=[];n.on("value",(function(e){a.push(e)}));for(var o=0;o<t.length;o++){a.length=0;var u=t[o][0];n.push(e(t[o][1])),l.strictEqual(a.length,1);var s=a[0];"string"==typeof u&&(s=i.arrayToString(s)),l.deepEqual(s,u)}})),it("should support stringToBuffer and bufferToString",(function(){var e=new r.Marshaller({stringToBuffer:!0}),n=new r.Marshaller({stringToBuffer:!1}),t=new r.Unmarshaller({bufferToString:!0}),a=new r.Unmarshaller({bufferToString:!1}),o=i.stringToArray("hello");function u(e,n,t){var l=null;return n.on("value",(function(e){l=e})),e.marshal(t),n.push(e.dump()),l}l.deepEqual(u(n,a,"hello"),"hello"),l.deepEqual(u(n,a,o),o),l.deepEqual(u(n,t,"hello"),"hello"),l.deepEqual(u(n,t,o),"hello"),l.deepEqual(u(e,a,"hello"),o),l.deepEqual(u(e,a,o),o),l.deepEqual(u(e,t,"hello"),"hello"),l.deepEqual(u(e,t,o),"hello")}))})),describe("int64",(function(){it("should serialize 32-bit values correctly",(function(){l.deepEqual(o("INT64",2147483647),a([73,255,255,255,127,0,0,0,0])),l.deepEqual(o("INT64",-2147483648),a([73,0,0,0,128,255,255,255,255])),l.throws((function(){o("INT64",2147483648)}),/int64/),l.throws((function(){o("INT64",-2147483649)}),/int64/)})),it("should deserialize 32-bit values correctly",(function(){l.strictEqual(r.loads([73,255,255,255,127,0,0,0,0]),2147483647),l.strictEqual(r.loads([73,0,0,0,128,255,255,255,255]),-2147483648),l.strictEqual(r.loads([73,255,255,255,127,255,255,255,255]),-2147483649),l.strictEqual(r.loads([73,0,0,0,128,0,0,0,0]),2147483648),l.strictEqual(r.loads([73,1,2,3,190,4,5,6,200]),"-4033530898337824255"),l.strictEqual(r.loads([73,1,2,3,190,4,5,6,20]),"1442846248544698881"),l.strictEqual(r.loads([73,1,2,3,90,4,5,6,200]),"-4033530900015545855"),l.strictEqual(r.loads([73,1,2,3,90,4,5,6,20]),"1442846246866977281")}))})),describe("interned strings",(function(){it("should parse interned strings correctly",(function(){l.deepEqual(r.loads(e("{t\0\0\0aaat\0\0\0bbbR\0\0\0R\0\0\0\x000")),{aaa:i.stringToArray("bbb"),bbb:i.stringToArray("aaa")})}))})),describe("longs",(function(){const n=[1,991,982081,973242271,964483090561,955802742745951,"947200518061237441","938675713398686304031","930227631978098127294721","921855583290295244149068511",-1,-678,-459684,-311665752,-211309379856,-0x824d1fea5060,"-97135540969725504","-65857896777473891712","-44651654015127298580736","-30273821422256308437739008"];it("should deserialize arbitrarily long integers correctly",(function(){l.deepEqual(r.loads(e("[\0\0\0i\0\0\0iß\0\0iAü\0i:I\b¬à\0\0\0I_ëô*Le\0IÁ$JÚ!%\rl\0\0\0G&>0ð.l\0\0\0Q@nm»O\0l\0\0\0ß3/Ðr4(Q_iÿÿÿÿiZýÿÿi\\üøÿi¨[líIð¾úÌÎÿÿÿI ¯à²}ÿÿIÀ!oy½ç¦þlûÿÿÿYGÁ\0²9\0lúÿÿÿ\0!Rv\0pI\0lúÿÿÿ\0fÚ]'£.²+!")),n)}))}))}))},30164:(e,n,t)=>{var l,r,i=t(2724),a=t(36436).assert,o=t(74392);function u(e,n,t){var l=n.reps||1,r=n.fudgeFactor||1,i=n.expectedUs,o=n.noLowerBound,u=it(e+" should take ~"+i+"us (up to x"+r+")",(function(e){var n=0,c=1/0;function d(d){try{if(c=Math.min(c,d),n++<l)return void t(p);a(c<=i*r,"Time of "+c+"us is longer than expected ("+i+") by more than fudge factor of "+r),o||a(c>=i/r,"Time of "+c+"us is shorter than expected ("+i+") by more than fudge factor of "+r),s(u,c),e()}catch(n){s(u,c),e(n)}}function p(e){setTimeout(d,0,e)}p(1/0)}))}function s(e,n){var t=n>10?n.toFixed(0):n.toPrecision(2);e.title=e.title.replace(/( \[got [^]]*us\])?$/," [got "+t+"us]")}o.config({longStackTraces:!1}),void 0!==i&&void 0!==i.hrtime?(l=function(){return i.hrtime()},r=function(e){var n=i.hrtime(e);return 1e6*n[0]+n[1]/1e3}):(l=function(){return Date.now()},r=function(e){return 1e3*(Date.now()-e)}),describe("promises",(function(){function e(e){return e+2}before((function(){i.env.ENABLE_TIMING_TESTS||this.skip()})),u("simple calls",{reps:3,expectedUs:.005,fudgeFactor:10,noLowerBound:!0},(function(n){for(var t=1e7,i=l(),o=0,u=0;u<t;u++)o=e(o);var s=r(i)/t;a.equal(o,2e7),n(s)}));var n,t,s,c,d=Boolean(i.version);function p(e,n,t){var i=t.iters;u("timing of "+n,t,(function(n){var t=0,o=l();!function l(){if(t<i)e(l),t++;else{var u=r(o)/i;a.equal(t,i),n(u)}}()}))}n=o,t=function(){a.isFalse(o.hasLongStackTraces(),"longStackTraces should be off")},c=(s={iters:2e4,reps:3,expectedUs:d?.3:1,fudgeFactor:8}).iters,u("bluebird (no long traces) chain",s,(function(i){t();for(var o=l(),u=n.resolve(0),s=0;s<c;s++)u=u.then(e);var d=!1;u.then((function(e){var n=r(o)/c;d=!0,a.equal(e,2*c),i(n)})),a.equal(d,!1)})),i.maxTickDepth&&p(i.nextTick,"process.nextTick",{iters:9*i.maxTickDepth/10,reps:20,expectedUs:.1,fudgeFactor:4}),"undefined"!=typeof setImmediate&&p(setImmediate,"setImmediate",{iters:100,reps:10,expectedUs:2,fudgeFactor:4})}))},91013:(e,n,t)=>{var l=t(54156),r=t(20543),i=t(97602),a=t(42976),o=t(46649);describe("Serialization",(function(){function e(e){var n,t=new o.Unmarshaller({bufferToString:!0});return t.on("value",(function(e){n=e})),t.push(e),t.removeAllListeners(),n}var n={marshal_v0:{enc:function(e){var n=new o.Marshaller({stringToBuffer:!0,version:0});return n.marshal(e),n.dump()},dec:e},marshal_v2:{enc:function(e){var n=new o.Marshaller({stringToBuffer:!0,version:2});return n.marshal(e),n.dump()},dec:e},json:{enc:JSON.stringify,dec:JSON.parse}};describe("correctness",(function(){var e;before((function(){var n=new i(1274323391);e={floats1k:n.n(n.floating,1e3),strings1k:n.n(n.string,1e3)}})),l.each(n,(function(n,t){it(t,(function(){r.deepEqual(n.dec(n.enc(e.floats1k)),e.floats1k),r.deepEqual(n.dec(n.enc(e.strings1k)),e.strings1k)}))}))})),a.timing.describe("timings",(function(){var e,t={},o={};function u(t,l,r){a.timing.it(r,"encodes "+l+" with "+t,(function(){a.repeat(5,n[t].enc,e[l])}))}function s(e,l,r){a.timing.it(r,"decodes "+l+" with "+e,(function(){var r=a.repeat(5,n[e].dec,t[l+":"+e]);o[l+":"+e]=r}))}before((function(){this.timeout(1e4);var r=new i(1274323391);e={floats100k:r.n(r.floating,1e5),strings100k:r.n(r.string,1e5)},l.each(e,(function(e,r){l.each(n,(function(n,l){t[r+":"+l]=n.enc(e)}))}))})),after((function(){l.each(o,(function(n,t){var l=t.split(":")[0];r.deepEqual(n,e[l],"wrong result decoding "+t)}))})),u("marshal_v0","floats100k",1600),s("marshal_v0","floats100k",600),u("marshal_v0","strings100k",1e3),s("marshal_v0","strings100k",800),u("marshal_v2","floats100k",160),s("marshal_v2","floats100k",160),u("marshal_v2","strings100k",1e3),s("marshal_v2","strings100k",800),u("json","floats100k",120),s("json","floats100k",120),u("json","strings100k",80),s("json","strings100k",80)}))}))},38641:(e,n,t)=>{var l=t(20543),{timeFormat:r}=t(85550);describe("timeFormat",(function(){var e=new Date(2014,3,4,22,28,16,123);it("should format date",(function(){l.equal(r("Y",e),"20140404"),l.equal(r("D",e),"2014-04-04")})),it("should format time",(function(){l.equal(r("T",e),"22:28:16"),l.equal(r("T + M",e),"22:28:16 + 123")})),it("should format date and time",(function(){l.equal(r("A",e),"2014-04-04 22:28:16.123")}))}))},42976:(e,n,t)=>{var l=t(2724),r=t(54156),i=t(97602),a=t(36436).assert;function o(e,n,t,l,r,i){this.last=e,this.first=n,this.age=t,this.year=l,this.month=r,this.day=i}n.mod=function(e){return function(n){return n%e}},n.time=function(e,n,t,l){var i,a;console.assert(l.iters>0,"Number of iterations must be greater than 0");for(var o=0,u=0;u<l.iters;u++)a=r.clone(n),i=Date.now(),e.apply(a,t),o+=Date.now()-i;return l.avg?o/l.iters:o},n.repeat=function(e,n,t){for(var l,r=Array.prototype.slice.call(arguments,2),i=0;i<e;i++)l=n.apply(null,r);return l},n.timing={describe:function(e,n){function t(){n();var e=[];afterEach((function(){e.push(this.currentTest)})),after((function(){e.forEach((function(e){e.expectedDuration&&a.isBelow(e.duration,1.5*e.expectedDuration,"Test took longer than expected")}))}))}return(l.browser?-1!==location.search.substr(1).split("&").indexOf("timing=1"):l.env.ENABLE_TIMING_TESTS)?describe(e,t):describe.skip(e+" (skipping timing test)",t)},it:function(e,n,t){var l=it(n+" (exp ~"+e+"ms)",t);l.slow(1.5*e),l.timeout(5*e+2e3),l.expectedDuration=e}},n.genPeople=function(e,n){void 0===n&&(n=0);for(var t={min:0,max:90},l={min:1,max:12},r={min:1,max:30},a=[],u=new i(n),s=0;s<e;s++)a.push(new o(u.last(),u.first(),u.integer(t),parseInt(u.year()),u.integer(l),u.integer(r)));return a},n.genItems=function(e,n,t,l){void 0===l&&(l=0),console.assert("function"==typeof(new i)[e]);for(var r=new i(l),a=[],o=0;o<n;o++)a.push(r[e](t));return a}},96212:(e,n,t)=>{"use strict";t.r(n),t(83277);var l=t(1310);function r(){return null!=i||(i=o("localStorage")||(null!=a||(a=o("sessionStorage")||function(){const e=new Map;return{setItem(n,t){e.set(n,t)},getItem(n){var t;return null!=(t=e.get(n))?t:null},removeItem(n){e.delete(n)},clear(){e.clear()},get length(){return e.size},key(e){throw new Error("Not implemented")}}}()),a)),i}let i,a;function o(e){try{const n="__localStorage_test",t=window[e];t.setItem(n,n);const l=t.getItem(n)===n;if(t.removeItem(n),l)return t}catch(e){}return console.warn(`${e} is not available; will use fallback`),null}function u(e,n=!1){return function(e,n,t){const r=t?"false":"true",i=l.Observable.create(null,e.getItem(n)===r?!t:t);return i.addListener((l=>l===t?e.removeItem(n):e.setItem(n,r))),i}(r(),e,n)}function s(e,n){return function(e,n,t){var r,i;const a=l.Observable.create(null,null!=(i=null!=(r=e.getItem(n))?r:t)?i:null);return a.addListener((t=>null===t?e.removeItem(n):e.setItem(n,t))),a}(r(),e,n)}var c=t(36436),d=t(79118);describe("localStorageObs",(function(){(0,d.setTmpMochaGlobals)(),before((()=>"undefined"!=typeof localStorage?localStorage.clear():null)),it("should persist localStorageObs values",(async function(){const e=s("localStorageObs-foo"),n=s("localStorageObs-bar");c.assert.strictEqual(e.get(),null),e.set("123"),n.set("456"),c.assert.strictEqual(e.get(),"123"),c.assert.strictEqual(n.get(),"456");const t=s("localStorageObs-foo"),l=s("localStorageObs-bar");c.assert.strictEqual(t.get(),"123"),c.assert.strictEqual(l.get(),"456")}));for(const e of[!1,!0])it(`should support localStorageBoolObs with default of ${e}`,(async function(){const n=`localStorageBoolObs-${e}`,t=u(`${n}-foo`,e),l=u(`${n}-bar`,e);c.assert.strictEqual(t.get(),e),c.assert.strictEqual(l.get(),e),t.set(!0),l.set(!1),c.assert.strictEqual(t.get(),!0),c.assert.strictEqual(l.get(),!1),c.assert.strictEqual(u(`${n}-foo`,e).get(),!0),c.assert.strictEqual(u(`${n}-bar`,e).get(),!1),c.assert.strictEqual(u(`${n}-foo`,!e).get(),!e),c.assert.strictEqual(u(`${n}-bar`,!e).get(),!e)}))}))},13844:(e,n,t)=>{"use strict";t.r(n);class l{constructor(e,n){this._callback=e,this._delay=n,this._counter=0,this._enabled=!0}getDelay(){return this._delay}setDelay(e){this._delay=e,this.ping()}enable(){this._enabled=!0,this.ping()}disable(){this._enabled=!1,this._clearTimeout()}isEnabled(){return this._enabled}isScheduled(){return Boolean(this._timeout)}ping(){!this._counter&&this._enabled&&this._setTimeout()}async disableUntilFinish(e){this._beginActivity();try{return await e}finally{this._endActivity()}}_beginActivity(){this._counter++,this._clearTimeout()}_endActivity(){this._counter=Math.max(this._counter-1,0),this.ping()}_clearTimeout(){this._timeout&&(clearTimeout(this._timeout),this._timeout=null)}_setTimeout(){this._clearTimeout(),this._timeout=setTimeout((()=>this._onTimeoutTriggered()),this._delay)}_onTimeoutTriggered(){this._clearTimeout(),this._counter=0,this._callback()}}var r=t(74392),i=t(36436),a=t(85828);describe("InactivityTimer",(function(){let e,n;beforeEach((()=>{e=a.spy(),n=new l(e,100)})),it("if no activity, should trigger when time elapses after ping",(async function(){n.ping(),(0,i.assert)(0===e.callCount),await(0,r.delay)(150),i.assert.equal(e.callCount,1)})),it("disableUntilFinish should clear timeout, and set it back after promise resolved",(async function(){n.ping(),n.disableUntilFinish((0,r.delay)(100)),await(0,r.delay)(150),i.assert.equal(e.callCount,0),await(0,r.delay)(100),i.assert.equal(e.callCount,1)})),it("should not trigger during async monitoring",(async function(){n.disableUntilFinish((0,r.delay)(300)),n.ping(),await(0,r.delay)(150),i.assert.equal(e.callCount,0),n.disableUntilFinish((0,r.delay)(0)),await(0,r.delay)(150),i.assert.equal(e.callCount,0),await(0,r.delay)(150),i.assert.equal(e.callCount,1)})),it("should support disabling",(async function(){n.disable(),i.assert.equal(n.isEnabled(),!1),n.ping(),i.assert.equal(n.isScheduled(),!1),await(0,r.delay)(200),i.assert.equal(e.callCount,0),n.enable(),i.assert.equal(n.isEnabled(),!0),i.assert.equal(n.isScheduled(),!0),await(0,r.delay)(150),i.assert.equal(e.callCount,1),e.resetHistory(),n.disableUntilFinish((0,r.delay)(50)).catch((()=>null)),n.disableUntilFinish((0,r.delay)(150)).catch((()=>null)),await(0,r.delay)(100),i.assert.equal(e.callCount,0),i.assert.equal(n.isScheduled(),!1),await(0,r.delay)(100),i.assert.equal(n.isScheduled(),!0),i.assert.equal(e.callCount,0),await(0,r.delay)(100),i.assert.equal(e.callCount,1),e.resetHistory(),n.disableUntilFinish((0,r.delay)(50)).catch((()=>null)),n.disableUntilFinish((0,r.delay)(150)).catch((()=>null)),await(0,r.delay)(100),i.assert.equal(e.callCount,0),i.assert.equal(n.isEnabled(),!0),i.assert.equal(n.isScheduled(),!1),n.disable(),n.ping(),n.disableUntilFinish((0,r.delay)(150)).catch((()=>null)),i.assert.equal(n.isEnabled(),!1),i.assert.equal(n.isScheduled(),!1),await(0,r.delay)(200),i.assert.equal(e.callCount,0),i.assert.equal(n.isScheduled(),!1),n.enable(),i.assert.equal(n.isEnabled(),!0),i.assert.equal(n.isScheduled(),!0),await(0,r.delay)(50),i.assert.equal(e.callCount,0),await(0,r.delay)(150),i.assert.equal(e.callCount,1),i.assert.equal(n.isEnabled(),!0),i.assert.equal(n.isScheduled(),!1)}))}))},84786:(e,n,t)=>{"use strict";t.r(n);var l=t(83277),r=(t(76466),t(68652)),i=t.n(r);const a=t(41469),o=(t(97322),t(28082)),u=(new Date).getFullYear()+10-2e3;i().parseTwoDigitYear=function(e){const n=parseInt(e,10);return n+(n>u?1900:2e3)};const s=["YYYY M D",...["M D YYYY","M D YY","M D","M","MMMM D YYYY","MMMM D","MMMM Do YYYY","MMMM Do","D MMMM YYYY","D MMMM","Do MMMM YYYY","Do MMMM","MMMM","MMM D YYYY","MMM D","MMM Do YYYY","MMM Do","D MMM YYYY","D MMM","Do MMM YYYY","Do MMM","MMM","YYYY M D","YYYY M","YYYY","D M YYYY","D M YY","D M","D"].filter((e=>e.includes("MMM")))],c=/(?:^|\s+|T)(?:(\d\d?)(?::(\d\d?)(?::(\d\d?))?)?|(\d\d?)(\d\d))\s*([ap]m?)?$/i,d=/[^a-zA-Z](UTC?|GMT|Z)$/i,p=/([+-]\d\d?)(?::?(\d\d))?$/i,f=/[\W_]+/g,h=o((e=>{const n=[...new Set(i().tz.zone(e).abbrs.map(a))].join("|");return new RegExp(`[^a-zA-Z](${n})$`,"i")}));function m(e,n,t,l="UTC"){if(!e)return;const r=[...b(n=n||"YYYY-MM-DD",e),...s],a=e.replace(f," ").trim();for(const e of r){const n=i().tz(a,e,!0,l);if(n.isValid()){const e=n.valueOf()/1e3;if(!t)return e;t.add(e)}}}function b(e,n){let t=e.replace(/MM+/g,(e=>"MM"===e?"M":e)).replace(/DD+/g,(e=>"DD"===e?"D":e)).replace(f," ").trim();t.includes("M")&&t.includes("D")&&!t.includes("Y")&&(t+=" YYYY"),t=function(e,n){var t,l;const r=/Y+|M+o?|D+o?|[a-zA-Z0-9]+/gi,i=(null==(t=e.match(r))?void 0:t.length)||0;let a=(null==(l=n.match(r))?void 0:l.length)||0;return a>i&&(/Y+/.test(n)&&(n=n.replace(/Y+/," ").trim(),a-=1),a>i&&(n=n.replace(/M+/," ").trim())),n}(n,t);const l=new Set([t]),r=t.replace(/Y{2,4}/,(e=>"YY"===e?"YYYY":"YYYY"===e?"YY":e));return l.add(r),l.add(t.replace(/MMM+/,"M")),r!==t&&l.add(r.replace(/MMM+/,"M")),l}function g(e,n={}){return e.map(M).join(n.prettier?", ":",")}function M(e){return/[,\r\n"]|^\s|\s$/.test(e)?'"'+e.replace(/"/g,'""')+'"':e}var y=(e=>(e.List="L",e.LookUp="l",e.Dict="O",e.DateTime="D",e.Date="d",e.Skip="S",e.Censored="C",e.Reference="R",e.ReferenceList="r",e.Exception="E",e.Pending="P",e.Unmarshallable="U",e.Versions="V",e))(y||{});const v=t(18882);function A(e){return Array.isArray(e)&&e[0]===y.List}function w(e){return null===e||A(e)}function _(e){return"number"==typeof e||"boolean"==typeof e}function C(e){return _(e)||null===e}Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY;const T=[y.Exception,y.Pending,y.Skip,y.Unmarshallable,y.Versions],S={Any:function(e){return!T.includes(function(e){return Array.isArray(e)?e[0]:null}(e))},Attachments:w,Text:v,Blob:v,Int:C,Bool:function(e){return"boolean"==typeof e||1===e||0===e},Date:C,DateTime:C,Numeric:C,Id:_,PositionNumber:_,ManualSortPos:_,Ref:_,RefList:w,Choice:v,ChoiceList:w};function z(e){return S[e]}function O(e){if(!e)return e;const n=e.indexOf(":");return-1===n?e:e.slice(0,n)}function E(e){return"Attachments"===e?"_grist_Attachments":(0,l.removePrefix)(e,"Ref:")||(0,l.removePrefix)(e,"RefList:")}var L=t(17933);const x=((...e)=>{Object.freeze(e);const n=new Set(e),t=e=>n.has(e),l=n=>{if(!t(n)){const t=JSON.stringify(n),l=e.map((e=>JSON.stringify(e))).join(" | ");throw new TypeError(`Value '${t}' is not assignable to type '${l}'.`)}return n},r={guard:t,check:l,parse:e=>null!=e&&t(e)?e:void 0,values:e,checkAll:e=>e.map(l)};return Object.freeze(r)})("currency","decimal","percent","scientific");function k(e,n){var t;return e.currency||n.currency||L.z(null!=(t=n.locale)?t:"en-US")}const N=function(){try{return new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",currencyDisplay:"narrowSymbol"}),"narrowSymbol"}catch(e){return"symbol"}}();function B(e,n){switch(e){case"currency":return{style:"currency",currency:n,currencyDisplay:N};case"decimal":return{useGrouping:!0};case"percent":return{style:"percent"};case"scientific":return{notation:"scientific"};default:return{useGrouping:!1}}}const q=t(41469),P=t(97322),D=class{static fromSettings(e,n={}){return new D(e.locale,k(n,e))}constructor(e,n){var t;const l=new Map;for(const t of x.values){const r=Intl.NumberFormat(e,B(t,n)).formatToParts(-1234567.5678);l.set(t,r)}function r(e,n="decimal"){const t=l.get(n).find((n=>n.type===e));return(null==t?void 0:t.value)||""}this.currencySymbol=r("currency","currency"),this.percentageSymbol=r("percentSign","percent"),this.exponentSeparator=r("exponentSeparator","scientific"),this.minusSign=r("minusSign"),this.decimalSeparator=r("decimal"),this.digitGroupSeparator=r("group"),this.digitGroupSeparatorCurrency=r("group","currency"),this.currencyEndsInMinusSign="minusSign"===P(l.get("currency")).type,this.defaultNumDecimalsCurrency=(null==(t=r("fraction","currency"))?void 0:t.length)||0,this._exponentSeparatorRegex=new RegExp(q(this.exponentSeparator),"i"),this._digitGroupSeparatorRegex=new RegExp(`[${q(this.digitGroupSeparator+this.digitGroupSeparatorCurrency)}](\\d\\d)`,"g");const i=this.digitsMap=function(e){const n=Intl.NumberFormat(e),t=new Map;for(let e=0;e<10;e++){const l=String(e),r=n.format(e);r!==l&&t.set(r,l)}return t}(e);if(0===i.size)this._replaceDigits=e=>e;else{const e=new RegExp([...i.keys()].join("|"),"g");this._replaceDigits=n=>n.replace(e,(e=>i.get(e)||e))}}parse(e){const[n,t]=R(e,this.currencySymbol),[l,r]=R(n,this.percentageSymbol),i="("===(e=l.replace(D.removeCharsRegex,""))[0]&&")"===e[e.length-1];if(i&&(e=e.substring(1,e.length-1)),""===e)return null;const a=e!==(e=e.replace(this._exponentSeparatorRegex,"e")),o=(e=this._replaceDigits(e))!==(e=e.replace(this._digitGroupSeparatorRegex,"$1"));e=(e=(e=e.replace(this.decimalSeparator,".")).replace(this.minusSign,"-")).replace(this.minusSign,"-"),t&&this.currencyEndsInMinusSign&&e.endsWith("-")&&(e="-"+e.substring(0,e.length-1));let u=Number(e);if(isNaN(u))return null;if(i){if(u<=0)return null;u=-u}return r&&(u*=.01),{result:u,cleaned:e,options:{isCurrency:t,isPercent:r,isParenthesised:i,hasDigitGroupSeparator:o,isScientific:a}}}guessOptions(e){let n=null,t=!1,r=0;const i=/\.\d+/;let a=0;const o={};for(const e of x.values)o[e]=0;for(const u of(0,l.getDistinctValues)(e)){if(!u)continue;const e=this.parse(u);if(!e)continue;const{result:l,cleaned:s,options:{isCurrency:c,isPercent:d,isParenthesised:p,hasDigitGroupSeparator:f,isScientific:h}}=e;l<0&&!p?n=!1:null===n&&p&&(n=!0),t=t||f;let m="decimal";c?m="currency":d?m="percent":h&&(m="scientific"),o[m]+=1;const b=i.exec(s);if(b){const e=b[0].length-1;a=Math.max(a,e),b[0].endsWith("0")&&(r=Math.max(r,e))}}const u=Math.max(...Object.values(o));if(0===u)return{};const s={},c=x.values.find((e=>o[e]===u));return("decimal"!==c||t)&&(s.numMode=c),n&&(s.numSign="parens"),(r>0||"currency"===c&&a<this.defaultNumDecimalsCurrency)&&(s.decimals=r),s}};function R(e,n){const t=e.replace(n,"");return[t,t.length<e.length]}D.removeCharsRegex=/[\s\u200e\u200f\u061c]/g,t(99451);class W extends Date{static fromGristValue(e){return new W(1e3*e)}toString(){return this.toISOString().slice(0,10)}}class I extends Date{static fromGristValue(e,n){return Object.assign(new I(1e3*e),{timezone:n})}toString(){return this.toISOString()}}class F{constructor(e,n){this.tableId=e,this.rowId=n}toString(){return`${this.tableId}[${this.rowId}]`}}class j{constructor(e,n){this.tableId=e,this.rowIds=n}toString(){return`${this.tableId}[[${this.rowIds}]]`}}class X{constructor(e){var n;if(!e.length)throw new Error("RaisedException requires a name as first element");e=[...e],this.name=e.shift(),this.message=e.shift(),this.details=e.shift(),this.user_input=null==(n=e.shift())?void 0:n.u}toString(){switch(this.name){case"ZeroDivisionError":return"#DIV/0!";case"UnmarshallableError":return this.details||"#"+this.name;case"InvalidTypedValue":return`#Invalid ${this.message}: ${this.details}`}return"#"+this.name}}class G{constructor(e){this.value=e}static safeRepr(e){try{return String(e)}catch(n){return`<${typeof e}>`}}toString(){return String(this.value)}}class H{toString(){return"Loading..."}}class U{toString(){return"..."}}class ${toString(){return"CENSORED"}}function V(e){if(!Array.isArray(e))return e;const n=e[0],t=e.slice(1);let l;try{switch(n){case"D":return I.fromGristValue(t[0],String(t[1]));case"d":return W.fromGristValue(t[0]);case"E":return new X(t);case"L":return t.map(V);case"O":return function(e,n,t={}){const l={},r=Object.keys(e);t.sort&&r.sort();for(const t of r)l[t]=n(e[t]);return l}(t[0],V,{sort:!0});case"P":return new H;case"r":return new j(String(t[0]),t[1]);case"R":return new F(String(t[0]),t[1]);case"S":return new U;case"C":return new $;case"U":return new G(t[0])}}catch(e){l=e}return new G(`${n}(${JSON.stringify(t).slice(1,-1)})`+(l?`#${l.name}(${l.message})`:""))}Object.defineProperty,Object.defineProperties,Object.getOwnPropertyDescriptors,Object.getOwnPropertySymbols,Object.prototype.hasOwnProperty,Object.prototype.propertyIsEnumerable,t(16914),t(87604);var Z=Object.defineProperty,K=(Object.defineProperties,Object.getOwnPropertyDescriptors,Object.getOwnPropertySymbols),Y=Object.prototype.hasOwnProperty,J=Object.prototype.propertyIsEnumerable,Q=(e,n,t)=>n in e?Z(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t;const ee=t(99451);function ne(e){return le(V(e))}function te(e){return e.some((e=>"object"==typeof e&&e&&(Array.isArray(e)||ee(e))))}function le(e,n=!0){if("object"==typeof e&&e){if(Array.isArray(e))return!n||te(e)?"["+e.map((e=>le(e,!1))).join(", ")+"]":g(e.map((e=>le(e,!0))),{prettier:!0});if(ee(e)){const n=e;return"{"+Object.keys(n).map((e=>`${JSON.stringify(e)}: ${le(n[e],!1)}`)).join(", ")+"}"}return n&&e instanceof I?i()(e).tz(e.timezone).format("YYYY-MM-DD HH:mm:ssZ"):String(e)}return n?null==e?"":String(e):JSON.stringify(e)}class re{constructor(e,n,t){this.type=e,this.widgetOpts=n,this.docSettings=t,this.isRightType=z(O(e))||z("Any")}formatAny(e,n){return this.isRightType(e)?this.format(e,n):ne(e)}format(e,n){return String(e)}}class ie extends re{format(e){return ne(e)}}class ae extends re{constructor(e,n,t){super(e,n,t),this._numFormat=function(e,n){const t=k(e,n),r=B(e.numMode,t);void 0!==e.decimals&&null!==e.decimals&&(r.minimumFractionDigits=(0,l.clamp)(Number(e.decimals),0,20));const i=new Intl.NumberFormat(n.locale,r).resolvedOptions();return void 0!==e.maxDecimals&&null!==e.maxDecimals?r.maximumFractionDigits=(0,l.clamp)(Number(e.maxDecimals),i.minimumFractionDigits||0,20):e.numMode||(r.maximumFractionDigits=(0,l.clamp)(10,i.minimumFractionDigits||0,20)),new Intl.NumberFormat(n.locale,r)}(n,t),this._formatter="parens"===n.numSign?this._formatParens:this._formatPlain}format(e){return null===e?"":this._formatter(e)}_formatPlain(e){return this._numFormat.format(e)}_formatParens(e){return e>=0?` ${this._numFormat.format(e)} `:`(${this._numFormat.format(-e)})`}}class oe extends re{constructor(e,n,t,l="UTC"){super(e,n,t),this.isRightType=e=>null===e||"number"==typeof e||Array.isArray(e)&&(e[0]===y.Date||e[0]===y.DateTime),this._dateTimeFormat=n.dateFormat||"YYYY-MM-DD",this._timezone=l}format(e){if(null===e)return"";let n=this._timezone;return Array.isArray(e)&&(n=e[2]||n,e=e[1]),i().tz(1e3*e,n).format(this._dateTimeFormat)}}class ue extends re{constructor(e,n,t){super(e,n,t),this.visibleColFormatter=n.visibleColFormatter||ce("Id",{tableId:E(e)},t)}formatAny(e){var n,t;return Array.isArray(e)&&e[0]===y.Exception&&"InvalidTypedValue"===e[1]&&(null==(t=null==(n=e[2])?void 0:n.startsWith)?void 0:t.call(n,"Ref"))?e[3]:this.formatNotInvalidRef(e)}formatNotInvalidRef(e){return this.visibleColFormatter.formatAny(e)}}const se={Numeric:ae,Int:class extends ae{constructor(e,n,t){super(e,((e,n)=>{for(var t in n||(n={}))Y.call(n,t)&&Q(e,t,n[t]);if(K)for(var t of K(n))J.call(n,t)&&Q(e,t,n[t]);return e})({decimals:0},n),t)}},Bool:class extends re{format(e,n){return"boolean"==typeof e&&n?n(String(e)):super.format(e,n)}},Date:oe,DateTime:class extends oe{constructor(e,n,t){super(e,n,t,l.removePrefix(e,"DateTime:")||"");const r=void 0===n.timeFormat?"h:mma":n.timeFormat;this._dateTimeFormat=(n.dateFormat||"YYYY-MM-DD")+" "+r}},Ref:ue,RefList:class extends ue{formatNotInvalidRef(e){return!A(e)||te(V(e))?ne(e):g(e.slice(1).map((e=>super.formatNotInvalidRef(e))),{prettier:!0})}},Id:class extends re{format(e){return e>0?`${this.widgetOpts.tableId}[${e}]`:""}}};function ce(e,n,t){return new(se[O(e)]||ie)(e,n,t)}var de=t(36436);const pe={locale:"en-US"},fe=function(e,n){if(!(e=e.trim()))return;const t=n.dateFormat||"YYYY-MM-DD",l=n.timezone||"UTC",r=m(e,t,void 0,l);if(r)return r;const a=function(e,n){e=e.trim();let t=d.exec(e),l=0,r="";return t?(r="+00:00",l=t.index+1):(t=p.exec(e),t?(r=function(e){const[,n,t]=e;return n.slice(0,1)+n.slice(1).padStart(2,"0")+":"+(t||"0").padStart(2,"0")}(t),l=t.index):n&&(t=h(n).exec(e),t&&(l=t.index+1))),t&&(e=e.slice(0,l).trim()),{remaining:e,tzOffset:r}}(e,l);let o="";a&&(o=a.tzOffset,e=a.remaining);const u=function(e){const n=c.exec(e);if(!n)return;let t=parseInt(n[1]||n[4],10);const l=(n[2]||n[5]||"0").padStart(2,"0"),r=(n[3]||"0").padStart(2,"0"),i=(n[6]||"").toLowerCase();t<12&&t>0&&i.startsWith("p")?t+=12:12===t&&i.startsWith("a")&&(t=0);const a=String(t).padStart(2,"0");return{remaining:e.slice(0,n.index).trim(),time:`${a}:${l}:${r}`}}(e);if(!u)return;const s=m(e=u.remaining,t);if(!s)return;e=i().unix(s).utc().format("YYYY-MM-DD")+" "+u.time+o;const f="YYYY-MM-DD HH:mm:ss"+(o?"Z":"");return i().tz(e,f,!0,l).valueOf()/1e3}("2020-10-31 12:34:56",{});describe("ValueFormatter",(function(){describe("DateFormatter",(function(){function e(e,n){for(const t of[fe,["d",fe],["D",fe,"UTC"]]){const l=ce("Date",{dateFormat:n},pe).formatAny(t);de.assert.equal(l,e,String(t))}}it("should format dates",(function(){e("31/10/2020","DD/MM/YYYY"),e("10/31/2020","MM/DD/YYYY"),e("2020-10-31")}))})),describe("DateTimeFormatter",(function(){function e(e,n,t="UTC"){for(const l of[fe,["d",fe],["D",fe,t]]){const r=ce(`DateTime:${t}`,n,pe).formatAny(l);de.assert.equal(r,e,String(l))}}it("should format datetimes",(function(){e("31/10/2020 12:34:56",{dateFormat:"DD/MM/YYYY",timeFormat:"HH:mm:ss"}),e("10/31/2020 12:34",{dateFormat:"MM/DD/YYYY",timeFormat:"HH:mm"}),e("2020-10-31 12:34pm",{}),e("31/10/2020 08:34:56",{dateFormat:"DD/MM/YYYY",timeFormat:"HH:mm:ss"},"America/New_York"),e("10/31/2020 08:34",{dateFormat:"MM/DD/YYYY",timeFormat:"HH:mm"},"America/New_York"),e("2020-10-31 8:34am",{},"America/New_York")}))})),describe("NumericFormatter",(function(){function e(e,n,t){return ce("Numeric",e,t).formatAny(n)}function n(n,t,l){de.assert.equal(e(n,t,pe),l)}it("should support plain format",(function(){n({},0,"0"),n({},NaN,"NaN"),n({},1/0,"∞"),n({},-1/0,"-∞"),n({},.67,"0.67"),n({},-1234.56,"-1234.56"),n({},-121e25,"-1210000000000000000000000000"),n({},1.015e-8,"0.0000000102")})),it("should support min/max decimals",(function(){n({decimals:2,maxDecimals:4},12,"12.00"),n({decimals:2,maxDecimals:4},-1.00015,"-1.0002"),n({decimals:2,maxDecimals:6},-1.00015,"-1.00015"),n({decimals:6,maxDecimals:6},-1.00015,"-1.000150"),n({decimals:6,maxDecimals:0},-1.00015,"-1.000150"),n({decimals:0,maxDecimals:2},12.0001,"12"),n({decimals:0,maxDecimals:2},12.001,"12"),n({decimals:0,maxDecimals:2},12.005,"12.01"),n({maxDecimals:8},1.015e-8,"0.00000001"),n({maxDecimals:7},1.015e-8,"0"),n({decimals:-2,maxDecimals:3},-1.2345,"-1.235"),n({decimals:-2,maxDecimals:-3},-1.2345,"-1")})),it("should support thousand separators",(function(){n({numMode:"decimal",decimals:4},1e6,"1,000,000.0000"),n({numMode:"decimal"},-1234.56,"-1,234.56"),n({numMode:"decimal"},-121e25,"-1,210,000,000,000,000,000,000,000,000"),n({numMode:"decimal"},.1234567,"0.123"),n({numMode:"decimal"},1.015e-8,"0"),n({numMode:"decimal",maxDecimals:10},1.015e-8,"0.0000000102")})),it("should support currency mode",(function(){n({numMode:"currency"},1e6,"$1,000,000.00"),n({numMode:"currency",decimals:4},1e6,"$1,000,000.0000"),n({numMode:"currency"},-1234.565,"-$1,234.57"),n({numMode:"currency"},-121e25,"-$1,210,000,000,000,000,000,000,000,000.00"),n({numMode:"currency"},.1234567,"$0.12"),n({numMode:"currency",maxDecimals:0},12.34567,"$12.35"),n({numMode:"currency",decimals:0,maxDecimals:0},12.34567,"$12"),n({numMode:"currency"},1.015e-8,"$0.00"),n({numMode:"currency",maxDecimals:10},1.015e-8,"$0.0000000102"),n({numMode:"currency"},-1.015e-8,"-$0.00"),de.assert.equal(e({numMode:"currency"},1e6,{locale:"es-ES"}),"1.000.000,00 €"),de.assert.equal(e({numMode:"currency",decimals:4},1e6,{locale:"en-NZ"}),"$1,000,000.0000"),de.assert.equal(e({numMode:"currency"},-1234.565,{locale:"de-CH"}),"CHF-1’234.57"),de.assert.equal(e({numMode:"currency"},-121e25,{locale:"es-AR"}),"-$ 1.210.000.000.000.000.000.000.000.000,00"),de.assert.equal(e({numMode:"currency"},.1234567,{locale:"fr-BE"}),"0,12 €"),de.assert.equal(e({numMode:"currency",maxDecimals:0},12.34567,{locale:"en-GB"}),"£12.35"),de.assert.equal(e({numMode:"currency",decimals:0,maxDecimals:0},12.34567,{locale:"en-IE"}),"€12"),de.assert.equal(e({numMode:"currency"},1.015e-8,{locale:"en-ZA"}),"R 0,00"),de.assert.equal(e({numMode:"currency",maxDecimals:10},1.015e-8,{locale:"en-CA"}),"$0.0000000102"),de.assert.equal(e({numMode:"currency"},-1.015e-8,{locale:"nl-BE"}),"€ -0,00"),de.assert.equal(e({numMode:"currency"},1e6,{locale:"es-ES",currency:"USD"}),"1.000.000,00 $"),de.assert.equal(e({numMode:"currency",decimals:4},1e6,{locale:"en-NZ",currency:"JPY"}),"¥1,000,000.0000"),de.assert.equal(e({numMode:"currency"},-1234.565,{locale:"de-CH",currency:"JMD"}),"$-1’234.57"),de.assert.equal(e({numMode:"currency"},-121e25,{locale:"es-AR",currency:"GBP"}),"-£ 1.210.000.000.000.000.000.000.000.000,00"),de.assert.equal(e({numMode:"currency"},.1234567,{locale:"fr-BE",currency:"GBP"}),"0,12 £"),de.assert.equal(e({numMode:"currency",maxDecimals:0},12.34567,{locale:"en-GB",currency:"USD"}),"$12.35"),de.assert.equal(e({numMode:"currency",decimals:0,maxDecimals:0},12.34567,{locale:"en-IE",currency:"SGD"}),"$12"),de.assert.equal(e({numMode:"currency"},1.015e-8,{locale:"en-ZA",currency:"HKD"}),"$0,00"),de.assert.equal(e({numMode:"currency",maxDecimals:10},1.015e-8,{locale:"en-CA",currency:"RUB"}),"₽0.0000000102"),de.assert.equal(e({numMode:"currency"},-1.015e-8,{locale:"nl-BE",currency:"USD"}),"$ -0,00")})),it("should support percentages",(function(){n({numMode:"percent"},.5,"50%"),n({numMode:"percent"},-.15,"-15%"),n({numMode:"percent"},.105,"11%"),n({numMode:"percent",maxDecimals:5},.105,"10.5%"),n({numMode:"percent",decimals:5},.105,"10.50000%"),n({numMode:"percent",maxDecimals:2},1.2345,"123.45%"),n({numMode:"percent"},-1234.567,"-123,457%"),n({numMode:"percent"},1.015e-8,"0%"),n({numMode:"percent",maxDecimals:10},1.015e-8,"0.000001015%")})),it("should support parentheses for negative numbers",(function(){n({numSign:"parens",numMode:"decimal"},-1234.56,"(1,234.56)"),n({numSign:"parens",numMode:"decimal"},1234.56," 1,234.56 "),n({numSign:"parens",numMode:"decimal"},-121e25,"(1,210,000,000,000,000,000,000,000,000)"),n({numSign:"parens",numMode:"decimal"},.1234567," 0.123 "),n({numSign:"parens",numMode:"decimal"},1.015e-8," 0 "),n({numSign:"parens",numMode:"currency"},-1234.565,"($1,234.57)"),n({numSign:"parens",numMode:"currency"},-121e20,"($12,100,000,000,000,000,000,000.00)"),n({numSign:"parens",numMode:"currency"},121e20," $12,100,000,000,000,000,000,000.00 "),n({numSign:"parens",numMode:"currency"},1.015e-8," $0.00 "),n({numSign:"parens",numMode:"currency"},-1.015e-8,"($0.00)"),n({numSign:"parens"},-1234.56,"(1234.56)"),n({numSign:"parens"},1234.56," 1234.56 "),n({numSign:"parens",numMode:"percent"},-.1234,"(12%)"),n({numSign:"parens",numMode:"percent"},.1234," 12% ")})),it("should support scientific mode",(function(){n({numMode:"scientific"},.5,"5E-1"),n({numMode:"scientific"},-.15,"-1.5E-1"),n({numMode:"scientific"},-1234.56,"-1.235E3"),n({numMode:"scientific"},1234.56,"1.235E3"),n({numMode:"scientific"},1.015e-8,"1.015E-8"),n({numMode:"scientific",maxDecimals:10},1.015e-8,"1.015E-8"),n({numMode:"scientific",decimals:10},1.015e-8,"1.0150000000E-8"),n({numMode:"scientific",maxDecimals:2},1.015e-8,"1.02E-8"),n({numMode:"scientific",maxDecimals:1},1.015e-8,"1E-8"),n({numMode:"scientific"},-121e25,"-1.21E27")}))}))}))},49674:e=>{function n(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}n.keys=()=>[],n.resolve=n,n.id=49674,e.exports=n},76466:e=>{"use strict";class n{constructor(e,n){this._value=e,this._type=n,this._format=""}get value(){return this._value}set value(e){this._value=e}get type(){return this._type}set type(e){this._type=e}get format(){return this._format}set format(e){this._format=e}}class t{constructor(e,n){this.name=e,this.pattern=n}parse(e){const t=this.pattern.exec(e);if(!t||!t.groups)return;let l=[];for(const[e,r]of Object.entries(t.groups))r&&l.push(new n(r,/delim\d+/.test(e)?"delimiter":e));return{tokens:l,index:t.index,parser:this.name}}}const l="UT|CAT|CET|CVT|EAT|EET|GMT|MUT|RET|SAST|SCT|WAST|WAT|WEST|WET|WST|WT|ADT|AFT|ALMT|AMST|AMT|ANAST|ANAT|AQTT|AST|AZST|AZT|BNT|BST|BTT|CHOST|CHOT|CST|EEST|EET|GET|GST|HKT|HOVST|HOVT|ICT|IDT|IRDT|IRKST|IRKT|IST|JST|KGT|KRAST|KRAT|KST|MAGST|MAGT|MMT|MSK|MVT|NOVST|NOVT|NPT|OMSST|OMST|ORAT|PETST|PETT|PHT|PKT|PYT|QYZT|SAKT|SGT|SRET|TJT|TLT|TMT|TRT|ULAST|ULAT|UZT|VLAST|VLAT|WIB|WIT|YAKST|YAKT|YEKST|YEKT|ART|CAST|CEST|CLST|CLT|DAVT|DDUT|GMT|MAWT|NZDT|NZST|ROTT|SYOT|VOST|ADT|AST|AT|AZOST|AZOT|ACDT|ACST|ACT|ACWST|AEDT|AEST|AET|AWDT|AWST|CXT|LHDT|LHST|NFDT|NFT|AST|AT|CDT|CIDST|CIST|CST|EDT|EST|ET|CST|CT|EST|ET|BST|CEST|CET|EEST|EET|FET|GET|GMT|IST|KUYT|MSD|MSK|SAMT|TRT|WEST|WET|CCT|EAT|IOT|TFT|ADT|AKDT|AKST|AST|AT|CDT|CST|CT|EDT|EGST|EGT|ET|GMT|HDT|HST|MDT|MST|MT|NDT|NST|PDT|PMDT|PMST|PST|PT|WGST|WGT|AoE|BST|CHADT|CHAST|CHUT|CKT|ChST|EASST|EAST|FJST|FJT|GALT|GAMT|GILT|HST|KOST|LINT|MART|MHT|NCT|NRT|NUT|NZDT|NZST|PGT|PHOT|PONT|PST|PWT|SBT|SST|TAHT|TKT|TOST|TOT|TVT|VUT|WAKT|WFT|WST|YAPT|ACT|AMST|AMT|ART|BOT|BRST|BRT|CLST|CLT|COT|ECT|FKST|FKT|FNT|GFT|GST|GYT|PET|PYST|PYT|SRT|UYST|UYT|VET|WARST",r=new t("DayOfMonthAndMonthNameDateFormatParser",new RegExp(`^(?<dayOfWeek>(?:Sun?|Mon?|Tu(?:es)?|We(?:dnes)?|Th(?:urs)?|Fri?|Sa(?:tur)?)(?:day)?)?(?<delim1>,)?(?<delim2>\\s)?(?<dayOfMonth>(?:3[0-1]|[1-2]\\d|0?[1-9])(?:st|nd|rd|th)?)(?<delim3>\\s)(?<month>Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|June?|July?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)(?<delim4>,)?(?<delim5>\\s)?(?<year>\\d{4}|\\d{2})?(?:(?<delim6>,)?(?<delim7>\\s)(?:(?<twentyFourHour>2[0-3]|0?\\d|1\\d)|(?<twelveHour>0?[1-9]|1[0-2]))(?:(?<delim8>[:.])(?<minute>[0-5]\\d))?(?:(?<delim9>[:.])(?<second>[0-5]\\d))?(?:(?<delim10>.)(?<millisecond>\\d{3}))?(?<delim11>\\s)?(?<meridiem>am|pm|AM|PM)?(?:(?<delim12>\\s)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z|${l}))?)?$`)),i=new t("ISO8601BasicDateTimeFormatParser",new RegExp("^(?<year>[+-]\\d{6}|\\d{4})(?:(?<month>\\d{2})(?:(?<dayOfMonth>\\d{2}))?|(?<escapeText>W)(?<isoWeekOfYear>\\d{2})(?:(?<isoDayOfWeek>\\d))?|(?<dayOfYear>\\d{3}))?(?:(?<delim1>T| )(?:(?<twentyFourHour>\\d{2})(?:(?<minute>\\d{2})(?:(?<second>\\d{2})(?:(?<delim2>[.,])(?<millisecond>\\d{1,9}))?)?)?)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z)?)?$")),a=new t("ISO8601ExtendedDateTimeFormatParser",new RegExp("^(?<year>[+-]\\d{6}|\\d{4})(?<delim1>\\-)(?:(?<month>\\d{2})(?:(?<delim2>\\-)(?<dayOfMonth>\\d{2}))?|(?<escapeText>W)(?<isoWeekOfYear>\\d{2})(?:(?<delim3>\\-)(?<isoDayOfWeek>\\d))?|(?<dayOfYear>\\d{3}))(?:(?<delim4>T| )(?:(?<twentyFourHour>\\d{2})(?:(?<delim5>:)(?<minute>\\d{2})(?:(?<delim6>:)(?<second>\\d{2})(?:(?<delim7>[.,])(?<millisecond>\\d{1,9}))?)?)?)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z)?)?$")),o=new t("MonthNameAndDayOfMonthDateFormatParser",new RegExp(`^(?<dayOfWeek>(?:Sun?|Mon?|Tu(?:es)?|We(?:dnes)?|Th(?:urs)?|Fri?|Sa(?:tur)?)(?:day)?)?(?<delim1>,)?(?<delim2>\\s)?(?<month>Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|June?|July?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)(?<delim3>\\s)(?<dayOfMonth>(?:3[0-1]|[1-2]\\d|0?[1-9])(?:st|nd|rd|th)?)(?<delim4>,)?(?<delim5>\\s)?(?<year>\\d{4}|\\d{2})?(?:(?:(?<delim6>,)?(?<delim7>\\s)(?:(?<twentyFourHour>2[0-3]|0?\\d|1\\d)|(?<twelveHour>0?[1-9]|1[0-2]))(?:(?<delim8>[:.])(?<minute>[0-5]\\d))?(?:(?<delim9>[:.])(?<second>[0-5]\\d))?(?:(?<delim10>.)(?<millisecond>\\d{3}))?(?<delim11>\\s)?(?<meridiem>am|pm|AM|PM)?(?:(?<delim12>\\s)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z|${l}))?)?)?$`)),u=new t("RFC2822DateTimeFormatParser",new RegExp("^(?:(?<dayOfWeek>Mon|Tue|Wed|Thu|Fri|Sat|Sun)(?<delim1>,)?(?<delim2>\\s))?(?<dayOfMonth>\\d{1,2})(?<delim3>\\s)(?<month>Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)(?<delim4>\\s)(?<year>\\d{2,4})(?<delim5>\\s)(?<twentyFourHour>\\d{2})(?<delim6>:)(?<minute>\\d{2})(?:(?<delim7>:)(?<second>\\d{2}))?(?<delim8>\\s)(?<timezone>(?:(?:UT|GMT|[ECMP][SD]T)|[Zz]|[+-]\\d{4}))$")),s=new t("SlashDelimitedDateFormatParser",new RegExp(`^(?<year>\\d{4}|\\d{2})(?<delim1>[/.-])(?<month>0?[1-9]|1[0-2])(?:(?<delim2>[/.-])(?<dayOfMonth>0?[1-9]|[1-2]\\d|3[0-1]))?(?:(?:(?<delim3>,)?(?<delim4>\\s)(?:(?<twentyFourHour>2[0-3]|0?\\d|1\\d)|(?<twelveHour>0?[1-9]|1[0-2]))(?:(?<delim5>[:.])(?<minute>[0-5]\\d))?(?:(?<delim6>[:.])(?<second>[0-5]\\d))?(?:(?<delim7>.)(?<millisecond>\\d{3}))?(?<delim8>\\s)?(?<meridiem>am|pm|AM|PM)?(?:(?<delim9>\\s)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z|${l}))?)?)?$`)),c=new t("TwelveHourTimeFormatParser",new RegExp(`^(?<twelveHour>0?[1-9]|1[0-2])(?:(?<delim1>[:.])(?<minute>[0-5]\\d))?(?:(?<delim2>[:.])(?<second>[0-5]\\d))?(?:(?<delim3>.)(?<millisecond>\\d{3}))?(?<delim4>\\s)?(?<meridiem>am|pm|AM|PM)(?:(?<delim5>\\s)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z|${l}))?$`)),d=new t("TwentyFourHourTimeFormatParser",new RegExp(`^(?<twentyFourHour>2[0-3]|0?\\d|1\\d)(?<delim1>[:.])(?<minute>[0-5]\\d)(?:(?<delim2>[:.])(?<second>[0-5]\\d))?(?:(?<delim3>.)(?<millisecond>\\d{3}))?(?:(?<delim4>\\s)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z|${l}))?$`)),p=[a,i,u,s,new t("UKStyleSlashDelimitedDateFormatParser",new RegExp(`^(?<dayOfMonth>0?[1-9]|[1-2]\\d|3[0-1])(?<delim1>[/.-])(?<month>0?[1-9]|1[0-2])(?:(?<delim2>[/.-])(?<year>\\d{4}|\\d{2}))?(?:(?:(?<delim3>,)?(?<delim4>\\s)(?:(?<twentyFourHour>2[0-3]|0?\\d|1\\d)|(?<twelveHour>0?[1-9]|1[0-2]))(?:(?<delim5>[:.])(?<minute>[0-5]\\d))?(?:(?<delim6>[:.])(?<second>[0-5]\\d))?(?:(?<delim7>.)(?<millisecond>\\d{3}))?(?<delim8>\\s)?(?<meridiem>am|pm|AM|PM)?(?:(?<delim9>\\s)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z|${l}))?)?)?$`)),new t("USStyleSlashDelimitedDateFormatParser",new RegExp(`^(?<month>0?[1-9]|1[0-2])(?<delim1>[/.-])(?<dayOfMonth>0?[1-9]|[1-2]\\d|3[0-1])(?:(?<delim2>[/.-])(?<year>\\d{4}|\\d{2}))?(?:(?:(?<delim3>,)?(?<delim4>\\s)(?:(?<twentyFourHour>2[0-3]|0?\\d|1\\d)|(?<twelveHour>0?[1-9]|1[0-2]))(?:(?<delim5>[:.])(?<minute>[0-5]\\d))?(?:(?<delim6>[:.])(?<second>[0-5]\\d))?(?:(?<delim7>.)(?<millisecond>\\d{3}))?(?<delim8>\\s)?(?<meridiem>am|pm|AM|PM)?(?:(?<delim9>\\s)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z|${l}))?)?)?$`)),o,r,d,c,new t("DashDelimitedWithMonthNameDateTimeFormatParser",new RegExp(`^(?<dayOfMonth>0?[1-9]|[1-2]\\d|3[0-1])(?<delim1>-)(?<month>Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|June?|July?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)(?<delim2>-)?(?<year>\\d{4}|\\d{2})?(?:(?:(?<delim3>,)?(?<delim4>\\s)(?:(?<twentyFourHour>2[0-3]|0?\\d|1\\d)|(?<twelveHour>0?[1-9]|1[0-2]))(?:(?<delim5>[:.])(?<minute>[0-5]\\d))?(?:(?<delim6>[:.])(?<second>[0-5]\\d))?(?:(?<delim7>.)(?<millisecond>\\d{3}))?(?<delim8>\\s)?(?<meridiem>am|pm|AM|PM)?(?:(?<delim9>\\s)(?<timezone>[+-]\\d{2}(?::?\\d{2})?|Z|${l}))?)?)?$`))],f=new class{constructor(e){this.name=e}refine(e){return e.forEach((e=>{let n=!1;e.tokens.forEach((e=>{"meridiem"===e.type&&(n=!0)})),n&&e.tokens.forEach((e=>{"twentyFourHour"===e.type&&(e.type="twelveHour")}))})),e}}("TimeFormatRefiner"),h=[new class{constructor(e){this.name=e}refine(e){const n=e.filter((e=>"ISO8601ExtendedDateTimeFormatParser"===e.parser||"ISO8601BasicDateTimeFormatParser"===e.parser||"RFC2822DateTimeFormatParser"===e.parser));return 0===n.length?e:n}}("StandardFormatParsersRefiner"),f];class m{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/\d{2}/,"%y"),this._map.set(/\d{4}/,"%Y"),this._map.set(/[+-]\d{6}/,"NA")):(this._map.set(/\d{2}/,"YY"),this._map.set(/\d{4}/,"YYYY"),this._map.set(/[+-]\d{6}/,"YYYYYY"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class b{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/\d{1,2}/,"NA"),this._map.set(/\d{2}/,"%m"),this._map.set(/\d{1,2}(?:st|nd|rd|th)/,"NA"),this._map.set(/^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)$/,"%b"),this._map.set(/^(January|February|March|April|May|June|July|August|September|October|November|December)$/,"%B")):(this._map.set(/\d{1,2}/,"M"),this._map.set(/\d{2}/,"MM"),this._map.set(/\d{1,2}(?:st|nd|rd|th)/,"Mo"),this._map.set(/^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)$/,"MMM"),this._map.set(/^(January|February|March|April|May|June|July|August|September|October|November|December)$/,"MMMM"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class g{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/\d{1,2}/,"%-e"),this._map.set(/\d{2}/,"%d"),this._map.set(/\d{1,2}(?:st|nd|rd|th)/,"%o")):(this._map.set(/\d{1,2}/,"D"),this._map.set(/\d{2}/,"DD"),this._map.set(/\d{1,2}(?:st|nd|rd|th)/,"Do"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class M{constructor(e,n,t){this.name=e,this.format=t,this.type=n}assign(e){}}class y{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/\d{1,2}/,"NA"),this._map.set(/\d{2}/,"%M")):(this._map.set(/\d{1,2}/,"m"),this._map.set(/\d{2}/,"mm"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class v{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/\d{1,2}/,"NA"),this._map.set(/\d{2}/,"%S")):(this._map.set(/\d{1,2}/,"s"),this._map.set(/\d{2}/,"ss"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class A{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/\d/,"NA"),this._map.set(/\d{2}/,"NA"),this._map.set(/\d{3}/,"%L")):(this._map.set(/\d/,"S"),this._map.set(/\d{2}/,"SS"),this._map.set(/\d{3}/,"SSS"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class w{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map;const l=new RegExp("UT|CAT|CET|CVT|EAT|EET|GMT|MUT|RET|SAST|SCT|WAST|WAT|WEST|WET|WST|WT|ADT|AFT|ALMT|AMST|AMT|ANAST|ANAT|AQTT|AST|AZST|AZT|BNT|BST|BTT|CHOST|CHOT|CST|EEST|EET|GET|GST|HKT|HOVST|HOVT|ICT|IDT|IRDT|IRKST|IRKT|IST|JST|KGT|KRAST|KRAT|KST|MAGST|MAGT|MMT|MSK|MVT|NOVST|NOVT|NPT|OMSST|OMST|ORAT|PETST|PETT|PHT|PKT|PYT|QYZT|SAKT|SGT|SRET|TJT|TLT|TMT|TRT|ULAST|ULAT|UZT|VLAST|VLAT|WIB|WIT|YAKST|YAKT|YEKST|YEKT|ART|CAST|CEST|CLST|CLT|DAVT|DDUT|GMT|MAWT|NZDT|NZST|ROTT|SYOT|VOST|ADT|AST|AT|AZOST|AZOT|ACDT|ACST|ACT|ACWST|AEDT|AEST|AET|AWDT|AWST|CXT|LHDT|LHST|NFDT|NFT|AST|AT|CDT|CIDST|CIST|CST|EDT|EST|ET|CST|CT|EST|ET|BST|CEST|CET|EEST|EET|FET|GET|GMT|IST|KUYT|MSD|MSK|SAMT|TRT|WEST|WET|CCT|EAT|IOT|TFT|ADT|AKDT|AKST|AST|AT|CDT|CST|CT|EDT|EGST|EGT|ET|GMT|HDT|HST|MDT|MST|MT|NDT|NST|PDT|PMDT|PMST|PST|PT|WGST|WGT|AoE|BST|CHADT|CHAST|CHUT|CKT|ChST|EASST|EAST|FJST|FJT|GALT|GAMT|GILT|HST|KOST|LINT|MART|MHT|NCT|NRT|NUT|NZDT|NZST|PGT|PHOT|PONT|PST|PWT|SBT|SST|TAHT|TKT|TOST|TOT|TVT|VUT|WAKT|WFT|WST|YAPT|ACT|AMST|AMT|ART|BOT|BRST|BRT|CLST|CLT|COT|ECT|FKST|FKT|FNT|GFT|GST|GYT|PET|PYST|PYT|SRT|UYST|UYT|VET|WARST");t&&"default"!==t?(this._map.set(/[+-]\d{2}(?::\d{2})?/,"%:z"),this._map.set(/[+-]\d{4}/,"%z"),this._map.set(/Z/,"Z"),this._map.set(/z/,"z"),this._map.set(l,"%Z")):(this._map.set(/[+-]\d{2}(?::\d{2})?/,"Z"),this._map.set(/[+-]\d{4}/,"ZZ"),this._map.set(/Z/,"[Z]"),this._map.set(/z/,"[z]"),this._map.set(l,"z"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class _{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/\d{1,3}/,"NA"),this._map.set(/\d{3}/,"%j"),this._map.set(/\d{1,3}(?:st|nd|rd|th)/,"NA")):(this._map.set(/\d{1,3}/,"DDD"),this._map.set(/\d{3}/,"DDDD"),this._map.set(/\d{1,3}(?:st|nd|rd|th)/,"DDDo"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class C{constructor(e,n,t){this.name=e,this.type=n,this.format=t}_testTokenType(e){return e.type===this.type}assign(e){this._testTokenType(e)&&(e.format=this.format&&"default"!==this.format?e.value:`[${e.value}]`)}}class T{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?this._map.set(/[1-7]/,"%u"):this._map.set(/[1-7]/,"E")}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class S{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/\d{1,2}/,"NA"),this._map.set(/\d{2}/,"%U"),this._map.set(/\d{1,2}(?:st|nd|rd|th)/,"NA")):(this._map.set(/\d{1,2}/,"W"),this._map.set(/\d{2}/,"WW"),this._map.set(/\d{1,2}(?:st|nd|rd|th)/,"Wo"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class z{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/^(\d|1\d|2[0-3])$/,"%-k"),this._map.set(/^([0-1]\d|2[0-3])$/,"%H")):(this._map.set(/^(\d|1\d|2[0-3])$/,"H"),this._map.set(/^([0-1]\d|2[0-3])$/,"HH"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class O{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/^([1-9]|1[0-2])$/,"%-l"),this._map.set(/^(0\d|1[0-2])$/,"%I")):(this._map.set(/^([1-9]|1[0-2])$/,"h"),this._map.set(/^(0\d|1[0-2])$/,"hh"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class E{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/[0-6]/,"%w"),this._map.set(/[0-6](?:st|nd|rd|th)/,"NA"),this._map.set(/(?:Su|Mo|Tu|We|Th|Fr|Sa)/,"NA"),this._map.set(/(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)/,"%a"),this._map.set(/(?:Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday)/,"%A")):(this._map.set(/[0-6]/,"d"),this._map.set(/[0-6](?:st|nd|rd|th)/,"do"),this._map.set(/(?:Su|Mo|Tu|We|Th|Fr|Sa)/,"dd"),this._map.set(/(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)/,"ddd"),this._map.set(/(?:Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday)/,"dddd"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}class L{constructor(e,n,t){this.name=e,this.type=n,this.format=t,this._map=new Map,t&&"default"!==t?(this._map.set(/am|pm/,"%P"),this._map.set(/AM|PM/,"%p")):(this._map.set(/am|pm/,"a"),this._map.set(/AM|PM/,"A"))}_testTokenType(e){return e.type===this.type}assign(e){this._map.forEach(((n,t)=>{this._testTokenType(e)&&t.test(e.value)&&(e.format=n)}))}}const x=new g("DelimiterFormatTokenAssigner","dayOfMonth"),k=new E("DayOfWeekFormatTokenAssigner","dayOfWeek"),N=new _("DayOfYearFormatTokenAssigner","dayOfYear"),B=new M("DelimiterFormatTokenAssigner","delimiter"),q=new C("EscapeTextFormatTokenAssigner","escapeText"),P=new T("ISODayOfWeekFormatTokenAssigner","isoDayOfWeek"),D=new S("ISOWeekOfYearFormatTokenAssigner","isoWeekOfYear"),R=new L("MeridiemFormatTokenAssigner","meridiem"),W=new A("MillisecondFormatTokenAssigner","millisecond"),I=new y("MinuteFormatTokenAssigner","minute"),F=new b("MonthFormatTokenAssigner","month"),j=new v("SecondFormatTokenAssigner","second"),X=new w("TimezoneFormatTokenAssigner","timezone"),G=new O("TwelveHourFormatTokenAssigner","twelveHour"),H=new z("TwentyFourHourFormatTokenAssigner","twentyFourHour"),U=new m("YearFormatTokenAssigner","year"),$=new g("DelimiterFormatTokenAssigner","dayOfMonth","strftime"),V=new E("DayOfWeekFormatTokenAssigner","dayOfWeek","strftime"),Z=new _("DayOfYearFormatTokenAssigner","dayOfYear","strftime"),K=new M("DelimiterFormatTokenAssigner","delimiter","strftime"),Y=new C("EscapeTextFormatTokenAssigner","escapeText","strftime"),J=new T("ISODayOfWeekFormatTokenAssigner","isoDayOfWeek","strftime"),Q=new S("ISOWeekOfYearFormatTokenAssigner","isoWeekOfYear","strftime"),ee=new L("MeridiemFormatTokenAssigner","meridiem","strftime"),ne=new A("MillisecondFormatTokenAssigner","millisecond","strftime"),te=new y("MinuteFormatTokenAssigner","minute","strftime"),le=new b("MonthFormatTokenAssigner","month","strftime"),re=new v("SecondFormatTokenAssigner","second","strftime"),ie=new w("TimezoneFormatTokenAssigner","timezone","strftime"),ae=new O("TwelveHourFormatTokenAssigner","twelveHour","strftime"),oe=new z("TwentyFourHourFormatTokenAssigner","twentyFourHour","strftime"),ue=new m("YearFormatTokenAssigner","year","strftime"),se=[U,F,x,B,I,j,W,X,N,q,P,D,H,G,k,R],ce=[$,V,Z,K,Y,J,Q,ee,ne,te,le,re,ie,ae,oe,ue];class de{constructor(){}static parse(e){const n=[];return p.forEach((t=>{const l=t.parse(e);l&&n.push(Object.assign({},l))})),n}static refine(e){let n=[...e];return h.forEach((e=>{n=[...e.refine(n)]})),n}static assign(e,n){(n&&"default"!==n?ce:se).forEach((n=>{e.forEach((e=>{n.assign(e)}))}))}static getFormatString(e){let n="";return e.forEach((e=>{if("NA"===e.format)throw Error(`Couldn't find strftime modifier for "${e.value}"`);n+=e.format?e.format:e.value})),n}}e.exports=function(e,n){const t=de.parse(e),l=de.refine(t);if(0===l.length)throw Error("Couldn't parse date");l.forEach((e=>de.assign(e.tokens,n)));let r=[];return l.forEach((e=>r.push(de.getFormatString(e.tokens)))),1===r.length?r[0]:r}},20543:(e,n,t)=>{"use strict";var l=t(77428);function r(e,n){if(e===n)return 0;for(var t=e.length,l=n.length,r=0,i=Math.min(t,l);r<i;++r)if(e[r]!==n[r]){t=e[r],l=n[r];break}return t<l?-1:l<t?1:0}function i(e){return t.g.Buffer&&"function"==typeof t.g.Buffer.isBuffer?t.g.Buffer.isBuffer(e):!(null==e||!e._isBuffer)}var a=t(55723),o=Object.prototype.hasOwnProperty,u=Array.prototype.slice,s="foo"===function(){}.name;function c(e){return Object.prototype.toString.call(e)}function d(e){return!i(e)&&"function"==typeof t.g.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer)))}var p=e.exports=M,f=/\s*function\s+([^\(\s]*)\s*/;function h(e){if(a.isFunction(e)){if(s)return e.name;var n=e.toString().match(f);return n&&n[1]}}function m(e,n){return"string"==typeof e?e.length<n?e:e.slice(0,n):e}function b(e){if(s||!a.isFunction(e))return a.inspect(e);var n=h(e);return"[Function"+(n?": "+n:"")+"]"}function g(e,n,t,l,r){throw new p.AssertionError({message:t,actual:e,expected:n,operator:l,stackStartFunction:r})}function M(e,n){e||g(e,!0,n,"==",p.ok)}function y(e,n,t,l){if(e===n)return!0;if(i(e)&&i(n))return 0===r(e,n);if(a.isDate(e)&&a.isDate(n))return e.getTime()===n.getTime();if(a.isRegExp(e)&&a.isRegExp(n))return e.source===n.source&&e.global===n.global&&e.multiline===n.multiline&&e.lastIndex===n.lastIndex&&e.ignoreCase===n.ignoreCase;if(null!==e&&"object"==typeof e||null!==n&&"object"==typeof n){if(d(e)&&d(n)&&c(e)===c(n)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===r(new Uint8Array(e.buffer),new Uint8Array(n.buffer));if(i(e)!==i(n))return!1;var o=(l=l||{actual:[],expected:[]}).actual.indexOf(e);return-1!==o&&o===l.expected.indexOf(n)||(l.actual.push(e),l.expected.push(n),function(e,n,t,l){if(null==e||null==n)return!1;if(a.isPrimitive(e)||a.isPrimitive(n))return e===n;if(t&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(n))return!1;var r=v(e),i=v(n);if(r&&!i||!r&&i)return!1;if(r)return y(e=u.call(e),n=u.call(n),t);var o,s,c=_(e),d=_(n);if(c.length!==d.length)return!1;for(c.sort(),d.sort(),s=c.length-1;s>=0;s--)if(c[s]!==d[s])return!1;for(s=c.length-1;s>=0;s--)if(!y(e[o=c[s]],n[o],t,l))return!1;return!0}(e,n,t,l))}return t?e===n:e==n}function v(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function A(e,n){if(!e||!n)return!1;if("[object RegExp]"==Object.prototype.toString.call(n))return n.test(e);try{if(e instanceof n)return!0}catch(e){}return!Error.isPrototypeOf(n)&&!0===n.call({},e)}function w(e,n,t,l){var r;if("function"!=typeof n)throw new TypeError('"block" argument must be a function');"string"==typeof t&&(l=t,t=null),r=function(e){var n;try{e()}catch(e){n=e}return n}(n),l=(t&&t.name?" ("+t.name+").":".")+(l?" "+l:"."),e&&!r&&g(r,t,"Missing expected exception"+l);var i="string"==typeof l,o=!e&&r&&!t;if((!e&&a.isError(r)&&i&&A(r,t)||o)&&g(r,t,"Got unwanted exception"+l),e&&r&&t&&!A(r,t)||!e&&r)throw r}p.AssertionError=function(e){this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=function(e){return m(b(e.actual),128)+" "+e.operator+" "+m(b(e.expected),128)}(this),this.generatedMessage=!0);var n=e.stackStartFunction||g;if(Error.captureStackTrace)Error.captureStackTrace(this,n);else{var t=new Error;if(t.stack){var l=t.stack,r=h(n),i=l.indexOf("\n"+r);if(i>=0){var a=l.indexOf("\n",i+1);l=l.substring(a+1)}this.stack=l}}},a.inherits(p.AssertionError,Error),p.fail=g,p.ok=M,p.equal=function(e,n,t){e!=n&&g(e,n,t,"==",p.equal)},p.notEqual=function(e,n,t){e==n&&g(e,n,t,"!=",p.notEqual)},p.deepEqual=function(e,n,t){y(e,n,!1)||g(e,n,t,"deepEqual",p.deepEqual)},p.deepStrictEqual=function(e,n,t){y(e,n,!0)||g(e,n,t,"deepStrictEqual",p.deepStrictEqual)},p.notDeepEqual=function(e,n,t){y(e,n,!1)&&g(e,n,t,"notDeepEqual",p.notDeepEqual)},p.notDeepStrictEqual=function e(n,t,l){y(n,t,!0)&&g(n,t,l,"notDeepStrictEqual",e)},p.strictEqual=function(e,n,t){e!==n&&g(e,n,t,"===",p.strictEqual)},p.notStrictEqual=function(e,n,t){e===n&&g(e,n,t,"!==",p.notStrictEqual)},p.throws=function(e,n,t){w(!0,e,n,t)},p.doesNotThrow=function(e,n,t){w(!1,e,n,t)},p.ifError=function(e){if(e)throw e},p.strict=l((function e(n,t){n||g(n,!0,t,"==",e)}),p,{equal:p.strictEqual,deepEqual:p.deepStrictEqual,notEqual:p.notStrictEqual,notDeepEqual:p.notDeepStrictEqual}),p.strict.strict=p.strict;var _=Object.keys||function(e){var n=[];for(var t in e)o.call(e,t)&&n.push(t);return n}},72799:e=>{function n(){var e=[].slice.call(arguments);function n(n,t){Object.keys(t).forEach((function(l){~e.indexOf(l)||(n[l]=t[l])}))}return function(){for(var e=[].slice.call(arguments),t=0,l={};t<e.length;t++)n(l,e[t]);return l}}function t(e,l,r){var i=n("name","message","stack","constructor","toJSON")(l||{});for(var a in this.message=e||"Unspecified AssertionError",this.showDiff=!1,i)this[a]=i[a];if(r=r||t,Error.captureStackTrace)Error.captureStackTrace(this,r);else try{throw new Error}catch(e){this.stack=e.stack}}e.exports=t,t.prototype=Object.create(Error.prototype),t.prototype.name="AssertionError",t.prototype.constructor=t,t.prototype.toJSON=function(e){var t=n("constructor","toJSON","stack")({name:this.name},this);return!1!==e&&this.stack&&(t.stack=this.stack),t}},86277:(e,n,t)=>{var l,r,i;i="object"==typeof self&&self.self===self&&self||"object"==typeof t.g&&t.g.global===t.g&&t.g,l=[t(54156),t(19567),n],r=function(e,n,t){i.Backbone=function(e,n,t,l){var r=e.Backbone,i=Array.prototype.slice;n.VERSION="1.3.3",n.$=l,n.noConflict=function(){return e.Backbone=r,this},n.emulateHTTP=!1,n.emulateJSON=!1;var a=function(e,n,l){t.each(n,(function(n,r){t[r]&&(e.prototype[r]=function(e,n,l){switch(e){case 1:return function(){return t[n](this[l])};case 2:return function(e){return t[n](this[l],e)};case 3:return function(e,r){return t[n](this[l],o(e,this),r)};case 4:return function(e,r,i){return t[n](this[l],o(e,this),r,i)};default:return function(){var e=i.call(arguments);return e.unshift(this[l]),t[n].apply(t,e)}}}(n,r,l))}))},o=function(e,n){return t.isFunction(e)?e:t.isObject(e)&&!n._isModel(e)?u(e):t.isString(e)?function(n){return n.get(e)}:e},u=function(e){var n=t.matches(e);return function(e){return n(e.attributes)}},s=n.Events={},c=/\s+/,d=function(e,n,l,r,i){var a,o=0;if(l&&"object"==typeof l){void 0!==r&&"context"in i&&void 0===i.context&&(i.context=r);for(a=t.keys(l);o<a.length;o++)n=d(e,n,a[o],l[a[o]],i)}else if(l&&c.test(l))for(a=l.split(c);o<a.length;o++)n=e(n,a[o],r,i);else n=e(n,l,r,i);return n};s.on=function(e,n,t){return p(this,e,n,t)};var p=function(e,n,t,l,r){return e._events=d(f,e._events||{},n,t,{context:l,ctx:e,listening:r}),r&&((e._listeners||(e._listeners={}))[r.id]=r),e};s.listenTo=function(e,n,l){if(!e)return this;var r=e._listenId||(e._listenId=t.uniqueId("l")),i=this._listeningTo||(this._listeningTo={}),a=i[r];if(!a){var o=this._listenId||(this._listenId=t.uniqueId("l"));a=i[r]={obj:e,objId:r,id:o,listeningTo:i,count:0}}return p(e,n,l,this,a),this};var f=function(e,n,t,l){if(t){var r=e[n]||(e[n]=[]),i=l.context,a=l.ctx,o=l.listening;o&&o.count++,r.push({callback:t,context:i,ctx:i||a,listening:o})}return e};s.off=function(e,n,t){return this._events?(this._events=d(h,this._events,e,n,{context:t,listeners:this._listeners}),this):this},s.stopListening=function(e,n,l){var r=this._listeningTo;if(!r)return this;for(var i=e?[e._listenId]:t.keys(r),a=0;a<i.length;a++){var o=r[i[a]];if(!o)break;o.obj.off(n,l,this)}return this};var h=function(e,n,l,r){if(e){var i,a=0,o=r.context,u=r.listeners;if(n||l||o){for(var s=n?[n]:t.keys(e);a<s.length;a++){var c=e[n=s[a]];if(!c)break;for(var d=[],p=0;p<c.length;p++){var f=c[p];l&&l!==f.callback&&l!==f.callback._callback||o&&o!==f.context?d.push(f):(i=f.listening)&&0==--i.count&&(delete u[i.id],delete i.listeningTo[i.objId])}d.length?e[n]=d:delete e[n]}return e}for(var h=t.keys(u);a<h.length;a++)delete u[(i=u[h[a]]).id],delete i.listeningTo[i.objId]}};s.once=function(e,n,l){var r=d(m,{},e,n,t.bind(this.off,this));return"string"==typeof e&&null==l&&(n=void 0),this.on(r,n,l)},s.listenToOnce=function(e,n,l){var r=d(m,{},n,l,t.bind(this.stopListening,this,e));return this.listenTo(e,r)};var m=function(e,n,l,r){if(l){var i=e[n]=t.once((function(){r(n,i),l.apply(this,arguments)}));i._callback=l}return e};s.trigger=function(e){if(!this._events)return this;for(var n=Math.max(0,arguments.length-1),t=Array(n),l=0;l<n;l++)t[l]=arguments[l+1];return d(b,this._events,e,void 0,t),this};var b=function(e,n,t,l){if(e){var r=e[n],i=e.all;r&&i&&(i=i.slice()),r&&g(r,l),i&&g(i,[n].concat(l))}return e},g=function(e,n){var t,l=-1,r=e.length,i=n[0],a=n[1],o=n[2];switch(n.length){case 0:for(;++l<r;)(t=e[l]).callback.call(t.ctx);return;case 1:for(;++l<r;)(t=e[l]).callback.call(t.ctx,i);return;case 2:for(;++l<r;)(t=e[l]).callback.call(t.ctx,i,a);return;case 3:for(;++l<r;)(t=e[l]).callback.call(t.ctx,i,a,o);return;default:for(;++l<r;)(t=e[l]).callback.apply(t.ctx,n);return}};s.bind=s.on,s.unbind=s.off,t.extend(n,s);var M=n.Model=function(e,n){var l=e||{};n||(n={}),this.cid=t.uniqueId(this.cidPrefix),this.attributes={},n.collection&&(this.collection=n.collection),n.parse&&(l=this.parse(l,n)||{});var r=t.result(this,"defaults");l=t.defaults(t.extend({},r,l),r),this.set(l,n),this.changed={},this.initialize.apply(this,arguments)};t.extend(M.prototype,s,{changed:null,validationError:null,idAttribute:"id",cidPrefix:"c",initialize:function(){},toJSON:function(e){return t.clone(this.attributes)},sync:function(){return n.sync.apply(this,arguments)},get:function(e){return this.attributes[e]},escape:function(e){return t.escape(this.get(e))},has:function(e){return null!=this.get(e)},matches:function(e){return!!t.iteratee(e,this)(this.attributes)},set:function(e,n,l){if(null==e)return this;var r;if("object"==typeof e?(r=e,l=n):(r={})[e]=n,l||(l={}),!this._validate(r,l))return!1;var i=l.unset,a=l.silent,o=[],u=this._changing;this._changing=!0,u||(this._previousAttributes=t.clone(this.attributes),this.changed={});var s=this.attributes,c=this.changed,d=this._previousAttributes;for(var p in r)n=r[p],t.isEqual(s[p],n)||o.push(p),t.isEqual(d[p],n)?delete c[p]:c[p]=n,i?delete s[p]:s[p]=n;if(this.idAttribute in r&&(this.id=this.get(this.idAttribute)),!a){o.length&&(this._pending=l);for(var f=0;f<o.length;f++)this.trigger("change:"+o[f],this,s[o[f]],l)}if(u)return this;if(!a)for(;this._pending;)l=this._pending,this._pending=!1,this.trigger("change",this,l);return this._pending=!1,this._changing=!1,this},unset:function(e,n){return this.set(e,void 0,t.extend({},n,{unset:!0}))},clear:function(e){var n={};for(var l in this.attributes)n[l]=void 0;return this.set(n,t.extend({},e,{unset:!0}))},hasChanged:function(e){return null==e?!t.isEmpty(this.changed):t.has(this.changed,e)},changedAttributes:function(e){if(!e)return!!this.hasChanged()&&t.clone(this.changed);var n=this._changing?this._previousAttributes:this.attributes,l={};for(var r in e){var i=e[r];t.isEqual(n[r],i)||(l[r]=i)}return!!t.size(l)&&l},previous:function(e){return null!=e&&this._previousAttributes?this._previousAttributes[e]:null},previousAttributes:function(){return t.clone(this._previousAttributes)},fetch:function(e){e=t.extend({parse:!0},e);var n=this,l=e.success;return e.success=function(t){var r=e.parse?n.parse(t,e):t;if(!n.set(r,e))return!1;l&&l.call(e.context,n,t,e),n.trigger("sync",n,t,e)},D(this,e),this.sync("read",this,e)},save:function(e,n,l){var r;null==e||"object"==typeof e?(r=e,l=n):(r={})[e]=n;var i=(l=t.extend({validate:!0,parse:!0},l)).wait;if(r&&!i){if(!this.set(r,l))return!1}else if(!this._validate(r,l))return!1;var a=this,o=l.success,u=this.attributes;l.success=function(e){a.attributes=u;var n=l.parse?a.parse(e,l):e;if(i&&(n=t.extend({},r,n)),n&&!a.set(n,l))return!1;o&&o.call(l.context,a,e,l),a.trigger("sync",a,e,l)},D(this,l),r&&i&&(this.attributes=t.extend({},u,r));var s=this.isNew()?"create":l.patch?"patch":"update";"patch"!==s||l.attrs||(l.attrs=r);var c=this.sync(s,this,l);return this.attributes=u,c},destroy:function(e){e=e?t.clone(e):{};var n=this,l=e.success,r=e.wait,i=function(){n.stopListening(),n.trigger("destroy",n,n.collection,e)};e.success=function(t){r&&i(),l&&l.call(e.context,n,t,e),n.isNew()||n.trigger("sync",n,t,e)};var a=!1;return this.isNew()?t.defer(e.success):(D(this,e),a=this.sync("delete",this,e)),r||i(),a},url:function(){var e=t.result(this,"urlRoot")||t.result(this.collection,"url")||P();if(this.isNew())return e;var n=this.get(this.idAttribute);return e.replace(/[^\/]$/,"$&/")+encodeURIComponent(n)},parse:function(e,n){return e},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return!this.has(this.idAttribute)},isValid:function(e){return this._validate({},t.extend({},e,{validate:!0}))},_validate:function(e,n){if(!n.validate||!this.validate)return!0;e=t.extend({},this.attributes,e);var l=this.validationError=this.validate(e,n)||null;return!l||(this.trigger("invalid",this,l,t.extend(n,{validationError:l})),!1)}}),a(M,{keys:1,values:1,pairs:1,invert:1,pick:0,omit:0,chain:1,isEmpty:1},"attributes");var y=n.Collection=function(e,n){n||(n={}),n.model&&(this.model=n.model),void 0!==n.comparator&&(this.comparator=n.comparator),this._reset(),this.initialize.apply(this,arguments),e&&this.reset(e,t.extend({silent:!0},n))},v={add:!0,remove:!0,merge:!0},A={add:!0,remove:!1},w=function(e,n,t){t=Math.min(Math.max(t,0),e.length);var l,r=Array(e.length-t),i=n.length;for(l=0;l<r.length;l++)r[l]=e[l+t];for(l=0;l<i;l++)e[l+t]=n[l];for(l=0;l<r.length;l++)e[l+i+t]=r[l]};t.extend(y.prototype,s,{model:M,initialize:function(){},toJSON:function(e){return this.map((function(n){return n.toJSON(e)}))},sync:function(){return n.sync.apply(this,arguments)},add:function(e,n){return this.set(e,t.extend({merge:!1},n,A))},remove:function(e,n){n=t.extend({},n);var l=!t.isArray(e);e=l?[e]:e.slice();var r=this._removeModels(e,n);return!n.silent&&r.length&&(n.changes={added:[],merged:[],removed:r},this.trigger("update",this,n)),l?r[0]:r},set:function(e,n){if(null!=e){(n=t.extend({},v,n)).parse&&!this._isModel(e)&&(e=this.parse(e,n)||[]);var l=!t.isArray(e);e=l?[e]:e.slice();var r=n.at;null!=r&&(r=+r),r>this.length&&(r=this.length),r<0&&(r+=this.length+1);var i,a,o=[],u=[],s=[],c=[],d={},p=n.add,f=n.merge,h=n.remove,m=!1,b=this.comparator&&null==r&&!1!==n.sort,g=t.isString(this.comparator)?this.comparator:null;for(a=0;a<e.length;a++){i=e[a];var M=this.get(i);if(M){if(f&&i!==M){var y=this._isModel(i)?i.attributes:i;n.parse&&(y=M.parse(y,n)),M.set(y,n),s.push(M),b&&!m&&(m=M.hasChanged(g))}d[M.cid]||(d[M.cid]=!0,o.push(M)),e[a]=M}else p&&(i=e[a]=this._prepareModel(i,n))&&(u.push(i),this._addReference(i,n),d[i.cid]=!0,o.push(i))}if(h){for(a=0;a<this.length;a++)d[(i=this.models[a]).cid]||c.push(i);c.length&&this._removeModels(c,n)}var A=!1,_=!b&&p&&h;if(o.length&&_?(A=this.length!==o.length||t.some(this.models,(function(e,n){return e!==o[n]})),this.models.length=0,w(this.models,o,0),this.length=this.models.length):u.length&&(b&&(m=!0),w(this.models,u,null==r?this.length:r),this.length=this.models.length),m&&this.sort({silent:!0}),!n.silent){for(a=0;a<u.length;a++)null!=r&&(n.index=r+a),(i=u[a]).trigger("add",i,this,n);(m||A)&&this.trigger("sort",this,n),(u.length||c.length||s.length)&&(n.changes={added:u,removed:c,merged:s},this.trigger("update",this,n))}return l?e[0]:e}},reset:function(e,n){n=n?t.clone(n):{};for(var l=0;l<this.models.length;l++)this._removeReference(this.models[l],n);return n.previousModels=this.models,this._reset(),e=this.add(e,t.extend({silent:!0},n)),n.silent||this.trigger("reset",this,n),e},push:function(e,n){return this.add(e,t.extend({at:this.length},n))},pop:function(e){var n=this.at(this.length-1);return this.remove(n,e)},unshift:function(e,n){return this.add(e,t.extend({at:0},n))},shift:function(e){var n=this.at(0);return this.remove(n,e)},slice:function(){return i.apply(this.models,arguments)},get:function(e){if(null!=e)return this._byId[e]||this._byId[this.modelId(e.attributes||e)]||e.cid&&this._byId[e.cid]},has:function(e){return null!=this.get(e)},at:function(e){return e<0&&(e+=this.length),this.models[e]},where:function(e,n){return this[n?"find":"filter"](e)},findWhere:function(e){return this.where(e,!0)},sort:function(e){var n=this.comparator;if(!n)throw new Error("Cannot sort a set without a comparator");e||(e={});var l=n.length;return t.isFunction(n)&&(n=t.bind(n,this)),1===l||t.isString(n)?this.models=this.sortBy(n):this.models.sort(n),e.silent||this.trigger("sort",this,e),this},pluck:function(e){return this.map(e+"")},fetch:function(e){var n=(e=t.extend({parse:!0},e)).success,l=this;return e.success=function(t){var r=e.reset?"reset":"set";l[r](t,e),n&&n.call(e.context,l,t,e),l.trigger("sync",l,t,e)},D(this,e),this.sync("read",this,e)},create:function(e,n){var l=(n=n?t.clone(n):{}).wait;if(!(e=this._prepareModel(e,n)))return!1;l||this.add(e,n);var r=this,i=n.success;return n.success=function(e,n,t){l&&r.add(e,t),i&&i.call(t.context,e,n,t)},e.save(null,n),e},parse:function(e,n){return e},clone:function(){return new this.constructor(this.models,{model:this.model,comparator:this.comparator})},modelId:function(e){return e[this.model.prototype.idAttribute||"id"]},_reset:function(){this.length=0,this.models=[],this._byId={}},_prepareModel:function(e,n){if(this._isModel(e))return e.collection||(e.collection=this),e;(n=n?t.clone(n):{}).collection=this;var l=new this.model(e,n);return l.validationError?(this.trigger("invalid",this,l.validationError,n),!1):l},_removeModels:function(e,n){for(var t=[],l=0;l<e.length;l++){var r=this.get(e[l]);if(r){var i=this.indexOf(r);this.models.splice(i,1),this.length--,delete this._byId[r.cid];var a=this.modelId(r.attributes);null!=a&&delete this._byId[a],n.silent||(n.index=i,r.trigger("remove",r,this,n)),t.push(r),this._removeReference(r,n)}}return t},_isModel:function(e){return e instanceof M},_addReference:function(e,n){this._byId[e.cid]=e;var t=this.modelId(e.attributes);null!=t&&(this._byId[t]=e),e.on("all",this._onModelEvent,this)},_removeReference:function(e,n){delete this._byId[e.cid];var t=this.modelId(e.attributes);null!=t&&delete this._byId[t],this===e.collection&&delete e.collection,e.off("all",this._onModelEvent,this)},_onModelEvent:function(e,n,t,l){if(n){if(("add"===e||"remove"===e)&&t!==this)return;if("destroy"===e&&this.remove(n,l),"change"===e){var r=this.modelId(n.previousAttributes()),i=this.modelId(n.attributes);r!==i&&(null!=r&&delete this._byId[r],null!=i&&(this._byId[i]=n))}}this.trigger.apply(this,arguments)}}),a(y,{forEach:3,each:3,map:3,collect:3,reduce:0,foldl:0,inject:0,reduceRight:0,foldr:0,find:3,detect:3,filter:3,select:3,reject:3,every:3,all:3,some:3,any:3,include:3,includes:3,contains:3,invoke:0,max:3,min:3,toArray:1,size:1,first:3,head:3,take:3,initial:3,rest:3,tail:3,drop:3,last:3,without:0,difference:0,indexOf:3,shuffle:1,lastIndexOf:3,isEmpty:1,chain:1,sample:3,partition:3,groupBy:3,countBy:3,sortBy:3,indexBy:3,findIndex:3,findLastIndex:3},"models");var _=n.View=function(e){this.cid=t.uniqueId("view"),t.extend(this,t.pick(e,T)),this._ensureElement(),this.initialize.apply(this,arguments)},C=/^(\S+)\s*(.*)$/,T=["model","collection","el","id","attributes","className","tagName","events"];t.extend(_.prototype,s,{tagName:"div",$:function(e){return this.$el.find(e)},initialize:function(){},render:function(){return this},remove:function(){return this._removeElement(),this.stopListening(),this},_removeElement:function(){this.$el.remove()},setElement:function(e){return this.undelegateEvents(),this._setElement(e),this.delegateEvents(),this},_setElement:function(e){this.$el=e instanceof n.$?e:n.$(e),this.el=this.$el[0]},delegateEvents:function(e){if(e||(e=t.result(this,"events")),!e)return this;for(var n in this.undelegateEvents(),e){var l=e[n];if(t.isFunction(l)||(l=this[l]),l){var r=n.match(C);this.delegate(r[1],r[2],t.bind(l,this))}}return this},delegate:function(e,n,t){return this.$el.on(e+".delegateEvents"+this.cid,n,t),this},undelegateEvents:function(){return this.$el&&this.$el.off(".delegateEvents"+this.cid),this},undelegate:function(e,n,t){return this.$el.off(e+".delegateEvents"+this.cid,n,t),this},_createElement:function(e){return document.createElement(e)},_ensureElement:function(){if(this.el)this.setElement(t.result(this,"el"));else{var e=t.extend({},t.result(this,"attributes"));this.id&&(e.id=t.result(this,"id")),this.className&&(e.class=t.result(this,"className")),this.setElement(this._createElement(t.result(this,"tagName"))),this._setAttributes(e)}},_setAttributes:function(e){this.$el.attr(e)}}),n.sync=function(e,l,r){var i=S[e];t.defaults(r||(r={}),{emulateHTTP:n.emulateHTTP,emulateJSON:n.emulateJSON});var a={type:i,dataType:"json"};if(r.url||(a.url=t.result(l,"url")||P()),null!=r.data||!l||"create"!==e&&"update"!==e&&"patch"!==e||(a.contentType="application/json",a.data=JSON.stringify(r.attrs||l.toJSON(r))),r.emulateJSON&&(a.contentType="application/x-www-form-urlencoded",a.data=a.data?{model:a.data}:{}),r.emulateHTTP&&("PUT"===i||"DELETE"===i||"PATCH"===i)){a.type="POST",r.emulateJSON&&(a.data._method=i);var o=r.beforeSend;r.beforeSend=function(e){if(e.setRequestHeader("X-HTTP-Method-Override",i),o)return o.apply(this,arguments)}}"GET"===a.type||r.emulateJSON||(a.processData=!1);var u=r.error;r.error=function(e,n,t){r.textStatus=n,r.errorThrown=t,u&&u.call(r.context,e,n,t)};var s=r.xhr=n.ajax(t.extend(a,r));return l.trigger("request",l,s,r),s};var S={create:"POST",update:"PUT",patch:"PATCH",delete:"DELETE",read:"GET"};n.ajax=function(){return n.$.ajax.apply(n.$,arguments)};var z=n.Router=function(e){e||(e={}),e.routes&&(this.routes=e.routes),this._bindRoutes(),this.initialize.apply(this,arguments)},O=/\((.*?)\)/g,E=/(\(\?)?:\w+/g,L=/\*\w+/g,x=/[\-{}\[\]+?.,\\\^$|#\s]/g;t.extend(z.prototype,s,{initialize:function(){},route:function(e,l,r){t.isRegExp(e)||(e=this._routeToRegExp(e)),t.isFunction(l)&&(r=l,l=""),r||(r=this[l]);var i=this;return n.history.route(e,(function(t){var a=i._extractParameters(e,t);!1!==i.execute(r,a,l)&&(i.trigger.apply(i,["route:"+l].concat(a)),i.trigger("route",l,a),n.history.trigger("route",i,l,a))})),this},execute:function(e,n,t){e&&e.apply(this,n)},navigate:function(e,t){return n.history.navigate(e,t),this},_bindRoutes:function(){if(this.routes){this.routes=t.result(this,"routes");for(var e,n=t.keys(this.routes);null!=(e=n.pop());)this.route(e,this.routes[e])}},_routeToRegExp:function(e){return e=e.replace(x,"\\$&").replace(O,"(?:$1)?").replace(E,(function(e,n){return n?e:"([^/?]+)"})).replace(L,"([^?]*?)"),new RegExp("^"+e+"(?:\\?([\\s\\S]*))?$")},_extractParameters:function(e,n){var l=e.exec(n).slice(1);return t.map(l,(function(e,n){return n===l.length-1?e||null:e?decodeURIComponent(e):null}))}});var k=n.History=function(){this.handlers=[],this.checkUrl=t.bind(this.checkUrl,this),"undefined"!=typeof window&&(this.location=window.location,this.history=window.history)},N=/^[#\/]|\s+$/g,B=/^\/+|\/+$/g,q=/#.*$/;k.started=!1,t.extend(k.prototype,s,{interval:50,atRoot:function(){return this.location.pathname.replace(/[^\/]$/,"$&/")===this.root&&!this.getSearch()},matchRoot:function(){return this.decodeFragment(this.location.pathname).slice(0,this.root.length-1)+"/"===this.root},decodeFragment:function(e){return decodeURI(e.replace(/%25/g,"%2525"))},getSearch:function(){var e=this.location.href.replace(/#.*/,"").match(/\?.+/);return e?e[0]:""},getHash:function(e){var n=(e||this).location.href.match(/#(.*)$/);return n?n[1]:""},getPath:function(){var e=this.decodeFragment(this.location.pathname+this.getSearch()).slice(this.root.length-1);return"/"===e.charAt(0)?e.slice(1):e},getFragment:function(e){return null==e&&(e=this._usePushState||!this._wantsHashChange?this.getPath():this.getHash()),e.replace(N,"")},start:function(e){if(k.started)throw new Error("Backbone.history has already been started");if(k.started=!0,this.options=t.extend({root:"/"},this.options,e),this.root=this.options.root,this._wantsHashChange=!1!==this.options.hashChange,this._hasHashChange="onhashchange"in window&&(void 0===document.documentMode||document.documentMode>7),this._useHashChange=this._wantsHashChange&&this._hasHashChange,this._wantsPushState=!!this.options.pushState,this._hasPushState=!(!this.history||!this.history.pushState),this._usePushState=this._wantsPushState&&this._hasPushState,this.fragment=this.getFragment(),this.root=("/"+this.root+"/").replace(B,"/"),this._wantsHashChange&&this._wantsPushState){if(!this._hasPushState&&!this.atRoot()){var n=this.root.slice(0,-1)||"/";return this.location.replace(n+"#"+this.getPath()),!0}this._hasPushState&&this.atRoot()&&this.navigate(this.getHash(),{replace:!0})}if(!this._hasHashChange&&this._wantsHashChange&&!this._usePushState){this.iframe=document.createElement("iframe"),this.iframe.src="javascript:0",this.iframe.style.display="none",this.iframe.tabIndex=-1;var l=document.body,r=l.insertBefore(this.iframe,l.firstChild).contentWindow;r.document.open(),r.document.close(),r.location.hash="#"+this.fragment}var i=window.addEventListener||function(e,n){return attachEvent("on"+e,n)};if(this._usePushState?i("popstate",this.checkUrl,!1):this._useHashChange&&!this.iframe?i("hashchange",this.checkUrl,!1):this._wantsHashChange&&(this._checkUrlInterval=setInterval(this.checkUrl,this.interval)),!this.options.silent)return this.loadUrl()},stop:function(){var e=window.removeEventListener||function(e,n){return detachEvent("on"+e,n)};this._usePushState?e("popstate",this.checkUrl,!1):this._useHashChange&&!this.iframe&&e("hashchange",this.checkUrl,!1),this.iframe&&(document.body.removeChild(this.iframe),this.iframe=null),this._checkUrlInterval&&clearInterval(this._checkUrlInterval),k.started=!1},route:function(e,n){this.handlers.unshift({route:e,callback:n})},checkUrl:function(e){var n=this.getFragment();if(n===this.fragment&&this.iframe&&(n=this.getHash(this.iframe.contentWindow)),n===this.fragment)return!1;this.iframe&&this.navigate(n),this.loadUrl()},loadUrl:function(e){return!!this.matchRoot()&&(e=this.fragment=this.getFragment(e),t.some(this.handlers,(function(n){if(n.route.test(e))return n.callback(e),!0})))},navigate:function(e,n){if(!k.started)return!1;n&&!0!==n||(n={trigger:!!n}),e=this.getFragment(e||"");var t=this.root;""!==e&&"?"!==e.charAt(0)||(t=t.slice(0,-1)||"/");var l=t+e;if(e=this.decodeFragment(e.replace(q,"")),this.fragment!==e){if(this.fragment=e,this._usePushState)this.history[n.replace?"replaceState":"pushState"]({},document.title,l);else{if(!this._wantsHashChange)return this.location.assign(l);if(this._updateHash(this.location,e,n.replace),this.iframe&&e!==this.getHash(this.iframe.contentWindow)){var r=this.iframe.contentWindow;n.replace||(r.document.open(),r.document.close()),this._updateHash(r.location,e,n.replace)}}return n.trigger?this.loadUrl(e):void 0}},_updateHash:function(e,n,t){if(t){var l=e.href.replace(/(javascript:|#).*$/,"");e.replace(l+"#"+n)}else e.hash="#"+n}}),n.history=new k;M.extend=y.extend=z.extend=_.extend=k.extend=function(e,n){var l,r=this;return l=e&&t.has(e,"constructor")?e.constructor:function(){return r.apply(this,arguments)},t.extend(l,r,n),l.prototype=t.create(r.prototype,e),l.prototype.constructor=l,l.__super__=r.prototype,l};var P=function(){throw new Error('A "url" property or function must be specified')},D=function(e,n){var t=n.error;n.error=function(l){t&&t.call(n.context,e,l,n),e.trigger("error",e,l,n)}};return n}(i,t,e,n)}.apply(n,l),void 0===r||(e.exports=r)},34005:(e,n)=>{"use strict";n.byteLength=function(e){var n=u(e),t=n[0],l=n[1];return 3*(t+l)/4-l},n.toByteArray=function(e){var n,t,i=u(e),a=i[0],o=i[1],s=new r(function(e,n,t){return 3*(n+t)/4-t}(0,a,o)),c=0,d=o>0?a-4:a;for(t=0;t<d;t+=4)n=l[e.charCodeAt(t)]<<18|l[e.charCodeAt(t+1)]<<12|l[e.charCodeAt(t+2)]<<6|l[e.charCodeAt(t+3)],s[c++]=n>>16&255,s[c++]=n>>8&255,s[c++]=255&n;return 2===o&&(n=l[e.charCodeAt(t)]<<2|l[e.charCodeAt(t+1)]>>4,s[c++]=255&n),1===o&&(n=l[e.charCodeAt(t)]<<10|l[e.charCodeAt(t+1)]<<4|l[e.charCodeAt(t+2)]>>2,s[c++]=n>>8&255,s[c++]=255&n),s},n.fromByteArray=function(e){for(var n,l=e.length,r=l%3,i=[],a=16383,o=0,u=l-r;o<u;o+=a)i.push(s(e,o,o+a>u?u:o+a));return 1===r?(n=e[l-1],i.push(t[n>>2]+t[n<<4&63]+"==")):2===r&&(n=(e[l-2]<<8)+e[l-1],i.push(t[n>>10]+t[n>>4&63]+t[n<<2&63]+"=")),i.join("")};for(var t=[],l=[],r="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,o=i.length;a<o;++a)t[a]=i[a],l[i.charCodeAt(a)]=a;function u(e){var n=e.length;if(n%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var t=e.indexOf("=");return-1===t&&(t=n),[t,t===n?0:4-t%4]}function s(e,n,l){for(var r,i,a=[],o=n;o<l;o+=3)r=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),a.push(t[(i=r)>>18&63]+t[i>>12&63]+t[i>>6&63]+t[63&i]);return a.join("")}l["-".charCodeAt(0)]=62,l["_".charCodeAt(0)]=63},74392:(e,n,t)=>{var l,r=t(2724);l=function(){return function e(n,t,l){function r(a,o){if(!t[a]){if(!n[a]){var u="function"==typeof _dereq_&&_dereq_;if(!o&&u)return u(a,!0);if(i)return i(a,!0);var s=new Error("Cannot find module '"+a+"'");throw s.code="MODULE_NOT_FOUND",s}var c=t[a]={exports:{}};n[a][0].call(c.exports,(function(e){return r(n[a][1][e]||e)}),c,c.exports,e,n,t,l)}return t[a].exports}for(var i="function"==typeof _dereq_&&_dereq_,a=0;a<l.length;a++)r(l[a]);return r}({1:[function(e,n,t){"use strict";n.exports=function(e){var n=e._SomePromiseArray;function t(e){var t=new n(e),l=t.promise();return t.setHowMany(1),t.setUnwrap(),t.init(),l}e.any=function(e){return t(e)},e.prototype.any=function(){return t(this)}}},{}],2:[function(e,n,t){"use strict";var l;try{throw new Error}catch(e){l=e}var i=e("./schedule"),a=e("./queue");function o(){this._customScheduler=!1,this._isTickUsed=!1,this._lateQueue=new a(16),this._normalQueue=new a(16),this._haveDrainedQueues=!1;var e=this;this.drainQueues=function(){e._drainQueues()},this._schedule=i}function u(e){for(;e.length()>0;)s(e)}function s(e){var n=e.shift();if("function"!=typeof n)n._settlePromises();else{var t=e.shift(),l=e.shift();n.call(t,l)}}o.prototype.setScheduler=function(e){var n=this._schedule;return this._schedule=e,this._customScheduler=!0,n},o.prototype.hasCustomScheduler=function(){return this._customScheduler},o.prototype.haveItemsQueued=function(){return this._isTickUsed||this._haveDrainedQueues},o.prototype.fatalError=function(e,n){n?(r.stderr.write("Fatal "+(e instanceof Error?e.stack:e)+"\n"),r.exit(2)):this.throwLater(e)},o.prototype.throwLater=function(e,n){if(1===arguments.length&&(n=e,e=function(){throw n}),"undefined"!=typeof setTimeout)setTimeout((function(){e(n)}),0);else try{this._schedule((function(){e(n)}))}catch(e){throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n")}},o.prototype.invokeLater=function(e,n,t){this._lateQueue.push(e,n,t),this._queueTick()},o.prototype.invoke=function(e,n,t){this._normalQueue.push(e,n,t),this._queueTick()},o.prototype.settlePromises=function(e){this._normalQueue._pushOne(e),this._queueTick()},o.prototype._drainQueues=function(){u(this._normalQueue),this._reset(),this._haveDrainedQueues=!0,u(this._lateQueue)},o.prototype._queueTick=function(){this._isTickUsed||(this._isTickUsed=!0,this._schedule(this.drainQueues))},o.prototype._reset=function(){this._isTickUsed=!1},n.exports=o,n.exports.firstLineError=l},{"./queue":26,"./schedule":29}],3:[function(e,n,t){"use strict";n.exports=function(e,n,t,l){var r=!1,i=function(e,n){this._reject(n)},a=function(e,n){n.promiseRejectionQueued=!0,n.bindingPromise._then(i,i,null,this,e)},o=function(e,n){0==(50397184&this._bitField)&&this._resolveCallback(n.target)},u=function(e,n){n.promiseRejectionQueued||this._reject(e)};e.prototype.bind=function(i){r||(r=!0,e.prototype._propagateFrom=l.propagateFromFunction(),e.prototype._boundValue=l.boundValueFunction());var s=t(i),c=new e(n);c._propagateFrom(this,1);var d=this._target();if(c._setBoundTo(s),s instanceof e){var p={promiseRejectionQueued:!1,promise:c,target:d,bindingPromise:s};d._then(n,a,void 0,c,p),s._then(o,u,void 0,c,p),c._setOnCancel(s)}else c._resolveCallback(d);return c},e.prototype._setBoundTo=function(e){void 0!==e?(this._bitField=2097152|this._bitField,this._boundTo=e):this._bitField=-2097153&this._bitField},e.prototype._isBound=function(){return 2097152==(2097152&this._bitField)},e.bind=function(n,t){return e.resolve(t).bind(n)}}},{}],4:[function(e,n,t){"use strict";var l;"undefined"!=typeof Promise&&(l=Promise);var r=e("./promise")();r.noConflict=function(){try{Promise===r&&(Promise=l)}catch(e){}return r},n.exports=r},{"./promise":22}],5:[function(e,n,t){"use strict";var l=Object.create;if(l){var r=l(null),i=l(null);r[" size"]=i[" size"]=0}n.exports=function(n){var t=e("./util"),l=t.canEvaluate;function r(e){var l=function(e,l){var r;if(null!=e&&(r=e[l]),"function"!=typeof r){var i="Object "+t.classString(e)+" has no method '"+t.toString(l)+"'";throw new n.TypeError(i)}return r}(e,this.pop());return l.apply(e,this)}function i(e){return e[this]}function a(e){var n=+this;return n<0&&(n=Math.max(0,n+e.length)),e[n]}t.isIdentifier,n.prototype.call=function(e){var n=[].slice.call(arguments,1);return n.push(e),this._then(r,void 0,void 0,n,void 0)},n.prototype.get=function(e){var n;if("number"==typeof e)n=a;else if(l){var t=(void 0)(e);n=null!==t?t:i}else n=i;return this._then(n,void 0,void 0,e,void 0)}}},{"./util":36}],6:[function(e,n,t){"use strict";n.exports=function(n,t,l,r){var i=e("./util"),a=i.tryCatch,o=i.errorObj,u=n._async;n.prototype.break=n.prototype.cancel=function(){if(!r.cancellation())return this._warn("cancellation is disabled");for(var e=this,n=e;e._isCancellable();){if(!e._cancelBy(n)){n._isFollowing()?n._followee().cancel():n._cancelBranched();break}var t=e._cancellationParent;if(null==t||!t._isCancellable()){e._isFollowing()?e._followee().cancel():e._cancelBranched();break}e._isFollowing()&&e._followee().cancel(),e._setWillBeCancelled(),n=e,e=t}},n.prototype._branchHasCancelled=function(){this._branchesRemainingToCancel--},n.prototype._enoughBranchesHaveCancelled=function(){return void 0===this._branchesRemainingToCancel||this._branchesRemainingToCancel<=0},n.prototype._cancelBy=function(e){return e===this?(this._branchesRemainingToCancel=0,this._invokeOnCancel(),!0):(this._branchHasCancelled(),!!this._enoughBranchesHaveCancelled()&&(this._invokeOnCancel(),!0))},n.prototype._cancelBranched=function(){this._enoughBranchesHaveCancelled()&&this._cancel()},n.prototype._cancel=function(){this._isCancellable()&&(this._setCancelled(),u.invoke(this._cancelPromises,this,void 0))},n.prototype._cancelPromises=function(){this._length()>0&&this._settlePromises()},n.prototype._unsetOnCancel=function(){this._onCancelField=void 0},n.prototype._isCancellable=function(){return this.isPending()&&!this._isCancelled()},n.prototype.isCancellable=function(){return this.isPending()&&!this.isCancelled()},n.prototype._doInvokeOnCancel=function(e,n){if(i.isArray(e))for(var t=0;t<e.length;++t)this._doInvokeOnCancel(e[t],n);else if(void 0!==e)if("function"==typeof e){if(!n){var l=a(e).call(this._boundValue());l===o&&(this._attachExtraTrace(l.e),u.throwLater(l.e))}}else e._resultCancelled(this)},n.prototype._invokeOnCancel=function(){var e=this._onCancel();this._unsetOnCancel(),u.invoke(this._doInvokeOnCancel,this,e)},n.prototype._invokeInternalOnCancel=function(){this._isCancellable()&&(this._doInvokeOnCancel(this._onCancel(),!0),this._unsetOnCancel())},n.prototype._resultCancelled=function(){this.cancel()}}},{"./util":36}],7:[function(e,n,t){"use strict";n.exports=function(n){var t=e("./util"),l=e("./es5").keys,r=t.tryCatch,i=t.errorObj;return function(e,a,o){return function(u){var s=o._boundValue();e:for(var c=0;c<e.length;++c){var d=e[c];if(d===Error||null!=d&&d.prototype instanceof Error){if(u instanceof d)return r(a).call(s,u)}else if("function"==typeof d){var p=r(d).call(s,u);if(p===i)return p;if(p)return r(a).call(s,u)}else if(t.isObject(u)){for(var f=l(d),h=0;h<f.length;++h){var m=f[h];if(d[m]!=u[m])continue e}return r(a).call(s,u)}}return n}}}},{"./es5":13,"./util":36}],8:[function(e,n,t){"use strict";n.exports=function(e){var n=!1,t=[];function l(){this._trace=new l.CapturedTrace(r())}function r(){var e=t.length-1;if(e>=0)return t[e]}return e.prototype._promiseCreated=function(){},e.prototype._pushContext=function(){},e.prototype._popContext=function(){return null},e._peekContext=e.prototype._peekContext=function(){},l.prototype._pushContext=function(){void 0!==this._trace&&(this._trace._promiseCreated=null,t.push(this._trace))},l.prototype._popContext=function(){if(void 0!==this._trace){var e=t.pop(),n=e._promiseCreated;return e._promiseCreated=null,n}return null},l.CapturedTrace=null,l.create=function(){if(n)return new l},l.deactivateLongStackTraces=function(){},l.activateLongStackTraces=function(){var t=e.prototype._pushContext,i=e.prototype._popContext,a=e._peekContext,o=e.prototype._peekContext,u=e.prototype._promiseCreated;l.deactivateLongStackTraces=function(){e.prototype._pushContext=t,e.prototype._popContext=i,e._peekContext=a,e.prototype._peekContext=o,e.prototype._promiseCreated=u,n=!1},n=!0,e.prototype._pushContext=l.prototype._pushContext,e.prototype._popContext=l.prototype._popContext,e._peekContext=e.prototype._peekContext=r,e.prototype._promiseCreated=function(){var e=this._peekContext();e&&null==e._promiseCreated&&(e._promiseCreated=this)}},l}},{}],9:[function(e,n,t){"use strict";n.exports=function(n,t,l,i){var a,o,u,s,c=n._async,d=e("./errors").Warning,p=e("./util"),f=e("./es5"),h=p.canAttachTrace,m=/[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/,b=/\((?:timers\.js):\d+:\d+\)/,g=/[\/<\(](.+?):(\d+):(\d+)\)?\s*$/,M=null,y=null,v=!1,A=!(0==p.env("BLUEBIRD_DEBUG")),w=!(0==p.env("BLUEBIRD_WARNINGS")||!A&&!p.env("BLUEBIRD_WARNINGS")),_=!(0==p.env("BLUEBIRD_LONG_STACK_TRACES")||!A&&!p.env("BLUEBIRD_LONG_STACK_TRACES")),C=0!=p.env("BLUEBIRD_W_FORGOTTEN_RETURN")&&(w||!!p.env("BLUEBIRD_W_FORGOTTEN_RETURN"));!function(){var e=[];function t(){for(var n=0;n<e.length;++n)e[n]._notifyUnhandledRejection();l()}function l(){e.length=0}s=function(n){e.push(n),setTimeout(t,1)},f.defineProperty(n,"_unhandledRejectionCheck",{value:t}),f.defineProperty(n,"_unhandledRejectionClear",{value:l})}(),n.prototype.suppressUnhandledRejections=function(){var e=this._target();e._bitField=-1048577&e._bitField|524288},n.prototype._ensurePossibleRejectionHandled=function(){0==(524288&this._bitField)&&(this._setRejectionIsUnhandled(),s(this))},n.prototype._notifyUnhandledRejectionIsHandled=function(){V("rejectionHandled",a,void 0,this)},n.prototype._setReturnedNonUndefined=function(){this._bitField=268435456|this._bitField},n.prototype._returnedNonUndefined=function(){return 0!=(268435456&this._bitField)},n.prototype._notifyUnhandledRejection=function(){if(this._isRejectionUnhandled()){var e=this._settledValue();this._setUnhandledRejectionIsNotified(),V("unhandledRejection",o,e,this)}},n.prototype._setUnhandledRejectionIsNotified=function(){this._bitField=262144|this._bitField},n.prototype._unsetUnhandledRejectionIsNotified=function(){this._bitField=-262145&this._bitField},n.prototype._isUnhandledRejectionNotified=function(){return(262144&this._bitField)>0},n.prototype._setRejectionIsUnhandled=function(){this._bitField=1048576|this._bitField},n.prototype._unsetRejectionIsUnhandled=function(){this._bitField=-1048577&this._bitField,this._isUnhandledRejectionNotified()&&(this._unsetUnhandledRejectionIsNotified(),this._notifyUnhandledRejectionIsHandled())},n.prototype._isRejectionUnhandled=function(){return(1048576&this._bitField)>0},n.prototype._warn=function(e,n,t){return G(e,n,t||this)},n.onPossiblyUnhandledRejection=function(e){var t=n._getContext();o=p.contextBind(t,e)},n.onUnhandledRejectionHandled=function(e){var t=n._getContext();a=p.contextBind(t,e)};var T=function(){};n.longStackTraces=function(){if(c.haveItemsQueued()&&!te.longStackTraces)throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");if(!te.longStackTraces&&K()){var e=n.prototype._captureStackTrace,l=n.prototype._attachExtraTrace,r=n.prototype._dereferenceTrace;te.longStackTraces=!0,T=function(){if(c.haveItemsQueued()&&!te.longStackTraces)throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");n.prototype._captureStackTrace=e,n.prototype._attachExtraTrace=l,n.prototype._dereferenceTrace=r,t.deactivateLongStackTraces(),te.longStackTraces=!1},n.prototype._captureStackTrace=F,n.prototype._attachExtraTrace=j,n.prototype._dereferenceTrace=X,t.activateLongStackTraces()}},n.hasLongStackTraces=function(){return te.longStackTraces&&K()};var S={unhandledrejection:{before:function(){var e=p.global.onunhandledrejection;return p.global.onunhandledrejection=null,e},after:function(e){p.global.onunhandledrejection=e}},rejectionhandled:{before:function(){var e=p.global.onrejectionhandled;return p.global.onrejectionhandled=null,e},after:function(e){p.global.onrejectionhandled=e}}},z=function(){var e=function(e,n){if(!e)return!p.global.dispatchEvent(n);var t;try{return t=e.before(),!p.global.dispatchEvent(n)}finally{e.after(t)}};try{if("function"==typeof CustomEvent){var n=new CustomEvent("CustomEvent");return p.global.dispatchEvent(n),function(n,t){n=n.toLowerCase();var l=new CustomEvent(n,{detail:t,cancelable:!0});return f.defineProperty(l,"promise",{value:t.promise}),f.defineProperty(l,"reason",{value:t.reason}),e(S[n],l)}}return"function"==typeof Event?(n=new Event("CustomEvent"),p.global.dispatchEvent(n),function(n,t){n=n.toLowerCase();var l=new Event(n,{cancelable:!0});return l.detail=t,f.defineProperty(l,"promise",{value:t.promise}),f.defineProperty(l,"reason",{value:t.reason}),e(S[n],l)}):((n=document.createEvent("CustomEvent")).initCustomEvent("testingtheevent",!1,!0,{}),p.global.dispatchEvent(n),function(n,t){n=n.toLowerCase();var l=document.createEvent("CustomEvent");return l.initCustomEvent(n,!1,!0,t),e(S[n],l)})}catch(e){}return function(){return!1}}(),O=p.isNode?function(){return r.emit.apply(r,arguments)}:p.global?function(e){var n="on"+e.toLowerCase(),t=p.global[n];return!!t&&(t.apply(p.global,[].slice.call(arguments,1)),!0)}:function(){return!1};function E(e,n){return{promise:n}}var L={promiseCreated:E,promiseFulfilled:E,promiseRejected:E,promiseResolved:E,promiseCancelled:E,promiseChained:function(e,n,t){return{promise:n,child:t}},warning:function(e,n){return{warning:n}},unhandledRejection:function(e,n,t){return{reason:n,promise:t}},rejectionHandled:E},x=function(e){var n=!1;try{n=O.apply(null,arguments)}catch(e){c.throwLater(e),n=!0}var t=!1;try{t=z(e,L[e].apply(null,arguments))}catch(e){c.throwLater(e),t=!0}return t||n};function k(){return!1}function N(e,n,t){var l=this;try{e(n,t,(function(e){if("function"!=typeof e)throw new TypeError("onCancel must be a function, got: "+p.toString(e));l._attachCancellationCallback(e)}))}catch(e){return e}}function B(e){if(!this._isCancellable())return this;var n=this._onCancel();void 0!==n?p.isArray(n)?n.push(e):this._setOnCancel([n,e]):this._setOnCancel(e)}function q(){return this._onCancelField}function P(e){this._onCancelField=e}function D(){this._cancellationParent=void 0,this._onCancelField=void 0}function R(e,n){if(0!=(1&n)){this._cancellationParent=e;var t=e._branchesRemainingToCancel;void 0===t&&(t=0),e._branchesRemainingToCancel=t+1}0!=(2&n)&&e._isBound()&&this._setBoundTo(e._boundTo)}n.config=function(e){if("longStackTraces"in(e=Object(e))&&(e.longStackTraces?n.longStackTraces():!e.longStackTraces&&n.hasLongStackTraces()&&T()),"warnings"in e){var t=e.warnings;te.warnings=!!t,C=te.warnings,p.isObject(t)&&"wForgottenReturn"in t&&(C=!!t.wForgottenReturn)}if("cancellation"in e&&e.cancellation&&!te.cancellation){if(c.haveItemsQueued())throw new Error("cannot enable cancellation after promises are in use");n.prototype._clearCancellationData=D,n.prototype._propagateFrom=R,n.prototype._onCancel=q,n.prototype._setOnCancel=P,n.prototype._attachCancellationCallback=B,n.prototype._execute=N,W=R,te.cancellation=!0}if("monitoring"in e&&(e.monitoring&&!te.monitoring?(te.monitoring=!0,n.prototype._fireEvent=x):!e.monitoring&&te.monitoring&&(te.monitoring=!1,n.prototype._fireEvent=k)),"asyncHooks"in e&&p.nodeSupportsAsyncResource){var r=te.asyncHooks,a=!!e.asyncHooks;r!==a&&(te.asyncHooks=a,a?l():i())}return n},n.prototype._fireEvent=k,n.prototype._execute=function(e,n,t){try{e(n,t)}catch(e){return e}},n.prototype._onCancel=function(){},n.prototype._setOnCancel=function(e){},n.prototype._attachCancellationCallback=function(e){},n.prototype._captureStackTrace=function(){},n.prototype._attachExtraTrace=function(){},n.prototype._dereferenceTrace=function(){},n.prototype._clearCancellationData=function(){},n.prototype._propagateFrom=function(e,n){};var W=function(e,n){0!=(2&n)&&e._isBound()&&this._setBoundTo(e._boundTo)};function I(){var e=this._boundTo;return void 0!==e&&e instanceof n?e.isFulfilled()?e.value():void 0:e}function F(){this._trace=new ee(this._peekContext())}function j(e,n){if(h(e)){var t=this._trace;if(void 0!==t&&n&&(t=t._parent),void 0!==t)t.attachExtraTrace(e);else if(!e.__stackCleaned__){var l=U(e);p.notEnumerableProp(e,"stack",l.message+"\n"+l.stack.join("\n")),p.notEnumerableProp(e,"__stackCleaned__",!0)}}}function X(){this._trace=void 0}function G(e,t,l){if(te.warnings){var r,i=new d(e);if(t)l._attachExtraTrace(i);else if(te.longStackTraces&&(r=n._peekContext()))r.attachExtraTrace(i);else{var a=U(i);i.stack=a.message+"\n"+a.stack.join("\n")}x("warning",i)||$(i,"",!0)}}function H(e){for(var n=[],t=0;t<e.length;++t){var l=e[t],r="    (No stack trace)"===l||M.test(l),i=r&&Y(l);r&&!i&&(v&&" "!==l.charAt(0)&&(l="    "+l),n.push(l))}return n}function U(e){var n=e.stack,t=e.toString();return n="string"==typeof n&&n.length>0?function(e){for(var n=e.stack.replace(/\s+$/g,"").split("\n"),t=0;t<n.length;++t){var l=n[t];if("    (No stack trace)"===l||M.test(l))break}return t>0&&"SyntaxError"!=e.name&&(n=n.slice(t)),n}(e):["    (No stack trace)"],{message:t,stack:"SyntaxError"==e.name?n:H(n)}}function $(e,n,t){if("undefined"!=typeof console){var l;if(p.isObject(e)){var r=e.stack;l=n+y(r,e)}else l=n+String(e);"function"==typeof u?u(l,t):"function"!=typeof console.log&&"object"!=typeof console.log||console.log(l)}}function V(e,n,t,l){var r=!1;try{"function"==typeof n&&(r=!0,"rejectionHandled"===e?n(l):n(t,l))}catch(e){c.throwLater(e)}"unhandledRejection"===e?x(e,t,l)||r||$(t,"Unhandled rejection "):x(e,l)}function Z(e){var n;if("function"==typeof e)n="[function "+(e.name||"anonymous")+"]";else{if(n=e&&"function"==typeof e.toString?e.toString():p.toString(e),/\[object [a-zA-Z0-9$_]+\]/.test(n))try{n=JSON.stringify(e)}catch(e){}0===n.length&&(n="(empty array)")}return"(<"+function(e){return e.length<41?e:e.substr(0,38)+"..."}(n)+">, no stack trace)"}function K(){return"function"==typeof ne}var Y=function(){return!1},J=/[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;function Q(e){var n=e.match(J);if(n)return{fileName:n[1],line:parseInt(n[2],10)}}function ee(e){this._parent=e,this._promisesCreated=0;var n=this._length=1+(void 0===e?0:e._length);ne(this,ee),n>32&&this.uncycle()}p.inherits(ee,Error),t.CapturedTrace=ee,ee.prototype.uncycle=function(){var e=this._length;if(!(e<2)){for(var n=[],t={},l=0,r=this;void 0!==r;++l)n.push(r),r=r._parent;for(l=(e=this._length=l)-1;l>=0;--l){var i=n[l].stack;void 0===t[i]&&(t[i]=l)}for(l=0;l<e;++l){var a=t[n[l].stack];if(void 0!==a&&a!==l){a>0&&(n[a-1]._parent=void 0,n[a-1]._length=1),n[l]._parent=void 0,n[l]._length=1;var o=l>0?n[l-1]:this;a<e-1?(o._parent=n[a+1],o._parent.uncycle(),o._length=o._parent._length+1):(o._parent=void 0,o._length=1);for(var u=o._length+1,s=l-2;s>=0;--s)n[s]._length=u,u++;return}}}},ee.prototype.attachExtraTrace=function(e){if(!e.__stackCleaned__){this.uncycle();for(var n=U(e),t=n.message,l=[n.stack],r=this;void 0!==r;)l.push(H(r.stack.split("\n"))),r=r._parent;!function(e){for(var n=e[0],t=1;t<e.length;++t){for(var l=e[t],r=n.length-1,i=n[r],a=-1,o=l.length-1;o>=0;--o)if(l[o]===i){a=o;break}for(o=a;o>=0;--o){var u=l[o];if(n[r]!==u)break;n.pop(),r--}n=l}}(l),function(e){for(var n=0;n<e.length;++n)(0===e[n].length||n+1<e.length&&e[n][0]===e[n+1][0])&&(e.splice(n,1),n--)}(l),p.notEnumerableProp(e,"stack",function(e,n){for(var t=0;t<n.length-1;++t)n[t].push("From previous event:"),n[t]=n[t].join("\n");return t<n.length&&(n[t]=n[t].join("\n")),e+"\n"+n.join("\n")}(t,l)),p.notEnumerableProp(e,"__stackCleaned__",!0)}};var ne=function(){var e=/^\s*at\s*/,n=function(e,n){return"string"==typeof e?e:void 0!==n.name&&void 0!==n.message?n.toString():Z(n)};if("number"==typeof Error.stackTraceLimit&&"function"==typeof Error.captureStackTrace){Error.stackTraceLimit+=6,M=e,y=n;var t=Error.captureStackTrace;return Y=function(e){return m.test(e)},function(e,n){Error.stackTraceLimit+=6,t(e,n),Error.stackTraceLimit-=6}}var l,r=new Error;if("string"==typeof r.stack&&r.stack.split("\n")[0].indexOf("stackDetection@")>=0)return M=/@/,y=n,v=!0,function(e){e.stack=(new Error).stack};try{throw new Error}catch(e){l="stack"in e}return!("stack"in r)&&l&&"number"==typeof Error.stackTraceLimit?(M=e,y=n,function(e){Error.stackTraceLimit+=6;try{throw new Error}catch(n){e.stack=n.stack}Error.stackTraceLimit-=6}):(y=function(e,n){return"string"==typeof e?e:"object"!=typeof n&&"function"!=typeof n||void 0===n.name||void 0===n.message?Z(n):n.toString()},null)}();"undefined"!=typeof console&&void 0!==console.warn&&(u=function(e){console.warn(e)},p.isNode&&r.stderr.isTTY?u=function(e,n){var t=n?"[33m":"[31m";console.warn(t+e+"[0m\n")}:p.isNode||"string"!=typeof(new Error).stack||(u=function(e,n){console.warn("%c"+e,n?"color: darkorange":"color: red")}));var te={warnings:w,longStackTraces:!1,cancellation:!1,monitoring:!1,asyncHooks:!1};return _&&n.longStackTraces(),{asyncHooks:function(){return te.asyncHooks},longStackTraces:function(){return te.longStackTraces},warnings:function(){return te.warnings},cancellation:function(){return te.cancellation},monitoring:function(){return te.monitoring},propagateFromFunction:function(){return W},boundValueFunction:function(){return I},checkForgottenReturns:function(e,n,t,l,r){if(void 0===e&&null!==n&&C){if(void 0!==r&&r._returnedNonUndefined())return;if(0==(65535&l._bitField))return;t&&(t+=" ");var i="",a="";if(n._trace){for(var o=n._trace.stack.split("\n"),u=H(o),s=u.length-1;s>=0;--s){var c=u[s];if(!b.test(c)){var d=c.match(g);d&&(i="at "+d[1]+":"+d[2]+":"+d[3]+" ");break}}if(u.length>0){var p=u[0];for(s=0;s<o.length;++s)if(o[s]===p){s>0&&(a="\n"+o[s-1]);break}}}var f="a promise was created in a "+t+"handler "+i+"but was not returned from it, see http://goo.gl/rRqMUw"+a;l._warn(f,!0,n)}},setBounds:function(e,n){if(K()){for(var t,l,r=(e.stack||"").split("\n"),i=(n.stack||"").split("\n"),a=-1,o=-1,u=0;u<r.length;++u)if(s=Q(r[u])){t=s.fileName,a=s.line;break}for(u=0;u<i.length;++u){var s;if(s=Q(i[u])){l=s.fileName,o=s.line;break}}a<0||o<0||!t||!l||t!==l||a>=o||(Y=function(e){if(m.test(e))return!0;var n=Q(e);return!!(n&&n.fileName===t&&a<=n.line&&n.line<=o)})}},warn:G,deprecated:function(e,n){var t=e+" is deprecated and will be removed in a future version.";return n&&(t+=" Use "+n+" instead."),G(t)},CapturedTrace:ee,fireDomEvent:z,fireGlobalEvent:O}}},{"./errors":12,"./es5":13,"./util":36}],10:[function(e,n,t){"use strict";n.exports=function(e){function n(){return this.value}function t(){throw this.reason}e.prototype.return=e.prototype.thenReturn=function(t){return t instanceof e&&t.suppressUnhandledRejections(),this._then(n,void 0,void 0,{value:t},void 0)},e.prototype.throw=e.prototype.thenThrow=function(e){return this._then(t,void 0,void 0,{reason:e},void 0)},e.prototype.catchThrow=function(e){if(arguments.length<=1)return this._then(void 0,t,void 0,{reason:e},void 0);var n=arguments[1],l=function(){throw n};return this.caught(e,l)},e.prototype.catchReturn=function(t){if(arguments.length<=1)return t instanceof e&&t.suppressUnhandledRejections(),this._then(void 0,n,void 0,{value:t},void 0);var l=arguments[1];l instanceof e&&l.suppressUnhandledRejections();var r=function(){return l};return this.caught(t,r)}}},{}],11:[function(e,n,t){"use strict";n.exports=function(e,n){var t=e.reduce,l=e.all;function r(){return l(this)}e.prototype.each=function(e){return t(this,e,n,0)._then(r,void 0,void 0,this,void 0)},e.prototype.mapSeries=function(e){return t(this,e,n,n)},e.each=function(e,l){return t(e,l,n,0)._then(r,void 0,void 0,e,void 0)},e.mapSeries=function(e,l){return t(e,l,n,n)}}},{}],12:[function(e,n,t){"use strict";var l,r,i=e("./es5"),a=i.freeze,o=e("./util"),u=o.inherits,s=o.notEnumerableProp;function c(e,n){function t(l){if(!(this instanceof t))return new t(l);s(this,"message","string"==typeof l?l:n),s(this,"name",e),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):Error.call(this)}return u(t,Error),t}var d=c("Warning","warning"),p=c("CancellationError","cancellation error"),f=c("TimeoutError","timeout error"),h=c("AggregateError","aggregate error");try{l=TypeError,r=RangeError}catch(e){l=c("TypeError","type error"),r=c("RangeError","range error")}for(var m="join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse".split(" "),b=0;b<m.length;++b)"function"==typeof Array.prototype[m[b]]&&(h.prototype[m[b]]=Array.prototype[m[b]]);i.defineProperty(h.prototype,"length",{value:0,configurable:!1,writable:!0,enumerable:!0}),h.prototype.isOperational=!0;var g=0;function M(e){if(!(this instanceof M))return new M(e);s(this,"name","OperationalError"),s(this,"message",e),this.cause=e,this.isOperational=!0,e instanceof Error?(s(this,"message",e.message),s(this,"stack",e.stack)):Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}h.prototype.toString=function(){var e=Array(4*g+1).join(" "),n="\n"+e+"AggregateError of:\n";g++,e=Array(4*g+1).join(" ");for(var t=0;t<this.length;++t){for(var l=this[t]===this?"[Circular AggregateError]":this[t]+"",r=l.split("\n"),i=0;i<r.length;++i)r[i]=e+r[i];n+=(l=r.join("\n"))+"\n"}return g--,n},u(M,Error);var y=Error.__BluebirdErrorTypes__;y||(y=a({CancellationError:p,TimeoutError:f,OperationalError:M,RejectionError:M,AggregateError:h}),i.defineProperty(Error,"__BluebirdErrorTypes__",{value:y,writable:!1,enumerable:!1,configurable:!1})),n.exports={Error,TypeError:l,RangeError:r,CancellationError:y.CancellationError,OperationalError:y.OperationalError,TimeoutError:y.TimeoutError,AggregateError:y.AggregateError,Warning:d}},{"./es5":13,"./util":36}],13:[function(e,n,t){var l=function(){"use strict";return void 0===this}();if(l)n.exports={freeze:Object.freeze,defineProperty:Object.defineProperty,getDescriptor:Object.getOwnPropertyDescriptor,keys:Object.keys,names:Object.getOwnPropertyNames,getPrototypeOf:Object.getPrototypeOf,isArray:Array.isArray,isES5:l,propertyIsWritable:function(e,n){var t=Object.getOwnPropertyDescriptor(e,n);return!(t&&!t.writable&&!t.set)}};else{var r={}.hasOwnProperty,i={}.toString,a={}.constructor.prototype,o=function(e){var n=[];for(var t in e)r.call(e,t)&&n.push(t);return n};n.exports={isArray:function(e){try{return"[object Array]"===i.call(e)}catch(e){return!1}},keys:o,names:o,defineProperty:function(e,n,t){return e[n]=t.value,e},getDescriptor:function(e,n){return{value:e[n]}},freeze:function(e){return e},getPrototypeOf:function(e){try{return Object(e).constructor.prototype}catch(e){return a}},isES5:l,propertyIsWritable:function(){return!0}}}},{}],14:[function(e,n,t){"use strict";n.exports=function(e,n){var t=e.map;e.prototype.filter=function(e,l){return t(this,e,l,n)},e.filter=function(e,l,r){return t(e,l,r,n)}}},{}],15:[function(e,n,t){"use strict";n.exports=function(n,t,l){var r=e("./util"),i=n.CancellationError,a=r.errorObj,o=e("./catch_filter")(l);function u(e,n,t){this.promise=e,this.type=n,this.handler=t,this.called=!1,this.cancelPromise=null}function s(e){this.finallyHandler=e}function c(e,n){return null!=e.cancelPromise&&(arguments.length>1?e.cancelPromise._reject(n):e.cancelPromise._cancel(),e.cancelPromise=null,!0)}function d(){return f.call(this,this.promise._target()._settledValue())}function p(e){if(!c(this,e))return a.e=e,a}function f(e){var r=this.promise,o=this.handler;if(!this.called){this.called=!0;var u=this.isFinallyHandler()?o.call(r._boundValue()):o.call(r._boundValue(),e);if(u===l)return u;if(void 0!==u){r._setReturnedNonUndefined();var f=t(u,r);if(f instanceof n){if(null!=this.cancelPromise){if(f._isCancelled()){var h=new i("late cancellation observer");return r._attachExtraTrace(h),a.e=h,a}f.isPending()&&f._attachCancellationCallback(new s(this))}return f._then(d,p,void 0,this,void 0)}}}return r.isRejected()?(c(this),a.e=e,a):(c(this),e)}return u.prototype.isFinallyHandler=function(){return 0===this.type},s.prototype._resultCancelled=function(){c(this.finallyHandler)},n.prototype._passThrough=function(e,n,t,l){return"function"!=typeof e?this.then():this._then(t,l,void 0,new u(this,n,e),void 0)},n.prototype.lastly=n.prototype.finally=function(e){return this._passThrough(e,0,f,f)},n.prototype.tap=function(e){return this._passThrough(e,1,f)},n.prototype.tapCatch=function(e){var t=arguments.length;if(1===t)return this._passThrough(e,1,void 0,f);var l,i=new Array(t-1),a=0;for(l=0;l<t-1;++l){var u=arguments[l];if(!r.isObject(u))return n.reject(new TypeError("tapCatch statement predicate: expecting an object but got "+r.classString(u)));i[a++]=u}i.length=a;var s=arguments[l];return this._passThrough(o(i,s,this),1,void 0,f)},u}},{"./catch_filter":7,"./util":36}],16:[function(e,n,t){"use strict";n.exports=function(n,t,l,r,i,a){var o=e("./errors").TypeError,u=e("./util"),s=u.errorObj,c=u.tryCatch,d=[];function p(e,t,r,i){if(a.cancellation()){var o=new n(l),u=this._finallyPromise=new n(l);this._promise=o.lastly((function(){return u})),o._captureStackTrace(),o._setOnCancel(this)}else(this._promise=new n(l))._captureStackTrace();this._stack=i,this._generatorFunction=e,this._receiver=t,this._generator=void 0,this._yieldHandlers="function"==typeof r?[r].concat(d):d,this._yieldedPromise=null,this._cancellationPhase=!1}u.inherits(p,i),p.prototype._isResolved=function(){return null===this._promise},p.prototype._cleanup=function(){this._promise=this._generator=null,a.cancellation()&&null!==this._finallyPromise&&(this._finallyPromise._fulfill(),this._finallyPromise=null)},p.prototype._promiseCancelled=function(){if(!this._isResolved()){var e;if(void 0!==this._generator.return)this._promise._pushContext(),e=c(this._generator.return).call(this._generator,void 0),this._promise._popContext();else{var t=new n.CancellationError("generator .return() sentinel");n.coroutine.returnSentinel=t,this._promise._attachExtraTrace(t),this._promise._pushContext(),e=c(this._generator.throw).call(this._generator,t),this._promise._popContext()}this._cancellationPhase=!0,this._yieldedPromise=null,this._continue(e)}},p.prototype._promiseFulfilled=function(e){this._yieldedPromise=null,this._promise._pushContext();var n=c(this._generator.next).call(this._generator,e);this._promise._popContext(),this._continue(n)},p.prototype._promiseRejected=function(e){this._yieldedPromise=null,this._promise._attachExtraTrace(e),this._promise._pushContext();var n=c(this._generator.throw).call(this._generator,e);this._promise._popContext(),this._continue(n)},p.prototype._resultCancelled=function(){if(this._yieldedPromise instanceof n){var e=this._yieldedPromise;this._yieldedPromise=null,e.cancel()}},p.prototype.promise=function(){return this._promise},p.prototype._run=function(){this._generator=this._generatorFunction.call(this._receiver),this._receiver=this._generatorFunction=void 0,this._promiseFulfilled(void 0)},p.prototype._continue=function(e){var t=this._promise;if(e===s)return this._cleanup(),this._cancellationPhase?t.cancel():t._rejectCallback(e.e,!1);var l=e.value;if(!0===e.done)return this._cleanup(),this._cancellationPhase?t.cancel():t._resolveCallback(l);var i=r(l,this._promise);if(i instanceof n||(i=function(e,t,l){for(var i=0;i<t.length;++i){l._pushContext();var a=c(t[i])(e);if(l._popContext(),a===s){l._pushContext();var o=n.reject(s.e);return l._popContext(),o}var u=r(a,l);if(u instanceof n)return u}return null}(i,this._yieldHandlers,this._promise),null!==i)){var a=(i=i._target())._bitField;0==(50397184&a)?(this._yieldedPromise=i,i._proxy(this,null)):0!=(33554432&a)?n._async.invoke(this._promiseFulfilled,this,i._value()):0!=(16777216&a)?n._async.invoke(this._promiseRejected,this,i._reason()):this._promiseCancelled()}else this._promiseRejected(new o("A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n".replace("%s",String(l))+"From coroutine:\n"+this._stack.split("\n").slice(1,-7).join("\n")))},n.coroutine=function(e,n){if("function"!=typeof e)throw new o("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");var t=Object(n).yieldHandler,l=p,r=(new Error).stack;return function(){var n=e.apply(this,arguments),i=new l(void 0,void 0,t,r),a=i.promise();return i._generator=n,i._promiseFulfilled(void 0),a}},n.coroutine.addYieldHandler=function(e){if("function"!=typeof e)throw new o("expecting a function but got "+u.classString(e));d.push(e)},n.spawn=function(e){if(a.deprecated("Promise.spawn()","Promise.coroutine()"),"function"!=typeof e)return t("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");var l=new p(e,this),r=l.promise();return l._run(n.spawn),r}}},{"./errors":12,"./util":36}],17:[function(e,n,t){"use strict";n.exports=function(n,t,l,r,i){var a=e("./util");a.canEvaluate,a.tryCatch,a.errorObj,n.join=function(){var e,n=arguments.length-1;n>0&&"function"==typeof arguments[n]&&(e=arguments[n]);var l=[].slice.call(arguments);e&&l.pop();var r=new t(l).promise();return void 0!==e?r.spread(e):r}}},{"./util":36}],18:[function(e,n,t){"use strict";n.exports=function(n,t,l,r,i,a){var o=e("./util"),u=o.tryCatch,s=o.errorObj,c=n._async;function d(e,t,l,r){this.constructor$(e),this._promise._captureStackTrace();var a=n._getContext();if(this._callback=o.contextBind(a,t),this._preservedValues=r===i?new Array(this.length()):null,this._limit=l,this._inFlight=0,this._queue=[],c.invoke(this._asyncInit,this,void 0),o.isArray(e))for(var u=0;u<e.length;++u){var s=e[u];s instanceof n&&s.suppressUnhandledRejections()}}function p(e,t,r,i){if("function"!=typeof t)return l("expecting a function but got "+o.classString(t));var a=0;if(void 0!==r){if("object"!=typeof r||null===r)return n.reject(new TypeError("options argument must be an object but it is "+o.classString(r)));if("number"!=typeof r.concurrency)return n.reject(new TypeError("'concurrency' must be a number but it is "+o.classString(r.concurrency)));a=r.concurrency}return new d(e,t,a="number"==typeof a&&isFinite(a)&&a>=1?a:0,i).promise()}o.inherits(d,t),d.prototype._asyncInit=function(){this._init$(void 0,-2)},d.prototype._init=function(){},d.prototype._promiseFulfilled=function(e,t){var l=this._values,i=this.length(),o=this._preservedValues,c=this._limit;if(t<0){if(l[t=-1*t-1]=e,c>=1&&(this._inFlight--,this._drainQueue(),this._isResolved()))return!0}else{if(c>=1&&this._inFlight>=c)return l[t]=e,this._queue.push(t),!1;null!==o&&(o[t]=e);var d=this._promise,p=this._callback,f=d._boundValue();d._pushContext();var h=u(p).call(f,e,t,i),m=d._popContext();if(a.checkForgottenReturns(h,m,null!==o?"Promise.filter":"Promise.map",d),h===s)return this._reject(h.e),!0;var b=r(h,this._promise);if(b instanceof n){var g=(b=b._target())._bitField;if(0==(50397184&g))return c>=1&&this._inFlight++,l[t]=b,b._proxy(this,-1*(t+1)),!1;if(0==(33554432&g))return 0!=(16777216&g)?(this._reject(b._reason()),!0):(this._cancel(),!0);h=b._value()}l[t]=h}return++this._totalResolved>=i&&(null!==o?this._filter(l,o):this._resolve(l),!0)},d.prototype._drainQueue=function(){for(var e=this._queue,n=this._limit,t=this._values;e.length>0&&this._inFlight<n;){if(this._isResolved())return;var l=e.pop();this._promiseFulfilled(t[l],l)}},d.prototype._filter=function(e,n){for(var t=n.length,l=new Array(t),r=0,i=0;i<t;++i)e[i]&&(l[r++]=n[i]);l.length=r,this._resolve(l)},d.prototype.preservedValues=function(){return this._preservedValues},n.prototype.map=function(e,n){return p(this,e,n,null)},n.map=function(e,n,t,l){return p(e,n,t,l)}}},{"./util":36}],19:[function(e,n,t){"use strict";n.exports=function(n,t,l,r,i){var a=e("./util"),o=a.tryCatch;n.method=function(e){if("function"!=typeof e)throw new n.TypeError("expecting a function but got "+a.classString(e));return function(){var l=new n(t);l._captureStackTrace(),l._pushContext();var r=o(e).apply(this,arguments),a=l._popContext();return i.checkForgottenReturns(r,a,"Promise.method",l),l._resolveFromSyncValue(r),l}},n.attempt=n.try=function(e){if("function"!=typeof e)return r("expecting a function but got "+a.classString(e));var l,u=new n(t);if(u._captureStackTrace(),u._pushContext(),arguments.length>1){i.deprecated("calling Promise.try with more than 1 argument");var s=arguments[1],c=arguments[2];l=a.isArray(s)?o(e).apply(c,s):o(e).call(c,s)}else l=o(e)();var d=u._popContext();return i.checkForgottenReturns(l,d,"Promise.try",u),u._resolveFromSyncValue(l),u},n.prototype._resolveFromSyncValue=function(e){e===a.errorObj?this._rejectCallback(e.e,!1):this._resolveCallback(e,!0)}}},{"./util":36}],20:[function(e,n,t){"use strict";var l=e("./util"),r=l.maybeWrapAsError,i=e("./errors").OperationalError,a=e("./es5"),o=/^(?:name|message|stack|cause)$/;function u(e){var n;if(function(e){return e instanceof Error&&a.getPrototypeOf(e)===Error.prototype}(e)){(n=new i(e)).name=e.name,n.message=e.message,n.stack=e.stack;for(var t=a.keys(e),r=0;r<t.length;++r){var u=t[r];o.test(u)||(n[u]=e[u])}return n}return l.markAsOriginatingFromRejection(e),e}n.exports=function(e,n){return function(t,l){if(null!==e){if(t){var i=u(r(t));e._attachExtraTrace(i),e._reject(i)}else if(n){var a=[].slice.call(arguments,1);e._fulfill(a)}else e._fulfill(l);e=null}}}},{"./errors":12,"./es5":13,"./util":36}],21:[function(e,n,t){"use strict";n.exports=function(n){var t=e("./util"),l=n._async,r=t.tryCatch,i=t.errorObj;function a(e,n){if(!t.isArray(e))return o.call(this,e,n);var a=r(n).apply(this._boundValue(),[null].concat(e));a===i&&l.throwLater(a.e)}function o(e,n){var t=this._boundValue(),a=void 0===e?r(n).call(t,null):r(n).call(t,null,e);a===i&&l.throwLater(a.e)}function u(e,n){if(!e){var t=new Error(e+"");t.cause=e,e=t}var a=r(n).call(this._boundValue(),e);a===i&&l.throwLater(a.e)}n.prototype.asCallback=n.prototype.nodeify=function(e,n){if("function"==typeof e){var t=o;void 0!==n&&Object(n).spread&&(t=a),this._then(t,u,void 0,this,e)}return this}}},{"./util":36}],22:[function(e,n,t){"use strict";n.exports=function(){var t=function(){return new M("circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n")},l=function(){return new N.PromiseInspection(this._target())},i=function(e){return N.reject(new M(e))};function a(){}var o={},u=e("./util");u.setReflectHandler(l);var s=function(){var e=r.domain;return void 0===e?null:e},c=function(){return{domain:s(),async:null}},d=u.isNode&&u.nodeSupportsAsyncResource?e("async_hooks").AsyncResource:null,p=function(){return{domain:s(),async:new d("Bluebird::Promise")}},f=u.isNode?c:function(){return null};u.notEnumerableProp(N,"_getContext",f);var h=e("./es5"),m=e("./async"),b=new m;h.defineProperty(N,"_async",{value:b});var g=e("./errors"),M=N.TypeError=g.TypeError;N.RangeError=g.RangeError;var y=N.CancellationError=g.CancellationError;N.TimeoutError=g.TimeoutError,N.OperationalError=g.OperationalError,N.RejectionError=g.OperationalError,N.AggregateError=g.AggregateError;var v=function(){},A={},w={},_=e("./thenables")(N,v),C=e("./promise_array")(N,v,_,i,a),T=e("./context")(N),S=T.create,z=e("./debuggability")(N,T,(function(){f=p,u.notEnumerableProp(N,"_getContext",p)}),(function(){f=c,u.notEnumerableProp(N,"_getContext",c)})),O=(z.CapturedTrace,e("./finally")(N,_,w)),E=e("./catch_filter")(w),L=e("./nodeback"),x=u.errorObj,k=u.tryCatch;function N(e){e!==v&&function(e,n){if(null==e||e.constructor!==N)throw new M("the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n");if("function"!=typeof n)throw new M("expecting a function but got "+u.classString(n))}(this,e),this._bitField=0,this._fulfillmentHandler0=void 0,this._rejectionHandler0=void 0,this._promise0=void 0,this._receiver0=void 0,this._resolveFromExecutor(e),this._promiseCreated(),this._fireEvent("promiseCreated",this)}function B(e){this.promise._resolveCallback(e)}function q(e){this.promise._rejectCallback(e,!1)}function P(e){var n=new N(v);n._fulfillmentHandler0=e,n._rejectionHandler0=e,n._promise0=e,n._receiver0=e}return N.prototype.toString=function(){return"[object Promise]"},N.prototype.caught=N.prototype.catch=function(e){var n=arguments.length;if(n>1){var t,l=new Array(n-1),r=0;for(t=0;t<n-1;++t){var a=arguments[t];if(!u.isObject(a))return i("Catch statement predicate: expecting an object but got "+u.classString(a));l[r++]=a}if(l.length=r,"function"!=typeof(e=arguments[t]))throw new M("The last argument to .catch() must be a function, got "+u.toString(e));return this.then(void 0,E(l,e,this))}return this.then(void 0,e)},N.prototype.reflect=function(){return this._then(l,l,void 0,this,void 0)},N.prototype.then=function(e,n){if(z.warnings()&&arguments.length>0&&"function"!=typeof e&&"function"!=typeof n){var t=".then() only accepts functions but was passed: "+u.classString(e);arguments.length>1&&(t+=", "+u.classString(n)),this._warn(t)}return this._then(e,n,void 0,void 0,void 0)},N.prototype.done=function(e,n){this._then(e,n,void 0,void 0,void 0)._setIsFinal()},N.prototype.spread=function(e){return"function"!=typeof e?i("expecting a function but got "+u.classString(e)):this.all()._then(e,void 0,void 0,A,void 0)},N.prototype.toJSON=function(){var e={isFulfilled:!1,isRejected:!1,fulfillmentValue:void 0,rejectionReason:void 0};return this.isFulfilled()?(e.fulfillmentValue=this.value(),e.isFulfilled=!0):this.isRejected()&&(e.rejectionReason=this.reason(),e.isRejected=!0),e},N.prototype.all=function(){return arguments.length>0&&this._warn(".all() was passed arguments but it does not take any"),new C(this).promise()},N.prototype.error=function(e){return this.caught(u.originatesFromRejection,e)},N.getNewLibraryCopy=n.exports,N.is=function(e){return e instanceof N},N.fromNode=N.fromCallback=function(e){var n=new N(v);n._captureStackTrace();var t=arguments.length>1&&!!Object(arguments[1]).multiArgs,l=k(e)(L(n,t));return l===x&&n._rejectCallback(l.e,!0),n._isFateSealed()||n._setAsyncGuaranteed(),n},N.all=function(e){return new C(e).promise()},N.cast=function(e){var n=_(e);return n instanceof N||((n=new N(v))._captureStackTrace(),n._setFulfilled(),n._rejectionHandler0=e),n},N.resolve=N.fulfilled=N.cast,N.reject=N.rejected=function(e){var n=new N(v);return n._captureStackTrace(),n._rejectCallback(e,!0),n},N.setScheduler=function(e){if("function"!=typeof e)throw new M("expecting a function but got "+u.classString(e));return b.setScheduler(e)},N.prototype._then=function(e,n,t,l,r){var i=void 0!==r,a=i?r:new N(v),o=this._target(),s=o._bitField;i||(a._propagateFrom(this,3),a._captureStackTrace(),void 0===l&&0!=(2097152&this._bitField)&&(l=0!=(50397184&s)?this._boundValue():o===this?void 0:this._boundTo),this._fireEvent("promiseChained",this,a));var c=f();if(0!=(50397184&s)){var d,p,h=o._settlePromiseCtx;0!=(33554432&s)?(p=o._rejectionHandler0,d=e):0!=(16777216&s)?(p=o._fulfillmentHandler0,d=n,o._unsetRejectionIsUnhandled()):(h=o._settlePromiseLateCancellationObserver,p=new y("late cancellation observer"),o._attachExtraTrace(p),d=n),b.invoke(h,o,{handler:u.contextBind(c,d),promise:a,receiver:l,value:p})}else o._addCallbacks(e,n,a,l,c);return a},N.prototype._length=function(){return 65535&this._bitField},N.prototype._isFateSealed=function(){return 0!=(117506048&this._bitField)},N.prototype._isFollowing=function(){return 67108864==(67108864&this._bitField)},N.prototype._setLength=function(e){this._bitField=-65536&this._bitField|65535&e},N.prototype._setFulfilled=function(){this._bitField=33554432|this._bitField,this._fireEvent("promiseFulfilled",this)},N.prototype._setRejected=function(){this._bitField=16777216|this._bitField,this._fireEvent("promiseRejected",this)},N.prototype._setFollowing=function(){this._bitField=67108864|this._bitField,this._fireEvent("promiseResolved",this)},N.prototype._setIsFinal=function(){this._bitField=4194304|this._bitField},N.prototype._isFinal=function(){return(4194304&this._bitField)>0},N.prototype._unsetCancelled=function(){this._bitField=-65537&this._bitField},N.prototype._setCancelled=function(){this._bitField=65536|this._bitField,this._fireEvent("promiseCancelled",this)},N.prototype._setWillBeCancelled=function(){this._bitField=8388608|this._bitField},N.prototype._setAsyncGuaranteed=function(){if(!b.hasCustomScheduler()){var e=this._bitField;this._bitField=e|(536870912&e)>>2^134217728}},N.prototype._setNoAsyncGuarantee=function(){this._bitField=-134217729&(536870912|this._bitField)},N.prototype._receiverAt=function(e){var n=0===e?this._receiver0:this[4*e-4+3];if(n!==o)return void 0===n&&this._isBound()?this._boundValue():n},N.prototype._promiseAt=function(e){return this[4*e-4+2]},N.prototype._fulfillmentHandlerAt=function(e){return this[4*e-4+0]},N.prototype._rejectionHandlerAt=function(e){return this[4*e-4+1]},N.prototype._boundValue=function(){},N.prototype._migrateCallback0=function(e){e._bitField;var n=e._fulfillmentHandler0,t=e._rejectionHandler0,l=e._promise0,r=e._receiverAt(0);void 0===r&&(r=o),this._addCallbacks(n,t,l,r,null)},N.prototype._migrateCallbackAt=function(e,n){var t=e._fulfillmentHandlerAt(n),l=e._rejectionHandlerAt(n),r=e._promiseAt(n),i=e._receiverAt(n);void 0===i&&(i=o),this._addCallbacks(t,l,r,i,null)},N.prototype._addCallbacks=function(e,n,t,l,r){var i=this._length();if(i>=65531&&(i=0,this._setLength(0)),0===i)this._promise0=t,this._receiver0=l,"function"==typeof e&&(this._fulfillmentHandler0=u.contextBind(r,e)),"function"==typeof n&&(this._rejectionHandler0=u.contextBind(r,n));else{var a=4*i-4;this[a+2]=t,this[a+3]=l,"function"==typeof e&&(this[a+0]=u.contextBind(r,e)),"function"==typeof n&&(this[a+1]=u.contextBind(r,n))}return this._setLength(i+1),i},N.prototype._proxy=function(e,n){this._addCallbacks(void 0,void 0,n,e,null)},N.prototype._resolveCallback=function(e,n){if(0==(117506048&this._bitField)){if(e===this)return this._rejectCallback(t(),!1);var l=_(e,this);if(!(l instanceof N))return this._fulfill(e);n&&this._propagateFrom(l,2);var r=l._target();if(r!==this){var i=r._bitField;if(0==(50397184&i)){var a=this._length();a>0&&r._migrateCallback0(this);for(var o=1;o<a;++o)r._migrateCallbackAt(this,o);this._setFollowing(),this._setLength(0),this._setFollowee(l)}else if(0!=(33554432&i))this._fulfill(r._value());else if(0!=(16777216&i))this._reject(r._reason());else{var u=new y("late cancellation observer");r._attachExtraTrace(u),this._reject(u)}}else this._reject(t())}},N.prototype._rejectCallback=function(e,n,t){var l=u.ensureErrorObject(e),r=l===e;if(!r&&!t&&z.warnings()){var i="a promise was rejected with a non-error: "+u.classString(e);this._warn(i,!0)}this._attachExtraTrace(l,!!n&&r),this._reject(e)},N.prototype._resolveFromExecutor=function(e){if(e!==v){var n=this;this._captureStackTrace(),this._pushContext();var t=!0,l=this._execute(e,(function(e){n._resolveCallback(e)}),(function(e){n._rejectCallback(e,t)}));t=!1,this._popContext(),void 0!==l&&n._rejectCallback(l,!0)}},N.prototype._settlePromiseFromHandler=function(e,n,t,l){var r=l._bitField;if(0==(65536&r)){var i;l._pushContext(),n===A?t&&"number"==typeof t.length?i=k(e).apply(this._boundValue(),t):(i=x).e=new M("cannot .spread() a non-array: "+u.classString(t)):i=k(e).call(n,t);var a=l._popContext();0==(65536&(r=l._bitField))&&(i===w?l._reject(t):i===x?l._rejectCallback(i.e,!1):(z.checkForgottenReturns(i,a,"",l,this),l._resolveCallback(i)))}},N.prototype._target=function(){for(var e=this;e._isFollowing();)e=e._followee();return e},N.prototype._followee=function(){return this._rejectionHandler0},N.prototype._setFollowee=function(e){this._rejectionHandler0=e},N.prototype._settlePromise=function(e,n,t,r){var i=e instanceof N,o=this._bitField,u=0!=(134217728&o);0!=(65536&o)?(i&&e._invokeInternalOnCancel(),t instanceof O&&t.isFinallyHandler()?(t.cancelPromise=e,k(n).call(t,r)===x&&e._reject(x.e)):n===l?e._fulfill(l.call(t)):t instanceof a?t._promiseCancelled(e):i||e instanceof C?e._cancel():t.cancel()):"function"==typeof n?i?(u&&e._setAsyncGuaranteed(),this._settlePromiseFromHandler(n,t,r,e)):n.call(t,r,e):t instanceof a?t._isResolved()||(0!=(33554432&o)?t._promiseFulfilled(r,e):t._promiseRejected(r,e)):i&&(u&&e._setAsyncGuaranteed(),0!=(33554432&o)?e._fulfill(r):e._reject(r))},N.prototype._settlePromiseLateCancellationObserver=function(e){var n=e.handler,t=e.promise,l=e.receiver,r=e.value;"function"==typeof n?t instanceof N?this._settlePromiseFromHandler(n,l,r,t):n.call(l,r,t):t instanceof N&&t._reject(r)},N.prototype._settlePromiseCtx=function(e){this._settlePromise(e.promise,e.handler,e.receiver,e.value)},N.prototype._settlePromise0=function(e,n,t){var l=this._promise0,r=this._receiverAt(0);this._promise0=void 0,this._receiver0=void 0,this._settlePromise(l,e,r,n)},N.prototype._clearCallbackDataAtIndex=function(e){var n=4*e-4;this[n+2]=this[n+3]=this[n+0]=this[n+1]=void 0},N.prototype._fulfill=function(e){var n=this._bitField;if(!((117506048&n)>>>16)){if(e===this){var l=t();return this._attachExtraTrace(l),this._reject(l)}this._setFulfilled(),this._rejectionHandler0=e,(65535&n)>0&&(0!=(134217728&n)?this._settlePromises():b.settlePromises(this),this._dereferenceTrace())}},N.prototype._reject=function(e){var n=this._bitField;if(!((117506048&n)>>>16)){if(this._setRejected(),this._fulfillmentHandler0=e,this._isFinal())return b.fatalError(e,u.isNode);(65535&n)>0?b.settlePromises(this):this._ensurePossibleRejectionHandled()}},N.prototype._fulfillPromises=function(e,n){for(var t=1;t<e;t++){var l=this._fulfillmentHandlerAt(t),r=this._promiseAt(t),i=this._receiverAt(t);this._clearCallbackDataAtIndex(t),this._settlePromise(r,l,i,n)}},N.prototype._rejectPromises=function(e,n){for(var t=1;t<e;t++){var l=this._rejectionHandlerAt(t),r=this._promiseAt(t),i=this._receiverAt(t);this._clearCallbackDataAtIndex(t),this._settlePromise(r,l,i,n)}},N.prototype._settlePromises=function(){var e=this._bitField,n=65535&e;if(n>0){if(0!=(16842752&e)){var t=this._fulfillmentHandler0;this._settlePromise0(this._rejectionHandler0,t,e),this._rejectPromises(n,t)}else{var l=this._rejectionHandler0;this._settlePromise0(this._fulfillmentHandler0,l,e),this._fulfillPromises(n,l)}this._setLength(0)}this._clearCancellationData()},N.prototype._settledValue=function(){var e=this._bitField;return 0!=(33554432&e)?this._rejectionHandler0:0!=(16777216&e)?this._fulfillmentHandler0:void 0},"undefined"!=typeof Symbol&&Symbol.toStringTag&&h.defineProperty(N.prototype,Symbol.toStringTag,{get:function(){return"Object"}}),N.defer=N.pending=function(){return z.deprecated("Promise.defer","new Promise"),{promise:new N(v),resolve:B,reject:q}},u.notEnumerableProp(N,"_makeSelfResolutionError",t),e("./method")(N,v,_,i,z),e("./bind")(N,v,_,z),e("./cancel")(N,C,i,z),e("./direct_resolve")(N),e("./synchronous_inspection")(N),e("./join")(N,C,_,v,b),N.Promise=N,N.version="3.7.2",e("./call_get.js")(N),e("./generators.js")(N,i,v,_,a,z),e("./map.js")(N,C,i,_,v,z),e("./nodeify.js")(N),e("./promisify.js")(N,v),e("./props.js")(N,C,_,i),e("./race.js")(N,v,_,i),e("./reduce.js")(N,C,i,_,v,z),e("./settle.js")(N,C,z),e("./some.js")(N,C,i),e("./timers.js")(N,v,z),e("./using.js")(N,i,_,S,v,z),e("./any.js")(N),e("./each.js")(N,v),e("./filter.js")(N,v),u.toFastProperties(N),u.toFastProperties(N.prototype),P({a:1}),P({b:2}),P({c:3}),P(1),P((function(){})),P(void 0),P(!1),P(new N(v)),z.setBounds(m.firstLineError,u.lastLineError),N}},{"./any.js":1,"./async":2,"./bind":3,"./call_get.js":5,"./cancel":6,"./catch_filter":7,"./context":8,"./debuggability":9,"./direct_resolve":10,"./each.js":11,"./errors":12,"./es5":13,"./filter.js":14,"./finally":15,"./generators.js":16,"./join":17,"./map.js":18,"./method":19,"./nodeback":20,"./nodeify.js":21,"./promise_array":23,"./promisify.js":24,"./props.js":25,"./race.js":27,"./reduce.js":28,"./settle.js":30,"./some.js":31,"./synchronous_inspection":32,"./thenables":33,"./timers.js":34,"./using.js":35,"./util":36,async_hooks:void 0}],23:[function(e,n,t){"use strict";n.exports=function(n,t,l,r,i){var a=e("./util");function o(e){var l=this._promise=new n(t);e instanceof n&&(l._propagateFrom(e,3),e.suppressUnhandledRejections()),l._setOnCancel(this),this._values=e,this._length=0,this._totalResolved=0,this._init(void 0,-2)}return a.isArray,a.inherits(o,i),o.prototype.length=function(){return this._length},o.prototype.promise=function(){return this._promise},o.prototype._init=function e(t,i){var o=l(this._values,this._promise);if(o instanceof n){var u=(o=o._target())._bitField;if(this._values=o,0==(50397184&u))return this._promise._setAsyncGuaranteed(),o._then(e,this._reject,void 0,this,i);if(0==(33554432&u))return 0!=(16777216&u)?this._reject(o._reason()):this._cancel();o=o._value()}if(null!==(o=a.asArray(o)))0!==o.length?this._iterate(o):-5===i?this._resolveEmptyArray():this._resolve(function(e){switch(e){case-2:return[];case-3:return{};case-6:return new Map}}(i));else{var s=r("expecting an array or an iterable object but got "+a.classString(o)).reason();this._promise._rejectCallback(s,!1)}},o.prototype._iterate=function(e){var t=this.getActualLength(e.length);this._length=t,this._values=this.shouldCopyValues()?new Array(t):this._values;for(var r=this._promise,i=!1,a=null,o=0;o<t;++o){var u=l(e[o],r);a=u instanceof n?(u=u._target())._bitField:null,i?null!==a&&u.suppressUnhandledRejections():null!==a?0==(50397184&a)?(u._proxy(this,o),this._values[o]=u):i=0!=(33554432&a)?this._promiseFulfilled(u._value(),o):0!=(16777216&a)?this._promiseRejected(u._reason(),o):this._promiseCancelled(o):i=this._promiseFulfilled(u,o)}i||r._setAsyncGuaranteed()},o.prototype._isResolved=function(){return null===this._values},o.prototype._resolve=function(e){this._values=null,this._promise._fulfill(e)},o.prototype._cancel=function(){!this._isResolved()&&this._promise._isCancellable()&&(this._values=null,this._promise._cancel())},o.prototype._reject=function(e){this._values=null,this._promise._rejectCallback(e,!1)},o.prototype._promiseFulfilled=function(e,n){return this._values[n]=e,++this._totalResolved>=this._length&&(this._resolve(this._values),!0)},o.prototype._promiseCancelled=function(){return this._cancel(),!0},o.prototype._promiseRejected=function(e){return this._totalResolved++,this._reject(e),!0},o.prototype._resultCancelled=function(){if(!this._isResolved()){var e=this._values;if(this._cancel(),e instanceof n)e.cancel();else for(var t=0;t<e.length;++t)e[t]instanceof n&&e[t].cancel()}},o.prototype.shouldCopyValues=function(){return!0},o.prototype.getActualLength=function(e){return e},o}},{"./util":36}],24:[function(e,n,t){"use strict";n.exports=function(n,t){var l={},r=e("./util"),i=e("./nodeback"),a=r.withAppended,o=r.maybeWrapAsError,u=r.canEvaluate,s=e("./errors").TypeError,c={__isPromisified__:!0},d=new RegExp("^(?:"+["arity","length","name","arguments","caller","callee","prototype","__isPromisified__"].join("|")+")$"),p=function(e){return r.isIdentifier(e)&&"_"!==e.charAt(0)&&"constructor"!==e};function f(e){return!d.test(e)}function h(e){try{return!0===e.__isPromisified__}catch(e){return!1}}function m(e,n,t){var l=r.getDataPropertyOrDefault(e,n+t,c);return!!l&&h(l)}var b=u?void 0:function(e,u,s,c,d,p){var f=function(){return this}(),h=e;function m(){var r=u;u===l&&(r=this);var s=new n(t);s._captureStackTrace();var c="string"==typeof h&&this!==f?this[h]:e,d=i(s,p);try{c.apply(r,a(arguments,d))}catch(e){s._rejectCallback(o(e),!0,!0)}return s._isFateSealed()||s._setAsyncGuaranteed(),s}return"string"==typeof h&&(e=c),r.notEnumerableProp(m,"__isPromisified__",!0),m};function g(e,n,t,i,a){for(var o=new RegExp(n.replace(/([$])/,"\\$")+"$"),u=function(e,n,t,l){for(var i=r.inheritedDataKeys(e),a=[],o=0;o<i.length;++o){var u=i[o],c=e[u],d=l===p||p(u);"function"!=typeof c||h(c)||m(e,u,n)||!l(u,c,e,d)||a.push(u,c)}return function(e,n,t){for(var l=0;l<e.length;l+=2){var r=e[l];if(t.test(r))for(var i=r.replace(t,""),a=0;a<e.length;a+=2)if(e[a]===i)throw new s("Cannot promisify an API that has normal methods with '%s'-suffix\n\n    See http://goo.gl/MqrFmX\n".replace("%s",n))}}(a,n,t),a}(e,n,o,t),c=0,d=u.length;c<d;c+=2){var f=u[c],g=u[c+1],M=f+n;if(i===b)e[M]=b(f,l,f,g,n,a);else{var y=i(g,(function(){return b(f,l,f,g,n,a)}));r.notEnumerableProp(y,"__isPromisified__",!0),e[M]=y}}return r.toFastProperties(e),e}n.promisify=function(e,n){if("function"!=typeof e)throw new s("expecting a function but got "+r.classString(e));if(h(e))return e;var t,i,a,o=(t=e,i=void 0===(n=Object(n)).context?l:n.context,a=!!n.multiArgs,b(t,i,void 0,t,null,a));return r.copyDescriptors(e,o,f),o},n.promisifyAll=function(e,n){if("function"!=typeof e&&"object"!=typeof e)throw new s("the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n");var t=!!(n=Object(n)).multiArgs,l=n.suffix;"string"!=typeof l&&(l="Async");var i=n.filter;"function"!=typeof i&&(i=p);var a=n.promisifier;if("function"!=typeof a&&(a=b),!r.isIdentifier(l))throw new RangeError("suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n");for(var o=r.inheritedDataKeys(e),u=0;u<o.length;++u){var c=e[o[u]];"constructor"!==o[u]&&r.isClass(c)&&(g(c.prototype,l,i,a,t),g(c,l,i,a,t))}return g(e,l,i,a,t)}}},{"./errors":12,"./nodeback":20,"./util":36}],25:[function(e,n,t){"use strict";n.exports=function(n,t,l,r){var i,a=e("./util"),o=a.isObject,u=e("./es5");"function"==typeof Map&&(i=Map);var s=function(){var e=0,n=0;function t(t,l){this[e]=t,this[e+n]=l,e++}return function(l){n=l.size,e=0;var r=new Array(2*l.size);return l.forEach(t,r),r}}();function c(e){var n,t=!1;if(void 0!==i&&e instanceof i)n=s(e),t=!0;else{var l=u.keys(e),r=l.length;n=new Array(2*r);for(var a=0;a<r;++a){var o=l[a];n[a]=e[o],n[a+r]=o}}this.constructor$(n),this._isMap=t,this._init$(void 0,t?-6:-3)}function d(e){var t,i=l(e);return o(i)?(t=i instanceof n?i._then(n.props,void 0,void 0,void 0,void 0):new c(i).promise(),i instanceof n&&t._propagateFrom(i,2),t):r("cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n")}a.inherits(c,t),c.prototype._init=function(){},c.prototype._promiseFulfilled=function(e,n){if(this._values[n]=e,++this._totalResolved>=this._length){var t;if(this._isMap)t=function(e){for(var n=new i,t=e.length/2|0,l=0;l<t;++l){var r=e[t+l],a=e[l];n.set(r,a)}return n}(this._values);else{t={};for(var l=this.length(),r=0,a=this.length();r<a;++r)t[this._values[r+l]]=this._values[r]}return this._resolve(t),!0}return!1},c.prototype.shouldCopyValues=function(){return!1},c.prototype.getActualLength=function(e){return e>>1},n.prototype.props=function(){return d(this)},n.props=function(e){return d(e)}}},{"./es5":13,"./util":36}],26:[function(e,n,t){"use strict";function l(e){this._capacity=e,this._length=0,this._front=0}l.prototype._willBeOverCapacity=function(e){return this._capacity<e},l.prototype._pushOne=function(e){var n=this.length();this._checkCapacity(n+1),this[this._front+n&this._capacity-1]=e,this._length=n+1},l.prototype.push=function(e,n,t){var l=this.length()+3;if(this._willBeOverCapacity(l))return this._pushOne(e),this._pushOne(n),void this._pushOne(t);var r=this._front+l-3;this._checkCapacity(l);var i=this._capacity-1;this[r+0&i]=e,this[r+1&i]=n,this[r+2&i]=t,this._length=l},l.prototype.shift=function(){var e=this._front,n=this[e];return this[e]=void 0,this._front=e+1&this._capacity-1,this._length--,n},l.prototype.length=function(){return this._length},l.prototype._checkCapacity=function(e){this._capacity<e&&this._resizeTo(this._capacity<<1)},l.prototype._resizeTo=function(e){var n=this._capacity;this._capacity=e,function(e,n,t,l,r){for(var i=0;i<r;++i)t[i+l]=e[i+0],e[i+0]=void 0}(this,0,this,n,this._front+this._length&n-1)},n.exports=l},{}],27:[function(e,n,t){"use strict";n.exports=function(n,t,l,r){var i=e("./util");function a(e,o){var u,s=l(e);if(s instanceof n)return(u=s).then((function(e){return a(e,u)}));if(null===(e=i.asArray(e)))return r("expecting an array or an iterable object but got "+i.classString(e));var c=new n(t);void 0!==o&&c._propagateFrom(o,3);for(var d=c._fulfill,p=c._reject,f=0,h=e.length;f<h;++f){var m=e[f];(void 0!==m||f in e)&&n.cast(m)._then(d,p,void 0,c,null)}return c}n.race=function(e){return a(e,void 0)},n.prototype.race=function(){return a(this,void 0)}}},{"./util":36}],28:[function(e,n,t){"use strict";n.exports=function(n,t,l,r,i,a){var o=e("./util"),u=o.tryCatch;function s(e,t,l,r){this.constructor$(e);var a=n._getContext();this._fn=o.contextBind(a,t),void 0!==l&&(l=n.resolve(l))._attachCancellationCallback(this),this._initialValue=l,this._currentCancellable=null,this._eachValues=r===i?Array(this._length):0===r?null:void 0,this._promise._captureStackTrace(),this._init$(void 0,-5)}function c(e,n){this.isFulfilled()?n._resolve(e):n._reject(e)}function d(e,n,t,r){return"function"!=typeof n?l("expecting a function but got "+o.classString(n)):new s(e,n,t,r).promise()}function p(e){this.accum=e,this.array._gotAccum(e);var t=r(this.value,this.array._promise);return t instanceof n?(this.array._currentCancellable=t,t._then(f,void 0,void 0,this,void 0)):f.call(this,t)}function f(e){var t,l=this.array,r=l._promise,i=u(l._fn);r._pushContext(),(t=void 0!==l._eachValues?i.call(r._boundValue(),e,this.index,this.length):i.call(r._boundValue(),this.accum,e,this.index,this.length))instanceof n&&(l._currentCancellable=t);var o=r._popContext();return a.checkForgottenReturns(t,o,void 0!==l._eachValues?"Promise.each":"Promise.reduce",r),t}o.inherits(s,t),s.prototype._gotAccum=function(e){void 0!==this._eachValues&&null!==this._eachValues&&e!==i&&this._eachValues.push(e)},s.prototype._eachComplete=function(e){return null!==this._eachValues&&this._eachValues.push(e),this._eachValues},s.prototype._init=function(){},s.prototype._resolveEmptyArray=function(){this._resolve(void 0!==this._eachValues?this._eachValues:this._initialValue)},s.prototype.shouldCopyValues=function(){return!1},s.prototype._resolve=function(e){this._promise._resolveCallback(e),this._values=null},s.prototype._resultCancelled=function(e){if(e===this._initialValue)return this._cancel();this._isResolved()||(this._resultCancelled$(),this._currentCancellable instanceof n&&this._currentCancellable.cancel(),this._initialValue instanceof n&&this._initialValue.cancel())},s.prototype._iterate=function(e){var t,l;this._values=e;var r=e.length;void 0!==this._initialValue?(t=this._initialValue,l=0):(t=n.resolve(e[0]),l=1),this._currentCancellable=t;for(var i=l;i<r;++i){var a=e[i];a instanceof n&&a.suppressUnhandledRejections()}if(!t.isRejected())for(;l<r;++l){var o={accum:null,value:e[l],index:l,length:r,array:this};t=t._then(p,void 0,void 0,o,void 0),0==(127&l)&&t._setNoAsyncGuarantee()}void 0!==this._eachValues&&(t=t._then(this._eachComplete,void 0,void 0,this,void 0)),t._then(c,c,void 0,t,this)},n.prototype.reduce=function(e,n){return d(this,e,n,null)},n.reduce=function(e,n,t,l){return d(e,n,t,l)}}},{"./util":36}],29:[function(e,n,l){"use strict";var i,a,o,u,s,c=e("./util"),d=c.getNativePromise();if(c.isNode&&"undefined"==typeof MutationObserver){var p=t.g.setImmediate,f=r.nextTick;i=c.isRecentNode?function(e){p.call(t.g,e)}:function(e){f.call(r,e)}}else if("function"==typeof d&&"function"==typeof d.resolve){var h=d.resolve();i=function(e){h.then(e)}}else i="undefined"==typeof MutationObserver||"undefined"!=typeof window&&window.navigator&&(window.navigator.standalone||window.cordova)||!("classList"in document.documentElement)?"undefined"!=typeof setImmediate?function(e){setImmediate(e)}:"undefined"!=typeof setTimeout?function(e){setTimeout(e,0)}:function(){throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n")}:(a=document.createElement("div"),o={attributes:!0},u=!1,s=document.createElement("div"),new MutationObserver((function(){a.classList.toggle("foo"),u=!1})).observe(s,o),function(e){var n=new MutationObserver((function(){n.disconnect(),e()}));n.observe(a,o),u||(u=!0,s.classList.toggle("foo"))});n.exports=i},{"./util":36}],30:[function(e,n,t){"use strict";n.exports=function(n,t,l){var r=n.PromiseInspection;function i(e){this.constructor$(e)}e("./util").inherits(i,t),i.prototype._promiseResolved=function(e,n){return this._values[e]=n,++this._totalResolved>=this._length&&(this._resolve(this._values),!0)},i.prototype._promiseFulfilled=function(e,n){var t=new r;return t._bitField=33554432,t._settledValueField=e,this._promiseResolved(n,t)},i.prototype._promiseRejected=function(e,n){var t=new r;return t._bitField=16777216,t._settledValueField=e,this._promiseResolved(n,t)},n.settle=function(e){return l.deprecated(".settle()",".reflect()"),new i(e).promise()},n.allSettled=function(e){return new i(e).promise()},n.prototype.settle=function(){return n.settle(this)}}},{"./util":36}],31:[function(e,n,t){"use strict";n.exports=function(n,t,l){var r=e("./util"),i=e("./errors").RangeError,a=e("./errors").AggregateError,o=r.isArray,u={};function s(e){this.constructor$(e),this._howMany=0,this._unwrap=!1,this._initialized=!1}function c(e,n){if((0|n)!==n||n<0)return l("expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n");var t=new s(e),r=t.promise();return t.setHowMany(n),t.init(),r}r.inherits(s,t),s.prototype._init=function(){if(this._initialized)if(0!==this._howMany){this._init$(void 0,-5);var e=o(this._values);!this._isResolved()&&e&&this._howMany>this._canPossiblyFulfill()&&this._reject(this._getRangeError(this.length()))}else this._resolve([])},s.prototype.init=function(){this._initialized=!0,this._init()},s.prototype.setUnwrap=function(){this._unwrap=!0},s.prototype.howMany=function(){return this._howMany},s.prototype.setHowMany=function(e){this._howMany=e},s.prototype._promiseFulfilled=function(e){return this._addFulfilled(e),this._fulfilled()===this.howMany()&&(this._values.length=this.howMany(),1===this.howMany()&&this._unwrap?this._resolve(this._values[0]):this._resolve(this._values),!0)},s.prototype._promiseRejected=function(e){return this._addRejected(e),this._checkOutcome()},s.prototype._promiseCancelled=function(){return this._values instanceof n||null==this._values?this._cancel():(this._addRejected(u),this._checkOutcome())},s.prototype._checkOutcome=function(){if(this.howMany()>this._canPossiblyFulfill()){for(var e=new a,n=this.length();n<this._values.length;++n)this._values[n]!==u&&e.push(this._values[n]);return e.length>0?this._reject(e):this._cancel(),!0}return!1},s.prototype._fulfilled=function(){return this._totalResolved},s.prototype._rejected=function(){return this._values.length-this.length()},s.prototype._addRejected=function(e){this._values.push(e)},s.prototype._addFulfilled=function(e){this._values[this._totalResolved++]=e},s.prototype._canPossiblyFulfill=function(){return this.length()-this._rejected()},s.prototype._getRangeError=function(e){var n="Input array must contain at least "+this._howMany+" items but contains only "+e+" items";return new i(n)},s.prototype._resolveEmptyArray=function(){this._reject(this._getRangeError(0))},n.some=function(e,n){return c(e,n)},n.prototype.some=function(e){return c(this,e)},n._SomePromiseArray=s}},{"./errors":12,"./util":36}],32:[function(e,n,t){"use strict";n.exports=function(e){function n(e){void 0!==e?(e=e._target(),this._bitField=e._bitField,this._settledValueField=e._isFateSealed()?e._settledValue():void 0):(this._bitField=0,this._settledValueField=void 0)}n.prototype._settledValue=function(){return this._settledValueField};var t=n.prototype.value=function(){if(!this.isFulfilled())throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n");return this._settledValue()},l=n.prototype.error=n.prototype.reason=function(){if(!this.isRejected())throw new TypeError("cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n");return this._settledValue()},r=n.prototype.isFulfilled=function(){return 0!=(33554432&this._bitField)},i=n.prototype.isRejected=function(){return 0!=(16777216&this._bitField)},a=n.prototype.isPending=function(){return 0==(50397184&this._bitField)},o=n.prototype.isResolved=function(){return 0!=(50331648&this._bitField)};n.prototype.isCancelled=function(){return 0!=(8454144&this._bitField)},e.prototype.__isCancelled=function(){return 65536==(65536&this._bitField)},e.prototype._isCancelled=function(){return this._target().__isCancelled()},e.prototype.isCancelled=function(){return 0!=(8454144&this._target()._bitField)},e.prototype.isPending=function(){return a.call(this._target())},e.prototype.isRejected=function(){return i.call(this._target())},e.prototype.isFulfilled=function(){return r.call(this._target())},e.prototype.isResolved=function(){return o.call(this._target())},e.prototype.value=function(){return t.call(this._target())},e.prototype.reason=function(){var e=this._target();return e._unsetRejectionIsUnhandled(),l.call(e)},e.prototype._value=function(){return this._settledValue()},e.prototype._reason=function(){return this._unsetRejectionIsUnhandled(),this._settledValue()},e.PromiseInspection=n}},{}],33:[function(e,n,t){"use strict";n.exports=function(n,t){var l=e("./util"),r=l.errorObj,i=l.isObject,a={}.hasOwnProperty;return function(e,o){if(i(e)){if(e instanceof n)return e;var u=function(e){try{return function(e){return e.then}(e)}catch(e){return r.e=e,r}}(e);if(u===r){o&&o._pushContext();var s=n.reject(u.e);return o&&o._popContext(),s}if("function"==typeof u)return function(e){try{return a.call(e,"_promise0")}catch(e){return!1}}(e)?(s=new n(t),e._then(s._fulfill,s._reject,void 0,s,null),s):function(e,i,a){var o=new n(t),u=o;a&&a._pushContext(),o._captureStackTrace(),a&&a._popContext();var s=!0,c=l.tryCatch(i).call(e,(function(e){o&&(o._resolveCallback(e),o=null)}),(function(e){o&&(o._rejectCallback(e,s,!0),o=null)}));return s=!1,o&&c===r&&(o._rejectCallback(c.e,!0,!0),o=null),u}(e,u,o)}return e}}},{"./util":36}],34:[function(e,n,t){"use strict";n.exports=function(n,t,l){var r=e("./util"),i=n.TimeoutError;function a(e){this.handle=e}a.prototype._resultCancelled=function(){clearTimeout(this.handle)};var o=function(e){return u(+this).thenReturn(e)},u=n.delay=function(e,r){var i,u;return void 0!==r?(i=n.resolve(r)._then(o,null,null,e,void 0),l.cancellation()&&r instanceof n&&i._setOnCancel(r)):(i=new n(t),u=setTimeout((function(){i._fulfill()}),+e),l.cancellation()&&i._setOnCancel(new a(u)),i._captureStackTrace()),i._setAsyncGuaranteed(),i};function s(e){return clearTimeout(this.handle),e}function c(e){throw clearTimeout(this.handle),e}n.prototype.delay=function(e){return u(e,this)},n.prototype.timeout=function(e,n){var t,o;e=+e;var u=new a(setTimeout((function(){t.isPending()&&function(e,n,t){var l;l="string"!=typeof n?n instanceof Error?n:new i("operation timed out"):new i(n),r.markAsOriginatingFromRejection(l),e._attachExtraTrace(l),e._reject(l),null!=t&&t.cancel()}(t,n,o)}),e));return l.cancellation()?(o=this.then(),(t=o._then(s,c,void 0,u,void 0))._setOnCancel(u)):t=this._then(s,c,void 0,u,void 0),t}}},{"./util":36}],35:[function(e,n,t){"use strict";n.exports=function(n,t,l,r,i,a){var o=e("./util"),u=e("./errors").TypeError,s=e("./util").inherits,c=o.errorObj,d=o.tryCatch,p={};function f(e){setTimeout((function(){throw e}),0)}function h(e,t){var r=0,a=e.length,o=new n(i);return function i(){if(r>=a)return o._fulfill();var u=function(e){var n=l(e);return n!==e&&"function"==typeof e._isDisposable&&"function"==typeof e._getDisposer&&e._isDisposable()&&n._setDisposable(e._getDisposer()),n}(e[r++]);if(u instanceof n&&u._isDisposable()){try{u=l(u._getDisposer().tryDispose(t),e.promise)}catch(e){return f(e)}if(u instanceof n)return u._then(i,f,null,null,null)}i()}(),o}function m(e,n,t){this._data=e,this._promise=n,this._context=t}function b(e,n,t){this.constructor$(e,n,t)}function g(e){return m.isDisposer(e)?(this.resources[this.index]._setDisposable(e),e.promise()):e}function M(e){this.length=e,this.promise=null,this[e-1]=null}m.prototype.data=function(){return this._data},m.prototype.promise=function(){return this._promise},m.prototype.resource=function(){return this.promise().isFulfilled()?this.promise().value():p},m.prototype.tryDispose=function(e){var n=this.resource(),t=this._context;void 0!==t&&t._pushContext();var l=n!==p?this.doDispose(n,e):null;return void 0!==t&&t._popContext(),this._promise._unsetDisposable(),this._data=null,l},m.isDisposer=function(e){return null!=e&&"function"==typeof e.resource&&"function"==typeof e.tryDispose},s(b,m),b.prototype.doDispose=function(e,n){return this.data().call(e,e,n)},M.prototype._resultCancelled=function(){for(var e=this.length,t=0;t<e;++t){var l=this[t];l instanceof n&&l.cancel()}},n.using=function(){var e=arguments.length;if(e<2)return t("you must pass at least 2 arguments to Promise.using");var r,i=arguments[e-1];if("function"!=typeof i)return t("expecting a function but got "+o.classString(i));var u=!0;2===e&&Array.isArray(arguments[0])?(e=(r=arguments[0]).length,u=!1):(r=arguments,e--);for(var s=new M(e),p=0;p<e;++p){var f=r[p];if(m.isDisposer(f)){var b=f;(f=f.promise())._setDisposable(b)}else{var y=l(f);y instanceof n&&(f=y._then(g,null,null,{resources:s,index:p},void 0))}s[p]=f}var v=new Array(s.length);for(p=0;p<v.length;++p)v[p]=n.resolve(s[p]).reflect();var A=n.all(v).then((function(e){for(var n=0;n<e.length;++n){var t=e[n];if(t.isRejected())return c.e=t.error(),c;if(!t.isFulfilled())return void A.cancel();e[n]=t.value()}w._pushContext(),i=d(i);var l=u?i.apply(void 0,e):i(e),r=w._popContext();return a.checkForgottenReturns(l,r,"Promise.using",w),l})),w=A.lastly((function(){var e=new n.PromiseInspection(A);return h(s,e)}));return s.promise=w,w._setOnCancel(s),w},n.prototype._setDisposable=function(e){this._bitField=131072|this._bitField,this._disposer=e},n.prototype._isDisposable=function(){return(131072&this._bitField)>0},n.prototype._getDisposer=function(){return this._disposer},n.prototype._unsetDisposable=function(){this._bitField=-131073&this._bitField,this._disposer=void 0},n.prototype.disposer=function(e){if("function"==typeof e)return new b(e,this,r());throw new u}}},{"./errors":12,"./util":36}],36:[function(e,n,l){"use strict";var i,a=e("./es5"),o="undefined"==typeof navigator,u={e:{}},s="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==t.g?t.g:void 0!==this?this:null;function c(){try{var e=i;return i=null,e.apply(this,arguments)}catch(e){return u.e=e,u}}function d(e){return null==e||!0===e||!1===e||"string"==typeof e||"number"==typeof e}function p(e,n,t){if(d(e))return e;var l={value:t,configurable:!0,enumerable:!1,writable:!0};return a.defineProperty(e,n,l),e}var f=function(){var e=[Array.prototype,Object.prototype,Function.prototype],n=function(n){for(var t=0;t<e.length;++t)if(e[t]===n)return!0;return!1};if(a.isES5){var t=Object.getOwnPropertyNames;return function(e){for(var l=[],r=Object.create(null);null!=e&&!n(e);){var i;try{i=t(e)}catch(e){return l}for(var o=0;o<i.length;++o){var u=i[o];if(!r[u]){r[u]=!0;var s=Object.getOwnPropertyDescriptor(e,u);null!=s&&null==s.get&&null==s.set&&l.push(u)}}e=a.getPrototypeOf(e)}return l}}var l={}.hasOwnProperty;return function(t){if(n(t))return[];var r=[];e:for(var i in t)if(l.call(t,i))r.push(i);else{for(var a=0;a<e.length;++a)if(l.call(e[a],i))continue e;r.push(i)}return r}}(),h=/this\s*\.\s*\S+\s*=/;var m=/^[a-z$_][a-z$_0-9]*$/i;function b(e){try{return e+""}catch(e){return"[no string representation]"}}function g(e){return e instanceof Error||null!==e&&"object"==typeof e&&"string"==typeof e.message&&"string"==typeof e.name}function M(e){return g(e)&&a.propertyIsWritable(e,"stack")}var y="stack"in new Error?function(e){return M(e)?e:new Error(b(e))}:function(e){if(M(e))return e;try{throw new Error(b(e))}catch(e){return e}};function v(e){return{}.toString.call(e)}var A=function(e){return a.isArray(e)?e:null};if("undefined"!=typeof Symbol&&Symbol.iterator){var w="function"==typeof Array.from?function(e){return Array.from(e)}:function(e){for(var n,t=[],l=e[Symbol.iterator]();!(n=l.next()).done;)t.push(n.value);return t};A=function(e){return a.isArray(e)?e:null!=e&&"function"==typeof e[Symbol.iterator]?w(e):null}}var _,C=void 0!==r&&"[object process]"===v(r).toLowerCase(),T=void 0!==r&&void 0!==r.env;var S,z={setReflectHandler:function(e){_=e},isClass:function(e){try{if("function"==typeof e){var n=a.names(e.prototype),t=a.isES5&&n.length>1,l=n.length>0&&!(1===n.length&&"constructor"===n[0]),r=h.test(e+"")&&a.names(e).length>0;if(t||l||r)return!0}return!1}catch(e){return!1}},isIdentifier:function(e){return m.test(e)},inheritedDataKeys:f,getDataPropertyOrDefault:function(e,n,t){if(!a.isES5)return{}.hasOwnProperty.call(e,n)?e[n]:void 0;var l=Object.getOwnPropertyDescriptor(e,n);return null!=l?null==l.get&&null==l.set?l.value:t:void 0},thrower:function(e){throw e},isArray:a.isArray,asArray:A,notEnumerableProp:p,isPrimitive:d,isObject:function(e){return"function"==typeof e||"object"==typeof e&&null!==e},isError:g,canEvaluate:o,errorObj:u,tryCatch:function(e){return i=e,c},inherits:function(e,n){var t={}.hasOwnProperty;function l(){for(var l in this.constructor=e,this.constructor$=n,n.prototype)t.call(n.prototype,l)&&"$"!==l.charAt(l.length-1)&&(this[l+"$"]=n.prototype[l])}return l.prototype=n.prototype,e.prototype=new l,e.prototype},withAppended:function(e,n){var t,l=e.length,r=new Array(l+1);for(t=0;t<l;++t)r[t]=e[t];return r[t]=n,r},maybeWrapAsError:function(e){return d(e)?new Error(b(e)):e},toFastProperties:function(e){function n(){}n.prototype=e;var t=new n;function l(){return typeof t.foo}return l(),l(),e},filledRange:function(e,n,t){for(var l=new Array(e),r=0;r<e;++r)l[r]=n+r+t;return l},toString:b,canAttachTrace:M,ensureErrorObject:y,originatesFromRejection:function(e){return null!=e&&(e instanceof Error.__BluebirdErrorTypes__.OperationalError||!0===e.isOperational)},markAsOriginatingFromRejection:function(e){try{p(e,"isOperational",!0)}catch(e){}},classString:v,copyDescriptors:function(e,n,t){for(var l=a.names(e),r=0;r<l.length;++r){var i=l[r];if(t(i))try{a.defineProperty(n,i,a.getDescriptor(e,i))}catch(e){}}},isNode:C,hasEnvVariables:T,env:function(e){return T?r.env[e]:void 0},global:s,getNativePromise:function(){if("function"==typeof Promise)try{if("[object Promise]"===v(new Promise((function(){}))))return Promise}catch(e){}},contextBind:function(e,n){if(null===e||"function"!=typeof n||n===_)return n;null!==e.domain&&(n=e.domain.bind(n));var t=e.async;if(null!==t){var l=n;n=function(){var e=new Array(2).concat([].slice.call(arguments));return e[0]=l,e[1]=this,t.runInAsyncScope.apply(t,e)}}return n}};z.isRecentNode=z.isNode&&(r.versions&&r.versions.node?S=r.versions.node.split(".").map(Number):r.version&&(S=r.version.split(".").map(Number)),0===S[0]&&S[1]>10||S[0]>0),z.nodeSupportsAsyncResource=z.isNode&&function(){var n=!1;try{n="function"==typeof e("async_hooks").AsyncResource.prototype.runInAsyncScope}catch(e){n=!1}return n}(),z.isNode&&z.toFastProperties(r);try{throw new Error}catch(e){z.lastLineError=e}n.exports=z},{"./es5":13,async_hooks:void 0}]},{},[4])(4)},e.exports=l(),"undefined"!=typeof window&&null!==window?window.P=window.Promise:"undefined"!=typeof self&&null!==self&&(self.P=self.Promise)},13039:(e,n,t)=>{"use strict";var l=t(34005),r=t(68865),i="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;n.Buffer=u,n.SlowBuffer=function(e){return+e!=e&&(e=0),u.alloc(+e)},n.INSPECT_MAX_BYTES=50;var a=2147483647;function o(e){if(e>a)throw new RangeError('The value "'+e+'" is invalid for option "size"');var n=new Uint8Array(e);return Object.setPrototypeOf(n,u.prototype),n}function u(e,n,t){if("number"==typeof e){if("string"==typeof n)throw new TypeError('The "string" argument must be of type string. Received type number');return d(e)}return s(e,n,t)}function s(e,n,t){if("string"==typeof e)return function(e,n){if("string"==typeof n&&""!==n||(n="utf8"),!u.isEncoding(n))throw new TypeError("Unknown encoding: "+n);var t=0|m(e,n),l=o(t),r=l.write(e,n);return r!==t&&(l=l.slice(0,r)),l}(e,n);if(ArrayBuffer.isView(e))return function(e){if(F(e,Uint8Array)){var n=new Uint8Array(e);return f(n.buffer,n.byteOffset,n.byteLength)}return p(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(F(e,ArrayBuffer)||e&&F(e.buffer,ArrayBuffer))return f(e,n,t);if("undefined"!=typeof SharedArrayBuffer&&(F(e,SharedArrayBuffer)||e&&F(e.buffer,SharedArrayBuffer)))return f(e,n,t);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var l=e.valueOf&&e.valueOf();if(null!=l&&l!==e)return u.from(l,n,t);var r=function(e){if(u.isBuffer(e)){var n=0|h(e.length),t=o(n);return 0===t.length||e.copy(t,0,0,n),t}return void 0!==e.length?"number"!=typeof e.length||j(e.length)?o(0):p(e):"Buffer"===e.type&&Array.isArray(e.data)?p(e.data):void 0}(e);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return u.from(e[Symbol.toPrimitive]("string"),n,t);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function d(e){return c(e),o(e<0?0:0|h(e))}function p(e){for(var n=e.length<0?0:0|h(e.length),t=o(n),l=0;l<n;l+=1)t[l]=255&e[l];return t}function f(e,n,t){if(n<0||e.byteLength<n)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<n+(t||0))throw new RangeError('"length" is outside of buffer bounds');var l;return l=void 0===n&&void 0===t?new Uint8Array(e):void 0===t?new Uint8Array(e,n):new Uint8Array(e,n,t),Object.setPrototypeOf(l,u.prototype),l}function h(e){if(e>=a)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a.toString(16)+" bytes");return 0|e}function m(e,n){if(u.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||F(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var t=e.length,l=arguments.length>2&&!0===arguments[2];if(!l&&0===t)return 0;for(var r=!1;;)switch(n){case"ascii":case"latin1":case"binary":return t;case"utf8":case"utf-8":return R(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*t;case"hex":return t>>>1;case"base64":return W(e).length;default:if(r)return l?-1:R(e).length;n=(""+n).toLowerCase(),r=!0}}function b(e,n,t){var l=!1;if((void 0===n||n<0)&&(n=0),n>this.length)return"";if((void 0===t||t>this.length)&&(t=this.length),t<=0)return"";if((t>>>=0)<=(n>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return L(this,n,t);case"utf8":case"utf-8":return S(this,n,t);case"ascii":return O(this,n,t);case"latin1":case"binary":return E(this,n,t);case"base64":return T(this,n,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return x(this,n,t);default:if(l)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),l=!0}}function g(e,n,t){var l=e[n];e[n]=e[t],e[t]=l}function M(e,n,t,l,r){if(0===e.length)return-1;if("string"==typeof t?(l=t,t=0):t>2147483647?t=2147483647:t<-2147483648&&(t=-2147483648),j(t=+t)&&(t=r?0:e.length-1),t<0&&(t=e.length+t),t>=e.length){if(r)return-1;t=e.length-1}else if(t<0){if(!r)return-1;t=0}if("string"==typeof n&&(n=u.from(n,l)),u.isBuffer(n))return 0===n.length?-1:y(e,n,t,l,r);if("number"==typeof n)return n&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,n,t):Uint8Array.prototype.lastIndexOf.call(e,n,t):y(e,[n],t,l,r);throw new TypeError("val must be string, number or Buffer")}function y(e,n,t,l,r){var i,a=1,o=e.length,u=n.length;if(void 0!==l&&("ucs2"===(l=String(l).toLowerCase())||"ucs-2"===l||"utf16le"===l||"utf-16le"===l)){if(e.length<2||n.length<2)return-1;a=2,o/=2,u/=2,t/=2}function s(e,n){return 1===a?e[n]:e.readUInt16BE(n*a)}if(r){var c=-1;for(i=t;i<o;i++)if(s(e,i)===s(n,-1===c?0:i-c)){if(-1===c&&(c=i),i-c+1===u)return c*a}else-1!==c&&(i-=i-c),c=-1}else for(t+u>o&&(t=o-u),i=t;i>=0;i--){for(var d=!0,p=0;p<u;p++)if(s(e,i+p)!==s(n,p)){d=!1;break}if(d)return i}return-1}function v(e,n,t,l){t=Number(t)||0;var r=e.length-t;l?(l=Number(l))>r&&(l=r):l=r;var i=n.length;l>i/2&&(l=i/2);for(var a=0;a<l;++a){var o=parseInt(n.substr(2*a,2),16);if(j(o))return a;e[t+a]=o}return a}function A(e,n,t,l){return I(R(n,e.length-t),e,t,l)}function w(e,n,t,l){return I(function(e){for(var n=[],t=0;t<e.length;++t)n.push(255&e.charCodeAt(t));return n}(n),e,t,l)}function _(e,n,t,l){return I(W(n),e,t,l)}function C(e,n,t,l){return I(function(e,n){for(var t,l,r,i=[],a=0;a<e.length&&!((n-=2)<0);++a)l=(t=e.charCodeAt(a))>>8,r=t%256,i.push(r),i.push(l);return i}(n,e.length-t),e,t,l)}function T(e,n,t){return 0===n&&t===e.length?l.fromByteArray(e):l.fromByteArray(e.slice(n,t))}function S(e,n,t){t=Math.min(e.length,t);for(var l=[],r=n;r<t;){var i,a,o,u,s=e[r],c=null,d=s>239?4:s>223?3:s>191?2:1;if(r+d<=t)switch(d){case 1:s<128&&(c=s);break;case 2:128==(192&(i=e[r+1]))&&(u=(31&s)<<6|63&i)>127&&(c=u);break;case 3:i=e[r+1],a=e[r+2],128==(192&i)&&128==(192&a)&&(u=(15&s)<<12|(63&i)<<6|63&a)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:i=e[r+1],a=e[r+2],o=e[r+3],128==(192&i)&&128==(192&a)&&128==(192&o)&&(u=(15&s)<<18|(63&i)<<12|(63&a)<<6|63&o)>65535&&u<1114112&&(c=u)}null===c?(c=65533,d=1):c>65535&&(c-=65536,l.push(c>>>10&1023|55296),c=56320|1023&c),l.push(c),r+=d}return function(e){var n=e.length;if(n<=z)return String.fromCharCode.apply(String,e);for(var t="",l=0;l<n;)t+=String.fromCharCode.apply(String,e.slice(l,l+=z));return t}(l)}n.kMaxLength=a,u.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),n={foo:function(){return 42}};return Object.setPrototypeOf(n,Uint8Array.prototype),Object.setPrototypeOf(e,n),42===e.foo()}catch(e){return!1}}(),u.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(u.prototype,"parent",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,"offset",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(e,n,t){return s(e,n,t)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(e,n,t){return function(e,n,t){return c(e),e<=0?o(e):void 0!==n?"string"==typeof t?o(e).fill(n,t):o(e).fill(n):o(e)}(e,n,t)},u.allocUnsafe=function(e){return d(e)},u.allocUnsafeSlow=function(e){return d(e)},u.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==u.prototype},u.compare=function(e,n){if(F(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),F(n,Uint8Array)&&(n=u.from(n,n.offset,n.byteLength)),!u.isBuffer(e)||!u.isBuffer(n))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===n)return 0;for(var t=e.length,l=n.length,r=0,i=Math.min(t,l);r<i;++r)if(e[r]!==n[r]){t=e[r],l=n[r];break}return t<l?-1:l<t?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,n){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var t;if(void 0===n)for(n=0,t=0;t<e.length;++t)n+=e[t].length;var l=u.allocUnsafe(n),r=0;for(t=0;t<e.length;++t){var i=e[t];if(F(i,Uint8Array))r+i.length>l.length?u.from(i).copy(l,r):Uint8Array.prototype.set.call(l,i,r);else{if(!u.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(l,r)}r+=i.length}return l},u.byteLength=m,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var n=0;n<e;n+=2)g(this,n,n+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var n=0;n<e;n+=4)g(this,n,n+3),g(this,n+1,n+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var n=0;n<e;n+=8)g(this,n,n+7),g(this,n+1,n+6),g(this,n+2,n+5),g(this,n+3,n+4);return this},u.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?S(this,0,e):b.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",t=n.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},i&&(u.prototype[i]=u.prototype.inspect),u.prototype.compare=function(e,n,t,l,r){if(F(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===n&&(n=0),void 0===t&&(t=e?e.length:0),void 0===l&&(l=0),void 0===r&&(r=this.length),n<0||t>e.length||l<0||r>this.length)throw new RangeError("out of range index");if(l>=r&&n>=t)return 0;if(l>=r)return-1;if(n>=t)return 1;if(this===e)return 0;for(var i=(r>>>=0)-(l>>>=0),a=(t>>>=0)-(n>>>=0),o=Math.min(i,a),s=this.slice(l,r),c=e.slice(n,t),d=0;d<o;++d)if(s[d]!==c[d]){i=s[d],a=c[d];break}return i<a?-1:a<i?1:0},u.prototype.includes=function(e,n,t){return-1!==this.indexOf(e,n,t)},u.prototype.indexOf=function(e,n,t){return M(this,e,n,t,!0)},u.prototype.lastIndexOf=function(e,n,t){return M(this,e,n,t,!1)},u.prototype.write=function(e,n,t,l){if(void 0===n)l="utf8",t=this.length,n=0;else if(void 0===t&&"string"==typeof n)l=n,t=this.length,n=0;else{if(!isFinite(n))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");n>>>=0,isFinite(t)?(t>>>=0,void 0===l&&(l="utf8")):(l=t,t=void 0)}var r=this.length-n;if((void 0===t||t>r)&&(t=r),e.length>0&&(t<0||n<0)||n>this.length)throw new RangeError("Attempt to write outside buffer bounds");l||(l="utf8");for(var i=!1;;)switch(l){case"hex":return v(this,e,n,t);case"utf8":case"utf-8":return A(this,e,n,t);case"ascii":case"latin1":case"binary":return w(this,e,n,t);case"base64":return _(this,e,n,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,n,t);default:if(i)throw new TypeError("Unknown encoding: "+l);l=(""+l).toLowerCase(),i=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var z=4096;function O(e,n,t){var l="";t=Math.min(e.length,t);for(var r=n;r<t;++r)l+=String.fromCharCode(127&e[r]);return l}function E(e,n,t){var l="";t=Math.min(e.length,t);for(var r=n;r<t;++r)l+=String.fromCharCode(e[r]);return l}function L(e,n,t){var l=e.length;(!n||n<0)&&(n=0),(!t||t<0||t>l)&&(t=l);for(var r="",i=n;i<t;++i)r+=X[e[i]];return r}function x(e,n,t){for(var l=e.slice(n,t),r="",i=0;i<l.length-1;i+=2)r+=String.fromCharCode(l[i]+256*l[i+1]);return r}function k(e,n,t){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+n>t)throw new RangeError("Trying to access beyond buffer length")}function N(e,n,t,l,r,i){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(n>r||n<i)throw new RangeError('"value" argument is out of bounds');if(t+l>e.length)throw new RangeError("Index out of range")}function B(e,n,t,l,r,i){if(t+l>e.length)throw new RangeError("Index out of range");if(t<0)throw new RangeError("Index out of range")}function q(e,n,t,l,i){return n=+n,t>>>=0,i||B(e,0,t,4),r.write(e,n,t,l,23,4),t+4}function P(e,n,t,l,i){return n=+n,t>>>=0,i||B(e,0,t,8),r.write(e,n,t,l,52,8),t+8}u.prototype.slice=function(e,n){var t=this.length;(e=~~e)<0?(e+=t)<0&&(e=0):e>t&&(e=t),(n=void 0===n?t:~~n)<0?(n+=t)<0&&(n=0):n>t&&(n=t),n<e&&(n=e);var l=this.subarray(e,n);return Object.setPrototypeOf(l,u.prototype),l},u.prototype.readUintLE=u.prototype.readUIntLE=function(e,n,t){e>>>=0,n>>>=0,t||k(e,n,this.length);for(var l=this[e],r=1,i=0;++i<n&&(r*=256);)l+=this[e+i]*r;return l},u.prototype.readUintBE=u.prototype.readUIntBE=function(e,n,t){e>>>=0,n>>>=0,t||k(e,n,this.length);for(var l=this[e+--n],r=1;n>0&&(r*=256);)l+=this[e+--n]*r;return l},u.prototype.readUint8=u.prototype.readUInt8=function(e,n){return e>>>=0,n||k(e,1,this.length),this[e]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(e,n){return e>>>=0,n||k(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(e,n){return e>>>=0,n||k(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(e,n){return e>>>=0,n||k(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(e,n){return e>>>=0,n||k(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,n,t){e>>>=0,n>>>=0,t||k(e,n,this.length);for(var l=this[e],r=1,i=0;++i<n&&(r*=256);)l+=this[e+i]*r;return l>=(r*=128)&&(l-=Math.pow(2,8*n)),l},u.prototype.readIntBE=function(e,n,t){e>>>=0,n>>>=0,t||k(e,n,this.length);for(var l=n,r=1,i=this[e+--l];l>0&&(r*=256);)i+=this[e+--l]*r;return i>=(r*=128)&&(i-=Math.pow(2,8*n)),i},u.prototype.readInt8=function(e,n){return e>>>=0,n||k(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,n){e>>>=0,n||k(e,2,this.length);var t=this[e]|this[e+1]<<8;return 32768&t?4294901760|t:t},u.prototype.readInt16BE=function(e,n){e>>>=0,n||k(e,2,this.length);var t=this[e+1]|this[e]<<8;return 32768&t?4294901760|t:t},u.prototype.readInt32LE=function(e,n){return e>>>=0,n||k(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,n){return e>>>=0,n||k(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,n){return e>>>=0,n||k(e,4,this.length),r.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,n){return e>>>=0,n||k(e,4,this.length),r.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,n){return e>>>=0,n||k(e,8,this.length),r.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,n){return e>>>=0,n||k(e,8,this.length),r.read(this,e,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(e,n,t,l){e=+e,n>>>=0,t>>>=0,l||N(this,e,n,t,Math.pow(2,8*t)-1,0);var r=1,i=0;for(this[n]=255&e;++i<t&&(r*=256);)this[n+i]=e/r&255;return n+t},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(e,n,t,l){e=+e,n>>>=0,t>>>=0,l||N(this,e,n,t,Math.pow(2,8*t)-1,0);var r=t-1,i=1;for(this[n+r]=255&e;--r>=0&&(i*=256);)this[n+r]=e/i&255;return n+t},u.prototype.writeUint8=u.prototype.writeUInt8=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,1,255,0),this[n]=255&e,n+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,2,65535,0),this[n]=255&e,this[n+1]=e>>>8,n+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,2,65535,0),this[n]=e>>>8,this[n+1]=255&e,n+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,4,4294967295,0),this[n+3]=e>>>24,this[n+2]=e>>>16,this[n+1]=e>>>8,this[n]=255&e,n+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,4,4294967295,0),this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e,n+4},u.prototype.writeIntLE=function(e,n,t,l){if(e=+e,n>>>=0,!l){var r=Math.pow(2,8*t-1);N(this,e,n,t,r-1,-r)}var i=0,a=1,o=0;for(this[n]=255&e;++i<t&&(a*=256);)e<0&&0===o&&0!==this[n+i-1]&&(o=1),this[n+i]=(e/a>>0)-o&255;return n+t},u.prototype.writeIntBE=function(e,n,t,l){if(e=+e,n>>>=0,!l){var r=Math.pow(2,8*t-1);N(this,e,n,t,r-1,-r)}var i=t-1,a=1,o=0;for(this[n+i]=255&e;--i>=0&&(a*=256);)e<0&&0===o&&0!==this[n+i+1]&&(o=1),this[n+i]=(e/a>>0)-o&255;return n+t},u.prototype.writeInt8=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,1,127,-128),e<0&&(e=255+e+1),this[n]=255&e,n+1},u.prototype.writeInt16LE=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,2,32767,-32768),this[n]=255&e,this[n+1]=e>>>8,n+2},u.prototype.writeInt16BE=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,2,32767,-32768),this[n]=e>>>8,this[n+1]=255&e,n+2},u.prototype.writeInt32LE=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,4,2147483647,-2147483648),this[n]=255&e,this[n+1]=e>>>8,this[n+2]=e>>>16,this[n+3]=e>>>24,n+4},u.prototype.writeInt32BE=function(e,n,t){return e=+e,n>>>=0,t||N(this,e,n,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e,n+4},u.prototype.writeFloatLE=function(e,n,t){return q(this,e,n,!0,t)},u.prototype.writeFloatBE=function(e,n,t){return q(this,e,n,!1,t)},u.prototype.writeDoubleLE=function(e,n,t){return P(this,e,n,!0,t)},u.prototype.writeDoubleBE=function(e,n,t){return P(this,e,n,!1,t)},u.prototype.copy=function(e,n,t,l){if(!u.isBuffer(e))throw new TypeError("argument should be a Buffer");if(t||(t=0),l||0===l||(l=this.length),n>=e.length&&(n=e.length),n||(n=0),l>0&&l<t&&(l=t),l===t)return 0;if(0===e.length||0===this.length)return 0;if(n<0)throw new RangeError("targetStart out of bounds");if(t<0||t>=this.length)throw new RangeError("Index out of range");if(l<0)throw new RangeError("sourceEnd out of bounds");l>this.length&&(l=this.length),e.length-n<l-t&&(l=e.length-n+t);var r=l-t;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(n,t,l):Uint8Array.prototype.set.call(e,this.subarray(t,l),n),r},u.prototype.fill=function(e,n,t,l){if("string"==typeof e){if("string"==typeof n?(l=n,n=0,t=this.length):"string"==typeof t&&(l=t,t=this.length),void 0!==l&&"string"!=typeof l)throw new TypeError("encoding must be a string");if("string"==typeof l&&!u.isEncoding(l))throw new TypeError("Unknown encoding: "+l);if(1===e.length){var r=e.charCodeAt(0);("utf8"===l&&r<128||"latin1"===l)&&(e=r)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(n<0||this.length<n||this.length<t)throw new RangeError("Out of range index");if(t<=n)return this;var i;if(n>>>=0,t=void 0===t?this.length:t>>>0,e||(e=0),"number"==typeof e)for(i=n;i<t;++i)this[i]=e;else{var a=u.isBuffer(e)?e:u.from(e,l),o=a.length;if(0===o)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<t-n;++i)this[i+n]=a[i%o]}return this};var D=/[^+/0-9A-Za-z-_]/g;function R(e,n){var t;n=n||1/0;for(var l=e.length,r=null,i=[],a=0;a<l;++a){if((t=e.charCodeAt(a))>55295&&t<57344){if(!r){if(t>56319){(n-=3)>-1&&i.push(239,191,189);continue}if(a+1===l){(n-=3)>-1&&i.push(239,191,189);continue}r=t;continue}if(t<56320){(n-=3)>-1&&i.push(239,191,189),r=t;continue}t=65536+(r-55296<<10|t-56320)}else r&&(n-=3)>-1&&i.push(239,191,189);if(r=null,t<128){if((n-=1)<0)break;i.push(t)}else if(t<2048){if((n-=2)<0)break;i.push(t>>6|192,63&t|128)}else if(t<65536){if((n-=3)<0)break;i.push(t>>12|224,t>>6&63|128,63&t|128)}else{if(!(t<1114112))throw new Error("Invalid code point");if((n-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,63&t|128)}}return i}function W(e){return l.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(D,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function I(e,n,t,l){for(var r=0;r<l&&!(r+t>=n.length||r>=e.length);++r)n[r+t]=e[r];return r}function F(e,n){return e instanceof n||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===n.name}function j(e){return e!=e}var X=function(){for(var e="0123456789abcdef",n=new Array(256),t=0;t<16;++t)for(var l=16*t,r=0;r<16;++r)n[l+r]=e[t]+e[r];return n}()},92440:(e,n,t)=>{"use strict";var l=t(7370),r=t(64239),i=r(l("String.prototype.indexOf"));e.exports=function(e,n){var t=l(e,!!n);return"function"==typeof t&&i(e,".prototype.")>-1?r(t):t}},64239:(e,n,t)=>{"use strict";var l=t(65120),r=t(7370),i=r("%Function.prototype.apply%"),a=r("%Function.prototype.call%"),o=r("%Reflect.apply%",!0)||l.call(a,i),u=r("%Object.getOwnPropertyDescriptor%",!0),s=r("%Object.defineProperty%",!0),c=r("%Math.max%");if(s)try{s({},"a",{value:1})}catch(e){s=null}e.exports=function(e){var n=o(l,a,arguments);if(u&&s){var t=u(n,"length");t.configurable&&s(n,"length",{value:1+c(0,e.length-(arguments.length-1))})}return n};var d=function(){return o(l,i,arguments)};s?s(e.exports,"apply",{value:d}):e.exports.apply=d},36436:(e,n,t)=>{e.exports=t(69897)},69897:(e,n,t)=>{var l=[];n.version="4.2.0",n.AssertionError=t(72799);var r=t(45295);n.use=function(e){return~l.indexOf(e)||(e(n,r),l.push(e)),n},n.util=r;var i=t(3562);n.config=i;var a=t(72265);n.use(a);var o=t(80003);n.use(o);var u=t(75569);n.use(u);var s=t(21350);n.use(s);var c=t(14878);n.use(c)},72265:(e,n,t)=>{var l=t(3562);e.exports=function(e,n){var t=e.AssertionError,r=n.flag;function i(e,t,l,a){return r(this,"ssfi",l||i),r(this,"lockSsfi",a),r(this,"object",e),r(this,"message",t),n.proxify(this)}e.Assertion=i,Object.defineProperty(i,"includeStack",{get:function(){return console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),l.includeStack},set:function(e){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),l.includeStack=e}}),Object.defineProperty(i,"showDiff",{get:function(){return console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),l.showDiff},set:function(e){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),l.showDiff=e}}),i.addProperty=function(e,t){n.addProperty(this.prototype,e,t)},i.addMethod=function(e,t){n.addMethod(this.prototype,e,t)},i.addChainableMethod=function(e,t,l){n.addChainableMethod(this.prototype,e,t,l)},i.overwriteProperty=function(e,t){n.overwriteProperty(this.prototype,e,t)},i.overwriteMethod=function(e,t){n.overwriteMethod(this.prototype,e,t)},i.overwriteChainableMethod=function(e,t,l){n.overwriteChainableMethod(this.prototype,e,t,l)},i.prototype.assert=function(e,i,a,o,u,s){var c=n.test(this,arguments);if(!1!==s&&(s=!0),void 0===o&&void 0===u&&(s=!1),!0!==l.showDiff&&(s=!1),!c){i=n.getMessage(this,arguments);var d=n.getActual(this,arguments);throw new t(i,{actual:d,expected:o,showDiff:s},l.includeStack?this.assert:r(this,"ssfi"))}},Object.defineProperty(i.prototype,"_obj",{get:function(){return r(this,"object")},set:function(e){r(this,"object",e)}})}},3562:e=>{e.exports={includeStack:!1,showDiff:!0,truncateThreshold:40,useProxy:!0,proxyExcludedKeys:["then","catch","inspect","toJSON"]}},80003:e=>{e.exports=function(e,n){var t=e.Assertion,l=e.AssertionError,r=n.flag;function i(e,t){t&&r(this,"message",t),e=e.toLowerCase();var l=r(this,"object"),i=~["a","e","i","o","u"].indexOf(e.charAt(0))?"an ":"a ";this.assert(e===n.type(l).toLowerCase(),"expected #{this} to be "+i+e,"expected #{this} not to be "+i+e)}function a(e,t){return n.isNaN(e)&&n.isNaN(t)||e===t}function o(){r(this,"contains",!0)}function u(e,i){i&&r(this,"message",i);var o=r(this,"object"),u=n.type(o).toLowerCase(),s=r(this,"message"),c=r(this,"negate"),d=r(this,"ssfi"),p=r(this,"deep"),f=p?"deep ":"";s=s?s+": ":"";var h=!1;switch(u){case"string":h=-1!==o.indexOf(e);break;case"weakset":if(p)throw new l(s+"unable to use .deep.include with WeakSet",void 0,d);h=o.has(e);break;case"map":var m=p?n.eql:a;o.forEach((function(n){h=h||m(n,e)}));break;case"set":p?o.forEach((function(t){h=h||n.eql(t,e)})):h=o.has(e);break;case"array":h=p?o.some((function(t){return n.eql(t,e)})):-1!==o.indexOf(e);break;default:if(e!==Object(e))throw new l(s+"object tested must be an array, a map, an object, a set, a string, or a weakset, but "+u+" given",void 0,d);var b=Object.keys(e),g=null,M=0;if(b.forEach((function(i){var a=new t(o);if(n.transferFlags(this,a,!0),r(a,"lockSsfi",!0),c&&1!==b.length)try{a.property(i,e[i])}catch(e){if(!n.checkError.compatibleConstructor(e,l))throw e;null===g&&(g=e),M++}else a.property(i,e[i])}),this),c&&b.length>1&&M===b.length)throw g;return}this.assert(h,"expected #{this} to "+f+"include "+n.inspect(e),"expected #{this} to not "+f+"include "+n.inspect(e))}function s(){var e=r(this,"object"),t=n.type(e);this.assert("Arguments"===t,"expected #{this} to be arguments but got "+t,"expected #{this} to not be arguments")}function c(e,n){n&&r(this,"message",n);var t=r(this,"object");if(r(this,"deep")){var l=r(this,"lockSsfi");r(this,"lockSsfi",!0),this.eql(e),r(this,"lockSsfi",l)}else this.assert(e===t,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",e,this._obj,!0)}function d(e,t){t&&r(this,"message",t),this.assert(n.eql(e,r(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",e,this._obj,!0)}function p(e,i){i&&r(this,"message",i);var a,o=r(this,"object"),u=r(this,"doLength"),s=r(this,"message"),c=s?s+": ":"",d=r(this,"ssfi"),p=n.type(o).toLowerCase(),f=n.type(e).toLowerCase(),h=!0;if(u&&"map"!==p&&"set"!==p&&new t(o,s,d,!0).to.have.property("length"),u||"date"!==p||"date"===f?"number"===f||!u&&"number"!==p?u||"date"===p||"number"===p?h=!1:a=c+"expected "+("string"===p?"'"+o+"'":o)+" to be a number or a date":a=c+"the argument to above must be a number":a=c+"the argument to above must be a date",h)throw new l(a,void 0,d);if(u){var m,b="length";"map"===p||"set"===p?(b="size",m=o.size):m=o.length,this.assert(m>e,"expected #{this} to have a "+b+" above #{exp} but got #{act}","expected #{this} to not have a "+b+" above #{exp}",e,m)}else this.assert(o>e,"expected #{this} to be above #{exp}","expected #{this} to be at most #{exp}",e)}function f(e,i){i&&r(this,"message",i);var a,o=r(this,"object"),u=r(this,"doLength"),s=r(this,"message"),c=s?s+": ":"",d=r(this,"ssfi"),p=n.type(o).toLowerCase(),f=n.type(e).toLowerCase(),h=!0;if(u&&"map"!==p&&"set"!==p&&new t(o,s,d,!0).to.have.property("length"),u||"date"!==p||"date"===f?"number"===f||!u&&"number"!==p?u||"date"===p||"number"===p?h=!1:a=c+"expected "+("string"===p?"'"+o+"'":o)+" to be a number or a date":a=c+"the argument to least must be a number":a=c+"the argument to least must be a date",h)throw new l(a,void 0,d);if(u){var m,b="length";"map"===p||"set"===p?(b="size",m=o.size):m=o.length,this.assert(m>=e,"expected #{this} to have a "+b+" at least #{exp} but got #{act}","expected #{this} to have a "+b+" below #{exp}",e,m)}else this.assert(o>=e,"expected #{this} to be at least #{exp}","expected #{this} to be below #{exp}",e)}function h(e,i){i&&r(this,"message",i);var a,o=r(this,"object"),u=r(this,"doLength"),s=r(this,"message"),c=s?s+": ":"",d=r(this,"ssfi"),p=n.type(o).toLowerCase(),f=n.type(e).toLowerCase(),h=!0;if(u&&"map"!==p&&"set"!==p&&new t(o,s,d,!0).to.have.property("length"),u||"date"!==p||"date"===f?"number"===f||!u&&"number"!==p?u||"date"===p||"number"===p?h=!1:a=c+"expected "+("string"===p?"'"+o+"'":o)+" to be a number or a date":a=c+"the argument to below must be a number":a=c+"the argument to below must be a date",h)throw new l(a,void 0,d);if(u){var m,b="length";"map"===p||"set"===p?(b="size",m=o.size):m=o.length,this.assert(m<e,"expected #{this} to have a "+b+" below #{exp} but got #{act}","expected #{this} to not have a "+b+" below #{exp}",e,m)}else this.assert(o<e,"expected #{this} to be below #{exp}","expected #{this} to be at least #{exp}",e)}function m(e,i){i&&r(this,"message",i);var a,o=r(this,"object"),u=r(this,"doLength"),s=r(this,"message"),c=s?s+": ":"",d=r(this,"ssfi"),p=n.type(o).toLowerCase(),f=n.type(e).toLowerCase(),h=!0;if(u&&"map"!==p&&"set"!==p&&new t(o,s,d,!0).to.have.property("length"),u||"date"!==p||"date"===f?"number"===f||!u&&"number"!==p?u||"date"===p||"number"===p?h=!1:a=c+"expected "+("string"===p?"'"+o+"'":o)+" to be a number or a date":a=c+"the argument to most must be a number":a=c+"the argument to most must be a date",h)throw new l(a,void 0,d);if(u){var m,b="length";"map"===p||"set"===p?(b="size",m=o.size):m=o.length,this.assert(m<=e,"expected #{this} to have a "+b+" at most #{exp} but got #{act}","expected #{this} to have a "+b+" above #{exp}",e,m)}else this.assert(o<=e,"expected #{this} to be at most #{exp}","expected #{this} to be above #{exp}",e)}function b(e,t){t&&r(this,"message",t);var i=r(this,"object"),a=r(this,"ssfi"),o=r(this,"message");try{var u=i instanceof e}catch(t){if(t instanceof TypeError)throw new l((o=o?o+": ":"")+"The instanceof assertion needs a constructor but "+n.type(e)+" was given.",void 0,a);throw t}var s=n.getName(e);null===s&&(s="an unnamed constructor"),this.assert(u,"expected #{this} to be an instance of "+s,"expected #{this} to not be an instance of "+s)}function g(e,t,i){i&&r(this,"message",i);var a=r(this,"nested"),o=r(this,"own"),u=r(this,"message"),s=r(this,"object"),c=r(this,"ssfi"),d=typeof e;if(u=u?u+": ":"",a){if("string"!==d)throw new l(u+"the argument to property must be a string when using nested syntax",void 0,c)}else if("string"!==d&&"number"!==d&&"symbol"!==d)throw new l(u+"the argument to property must be a string, number, or symbol",void 0,c);if(a&&o)throw new l(u+'The "nested" and "own" flags cannot be combined.',void 0,c);if(null==s)throw new l(u+"Target cannot be null or undefined.",void 0,c);var p,f=r(this,"deep"),h=r(this,"negate"),m=a?n.getPathInfo(s,e):null,b=a?m.value:s[e],g="";f&&(g+="deep "),o&&(g+="own "),a&&(g+="nested "),g+="property ",p=o?Object.prototype.hasOwnProperty.call(s,e):a?m.exists:n.hasProperty(s,e),h&&1!==arguments.length||this.assert(p,"expected #{this} to have "+g+n.inspect(e),"expected #{this} to not have "+g+n.inspect(e)),arguments.length>1&&this.assert(p&&(f?n.eql(t,b):t===b),"expected #{this} to have "+g+n.inspect(e)+" of #{exp}, but got #{act}","expected #{this} to not have "+g+n.inspect(e)+" of #{act}",t,b),r(this,"object",b)}function M(e,n,t){r(this,"own",!0),g.apply(this,arguments)}function y(e,t,l){"string"==typeof t&&(l=t,t=null),l&&r(this,"message",l);var i=r(this,"object"),a=Object.getOwnPropertyDescriptor(Object(i),e);a&&t?this.assert(n.eql(t,a),"expected the own property descriptor for "+n.inspect(e)+" on #{this} to match "+n.inspect(t)+", got "+n.inspect(a),"expected the own property descriptor for "+n.inspect(e)+" on #{this} to not match "+n.inspect(t),t,a,!0):this.assert(a,"expected #{this} to have an own property descriptor for "+n.inspect(e),"expected #{this} to not have an own property descriptor for "+n.inspect(e)),r(this,"object",a)}function v(){r(this,"doLength",!0)}function A(e,l){l&&r(this,"message",l);var i,a=r(this,"object"),o=n.type(a).toLowerCase(),u=r(this,"message"),s=r(this,"ssfi"),c="length";switch(o){case"map":case"set":c="size",i=a.size;break;default:new t(a,u,s,!0).to.have.property("length"),i=a.length}this.assert(i==e,"expected #{this} to have a "+c+" of #{exp} but got #{act}","expected #{this} to not have a "+c+" of #{act}",e,i)}function w(e,n){n&&r(this,"message",n);var t=r(this,"object");this.assert(e.exec(t),"expected #{this} to match "+e,"expected #{this} not to match "+e)}function _(e){var t,i,a=r(this,"object"),o=n.type(a),u=n.type(e),s=r(this,"ssfi"),c=r(this,"deep"),d="",p=!0,f=r(this,"message"),h=(f=f?f+": ":"")+"when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments";if("Map"===o||"Set"===o)d=c?"deeply ":"",i=[],a.forEach((function(e,n){i.push(n)})),"Array"!==u&&(e=Array.prototype.slice.call(arguments));else{switch(i=n.getOwnEnumerableProperties(a),u){case"Array":if(arguments.length>1)throw new l(h,void 0,s);break;case"Object":if(arguments.length>1)throw new l(h,void 0,s);e=Object.keys(e);break;default:e=Array.prototype.slice.call(arguments)}e=e.map((function(e){return"symbol"==typeof e?e:String(e)}))}if(!e.length)throw new l(f+"keys required",void 0,s);var m=e.length,b=r(this,"any"),g=r(this,"all"),M=e;if(b||g||(g=!0),b&&(p=M.some((function(e){return i.some((function(t){return c?n.eql(e,t):e===t}))}))),g&&(p=M.every((function(e){return i.some((function(t){return c?n.eql(e,t):e===t}))})),r(this,"contains")||(p=p&&e.length==i.length)),m>1){var y=(e=e.map((function(e){return n.inspect(e)}))).pop();g&&(t=e.join(", ")+", and "+y),b&&(t=e.join(", ")+", or "+y)}else t=n.inspect(e[0]);t=(m>1?"keys ":"key ")+t,t=(r(this,"contains")?"contain ":"have ")+t,this.assert(p,"expected #{this} to "+d+t,"expected #{this} to not "+d+t,M.slice(0).sort(n.compareByInspect),i.sort(n.compareByInspect),!0)}function C(e,l,i){i&&r(this,"message",i);var a,o=r(this,"object"),u=r(this,"ssfi"),s=r(this,"message"),c=r(this,"negate")||!1;new t(o,s,u,!0).is.a("function"),(e instanceof RegExp||"string"==typeof e)&&(l=e,e=null);try{o()}catch(e){a=e}var d=void 0===e&&void 0===l,p=Boolean(e&&l),f=!1,h=!1;if(d||!d&&!c){var m="an error";e instanceof Error?m="#{exp}":e&&(m=n.checkError.getConstructorName(e)),this.assert(a,"expected #{this} to throw "+m,"expected #{this} to not throw an error but #{act} was thrown",e&&e.toString(),a instanceof Error?a.toString():"string"==typeof a?a:a&&n.checkError.getConstructorName(a))}if(e&&a&&(e instanceof Error&&n.checkError.compatibleInstance(a,e)===c&&(p&&c?f=!0:this.assert(c,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(a&&!c?" but #{act} was thrown":""),e.toString(),a.toString())),n.checkError.compatibleConstructor(a,e)===c&&(p&&c?f=!0:this.assert(c,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(a?" but #{act} was thrown":""),e instanceof Error?e.toString():e&&n.checkError.getConstructorName(e),a instanceof Error?a.toString():a&&n.checkError.getConstructorName(a)))),a&&null!=l){var b="including";l instanceof RegExp&&(b="matching"),n.checkError.compatibleMessage(a,l)===c&&(p&&c?h=!0:this.assert(c,"expected #{this} to throw error "+b+" #{exp} but got #{act}","expected #{this} to throw error not "+b+" #{exp}",l,n.checkError.getMessage(a)))}f&&h&&this.assert(c,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(a?" but #{act} was thrown":""),e instanceof Error?e.toString():e&&n.checkError.getConstructorName(e),a instanceof Error?a.toString():a&&n.checkError.getConstructorName(a)),r(this,"object",a)}function T(e,t){t&&r(this,"message",t);var l=r(this,"object"),i=r(this,"itself"),a="function"!=typeof l||i?l[e]:l.prototype[e];this.assert("function"==typeof a,"expected #{this} to respond to "+n.inspect(e),"expected #{this} to not respond to "+n.inspect(e))}function S(e,t){t&&r(this,"message",t);var l=e(r(this,"object"));this.assert(l,"expected #{this} to satisfy "+n.objDisplay(e),"expected #{this} to not satisfy"+n.objDisplay(e),!r(this,"negate"),l)}function z(e,n,i){i&&r(this,"message",i);var a=r(this,"object"),o=r(this,"message"),u=r(this,"ssfi");if(new t(a,o,u,!0).is.a("number"),"number"!=typeof e||"number"!=typeof n)throw new l((o=o?o+": ":"")+"the arguments to closeTo or approximately must be numbers",void 0,u);this.assert(Math.abs(a-e)<=n,"expected #{this} to be close to "+e+" +/- "+n,"expected #{this} not to be close to "+e+" +/- "+n)}function O(e,n,l){l&&r(this,"message",l);var i,a=r(this,"object"),o=r(this,"message"),u=r(this,"ssfi");new t(a,o,u,!0).is.a("function"),n?(new t(e,o,u,!0).to.have.property(n),i=e[n]):(new t(e,o,u,!0).is.a("function"),i=e()),a();var s=null==n?e():e[n],c=null==n?i:"."+n;r(this,"deltaMsgObj",c),r(this,"initialDeltaValue",i),r(this,"finalDeltaValue",s),r(this,"deltaBehavior","change"),r(this,"realDelta",s!==i),this.assert(i!==s,"expected "+c+" to change","expected "+c+" to not change")}function E(e,n,l){l&&r(this,"message",l);var i,a=r(this,"object"),o=r(this,"message"),u=r(this,"ssfi");new t(a,o,u,!0).is.a("function"),n?(new t(e,o,u,!0).to.have.property(n),i=e[n]):(new t(e,o,u,!0).is.a("function"),i=e()),new t(i,o,u,!0).is.a("number"),a();var s=null==n?e():e[n],c=null==n?i:"."+n;r(this,"deltaMsgObj",c),r(this,"initialDeltaValue",i),r(this,"finalDeltaValue",s),r(this,"deltaBehavior","increase"),r(this,"realDelta",s-i),this.assert(s-i>0,"expected "+c+" to increase","expected "+c+" to not increase")}function L(e,n,l){l&&r(this,"message",l);var i,a=r(this,"object"),o=r(this,"message"),u=r(this,"ssfi");new t(a,o,u,!0).is.a("function"),n?(new t(e,o,u,!0).to.have.property(n),i=e[n]):(new t(e,o,u,!0).is.a("function"),i=e()),new t(i,o,u,!0).is.a("number"),a();var s=null==n?e():e[n],c=null==n?i:"."+n;r(this,"deltaMsgObj",c),r(this,"initialDeltaValue",i),r(this,"finalDeltaValue",s),r(this,"deltaBehavior","decrease"),r(this,"realDelta",i-s),this.assert(s-i<0,"expected "+c+" to decrease","expected "+c+" to not decrease")}["to","be","been","is","and","has","have","with","that","which","at","of","same","but","does","still"].forEach((function(e){t.addProperty(e)})),t.addProperty("not",(function(){r(this,"negate",!0)})),t.addProperty("deep",(function(){r(this,"deep",!0)})),t.addProperty("nested",(function(){r(this,"nested",!0)})),t.addProperty("own",(function(){r(this,"own",!0)})),t.addProperty("ordered",(function(){r(this,"ordered",!0)})),t.addProperty("any",(function(){r(this,"any",!0),r(this,"all",!1)})),t.addProperty("all",(function(){r(this,"all",!0),r(this,"any",!1)})),t.addChainableMethod("an",i),t.addChainableMethod("a",i),t.addChainableMethod("include",u,o),t.addChainableMethod("contain",u,o),t.addChainableMethod("contains",u,o),t.addChainableMethod("includes",u,o),t.addProperty("ok",(function(){this.assert(r(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy")})),t.addProperty("true",(function(){this.assert(!0===r(this,"object"),"expected #{this} to be true","expected #{this} to be false",!r(this,"negate"))})),t.addProperty("false",(function(){this.assert(!1===r(this,"object"),"expected #{this} to be false","expected #{this} to be true",!!r(this,"negate"))})),t.addProperty("null",(function(){this.assert(null===r(this,"object"),"expected #{this} to be null","expected #{this} not to be null")})),t.addProperty("undefined",(function(){this.assert(void 0===r(this,"object"),"expected #{this} to be undefined","expected #{this} not to be undefined")})),t.addProperty("NaN",(function(){this.assert(n.isNaN(r(this,"object")),"expected #{this} to be NaN","expected #{this} not to be NaN")})),t.addProperty("exist",(function(){var e=r(this,"object");this.assert(null!=e,"expected #{this} to exist","expected #{this} to not exist")})),t.addProperty("empty",(function(){var e,t=r(this,"object"),i=r(this,"ssfi"),a=r(this,"message");switch(a=a?a+": ":"",n.type(t).toLowerCase()){case"array":case"string":e=t.length;break;case"map":case"set":e=t.size;break;case"weakmap":case"weakset":throw new l(a+".empty was passed a weak collection",void 0,i);case"function":var o=a+".empty was passed a function "+n.getName(t);throw new l(o.trim(),void 0,i);default:if(t!==Object(t))throw new l(a+".empty was passed non-string primitive "+n.inspect(t),void 0,i);e=Object.keys(t).length}this.assert(0===e,"expected #{this} to be empty","expected #{this} not to be empty")})),t.addProperty("arguments",s),t.addProperty("Arguments",s),t.addMethod("equal",c),t.addMethod("equals",c),t.addMethod("eq",c),t.addMethod("eql",d),t.addMethod("eqls",d),t.addMethod("above",p),t.addMethod("gt",p),t.addMethod("greaterThan",p),t.addMethod("least",f),t.addMethod("gte",f),t.addMethod("below",h),t.addMethod("lt",h),t.addMethod("lessThan",h),t.addMethod("most",m),t.addMethod("lte",m),t.addMethod("within",(function(e,i,a){a&&r(this,"message",a);var o,u=r(this,"object"),s=r(this,"doLength"),c=r(this,"message"),d=c?c+": ":"",p=r(this,"ssfi"),f=n.type(u).toLowerCase(),h=n.type(e).toLowerCase(),m=n.type(i).toLowerCase(),b=!0,g="date"===h&&"date"===m?e.toUTCString()+".."+i.toUTCString():e+".."+i;if(s&&"map"!==f&&"set"!==f&&new t(u,c,p,!0).to.have.property("length"),s||"date"!==f||"date"===h&&"date"===m?"number"===h&&"number"===m||!s&&"number"!==f?s||"date"===f||"number"===f?b=!1:o=d+"expected "+("string"===f?"'"+u+"'":u)+" to be a number or a date":o=d+"the arguments to within must be numbers":o=d+"the arguments to within must be dates",b)throw new l(o,void 0,p);if(s){var M,y="length";"map"===f||"set"===f?(y="size",M=u.size):M=u.length,this.assert(M>=e&&M<=i,"expected #{this} to have a "+y+" within "+g,"expected #{this} to not have a "+y+" within "+g)}else this.assert(u>=e&&u<=i,"expected #{this} to be within "+g,"expected #{this} to not be within "+g)})),t.addMethod("instanceof",b),t.addMethod("instanceOf",b),t.addMethod("property",g),t.addMethod("ownProperty",M),t.addMethod("haveOwnProperty",M),t.addMethod("ownPropertyDescriptor",y),t.addMethod("haveOwnPropertyDescriptor",y),t.addChainableMethod("length",A,v),t.addChainableMethod("lengthOf",A,v),t.addMethod("match",w),t.addMethod("matches",w),t.addMethod("string",(function(e,l){l&&r(this,"message",l);var i=r(this,"object"),a=r(this,"message"),o=r(this,"ssfi");new t(i,a,o,!0).is.a("string"),this.assert(~i.indexOf(e),"expected #{this} to contain "+n.inspect(e),"expected #{this} to not contain "+n.inspect(e))})),t.addMethod("keys",_),t.addMethod("key",_),t.addMethod("throw",C),t.addMethod("throws",C),t.addMethod("Throw",C),t.addMethod("respondTo",T),t.addMethod("respondsTo",T),t.addProperty("itself",(function(){r(this,"itself",!0)})),t.addMethod("satisfy",S),t.addMethod("satisfies",S),t.addMethod("closeTo",z),t.addMethod("approximately",z),t.addMethod("members",(function(e,l){l&&r(this,"message",l);var i=r(this,"object"),a=r(this,"message"),o=r(this,"ssfi");new t(i,a,o,!0).to.be.an("array"),new t(e,a,o,!0).to.be.an("array");var u,s,c,d=r(this,"contains"),p=r(this,"ordered");d?(s="expected #{this} to be "+(u=p?"an ordered superset":"a superset")+" of #{exp}",c="expected #{this} to not be "+u+" of #{exp}"):(s="expected #{this} to have the same "+(u=p?"ordered members":"members")+" as #{exp}",c="expected #{this} to not have the same "+u+" as #{exp}");var f=r(this,"deep")?n.eql:void 0;this.assert(function(e,n,t,l,r){if(!l){if(e.length!==n.length)return!1;n=n.slice()}return e.every((function(e,i){if(r)return t?t(e,n[i]):e===n[i];if(!t){var a=n.indexOf(e);return-1!==a&&(l||n.splice(a,1),!0)}return n.some((function(r,i){return!!t(e,r)&&(l||n.splice(i,1),!0)}))}))}(e,i,f,d,p),s,c,e,i,!0)})),t.addMethod("oneOf",(function(e,n){n&&r(this,"message",n);var l=r(this,"object"),i=r(this,"message"),a=r(this,"ssfi");new t(e,i,a,!0).to.be.an("array"),this.assert(e.indexOf(l)>-1,"expected #{this} to be one of #{exp}","expected #{this} to not be one of #{exp}",e,l)})),t.addMethod("change",O),t.addMethod("changes",O),t.addMethod("increase",E),t.addMethod("increases",E),t.addMethod("decrease",L),t.addMethod("decreases",L),t.addMethod("by",(function(e,n){n&&r(this,"message",n);var t,l=r(this,"deltaMsgObj"),i=r(this,"initialDeltaValue"),a=r(this,"finalDeltaValue"),o=r(this,"deltaBehavior"),u=r(this,"realDelta");t="change"===o?Math.abs(a-i)===Math.abs(e):u===Math.abs(e),this.assert(t,"expected "+l+" to "+o+" by "+e,"expected "+l+" to not "+o+" by "+e)})),t.addProperty("extensible",(function(){var e=r(this,"object"),n=e===Object(e)&&Object.isExtensible(e);this.assert(n,"expected #{this} to be extensible","expected #{this} to not be extensible")})),t.addProperty("sealed",(function(){var e=r(this,"object"),n=e!==Object(e)||Object.isSealed(e);this.assert(n,"expected #{this} to be sealed","expected #{this} to not be sealed")})),t.addProperty("frozen",(function(){var e=r(this,"object"),n=e!==Object(e)||Object.isFrozen(e);this.assert(n,"expected #{this} to be frozen","expected #{this} to not be frozen")})),t.addProperty("finite",(function(e){var n=r(this,"object");this.assert("number"==typeof n&&isFinite(n),"expected #{this} to be a finite number","expected #{this} to not be a finite number")}))}},14878:e=>{e.exports=function(e,n){var t=e.Assertion,l=n.flag,r=e.assert=function(n,l){new t(null,null,e.assert,!0).assert(n,l,"[ negation message unavailable ]")};r.fail=function(n,t,l,i){throw arguments.length<2&&(l=n,n=void 0),l=l||"assert.fail()",new e.AssertionError(l,{actual:n,expected:t,operator:i},r.fail)},r.isOk=function(e,n){new t(e,n,r.isOk,!0).is.ok},r.isNotOk=function(e,n){new t(e,n,r.isNotOk,!0).is.not.ok},r.equal=function(e,n,i){var a=new t(e,i,r.equal,!0);a.assert(n==l(a,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",n,e,!0)},r.notEqual=function(e,n,i){var a=new t(e,i,r.notEqual,!0);a.assert(n!=l(a,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",n,e,!0)},r.strictEqual=function(e,n,l){new t(e,l,r.strictEqual,!0).to.equal(n)},r.notStrictEqual=function(e,n,l){new t(e,l,r.notStrictEqual,!0).to.not.equal(n)},r.deepEqual=r.deepStrictEqual=function(e,n,l){new t(e,l,r.deepEqual,!0).to.eql(n)},r.notDeepEqual=function(e,n,l){new t(e,l,r.notDeepEqual,!0).to.not.eql(n)},r.isAbove=function(e,n,l){new t(e,l,r.isAbove,!0).to.be.above(n)},r.isAtLeast=function(e,n,l){new t(e,l,r.isAtLeast,!0).to.be.least(n)},r.isBelow=function(e,n,l){new t(e,l,r.isBelow,!0).to.be.below(n)},r.isAtMost=function(e,n,l){new t(e,l,r.isAtMost,!0).to.be.most(n)},r.isTrue=function(e,n){new t(e,n,r.isTrue,!0).is.true},r.isNotTrue=function(e,n){new t(e,n,r.isNotTrue,!0).to.not.equal(!0)},r.isFalse=function(e,n){new t(e,n,r.isFalse,!0).is.false},r.isNotFalse=function(e,n){new t(e,n,r.isNotFalse,!0).to.not.equal(!1)},r.isNull=function(e,n){new t(e,n,r.isNull,!0).to.equal(null)},r.isNotNull=function(e,n){new t(e,n,r.isNotNull,!0).to.not.equal(null)},r.isNaN=function(e,n){new t(e,n,r.isNaN,!0).to.be.NaN},r.isNotNaN=function(e,n){new t(e,n,r.isNotNaN,!0).not.to.be.NaN},r.exists=function(e,n){new t(e,n,r.exists,!0).to.exist},r.notExists=function(e,n){new t(e,n,r.notExists,!0).to.not.exist},r.isUndefined=function(e,n){new t(e,n,r.isUndefined,!0).to.equal(void 0)},r.isDefined=function(e,n){new t(e,n,r.isDefined,!0).to.not.equal(void 0)},r.isFunction=function(e,n){new t(e,n,r.isFunction,!0).to.be.a("function")},r.isNotFunction=function(e,n){new t(e,n,r.isNotFunction,!0).to.not.be.a("function")},r.isObject=function(e,n){new t(e,n,r.isObject,!0).to.be.a("object")},r.isNotObject=function(e,n){new t(e,n,r.isNotObject,!0).to.not.be.a("object")},r.isArray=function(e,n){new t(e,n,r.isArray,!0).to.be.an("array")},r.isNotArray=function(e,n){new t(e,n,r.isNotArray,!0).to.not.be.an("array")},r.isString=function(e,n){new t(e,n,r.isString,!0).to.be.a("string")},r.isNotString=function(e,n){new t(e,n,r.isNotString,!0).to.not.be.a("string")},r.isNumber=function(e,n){new t(e,n,r.isNumber,!0).to.be.a("number")},r.isNotNumber=function(e,n){new t(e,n,r.isNotNumber,!0).to.not.be.a("number")},r.isFinite=function(e,n){new t(e,n,r.isFinite,!0).to.be.finite},r.isBoolean=function(e,n){new t(e,n,r.isBoolean,!0).to.be.a("boolean")},r.isNotBoolean=function(e,n){new t(e,n,r.isNotBoolean,!0).to.not.be.a("boolean")},r.typeOf=function(e,n,l){new t(e,l,r.typeOf,!0).to.be.a(n)},r.notTypeOf=function(e,n,l){new t(e,l,r.notTypeOf,!0).to.not.be.a(n)},r.instanceOf=function(e,n,l){new t(e,l,r.instanceOf,!0).to.be.instanceOf(n)},r.notInstanceOf=function(e,n,l){new t(e,l,r.notInstanceOf,!0).to.not.be.instanceOf(n)},r.include=function(e,n,l){new t(e,l,r.include,!0).include(n)},r.notInclude=function(e,n,l){new t(e,l,r.notInclude,!0).not.include(n)},r.deepInclude=function(e,n,l){new t(e,l,r.deepInclude,!0).deep.include(n)},r.notDeepInclude=function(e,n,l){new t(e,l,r.notDeepInclude,!0).not.deep.include(n)},r.nestedInclude=function(e,n,l){new t(e,l,r.nestedInclude,!0).nested.include(n)},r.notNestedInclude=function(e,n,l){new t(e,l,r.notNestedInclude,!0).not.nested.include(n)},r.deepNestedInclude=function(e,n,l){new t(e,l,r.deepNestedInclude,!0).deep.nested.include(n)},r.notDeepNestedInclude=function(e,n,l){new t(e,l,r.notDeepNestedInclude,!0).not.deep.nested.include(n)},r.ownInclude=function(e,n,l){new t(e,l,r.ownInclude,!0).own.include(n)},r.notOwnInclude=function(e,n,l){new t(e,l,r.notOwnInclude,!0).not.own.include(n)},r.deepOwnInclude=function(e,n,l){new t(e,l,r.deepOwnInclude,!0).deep.own.include(n)},r.notDeepOwnInclude=function(e,n,l){new t(e,l,r.notDeepOwnInclude,!0).not.deep.own.include(n)},r.match=function(e,n,l){new t(e,l,r.match,!0).to.match(n)},r.notMatch=function(e,n,l){new t(e,l,r.notMatch,!0).to.not.match(n)},r.property=function(e,n,l){new t(e,l,r.property,!0).to.have.property(n)},r.notProperty=function(e,n,l){new t(e,l,r.notProperty,!0).to.not.have.property(n)},r.propertyVal=function(e,n,l,i){new t(e,i,r.propertyVal,!0).to.have.property(n,l)},r.notPropertyVal=function(e,n,l,i){new t(e,i,r.notPropertyVal,!0).to.not.have.property(n,l)},r.deepPropertyVal=function(e,n,l,i){new t(e,i,r.deepPropertyVal,!0).to.have.deep.property(n,l)},r.notDeepPropertyVal=function(e,n,l,i){new t(e,i,r.notDeepPropertyVal,!0).to.not.have.deep.property(n,l)},r.ownProperty=function(e,n,l){new t(e,l,r.ownProperty,!0).to.have.own.property(n)},r.notOwnProperty=function(e,n,l){new t(e,l,r.notOwnProperty,!0).to.not.have.own.property(n)},r.ownPropertyVal=function(e,n,l,i){new t(e,i,r.ownPropertyVal,!0).to.have.own.property(n,l)},r.notOwnPropertyVal=function(e,n,l,i){new t(e,i,r.notOwnPropertyVal,!0).to.not.have.own.property(n,l)},r.deepOwnPropertyVal=function(e,n,l,i){new t(e,i,r.deepOwnPropertyVal,!0).to.have.deep.own.property(n,l)},r.notDeepOwnPropertyVal=function(e,n,l,i){new t(e,i,r.notDeepOwnPropertyVal,!0).to.not.have.deep.own.property(n,l)},r.nestedProperty=function(e,n,l){new t(e,l,r.nestedProperty,!0).to.have.nested.property(n)},r.notNestedProperty=function(e,n,l){new t(e,l,r.notNestedProperty,!0).to.not.have.nested.property(n)},r.nestedPropertyVal=function(e,n,l,i){new t(e,i,r.nestedPropertyVal,!0).to.have.nested.property(n,l)},r.notNestedPropertyVal=function(e,n,l,i){new t(e,i,r.notNestedPropertyVal,!0).to.not.have.nested.property(n,l)},r.deepNestedPropertyVal=function(e,n,l,i){new t(e,i,r.deepNestedPropertyVal,!0).to.have.deep.nested.property(n,l)},r.notDeepNestedPropertyVal=function(e,n,l,i){new t(e,i,r.notDeepNestedPropertyVal,!0).to.not.have.deep.nested.property(n,l)},r.lengthOf=function(e,n,l){new t(e,l,r.lengthOf,!0).to.have.lengthOf(n)},r.hasAnyKeys=function(e,n,l){new t(e,l,r.hasAnyKeys,!0).to.have.any.keys(n)},r.hasAllKeys=function(e,n,l){new t(e,l,r.hasAllKeys,!0).to.have.all.keys(n)},r.containsAllKeys=function(e,n,l){new t(e,l,r.containsAllKeys,!0).to.contain.all.keys(n)},r.doesNotHaveAnyKeys=function(e,n,l){new t(e,l,r.doesNotHaveAnyKeys,!0).to.not.have.any.keys(n)},r.doesNotHaveAllKeys=function(e,n,l){new t(e,l,r.doesNotHaveAllKeys,!0).to.not.have.all.keys(n)},r.hasAnyDeepKeys=function(e,n,l){new t(e,l,r.hasAnyDeepKeys,!0).to.have.any.deep.keys(n)},r.hasAllDeepKeys=function(e,n,l){new t(e,l,r.hasAllDeepKeys,!0).to.have.all.deep.keys(n)},r.containsAllDeepKeys=function(e,n,l){new t(e,l,r.containsAllDeepKeys,!0).to.contain.all.deep.keys(n)},r.doesNotHaveAnyDeepKeys=function(e,n,l){new t(e,l,r.doesNotHaveAnyDeepKeys,!0).to.not.have.any.deep.keys(n)},r.doesNotHaveAllDeepKeys=function(e,n,l){new t(e,l,r.doesNotHaveAllDeepKeys,!0).to.not.have.all.deep.keys(n)},r.throws=function(e,n,i,a){("string"==typeof n||n instanceof RegExp)&&(i=n,n=null);var o=new t(e,a,r.throws,!0).to.throw(n,i);return l(o,"object")},r.doesNotThrow=function(e,n,l,i){("string"==typeof n||n instanceof RegExp)&&(l=n,n=null),new t(e,i,r.doesNotThrow,!0).to.not.throw(n,l)},r.operator=function(i,a,o,u){var s;switch(a){case"==":s=i==o;break;case"===":s=i===o;break;case">":s=i>o;break;case">=":s=i>=o;break;case"<":s=i<o;break;case"<=":s=i<=o;break;case"!=":s=i!=o;break;case"!==":s=i!==o;break;default:throw u=u?u+": ":u,new e.AssertionError(u+'Invalid operator "'+a+'"',void 0,r.operator)}var c=new t(s,u,r.operator,!0);c.assert(!0===l(c,"object"),"expected "+n.inspect(i)+" to be "+a+" "+n.inspect(o),"expected "+n.inspect(i)+" to not be "+a+" "+n.inspect(o))},r.closeTo=function(e,n,l,i){new t(e,i,r.closeTo,!0).to.be.closeTo(n,l)},r.approximately=function(e,n,l,i){new t(e,i,r.approximately,!0).to.be.approximately(n,l)},r.sameMembers=function(e,n,l){new t(e,l,r.sameMembers,!0).to.have.same.members(n)},r.notSameMembers=function(e,n,l){new t(e,l,r.notSameMembers,!0).to.not.have.same.members(n)},r.sameDeepMembers=function(e,n,l){new t(e,l,r.sameDeepMembers,!0).to.have.same.deep.members(n)},r.notSameDeepMembers=function(e,n,l){new t(e,l,r.notSameDeepMembers,!0).to.not.have.same.deep.members(n)},r.sameOrderedMembers=function(e,n,l){new t(e,l,r.sameOrderedMembers,!0).to.have.same.ordered.members(n)},r.notSameOrderedMembers=function(e,n,l){new t(e,l,r.notSameOrderedMembers,!0).to.not.have.same.ordered.members(n)},r.sameDeepOrderedMembers=function(e,n,l){new t(e,l,r.sameDeepOrderedMembers,!0).to.have.same.deep.ordered.members(n)},r.notSameDeepOrderedMembers=function(e,n,l){new t(e,l,r.notSameDeepOrderedMembers,!0).to.not.have.same.deep.ordered.members(n)},r.includeMembers=function(e,n,l){new t(e,l,r.includeMembers,!0).to.include.members(n)},r.notIncludeMembers=function(e,n,l){new t(e,l,r.notIncludeMembers,!0).to.not.include.members(n)},r.includeDeepMembers=function(e,n,l){new t(e,l,r.includeDeepMembers,!0).to.include.deep.members(n)},r.notIncludeDeepMembers=function(e,n,l){new t(e,l,r.notIncludeDeepMembers,!0).to.not.include.deep.members(n)},r.includeOrderedMembers=function(e,n,l){new t(e,l,r.includeOrderedMembers,!0).to.include.ordered.members(n)},r.notIncludeOrderedMembers=function(e,n,l){new t(e,l,r.notIncludeOrderedMembers,!0).to.not.include.ordered.members(n)},r.includeDeepOrderedMembers=function(e,n,l){new t(e,l,r.includeDeepOrderedMembers,!0).to.include.deep.ordered.members(n)},r.notIncludeDeepOrderedMembers=function(e,n,l){new t(e,l,r.notIncludeDeepOrderedMembers,!0).to.not.include.deep.ordered.members(n)},r.oneOf=function(e,n,l){new t(e,l,r.oneOf,!0).to.be.oneOf(n)},r.changes=function(e,n,l,i){3===arguments.length&&"function"==typeof n&&(i=l,l=null),new t(e,i,r.changes,!0).to.change(n,l)},r.changesBy=function(e,n,l,i,a){if(4===arguments.length&&"function"==typeof n){var o=i;i=l,a=o}else 3===arguments.length&&(i=l,l=null);new t(e,a,r.changesBy,!0).to.change(n,l).by(i)},r.doesNotChange=function(e,n,l,i){return 3===arguments.length&&"function"==typeof n&&(i=l,l=null),new t(e,i,r.doesNotChange,!0).to.not.change(n,l)},r.changesButNotBy=function(e,n,l,i,a){if(4===arguments.length&&"function"==typeof n){var o=i;i=l,a=o}else 3===arguments.length&&(i=l,l=null);new t(e,a,r.changesButNotBy,!0).to.change(n,l).but.not.by(i)},r.increases=function(e,n,l,i){return 3===arguments.length&&"function"==typeof n&&(i=l,l=null),new t(e,i,r.increases,!0).to.increase(n,l)},r.increasesBy=function(e,n,l,i,a){if(4===arguments.length&&"function"==typeof n){var o=i;i=l,a=o}else 3===arguments.length&&(i=l,l=null);new t(e,a,r.increasesBy,!0).to.increase(n,l).by(i)},r.doesNotIncrease=function(e,n,l,i){return 3===arguments.length&&"function"==typeof n&&(i=l,l=null),new t(e,i,r.doesNotIncrease,!0).to.not.increase(n,l)},r.increasesButNotBy=function(e,n,l,i,a){if(4===arguments.length&&"function"==typeof n){var o=i;i=l,a=o}else 3===arguments.length&&(i=l,l=null);new t(e,a,r.increasesButNotBy,!0).to.increase(n,l).but.not.by(i)},r.decreases=function(e,n,l,i){return 3===arguments.length&&"function"==typeof n&&(i=l,l=null),new t(e,i,r.decreases,!0).to.decrease(n,l)},r.decreasesBy=function(e,n,l,i,a){if(4===arguments.length&&"function"==typeof n){var o=i;i=l,a=o}else 3===arguments.length&&(i=l,l=null);new t(e,a,r.decreasesBy,!0).to.decrease(n,l).by(i)},r.doesNotDecrease=function(e,n,l,i){return 3===arguments.length&&"function"==typeof n&&(i=l,l=null),new t(e,i,r.doesNotDecrease,!0).to.not.decrease(n,l)},r.doesNotDecreaseBy=function(e,n,l,i,a){if(4===arguments.length&&"function"==typeof n){var o=i;i=l,a=o}else 3===arguments.length&&(i=l,l=null);return new t(e,a,r.doesNotDecreaseBy,!0).to.not.decrease(n,l).by(i)},r.decreasesButNotBy=function(e,n,l,i,a){if(4===arguments.length&&"function"==typeof n){var o=i;i=l,a=o}else 3===arguments.length&&(i=l,l=null);new t(e,a,r.decreasesButNotBy,!0).to.decrease(n,l).but.not.by(i)},r.ifError=function(e){if(e)throw e},r.isExtensible=function(e,n){new t(e,n,r.isExtensible,!0).to.be.extensible},r.isNotExtensible=function(e,n){new t(e,n,r.isNotExtensible,!0).to.not.be.extensible},r.isSealed=function(e,n){new t(e,n,r.isSealed,!0).to.be.sealed},r.isNotSealed=function(e,n){new t(e,n,r.isNotSealed,!0).to.not.be.sealed},r.isFrozen=function(e,n){new t(e,n,r.isFrozen,!0).to.be.frozen},r.isNotFrozen=function(e,n){new t(e,n,r.isNotFrozen,!0).to.not.be.frozen},r.isEmpty=function(e,n){new t(e,n,r.isEmpty,!0).to.be.empty},r.isNotEmpty=function(e,n){new t(e,n,r.isNotEmpty,!0).to.not.be.empty},function e(n,t){return r[t]=r[n],e}("isOk","ok")("isNotOk","notOk")("throws","throw")("throws","Throw")("isExtensible","extensible")("isNotExtensible","notExtensible")("isSealed","sealed")("isNotSealed","notSealed")("isFrozen","frozen")("isNotFrozen","notFrozen")("isEmpty","empty")("isNotEmpty","notEmpty")}},75569:e=>{e.exports=function(e,n){e.expect=function(n,t){return new e.Assertion(n,t)},e.expect.fail=function(n,t,l,r){throw arguments.length<2&&(l=n,n=void 0),l=l||"expect.fail()",new e.AssertionError(l,{actual:n,expected:t,operator:r},e.expect.fail)}}},21350:e=>{e.exports=function(e,n){var t=e.Assertion;function l(){Object.defineProperty(Object.prototype,"should",{set:function(e){Object.defineProperty(this,"should",{value:e,enumerable:!0,configurable:!0,writable:!0})},get:function e(){return this instanceof String||this instanceof Number||this instanceof Boolean||"function"==typeof Symbol&&this instanceof Symbol?new t(this.valueOf(),null,e):new t(this,null,e)},configurable:!0});var n={fail:function(t,l,r,i){throw arguments.length<2&&(r=t,t=void 0),r=r||"should.fail()",new e.AssertionError(r,{actual:t,expected:l,operator:i},n.fail)},equal:function(e,n,l){new t(e,l).to.equal(n)},Throw:function(e,n,l,r){new t(e,r).to.Throw(n,l)},exist:function(e,n){new t(e,n).to.exist},not:{}};return n.not.equal=function(e,n,l){new t(e,l).to.not.equal(n)},n.not.Throw=function(e,n,l,r){new t(e,r).to.not.Throw(n,l)},n.not.exist=function(e,n){new t(e,n).to.not.exist},n.throw=n.Throw,n.not.throw=n.not.Throw,n}e.should=l,e.Should=l}},72091:(e,n,t)=>{var l=t(45659),r=t(69897),i=t(58369),a=t(32825),o=t(92654),u="function"==typeof Object.setPrototypeOf,s=function(){},c=Object.getOwnPropertyNames(s).filter((function(e){var n=Object.getOwnPropertyDescriptor(s,e);return"object"!=typeof n||!n.configurable})),d=Function.prototype.call,p=Function.prototype.apply;e.exports=function(e,n,t,s){"function"!=typeof s&&(s=function(){});var f={method:t,chainingBehavior:s};e.__methods||(e.__methods={}),e.__methods[n]=f,Object.defineProperty(e,n,{get:function(){f.chainingBehavior.call(this);var t=function(){i(this,"lockSsfi")||i(this,"ssfi",t);var e=f.method.apply(this,arguments);if(void 0!==e)return e;var n=new r.Assertion;return o(this,n),n};if(l(t,n,!0),u){var s=Object.create(this);s.call=d,s.apply=p,Object.setPrototypeOf(t,s)}else Object.getOwnPropertyNames(e).forEach((function(n){if(-1===c.indexOf(n)){var l=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,l)}}));return o(this,t),a(t)},configurable:!0})}},45659:e=>{var n=Object.getOwnPropertyDescriptor((function(){}),"length");e.exports=function(e,t,l){return n.configurable?(Object.defineProperty(e,"length",{get:function(){if(l)throw Error("Invalid Chai property: "+t+'.length. Due to a compatibility issue, "length" cannot directly follow "'+t+'". Use "'+t+'.lengthOf" instead.');throw Error("Invalid Chai property: "+t+'.length. See docs for proper usage of "'+t+'".')}}),e):e}},13742:(e,n,t)=>{var l=t(45659),r=t(69897),i=t(58369),a=t(32825),o=t(92654);e.exports=function(e,n,t){var u=function(){i(this,"lockSsfi")||i(this,"ssfi",u);var e=t.apply(this,arguments);if(void 0!==e)return e;var n=new r.Assertion;return o(this,n),n};l(u,n,!1),e[n]=a(u,n)}},84074:(e,n,t)=>{var l=t(69897),r=t(58369),i=t(76796),a=t(92654);e.exports=function(e,n,t){t=void 0===t?function(){}:t,Object.defineProperty(e,n,{get:function e(){i()||r(this,"lockSsfi")||r(this,"ssfi",e);var n=t.call(this);if(void 0!==n)return n;var o=new l.Assertion;return a(this,o),o},configurable:!0})}},35020:(e,n,t)=>{var l=t(78072);e.exports=function(e,n){return l(e)<l(n)?-1:1}},73203:(e,n,t)=>{var l=t(72799),r=t(58369),i=t(24834);e.exports=function(e,n){var t=r(e,"message"),a=r(e,"ssfi");t=t?t+": ":"",e=r(e,"object"),(n=n.map((function(e){return e.toLowerCase()}))).sort();var o=n.map((function(e,t){var l=~["a","e","i","o","u"].indexOf(e.charAt(0))?"an":"a";return(n.length>1&&t===n.length-1?"or ":"")+l+" "+e})).join(", "),u=i(e).toLowerCase();if(!n.some((function(e){return u===e})))throw new l(t+"object tested must be "+o+", but "+u+" given",void 0,a)}},58369:e=>{e.exports=function(e,n,t){var l=e.__flags||(e.__flags=Object.create(null));if(3!==arguments.length)return l[n];l[n]=t}},24211:e=>{e.exports=function(e,n){return n.length>4?n[4]:e._obj}},48836:e=>{e.exports=function(e){var n=[];for(var t in e)n.push(t);return n}},72626:(e,n,t)=>{var l=t(58369),r=t(24211),i=t(19988);e.exports=function(e,n){var t=l(e,"negate"),a=l(e,"object"),o=n[3],u=r(e,n),s=t?n[2]:n[1],c=l(e,"message");return"function"==typeof s&&(s=s()),s=(s=s||"").replace(/#\{this\}/g,(function(){return i(a)})).replace(/#\{act\}/g,(function(){return i(u)})).replace(/#\{exp\}/g,(function(){return i(o)})),c?c+": "+s:s}},84712:(e,n,t)=>{var l=t(69539);e.exports=function(e){return Object.keys(e).concat(l(e))}},69539:e=>{e.exports=function(e){return"function"!=typeof Object.getOwnPropertySymbols?[]:Object.getOwnPropertySymbols(e).filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))}},62291:e=>{e.exports=function(e){var n=Object.getOwnPropertyNames(e);function t(e){-1===n.indexOf(e)&&n.push(e)}for(var l=Object.getPrototypeOf(e);null!==l;)Object.getOwnPropertyNames(l).forEach(t),l=Object.getPrototypeOf(l);return n}},45295:(e,n,t)=>{var l=t(29452);n.test=t(67206),n.type=t(24834),n.expectTypes=t(73203),n.getMessage=t(72626),n.getActual=t(24211),n.inspect=t(78072),n.objDisplay=t(19988),n.flag=t(58369),n.transferFlags=t(92654),n.eql=t(66265),n.getPathInfo=l.getPathInfo,n.hasProperty=l.hasProperty,n.getName=t(91521),n.addProperty=t(84074),n.addMethod=t(13742),n.overwriteProperty=t(82019),n.overwriteMethod=t(82532),n.addChainableMethod=t(72091),n.overwriteChainableMethod=t(18009),n.compareByInspect=t(35020),n.getOwnEnumerablePropertySymbols=t(69539),n.getOwnEnumerableProperties=t(84712),n.checkError=t(43581),n.proxify=t(32825),n.addLengthGuard=t(45659),n.isProxyEnabled=t(76796),n.isNaN=t(56095)},78072:(e,n,t)=>{var l=t(91521),r=t(62291),i=t(48836),a=t(3562);function o(e,t,h){if(t&&"function"==typeof t.inspect&&t.inspect!==n.inspect&&(!t.constructor||t.constructor.prototype!==t)){var m=t.inspect(h,e);return"string"!=typeof m&&(m=o(e,m,h)),m}var b,g=function(e,n){switch(typeof n){case"undefined":return e.stylize("undefined","undefined");case"string":var t="'"+JSON.stringify(n).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(t,"string");case"number":return 0===n&&1/n==-1/0?e.stylize("-0","number"):e.stylize(""+n,"number");case"boolean":return e.stylize(""+n,"boolean");case"symbol":return e.stylize(n.toString(),"symbol")}if(null===n)return e.stylize("null","null")}(e,t);if(g)return g;if(b=t,"object"==typeof HTMLElement?b instanceof HTMLElement:b&&"object"==typeof b&&"nodeType"in b&&1===b.nodeType&&"string"==typeof b.nodeName){if("outerHTML"in t)return t.outerHTML;try{if(document.xmlVersion)return(new XMLSerializer).serializeToString(t);var M=document.createElementNS("http://www.w3.org/1999/xhtml","_");M.appendChild(t.cloneNode(!1));var y=M.innerHTML.replace("><",">"+t.innerHTML+"<");return M.innerHTML="",y}catch(e){}}var v,A,w=i(t),_=e.showHidden?r(t):w;if(0===_.length||p(t)&&(1===_.length&&"stack"===_[0]||2===_.length&&"description"===_[0]&&"stack"===_[1])){if("function"==typeof t)return A=(v=l(t))?": "+v:"",e.stylize("[Function"+A+"]","special");if(c(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(d(t))return e.stylize(Date.prototype.toUTCString.call(t),"date");if(p(t))return u(t)}var C,T,S="",z=!1,O=!1,E=["{","}"];if("object"==typeof(C=t)&&/\w+Array]$/.test(f(C))&&(O=!0,E=["[","]"]),function(e){return Array.isArray(e)||"object"==typeof e&&"[object Array]"===f(e)}(t)&&(z=!0,E=["[","]"]),"function"==typeof t&&(S=" [Function"+(A=(v=l(t))?": "+v:"")+"]"),c(t)&&(S=" "+RegExp.prototype.toString.call(t)),d(t)&&(S=" "+Date.prototype.toUTCString.call(t)),p(t))return u(t);if(0===_.length&&(!z||0==t.length))return E[0]+S+E[1];if(h<0)return c(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special");if(e.seen.push(t),z)T=function(e,n,t,l,r){for(var i=[],a=0,o=n.length;a<o;++a)Object.prototype.hasOwnProperty.call(n,String(a))?i.push(s(e,n,t,l,String(a),!0)):i.push("");return r.forEach((function(r){r.match(/^\d+$/)||i.push(s(e,n,t,l,r,!0))})),i}(e,t,h,w,_);else{if(O)return function(e){for(var n="[ ",t=0;t<e.length;++t){if(n.length>=a.truncateThreshold-7){n+="...";break}n+=e[t]+", "}return-1!==(n+=" ]").indexOf(",  ]")&&(n=n.replace(",  ]"," ]")),n}(t);T=_.map((function(n){return s(e,t,h,w,n,z)}))}return e.seen.pop(),function(e,n,t){return e.reduce((function(e,n){return e+n.length+1}),0)>60?t[0]+(""===n?"":n+"\n ")+" "+e.join(",\n  ")+" "+t[1]:t[0]+n+" "+e.join(", ")+" "+t[1]}(T,S,E)}function u(e){return"["+Error.prototype.toString.call(e)+"]"}function s(e,n,t,l,r,i){var a,u,s=Object.getOwnPropertyDescriptor(n,r);if(s&&(s.get?u=s.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):s.set&&(u=e.stylize("[Setter]","special"))),l.indexOf(r)<0&&(a="["+r+"]"),u||(e.seen.indexOf(n[r])<0?(u=o(e,n[r],null===t?null:t-1)).indexOf("\n")>-1&&(u=i?u.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+u.split("\n").map((function(e){return"   "+e})).join("\n")):u=e.stylize("[Circular]","special")),void 0===a){if(i&&r.match(/^\d+$/))return u;(a=JSON.stringify(""+r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=e.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=e.stylize(a,"string"))}return a+": "+u}function c(e){return"object"==typeof e&&"[object RegExp]"===f(e)}function d(e){return"object"==typeof e&&"[object Date]"===f(e)}function p(e){return"object"==typeof e&&"[object Error]"===f(e)}function f(e){return Object.prototype.toString.call(e)}e.exports=function(e,n,t,l){return o({showHidden:n,seen:[],stylize:function(e){return e}},e,void 0===t?2:t)}},56095:e=>{e.exports=Number.isNaN||function(e){return e!=e}},76796:(e,n,t)=>{var l=t(3562);e.exports=function(){return l.useProxy&&"undefined"!=typeof Proxy&&"undefined"!=typeof Reflect}},19988:(e,n,t)=>{var l=t(78072),r=t(3562);e.exports=function(e){var n=l(e),t=Object.prototype.toString.call(e);if(r.truncateThreshold&&n.length>=r.truncateThreshold){if("[object Function]"===t)return e.name&&""!==e.name?"[Function: "+e.name+"]":"[Function]";if("[object Array]"===t)return"[ Array("+e.length+") ]";if("[object Object]"===t){var i=Object.keys(e);return"{ Object ("+(i.length>2?i.splice(0,2).join(", ")+", ...":i.join(", "))+") }"}return n}return n}},18009:(e,n,t)=>{var l=t(69897),r=t(92654);e.exports=function(e,n,t,i){var a=e.__methods[n],o=a.chainingBehavior;a.chainingBehavior=function(){var e=i(o).call(this);if(void 0!==e)return e;var n=new l.Assertion;return r(this,n),n};var u=a.method;a.method=function(){var e=t(u).apply(this,arguments);if(void 0!==e)return e;var n=new l.Assertion;return r(this,n),n}}},82532:(e,n,t)=>{var l=t(45659),r=t(69897),i=t(58369),a=t(32825),o=t(92654);e.exports=function(e,n,t){var u=e[n],s=function(){throw new Error(n+" is not a function")};u&&"function"==typeof u&&(s=u);var c=function(){i(this,"lockSsfi")||i(this,"ssfi",c);var e=i(this,"lockSsfi");i(this,"lockSsfi",!0);var n=t(s).apply(this,arguments);if(i(this,"lockSsfi",e),void 0!==n)return n;var l=new r.Assertion;return o(this,l),l};l(c,n,!1),e[n]=a(c,n)}},82019:(e,n,t)=>{var l=t(69897),r=t(58369),i=t(76796),a=t(92654);e.exports=function(e,n,t){var o=Object.getOwnPropertyDescriptor(e,n),u=function(){};o&&"function"==typeof o.get&&(u=o.get),Object.defineProperty(e,n,{get:function e(){i()||r(this,"lockSsfi")||r(this,"ssfi",e);var n=r(this,"lockSsfi");r(this,"lockSsfi",!0);var o=t(u).call(this);if(r(this,"lockSsfi",n),void 0!==o)return o;var s=new l.Assertion;return a(this,s),s},configurable:!0})}},32825:(e,n,t)=>{var l=t(3562),r=t(58369),i=t(62291),a=t(76796),o=["__flags","__methods","_obj","assert"];e.exports=function(e,n){return a()?new Proxy(e,{get:function e(t,a){if("string"==typeof a&&-1===l.proxyExcludedKeys.indexOf(a)&&!Reflect.has(t,a)){if(n)throw Error("Invalid Chai property: "+n+"."+a+'. See docs for proper usage of "'+n+'".');var u=null,s=4;throw i(t).forEach((function(e){if(!Object.prototype.hasOwnProperty(e)&&-1===o.indexOf(e)){var n=function(e,n,t){if(Math.abs(e.length-n.length)>=t)return t;for(var l=[],r=0;r<=e.length;r++)l[r]=Array(n.length+1).fill(0),l[r][0]=r;for(var i=0;i<n.length;i++)l[0][i]=i;for(r=1;r<=e.length;r++){var a=e.charCodeAt(r-1);for(i=1;i<=n.length;i++)Math.abs(r-i)>=t?l[r][i]=t:l[r][i]=Math.min(l[r-1][i]+1,l[r][i-1]+1,l[r-1][i-1]+(a===n.charCodeAt(i-1)?0:1))}return l[e.length][n.length]}(a,e,s);n<s&&(u=e,s=n)}})),null!==u?Error("Invalid Chai property: "+a+'. Did you mean "'+u+'"?'):Error("Invalid Chai property: "+a)}return-1!==o.indexOf(a)||r(t,"lockSsfi")||r(t,"ssfi",e),Reflect.get(t,a)}}):e}},67206:(e,n,t)=>{var l=t(58369);e.exports=function(e,n){var t=l(e,"negate"),r=n[0];return t?!r:r}},92654:e=>{e.exports=function(e,n,t){var l=e.__flags||(e.__flags=Object.create(null));for(var r in n.__flags||(n.__flags=Object.create(null)),t=3!==arguments.length||t,l)(t||"object"!==r&&"ssfi"!==r&&"lockSsfi"!==r&&"message"!=r)&&(n.__flags[r]=l[r])}},97602:(e,n,t)=>{var l,r=t(13039).Buffer;!function(){var t=9007199254740992,i="0123456789",a="abcdefghijklmnopqrstuvwxyz",o=a.toUpperCase(),u=i+"abcdef";function s(e){this.name="UnsupportedError",this.message=e||"This feature is not supported on this platform"}s.prototype=new Error,s.prototype.constructor=s;var c=Array.prototype.slice;function d(e){if(!(this instanceof d))return e||(e=null),null===e?new d:new d(e);if("function"==typeof e)return this.random=e,this;arguments.length&&(this.seed=0);for(var n=0;n<arguments.length;n++){var t=0;if("[object String]"===Object.prototype.toString.call(arguments[n]))for(var l=0;l<arguments[n].length;l++){for(var r=0,i=0;i<arguments[n].length;i++)r=arguments[n].charCodeAt(i)+(r<<6)+(r<<16)-r;t+=r}else t=arguments[n];this.seed+=(arguments.length-n)*t}return this.mt=this.mersenne_twister(this.seed),this.bimd5=this.blueimp_md5(),this.random=function(){return this.mt.random(this.seed)},this}function p(e,n){if(e=e||{},n)for(var t in n)void 0===e[t]&&(e[t]=n[t]);return e}function f(e,n){if(e)throw new RangeError(n)}d.prototype.VERSION="1.0.16";var h=function(){throw new Error("No Base64 encoder available.")};function m(e){return function(){return this.natural(e)}}"function"==typeof btoa?h=btoa:"function"==typeof r&&(h=function(e){return new r(e).toString("base64")}),d.prototype.bool=function(e){return f((e=p(e,{likelihood:50})).likelihood<0||e.likelihood>100,"Chance: Likelihood accepts values from 0 to 100."),100*this.random()<e.likelihood},d.prototype.animal=function(e){return void 0!==(e=p(e)).type?(f(!this.get("animals")[e.type.toLowerCase()],"Please pick from desert, ocean, grassland, forest, zoo, pets, farm."),this.pick(this.get("animals")[e.type.toLowerCase()])):(animalTypeArray=["desert","forest","ocean","zoo","farm","pet","grassland"],this.pick(this.get("animals")[this.pick(animalTypeArray)]))},d.prototype.character=function(e){f((e=p(e)).alpha&&e.symbols,"Chance: Cannot specify both alpha and symbols.");var n,t,l="!@#$%^&*()[]";return n="lower"===e.casing?a:"upper"===e.casing?o:a+o,(t=e.pool?e.pool:e.alpha?n:e.symbols?l:n+i+l).charAt(this.natural({max:t.length-1}))},d.prototype.floating=function(e){f((e=p(e,{fixed:4})).fixed&&e.precision,"Chance: Cannot specify both fixed and precision.");var n=Math.pow(10,e.fixed),l=t/n,r=-l;f(e.min&&e.fixed&&e.min<r,"Chance: Min specified is out of range with fixed. Min should be, at least, "+r),f(e.max&&e.fixed&&e.max>l,"Chance: Max specified is out of range with fixed. Max should be, at most, "+l),e=p(e,{min:r,max:l});var i=(this.integer({min:e.min*n,max:e.max*n})/n).toFixed(e.fixed);return parseFloat(i)},d.prototype.integer=function(e){return f((e=p(e,{min:-9007199254740992,max:t})).min>e.max,"Chance: Min cannot be greater than Max."),Math.floor(this.random()*(e.max-e.min+1)+e.min)},d.prototype.natural=function(e){return"number"==typeof(e=p(e,{min:0,max:t})).numerals&&(f(e.numerals<1,"Chance: Numerals cannot be less than one."),e.min=Math.pow(10,e.numerals-1),e.max=Math.pow(10,e.numerals)-1),f(e.min<0,"Chance: Min cannot be less than zero."),this.integer(e)},d.prototype.hex=function(e){f((e=p(e,{min:0,max:t,casing:"lower"})).min<0,"Chance: Min cannot be less than zero.");var n=this.natural({min:e.min,max:e.max});return"upper"===e.casing?n.toString(16).toUpperCase():n.toString(16)},d.prototype.letter=function(e){e=p(e,{casing:"lower"});var n=this.character({pool:"abcdefghijklmnopqrstuvwxyz"});return"upper"===e.casing&&(n=n.toUpperCase()),n},d.prototype.string=function(e){f((e=p(e,{length:this.natural({min:5,max:20})})).length<0,"Chance: Length cannot be less than zero.");var n=e.length;return this.n(this.character,n,e).join("")},d.prototype.buffer=function(e){if(void 0===r)throw new s("Sorry, the buffer() function is not supported on your platform");f((e=p(e,{length:this.natural({min:5,max:20})})).length<0,"Chance: Length cannot be less than zero.");var n=e.length,t=this.n(this.character,n,e);return r.from(t)},d.prototype.capitalize=function(e){return e.charAt(0).toUpperCase()+e.substr(1)},d.prototype.mixin=function(e){for(var n in e)d.prototype[n]=e[n];return this},d.prototype.unique=function(e,n,t){f("function"!=typeof e,"Chance: The first argument must be a function.");var l=function(e,n){return-1!==e.indexOf(n)};t&&(l=t.comparator||l);for(var r,i=[],a=0,o=50*n,u=c.call(arguments,2);i.length<n;){var s=JSON.parse(JSON.stringify(u));if(l(i,r=e.apply(this,s))||(i.push(r),a=0),++a>o)throw new RangeError("Chance: num is likely too large for sample set")}return i},d.prototype.n=function(e,n){f("function"!=typeof e,"Chance: The first argument must be a function."),void 0===n&&(n=1);var t=n,l=[],r=c.call(arguments,2);for(t=Math.max(0,t);t--;null)l.push(e.apply(this,r));return l},d.prototype.pad=function(e,n,t){return t=t||"0",(e+="").length>=n?e:new Array(n-e.length+1).join(t)+e},d.prototype.pick=function(e,n){if(0===e.length)throw new RangeError("Chance: Cannot pick() from an empty array");return n&&1!==n?this.shuffle(e).slice(0,n):e[this.natural({max:e.length-1})]},d.prototype.pickone=function(e){if(0===e.length)throw new RangeError("Chance: Cannot pickone() from an empty array");return e[this.natural({max:e.length-1})]},d.prototype.pickset=function(e,n){if(0===n)return[];if(0===e.length)throw new RangeError("Chance: Cannot pickset() from an empty array");if(n<0)throw new RangeError("Chance: Count must be a positive number");return n&&1!==n?this.shuffle(e).slice(0,n):[this.pickone(e)]},d.prototype.shuffle=function(e){for(var n,t,l=[],r=0,i=Number(e.length),a=(t=i,Array.apply(null,Array(t)).map((function(e,n){return n}))),o=i-1,u=0;u<i;u++)r=a[n=this.natural({max:o})],l[u]=e[r],a[n]=a[o],o-=1;return l},d.prototype.weighted=function(e,n,t){if(e.length!==n.length)throw new RangeError("Chance: Length of array and weights must match");for(var l,r=0,i=0;i<n.length;++i){if(l=n[i],isNaN(l))throw new RangeError("Chance: All weights must be numbers");l>0&&(r+=l)}if(0===r)throw new RangeError("Chance: No valid entries in array weights");var a,o=this.random()*r,u=0,s=-1;for(i=0;i<n.length;++i){if(u+=l=n[i],l>0){if(o<=u){a=i;break}s=i}i===n.length-1&&(a=s)}var c=e[a];return(t=void 0!==t&&t)&&(e.splice(a,1),n.splice(a,1)),c},d.prototype.paragraph=function(e){var n=(e=p(e)).sentences||this.natural({min:3,max:7});return this.n(this.sentence,n).join(" ")},d.prototype.sentence=function(e){var n,t=(e=p(e)).words||this.natural({min:12,max:18}),l=e.punctuation;return n=this.n(this.word,t).join(" "),n=this.capitalize(n),!1===l||/^[\.\?;!:]$/.test(l)||(l="."),l&&(n+=l),n},d.prototype.syllable=function(e){for(var n,t=(e=p(e)).length||this.natural({min:2,max:3}),l="bcdfghjklmnprstvwz",r="",i=0;i<t;i++)r+=n=0===i?this.character({pool:"bcdfghjklmnprstvwzaeiou"}):-1===l.indexOf(n)?this.character({pool:l}):this.character({pool:"aeiou"});return e.capitalize&&(r=this.capitalize(r)),r},d.prototype.word=function(e){f((e=p(e)).syllables&&e.length,"Chance: Cannot specify both syllables AND length.");var n=e.syllables||this.natural({min:1,max:3}),t="";if(e.length){do{t+=this.syllable()}while(t.length<e.length);t=t.substring(0,e.length)}else for(var l=0;l<n;l++)t+=this.syllable();return e.capitalize&&(t=this.capitalize(t)),t},d.prototype.age=function(e){var n;switch((e=p(e)).type){case"child":n={min:0,max:12};break;case"teen":n={min:13,max:19};break;case"adult":default:n={min:18,max:65};break;case"senior":n={min:65,max:100};break;case"all":n={min:0,max:100}}return this.natural(n)},d.prototype.birthday=function(e){var n=this.age(e),t=(new Date).getFullYear();if(e&&e.type){var l=new Date,r=new Date;l.setFullYear(t-n-1),r.setFullYear(t-n),e=p(e,{min:l,max:r})}else e=p(e,{year:t-n});return this.date(e)},d.prototype.cpf=function(e){e=p(e,{formatted:!0});var n=this.n(this.natural,9,{max:9}),t=2*n[8]+3*n[7]+4*n[6]+5*n[5]+6*n[4]+7*n[3]+8*n[2]+9*n[1]+10*n[0];(t=11-t%11)>=10&&(t=0);var l=2*t+3*n[8]+4*n[7]+5*n[6]+6*n[5]+7*n[4]+8*n[3]+9*n[2]+10*n[1]+11*n[0];(l=11-l%11)>=10&&(l=0);var r=""+n[0]+n[1]+n[2]+"."+n[3]+n[4]+n[5]+"."+n[6]+n[7]+n[8]+"-"+t+l;return e.formatted?r:r.replace(/\D/g,"")},d.prototype.cnpj=function(e){e=p(e,{formatted:!0});var n=this.n(this.natural,12,{max:12}),t=2*n[11]+3*n[10]+4*n[9]+5*n[8]+6*n[7]+7*n[6]+8*n[5]+9*n[4]+2*n[3]+3*n[2]+4*n[1]+5*n[0];(t=11-t%11)<2&&(t=0);var l=2*t+3*n[11]+4*n[10]+5*n[9]+6*n[8]+7*n[7]+8*n[6]+9*n[5]+2*n[4]+3*n[3]+4*n[2]+5*n[1]+6*n[0];(l=11-l%11)<2&&(l=0);var r=""+n[0]+n[1]+"."+n[2]+n[3]+n[4]+"."+n[5]+n[6]+n[7]+"/"+n[8]+n[9]+n[10]+n[11]+"-"+t+l;return e.formatted?r:r.replace(/\D/g,"")},d.prototype.first=function(e){return e=p(e,{gender:this.gender(),nationality:"en"}),this.pick(this.get("firstNames")[e.gender.toLowerCase()][e.nationality.toLowerCase()])},d.prototype.profession=function(e){return(e=p(e)).rank?this.pick(["Apprentice ","Junior ","Senior ","Lead "])+this.pick(this.get("profession")):this.pick(this.get("profession"))},d.prototype.company=function(){return this.pick(this.get("company"))},d.prototype.gender=function(e){return e=p(e,{extraGenders:[]}),this.pick(["Male","Female"].concat(e.extraGenders))},d.prototype.last=function(e){if("*"===(e=p(e,{nationality:"*"})).nationality){var n=[],t=this.get("lastNames");return Object.keys(t).forEach((function(e,l){n=n.concat(t[e])})),this.pick(n)}return this.pick(this.get("lastNames")[e.nationality.toLowerCase()])},d.prototype.israelId=function(){for(var e=this.string({pool:"0123456789",length:8}),n=0,t=0;t<e.length;t++){var l=e[t]*(t/2===parseInt(t/2)?1:2);l=this.pad(l,2).toString(),n+=l=parseInt(l[0])+parseInt(l[1])}return e+(10-parseInt(n.toString().slice(-1))).toString().slice(-1)},d.prototype.mrz=function(e){var n,t,l,r,i=function(e){var n="<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(""),t=[7,3,1],l=0;return"string"!=typeof e&&(e=e.toString()),e.split("").forEach((function(e,r){var i=n.indexOf(e);e=-1!==i?0===i?0:i+9:parseInt(e,10),l+=e*=t[r%t.length]})),l%10},a=this;return l=function(e){return new Array(e+1).join("<")},(r=["P<",(t=e=p(e,{first:this.first(),last:this.last(),passportNumber:this.integer({min:1e8,max:999999999}),dob:(n=a.birthday({type:"adult"}),[n.getFullYear().toString().substr(2),a.pad(n.getMonth()+1,2),a.pad(n.getDate(),2)].join("")),expiry:function(){var e=new Date;return[(e.getFullYear()+5).toString().substr(2),a.pad(e.getMonth()+1,2),a.pad(e.getDate(),2)].join("")}(),gender:"Female"===this.gender()?"F":"M",issuer:"GBR",nationality:"GBR"})).issuer,t.last.toUpperCase(),"<<",t.first.toUpperCase(),l(39-(t.last.length+t.first.length+2)),t.passportNumber,i(t.passportNumber),t.nationality,t.dob,i(t.dob),t.gender,t.expiry,i(t.expiry),l(14),i(l(14))].join(""))+i(r.substr(44,10)+r.substr(57,7)+r.substr(65,7))},d.prototype.name=function(e){e=p(e);var n,t=this.first(e),l=this.last(e);return n=e.middle?t+" "+this.first(e)+" "+l:e.middle_initial?t+" "+this.character({alpha:!0,casing:"upper"})+". "+l:t+" "+l,e.prefix&&(n=this.prefix(e)+" "+n),e.suffix&&(n=n+" "+this.suffix(e)),n},d.prototype.name_prefixes=function(e){var n=[{name:"Doctor",abbreviation:"Dr."}];return"male"!==(e=(e=e||"all").toLowerCase())&&"all"!==e||n.push({name:"Mister",abbreviation:"Mr."}),"female"!==e&&"all"!==e||(n.push({name:"Miss",abbreviation:"Miss"}),n.push({name:"Misses",abbreviation:"Mrs."})),n},d.prototype.prefix=function(e){return this.name_prefix(e)},d.prototype.name_prefix=function(e){return(e=p(e,{gender:"all"})).full?this.pick(this.name_prefixes(e.gender)).name:this.pick(this.name_prefixes(e.gender)).abbreviation},d.prototype.HIDN=function(){var e="";return(e+=this.string({pool:"0123456789",length:6}))+this.string({pool:"ABCDEFGHIJKLMNOPQRSTUVWXYXZ",length:2})},d.prototype.ssn=function(e){var n="1234567890",t=(e=p(e,{ssnFour:!1,dashes:!0})).dashes?"-":"";return e.ssnFour?this.string({pool:n,length:4}):this.string({pool:n,length:3})+t+this.string({pool:n,length:2})+t+this.string({pool:n,length:4})},d.prototype.aadhar=function(e){var n="1234567890",t=(e=p(e,{onlyLastFour:!1,separatedByWhiteSpace:!0})).separatedByWhiteSpace?" ":"";return e.onlyLastFour?this.string({pool:n,length:4}):this.string({pool:n,length:4})+t+this.string({pool:n,length:4})+t+this.string({pool:n,length:4})},d.prototype.name_suffixes=function(){return[{name:"Doctor of Osteopathic Medicine",abbreviation:"D.O."},{name:"Doctor of Philosophy",abbreviation:"Ph.D."},{name:"Esquire",abbreviation:"Esq."},{name:"Junior",abbreviation:"Jr."},{name:"Juris Doctor",abbreviation:"J.D."},{name:"Master of Arts",abbreviation:"M.A."},{name:"Master of Business Administration",abbreviation:"M.B.A."},{name:"Master of Science",abbreviation:"M.S."},{name:"Medical Doctor",abbreviation:"M.D."},{name:"Senior",abbreviation:"Sr."},{name:"The Third",abbreviation:"III"},{name:"The Fourth",abbreviation:"IV"},{name:"Bachelor of Engineering",abbreviation:"B.E"},{name:"Bachelor of Technology",abbreviation:"B.TECH"}]},d.prototype.suffix=function(e){return this.name_suffix(e)},d.prototype.name_suffix=function(e){return(e=p(e)).full?this.pick(this.name_suffixes()).name:this.pick(this.name_suffixes()).abbreviation},d.prototype.nationalities=function(){return this.get("nationalities")},d.prototype.nationality=function(){return this.pick(this.nationalities()).name},d.prototype.android_id=function(){return"APA91"+this.string({pool:"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",length:178})},d.prototype.apple_token=function(){return this.string({pool:"abcdef1234567890",length:64})},d.prototype.wp8_anid2=function(){return h(this.hash({length:32}))},d.prototype.wp7_anid=function(){return"A="+this.guid().replace(/-/g,"").toUpperCase()+"&E="+this.hash({length:3})+"&W="+this.integer({min:0,max:9})},d.prototype.bb_pin=function(){return this.hash({length:8})},d.prototype.avatar=function(e){var n={protocol:null,email:null,fileExtension:null,size:null,fallback:null,rating:null};if(e)if("string"==typeof e)n.email=e,e={};else{if("object"!=typeof e)return null;if("Array"===e.constructor)return null}else n.email=this.email(),e={};return(n=p(e,n)).email||(n.email=this.email()),n.protocol={http:"http",https:"https"}[n.protocol]?n.protocol+":":"",n.size=parseInt(n.size,0)?n.size:"",n.rating={g:"g",pg:"pg",r:"r",x:"x"}[n.rating]?n.rating:"",n.fallback={404:"404",mm:"mm",identicon:"identicon",monsterid:"monsterid",wavatar:"wavatar",retro:"retro",blank:"blank"}[n.fallback]?n.fallback:"",n.fileExtension={bmp:"bmp",gif:"gif",jpg:"jpg",png:"png"}[n.fileExtension]?n.fileExtension:"",n.protocol+"//www.gravatar.com/avatar/"+this.bimd5.md5(n.email)+(n.fileExtension?"."+n.fileExtension:"")+(n.size||n.rating||n.fallback?"?":"")+(n.size?"&s="+n.size.toString():"")+(n.rating?"&r="+n.rating:"")+(n.fallback?"&d="+n.fallback:"")},d.prototype.color=function(e){function n(e,n){return[e,e,e].join(n||"")}function t(e){var t=e?"rgba":"rgb",l=e?","+this.floating({min:m,max:b}):"";return t+"("+(i?n(this.natural({min:a,max:o}),","):this.natural({min:c,max:d})+","+this.natural({min:f,max:h})+","+this.natural({max:255}))+l+")"}function l(t,l,r){var p=r?"#":"",m="";return i?(m=n(this.pad(this.hex({min:a,max:o}),2)),"shorthex"===e.format&&(m=n(this.hex({min:0,max:15})))):m="shorthex"===e.format?this.pad(this.hex({min:Math.floor(u/16),max:Math.floor(s/16)}),1)+this.pad(this.hex({min:Math.floor(c/16),max:Math.floor(d/16)}),1)+this.pad(this.hex({min:Math.floor(f/16),max:Math.floor(h/16)}),1):void 0!==u||void 0!==s||void 0!==c||void 0!==d||void 0!==f||void 0!==h?this.pad(this.hex({min:u,max:s}),2)+this.pad(this.hex({min:c,max:d}),2)+this.pad(this.hex({min:f,max:h}),2):this.pad(this.hex({min:a,max:o}),2)+this.pad(this.hex({min:a,max:o}),2)+this.pad(this.hex({min:a,max:o}),2),p+m}var r,i=(e=p(e,{format:this.pick(["hex","shorthex","rgb","rgba","0x","name"]),grayscale:!1,casing:"lower",min:0,max:255,min_red:void 0,max_red:void 0,min_green:void 0,max_green:void 0,min_blue:void 0,max_blue:void 0,min_alpha:0,max_alpha:1})).grayscale,a=e.min,o=e.max,u=e.min_red,s=e.max_red,c=e.min_green,d=e.max_green,f=e.min_blue,h=e.max_blue,m=e.min_alpha,b=e.max_alpha;if(void 0===e.min_red&&(u=a),void 0===e.max_red&&(s=o),void 0===e.min_green&&(c=a),void 0===e.max_green&&(d=o),void 0===e.min_blue&&(f=a),void 0===e.max_blue&&(h=o),void 0===e.min_alpha&&(m=0),void 0===e.max_alpha&&(b=1),i&&0===a&&255===o&&void 0!==u&&void 0!==s&&(a=(u+c+f)/3,o=(s+d+h)/3),"hex"===e.format)r=l.call(this,2,6,!0);else if("shorthex"===e.format)r=l.call(this,1,3,!0);else if("rgb"===e.format)r=t.call(this,!1);else if("rgba"===e.format)r=t.call(this,!0);else{if("0x"!==e.format){if("name"===e.format)return this.pick(this.get("colorNames"));throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".')}r="0x"+l.call(this,2,6)}return"upper"===e.casing&&(r=r.toUpperCase()),r},d.prototype.domain=function(e){return e=p(e),this.word()+"."+(e.tld||this.tld())},d.prototype.email=function(e){return e=p(e),this.word({length:e.length})+"@"+(e.domain||this.domain())},d.prototype.fbid=function(){return"10000"+this.string({pool:"1234567890",length:11})},d.prototype.google_analytics=function(){return"UA-"+this.pad(this.natural({max:999999}),6)+"-"+this.pad(this.natural({max:99}),2)},d.prototype.hashtag=function(){return"#"+this.word()},d.prototype.ip=function(){return this.natural({min:1,max:254})+"."+this.natural({max:255})+"."+this.natural({max:255})+"."+this.natural({min:1,max:254})},d.prototype.ipv6=function(){return this.n(this.hash,8,{length:4}).join(":")},d.prototype.klout=function(){return this.natural({min:1,max:99})},d.prototype.semver=function(e){e=p(e,{include_prerelease:!0});var n=this.pickone(["^","~","<",">","<=",">=","="]);e.range&&(n=e.range);var t="";return e.include_prerelease&&(t=this.weighted(["","-dev","-beta","-alpha"],[50,10,5,1])),n+this.rpg("3d10").join(".")+t},d.prototype.tlds=function(){return["com","org","edu","gov","co.uk","net","io","ac","ad","ae","af","ag","ai","al","am","an","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"]},d.prototype.tld=function(){return this.pick(this.tlds())},d.prototype.twitter=function(){return"@"+this.word()},d.prototype.url=function(e){var n=(e=p(e,{protocol:"http",domain:this.domain(e),domain_prefix:"",path:this.word(),extensions:[]})).extensions.length>0?"."+this.pick(e.extensions):"",t=e.domain_prefix?e.domain_prefix+"."+e.domain:e.domain;return e.protocol+"://"+t+"/"+e.path+n},d.prototype.port=function(){return this.integer({min:0,max:65535})},d.prototype.locale=function(e){return(e=p(e)).region?this.pick(this.get("locale_regions")):this.pick(this.get("locale_languages"))},d.prototype.locales=function(e){return(e=p(e)).region?this.get("locale_regions"):this.get("locale_languages")},d.prototype.loremPicsum=function(e){var n=(e=p(e,{width:500,height:500,greyscale:!1,blurred:!1})).greyscale?"g/":"",t=e.blurred?"/?blur":"/?random";return"https://picsum.photos/"+n+e.width+"/"+e.height+t},d.prototype.address=function(e){return e=p(e),this.natural({min:5,max:2e3})+" "+this.street(e)},d.prototype.altitude=function(e){return e=p(e,{fixed:5,min:0,max:8848}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},d.prototype.areacode=function(e){e=p(e,{parens:!0});var n=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:8}).toString()+this.natural({min:0,max:9}).toString();return e.parens?"("+n+")":n},d.prototype.city=function(){return this.capitalize(this.word({syllables:3}))},d.prototype.coordinates=function(e){return this.latitude(e)+", "+this.longitude(e)},d.prototype.countries=function(){return this.get("countries")},d.prototype.country=function(e){e=p(e);var n=this.pick(this.countries());return e.raw?n:e.full?n.name:n.abbreviation},d.prototype.depth=function(e){return e=p(e,{fixed:5,min:-10994,max:0}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},d.prototype.geohash=function(e){return e=p(e,{length:7}),this.string({length:e.length,pool:"0123456789bcdefghjkmnpqrstuvwxyz"})},d.prototype.geojson=function(e){return this.latitude(e)+", "+this.longitude(e)+", "+this.altitude(e)},d.prototype.latitude=function(e){return e=p(e,{fixed:5,min:-90,max:90}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},d.prototype.longitude=function(e){return e=p(e,{fixed:5,min:-180,max:180}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},d.prototype.phone=function(e){var n,t,l=this,r=function(e){var n=[];return e.sections.forEach((function(e){n.push(l.string({pool:"0123456789",length:e}))})),e.area+n.join(" ")};switch((e=p(e,{formatted:!0,country:"us",mobile:!1})).formatted||(e.parens=!1),e.country){case"fr":e.mobile?(n=this.pick(["06","07"])+l.string({pool:"0123456789",length:8}),t=e.formatted?n.match(/../g).join(" "):n):(n=this.pick(["01"+this.pick(["30","34","39","40","41","42","43","44","45","46","47","48","49","53","55","56","58","60","64","69","70","72","73","74","75","76","77","78","79","80","81","82","83"])+l.string({pool:"0123456789",length:6}),"02"+this.pick(["14","18","22","23","28","29","30","31","32","33","34","35","36","37","38","40","41","43","44","45","46","47","48","49","50","51","52","53","54","56","57","61","62","69","72","76","77","78","85","90","96","97","98","99"])+l.string({pool:"0123456789",length:6}),"03"+this.pick(["10","20","21","22","23","24","25","26","27","28","29","39","44","45","51","52","54","55","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","80","81","82","83","84","85","86","87","88","89","90"])+l.string({pool:"0123456789",length:6}),"04"+this.pick(["11","13","15","20","22","26","27","30","32","34","37","42","43","44","50","56","57","63","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","88","89","90","91","92","93","94","95","97","98"])+l.string({pool:"0123456789",length:6}),"05"+this.pick(["08","16","17","19","24","31","32","33","34","35","40","45","46","47","49","53","55","56","57","58","59","61","62","63","64","65","67","79","81","82","86","87","90","94"])+l.string({pool:"0123456789",length:6}),"09"+l.string({pool:"0123456789",length:8})]),t=e.formatted?n.match(/../g).join(" "):n);break;case"uk":e.mobile?(n=this.pick([{area:"07"+this.pick(["4","5","7","8","9"]),sections:[2,6]},{area:"07624 ",sections:[6]}]),t=e.formatted?r(n):r(n).replace(" ","")):(n=this.pick([{area:"01"+this.character({pool:"234569"})+"1 ",sections:[3,4]},{area:"020 "+this.character({pool:"378"}),sections:[3,4]},{area:"023 "+this.character({pool:"89"}),sections:[3,4]},{area:"024 7",sections:[3,4]},{area:"028 "+this.pick(["25","28","37","71","82","90","92","95"]),sections:[2,4]},{area:"012"+this.pick(["04","08","54","76","97","98"])+" ",sections:[6]},{area:"013"+this.pick(["63","64","84","86"])+" ",sections:[6]},{area:"014"+this.pick(["04","20","60","61","80","88"])+" ",sections:[6]},{area:"015"+this.pick(["24","27","62","66"])+" ",sections:[6]},{area:"016"+this.pick(["06","29","35","47","59","95"])+" ",sections:[6]},{area:"017"+this.pick(["26","44","50","68"])+" ",sections:[6]},{area:"018"+this.pick(["27","37","84","97"])+" ",sections:[6]},{area:"019"+this.pick(["00","05","35","46","49","63","95"])+" ",sections:[6]}]),t=e.formatted?r(n):r(n).replace(" ","","g"));break;case"za":e.mobile?(n=this.pick(["060"+this.pick(["3","4","5","6","7","8","9"])+l.string({pool:"0123456789",length:6}),"061"+this.pick(["0","1","2","3","4","5","8"])+l.string({pool:"0123456789",length:6}),"06"+l.string({pool:"0123456789",length:7}),"071"+this.pick(["0","1","2","3","4","5","6","7","8","9"])+l.string({pool:"0123456789",length:6}),"07"+this.pick(["2","3","4","6","7","8","9"])+l.string({pool:"0123456789",length:7}),"08"+this.pick(["0","1","2","3","4","5"])+l.string({pool:"0123456789",length:7})]),t=e.formatted||n):(n=this.pick(["01"+this.pick(["0","1","2","3","4","5","6","7","8"])+l.string({pool:"0123456789",length:7}),"02"+this.pick(["1","2","3","4","7","8"])+l.string({pool:"0123456789",length:7}),"03"+this.pick(["1","2","3","5","6","9"])+l.string({pool:"0123456789",length:7}),"04"+this.pick(["1","2","3","4","5","6","7","8","9"])+l.string({pool:"0123456789",length:7}),"05"+this.pick(["1","3","4","6","7","8"])+l.string({pool:"0123456789",length:7})]),t=e.formatted||n);break;case"us":var i=this.areacode(e).toString(),a=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:9}).toString()+this.natural({min:0,max:9}).toString(),o=this.natural({min:1e3,max:9999}).toString();t=e.formatted?i+" "+a+"-"+o:i+a+o;break;case"br":var u,s=this.pick(["11","12","13","14","15","16","17","18","19","21","22","24","27","28","31","32","33","34","35","37","38","41","42","43","44","45","46","47","48","49","51","53","54","55","61","62","63","64","65","66","67","68","69","71","73","74","75","77","79","81","82","83","84","85","86","87","88","89","91","92","93","94","95","96","97","98","99"]);u=e.mobile?"9"+l.string({pool:"0123456789",length:4}):this.natural({min:2e3,max:5999}).toString();var c=l.string({pool:"0123456789",length:4});t=e.formatted?"("+s+") "+u+"-"+c:s+u+c}return t},d.prototype.postal=function(){return this.character({pool:"XVTSRPNKLMHJGECBA"})+this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+" "+(this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+this.natural({max:9}))},d.prototype.counties=function(e){return e=p(e,{country:"uk"}),this.get("counties")[e.country.toLowerCase()]},d.prototype.county=function(e){return this.pick(this.counties(e)).name},d.prototype.provinces=function(e){return e=p(e,{country:"ca"}),this.get("provinces")[e.country.toLowerCase()]},d.prototype.province=function(e){return e&&e.full?this.pick(this.provinces(e)).name:this.pick(this.provinces(e)).abbreviation},d.prototype.state=function(e){return e&&e.full?this.pick(this.states(e)).name:this.pick(this.states(e)).abbreviation},d.prototype.states=function(e){var n;switch((e=p(e,{country:"us",us_states_and_dc:!0})).country.toLowerCase()){case"us":var t=this.get("us_states_and_dc"),l=this.get("territories"),r=this.get("armed_forces");n=[],e.us_states_and_dc&&(n=n.concat(t)),e.territories&&(n=n.concat(l)),e.armed_forces&&(n=n.concat(r));break;case"it":n=this.get("country_regions")[e.country.toLowerCase()];break;case"uk":n=this.get("counties")[e.country.toLowerCase()]}return n},d.prototype.street=function(e){var n;switch((e=p(e,{country:"us",syllables:2})).country.toLowerCase()){case"us":n=this.word({syllables:e.syllables}),n=this.capitalize(n),n+=" ",n+=e.short_suffix?this.street_suffix(e).abbreviation:this.street_suffix(e).name;break;case"it":n=this.word({syllables:e.syllables}),n=this.capitalize(n),n=(e.short_suffix?this.street_suffix(e).abbreviation:this.street_suffix(e).name)+" "+n}return n},d.prototype.street_suffix=function(e){return e=p(e,{country:"us"}),this.pick(this.street_suffixes(e))},d.prototype.street_suffixes=function(e){return e=p(e,{country:"us"}),this.get("street_suffixes")[e.country.toLowerCase()]},d.prototype.zip=function(e){var n=this.n(this.natural,5,{max:9});return e&&!0===e.plusfour&&(n.push("-"),n=n.concat(this.n(this.natural,4,{max:9}))),n.join("")},d.prototype.ampm=function(){return this.bool()?"am":"pm"},d.prototype.date=function(e){var n,t;if(e&&(e.min||e.max)){var l=void 0!==(e=p(e,{american:!0,string:!1})).min?e.min.getTime():1,r=void 0!==e.max?e.max.getTime():864e13;t=new Date(this.integer({min:l,max:r}))}else{var i=this.month({raw:!0}),a=i.days;e&&e.month&&(a=this.get("months")[(e.month%12+12)%12].days),e=p(e,{year:parseInt(this.year(),10),month:i.numeric-1,day:this.natural({min:1,max:a}),hour:this.hour({twentyfour:!0}),minute:this.minute(),second:this.second(),millisecond:this.millisecond(),american:!0,string:!1}),t=new Date(e.year,e.month,e.day,e.hour,e.minute,e.second,e.millisecond)}return n=e.american?t.getMonth()+1+"/"+t.getDate()+"/"+t.getFullYear():t.getDate()+"/"+(t.getMonth()+1)+"/"+t.getFullYear(),e.string?n:t},d.prototype.hammertime=function(e){return this.date(e).getTime()},d.prototype.hour=function(e){return f((e=p(e,{min:e&&e.twentyfour?0:1,max:e&&e.twentyfour?23:12})).min<0,"Chance: Min cannot be less than 0."),f(e.twentyfour&&e.max>23,"Chance: Max cannot be greater than 23 for twentyfour option."),f(!e.twentyfour&&e.max>12,"Chance: Max cannot be greater than 12."),f(e.min>e.max,"Chance: Min cannot be greater than Max."),this.natural({min:e.min,max:e.max})},d.prototype.millisecond=function(){return this.natural({max:999})},d.prototype.minute=d.prototype.second=function(e){return f((e=p(e,{min:0,max:59})).min<0,"Chance: Min cannot be less than 0."),f(e.max>59,"Chance: Max cannot be greater than 59."),f(e.min>e.max,"Chance: Min cannot be greater than Max."),this.natural({min:e.min,max:e.max})},d.prototype.month=function(e){f((e=p(e,{min:1,max:12})).min<1,"Chance: Min cannot be less than 1."),f(e.max>12,"Chance: Max cannot be greater than 12."),f(e.min>e.max,"Chance: Min cannot be greater than Max.");var n=this.pick(this.months().slice(e.min-1,e.max));return e.raw?n:n.name},d.prototype.months=function(){return this.get("months")},d.prototype.second=function(){return this.natural({max:59})},d.prototype.timestamp=function(){return this.natural({min:1,max:parseInt((new Date).getTime()/1e3,10)})},d.prototype.weekday=function(e){var n=["Monday","Tuesday","Wednesday","Thursday","Friday"];return(e=p(e,{weekday_only:!1})).weekday_only||(n.push("Saturday"),n.push("Sunday")),this.pickone(n)},d.prototype.year=function(e){return(e=p(e,{min:(new Date).getFullYear()})).max=void 0!==e.max?e.max:e.min+100,this.natural(e).toString()},d.prototype.cc=function(e){var n,t,l;return t=(n=(e=p(e)).type?this.cc_type({name:e.type,raw:!0}):this.cc_type({raw:!0})).prefix.split(""),l=n.length-n.prefix.length-1,(t=t.concat(this.n(this.integer,l,{min:0,max:9}))).push(this.luhn_calculate(t.join(""))),t.join("")},d.prototype.cc_types=function(){return this.get("cc_types")},d.prototype.cc_type=function(e){e=p(e);var n=this.cc_types(),t=null;if(e.name){for(var l=0;l<n.length;l++)if(n[l].name===e.name||n[l].short_name===e.name){t=n[l];break}if(null===t)throw new RangeError("Chance: Credit card type '"+e.name+"' is not supported")}else t=this.pick(n);return e.raw?t:t.name},d.prototype.currency_types=function(){return this.get("currency_types")},d.prototype.currency=function(){return this.pick(this.currency_types())},d.prototype.timezones=function(){return this.get("timezones")},d.prototype.timezone=function(){return this.pick(this.timezones())},d.prototype.currency_pair=function(e){var n=this.unique(this.currency,2,{comparator:function(e,n){return e.reduce((function(e,t){return e||t.code===n.code}),!1)}});return e?n[0].code+"/"+n[1].code:n},d.prototype.dollar=function(e){e=p(e,{max:1e4,min:0});var n=this.floating({min:e.min,max:e.max,fixed:2}).toString(),t=n.split(".")[1];return void 0===t?n+=".00":t.length<2&&(n+="0"),n<0?"-$"+n.replace("-",""):"$"+n},d.prototype.euro=function(e){return Number(this.dollar(e).replace("$","")).toLocaleString()+"€"},d.prototype.exp=function(e){e=p(e);var n={};return n.year=this.exp_year(),n.year===(new Date).getFullYear().toString()?n.month=this.exp_month({future:!0}):n.month=this.exp_month(),e.raw?n:n.month+"/"+n.year},d.prototype.exp_month=function(e){e=p(e);var n,t,l=(new Date).getMonth()+1;if(e.future&&12!==l)do{n=this.month({raw:!0}).numeric,t=parseInt(n,10)}while(t<=l);else n=this.month({raw:!0}).numeric;return n},d.prototype.exp_year=function(){var e=(new Date).getMonth()+1,n=(new Date).getFullYear();return this.year({min:12===e?n+1:n,max:n+10})},d.prototype.vat=function(e){if("it"===(e=p(e,{country:"it"})).country.toLowerCase())return this.it_vat()},d.prototype.iban=function(){return this.string({length:2,pool:"ABCDEFGHIJKLMNOPQRSTUVWXYZ"})+this.pad(this.integer({min:0,max:99}),2)+this.string({length:4,pool:"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"})+this.pad(this.natural(),this.natural({min:6,max:26}))},d.prototype.it_vat=function(){var e=this.natural({min:1,max:18e5});return(e=this.pad(e,7)+this.pad(this.pick(this.provinces({country:"it"})).code,3))+this.luhn_calculate(e)},d.prototype.cf=function(e){var n=(e=e||{}).gender?e.gender:this.gender(),t=e.first?e.first:this.first({gender:n,nationality:"it"}),l=e.last?e.last:this.last({nationality:"it"}),r=e.birthday?e.birthday:this.birthday(),i=e.city?e.city:this.pickone(["A","B","C","D","E","F","G","H","I","L","M","Z"])+this.pad(this.natural({max:999}),3),a=[],o=function(e,n){var t,l=[];return e.length<3?l=e.split("").concat("XXX".split("")).splice(0,3):((t=e.toUpperCase().split("").map((function(e){return-1!=="BCDFGHJKLMNPRSTVWZ".indexOf(e)?e:void 0})).join("")).length>3&&(t=n?t.substr(0,3):t[0]+t.substr(2,2)),t.length<3&&(l=t,t=e.toUpperCase().split("").map((function(e){return-1!=="AEIOU".indexOf(e)?e:void 0})).join("").substr(0,3-l.length)),l+=t),l};return a=a.concat(o(l,!0),o(t),function(e,n,t){return e.getFullYear().toString().substr(2)+["A","B","C","D","E","H","L","M","P","R","S","T"][e.getMonth()]+t.pad(e.getDate()+("female"===n.toLowerCase()?40:0),2)}(r,n,this),i.toUpperCase().split("")).join(""),(a+=function(e){for(var n="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",t="ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ",l="ABCDEFGHIJKLMNOPQRSTUVWXYZ",r=0,i=0;i<15;i++)r+=i%2!=0?l.indexOf(t[n.indexOf(e[i])]):"BAKPLCQDREVOSFTGUHMINJWZYX".indexOf(t[n.indexOf(e[i])]);return l[r%26]}(a.toUpperCase())).toUpperCase()},d.prototype.pl_pesel=function(){for(var e=this.natural({min:1,max:9999999999}),n=this.pad(e,10).split(""),t=0;t<n.length;t++)n[t]=parseInt(n[t]);var l=(1*n[0]+3*n[1]+7*n[2]+9*n[3]+1*n[4]+3*n[5]+7*n[6]+9*n[7]+1*n[8]+3*n[9])%10;return 0!==l&&(l=10-l),n.join("")+l},d.prototype.pl_nip=function(){for(var e=this.natural({min:1,max:999999999}),n=this.pad(e,9).split(""),t=0;t<n.length;t++)n[t]=parseInt(n[t]);var l=(6*n[0]+5*n[1]+7*n[2]+2*n[3]+3*n[4]+4*n[5]+5*n[6]+6*n[7]+7*n[8])%11;return 10===l?this.pl_nip():n.join("")+l},d.prototype.pl_regon=function(){for(var e=this.natural({min:1,max:99999999}),n=this.pad(e,8).split(""),t=0;t<n.length;t++)n[t]=parseInt(n[t]);var l=(8*n[0]+9*n[1]+2*n[2]+3*n[3]+4*n[4]+5*n[5]+6*n[6]+7*n[7])%11;return 10===l&&(l=0),n.join("")+l},d.prototype.note=function(e){e=p(e,{notes:"flatKey"});var n={naturals:["C","D","E","F","G","A","B"],flats:["D♭","E♭","G♭","A♭","B♭"],sharps:["C♯","D♯","F♯","G♯","A♯"]};return n.all=n.naturals.concat(n.flats.concat(n.sharps)),n.flatKey=n.naturals.concat(n.flats),n.sharpKey=n.naturals.concat(n.sharps),this.pickone(n[e.notes])},d.prototype.midi_note=function(e){return e=p(e,{min:0,max:127}),this.integer({min:e.min,max:e.max})},d.prototype.chord_quality=function(e){var n=["maj","min","aug","dim"];return(e=p(e,{jazz:!0})).jazz&&(n=["maj7","min7","7","sus","dim","ø"]),this.pickone(n)},d.prototype.chord=function(e){return e=p(e),this.note(e)+this.chord_quality(e)},d.prototype.tempo=function(e){return e=p(e,{min:40,max:320}),this.integer({min:e.min,max:e.max})},d.prototype.coin=function(e){return this.bool()?"heads":"tails"},d.prototype.d4=m({min:1,max:4}),d.prototype.d6=m({min:1,max:6}),d.prototype.d8=m({min:1,max:8}),d.prototype.d10=m({min:1,max:10}),d.prototype.d12=m({min:1,max:12}),d.prototype.d20=m({min:1,max:20}),d.prototype.d30=m({min:1,max:30}),d.prototype.d100=m({min:1,max:100}),d.prototype.rpg=function(e,n){if(n=p(n),e){var t=e.toLowerCase().split("d"),l=[];if(2!==t.length||!parseInt(t[0],10)||!parseInt(t[1],10))throw new Error("Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");for(var r=t[0];r>0;r--)l[r-1]=this.natural({min:1,max:t[1]});return void 0!==n.sum&&n.sum?l.reduce((function(e,n){return e+n})):l}throw new RangeError("Chance: A type of die roll must be included")},d.prototype.guid=function(e){e=p(e,{version:5});var n="abcdef1234567890";return this.string({pool:n,length:8})+"-"+this.string({pool:n,length:4})+"-"+e.version+this.string({pool:n,length:3})+"-"+this.string({pool:"ab89",length:1})+this.string({pool:n,length:3})+"-"+this.string({pool:n,length:12})},d.prototype.hash=function(e){var n="upper"===(e=p(e,{length:40,casing:"lower"})).casing?u.toUpperCase():u;return this.string({pool:n,length:e.length})},d.prototype.luhn_check=function(e){var n=e.toString();return+n.substring(n.length-1)===this.luhn_calculate(+n.substring(0,n.length-1))},d.prototype.luhn_calculate=function(e){for(var n,t=e.toString().split("").reverse(),l=0,r=0,i=t.length;i>r;++r)n=+t[r],r%2==0&&(n*=2)>9&&(n-=9),l+=n;return 9*l%10},d.prototype.md5=function(e){var n={str:"",key:null,raw:!1};if(e)if("string"==typeof e)n.str=e,e={};else{if("object"!=typeof e)return null;if("Array"===e.constructor)return null}else n.str=this.string(),e={};if(!(n=p(e,n)).str)throw new Error("A parameter is required to return an md5 hash.");return this.bimd5.md5(n.str,n.key,n.raw)},d.prototype.file=function(e){var n,t=e||{},l="fileExtension",r=Object.keys(this.get("fileExtension"));if(n=this.word({length:t.length}),t.extension)return n+"."+t.extension;if(t.extensions){if(Array.isArray(t.extensions))return n+"."+this.pickone(t.extensions);if(t.extensions.constructor===Object){var i=t.extensions,a=Object.keys(i);return n+"."+this.pickone(i[this.pickone(a)])}throw new Error("Chance: Extensions must be an Array or Object")}if(t.fileType){var o=t.fileType;if(-1!==r.indexOf(o))return n+"."+this.pickone(this.get(l)[o]);throw new RangeError("Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'")}return n+"."+this.pickone(this.get(l)[this.pickone(r)])};var b={firstNames:{male:{en:["James","John","Robert","Michael","William","David","Richard","Joseph","Charles","Thomas","Christopher","Daniel","Matthew","George","Donald","Anthony","Paul","Mark","Edward","Steven","Kenneth","Andrew","Brian","Joshua","Kevin","Ronald","Timothy","Jason","Jeffrey","Frank","Gary","Ryan","Nicholas","Eric","Stephen","Jacob","Larry","Jonathan","Scott","Raymond","Justin","Brandon","Gregory","Samuel","Benjamin","Patrick","Jack","Henry","Walter","Dennis","Jerry","Alexander","Peter","Tyler","Douglas","Harold","Aaron","Jose","Adam","Arthur","Zachary","Carl","Nathan","Albert","Kyle","Lawrence","Joe","Willie","Gerald","Roger","Keith","Jeremy","Terry","Harry","Ralph","Sean","Jesse","Roy","Louis","Billy","Austin","Bruce","Eugene","Christian","Bryan","Wayne","Russell","Howard","Fred","Ethan","Jordan","Philip","Alan","Juan","Randy","Vincent","Bobby","Dylan","Johnny","Phillip","Victor","Clarence","Ernest","Martin","Craig","Stanley","Shawn","Travis","Bradley","Leonard","Earl","Gabriel","Jimmy","Francis","Todd","Noah","Danny","Dale","Cody","Carlos","Allen","Frederick","Logan","Curtis","Alex","Joel","Luis","Norman","Marvin","Glenn","Tony","Nathaniel","Rodney","Melvin","Alfred","Steve","Cameron","Chad","Edwin","Caleb","Evan","Antonio","Lee","Herbert","Jeffery","Isaac","Derek","Ricky","Marcus","Theodore","Elijah","Luke","Jesus","Eddie","Troy","Mike","Dustin","Ray","Adrian","Bernard","Leroy","Angel","Randall","Wesley","Ian","Jared","Mason","Hunter","Calvin","Oscar","Clifford","Jay","Shane","Ronnie","Barry","Lucas","Corey","Manuel","Leo","Tommy","Warren","Jackson","Isaiah","Connor","Don","Dean","Jon","Julian","Miguel","Bill","Lloyd","Charlie","Mitchell","Leon","Jerome","Darrell","Jeremiah","Alvin","Brett","Seth","Floyd","Jim","Blake","Micheal","Gordon","Trevor","Lewis","Erik","Edgar","Vernon","Devin","Gavin","Jayden","Chris","Clyde","Tom","Derrick","Mario","Brent","Marc","Herman","Chase","Dominic","Ricardo","Franklin","Maurice","Max","Aiden","Owen","Lester","Gilbert","Elmer","Gene","Francisco","Glen","Cory","Garrett","Clayton","Sam","Jorge","Chester","Alejandro","Jeff","Harvey","Milton","Cole","Ivan","Andre","Duane","Landon"],it:["Adolfo","Alberto","Aldo","Alessandro","Alessio","Alfredo","Alvaro","Andrea","Angelo","Angiolo","Antonino","Antonio","Attilio","Benito","Bernardo","Bruno","Carlo","Cesare","Christian","Claudio","Corrado","Cosimo","Cristian","Cristiano","Daniele","Dario","David","Davide","Diego","Dino","Domenico","Duccio","Edoardo","Elia","Elio","Emanuele","Emiliano","Emilio","Enrico","Enzo","Ettore","Fabio","Fabrizio","Federico","Ferdinando","Fernando","Filippo","Francesco","Franco","Gabriele","Giacomo","Giampaolo","Giampiero","Giancarlo","Gianfranco","Gianluca","Gianmarco","Gianni","Gino","Giorgio","Giovanni","Giuliano","Giulio","Giuseppe","Graziano","Gregorio","Guido","Iacopo","Jacopo","Lapo","Leonardo","Lorenzo","Luca","Luciano","Luigi","Manuel","Marcello","Marco","Marino","Mario","Massimiliano","Massimo","Matteo","Mattia","Maurizio","Mauro","Michele","Mirko","Mohamed","Nello","Neri","Niccolò","Nicola","Osvaldo","Otello","Paolo","Pier Luigi","Piero","Pietro","Raffaele","Remo","Renato","Renzo","Riccardo","Roberto","Rolando","Romano","Salvatore","Samuele","Sandro","Sergio","Silvano","Simone","Stefano","Thomas","Tommaso","Ubaldo","Ugo","Umberto","Valerio","Valter","Vasco","Vincenzo","Vittorio"],nl:["Aaron","Abel","Adam","Adriaan","Albert","Alexander","Ali","Arjen","Arno","Bart","Bas","Bastiaan","Benjamin","Bob","Boris","Bram","Brent","Cas","Casper","Chris","Christiaan","Cornelis","Daan","Daley","Damian","Dani","Daniel","Daniël","David","Dean","Dirk","Dylan","Egbert","Elijah","Erik","Erwin","Evert","Ezra","Fabian","Fedde","Finn","Florian","Floris","Frank","Frans","Frederik","Freek","Geert","Gerard","Gerben","Gerrit","Gijs","Guus","Hans","Hendrik","Henk","Herman","Hidde","Hugo","Jaap","Jan Jaap","Jan-Willem","Jack","Jacob","Jan","Jason","Jasper","Jayden","Jelle","Jelte","Jens","Jeroen","Jesse","Jim","Job","Joep","Johannes","John","Jonathan","Joris","Joshua","Joël","Julian","Kees","Kevin","Koen","Lars","Laurens","Leendert","Lennard","Lodewijk","Luc","Luca","Lucas","Lukas","Luuk","Maarten","Marcus","Martijn","Martin","Matthijs","Maurits","Max","Mees","Melle","Mick","Mika","Milan","Mohamed","Mohammed","Morris","Muhammed","Nathan","Nick","Nico","Niek","Niels","Noah","Noud","Olivier","Oscar","Owen","Paul","Pepijn","Peter","Pieter","Pim","Quinten","Reinier","Rens","Robin","Ruben","Sam","Samuel","Sander","Sebastiaan","Sem","Sep","Sepp","Siem","Simon","Stan","Stef","Steven","Stijn","Sven","Teun","Thijmen","Thijs","Thomas","Tijn","Tim","Timo","Tobias","Tom","Victor","Vince","Willem","Wim","Wouter","Yusuf"],fr:["Aaron","Abdon","Abel","Abélard","Abelin","Abondance","Abraham","Absalon","Acace","Achaire","Achille","Adalard","Adalbald","Adalbéron","Adalbert","Adalric","Adam","Adegrin","Adel","Adelin","Andelin","Adelphe","Adam","Adéodat","Adhémar","Adjutor","Adolphe","Adonis","Adon","Adrien","Agapet","Agathange","Agathon","Agilbert","Agénor","Agnan","Aignan","Agrippin","Aimable","Aimé","Alain","Alban","Albin","Aubin","Albéric","Albert","Albertet","Alcibiade","Alcide","Alcée","Alcime","Aldonce","Aldric","Aldéric","Aleaume","Alexandre","Alexis","Alix","Alliaume","Aleaume","Almine","Almire","Aloïs","Alphée","Alphonse","Alpinien","Alverède","Amalric","Amaury","Amandin","Amant","Ambroise","Amédée","Amélien","Amiel","Amour","Anaël","Anastase","Anatole","Ancelin","Andéol","Andoche","André","Andoche","Ange","Angelin","Angilbe","Anglebert","Angoustan","Anicet","Anne","Annibal","Ansbert","Anselme","Anthelme","Antheaume","Anthime","Antide","Antoine","Antonius","Antonin","Apollinaire","Apollon","Aquilin","Arcade","Archambaud","Archambeau","Archange","Archibald","Arian","Ariel","Ariste","Aristide","Armand","Armel","Armin","Arnould","Arnaud","Arolde","Arsène","Arsinoé","Arthaud","Arthème","Arthur","Ascelin","Athanase","Aubry","Audebert","Audouin","Audran","Audric","Auguste","Augustin","Aurèle","Aurélien","Aurian","Auxence","Axel","Aymard","Aymeric","Aymon","Aymond","Balthazar","Baptiste","Barnabé","Barthélemy","Bartimée","Basile","Bastien","Baudouin","Bénigne","Benjamin","Benoît","Bérenger","Bérard","Bernard","Bertrand","Blaise","Bon","Boniface","Bouchard","Brice","Brieuc","Bruno","Brunon","Calixte","Calliste","Camélien","Camille","Camillien","Candide","Caribert","Carloman","Cassandre","Cassien","Cédric","Céleste","Célestin","Célien","Césaire","César","Charles","Charlemagne","Childebert","Chilpéric","Chrétien","Christian","Christodule","Christophe","Chrysostome","Clarence","Claude","Claudien","Cléandre","Clément","Clotaire","Côme","Constance","Constant","Constantin","Corentin","Cyprien","Cyriaque","Cyrille","Cyril","Damien","Daniel","David","Delphin","Denis","Désiré","Didier","Dieudonné","Dimitri","Dominique","Dorian","Dorothée","Edgard","Edmond","Édouard","Éleuthère","Élie","Élisée","Émeric","Émile","Émilien","Emmanuel","Enguerrand","Épiphane","Éric","Esprit","Ernest","Étienne","Eubert","Eudes","Eudoxe","Eugène","Eusèbe","Eustache","Évariste","Évrard","Fabien","Fabrice","Falba","Félicité","Félix","Ferdinand","Fiacre","Fidèle","Firmin","Flavien","Flodoard","Florent","Florentin","Florestan","Florian","Fortuné","Foulques","Francisque","François","Français","Franciscus","Francs","Frédéric","Fulbert","Fulcran","Fulgence","Gabin","Gabriel","Gaël","Garnier","Gaston","Gaspard","Gatien","Gaud","Gautier","Gédéon","Geoffroy","Georges","Géraud","Gérard","Gerbert","Germain","Gervais","Ghislain","Gilbert","Gilles","Girart","Gislebert","Gondebaud","Gonthier","Gontran","Gonzague","Grégoire","Guérin","Gui","Guillaume","Gustave","Guy","Guyot","Hardouin","Hector","Hédelin","Hélier","Henri","Herbert","Herluin","Hervé","Hilaire","Hildebert","Hincmar","Hippolyte","Honoré","Hubert","Hugues","Innocent","Isabeau","Isidore","Jacques","Japhet","Jason","Jean","Jeannel","Jeannot","Jérémie","Jérôme","Joachim","Joanny","Job","Jocelyn","Joël","Johan","Jonas","Jonathan","Joseph","Josse","Josselin","Jourdain","Jude","Judicaël","Jules","Julien","Juste","Justin","Lambert","Landry","Laurent","Lazare","Léandre","Léon","Léonard","Léopold","Leu","Loup","Leufroy","Libère","Liétald","Lionel","Loïc","Longin","Lorrain","Lorraine","Lothaire","Louis","Loup","Luc","Lucas","Lucien","Ludolphe","Ludovic","Macaire","Malo","Mamert","Manassé","Marc","Marceau","Marcel","Marcelin","Marius","Marseille","Martial","Martin","Mathurin","Matthias","Mathias","Matthieu","Maugis","Maurice","Mauricet","Maxence","Maxime","Maximilien","Mayeul","Médéric","Melchior","Mence","Merlin","Mérovée","Michaël","Michel","Moïse","Morgan","Nathan","Nathanaël","Narcisse","Néhémie","Nestor","Nestor","Nicéphore","Nicolas","Noé","Noël","Norbert","Normand","Normands","Octave","Odilon","Odon","Oger","Olivier","Oury","Pacôme","Palémon","Parfait","Pascal","Paterne","Patrice","Paul","Pépin","Perceval","Philémon","Philibert","Philippe","Philothée","Pie","Pierre","Pierrick","Prosper","Quentin","Raoul","Raphaël","Raymond","Régis","Réjean","Rémi","Renaud","René","Reybaud","Richard","Robert","Roch","Rodolphe","Rodrigue","Roger","Roland","Romain","Romuald","Roméo","Rome","Ronan","Roselin","Salomon","Samuel","Savin","Savinien","Scholastique","Sébastien","Séraphin","Serge","Séverin","Sidoine","Sigebert","Sigismond","Silvère","Simon","Siméon","Sixte","Stanislas","Stéphane","Stephan","Sylvain","Sylvestre","Tancrède","Tanguy","Taurin","Théodore","Théodose","Théophile","Théophraste","Thibault","Thibert","Thierry","Thomas","Timoléon","Timothée","Titien","Tonnin","Toussaint","Trajan","Tristan","Turold","Tim","Ulysse","Urbain","Valentin","Valère","Valéry","Venance","Venant","Venceslas","Vianney","Victor","Victorien","Victorin","Vigile","Vincent","Vital","Vitalien","Vivien","Waleran","Wandrille","Xavier","Xénophon","Yves","Zacharie","Zaché","Zéphirin"]},female:{en:["Mary","Emma","Elizabeth","Minnie","Margaret","Ida","Alice","Bertha","Sarah","Annie","Clara","Ella","Florence","Cora","Martha","Laura","Nellie","Grace","Carrie","Maude","Mabel","Bessie","Jennie","Gertrude","Julia","Hattie","Edith","Mattie","Rose","Catherine","Lillian","Ada","Lillie","Helen","Jessie","Louise","Ethel","Lula","Myrtle","Eva","Frances","Lena","Lucy","Edna","Maggie","Pearl","Daisy","Fannie","Josephine","Dora","Rosa","Katherine","Agnes","Marie","Nora","May","Mamie","Blanche","Stella","Ellen","Nancy","Effie","Sallie","Nettie","Della","Lizzie","Flora","Susie","Maud","Mae","Etta","Harriet","Sadie","Caroline","Katie","Lydia","Elsie","Kate","Susan","Mollie","Alma","Addie","Georgia","Eliza","Lulu","Nannie","Lottie","Amanda","Belle","Charlotte","Rebecca","Ruth","Viola","Olive","Amelia","Hannah","Jane","Virginia","Emily","Matilda","Irene","Kathryn","Esther","Willie","Henrietta","Ollie","Amy","Rachel","Sara","Estella","Theresa","Augusta","Ora","Pauline","Josie","Lola","Sophia","Leona","Anne","Mildred","Ann","Beulah","Callie","Lou","Delia","Eleanor","Barbara","Iva","Louisa","Maria","Mayme","Evelyn","Estelle","Nina","Betty","Marion","Bettie","Dorothy","Luella","Inez","Lela","Rosie","Allie","Millie","Janie","Cornelia","Victoria","Ruby","Winifred","Alta","Celia","Christine","Beatrice","Birdie","Harriett","Mable","Myra","Sophie","Tillie","Isabel","Sylvia","Carolyn","Isabelle","Leila","Sally","Ina","Essie","Bertie","Nell","Alberta","Katharine","Lora","Rena","Mina","Rhoda","Mathilda","Abbie","Eula","Dollie","Hettie","Eunice","Fanny","Ola","Lenora","Adelaide","Christina","Lelia","Nelle","Sue","Johanna","Lilly","Lucinda","Minerva","Lettie","Roxie","Cynthia","Helena","Hilda","Hulda","Bernice","Genevieve","Jean","Cordelia","Marian","Francis","Jeanette","Adeline","Gussie","Leah","Lois","Lura","Mittie","Hallie","Isabella","Olga","Phoebe","Teresa","Hester","Lida","Lina","Winnie","Claudia","Marguerite","Vera","Cecelia","Bess","Emilie","Rosetta","Verna","Myrtie","Cecilia","Elva","Olivia","Ophelia","Georgie","Elnora","Violet","Adele","Lily","Linnie","Loretta","Madge","Polly","Virgie","Eugenia","Lucile","Lucille","Mabelle","Rosalie"],it:["Ada","Adriana","Alessandra","Alessia","Alice","Angela","Anna","Anna Maria","Annalisa","Annita","Annunziata","Antonella","Arianna","Asia","Assunta","Aurora","Barbara","Beatrice","Benedetta","Bianca","Bruna","Camilla","Carla","Carlotta","Carmela","Carolina","Caterina","Catia","Cecilia","Chiara","Cinzia","Clara","Claudia","Costanza","Cristina","Daniela","Debora","Diletta","Dina","Donatella","Elena","Eleonora","Elisa","Elisabetta","Emanuela","Emma","Eva","Federica","Fernanda","Fiorella","Fiorenza","Flora","Franca","Francesca","Gabriella","Gaia","Gemma","Giada","Gianna","Gina","Ginevra","Giorgia","Giovanna","Giulia","Giuliana","Giuseppa","Giuseppina","Grazia","Graziella","Greta","Ida","Ilaria","Ines","Iolanda","Irene","Irma","Isabella","Jessica","Laura","Lea","Letizia","Licia","Lidia","Liliana","Lina","Linda","Lisa","Livia","Loretta","Luana","Lucia","Luciana","Lucrezia","Luisa","Manuela","Mara","Marcella","Margherita","Maria","Maria Cristina","Maria Grazia","Maria Luisa","Maria Pia","Maria Teresa","Marina","Marisa","Marta","Martina","Marzia","Matilde","Melissa","Michela","Milena","Mirella","Monica","Natalina","Nella","Nicoletta","Noemi","Olga","Paola","Patrizia","Piera","Pierina","Raffaella","Rebecca","Renata","Rina","Rita","Roberta","Rosa","Rosanna","Rossana","Rossella","Sabrina","Sandra","Sara","Serena","Silvana","Silvia","Simona","Simonetta","Sofia","Sonia","Stefania","Susanna","Teresa","Tina","Tiziana","Tosca","Valentina","Valeria","Vanda","Vanessa","Vanna","Vera","Veronica","Vilma","Viola","Virginia","Vittoria"],nl:["Ada","Arianne","Afke","Amanda","Amber","Amy","Aniek","Anita","Anja","Anna","Anne","Annelies","Annemarie","Annette","Anouk","Astrid","Aukje","Barbara","Bianca","Carla","Carlijn","Carolien","Chantal","Charlotte","Claudia","Daniëlle","Debora","Diane","Dora","Eline","Elise","Ella","Ellen","Emma","Esmee","Evelien","Esther","Erica","Eva","Femke","Fleur","Floor","Froukje","Gea","Gerda","Hanna","Hanneke","Heleen","Hilde","Ilona","Ina","Inge","Ingrid","Iris","Isabel","Isabelle","Janneke","Jasmijn","Jeanine","Jennifer","Jessica","Johanna","Joke","Julia","Julie","Karen","Karin","Katja","Kim","Lara","Laura","Lena","Lianne","Lieke","Lilian","Linda","Lisa","Lisanne","Lotte","Louise","Maaike","Manon","Marga","Maria","Marissa","Marit","Marjolein","Martine","Marleen","Melissa","Merel","Miranda","Michelle","Mirjam","Mirthe","Naomi","Natalie","Nienke","Nina","Noortje","Olivia","Patricia","Paula","Paulien","Ramona","Ria","Rianne","Roos","Rosanne","Ruth","Sabrina","Sandra","Sanne","Sara","Saskia","Silvia","Sofia","Sophie","Sonja","Suzanne","Tamara","Tess","Tessa","Tineke","Valerie","Vanessa","Veerle","Vera","Victoria","Wendy","Willeke","Yvonne","Zoë"],fr:["Abdon","Abel","Abigaëlle","Abigaïl","Acacius","Acanthe","Adalbert","Adalsinde","Adegrine","Adélaïde","Adèle","Adélie","Adeline","Adeltrude","Adolphe","Adonis","Adrastée","Adrehilde","Adrienne","Agathe","Agilbert","Aglaé","Aignan","Agneflète","Agnès","Agrippine","Aimé","Alaine","Alaïs","Albane","Albérade","Alberte","Alcide","Alcine","Alcyone","Aldegonde","Aleth","Alexandrine","Alexine","Alice","Aliénor","Aliette","Aline","Alix","Alizé","Aloïse","Aloyse","Alphonsine","Althée","Amaliane","Amalthée","Amande","Amandine","Amant","Amarande","Amaranthe","Amaryllis","Ambre","Ambroisie","Amélie","Améthyste","Aminte","Anaël","Anaïs","Anastasie","Anatole","Ancelin","Andrée","Anémone","Angadrême","Angèle","Angeline","Angélique","Angilbert","Anicet","Annabelle","Anne","Annette","Annick","Annie","Annonciade","Ansbert","Anstrudie","Anthelme","Antigone","Antoinette","Antonine","Aphélie","Apolline","Apollonie","Aquiline","Arabelle","Arcadie","Archange","Argine","Ariane","Aricie","Ariel","Arielle","Arlette","Armance","Armande","Armandine","Armelle","Armide","Armelle","Armin","Arnaud","Arsène","Arsinoé","Artémis","Arthur","Ascelin","Ascension","Assomption","Astarté","Astérie","Astrée","Astrid","Athalie","Athanasie","Athina","Aube","Albert","Aude","Audrey","Augustine","Aure","Aurélie","Aurélien","Aurèle","Aurore","Auxence","Aveline","Abigaëlle","Avoye","Axelle","Aymard","Azalée","Adèle","Adeline","Barbe","Basilisse","Bathilde","Béatrice","Béatrix","Bénédicte","Bérengère","Bernadette","Berthe","Bertille","Beuve","Blanche","Blanc","Blandine","Brigitte","Brune","Brunehilde","Callista","Camille","Capucine","Carine","Caroline","Cassandre","Catherine","Cécile","Céleste","Célestine","Céline","Chantal","Charlène","Charline","Charlotte","Chloé","Christelle","Christiane","Christine","Claire","Clara","Claude","Claudine","Clarisse","Clémence","Clémentine","Cléo","Clio","Clotilde","Coline","Conception","Constance","Coralie","Coraline","Corentine","Corinne","Cyrielle","Daniel","Daniel","Daphné","Débora","Delphine","Denise","Diane","Dieudonné","Dominique","Doriane","Dorothée","Douce","Édith","Edmée","Éléonore","Éliane","Élia","Éliette","Élisabeth","Élise","Ella","Élodie","Éloïse","Elsa","Émeline","Émérance","Émérentienne","Émérencie","Émilie","Emma","Emmanuelle","Emmelie","Ernestine","Esther","Estelle","Eudoxie","Eugénie","Eulalie","Euphrasie","Eusébie","Évangéline","Eva","Ève","Évelyne","Fanny","Fantine","Faustine","Félicie","Fernande","Flavie","Fleur","Flore","Florence","Florie","Fortuné","France","Francia","Françoise","Francine","Gabrielle","Gaëlle","Garance","Geneviève","Georgette","Gerberge","Germaine","Gertrude","Gisèle","Guenièvre","Guilhemine","Guillemette","Gustave","Gwenael","Hélène","Héloïse","Henriette","Hermine","Hermione","Hippolyte","Honorine","Hortense","Huguette","Ines","Irène","Irina","Iris","Isabeau","Isabelle","Iseult","Isolde","Ismérie","Jacinthe","Jacqueline","Jade","Janine","Jeanne","Jocelyne","Joëlle","Joséphine","Judith","Julia","Julie","Jules","Juliette","Justine","Katy","Kathy","Katie","Laura","Laure","Laureline","Laurence","Laurene","Lauriane","Laurianne","Laurine","Léa","Léna","Léonie","Léon","Léontine","Lorraine","Lucie","Lucienne","Lucille","Ludivine","Lydie","Lydie","Megane","Madeleine","Magali","Maguelone","Mallaury","Manon","Marceline","Margot","Marguerite","Marianne","Marie","Myriam","Marie","Marine","Marion","Marlène","Marthe","Martine","Mathilde","Maud","Maureen","Mauricette","Maxime","Mélanie","Melissa","Mélissandre","Mélisande","Mélodie","Michel","Micheline","Mireille","Miriam","Moïse","Monique","Morgane","Muriel","Mylène","Nadège","Nadine","Nathalie","Nicole","Nicolette","Nine","Noël","Noémie","Océane","Odette","Odile","Olive","Olivia","Olympe","Ombline","Ombeline","Ophélie","Oriande","Oriane","Ozanne","Pascale","Pascaline","Paule","Paulette","Pauline","Priscille","Prisca","Prisque","Pécine","Pélagie","Pénélope","Perrine","Pétronille","Philippine","Philomène","Philothée","Primerose","Prudence","Pulchérie","Quentine","Quiéta","Quintia","Quintilla","Rachel","Raphaëlle","Raymonde","Rebecca","Régine","Réjeanne","René","Rita","Rita","Rolande","Romane","Rosalie","Rose","Roseline","Sabine","Salomé","Sandra","Sandrine","Sarah","Ségolène","Séverine","Sibylle","Simone","Sixt","Solange","Soline","Solène","Sophie","Stéphanie","Suzanne","Sylvain","Sylvie","Tatiana","Thaïs","Théodora","Thérèse","Tiphaine","Ursule","Valentine","Valérie","Véronique","Victoire","Victorine","Vinciane","Violette","Virginie","Viviane","Xavière","Yolande","Ysaline","Yvette","Yvonne","Zélie","Zita","Zoé"]}},lastNames:{en:["Smith","Johnson","Williams","Jones","Brown","Davis","Miller","Wilson","Moore","Taylor","Anderson","Thomas","Jackson","White","Harris","Martin","Thompson","Garcia","Martinez","Robinson","Clark","Rodriguez","Lewis","Lee","Walker","Hall","Allen","Young","Hernandez","King","Wright","Lopez","Hill","Scott","Green","Adams","Baker","Gonzalez","Nelson","Carter","Mitchell","Perez","Roberts","Turner","Phillips","Campbell","Parker","Evans","Edwards","Collins","Stewart","Sanchez","Morris","Rogers","Reed","Cook","Morgan","Bell","Murphy","Bailey","Rivera","Cooper","Richardson","Cox","Howard","Ward","Torres","Peterson","Gray","Ramirez","James","Watson","Brooks","Kelly","Sanders","Price","Bennett","Wood","Barnes","Ross","Henderson","Coleman","Jenkins","Perry","Powell","Long","Patterson","Hughes","Flores","Washington","Butler","Simmons","Foster","Gonzales","Bryant","Alexander","Russell","Griffin","Diaz","Hayes","Myers","Ford","Hamilton","Graham","Sullivan","Wallace","Woods","Cole","West","Jordan","Owens","Reynolds","Fisher","Ellis","Harrison","Gibson","McDonald","Cruz","Marshall","Ortiz","Gomez","Murray","Freeman","Wells","Webb","Simpson","Stevens","Tucker","Porter","Hunter","Hicks","Crawford","Henry","Boyd","Mason","Morales","Kennedy","Warren","Dixon","Ramos","Reyes","Burns","Gordon","Shaw","Holmes","Rice","Robertson","Hunt","Black","Daniels","Palmer","Mills","Nichols","Grant","Knight","Ferguson","Rose","Stone","Hawkins","Dunn","Perkins","Hudson","Spencer","Gardner","Stephens","Payne","Pierce","Berry","Matthews","Arnold","Wagner","Willis","Ray","Watkins","Olson","Carroll","Duncan","Snyder","Hart","Cunningham","Bradley","Lane","Andrews","Ruiz","Harper","Fox","Riley","Armstrong","Carpenter","Weaver","Greene","Lawrence","Elliott","Chavez","Sims","Austin","Peters","Kelley","Franklin","Lawson","Fields","Gutierrez","Ryan","Schmidt","Carr","Vasquez","Castillo","Wheeler","Chapman","Oliver","Montgomery","Richards","Williamson","Johnston","Banks","Meyer","Bishop","McCoy","Howell","Alvarez","Morrison","Hansen","Fernandez","Garza","Harvey","Little","Burton","Stanley","Nguyen","George","Jacobs","Reid","Kim","Fuller","Lynch","Dean","Gilbert","Garrett","Romero","Welch","Larson","Frazier","Burke","Hanson","Day","Mendoza","Moreno","Bowman","Medina","Fowler","Brewer","Hoffman","Carlson","Silva","Pearson","Holland","Douglas","Fleming","Jensen","Vargas","Byrd","Davidson","Hopkins","May","Terry","Herrera","Wade","Soto","Walters","Curtis","Neal","Caldwell","Lowe","Jennings","Barnett","Graves","Jimenez","Horton","Shelton","Barrett","Obrien","Castro","Sutton","Gregory","McKinney","Lucas","Miles","Craig","Rodriquez","Chambers","Holt","Lambert","Fletcher","Watts","Bates","Hale","Rhodes","Pena","Beck","Newman","Haynes","McDaniel","Mendez","Bush","Vaughn","Parks","Dawson","Santiago","Norris","Hardy","Love","Steele","Curry","Powers","Schultz","Barker","Guzman","Page","Munoz","Ball","Keller","Chandler","Weber","Leonard","Walsh","Lyons","Ramsey","Wolfe","Schneider","Mullins","Benson","Sharp","Bowen","Daniel","Barber","Cummings","Hines","Baldwin","Griffith","Valdez","Hubbard","Salazar","Reeves","Warner","Stevenson","Burgess","Santos","Tate","Cross","Garner","Mann","Mack","Moss","Thornton","Dennis","McGee","Farmer","Delgado","Aguilar","Vega","Glover","Manning","Cohen","Harmon","Rodgers","Robbins","Newton","Todd","Blair","Higgins","Ingram","Reese","Cannon","Strickland","Townsend","Potter","Goodwin","Walton","Rowe","Hampton","Ortega","Patton","Swanson","Joseph","Francis","Goodman","Maldonado","Yates","Becker","Erickson","Hodges","Rios","Conner","Adkins","Webster","Norman","Malone","Hammond","Flowers","Cobb","Moody","Quinn","Blake","Maxwell","Pope","Floyd","Osborne","Paul","McCarthy","Guerrero","Lindsey","Estrada","Sandoval","Gibbs","Tyler","Gross","Fitzgerald","Stokes","Doyle","Sherman","Saunders","Wise","Colon","Gill","Alvarado","Greer","Padilla","Simon","Waters","Nunez","Ballard","Schwartz","McBride","Houston","Christensen","Klein","Pratt","Briggs","Parsons","McLaughlin","Zimmerman","French","Buchanan","Moran","Copeland","Roy","Pittman","Brady","McCormick","Holloway","Brock","Poole","Frank","Logan","Owen","Bass","Marsh","Drake","Wong","Jefferson","Park","Morton","Abbott","Sparks","Patrick","Norton","Huff","Clayton","Massey","Lloyd","Figueroa","Carson","Bowers","Roberson","Barton","Tran","Lamb","Harrington","Casey","Boone","Cortez","Clarke","Mathis","Singleton","Wilkins","Cain","Bryan","Underwood","Hogan","McKenzie","Collier","Luna","Phelps","McGuire","Allison","Bridges","Wilkerson","Nash","Summers","Atkins"],it:["Acciai","Aglietti","Agostini","Agresti","Ahmed","Aiazzi","Albanese","Alberti","Alessi","Alfani","Alinari","Alterini","Amato","Ammannati","Ancillotti","Andrei","Andreini","Andreoni","Angeli","Anichini","Antonelli","Antonini","Arena","Ariani","Arnetoli","Arrighi","Baccani","Baccetti","Bacci","Bacherini","Badii","Baggiani","Baglioni","Bagni","Bagnoli","Baldassini","Baldi","Baldini","Ballerini","Balli","Ballini","Balloni","Bambi","Banchi","Bandinelli","Bandini","Bani","Barbetti","Barbieri","Barchielli","Bardazzi","Bardelli","Bardi","Barducci","Bargellini","Bargiacchi","Barni","Baroncelli","Baroncini","Barone","Baroni","Baronti","Bartalesi","Bartoletti","Bartoli","Bartolini","Bartoloni","Bartolozzi","Basagni","Basile","Bassi","Batacchi","Battaglia","Battaglini","Bausi","Becagli","Becattini","Becchi","Becucci","Bellandi","Bellesi","Belli","Bellini","Bellucci","Bencini","Benedetti","Benelli","Beni","Benini","Bensi","Benucci","Benvenuti","Berlincioni","Bernacchioni","Bernardi","Bernardini","Berni","Bernini","Bertelli","Berti","Bertini","Bessi","Betti","Bettini","Biagi","Biagini","Biagioni","Biagiotti","Biancalani","Bianchi","Bianchini","Bianco","Biffoli","Bigazzi","Bigi","Biliotti","Billi","Binazzi","Bindi","Bini","Biondi","Bizzarri","Bocci","Bogani","Bolognesi","Bonaiuti","Bonanni","Bonciani","Boncinelli","Bondi","Bonechi","Bongini","Boni","Bonini","Borchi","Boretti","Borghi","Borghini","Borgioli","Borri","Borselli","Boschi","Bottai","Bracci","Braccini","Brandi","Braschi","Bravi","Brazzini","Breschi","Brilli","Brizzi","Brogelli","Brogi","Brogioni","Brunelli","Brunetti","Bruni","Bruno","Brunori","Bruschi","Bucci","Bucciarelli","Buccioni","Bucelli","Bulli","Burberi","Burchi","Burgassi","Burroni","Bussotti","Buti","Caciolli","Caiani","Calabrese","Calamai","Calamandrei","Caldini","Calo'","Calonaci","Calosi","Calvelli","Cambi","Camiciottoli","Cammelli","Cammilli","Campolmi","Cantini","Capanni","Capecchi","Caponi","Cappelletti","Cappelli","Cappellini","Cappugi","Capretti","Caputo","Carbone","Carboni","Cardini","Carlesi","Carletti","Carli","Caroti","Carotti","Carrai","Carraresi","Carta","Caruso","Casalini","Casati","Caselli","Casini","Castagnoli","Castellani","Castelli","Castellucci","Catalano","Catarzi","Catelani","Cavaciocchi","Cavallaro","Cavallini","Cavicchi","Cavini","Ceccarelli","Ceccatelli","Ceccherelli","Ceccherini","Cecchi","Cecchini","Cecconi","Cei","Cellai","Celli","Cellini","Cencetti","Ceni","Cenni","Cerbai","Cesari","Ceseri","Checcacci","Checchi","Checcucci","Cheli","Chellini","Chen","Cheng","Cherici","Cherubini","Chiaramonti","Chiarantini","Chiarelli","Chiari","Chiarini","Chiarugi","Chiavacci","Chiesi","Chimenti","Chini","Chirici","Chiti","Ciabatti","Ciampi","Cianchi","Cianfanelli","Cianferoni","Ciani","Ciapetti","Ciappi","Ciardi","Ciatti","Cicali","Ciccone","Cinelli","Cini","Ciobanu","Ciolli","Cioni","Cipriani","Cirillo","Cirri","Ciucchi","Ciuffi","Ciulli","Ciullini","Clemente","Cocchi","Cognome","Coli","Collini","Colombo","Colzi","Comparini","Conforti","Consigli","Conte","Conti","Contini","Coppini","Coppola","Corsi","Corsini","Corti","Cortini","Cosi","Costa","Costantini","Costantino","Cozzi","Cresci","Crescioli","Cresti","Crini","Curradi","D'Agostino","D'Alessandro","D'Amico","D'Angelo","Daddi","Dainelli","Dallai","Danti","Davitti","De Angelis","De Luca","De Marco","De Rosa","De Santis","De Simone","De Vita","Degl'Innocenti","Degli Innocenti","Dei","Del Lungo","Del Re","Di Marco","Di Stefano","Dini","Diop","Dobre","Dolfi","Donati","Dondoli","Dong","Donnini","Ducci","Dumitru","Ermini","Esposito","Evangelisti","Fabbri","Fabbrini","Fabbrizzi","Fabbroni","Fabbrucci","Fabiani","Facchini","Faggi","Fagioli","Failli","Faini","Falciani","Falcini","Falcone","Fallani","Falorni","Falsini","Falugiani","Fancelli","Fanelli","Fanetti","Fanfani","Fani","Fantappie'","Fantechi","Fanti","Fantini","Fantoni","Farina","Fattori","Favilli","Fedi","Fei","Ferrante","Ferrara","Ferrari","Ferraro","Ferretti","Ferri","Ferrini","Ferroni","Fiaschi","Fibbi","Fiesoli","Filippi","Filippini","Fini","Fioravanti","Fiore","Fiorentini","Fiorini","Fissi","Focardi","Foggi","Fontana","Fontanelli","Fontani","Forconi","Formigli","Forte","Forti","Fortini","Fossati","Fossi","Francalanci","Franceschi","Franceschini","Franchi","Franchini","Franci","Francini","Francioni","Franco","Frassineti","Frati","Fratini","Frilli","Frizzi","Frosali","Frosini","Frullini","Fusco","Fusi","Gabbrielli","Gabellini","Gagliardi","Galanti","Galardi","Galeotti","Galletti","Galli","Gallo","Gallori","Gambacciani","Gargani","Garofalo","Garuglieri","Gashi","Gasperini","Gatti","Gelli","Gensini","Gentile","Gentili","Geri","Gerini","Gheri","Ghini","Giachetti","Giachi","Giacomelli","Gianassi","Giani","Giannelli","Giannetti","Gianni","Giannini","Giannoni","Giannotti","Giannozzi","Gigli","Giordano","Giorgetti","Giorgi","Giovacchini","Giovannelli","Giovannetti","Giovannini","Giovannoni","Giuliani","Giunti","Giuntini","Giusti","Gonnelli","Goretti","Gori","Gradi","Gramigni","Grassi","Grasso","Graziani","Grazzini","Greco","Grifoni","Grillo","Grimaldi","Grossi","Gualtieri","Guarducci","Guarino","Guarnieri","Guasti","Guerra","Guerri","Guerrini","Guidi","Guidotti","He","Hoxha","Hu","Huang","Iandelli","Ignesti","Innocenti","Jin","La Rosa","Lai","Landi","Landini","Lanini","Lapi","Lapini","Lari","Lascialfari","Lastrucci","Latini","Lazzeri","Lazzerini","Lelli","Lenzi","Leonardi","Leoncini","Leone","Leoni","Lepri","Li","Liao","Lin","Linari","Lippi","Lisi","Livi","Lombardi","Lombardini","Lombardo","Longo","Lopez","Lorenzi","Lorenzini","Lorini","Lotti","Lu","Lucchesi","Lucherini","Lunghi","Lupi","Madiai","Maestrini","Maffei","Maggi","Maggini","Magherini","Magini","Magnani","Magnelli","Magni","Magnolfi","Magrini","Malavolti","Malevolti","Manca","Mancini","Manetti","Manfredi","Mangani","Mannelli","Manni","Mannini","Mannucci","Manuelli","Manzini","Marcelli","Marchese","Marchetti","Marchi","Marchiani","Marchionni","Marconi","Marcucci","Margheri","Mari","Mariani","Marilli","Marinai","Marinari","Marinelli","Marini","Marino","Mariotti","Marsili","Martelli","Martinelli","Martini","Martino","Marzi","Masi","Masini","Masoni","Massai","Materassi","Mattei","Matteini","Matteucci","Matteuzzi","Mattioli","Mattolini","Matucci","Mauro","Mazzanti","Mazzei","Mazzetti","Mazzi","Mazzini","Mazzocchi","Mazzoli","Mazzoni","Mazzuoli","Meacci","Mecocci","Meini","Melani","Mele","Meli","Mengoni","Menichetti","Meoni","Merlini","Messeri","Messina","Meucci","Miccinesi","Miceli","Micheli","Michelini","Michelozzi","Migliori","Migliorini","Milani","Miniati","Misuri","Monaco","Montagnani","Montagni","Montanari","Montelatici","Monti","Montigiani","Montini","Morandi","Morandini","Morelli","Moretti","Morganti","Mori","Morini","Moroni","Morozzi","Mugnai","Mugnaini","Mustafa","Naldi","Naldini","Nannelli","Nanni","Nannini","Nannucci","Nardi","Nardini","Nardoni","Natali","Ndiaye","Nencetti","Nencini","Nencioni","Neri","Nesi","Nesti","Niccolai","Niccoli","Niccolini","Nigi","Nistri","Nocentini","Noferini","Novelli","Nucci","Nuti","Nutini","Oliva","Olivieri","Olmi","Orlandi","Orlandini","Orlando","Orsini","Ortolani","Ottanelli","Pacciani","Pace","Paci","Pacini","Pagani","Pagano","Paggetti","Pagliai","Pagni","Pagnini","Paladini","Palagi","Palchetti","Palloni","Palmieri","Palumbo","Pampaloni","Pancani","Pandolfi","Pandolfini","Panerai","Panichi","Paoletti","Paoli","Paolini","Papi","Papini","Papucci","Parenti","Parigi","Parisi","Parri","Parrini","Pasquini","Passeri","Pecchioli","Pecorini","Pellegrini","Pepi","Perini","Perrone","Peruzzi","Pesci","Pestelli","Petri","Petrini","Petrucci","Pettini","Pezzati","Pezzatini","Piani","Piazza","Piazzesi","Piazzini","Piccardi","Picchi","Piccini","Piccioli","Pieraccini","Pieraccioni","Pieralli","Pierattini","Pieri","Pierini","Pieroni","Pietrini","Pini","Pinna","Pinto","Pinzani","Pinzauti","Piras","Pisani","Pistolesi","Poggesi","Poggi","Poggiali","Poggiolini","Poli","Pollastri","Porciani","Pozzi","Pratellesi","Pratesi","Prosperi","Pruneti","Pucci","Puccini","Puccioni","Pugi","Pugliese","Puliti","Querci","Quercioli","Raddi","Radu","Raffaelli","Ragazzini","Ranfagni","Ranieri","Rastrelli","Raugei","Raveggi","Renai","Renzi","Rettori","Ricci","Ricciardi","Ridi","Ridolfi","Rigacci","Righi","Righini","Rinaldi","Risaliti","Ristori","Rizzo","Rocchi","Rocchini","Rogai","Romagnoli","Romanelli","Romani","Romano","Romei","Romeo","Romiti","Romoli","Romolini","Rontini","Rosati","Roselli","Rosi","Rossetti","Rossi","Rossini","Rovai","Ruggeri","Ruggiero","Russo","Sabatini","Saccardi","Sacchetti","Sacchi","Sacco","Salerno","Salimbeni","Salucci","Salvadori","Salvestrini","Salvi","Salvini","Sanesi","Sani","Sanna","Santi","Santini","Santoni","Santoro","Santucci","Sardi","Sarri","Sarti","Sassi","Sbolci","Scali","Scarpelli","Scarselli","Scopetani","Secci","Selvi","Senatori","Senesi","Serafini","Sereni","Serra","Sestini","Sguanci","Sieni","Signorini","Silvestri","Simoncini","Simonetti","Simoni","Singh","Sodi","Soldi","Somigli","Sorbi","Sorelli","Sorrentino","Sottili","Spina","Spinelli","Staccioli","Staderini","Stefanelli","Stefani","Stefanini","Stella","Susini","Tacchi","Tacconi","Taddei","Tagliaferri","Tamburini","Tanganelli","Tani","Tanini","Tapinassi","Tarchi","Tarchiani","Targioni","Tassi","Tassini","Tempesti","Terzani","Tesi","Testa","Testi","Tilli","Tinti","Tirinnanzi","Toccafondi","Tofanari","Tofani","Tognaccini","Tonelli","Tonini","Torelli","Torrini","Tosi","Toti","Tozzi","Trambusti","Trapani","Tucci","Turchi","Ugolini","Ulivi","Valente","Valenti","Valentini","Vangelisti","Vanni","Vannini","Vannoni","Vannozzi","Vannucchi","Vannucci","Ventura","Venturi","Venturini","Vestri","Vettori","Vichi","Viciani","Vieri","Vigiani","Vignoli","Vignolini","Vignozzi","Villani","Vinci","Visani","Vitale","Vitali","Viti","Viviani","Vivoli","Volpe","Volpi","Wang","Wu","Xu","Yang","Ye","Zagli","Zani","Zanieri","Zanobini","Zecchi","Zetti","Zhang","Zheng","Zhou","Zhu","Zingoni","Zini","Zoppi"],nl:["Albers","Alblas","Appelman","Baars","Baas","Bakker","Blank","Bleeker","Blok","Blom","Boer","Boers","Boldewijn","Boon","Boot","Bos","Bosch","Bosma","Bosman","Bouma","Bouman","Bouwman","Brands","Brouwer","Burger","Buijs","Buitenhuis","Ceder","Cohen","Dekker","Dekkers","Dijkman","Dijkstra","Driessen","Drost","Engel","Evers","Faber","Franke","Gerritsen","Goedhart","Goossens","Groen","Groenenberg","Groot","Haan","Hart","Heemskerk","Hendriks","Hermans","Hoekstra","Hofman","Hopman","Huisman","Jacobs","Jansen","Janssen","Jonker","Jaspers","Keijzer","Klaassen","Klein","Koek","Koenders","Kok","Kool","Koopman","Koopmans","Koning","Koster","Kramer","Kroon","Kuijpers","Kuiper","Kuipers","Kurt","Koster","Kwakman","Los","Lubbers","Maas","Markus","Martens","Meijer","Mol","Molenaar","Mulder","Nieuwenhuis","Peeters","Peters","Pengel","Pieters","Pool","Post","Postma","Prins","Pronk","Reijnders","Rietveld","Roest","Roos","Sanders","Schaap","Scheffer","Schenk","Schilder","Schipper","Schmidt","Scholten","Schouten","Schut","Schutte","Schuurman","Simons","Smeets","Smit","Smits","Snel","Swinkels","Tas","Terpstra","Timmermans","Tol","Tromp","Troost","Valk","Veenstra","Veldkamp","Verbeek","Verheul","Verhoeven","Vermeer","Vermeulen","Verweij","Vink","Visser","Voorn","Vos","Wagenaar","Wiersema","Willems","Willemsen","Witteveen","Wolff","Wolters","Zijlstra","Zwart","de Beer","de Boer","de Bruijn","de Bruin","de Graaf","de Groot","de Haan","de Haas","de Jager","de Jong","de Jonge","de Koning","de Lange","de Leeuw","de Ridder","de Rooij","de Ruiter","de Vos","de Vries","de Waal","de Wit","de Zwart","van Beek","van Boven","van Dam","van Dijk","van Dongen","van Doorn","van Egmond","van Eijk","van Es","van Gelder","van Gelderen","van Houten","van Hulst","van Kempen","van Kesteren","van Leeuwen","van Loon","van Mill","van Noord","van Ommen","van Ommeren","van Oosten","van Oostveen","van Rijn","van Schaik","van Veen","van Vliet","van Wijk","van Wijngaarden","van den Poel","van de Pol","van den Ploeg","van de Ven","van den Berg","van den Bosch","van den Brink","van den Broek","van den Heuvel","van der Heijden","van der Horst","van der Hulst","van der Kroon","van der Laan","van der Linden","van der Meer","van der Meij","van der Meulen","van der Molen","van der Sluis","van der Spek","van der Veen","van der Velde","van der Velden","van der Vliet","van der Wal"],uk:["Smith","Jones","Williams","Taylor","Brown","Davies","Evans","Wilson","Thomas","Johnson","Roberts","Robinson","Thompson","Wright","Walker","White","Edwards","Hughes","Green","Hall","Lewis","Harris","Clarke","Patel","Jackson","Wood","Turner","Martin","Cooper","Hill","Ward","Morris","Moore","Clark","Lee","King","Baker","Harrison","Morgan","Allen","James","Scott","Phillips","Watson","Davis","Parker","Price","Bennett","Young","Griffiths","Mitchell","Kelly","Cook","Carter","Richardson","Bailey","Collins","Bell","Shaw","Murphy","Miller","Cox","Richards","Khan","Marshall","Anderson","Simpson","Ellis","Adams","Singh","Begum","Wilkinson","Foster","Chapman","Powell","Webb","Rogers","Gray","Mason","Ali","Hunt","Hussain","Campbell","Matthews","Owen","Palmer","Holmes","Mills","Barnes","Knight","Lloyd","Butler","Russell","Barker","Fisher","Stevens","Jenkins","Murray","Dixon","Harvey","Graham","Pearson","Ahmed","Fletcher","Walsh","Kaur","Gibson","Howard","Andrews","Stewart","Elliott","Reynolds","Saunders","Payne","Fox","Ford","Pearce","Day","Brooks","West","Lawrence","Cole","Atkinson","Bradley","Spencer","Gill","Dawson","Ball","Burton","O'brien","Watts","Rose","Booth","Perry","Ryan","Grant","Wells","Armstrong","Francis","Rees","Hayes","Hart","Hudson","Newman","Barrett","Webster","Hunter","Gregory","Carr","Lowe","Page","Marsh","Riley","Dunn","Woods","Parsons","Berry","Stone","Reid","Holland","Hawkins","Harding","Porter","Robertson","Newton","Oliver","Reed","Kennedy","Williamson","Bird","Gardner","Shah","Dean","Lane","Cooke","Bates","Henderson","Parry","Burgess","Bishop","Walton","Burns","Nicholson","Shepherd","Ross","Cross","Long","Freeman","Warren","Nicholls","Hamilton","Byrne","Sutton","Mcdonald","Yates","Hodgson","Robson","Curtis","Hopkins","O'connor","Harper","Coleman","Watkins","Moss","Mccarthy","Chambers","O'neill","Griffin","Sharp","Hardy","Wheeler","Potter","Osborne","Johnston","Gordon","Doyle","Wallace","George","Jordan","Hutchinson","Rowe","Burke","May","Pritchard","Gilbert","Willis","Higgins","Read","Miles","Stevenson","Stephenson","Hammond","Arnold","Buckley","Walters","Hewitt","Barber","Nelson","Slater","Austin","Sullivan","Whitehead","Mann","Frost","Lambert","Stephens","Blake","Akhtar","Lynch","Goodwin","Barton","Woodward","Thomson","Cunningham","Quinn","Barnett","Baxter","Bibi","Clayton","Nash","Greenwood","Jennings","Holt","Kemp","Poole","Gallagher","Bond","Stokes","Tucker","Davidson","Fowler","Heath","Norman","Middleton","Lawson","Banks","French","Stanley","Jarvis","Gibbs","Ferguson","Hayward","Carroll","Douglas","Dickinson","Todd","Barlow","Peters","Lucas","Knowles","Hartley","Miah","Simmons","Morton","Alexander","Field","Morrison","Norris","Townsend","Preston","Hancock","Thornton","Baldwin","Burrows","Briggs","Parkinson","Reeves","Macdonald","Lamb","Black","Abbott","Sanders","Thorpe","Holden","Tomlinson","Perkins","Ashton","Rhodes","Fuller","Howe","Bryant","Vaughan","Dale","Davey","Weston","Bartlett","Whittaker","Davison","Kent","Skinner","Birch","Morley","Daniels","Glover","Howell","Cartwright","Pugh","Humphreys","Goddard","Brennan","Wall","Kirby","Bowen","Savage","Bull","Wong","Dobson","Smart","Wilkins","Kirk","Fraser","Duffy","Hicks","Patterson","Bradshaw","Little","Archer","Warner","Waters","O'sullivan","Farrell","Brookes","Atkins","Kay","Dodd","Bentley","Flynn","John","Schofield","Short","Haynes","Wade","Butcher","Henry","Sanderson","Crawford","Sheppard","Bolton","Coates","Giles","Gould","Houghton","Gibbons","Pratt","Manning","Law","Hooper","Noble","Dyer","Rahman","Clements","Moran","Sykes","Chan","Doherty","Connolly","Joyce","Franklin","Hobbs","Coles","Herbert","Steele","Kerr","Leach","Winter","Owens","Duncan","Naylor","Fleming","Horton","Finch","Fitzgerald","Randall","Carpenter","Marsden","Browne","Garner","Pickering","Hale","Dennis","Vincent","Chadwick","Chandler","Sharpe","Nolan","Lyons","Hurst","Collier","Peacock","Howarth","Faulkner","Rice","Pollard","Welch","Norton","Gough","Sinclair","Blackburn","Bryan","Conway","Power","Cameron","Daly","Allan","Hanson","Gardiner","Boyle","Myers","Turnbull","Wallis","Mahmood","Sims","Swift","Iqbal","Pope","Brady","Chamberlain","Rowley","Tyler","Farmer","Metcalfe","Hilton","Godfrey","Holloway","Parkin","Bray","Talbot","Donnelly","Nixon","Charlton","Benson","Whitehouse","Barry","Hope","Lord","North","Storey","Connor","Potts","Bevan","Hargreaves","Mclean","Mistry","Bruce","Howells","Hyde","Parkes","Wyatt","Fry","Lees","O'donnell","Craig","Forster","Mckenzie","Humphries","Mellor","Carey","Ingram","Summers","Leonard"],de:["Müller","Schmidt","Schneider","Fischer","Weber","Meyer","Wagner","Becker","Schulz","Hoffmann","Schäfer","Koch","Bauer","Richter","Klein","Wolf","Schröder","Neumann","Schwarz","Zimmermann","Braun","Krüger","Hofmann","Hartmann","Lange","Schmitt","Werner","Schmitz","Krause","Meier","Lehmann","Schmid","Schulze","Maier","Köhler","Herrmann","König","Walter","Mayer","Huber","Kaiser","Fuchs","Peters","Lang","Scholz","Möller","Weiß","Jung","Hahn","Schubert","Vogel","Friedrich","Keller","Günther","Frank","Berger","Winkler","Roth","Beck","Lorenz","Baumann","Franke","Albrecht","Schuster","Simon","Ludwig","Böhm","Winter","Kraus","Martin","Schumacher","Krämer","Vogt","Stein","Jäger","Otto","Sommer","Groß","Seidel","Heinrich","Brandt","Haas","Schreiber","Graf","Schulte","Dietrich","Ziegler","Kuhn","Kühn","Pohl","Engel","Horn","Busch","Bergmann","Thomas","Voigt","Sauer","Arnold","Wolff","Pfeiffer"],jp:["Sato","Suzuki","Takahashi","Tanaka","Watanabe","Ito","Yamamoto","Nakamura","Kobayashi","Kato","Yoshida","Yamada","Sasaki","Yamaguchi","Saito","Matsumoto","Inoue","Kimura","Hayashi","Shimizu","Yamazaki","Mori","Abe","Ikeda","Hashimoto","Yamashita","Ishikawa","Nakajima","Maeda","Fujita","Ogawa","Goto","Okada","Hasegawa","Murakami","Kondo","Ishii","Saito","Sakamoto","Endo","Aoki","Fujii","Nishimura","Fukuda","Ota","Miura","Fujiwara","Okamoto","Matsuda","Nakagawa","Nakano","Harada","Ono","Tamura","Takeuchi","Kaneko","Wada","Nakayama","Ishida","Ueda","Morita","Hara","Shibata","Sakai","Kudo","Yokoyama","Miyazaki","Miyamoto","Uchida","Takagi","Ando","Taniguchi","Ohno","Maruyama","Imai","Takada","Fujimoto","Takeda","Murata","Ueno","Sugiyama","Masuda","Sugawara","Hirano","Kojima","Otsuka","Chiba","Kubo","Matsui","Iwasaki","Sakurai","Kinoshita","Noguchi","Matsuo","Nomura","Kikuchi","Sano","Onishi","Sugimoto","Arai"],es:["Garcia","Fernandez","Lopez","Martinez","Gonzalez","Rodriguez","Sanchez","Perez","Martin","Gomez","Ruiz","Diaz","Hernandez","Alvarez","Jimenez","Moreno","Munoz","Alonso","Romero","Navarro","Gutierrez","Torres","Dominguez","Gil","Vazquez","Blanco","Serrano","Ramos","Castro","Suarez","Sanz","Rubio","Ortega","Molina","Delgado","Ortiz","Morales","Ramirez","Marin","Iglesias","Santos","Castillo","Garrido","Calvo","Pena","Cruz","Cano","Nunez","Prieto","Diez","Lozano","Vidal","Pascual","Ferrer","Medina","Vega","Leon","Herrero","Vicente","Mendez","Guerrero","Fuentes","Campos","Nieto","Cortes","Caballero","Ibanez","Lorenzo","Pastor","Gimenez","Saez","Soler","Marquez","Carrasco","Herrera","Montero","Arias","Crespo","Flores","Andres","Aguilar","Hidalgo","Cabrera","Mora","Duran","Velasco","Rey","Pardo","Roman","Vila","Bravo","Merino","Moya","Soto","Izquierdo","Reyes","Redondo","Marcos","Carmona","Menendez"],fr:["Martin","Bernard","Thomas","Petit","Robert","Richard","Durand","Dubois","Moreau","Laurent","Simon","Michel","Lefèvre","Leroy","Roux","David","Bertrand","Morel","Fournier","Girard","Bonnet","Dupont","Lambert","Fontaine","Rousseau","Vincent","Müller","Lefèvre","Faure","André","Mercier","Blanc","Guérin","Boyer","Garnier","Chevalier","François","Legrand","Gauthier","Garcia","Perrin","Robin","Clément","Morin","Nicolas","Henry","Roussel","Matthieu","Gautier","Masson","Marchand","Duval","Denis","Dumont","Marie","Lemaire","Noël","Meyer","Dufour","Meunier","Brun","Blanchard","Giraud","Joly","Rivière","Lucas","Brunet","Gaillard","Barbier","Arnaud","Martínez","Gérard","Roche","Renard","Schmitt","Roy","Leroux","Colin","Vidal","Caron","Picard","Roger","Fabre","Aubert","Lemoine","Renaud","Dumas","Lacroix","Olivier","Philippe","Bourgeois","Pierre","Benoît","Rey","Leclerc","Payet","Rolland","Leclercq","Guillaume","Lecomte","López","Jean","Dupuy","Guillot","Hubert","Berger","Carpentier","Sánchez","Dupuis","Moulin","Louis","Deschamps","Huet","Vasseur","Perez","Boucher","Fleury","Royer","Klein","Jacquet","Adam","Paris","Poirier","Marty","Aubry","Guyot","Carré","Charles","Renault","Charpentier","Ménard","Maillard","Baron","Bertin","Bailly","Hervé","Schneider","Fernández","Le GallGall","Collet","Léger","Bouvier","Julien","Prévost","Millet","Perrot","Daniel","Le RouxRoux","Cousin","Germain","Breton","Besson","Langlois","Rémi","Le GoffGoff","Pelletier","Lévêque","Perrier","Leblanc","Barré","Lebrun","Marchal","Weber","Mallet","Hamon","Boulanger","Jacob","Monnier","Michaud","Rodríguez","Guichard","Gillet","Étienne","Grondin","Poulain","Tessier","Chevallier","Collin","Chauvin","Da SilvaSilva","Bouchet","Gay","Lemaître","Bénard","Maréchal","Humbert","Reynaud","Antoine","Hoarau","Perret","Barthélemy","Cordier","Pichon","Lejeune","Gilbert","Lamy","Delaunay","Pasquier","Carlier","LaporteLaporte"]},countries:[{name:"Afghanistan",abbreviation:"AF"},{name:"Åland Islands",abbreviation:"AX"},{name:"Albania",abbreviation:"AL"},{name:"Algeria",abbreviation:"DZ"},{name:"American Samoa",abbreviation:"AS"},{name:"Andorra",abbreviation:"AD"},{name:"Angola",abbreviation:"AO"},{name:"Anguilla",abbreviation:"AI"},{name:"Antarctica",abbreviation:"AQ"},{name:"Antigua & Barbuda",abbreviation:"AG"},{name:"Argentina",abbreviation:"AR"},{name:"Armenia",abbreviation:"AM"},{name:"Aruba",abbreviation:"AW"},{name:"Ascension Island",abbreviation:"AC"},{name:"Australia",abbreviation:"AU"},{name:"Austria",abbreviation:"AT"},{name:"Azerbaijan",abbreviation:"AZ"},{name:"Bahamas",abbreviation:"BS"},{name:"Bahrain",abbreviation:"BH"},{name:"Bangladesh",abbreviation:"BD"},{name:"Barbados",abbreviation:"BB"},{name:"Belarus",abbreviation:"BY"},{name:"Belgium",abbreviation:"BE"},{name:"Belize",abbreviation:"BZ"},{name:"Benin",abbreviation:"BJ"},{name:"Bermuda",abbreviation:"BM"},{name:"Bhutan",abbreviation:"BT"},{name:"Bolivia",abbreviation:"BO"},{name:"Bosnia & Herzegovina",abbreviation:"BA"},{name:"Botswana",abbreviation:"BW"},{name:"Brazil",abbreviation:"BR"},{name:"British Indian Ocean Territory",abbreviation:"IO"},{name:"British Virgin Islands",abbreviation:"VG"},{name:"Brunei",abbreviation:"BN"},{name:"Bulgaria",abbreviation:"BG"},{name:"Burkina Faso",abbreviation:"BF"},{name:"Burundi",abbreviation:"BI"},{name:"Cambodia",abbreviation:"KH"},{name:"Cameroon",abbreviation:"CM"},{name:"Canada",abbreviation:"CA"},{name:"Canary Islands",abbreviation:"IC"},{name:"Cape Verde",abbreviation:"CV"},{name:"Caribbean Netherlands",abbreviation:"BQ"},{name:"Cayman Islands",abbreviation:"KY"},{name:"Central African Republic",abbreviation:"CF"},{name:"Ceuta & Melilla",abbreviation:"EA"},{name:"Chad",abbreviation:"TD"},{name:"Chile",abbreviation:"CL"},{name:"China",abbreviation:"CN"},{name:"Christmas Island",abbreviation:"CX"},{name:"Cocos (Keeling) Islands",abbreviation:"CC"},{name:"Colombia",abbreviation:"CO"},{name:"Comoros",abbreviation:"KM"},{name:"Congo - Brazzaville",abbreviation:"CG"},{name:"Congo - Kinshasa",abbreviation:"CD"},{name:"Cook Islands",abbreviation:"CK"},{name:"Costa Rica",abbreviation:"CR"},{name:"Côte d'Ivoire",abbreviation:"CI"},{name:"Croatia",abbreviation:"HR"},{name:"Cuba",abbreviation:"CU"},{name:"Curaçao",abbreviation:"CW"},{name:"Cyprus",abbreviation:"CY"},{name:"Czech Republic",abbreviation:"CZ"},{name:"Denmark",abbreviation:"DK"},{name:"Diego Garcia",abbreviation:"DG"},{name:"Djibouti",abbreviation:"DJ"},{name:"Dominica",abbreviation:"DM"},{name:"Dominican Republic",abbreviation:"DO"},{name:"Ecuador",abbreviation:"EC"},{name:"Egypt",abbreviation:"EG"},{name:"El Salvador",abbreviation:"SV"},{name:"Equatorial Guinea",abbreviation:"GQ"},{name:"Eritrea",abbreviation:"ER"},{name:"Estonia",abbreviation:"EE"},{name:"Ethiopia",abbreviation:"ET"},{name:"Falkland Islands",abbreviation:"FK"},{name:"Faroe Islands",abbreviation:"FO"},{name:"Fiji",abbreviation:"FJ"},{name:"Finland",abbreviation:"FI"},{name:"France",abbreviation:"FR"},{name:"French Guiana",abbreviation:"GF"},{name:"French Polynesia",abbreviation:"PF"},{name:"French Southern Territories",abbreviation:"TF"},{name:"Gabon",abbreviation:"GA"},{name:"Gambia",abbreviation:"GM"},{name:"Georgia",abbreviation:"GE"},{name:"Germany",abbreviation:"DE"},{name:"Ghana",abbreviation:"GH"},{name:"Gibraltar",abbreviation:"GI"},{name:"Greece",abbreviation:"GR"},{name:"Greenland",abbreviation:"GL"},{name:"Grenada",abbreviation:"GD"},{name:"Guadeloupe",abbreviation:"GP"},{name:"Guam",abbreviation:"GU"},{name:"Guatemala",abbreviation:"GT"},{name:"Guernsey",abbreviation:"GG"},{name:"Guinea",abbreviation:"GN"},{name:"Guinea-Bissau",abbreviation:"GW"},{name:"Guyana",abbreviation:"GY"},{name:"Haiti",abbreviation:"HT"},{name:"Honduras",abbreviation:"HN"},{name:"Hong Kong SAR China",abbreviation:"HK"},{name:"Hungary",abbreviation:"HU"},{name:"Iceland",abbreviation:"IS"},{name:"India",abbreviation:"IN"},{name:"Indonesia",abbreviation:"ID"},{name:"Iran",abbreviation:"IR"},{name:"Iraq",abbreviation:"IQ"},{name:"Ireland",abbreviation:"IE"},{name:"Isle of Man",abbreviation:"IM"},{name:"Israel",abbreviation:"IL"},{name:"Italy",abbreviation:"IT"},{name:"Jamaica",abbreviation:"JM"},{name:"Japan",abbreviation:"JP"},{name:"Jersey",abbreviation:"JE"},{name:"Jordan",abbreviation:"JO"},{name:"Kazakhstan",abbreviation:"KZ"},{name:"Kenya",abbreviation:"KE"},{name:"Kiribati",abbreviation:"KI"},{name:"Kosovo",abbreviation:"XK"},{name:"Kuwait",abbreviation:"KW"},{name:"Kyrgyzstan",abbreviation:"KG"},{name:"Laos",abbreviation:"LA"},{name:"Latvia",abbreviation:"LV"},{name:"Lebanon",abbreviation:"LB"},{name:"Lesotho",abbreviation:"LS"},{name:"Liberia",abbreviation:"LR"},{name:"Libya",abbreviation:"LY"},{name:"Liechtenstein",abbreviation:"LI"},{name:"Lithuania",abbreviation:"LT"},{name:"Luxembourg",abbreviation:"LU"},{name:"Macau SAR China",abbreviation:"MO"},{name:"Macedonia",abbreviation:"MK"},{name:"Madagascar",abbreviation:"MG"},{name:"Malawi",abbreviation:"MW"},{name:"Malaysia",abbreviation:"MY"},{name:"Maldives",abbreviation:"MV"},{name:"Mali",abbreviation:"ML"},{name:"Malta",abbreviation:"MT"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Martinique",abbreviation:"MQ"},{name:"Mauritania",abbreviation:"MR"},{name:"Mauritius",abbreviation:"MU"},{name:"Mayotte",abbreviation:"YT"},{name:"Mexico",abbreviation:"MX"},{name:"Micronesia",abbreviation:"FM"},{name:"Moldova",abbreviation:"MD"},{name:"Monaco",abbreviation:"MC"},{name:"Mongolia",abbreviation:"MN"},{name:"Montenegro",abbreviation:"ME"},{name:"Montserrat",abbreviation:"MS"},{name:"Morocco",abbreviation:"MA"},{name:"Mozambique",abbreviation:"MZ"},{name:"Myanmar (Burma)",abbreviation:"MM"},{name:"Namibia",abbreviation:"NA"},{name:"Nauru",abbreviation:"NR"},{name:"Nepal",abbreviation:"NP"},{name:"Netherlands",abbreviation:"NL"},{name:"New Caledonia",abbreviation:"NC"},{name:"New Zealand",abbreviation:"NZ"},{name:"Nicaragua",abbreviation:"NI"},{name:"Niger",abbreviation:"NE"},{name:"Nigeria",abbreviation:"NG"},{name:"Niue",abbreviation:"NU"},{name:"Norfolk Island",abbreviation:"NF"},{name:"North Korea",abbreviation:"KP"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Norway",abbreviation:"NO"},{name:"Oman",abbreviation:"OM"},{name:"Pakistan",abbreviation:"PK"},{name:"Palau",abbreviation:"PW"},{name:"Palestinian Territories",abbreviation:"PS"},{name:"Panama",abbreviation:"PA"},{name:"Papua New Guinea",abbreviation:"PG"},{name:"Paraguay",abbreviation:"PY"},{name:"Peru",abbreviation:"PE"},{name:"Philippines",abbreviation:"PH"},{name:"Pitcairn Islands",abbreviation:"PN"},{name:"Poland",abbreviation:"PL"},{name:"Portugal",abbreviation:"PT"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Qatar",abbreviation:"QA"},{name:"Réunion",abbreviation:"RE"},{name:"Romania",abbreviation:"RO"},{name:"Russia",abbreviation:"RU"},{name:"Rwanda",abbreviation:"RW"},{name:"Samoa",abbreviation:"WS"},{name:"San Marino",abbreviation:"SM"},{name:"São Tomé and Príncipe",abbreviation:"ST"},{name:"Saudi Arabia",abbreviation:"SA"},{name:"Senegal",abbreviation:"SN"},{name:"Serbia",abbreviation:"RS"},{name:"Seychelles",abbreviation:"SC"},{name:"Sierra Leone",abbreviation:"SL"},{name:"Singapore",abbreviation:"SG"},{name:"Sint Maarten",abbreviation:"SX"},{name:"Slovakia",abbreviation:"SK"},{name:"Slovenia",abbreviation:"SI"},{name:"Solomon Islands",abbreviation:"SB"},{name:"Somalia",abbreviation:"SO"},{name:"South Africa",abbreviation:"ZA"},{name:"South Georgia & South Sandwich Islands",abbreviation:"GS"},{name:"South Korea",abbreviation:"KR"},{name:"South Sudan",abbreviation:"SS"},{name:"Spain",abbreviation:"ES"},{name:"Sri Lanka",abbreviation:"LK"},{name:"St. Barthélemy",abbreviation:"BL"},{name:"St. Helena",abbreviation:"SH"},{name:"St. Kitts & Nevis",abbreviation:"KN"},{name:"St. Lucia",abbreviation:"LC"},{name:"St. Martin",abbreviation:"MF"},{name:"St. Pierre & Miquelon",abbreviation:"PM"},{name:"St. Vincent & Grenadines",abbreviation:"VC"},{name:"Sudan",abbreviation:"SD"},{name:"Suriname",abbreviation:"SR"},{name:"Svalbard & Jan Mayen",abbreviation:"SJ"},{name:"Swaziland",abbreviation:"SZ"},{name:"Sweden",abbreviation:"SE"},{name:"Switzerland",abbreviation:"CH"},{name:"Syria",abbreviation:"SY"},{name:"Taiwan",abbreviation:"TW"},{name:"Tajikistan",abbreviation:"TJ"},{name:"Tanzania",abbreviation:"TZ"},{name:"Thailand",abbreviation:"TH"},{name:"Timor-Leste",abbreviation:"TL"},{name:"Togo",abbreviation:"TG"},{name:"Tokelau",abbreviation:"TK"},{name:"Tonga",abbreviation:"TO"},{name:"Trinidad & Tobago",abbreviation:"TT"},{name:"Tristan da Cunha",abbreviation:"TA"},{name:"Tunisia",abbreviation:"TN"},{name:"Turkey",abbreviation:"TR"},{name:"Turkmenistan",abbreviation:"TM"},{name:"Turks & Caicos Islands",abbreviation:"TC"},{name:"Tuvalu",abbreviation:"TV"},{name:"U.S. Outlying Islands",abbreviation:"UM"},{name:"U.S. Virgin Islands",abbreviation:"VI"},{name:"Uganda",abbreviation:"UG"},{name:"Ukraine",abbreviation:"UA"},{name:"United Arab Emirates",abbreviation:"AE"},{name:"United Kingdom",abbreviation:"GB"},{name:"United States",abbreviation:"US"},{name:"Uruguay",abbreviation:"UY"},{name:"Uzbekistan",abbreviation:"UZ"},{name:"Vanuatu",abbreviation:"VU"},{name:"Vatican City",abbreviation:"VA"},{name:"Venezuela",abbreviation:"VE"},{name:"Vietnam",abbreviation:"VN"},{name:"Wallis & Futuna",abbreviation:"WF"},{name:"Western Sahara",abbreviation:"EH"},{name:"Yemen",abbreviation:"YE"},{name:"Zambia",abbreviation:"ZM"},{name:"Zimbabwe",abbreviation:"ZW"}],counties:{uk:[{name:"Bath and North East Somerset"},{name:"Aberdeenshire"},{name:"Anglesey"},{name:"Angus"},{name:"Bedford"},{name:"Blackburn with Darwen"},{name:"Blackpool"},{name:"Bournemouth"},{name:"Bracknell Forest"},{name:"Brighton & Hove"},{name:"Bristol"},{name:"Buckinghamshire"},{name:"Cambridgeshire"},{name:"Carmarthenshire"},{name:"Central Bedfordshire"},{name:"Ceredigion"},{name:"Cheshire East"},{name:"Cheshire West and Chester"},{name:"Clackmannanshire"},{name:"Conwy"},{name:"Cornwall"},{name:"County Antrim"},{name:"County Armagh"},{name:"County Down"},{name:"County Durham"},{name:"County Fermanagh"},{name:"County Londonderry"},{name:"County Tyrone"},{name:"Cumbria"},{name:"Darlington"},{name:"Denbighshire"},{name:"Derby"},{name:"Derbyshire"},{name:"Devon"},{name:"Dorset"},{name:"Dumfries and Galloway"},{name:"Dundee"},{name:"East Lothian"},{name:"East Riding of Yorkshire"},{name:"East Sussex"},{name:"Edinburgh?"},{name:"Essex"},{name:"Falkirk"},{name:"Fife"},{name:"Flintshire"},{name:"Gloucestershire"},{name:"Greater London"},{name:"Greater Manchester"},{name:"Gwent"},{name:"Gwynedd"},{name:"Halton"},{name:"Hampshire"},{name:"Hartlepool"},{name:"Herefordshire"},{name:"Hertfordshire"},{name:"Highlands"},{name:"Hull"},{name:"Isle of Wight"},{name:"Isles of Scilly"},{name:"Kent"},{name:"Lancashire"},{name:"Leicester"},{name:"Leicestershire"},{name:"Lincolnshire"},{name:"Lothian"},{name:"Luton"},{name:"Medway"},{name:"Merseyside"},{name:"Mid Glamorgan"},{name:"Middlesbrough"},{name:"Milton Keynes"},{name:"Monmouthshire"},{name:"Moray"},{name:"Norfolk"},{name:"North East Lincolnshire"},{name:"North Lincolnshire"},{name:"North Somerset"},{name:"North Yorkshire"},{name:"Northamptonshire"},{name:"Northumberland"},{name:"Nottingham"},{name:"Nottinghamshire"},{name:"Oxfordshire"},{name:"Pembrokeshire"},{name:"Perth and Kinross"},{name:"Peterborough"},{name:"Plymouth"},{name:"Poole"},{name:"Portsmouth"},{name:"Powys"},{name:"Reading"},{name:"Redcar and Cleveland"},{name:"Rutland"},{name:"Scottish Borders"},{name:"Shropshire"},{name:"Slough"},{name:"Somerset"},{name:"South Glamorgan"},{name:"South Gloucestershire"},{name:"South Yorkshire"},{name:"Southampton"},{name:"Southend-on-Sea"},{name:"Staffordshire"},{name:"Stirlingshire"},{name:"Stockton-on-Tees"},{name:"Stoke-on-Trent"},{name:"Strathclyde"},{name:"Suffolk"},{name:"Surrey"},{name:"Swindon"},{name:"Telford and Wrekin"},{name:"Thurrock"},{name:"Torbay"},{name:"Tyne and Wear"},{name:"Warrington"},{name:"Warwickshire"},{name:"West Berkshire"},{name:"West Glamorgan"},{name:"West Lothian"},{name:"West Midlands"},{name:"West Sussex"},{name:"West Yorkshire"},{name:"Western Isles"},{name:"Wiltshire"},{name:"Windsor and Maidenhead"},{name:"Wokingham"},{name:"Worcestershire"},{name:"Wrexham"},{name:"York"}]},provinces:{ca:[{name:"Alberta",abbreviation:"AB"},{name:"British Columbia",abbreviation:"BC"},{name:"Manitoba",abbreviation:"MB"},{name:"New Brunswick",abbreviation:"NB"},{name:"Newfoundland and Labrador",abbreviation:"NL"},{name:"Nova Scotia",abbreviation:"NS"},{name:"Ontario",abbreviation:"ON"},{name:"Prince Edward Island",abbreviation:"PE"},{name:"Quebec",abbreviation:"QC"},{name:"Saskatchewan",abbreviation:"SK"},{name:"Northwest Territories",abbreviation:"NT"},{name:"Nunavut",abbreviation:"NU"},{name:"Yukon",abbreviation:"YT"}],it:[{name:"Agrigento",abbreviation:"AG",code:84},{name:"Alessandria",abbreviation:"AL",code:6},{name:"Ancona",abbreviation:"AN",code:42},{name:"Aosta",abbreviation:"AO",code:7},{name:"L'Aquila",abbreviation:"AQ",code:66},{name:"Arezzo",abbreviation:"AR",code:51},{name:"Ascoli-Piceno",abbreviation:"AP",code:44},{name:"Asti",abbreviation:"AT",code:5},{name:"Avellino",abbreviation:"AV",code:64},{name:"Bari",abbreviation:"BA",code:72},{name:"Barletta-Andria-Trani",abbreviation:"BT",code:72},{name:"Belluno",abbreviation:"BL",code:25},{name:"Benevento",abbreviation:"BN",code:62},{name:"Bergamo",abbreviation:"BG",code:16},{name:"Biella",abbreviation:"BI",code:96},{name:"Bologna",abbreviation:"BO",code:37},{name:"Bolzano",abbreviation:"BZ",code:21},{name:"Brescia",abbreviation:"BS",code:17},{name:"Brindisi",abbreviation:"BR",code:74},{name:"Cagliari",abbreviation:"CA",code:92},{name:"Caltanissetta",abbreviation:"CL",code:85},{name:"Campobasso",abbreviation:"CB",code:70},{name:"Carbonia Iglesias",abbreviation:"CI",code:70},{name:"Caserta",abbreviation:"CE",code:61},{name:"Catania",abbreviation:"CT",code:87},{name:"Catanzaro",abbreviation:"CZ",code:79},{name:"Chieti",abbreviation:"CH",code:69},{name:"Como",abbreviation:"CO",code:13},{name:"Cosenza",abbreviation:"CS",code:78},{name:"Cremona",abbreviation:"CR",code:19},{name:"Crotone",abbreviation:"KR",code:101},{name:"Cuneo",abbreviation:"CN",code:4},{name:"Enna",abbreviation:"EN",code:86},{name:"Fermo",abbreviation:"FM",code:86},{name:"Ferrara",abbreviation:"FE",code:38},{name:"Firenze",abbreviation:"FI",code:48},{name:"Foggia",abbreviation:"FG",code:71},{name:"Forli-Cesena",abbreviation:"FC",code:71},{name:"Frosinone",abbreviation:"FR",code:60},{name:"Genova",abbreviation:"GE",code:10},{name:"Gorizia",abbreviation:"GO",code:31},{name:"Grosseto",abbreviation:"GR",code:53},{name:"Imperia",abbreviation:"IM",code:8},{name:"Isernia",abbreviation:"IS",code:94},{name:"La-Spezia",abbreviation:"SP",code:66},{name:"Latina",abbreviation:"LT",code:59},{name:"Lecce",abbreviation:"LE",code:75},{name:"Lecco",abbreviation:"LC",code:97},{name:"Livorno",abbreviation:"LI",code:49},{name:"Lodi",abbreviation:"LO",code:98},{name:"Lucca",abbreviation:"LU",code:46},{name:"Macerata",abbreviation:"MC",code:43},{name:"Mantova",abbreviation:"MN",code:20},{name:"Massa-Carrara",abbreviation:"MS",code:45},{name:"Matera",abbreviation:"MT",code:77},{name:"Medio Campidano",abbreviation:"VS",code:77},{name:"Messina",abbreviation:"ME",code:83},{name:"Milano",abbreviation:"MI",code:15},{name:"Modena",abbreviation:"MO",code:36},{name:"Monza-Brianza",abbreviation:"MB",code:36},{name:"Napoli",abbreviation:"NA",code:63},{name:"Novara",abbreviation:"NO",code:3},{name:"Nuoro",abbreviation:"NU",code:91},{name:"Ogliastra",abbreviation:"OG",code:91},{name:"Olbia Tempio",abbreviation:"OT",code:91},{name:"Oristano",abbreviation:"OR",code:95},{name:"Padova",abbreviation:"PD",code:28},{name:"Palermo",abbreviation:"PA",code:82},{name:"Parma",abbreviation:"PR",code:34},{name:"Pavia",abbreviation:"PV",code:18},{name:"Perugia",abbreviation:"PG",code:54},{name:"Pesaro-Urbino",abbreviation:"PU",code:41},{name:"Pescara",abbreviation:"PE",code:68},{name:"Piacenza",abbreviation:"PC",code:33},{name:"Pisa",abbreviation:"PI",code:50},{name:"Pistoia",abbreviation:"PT",code:47},{name:"Pordenone",abbreviation:"PN",code:93},{name:"Potenza",abbreviation:"PZ",code:76},{name:"Prato",abbreviation:"PO",code:100},{name:"Ragusa",abbreviation:"RG",code:88},{name:"Ravenna",abbreviation:"RA",code:39},{name:"Reggio-Calabria",abbreviation:"RC",code:35},{name:"Reggio-Emilia",abbreviation:"RE",code:35},{name:"Rieti",abbreviation:"RI",code:57},{name:"Rimini",abbreviation:"RN",code:99},{name:"Roma",abbreviation:"Roma",code:58},{name:"Rovigo",abbreviation:"RO",code:29},{name:"Salerno",abbreviation:"SA",code:65},{name:"Sassari",abbreviation:"SS",code:90},{name:"Savona",abbreviation:"SV",code:9},{name:"Siena",abbreviation:"SI",code:52},{name:"Siracusa",abbreviation:"SR",code:89},{name:"Sondrio",abbreviation:"SO",code:14},{name:"Taranto",abbreviation:"TA",code:73},{name:"Teramo",abbreviation:"TE",code:67},{name:"Terni",abbreviation:"TR",code:55},{name:"Torino",abbreviation:"TO",code:1},{name:"Trapani",abbreviation:"TP",code:81},{name:"Trento",abbreviation:"TN",code:22},{name:"Treviso",abbreviation:"TV",code:26},{name:"Trieste",abbreviation:"TS",code:32},{name:"Udine",abbreviation:"UD",code:30},{name:"Varese",abbreviation:"VA",code:12},{name:"Venezia",abbreviation:"VE",code:27},{name:"Verbania",abbreviation:"VB",code:27},{name:"Vercelli",abbreviation:"VC",code:2},{name:"Verona",abbreviation:"VR",code:23},{name:"Vibo-Valentia",abbreviation:"VV",code:102},{name:"Vicenza",abbreviation:"VI",code:24},{name:"Viterbo",abbreviation:"VT",code:56}]},nationalities:[{name:"Afghan"},{name:"Albanian"},{name:"Algerian"},{name:"American"},{name:"Andorran"},{name:"Angolan"},{name:"Antiguans"},{name:"Argentinean"},{name:"Armenian"},{name:"Australian"},{name:"Austrian"},{name:"Azerbaijani"},{name:"Bahami"},{name:"Bahraini"},{name:"Bangladeshi"},{name:"Barbadian"},{name:"Barbudans"},{name:"Batswana"},{name:"Belarusian"},{name:"Belgian"},{name:"Belizean"},{name:"Beninese"},{name:"Bhutanese"},{name:"Bolivian"},{name:"Bosnian"},{name:"Brazilian"},{name:"British"},{name:"Bruneian"},{name:"Bulgarian"},{name:"Burkinabe"},{name:"Burmese"},{name:"Burundian"},{name:"Cambodian"},{name:"Cameroonian"},{name:"Canadian"},{name:"Cape Verdean"},{name:"Central African"},{name:"Chadian"},{name:"Chilean"},{name:"Chinese"},{name:"Colombian"},{name:"Comoran"},{name:"Congolese"},{name:"Costa Rican"},{name:"Croatian"},{name:"Cuban"},{name:"Cypriot"},{name:"Czech"},{name:"Danish"},{name:"Djibouti"},{name:"Dominican"},{name:"Dutch"},{name:"East Timorese"},{name:"Ecuadorean"},{name:"Egyptian"},{name:"Emirian"},{name:"Equatorial Guinean"},{name:"Eritrean"},{name:"Estonian"},{name:"Ethiopian"},{name:"Fijian"},{name:"Filipino"},{name:"Finnish"},{name:"French"},{name:"Gabonese"},{name:"Gambian"},{name:"Georgian"},{name:"German"},{name:"Ghanaian"},{name:"Greek"},{name:"Grenadian"},{name:"Guatemalan"},{name:"Guinea-Bissauan"},{name:"Guinean"},{name:"Guyanese"},{name:"Haitian"},{name:"Herzegovinian"},{name:"Honduran"},{name:"Hungarian"},{name:"I-Kiribati"},{name:"Icelander"},{name:"Indian"},{name:"Indonesian"},{name:"Iranian"},{name:"Iraqi"},{name:"Irish"},{name:"Israeli"},{name:"Italian"},{name:"Ivorian"},{name:"Jamaican"},{name:"Japanese"},{name:"Jordanian"},{name:"Kazakhstani"},{name:"Kenyan"},{name:"Kittian and Nevisian"},{name:"Kuwaiti"},{name:"Kyrgyz"},{name:"Laotian"},{name:"Latvian"},{name:"Lebanese"},{name:"Liberian"},{name:"Libyan"},{name:"Liechtensteiner"},{name:"Lithuanian"},{name:"Luxembourger"},{name:"Macedonian"},{name:"Malagasy"},{name:"Malawian"},{name:"Malaysian"},{name:"Maldivan"},{name:"Malian"},{name:"Maltese"},{name:"Marshallese"},{name:"Mauritanian"},{name:"Mauritian"},{name:"Mexican"},{name:"Micronesian"},{name:"Moldovan"},{name:"Monacan"},{name:"Mongolian"},{name:"Moroccan"},{name:"Mosotho"},{name:"Motswana"},{name:"Mozambican"},{name:"Namibian"},{name:"Nauruan"},{name:"Nepalese"},{name:"New Zealander"},{name:"Nicaraguan"},{name:"Nigerian"},{name:"Nigerien"},{name:"North Korean"},{name:"Northern Irish"},{name:"Norwegian"},{name:"Omani"},{name:"Pakistani"},{name:"Palauan"},{name:"Panamanian"},{name:"Papua New Guinean"},{name:"Paraguayan"},{name:"Peruvian"},{name:"Polish"},{name:"Portuguese"},{name:"Qatari"},{name:"Romani"},{name:"Russian"},{name:"Rwandan"},{name:"Saint Lucian"},{name:"Salvadoran"},{name:"Samoan"},{name:"San Marinese"},{name:"Sao Tomean"},{name:"Saudi"},{name:"Scottish"},{name:"Senegalese"},{name:"Serbian"},{name:"Seychellois"},{name:"Sierra Leonean"},{name:"Singaporean"},{name:"Slovakian"},{name:"Slovenian"},{name:"Solomon Islander"},{name:"Somali"},{name:"South African"},{name:"South Korean"},{name:"Spanish"},{name:"Sri Lankan"},{name:"Sudanese"},{name:"Surinamer"},{name:"Swazi"},{name:"Swedish"},{name:"Swiss"},{name:"Syrian"},{name:"Taiwanese"},{name:"Tajik"},{name:"Tanzanian"},{name:"Thai"},{name:"Togolese"},{name:"Tongan"},{name:"Trinidadian or Tobagonian"},{name:"Tunisian"},{name:"Turkish"},{name:"Tuvaluan"},{name:"Ugandan"},{name:"Ukrainian"},{name:"Uruguaya"},{name:"Uzbekistani"},{name:"Venezuela"},{name:"Vietnamese"},{name:"Wels"},{name:"Yemenit"},{name:"Zambia"},{name:"Zimbabwe"}],locale_languages:["aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu"],locale_regions:["agq-CM","asa-TZ","ast-ES","bas-CM","bem-ZM","bez-TZ","brx-IN","cgg-UG","chr-US","dav-KE","dje-NE","dsb-DE","dua-CM","dyo-SN","ebu-KE","ewo-CM","fil-PH","fur-IT","gsw-CH","gsw-FR","gsw-LI","guz-KE","haw-US","hsb-DE","jgo-CM","jmc-TZ","kab-DZ","kam-KE","kde-TZ","kea-CV","khq-ML","kkj-CM","kln-KE","kok-IN","ksb-TZ","ksf-CM","ksh-DE","lag-TZ","lkt-US","luo-KE","luy-KE","mas-KE","mas-TZ","mer-KE","mfe-MU","mgh-MZ","mgo-CM","mua-CM","naq-NA","nmg-CM","nnh-CM","nus-SD","nyn-UG","rof-TZ","rwk-TZ","sah-RU","saq-KE","sbp-TZ","seh-MZ","ses-ML","shi-Latn","shi-Latn-MA","shi-Tfng","shi-Tfng-MA","smn-FI","teo-KE","teo-UG","twq-NE","tzm-Latn","tzm-Latn-MA","vai-Latn","vai-Latn-LR","vai-Vaii","vai-Vaii-LR","vun-TZ","wae-CH","xog-UG","yav-CM","zgh-MA","af-NA","af-ZA","ak-GH","am-ET","ar-001","ar-AE","ar-BH","ar-DJ","ar-DZ","ar-EG","ar-EH","ar-ER","ar-IL","ar-IQ","ar-JO","ar-KM","ar-KW","ar-LB","ar-LY","ar-MA","ar-MR","ar-OM","ar-PS","ar-QA","ar-SA","ar-SD","ar-SO","ar-SS","ar-SY","ar-TD","ar-TN","ar-YE","as-IN","az-Cyrl","az-Cyrl-AZ","az-Latn","az-Latn-AZ","be-BY","bg-BG","bm-Latn","bm-Latn-ML","bn-BD","bn-IN","bo-CN","bo-IN","br-FR","bs-Cyrl","bs-Cyrl-BA","bs-Latn","bs-Latn-BA","ca-AD","ca-ES","ca-ES-VALENCIA","ca-FR","ca-IT","cs-CZ","cy-GB","da-DK","da-GL","de-AT","de-BE","de-CH","de-DE","de-LI","de-LU","dz-BT","ee-GH","ee-TG","el-CY","el-GR","en-001","en-150","en-AG","en-AI","en-AS","en-AU","en-BB","en-BE","en-BM","en-BS","en-BW","en-BZ","en-CA","en-CC","en-CK","en-CM","en-CX","en-DG","en-DM","en-ER","en-FJ","en-FK","en-FM","en-GB","en-GD","en-GG","en-GH","en-GI","en-GM","en-GU","en-GY","en-HK","en-IE","en-IM","en-IN","en-IO","en-JE","en-JM","en-KE","en-KI","en-KN","en-KY","en-LC","en-LR","en-LS","en-MG","en-MH","en-MO","en-MP","en-MS","en-MT","en-MU","en-MW","en-MY","en-NA","en-NF","en-NG","en-NR","en-NU","en-NZ","en-PG","en-PH","en-PK","en-PN","en-PR","en-PW","en-RW","en-SB","en-SC","en-SD","en-SG","en-SH","en-SL","en-SS","en-SX","en-SZ","en-TC","en-TK","en-TO","en-TT","en-TV","en-TZ","en-UG","en-UM","en-US","en-US-POSIX","en-VC","en-VG","en-VI","en-VU","en-WS","en-ZA","en-ZM","en-ZW","eo-001","es-419","es-AR","es-BO","es-CL","es-CO","es-CR","es-CU","es-DO","es-EA","es-EC","es-ES","es-GQ","es-GT","es-HN","es-IC","es-MX","es-NI","es-PA","es-PE","es-PH","es-PR","es-PY","es-SV","es-US","es-UY","es-VE","et-EE","eu-ES","fa-AF","fa-IR","ff-CM","ff-GN","ff-MR","ff-SN","fi-FI","fo-FO","fr-BE","fr-BF","fr-BI","fr-BJ","fr-BL","fr-CA","fr-CD","fr-CF","fr-CG","fr-CH","fr-CI","fr-CM","fr-DJ","fr-DZ","fr-FR","fr-GA","fr-GF","fr-GN","fr-GP","fr-GQ","fr-HT","fr-KM","fr-LU","fr-MA","fr-MC","fr-MF","fr-MG","fr-ML","fr-MQ","fr-MR","fr-MU","fr-NC","fr-NE","fr-PF","fr-PM","fr-RE","fr-RW","fr-SC","fr-SN","fr-SY","fr-TD","fr-TG","fr-TN","fr-VU","fr-WF","fr-YT","fy-NL","ga-IE","gd-GB","gl-ES","gu-IN","gv-IM","ha-Latn","ha-Latn-GH","ha-Latn-NE","ha-Latn-NG","he-IL","hi-IN","hr-BA","hr-HR","hu-HU","hy-AM","id-ID","ig-NG","ii-CN","is-IS","it-CH","it-IT","it-SM","ja-JP","ka-GE","ki-KE","kk-Cyrl","kk-Cyrl-KZ","kl-GL","km-KH","kn-IN","ko-KP","ko-KR","ks-Arab","ks-Arab-IN","kw-GB","ky-Cyrl","ky-Cyrl-KG","lb-LU","lg-UG","ln-AO","ln-CD","ln-CF","ln-CG","lo-LA","lt-LT","lu-CD","lv-LV","mg-MG","mk-MK","ml-IN","mn-Cyrl","mn-Cyrl-MN","mr-IN","ms-Latn","ms-Latn-BN","ms-Latn-MY","ms-Latn-SG","mt-MT","my-MM","nb-NO","nb-SJ","nd-ZW","ne-IN","ne-NP","nl-AW","nl-BE","nl-BQ","nl-CW","nl-NL","nl-SR","nl-SX","nn-NO","om-ET","om-KE","or-IN","os-GE","os-RU","pa-Arab","pa-Arab-PK","pa-Guru","pa-Guru-IN","pl-PL","ps-AF","pt-AO","pt-BR","pt-CV","pt-GW","pt-MO","pt-MZ","pt-PT","pt-ST","pt-TL","qu-BO","qu-EC","qu-PE","rm-CH","rn-BI","ro-MD","ro-RO","ru-BY","ru-KG","ru-KZ","ru-MD","ru-RU","ru-UA","rw-RW","se-FI","se-NO","se-SE","sg-CF","si-LK","sk-SK","sl-SI","sn-ZW","so-DJ","so-ET","so-KE","so-SO","sq-AL","sq-MK","sq-XK","sr-Cyrl","sr-Cyrl-BA","sr-Cyrl-ME","sr-Cyrl-RS","sr-Cyrl-XK","sr-Latn","sr-Latn-BA","sr-Latn-ME","sr-Latn-RS","sr-Latn-XK","sv-AX","sv-FI","sv-SE","sw-CD","sw-KE","sw-TZ","sw-UG","ta-IN","ta-LK","ta-MY","ta-SG","te-IN","th-TH","ti-ER","ti-ET","to-TO","tr-CY","tr-TR","ug-Arab","ug-Arab-CN","uk-UA","ur-IN","ur-PK","uz-Arab","uz-Arab-AF","uz-Cyrl","uz-Cyrl-UZ","uz-Latn","uz-Latn-UZ","vi-VN","yi-001","yo-BJ","yo-NG","zh-Hans","zh-Hans-CN","zh-Hans-HK","zh-Hans-MO","zh-Hans-SG","zh-Hant","zh-Hant-HK","zh-Hant-MO","zh-Hant-TW","zu-ZA"],us_states_and_dc:[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}],territories:[{name:"American Samoa",abbreviation:"AS"},{name:"Federated States of Micronesia",abbreviation:"FM"},{name:"Guam",abbreviation:"GU"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Virgin Islands, U.S.",abbreviation:"VI"}],armed_forces:[{name:"Armed Forces Europe",abbreviation:"AE"},{name:"Armed Forces Pacific",abbreviation:"AP"},{name:"Armed Forces the Americas",abbreviation:"AA"}],country_regions:{it:[{name:"Valle d'Aosta",abbreviation:"VDA"},{name:"Piemonte",abbreviation:"PIE"},{name:"Lombardia",abbreviation:"LOM"},{name:"Veneto",abbreviation:"VEN"},{name:"Trentino Alto Adige",abbreviation:"TAA"},{name:"Friuli Venezia Giulia",abbreviation:"FVG"},{name:"Liguria",abbreviation:"LIG"},{name:"Emilia Romagna",abbreviation:"EMR"},{name:"Toscana",abbreviation:"TOS"},{name:"Umbria",abbreviation:"UMB"},{name:"Marche",abbreviation:"MAR"},{name:"Abruzzo",abbreviation:"ABR"},{name:"Lazio",abbreviation:"LAZ"},{name:"Campania",abbreviation:"CAM"},{name:"Puglia",abbreviation:"PUG"},{name:"Basilicata",abbreviation:"BAS"},{name:"Molise",abbreviation:"MOL"},{name:"Calabria",abbreviation:"CAL"},{name:"Sicilia",abbreviation:"SIC"},{name:"Sardegna",abbreviation:"SAR"}]},street_suffixes:{us:[{name:"Avenue",abbreviation:"Ave"},{name:"Boulevard",abbreviation:"Blvd"},{name:"Center",abbreviation:"Ctr"},{name:"Circle",abbreviation:"Cir"},{name:"Court",abbreviation:"Ct"},{name:"Drive",abbreviation:"Dr"},{name:"Extension",abbreviation:"Ext"},{name:"Glen",abbreviation:"Gln"},{name:"Grove",abbreviation:"Grv"},{name:"Heights",abbreviation:"Hts"},{name:"Highway",abbreviation:"Hwy"},{name:"Junction",abbreviation:"Jct"},{name:"Key",abbreviation:"Key"},{name:"Lane",abbreviation:"Ln"},{name:"Loop",abbreviation:"Loop"},{name:"Manor",abbreviation:"Mnr"},{name:"Mill",abbreviation:"Mill"},{name:"Park",abbreviation:"Park"},{name:"Parkway",abbreviation:"Pkwy"},{name:"Pass",abbreviation:"Pass"},{name:"Path",abbreviation:"Path"},{name:"Pike",abbreviation:"Pike"},{name:"Place",abbreviation:"Pl"},{name:"Plaza",abbreviation:"Plz"},{name:"Point",abbreviation:"Pt"},{name:"Ridge",abbreviation:"Rdg"},{name:"River",abbreviation:"Riv"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Trail",abbreviation:"Trl"},{name:"Turnpike",abbreviation:"Tpke"},{name:"View",abbreviation:"Vw"},{name:"Way",abbreviation:"Way"}],it:[{name:"Accesso",abbreviation:"Acc."},{name:"Alzaia",abbreviation:"Alz."},{name:"Arco",abbreviation:"Arco"},{name:"Archivolto",abbreviation:"Acv."},{name:"Arena",abbreviation:"Arena"},{name:"Argine",abbreviation:"Argine"},{name:"Bacino",abbreviation:"Bacino"},{name:"Banchi",abbreviation:"Banchi"},{name:"Banchina",abbreviation:"Ban."},{name:"Bastioni",abbreviation:"Bas."},{name:"Belvedere",abbreviation:"Belv."},{name:"Borgata",abbreviation:"B.ta"},{name:"Borgo",abbreviation:"B.go"},{name:"Calata",abbreviation:"Cal."},{name:"Calle",abbreviation:"Calle"},{name:"Campiello",abbreviation:"Cam."},{name:"Campo",abbreviation:"Cam."},{name:"Canale",abbreviation:"Can."},{name:"Carraia",abbreviation:"Carr."},{name:"Cascina",abbreviation:"Cascina"},{name:"Case sparse",abbreviation:"c.s."},{name:"Cavalcavia",abbreviation:"Cv."},{name:"Circonvallazione",abbreviation:"Cv."},{name:"Complanare",abbreviation:"C.re"},{name:"Contrada",abbreviation:"C.da"},{name:"Corso",abbreviation:"C.so"},{name:"Corte",abbreviation:"C.te"},{name:"Cortile",abbreviation:"C.le"},{name:"Diramazione",abbreviation:"Dir."},{name:"Fondaco",abbreviation:"F.co"},{name:"Fondamenta",abbreviation:"F.ta"},{name:"Fondo",abbreviation:"F.do"},{name:"Frazione",abbreviation:"Fr."},{name:"Isola",abbreviation:"Is."},{name:"Largo",abbreviation:"L.go"},{name:"Litoranea",abbreviation:"Lit."},{name:"Lungolago",abbreviation:"L.go lago"},{name:"Lungo Po",abbreviation:"l.go Po"},{name:"Molo",abbreviation:"Molo"},{name:"Mura",abbreviation:"Mura"},{name:"Passaggio privato",abbreviation:"pass. priv."},{name:"Passeggiata",abbreviation:"Pass."},{name:"Piazza",abbreviation:"P.zza"},{name:"Piazzale",abbreviation:"P.le"},{name:"Ponte",abbreviation:"P.te"},{name:"Portico",abbreviation:"P.co"},{name:"Rampa",abbreviation:"Rampa"},{name:"Regione",abbreviation:"Reg."},{name:"Rione",abbreviation:"R.ne"},{name:"Rio",abbreviation:"Rio"},{name:"Ripa",abbreviation:"Ripa"},{name:"Riva",abbreviation:"Riva"},{name:"Rondò",abbreviation:"Rondò"},{name:"Rotonda",abbreviation:"Rot."},{name:"Sagrato",abbreviation:"Sagr."},{name:"Salita",abbreviation:"Sal."},{name:"Scalinata",abbreviation:"Scal."},{name:"Scalone",abbreviation:"Scal."},{name:"Slargo",abbreviation:"Sl."},{name:"Sottoportico",abbreviation:"Sott."},{name:"Strada",abbreviation:"Str."},{name:"Stradale",abbreviation:"Str.le"},{name:"Strettoia",abbreviation:"Strett."},{name:"Traversa",abbreviation:"Trav."},{name:"Via",abbreviation:"V."},{name:"Viale",abbreviation:"V.le"},{name:"Vicinale",abbreviation:"Vic.le"},{name:"Vicolo",abbreviation:"Vic."}],uk:[{name:"Avenue",abbreviation:"Ave"},{name:"Close",abbreviation:"Cl"},{name:"Court",abbreviation:"Ct"},{name:"Crescent",abbreviation:"Cr"},{name:"Drive",abbreviation:"Dr"},{name:"Garden",abbreviation:"Gdn"},{name:"Gardens",abbreviation:"Gdns"},{name:"Green",abbreviation:"Gn"},{name:"Grove",abbreviation:"Gr"},{name:"Lane",abbreviation:"Ln"},{name:"Mount",abbreviation:"Mt"},{name:"Place",abbreviation:"Pl"},{name:"Park",abbreviation:"Pk"},{name:"Ridge",abbreviation:"Rdg"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Valley",abbreviation:"Val"}]},months:[{name:"January",short_name:"Jan",numeric:"01",days:31},{name:"February",short_name:"Feb",numeric:"02",days:28},{name:"March",short_name:"Mar",numeric:"03",days:31},{name:"April",short_name:"Apr",numeric:"04",days:30},{name:"May",short_name:"May",numeric:"05",days:31},{name:"June",short_name:"Jun",numeric:"06",days:30},{name:"July",short_name:"Jul",numeric:"07",days:31},{name:"August",short_name:"Aug",numeric:"08",days:31},{name:"September",short_name:"Sep",numeric:"09",days:30},{name:"October",short_name:"Oct",numeric:"10",days:31},{name:"November",short_name:"Nov",numeric:"11",days:30},{name:"December",short_name:"Dec",numeric:"12",days:31}],cc_types:[{name:"American Express",short_name:"amex",prefix:"34",length:15},{name:"Bankcard",short_name:"bankcard",prefix:"5610",length:16},{name:"China UnionPay",short_name:"chinaunion",prefix:"62",length:16},{name:"Diners Club Carte Blanche",short_name:"dccarte",prefix:"300",length:14},{name:"Diners Club enRoute",short_name:"dcenroute",prefix:"2014",length:15},{name:"Diners Club International",short_name:"dcintl",prefix:"36",length:14},{name:"Diners Club United States & Canada",short_name:"dcusc",prefix:"54",length:16},{name:"Discover Card",short_name:"discover",prefix:"6011",length:16},{name:"InstaPayment",short_name:"instapay",prefix:"637",length:16},{name:"JCB",short_name:"jcb",prefix:"3528",length:16},{name:"Laser",short_name:"laser",prefix:"6304",length:16},{name:"Maestro",short_name:"maestro",prefix:"5018",length:16},{name:"Mastercard",short_name:"mc",prefix:"51",length:16},{name:"Solo",short_name:"solo",prefix:"6334",length:16},{name:"Switch",short_name:"switch",prefix:"4903",length:16},{name:"Visa",short_name:"visa",prefix:"4",length:16},{name:"Visa Electron",short_name:"electron",prefix:"4026",length:16}],currency_types:[{code:"AED",name:"United Arab Emirates Dirham"},{code:"AFN",name:"Afghanistan Afghani"},{code:"ALL",name:"Albania Lek"},{code:"AMD",name:"Armenia Dram"},{code:"ANG",name:"Netherlands Antilles Guilder"},{code:"AOA",name:"Angola Kwanza"},{code:"ARS",name:"Argentina Peso"},{code:"AUD",name:"Australia Dollar"},{code:"AWG",name:"Aruba Guilder"},{code:"AZN",name:"Azerbaijan New Manat"},{code:"BAM",name:"Bosnia and Herzegovina Convertible Marka"},{code:"BBD",name:"Barbados Dollar"},{code:"BDT",name:"Bangladesh Taka"},{code:"BGN",name:"Bulgaria Lev"},{code:"BHD",name:"Bahrain Dinar"},{code:"BIF",name:"Burundi Franc"},{code:"BMD",name:"Bermuda Dollar"},{code:"BND",name:"Brunei Darussalam Dollar"},{code:"BOB",name:"Bolivia Boliviano"},{code:"BRL",name:"Brazil Real"},{code:"BSD",name:"Bahamas Dollar"},{code:"BTN",name:"Bhutan Ngultrum"},{code:"BWP",name:"Botswana Pula"},{code:"BYR",name:"Belarus Ruble"},{code:"BZD",name:"Belize Dollar"},{code:"CAD",name:"Canada Dollar"},{code:"CDF",name:"Congo/Kinshasa Franc"},{code:"CHF",name:"Switzerland Franc"},{code:"CLP",name:"Chile Peso"},{code:"CNY",name:"China Yuan Renminbi"},{code:"COP",name:"Colombia Peso"},{code:"CRC",name:"Costa Rica Colon"},{code:"CUC",name:"Cuba Convertible Peso"},{code:"CUP",name:"Cuba Peso"},{code:"CVE",name:"Cape Verde Escudo"},{code:"CZK",name:"Czech Republic Koruna"},{code:"DJF",name:"Djibouti Franc"},{code:"DKK",name:"Denmark Krone"},{code:"DOP",name:"Dominican Republic Peso"},{code:"DZD",name:"Algeria Dinar"},{code:"EGP",name:"Egypt Pound"},{code:"ERN",name:"Eritrea Nakfa"},{code:"ETB",name:"Ethiopia Birr"},{code:"EUR",name:"Euro Member Countries"},{code:"FJD",name:"Fiji Dollar"},{code:"FKP",name:"Falkland Islands (Malvinas) Pound"},{code:"GBP",name:"United Kingdom Pound"},{code:"GEL",name:"Georgia Lari"},{code:"GGP",name:"Guernsey Pound"},{code:"GHS",name:"Ghana Cedi"},{code:"GIP",name:"Gibraltar Pound"},{code:"GMD",name:"Gambia Dalasi"},{code:"GNF",name:"Guinea Franc"},{code:"GTQ",name:"Guatemala Quetzal"},{code:"GYD",name:"Guyana Dollar"},{code:"HKD",name:"Hong Kong Dollar"},{code:"HNL",name:"Honduras Lempira"},{code:"HRK",name:"Croatia Kuna"},{code:"HTG",name:"Haiti Gourde"},{code:"HUF",name:"Hungary Forint"},{code:"IDR",name:"Indonesia Rupiah"},{code:"ILS",name:"Israel Shekel"},{code:"IMP",name:"Isle of Man Pound"},{code:"INR",name:"India Rupee"},{code:"IQD",name:"Iraq Dinar"},{code:"IRR",name:"Iran Rial"},{code:"ISK",name:"Iceland Krona"},{code:"JEP",name:"Jersey Pound"},{code:"JMD",name:"Jamaica Dollar"},{code:"JOD",name:"Jordan Dinar"},{code:"JPY",name:"Japan Yen"},{code:"KES",name:"Kenya Shilling"},{code:"KGS",name:"Kyrgyzstan Som"},{code:"KHR",name:"Cambodia Riel"},{code:"KMF",name:"Comoros Franc"},{code:"KPW",name:"Korea (North) Won"},{code:"KRW",name:"Korea (South) Won"},{code:"KWD",name:"Kuwait Dinar"},{code:"KYD",name:"Cayman Islands Dollar"},{code:"KZT",name:"Kazakhstan Tenge"},{code:"LAK",name:"Laos Kip"},{code:"LBP",name:"Lebanon Pound"},{code:"LKR",name:"Sri Lanka Rupee"},{code:"LRD",name:"Liberia Dollar"},{code:"LSL",name:"Lesotho Loti"},{code:"LTL",name:"Lithuania Litas"},{code:"LYD",name:"Libya Dinar"},{code:"MAD",name:"Morocco Dirham"},{code:"MDL",name:"Moldova Leu"},{code:"MGA",name:"Madagascar Ariary"},{code:"MKD",name:"Macedonia Denar"},{code:"MMK",name:"Myanmar (Burma) Kyat"},{code:"MNT",name:"Mongolia Tughrik"},{code:"MOP",name:"Macau Pataca"},{code:"MRO",name:"Mauritania Ouguiya"},{code:"MUR",name:"Mauritius Rupee"},{code:"MVR",name:"Maldives (Maldive Islands) Rufiyaa"},{code:"MWK",name:"Malawi Kwacha"},{code:"MXN",name:"Mexico Peso"},{code:"MYR",name:"Malaysia Ringgit"},{code:"MZN",name:"Mozambique Metical"},{code:"NAD",name:"Namibia Dollar"},{code:"NGN",name:"Nigeria Naira"},{code:"NIO",name:"Nicaragua Cordoba"},{code:"NOK",name:"Norway Krone"},{code:"NPR",name:"Nepal Rupee"},{code:"NZD",name:"New Zealand Dollar"},{code:"OMR",name:"Oman Rial"},{code:"PAB",name:"Panama Balboa"},{code:"PEN",name:"Peru Nuevo Sol"},{code:"PGK",name:"Papua New Guinea Kina"},{code:"PHP",name:"Philippines Peso"},{code:"PKR",name:"Pakistan Rupee"},{code:"PLN",name:"Poland Zloty"},{code:"PYG",name:"Paraguay Guarani"},{code:"QAR",name:"Qatar Riyal"},{code:"RON",name:"Romania New Leu"},{code:"RSD",name:"Serbia Dinar"},{code:"RUB",name:"Russia Ruble"},{code:"RWF",name:"Rwanda Franc"},{code:"SAR",name:"Saudi Arabia Riyal"},{code:"SBD",name:"Solomon Islands Dollar"},{code:"SCR",name:"Seychelles Rupee"},{code:"SDG",name:"Sudan Pound"},{code:"SEK",name:"Sweden Krona"},{code:"SGD",name:"Singapore Dollar"},{code:"SHP",name:"Saint Helena Pound"},{code:"SLL",name:"Sierra Leone Leone"},{code:"SOS",name:"Somalia Shilling"},{code:"SPL",name:"Seborga Luigino"},{code:"SRD",name:"Suriname Dollar"},{code:"STD",name:"São Tomé and Príncipe Dobra"},{code:"SVC",name:"El Salvador Colon"},{code:"SYP",name:"Syria Pound"},{code:"SZL",name:"Swaziland Lilangeni"},{code:"THB",name:"Thailand Baht"},{code:"TJS",name:"Tajikistan Somoni"},{code:"TMT",name:"Turkmenistan Manat"},{code:"TND",name:"Tunisia Dinar"},{code:"TOP",name:"Tonga Pa'anga"},{code:"TRY",name:"Turkey Lira"},{code:"TTD",name:"Trinidad and Tobago Dollar"},{code:"TVD",name:"Tuvalu Dollar"},{code:"TWD",name:"Taiwan New Dollar"},{code:"TZS",name:"Tanzania Shilling"},{code:"UAH",name:"Ukraine Hryvnia"},{code:"UGX",name:"Uganda Shilling"},{code:"USD",name:"United States Dollar"},{code:"UYU",name:"Uruguay Peso"},{code:"UZS",name:"Uzbekistan Som"},{code:"VEF",name:"Venezuela Bolivar"},{code:"VND",name:"Viet Nam Dong"},{code:"VUV",name:"Vanuatu Vatu"},{code:"WST",name:"Samoa Tala"},{code:"XAF",name:"Communauté Financière Africaine (BEAC) CFA Franc BEAC"},{code:"XCD",name:"East Caribbean Dollar"},{code:"XDR",name:"International Monetary Fund (IMF) Special Drawing Rights"},{code:"XOF",name:"Communauté Financière Africaine (BCEAO) Franc"},{code:"XPF",name:"Comptoirs Français du Pacifique (CFP) Franc"},{code:"YER",name:"Yemen Rial"},{code:"ZAR",name:"South Africa Rand"},{code:"ZMW",name:"Zambia Kwacha"},{code:"ZWD",name:"Zimbabwe Dollar"}],colorNames:["AliceBlue","Black","Navy","DarkBlue","MediumBlue","Blue","DarkGreen","Green","Teal","DarkCyan","DeepSkyBlue","DarkTurquoise","MediumSpringGreen","Lime","SpringGreen","Aqua","Cyan","MidnightBlue","DodgerBlue","LightSeaGreen","ForestGreen","SeaGreen","DarkSlateGray","LimeGreen","MediumSeaGreen","Turquoise","RoyalBlue","SteelBlue","DarkSlateBlue","MediumTurquoise","Indigo","DarkOliveGreen","CadetBlue","CornflowerBlue","RebeccaPurple","MediumAquaMarine","DimGray","SlateBlue","OliveDrab","SlateGray","LightSlateGray","MediumSlateBlue","LawnGreen","Chartreuse","Aquamarine","Maroon","Purple","Olive","Gray","SkyBlue","LightSkyBlue","BlueViolet","DarkRed","DarkMagenta","SaddleBrown","Ivory","White","DarkSeaGreen","LightGreen","MediumPurple","DarkViolet","PaleGreen","DarkOrchid","YellowGreen","Sienna","Brown","DarkGray","LightBlue","GreenYellow","PaleTurquoise","LightSteelBlue","PowderBlue","FireBrick","DarkGoldenRod","MediumOrchid","RosyBrown","DarkKhaki","Silver","MediumVioletRed","IndianRed","Peru","Chocolate","Tan","LightGray","Thistle","Orchid","GoldenRod","PaleVioletRed","Crimson","Gainsboro","Plum","BurlyWood","LightCyan","Lavender","DarkSalmon","Violet","PaleGoldenRod","LightCoral","Khaki","AliceBlue","HoneyDew","Azure","SandyBrown","Wheat","Beige","WhiteSmoke","MintCream","GhostWhite","Salmon","AntiqueWhite","Linen","LightGoldenRodYellow","OldLace","Red","Fuchsia","Magenta","DeepPink","OrangeRed","Tomato","HotPink","Coral","DarkOrange","LightSalmon","Orange","LightPink","Pink","Gold","PeachPuff","NavajoWhite","Moccasin","Bisque","MistyRose","BlanchedAlmond","PapayaWhip","LavenderBlush","SeaShell","Cornsilk","LemonChiffon","FloralWhite","Snow","Yellow","LightYellow"],company:["3Com Corp","3M Company","A.G. Edwards Inc.","Abbott Laboratories","Abercrombie & Fitch Co.","ABM Industries Incorporated","Ace Hardware Corporation","ACT Manufacturing Inc.","Acterna Corp.","Adams Resources & Energy, Inc.","ADC Telecommunications, Inc.","Adelphia Communications Corporation","Administaff, Inc.","Adobe Systems Incorporated","Adolph Coors Company","Advance Auto Parts, Inc.","Advanced Micro Devices, Inc.","AdvancePCS, Inc.","Advantica Restaurant Group, Inc.","The AES Corporation","Aetna Inc.","Affiliated Computer Services, Inc.","AFLAC Incorporated","AGCO Corporation","Agilent Technologies, Inc.","Agway Inc.","Apartment Investment and Management Company","Air Products and Chemicals, Inc.","Airborne, Inc.","Airgas, Inc.","AK Steel Holding Corporation","Alaska Air Group, Inc.","Alberto-Culver Company","Albertson's, Inc.","Alcoa Inc.","Alleghany Corporation","Allegheny Energy, Inc.","Allegheny Technologies Incorporated","Allergan, Inc.","ALLETE, Inc.","Alliant Energy Corporation","Allied Waste Industries, Inc.","Allmerica Financial Corporation","The Allstate Corporation","ALLTEL Corporation","The Alpine Group, Inc.","Amazon.com, Inc.","AMC Entertainment Inc.","American Power Conversion Corporation","Amerada Hess Corporation","AMERCO","Ameren Corporation","America West Holdings Corporation","American Axle & Manufacturing Holdings, Inc.","American Eagle Outfitters, Inc.","American Electric Power Company, Inc.","American Express Company","American Financial Group, Inc.","American Greetings Corporation","American International Group, Inc.","American Standard Companies Inc.","American Water Works Company, Inc.","AmerisourceBergen Corporation","Ames Department Stores, Inc.","Amgen Inc.","Amkor Technology, Inc.","AMR Corporation","AmSouth Bancorp.","Amtran, Inc.","Anadarko Petroleum Corporation","Analog Devices, Inc.","Anheuser-Busch Companies, Inc.","Anixter International Inc.","AnnTaylor Inc.","Anthem, Inc.","AOL Time Warner Inc.","Aon Corporation","Apache Corporation","Apple Computer, Inc.","Applera Corporation","Applied Industrial Technologies, Inc.","Applied Materials, Inc.","Aquila, Inc.","ARAMARK Corporation","Arch Coal, Inc.","Archer Daniels Midland Company","Arkansas Best Corporation","Armstrong Holdings, Inc.","Arrow Electronics, Inc.","ArvinMeritor, Inc.","Ashland Inc.","Astoria Financial Corporation","AT&T Corp.","Atmel Corporation","Atmos Energy Corporation","Audiovox Corporation","Autoliv, Inc.","Automatic Data Processing, Inc.","AutoNation, Inc.","AutoZone, Inc.","Avaya Inc.","Avery Dennison Corporation","Avista Corporation","Avnet, Inc.","Avon Products, Inc.","Baker Hughes Incorporated","Ball Corporation","Bank of America Corporation","The Bank of New York Company, Inc.","Bank One Corporation","Banknorth Group, Inc.","Banta Corporation","Barnes & Noble, Inc.","Bausch & Lomb Incorporated","Baxter International Inc.","BB&T Corporation","The Bear Stearns Companies Inc.","Beazer Homes USA, Inc.","Beckman Coulter, Inc.","Becton, Dickinson and Company","Bed Bath & Beyond Inc.","Belk, Inc.","Bell Microproducts Inc.","BellSouth Corporation","Belo Corp.","Bemis Company, Inc.","Benchmark Electronics, Inc.","Berkshire Hathaway Inc.","Best Buy Co., Inc.","Bethlehem Steel Corporation","Beverly Enterprises, Inc.","Big Lots, Inc.","BJ Services Company","BJ's Wholesale Club, Inc.","The Black & Decker Corporation","Black Hills Corporation","BMC Software, Inc.","The Boeing Company","Boise Cascade Corporation","Borders Group, Inc.","BorgWarner Inc.","Boston Scientific Corporation","Bowater Incorporated","Briggs & Stratton Corporation","Brightpoint, Inc.","Brinker International, Inc.","Bristol-Myers Squibb Company","Broadwing, Inc.","Brown Shoe Company, Inc.","Brown-Forman Corporation","Brunswick Corporation","Budget Group, Inc.","Burlington Coat Factory Warehouse Corporation","Burlington Industries, Inc.","Burlington Northern Santa Fe Corporation","Burlington Resources Inc.","C. H. Robinson Worldwide Inc.","Cablevision Systems Corp","Cabot Corp","Cadence Design Systems, Inc.","Calpine Corp.","Campbell Soup Co.","Capital One Financial Corp.","Cardinal Health Inc.","Caremark Rx Inc.","Carlisle Cos. Inc.","Carpenter Technology Corp.","Casey's General Stores Inc.","Caterpillar Inc.","CBRL Group Inc.","CDI Corp.","CDW Computer Centers Inc.","CellStar Corp.","Cendant Corp","Cenex Harvest States Cooperatives","Centex Corp.","CenturyTel Inc.","Ceridian Corp.","CH2M Hill Cos. Ltd.","Champion Enterprises Inc.","Charles Schwab Corp.","Charming Shoppes Inc.","Charter Communications Inc.","Charter One Financial Inc.","ChevronTexaco Corp.","Chiquita Brands International Inc.","Chubb Corp","Ciena Corp.","Cigna Corp","Cincinnati Financial Corp.","Cinergy Corp.","Cintas Corp.","Circuit City Stores Inc.","Cisco Systems Inc.","Citigroup, Inc","Citizens Communications Co.","CKE Restaurants Inc.","Clear Channel Communications Inc.","The Clorox Co.","CMGI Inc.","CMS Energy Corp.","CNF Inc.","Coca-Cola Co.","Coca-Cola Enterprises Inc.","Colgate-Palmolive Co.","Collins & Aikman Corp.","Comcast Corp.","Comdisco Inc.","Comerica Inc.","Comfort Systems USA Inc.","Commercial Metals Co.","Community Health Systems Inc.","Compass Bancshares Inc","Computer Associates International Inc.","Computer Sciences Corp.","Compuware Corp.","Comverse Technology Inc.","ConAgra Foods Inc.","Concord EFS Inc.","Conectiv, Inc","Conoco Inc","Conseco Inc.","Consolidated Freightways Corp.","Consolidated Edison Inc.","Constellation Brands Inc.","Constellation Emergy Group Inc.","Continental Airlines Inc.","Convergys Corp.","Cooper Cameron Corp.","Cooper Industries Ltd.","Cooper Tire & Rubber Co.","Corn Products International Inc.","Corning Inc.","Costco Wholesale Corp.","Countrywide Credit Industries Inc.","Coventry Health Care Inc.","Cox Communications Inc.","Crane Co.","Crompton Corp.","Crown Cork & Seal Co. Inc.","CSK Auto Corp.","CSX Corp.","Cummins Inc.","CVS Corp.","Cytec Industries Inc.","D&K Healthcare Resources, Inc.","D.R. Horton Inc.","Dana Corporation","Danaher Corporation","Darden Restaurants Inc.","DaVita Inc.","Dean Foods Company","Deere & Company","Del Monte Foods Co","Dell Computer Corporation","Delphi Corp.","Delta Air Lines Inc.","Deluxe Corporation","Devon Energy Corporation","Di Giorgio Corporation","Dial Corporation","Diebold Incorporated","Dillard's Inc.","DIMON Incorporated","Dole Food Company, Inc.","Dollar General Corporation","Dollar Tree Stores, Inc.","Dominion Resources, Inc.","Domino's Pizza LLC","Dover Corporation, Inc.","Dow Chemical Company","Dow Jones & Company, Inc.","DPL Inc.","DQE Inc.","Dreyer's Grand Ice Cream, Inc.","DST Systems, Inc.","DTE Energy Co.","E.I. Du Pont de Nemours and Company","Duke Energy Corp","Dun & Bradstreet Inc.","DURA Automotive Systems Inc.","DynCorp","Dynegy Inc.","E*Trade Group, Inc.","E.W. Scripps Company","Earthlink, Inc.","Eastman Chemical Company","Eastman Kodak Company","Eaton Corporation","Echostar Communications Corporation","Ecolab Inc.","Edison International","EGL Inc.","El Paso Corporation","Electronic Arts Inc.","Electronic Data Systems Corp.","Eli Lilly and Company","EMC Corporation","Emcor Group Inc.","Emerson Electric Co.","Encompass Services Corporation","Energizer Holdings Inc.","Energy East Corporation","Engelhard Corporation","Enron Corp.","Entergy Corporation","Enterprise Products Partners L.P.","EOG Resources, Inc.","Equifax Inc.","Equitable Resources Inc.","Equity Office Properties Trust","Equity Residential Properties Trust","Estee Lauder Companies Inc.","Exelon Corporation","Exide Technologies","Expeditors International of Washington Inc.","Express Scripts Inc.","ExxonMobil Corporation","Fairchild Semiconductor International Inc.","Family Dollar Stores Inc.","Farmland Industries Inc.","Federal Mogul Corp.","Federated Department Stores Inc.","Federal Express Corp.","Felcor Lodging Trust Inc.","Ferro Corp.","Fidelity National Financial Inc.","Fifth Third Bancorp","First American Financial Corp.","First Data Corp.","First National of Nebraska Inc.","First Tennessee National Corp.","FirstEnergy Corp.","Fiserv Inc.","Fisher Scientific International Inc.","FleetBoston Financial Co.","Fleetwood Enterprises Inc.","Fleming Companies Inc.","Flowers Foods Inc.","Flowserv Corp","Fluor Corp","FMC Corp","Foamex International Inc","Foot Locker Inc","Footstar Inc.","Ford Motor Co","Forest Laboratories Inc.","Fortune Brands Inc.","Foster Wheeler Ltd.","FPL Group Inc.","Franklin Resources Inc.","Freeport McMoran Copper & Gold Inc.","Frontier Oil Corp","Furniture Brands International Inc.","Gannett Co., Inc.","Gap Inc.","Gateway Inc.","GATX Corporation","Gemstar-TV Guide International Inc.","GenCorp Inc.","General Cable Corporation","General Dynamics Corporation","General Electric Company","General Mills Inc","General Motors Corporation","Genesis Health Ventures Inc.","Gentek Inc.","Gentiva Health Services Inc.","Genuine Parts Company","Genuity Inc.","Genzyme Corporation","Georgia Gulf Corporation","Georgia-Pacific Corporation","Gillette Company","Gold Kist Inc.","Golden State Bancorp Inc.","Golden West Financial Corporation","Goldman Sachs Group Inc.","Goodrich Corporation","The Goodyear Tire & Rubber Company","Granite Construction Incorporated","Graybar Electric Company Inc.","Great Lakes Chemical Corporation","Great Plains Energy Inc.","GreenPoint Financial Corp.","Greif Bros. Corporation","Grey Global Group Inc.","Group 1 Automotive Inc.","Guidant Corporation","H&R Block Inc.","H.B. Fuller Company","H.J. Heinz Company","Halliburton Co.","Harley-Davidson Inc.","Harman International Industries Inc.","Harrah's Entertainment Inc.","Harris Corp.","Harsco Corp.","Hartford Financial Services Group Inc.","Hasbro Inc.","Hawaiian Electric Industries Inc.","HCA Inc.","Health Management Associates Inc.","Health Net Inc.","Healthsouth Corp","Henry Schein Inc.","Hercules Inc.","Herman Miller Inc.","Hershey Foods Corp.","Hewlett-Packard Company","Hibernia Corp.","Hillenbrand Industries Inc.","Hilton Hotels Corp.","Hollywood Entertainment Corp.","Home Depot Inc.","Hon Industries Inc.","Honeywell International Inc.","Hormel Foods Corp.","Host Marriott Corp.","Household International Corp.","Hovnanian Enterprises Inc.","Hub Group Inc.","Hubbell Inc.","Hughes Supply Inc.","Humana Inc.","Huntington Bancshares Inc.","Idacorp Inc.","IDT Corporation","IKON Office Solutions Inc.","Illinois Tool Works Inc.","IMC Global Inc.","Imperial Sugar Company","IMS Health Inc.","Ingles Market Inc","Ingram Micro Inc.","Insight Enterprises Inc.","Integrated Electrical Services Inc.","Intel Corporation","International Paper Co.","Interpublic Group of Companies Inc.","Interstate Bakeries Corporation","International Business Machines Corp.","International Flavors & Fragrances Inc.","International Multifoods Corporation","Intuit Inc.","IT Group Inc.","ITT Industries Inc.","Ivax Corp.","J.B. Hunt Transport Services Inc.","J.C. Penny Co.","J.P. Morgan Chase & Co.","Jabil Circuit Inc.","Jack In The Box Inc.","Jacobs Engineering Group Inc.","JDS Uniphase Corp.","Jefferson-Pilot Co.","John Hancock Financial Services Inc.","Johnson & Johnson","Johnson Controls Inc.","Jones Apparel Group Inc.","KB Home","Kellogg Company","Kellwood Company","Kelly Services Inc.","Kemet Corp.","Kennametal Inc.","Kerr-McGee Corporation","KeyCorp","KeySpan Corp.","Kimball International Inc.","Kimberly-Clark Corporation","Kindred Healthcare Inc.","KLA-Tencor Corporation","K-Mart Corp.","Knight-Ridder Inc.","Kohl's Corp.","KPMG Consulting Inc.","Kroger Co.","L-3 Communications Holdings Inc.","Laboratory Corporation of America Holdings","Lam Research Corporation","LandAmerica Financial Group Inc.","Lands' End Inc.","Landstar System Inc.","La-Z-Boy Inc.","Lear Corporation","Legg Mason Inc.","Leggett & Platt Inc.","Lehman Brothers Holdings Inc.","Lennar Corporation","Lennox International Inc.","Level 3 Communications Inc.","Levi Strauss & Co.","Lexmark International Inc.","Limited Inc.","Lincoln National Corporation","Linens 'n Things Inc.","Lithia Motors Inc.","Liz Claiborne Inc.","Lockheed Martin Corporation","Loews Corporation","Longs Drug Stores Corporation","Louisiana-Pacific Corporation","Lowe's Companies Inc.","LSI Logic Corporation","The LTV Corporation","The Lubrizol Corporation","Lucent Technologies Inc.","Lyondell Chemical Company","M & T Bank Corporation","Magellan Health Services Inc.","Mail-Well Inc.","Mandalay Resort Group","Manor Care Inc.","Manpower Inc.","Marathon Oil Corporation","Mariner Health Care Inc.","Markel Corporation","Marriott International Inc.","Marsh & McLennan Companies Inc.","Marsh Supermarkets Inc.","Marshall & Ilsley Corporation","Martin Marietta Materials Inc.","Masco Corporation","Massey Energy Company","MasTec Inc.","Mattel Inc.","Maxim Integrated Products Inc.","Maxtor Corporation","Maxxam Inc.","The May Department Stores Company","Maytag Corporation","MBNA Corporation","McCormick & Company Incorporated","McDonald's Corporation","The McGraw-Hill Companies Inc.","McKesson Corporation","McLeodUSA Incorporated","M.D.C. Holdings Inc.","MDU Resources Group Inc.","MeadWestvaco Corporation","Medtronic Inc.","Mellon Financial Corporation","The Men's Wearhouse Inc.","Merck & Co., Inc.","Mercury General Corporation","Merrill Lynch & Co. Inc.","Metaldyne Corporation","Metals USA Inc.","MetLife Inc.","Metris Companies Inc","MGIC Investment Corporation","MGM Mirage","Michaels Stores Inc.","Micron Technology Inc.","Microsoft Corporation","Milacron Inc.","Millennium Chemicals Inc.","Mirant Corporation","Mohawk Industries Inc.","Molex Incorporated","The MONY Group Inc.","Morgan Stanley Dean Witter & Co.","Motorola Inc.","MPS Group Inc.","Murphy Oil Corporation","Nabors Industries Inc","Nacco Industries Inc","Nash Finch Company","National City Corp.","National Commerce Financial Corporation","National Fuel Gas Company","National Oilwell Inc","National Rural Utilities Cooperative Finance Corporation","National Semiconductor Corporation","National Service Industries Inc","Navistar International Corporation","NCR Corporation","The Neiman Marcus Group Inc.","New Jersey Resources Corporation","New York Times Company","Newell Rubbermaid Inc","Newmont Mining Corporation","Nextel Communications Inc","Nicor Inc","Nike Inc","NiSource Inc","Noble Energy Inc","Nordstrom Inc","Norfolk Southern Corporation","Nortek Inc","North Fork Bancorporation Inc","Northeast Utilities System","Northern Trust Corporation","Northrop Grumman Corporation","NorthWestern Corporation","Novellus Systems Inc","NSTAR","NTL Incorporated","Nucor Corp","Nvidia Corp","NVR Inc","Northwest Airlines Corp","Occidental Petroleum Corp","Ocean Energy Inc","Office Depot Inc.","OfficeMax Inc","OGE Energy Corp","Oglethorpe Power Corp.","Ohio Casualty Corp.","Old Republic International Corp.","Olin Corp.","OM Group Inc","Omnicare Inc","Omnicom Group","On Semiconductor Corp","ONEOK Inc","Oracle Corp","Oshkosh Truck Corp","Outback Steakhouse Inc.","Owens & Minor Inc.","Owens Corning","Owens-Illinois Inc","Oxford Health Plans Inc","Paccar Inc","PacifiCare Health Systems Inc","Packaging Corp. of America","Pactiv Corp","Pall Corp","Pantry Inc","Park Place Entertainment Corp","Parker Hannifin Corp.","Pathmark Stores Inc.","Paychex Inc","Payless Shoesource Inc","Penn Traffic Co.","Pennzoil-Quaker State Company","Pentair Inc","Peoples Energy Corp.","PeopleSoft Inc","Pep Boys Manny, Moe & Jack","Potomac Electric Power Co.","Pepsi Bottling Group Inc.","PepsiAmericas Inc.","PepsiCo Inc.","Performance Food Group Co.","Perini Corp","PerkinElmer Inc","Perot Systems Corp","Petco Animal Supplies Inc.","Peter Kiewit Sons', Inc.","PETsMART Inc","Pfizer Inc","Pacific Gas & Electric Corp.","Pharmacia Corp","Phar Mor Inc.","Phelps Dodge Corp.","Philip Morris Companies Inc.","Phillips Petroleum Co","Phillips Van Heusen Corp.","Phoenix Companies Inc","Pier 1 Imports Inc.","Pilgrim's Pride Corporation","Pinnacle West Capital Corp","Pioneer-Standard Electronics Inc.","Pitney Bowes Inc.","Pittston Brinks Group","Plains All American Pipeline LP","PNC Financial Services Group Inc.","PNM Resources Inc","Polaris Industries Inc.","Polo Ralph Lauren Corp","PolyOne Corp","Popular Inc","Potlatch Corp","PPG Industries Inc","PPL Corp","Praxair Inc","Precision Castparts Corp","Premcor Inc.","Pride International Inc","Primedia Inc","Principal Financial Group Inc.","Procter & Gamble Co.","Pro-Fac Cooperative Inc.","Progress Energy Inc","Progressive Corporation","Protective Life Corp","Provident Financial Group","Providian Financial Corp.","Prudential Financial Inc.","PSS World Medical Inc","Public Service Enterprise Group Inc.","Publix Super Markets Inc.","Puget Energy Inc.","Pulte Homes Inc","Qualcomm Inc","Quanta Services Inc.","Quantum Corp","Quest Diagnostics Inc.","Questar Corp","Quintiles Transnational","Qwest Communications Intl Inc","R.J. Reynolds Tobacco Company","R.R. Donnelley & Sons Company","Radio Shack Corporation","Raymond James Financial Inc.","Raytheon Company","Reader's Digest Association Inc.","Reebok International Ltd.","Regions Financial Corp.","Regis Corporation","Reliance Steel & Aluminum Co.","Reliant Energy Inc.","Rent A Center Inc","Republic Services Inc","Revlon Inc","RGS Energy Group Inc","Rite Aid Corp","Riverwood Holding Inc.","RoadwayCorp","Robert Half International Inc.","Rock-Tenn Co","Rockwell Automation Inc","Rockwell Collins Inc","Rohm & Haas Co.","Ross Stores Inc","RPM Inc.","Ruddick Corp","Ryder System Inc","Ryerson Tull Inc","Ryland Group Inc.","Sabre Holdings Corp","Safeco Corp","Safeguard Scientifics Inc.","Safeway Inc","Saks Inc","Sanmina-SCI Inc","Sara Lee Corp","SBC Communications Inc","Scana Corp.","Schering-Plough Corp","Scholastic Corp","SCI Systems Onc.","Science Applications Intl. Inc.","Scientific-Atlanta Inc","Scotts Company","Seaboard Corp","Sealed Air Corp","Sears Roebuck & Co","Sempra Energy","Sequa Corp","Service Corp. International","ServiceMaster Co","Shaw Group Inc","Sherwin-Williams Company","Shopko Stores Inc","Siebel Systems Inc","Sierra Health Services Inc","Sierra Pacific Resources","Silgan Holdings Inc.","Silicon Graphics Inc","Simon Property Group Inc","SLM Corporation","Smith International Inc","Smithfield Foods Inc","Smurfit-Stone Container Corp","Snap-On Inc","Solectron Corp","Solutia Inc","Sonic Automotive Inc.","Sonoco Products Co.","Southern Company","Southern Union Company","SouthTrust Corp.","Southwest Airlines Co","Southwest Gas Corp","Sovereign Bancorp Inc.","Spartan Stores Inc","Spherion Corp","Sports Authority Inc","Sprint Corp.","SPX Corp","St. Jude Medical Inc","St. Paul Cos.","Staff Leasing Inc.","StanCorp Financial Group Inc","Standard Pacific Corp.","Stanley Works","Staples Inc","Starbucks Corp","Starwood Hotels & Resorts Worldwide Inc","State Street Corp.","Stater Bros. Holdings Inc.","Steelcase Inc","Stein Mart Inc","Stewart & Stevenson Services Inc","Stewart Information Services Corp","Stilwell Financial Inc","Storage Technology Corporation","Stryker Corp","Sun Healthcare Group Inc.","Sun Microsystems Inc.","SunGard Data Systems Inc.","Sunoco Inc.","SunTrust Banks Inc","Supervalu Inc","Swift Transportation, Co., Inc","Symbol Technologies Inc","Synovus Financial Corp.","Sysco Corp","Systemax Inc.","Target Corp.","Tech Data Corporation","TECO Energy Inc","Tecumseh Products Company","Tektronix Inc","Teleflex Incorporated","Telephone & Data Systems Inc","Tellabs Inc.","Temple-Inland Inc","Tenet Healthcare Corporation","Tenneco Automotive Inc.","Teradyne Inc","Terex Corp","Tesoro Petroleum Corp.","Texas Industries Inc.","Texas Instruments Incorporated","Textron Inc","Thermo Electron Corporation","Thomas & Betts Corporation","Tiffany & Co","Timken Company","TJX Companies Inc","TMP Worldwide Inc","Toll Brothers Inc","Torchmark Corporation","Toro Company","Tower Automotive Inc.","Toys 'R' Us Inc","Trans World Entertainment Corp.","TransMontaigne Inc","Transocean Inc","TravelCenters of America Inc.","Triad Hospitals Inc","Tribune Company","Trigon Healthcare Inc.","Trinity Industries Inc","Trump Hotels & Casino Resorts Inc.","TruServ Corporation","TRW Inc","TXU Corp","Tyson Foods Inc","U.S. Bancorp","U.S. Industries Inc.","UAL Corporation","UGI Corporation","Unified Western Grocers Inc","Union Pacific Corporation","Union Planters Corp","Unisource Energy Corp","Unisys Corporation","United Auto Group Inc","United Defense Industries Inc.","United Parcel Service Inc","United Rentals Inc","United Stationers Inc","United Technologies Corporation","UnitedHealth Group Incorporated","Unitrin Inc","Universal Corporation","Universal Forest Products Inc","Universal Health Services Inc","Unocal Corporation","Unova Inc","UnumProvident Corporation","URS Corporation","US Airways Group Inc","US Oncology Inc","USA Interactive","USFreighways Corporation","USG Corporation","UST Inc","Valero Energy Corporation","Valspar Corporation","Value City Department Stores Inc","Varco International Inc","Vectren Corporation","Veritas Software Corporation","Verizon Communications Inc","VF Corporation","Viacom Inc","Viad Corp","Viasystems Group Inc","Vishay Intertechnology Inc","Visteon Corporation","Volt Information Sciences Inc","Vulcan Materials Company","W.R. Berkley Corporation","W.R. Grace & Co","W.W. Grainger Inc","Wachovia Corporation","Wakenhut Corporation","Walgreen Co","Wallace Computer Services Inc","Wal-Mart Stores Inc","Walt Disney Co","Walter Industries Inc","Washington Mutual Inc","Washington Post Co.","Waste Management Inc","Watsco Inc","Weatherford International Inc","Weis Markets Inc.","Wellpoint Health Networks Inc","Wells Fargo & Company","Wendy's International Inc","Werner Enterprises Inc","WESCO International Inc","Western Digital Inc","Western Gas Resources Inc","WestPoint Stevens Inc","Weyerhauser Company","WGL Holdings Inc","Whirlpool Corporation","Whole Foods Market Inc","Willamette Industries Inc.","Williams Companies Inc","Williams Sonoma Inc","Winn Dixie Stores Inc","Wisconsin Energy Corporation","Wm Wrigley Jr Company","World Fuel Services Corporation","WorldCom Inc","Worthington Industries Inc","WPS Resources Corporation","Wyeth","Wyndham International Inc","Xcel Energy Inc","Xerox Corp","Xilinx Inc","XO Communications Inc","Yellow Corporation","York International Corp","Yum Brands Inc.","Zale Corporation","Zions Bancorporation"],fileExtension:{raster:["bmp","gif","gpl","ico","jpeg","psd","png","psp","raw","tiff"],vector:["3dv","amf","awg","ai","cgm","cdr","cmx","dxf","e2d","egt","eps","fs","odg","svg","xar"],"3d":["3dmf","3dm","3mf","3ds","an8","aoi","blend","cal3d","cob","ctm","iob","jas","max","mb","mdx","obj","x","x3d"],document:["doc","docx","dot","html","xml","odt","odm","ott","csv","rtf","tex","xhtml","xps"]},timezones:[{name:"Dateline Standard Time",abbr:"DST",offset:-12,isdst:!1,text:"(UTC-12:00) International Date Line West",utc:["Etc/GMT+12"]},{name:"UTC-11",abbr:"U",offset:-11,isdst:!1,text:"(UTC-11:00) Coordinated Universal Time-11",utc:["Etc/GMT+11","Pacific/Midway","Pacific/Niue","Pacific/Pago_Pago"]},{name:"Hawaiian Standard Time",abbr:"HST",offset:-10,isdst:!1,text:"(UTC-10:00) Hawaii",utc:["Etc/GMT+10","Pacific/Honolulu","Pacific/Johnston","Pacific/Rarotonga","Pacific/Tahiti"]},{name:"Alaskan Standard Time",abbr:"AKDT",offset:-8,isdst:!0,text:"(UTC-09:00) Alaska",utc:["America/Anchorage","America/Juneau","America/Nome","America/Sitka","America/Yakutat"]},{name:"Pacific Standard Time (Mexico)",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Baja California",utc:["America/Santa_Isabel"]},{name:"Pacific Standard Time",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Pacific Time (US & Canada)",utc:["America/Dawson","America/Los_Angeles","America/Tijuana","America/Vancouver","America/Whitehorse","PST8PDT"]},{name:"US Mountain Standard Time",abbr:"UMST",offset:-7,isdst:!1,text:"(UTC-07:00) Arizona",utc:["America/Creston","America/Dawson_Creek","America/Hermosillo","America/Phoenix","Etc/GMT+7"]},{name:"Mountain Standard Time (Mexico)",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",utc:["America/Chihuahua","America/Mazatlan"]},{name:"Mountain Standard Time",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Mountain Time (US & Canada)",utc:["America/Boise","America/Cambridge_Bay","America/Denver","America/Edmonton","America/Inuvik","America/Ojinaga","America/Yellowknife","MST7MDT"]},{name:"Central America Standard Time",abbr:"CAST",offset:-6,isdst:!1,text:"(UTC-06:00) Central America",utc:["America/Belize","America/Costa_Rica","America/El_Salvador","America/Guatemala","America/Managua","America/Tegucigalpa","Etc/GMT+6","Pacific/Galapagos"]},{name:"Central Standard Time",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Central Time (US & Canada)",utc:["America/Chicago","America/Indiana/Knox","America/Indiana/Tell_City","America/Matamoros","America/Menominee","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Rainy_River","America/Rankin_Inlet","America/Resolute","America/Winnipeg","CST6CDT"]},{name:"Central Standard Time (Mexico)",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",utc:["America/Bahia_Banderas","America/Cancun","America/Merida","America/Mexico_City","America/Monterrey"]},{name:"Canada Central Standard Time",abbr:"CCST",offset:-6,isdst:!1,text:"(UTC-06:00) Saskatchewan",utc:["America/Regina","America/Swift_Current"]},{name:"SA Pacific Standard Time",abbr:"SPST",offset:-5,isdst:!1,text:"(UTC-05:00) Bogota, Lima, Quito",utc:["America/Bogota","America/Cayman","America/Coral_Harbour","America/Eirunepe","America/Guayaquil","America/Jamaica","America/Lima","America/Panama","America/Rio_Branco","Etc/GMT+5"]},{name:"Eastern Standard Time",abbr:"EDT",offset:-4,isdst:!0,text:"(UTC-05:00) Eastern Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto","EST5EDT"]},{name:"US Eastern Standard Time",abbr:"UEDT",offset:-4,isdst:!0,text:"(UTC-05:00) Indiana (East)",utc:["America/Indiana/Marengo","America/Indiana/Vevay","America/Indianapolis"]},{name:"Venezuela Standard Time",abbr:"VST",offset:-4.5,isdst:!1,text:"(UTC-04:30) Caracas",utc:["America/Caracas"]},{name:"Paraguay Standard Time",abbr:"PST",offset:-4,isdst:!1,text:"(UTC-04:00) Asuncion",utc:["America/Asuncion"]},{name:"Atlantic Standard Time",abbr:"ADT",offset:-3,isdst:!0,text:"(UTC-04:00) Atlantic Time (Canada)",utc:["America/Glace_Bay","America/Goose_Bay","America/Halifax","America/Moncton","America/Thule","Atlantic/Bermuda"]},{name:"Central Brazilian Standard Time",abbr:"CBST",offset:-4,isdst:!1,text:"(UTC-04:00) Cuiaba",utc:["America/Campo_Grande","America/Cuiaba"]},{name:"SA Western Standard Time",abbr:"SWST",offset:-4,isdst:!1,text:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",utc:["America/Anguilla","America/Antigua","America/Aruba","America/Barbados","America/Blanc-Sablon","America/Boa_Vista","America/Curacao","America/Dominica","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guyana","America/Kralendijk","America/La_Paz","America/Lower_Princes","America/Manaus","America/Marigot","America/Martinique","America/Montserrat","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Santo_Domingo","America/St_Barthelemy","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Tortola","Etc/GMT+4"]},{name:"Pacific SA Standard Time",abbr:"PSST",offset:-4,isdst:!1,text:"(UTC-04:00) Santiago",utc:["America/Santiago","Antarctica/Palmer"]},{name:"Newfoundland Standard Time",abbr:"NDT",offset:-2.5,isdst:!0,text:"(UTC-03:30) Newfoundland",utc:["America/St_Johns"]},{name:"E. South America Standard Time",abbr:"ESAST",offset:-3,isdst:!1,text:"(UTC-03:00) Brasilia",utc:["America/Sao_Paulo"]},{name:"Argentina Standard Time",abbr:"AST",offset:-3,isdst:!1,text:"(UTC-03:00) Buenos Aires",utc:["America/Argentina/La_Rioja","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Buenos_Aires","America/Catamarca","America/Cordoba","America/Jujuy","America/Mendoza"]},{name:"SA Eastern Standard Time",abbr:"SEST",offset:-3,isdst:!1,text:"(UTC-03:00) Cayenne, Fortaleza",utc:["America/Araguaina","America/Belem","America/Cayenne","America/Fortaleza","America/Maceio","America/Paramaribo","America/Recife","America/Santarem","Antarctica/Rothera","Atlantic/Stanley","Etc/GMT+3"]},{name:"Greenland Standard Time",abbr:"GDT",offset:-2,isdst:!0,text:"(UTC-03:00) Greenland",utc:["America/Godthab"]},{name:"Montevideo Standard Time",abbr:"MST",offset:-3,isdst:!1,text:"(UTC-03:00) Montevideo",utc:["America/Montevideo"]},{name:"Bahia Standard Time",abbr:"BST",offset:-3,isdst:!1,text:"(UTC-03:00) Salvador",utc:["America/Bahia"]},{name:"UTC-02",abbr:"U",offset:-2,isdst:!1,text:"(UTC-02:00) Coordinated Universal Time-02",utc:["America/Noronha","Atlantic/South_Georgia","Etc/GMT+2"]},{name:"Mid-Atlantic Standard Time",abbr:"MDT",offset:-1,isdst:!0,text:"(UTC-02:00) Mid-Atlantic - Old"},{name:"Azores Standard Time",abbr:"ADT",offset:0,isdst:!0,text:"(UTC-01:00) Azores",utc:["America/Scoresbysund","Atlantic/Azores"]},{name:"Cape Verde Standard Time",abbr:"CVST",offset:-1,isdst:!1,text:"(UTC-01:00) Cape Verde Is.",utc:["Atlantic/Cape_Verde","Etc/GMT+1"]},{name:"Morocco Standard Time",abbr:"MDT",offset:1,isdst:!0,text:"(UTC) Casablanca",utc:["Africa/Casablanca","Africa/El_Aaiun"]},{name:"UTC",abbr:"CUT",offset:0,isdst:!1,text:"(UTC) Coordinated Universal Time",utc:["America/Danmarkshavn","Etc/GMT"]},{name:"GMT Standard Time",abbr:"GDT",offset:1,isdst:!0,text:"(UTC) Dublin, Edinburgh, Lisbon, London",utc:["Atlantic/Canary","Atlantic/Faeroe","Atlantic/Madeira","Europe/Dublin","Europe/Guernsey","Europe/Isle_of_Man","Europe/Jersey","Europe/Lisbon","Europe/London"]},{name:"Greenwich Standard Time",abbr:"GST",offset:0,isdst:!1,text:"(UTC) Monrovia, Reykjavik",utc:["Africa/Abidjan","Africa/Accra","Africa/Bamako","Africa/Banjul","Africa/Bissau","Africa/Conakry","Africa/Dakar","Africa/Freetown","Africa/Lome","Africa/Monrovia","Africa/Nouakchott","Africa/Ouagadougou","Africa/Sao_Tome","Atlantic/Reykjavik","Atlantic/St_Helena"]},{name:"W. Europe Standard Time",abbr:"WEDT",offset:2,isdst:!0,text:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",utc:["Arctic/Longyearbyen","Europe/Amsterdam","Europe/Andorra","Europe/Berlin","Europe/Busingen","Europe/Gibraltar","Europe/Luxembourg","Europe/Malta","Europe/Monaco","Europe/Oslo","Europe/Rome","Europe/San_Marino","Europe/Stockholm","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Zurich"]},{name:"Central Europe Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",utc:["Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Podgorica","Europe/Prague","Europe/Tirane"]},{name:"Romance Standard Time",abbr:"RDT",offset:2,isdst:!0,text:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",utc:["Africa/Ceuta","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris"]},{name:"Central European Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",utc:["Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb"]},{name:"W. Central Africa Standard Time",abbr:"WCAST",offset:1,isdst:!1,text:"(UTC+01:00) West Central Africa",utc:["Africa/Algiers","Africa/Bangui","Africa/Brazzaville","Africa/Douala","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Luanda","Africa/Malabo","Africa/Ndjamena","Africa/Niamey","Africa/Porto-Novo","Africa/Tunis","Etc/GMT-1"]},{name:"Namibia Standard Time",abbr:"NST",offset:1,isdst:!1,text:"(UTC+01:00) Windhoek",utc:["Africa/Windhoek"]},{name:"GTB Standard Time",abbr:"GDT",offset:3,isdst:!0,text:"(UTC+02:00) Athens, Bucharest",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau"]},{name:"Middle East Standard Time",abbr:"MEDT",offset:3,isdst:!0,text:"(UTC+02:00) Beirut",utc:["Asia/Beirut"]},{name:"Egypt Standard Time",abbr:"EST",offset:2,isdst:!1,text:"(UTC+02:00) Cairo",utc:["Africa/Cairo"]},{name:"Syria Standard Time",abbr:"SDT",offset:3,isdst:!0,text:"(UTC+02:00) Damascus",utc:["Asia/Damascus"]},{name:"E. Europe Standard Time",abbr:"EEDT",offset:3,isdst:!0,text:"(UTC+02:00) E. Europe"},{name:"South Africa Standard Time",abbr:"SAST",offset:2,isdst:!1,text:"(UTC+02:00) Harare, Pretoria",utc:["Africa/Blantyre","Africa/Bujumbura","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Kigali","Africa/Lubumbashi","Africa/Lusaka","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Etc/GMT-2"]},{name:"FLE Standard Time",abbr:"FDT",offset:3,isdst:!0,text:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",utc:["Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{name:"Turkey Standard Time",abbr:"TDT",offset:3,isdst:!0,text:"(UTC+02:00) Istanbul",utc:["Europe/Istanbul"]},{name:"Israel Standard Time",abbr:"JDT",offset:3,isdst:!0,text:"(UTC+02:00) Jerusalem",utc:["Asia/Jerusalem"]},{name:"Libya Standard Time",abbr:"LST",offset:2,isdst:!1,text:"(UTC+02:00) Tripoli",utc:["Africa/Tripoli"]},{name:"Jordan Standard Time",abbr:"JST",offset:3,isdst:!1,text:"(UTC+03:00) Amman",utc:["Asia/Amman"]},{name:"Arabic Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Baghdad",utc:["Asia/Baghdad"]},{name:"Kaliningrad Standard Time",abbr:"KST",offset:3,isdst:!1,text:"(UTC+03:00) Kaliningrad, Minsk",utc:["Europe/Kaliningrad","Europe/Minsk"]},{name:"Arab Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Kuwait, Riyadh",utc:["Asia/Aden","Asia/Bahrain","Asia/Kuwait","Asia/Qatar","Asia/Riyadh"]},{name:"E. Africa Standard Time",abbr:"EAST",offset:3,isdst:!1,text:"(UTC+03:00) Nairobi",utc:["Africa/Addis_Ababa","Africa/Asmera","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Mogadishu","Africa/Nairobi","Antarctica/Syowa","Etc/GMT-3","Indian/Antananarivo","Indian/Comoro","Indian/Mayotte"]},{name:"Iran Standard Time",abbr:"IDT",offset:4.5,isdst:!0,text:"(UTC+03:30) Tehran",utc:["Asia/Tehran"]},{name:"Arabian Standard Time",abbr:"AST",offset:4,isdst:!1,text:"(UTC+04:00) Abu Dhabi, Muscat",utc:["Asia/Dubai","Asia/Muscat","Etc/GMT-4"]},{name:"Azerbaijan Standard Time",abbr:"ADT",offset:5,isdst:!0,text:"(UTC+04:00) Baku",utc:["Asia/Baku"]},{name:"Russian Standard Time",abbr:"RST",offset:4,isdst:!1,text:"(UTC+04:00) Moscow, St. Petersburg, Volgograd",utc:["Europe/Moscow","Europe/Samara","Europe/Simferopol","Europe/Volgograd"]},{name:"Mauritius Standard Time",abbr:"MST",offset:4,isdst:!1,text:"(UTC+04:00) Port Louis",utc:["Indian/Mahe","Indian/Mauritius","Indian/Reunion"]},{name:"Georgian Standard Time",abbr:"GST",offset:4,isdst:!1,text:"(UTC+04:00) Tbilisi",utc:["Asia/Tbilisi"]},{name:"Caucasus Standard Time",abbr:"CST",offset:4,isdst:!1,text:"(UTC+04:00) Yerevan",utc:["Asia/Yerevan"]},{name:"Afghanistan Standard Time",abbr:"AST",offset:4.5,isdst:!1,text:"(UTC+04:30) Kabul",utc:["Asia/Kabul"]},{name:"West Asia Standard Time",abbr:"WAST",offset:5,isdst:!1,text:"(UTC+05:00) Ashgabat, Tashkent",utc:["Antarctica/Mawson","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Dushanbe","Asia/Oral","Asia/Samarkand","Asia/Tashkent","Etc/GMT-5","Indian/Kerguelen","Indian/Maldives"]},{name:"Pakistan Standard Time",abbr:"PST",offset:5,isdst:!1,text:"(UTC+05:00) Islamabad, Karachi",utc:["Asia/Karachi"]},{name:"India Standard Time",abbr:"IST",offset:5.5,isdst:!1,text:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",utc:["Asia/Calcutta"]},{name:"Sri Lanka Standard Time",abbr:"SLST",offset:5.5,isdst:!1,text:"(UTC+05:30) Sri Jayawardenepura",utc:["Asia/Colombo"]},{name:"Nepal Standard Time",abbr:"NST",offset:5.75,isdst:!1,text:"(UTC+05:45) Kathmandu",utc:["Asia/Katmandu"]},{name:"Central Asia Standard Time",abbr:"CAST",offset:6,isdst:!1,text:"(UTC+06:00) Astana",utc:["Antarctica/Vostok","Asia/Almaty","Asia/Bishkek","Asia/Qyzylorda","Asia/Urumqi","Etc/GMT-6","Indian/Chagos"]},{name:"Bangladesh Standard Time",abbr:"BST",offset:6,isdst:!1,text:"(UTC+06:00) Dhaka",utc:["Asia/Dhaka","Asia/Thimphu"]},{name:"Ekaterinburg Standard Time",abbr:"EST",offset:6,isdst:!1,text:"(UTC+06:00) Ekaterinburg",utc:["Asia/Yekaterinburg"]},{name:"Myanmar Standard Time",abbr:"MST",offset:6.5,isdst:!1,text:"(UTC+06:30) Yangon (Rangoon)",utc:["Asia/Rangoon","Indian/Cocos"]},{name:"SE Asia Standard Time",abbr:"SAST",offset:7,isdst:!1,text:"(UTC+07:00) Bangkok, Hanoi, Jakarta",utc:["Antarctica/Davis","Asia/Bangkok","Asia/Hovd","Asia/Jakarta","Asia/Phnom_Penh","Asia/Pontianak","Asia/Saigon","Asia/Vientiane","Etc/GMT-7","Indian/Christmas"]},{name:"N. Central Asia Standard Time",abbr:"NCAST",offset:7,isdst:!1,text:"(UTC+07:00) Novosibirsk",utc:["Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk"]},{name:"China Standard Time",abbr:"CST",offset:8,isdst:!1,text:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",utc:["Asia/Hong_Kong","Asia/Macau","Asia/Shanghai"]},{name:"North Asia Standard Time",abbr:"NAST",offset:8,isdst:!1,text:"(UTC+08:00) Krasnoyarsk",utc:["Asia/Krasnoyarsk"]},{name:"Singapore Standard Time",abbr:"MPST",offset:8,isdst:!1,text:"(UTC+08:00) Kuala Lumpur, Singapore",utc:["Asia/Brunei","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Makassar","Asia/Manila","Asia/Singapore","Etc/GMT-8"]},{name:"W. Australia Standard Time",abbr:"WAST",offset:8,isdst:!1,text:"(UTC+08:00) Perth",utc:["Antarctica/Casey","Australia/Perth"]},{name:"Taipei Standard Time",abbr:"TST",offset:8,isdst:!1,text:"(UTC+08:00) Taipei",utc:["Asia/Taipei"]},{name:"Ulaanbaatar Standard Time",abbr:"UST",offset:8,isdst:!1,text:"(UTC+08:00) Ulaanbaatar",utc:["Asia/Choibalsan","Asia/Ulaanbaatar"]},{name:"North Asia East Standard Time",abbr:"NAEST",offset:9,isdst:!1,text:"(UTC+09:00) Irkutsk",utc:["Asia/Irkutsk"]},{name:"Tokyo Standard Time",abbr:"TST",offset:9,isdst:!1,text:"(UTC+09:00) Osaka, Sapporo, Tokyo",utc:["Asia/Dili","Asia/Jayapura","Asia/Tokyo","Etc/GMT-9","Pacific/Palau"]},{name:"Korea Standard Time",abbr:"KST",offset:9,isdst:!1,text:"(UTC+09:00) Seoul",utc:["Asia/Pyongyang","Asia/Seoul"]},{name:"Cen. Australia Standard Time",abbr:"CAST",offset:9.5,isdst:!1,text:"(UTC+09:30) Adelaide",utc:["Australia/Adelaide","Australia/Broken_Hill"]},{name:"AUS Central Standard Time",abbr:"ACST",offset:9.5,isdst:!1,text:"(UTC+09:30) Darwin",utc:["Australia/Darwin"]},{name:"E. Australia Standard Time",abbr:"EAST",offset:10,isdst:!1,text:"(UTC+10:00) Brisbane",utc:["Australia/Brisbane","Australia/Lindeman"]},{name:"AUS Eastern Standard Time",abbr:"AEST",offset:10,isdst:!1,text:"(UTC+10:00) Canberra, Melbourne, Sydney",utc:["Australia/Melbourne","Australia/Sydney"]},{name:"West Pacific Standard Time",abbr:"WPST",offset:10,isdst:!1,text:"(UTC+10:00) Guam, Port Moresby",utc:["Antarctica/DumontDUrville","Etc/GMT-10","Pacific/Guam","Pacific/Port_Moresby","Pacific/Saipan","Pacific/Truk"]},{name:"Tasmania Standard Time",abbr:"TST",offset:10,isdst:!1,text:"(UTC+10:00) Hobart",utc:["Australia/Currie","Australia/Hobart"]},{name:"Yakutsk Standard Time",abbr:"YST",offset:10,isdst:!1,text:"(UTC+10:00) Yakutsk",utc:["Asia/Chita","Asia/Khandyga","Asia/Yakutsk"]},{name:"Central Pacific Standard Time",abbr:"CPST",offset:11,isdst:!1,text:"(UTC+11:00) Solomon Is., New Caledonia",utc:["Antarctica/Macquarie","Etc/GMT-11","Pacific/Efate","Pacific/Guadalcanal","Pacific/Kosrae","Pacific/Noumea","Pacific/Ponape"]},{name:"Vladivostok Standard Time",abbr:"VST",offset:11,isdst:!1,text:"(UTC+11:00) Vladivostok",utc:["Asia/Sakhalin","Asia/Ust-Nera","Asia/Vladivostok"]},{name:"New Zealand Standard Time",abbr:"NZST",offset:12,isdst:!1,text:"(UTC+12:00) Auckland, Wellington",utc:["Antarctica/McMurdo","Pacific/Auckland"]},{name:"UTC+12",abbr:"U",offset:12,isdst:!1,text:"(UTC+12:00) Coordinated Universal Time+12",utc:["Etc/GMT-12","Pacific/Funafuti","Pacific/Kwajalein","Pacific/Majuro","Pacific/Nauru","Pacific/Tarawa","Pacific/Wake","Pacific/Wallis"]},{name:"Fiji Standard Time",abbr:"FST",offset:12,isdst:!1,text:"(UTC+12:00) Fiji",utc:["Pacific/Fiji"]},{name:"Magadan Standard Time",abbr:"MST",offset:12,isdst:!1,text:"(UTC+12:00) Magadan",utc:["Asia/Anadyr","Asia/Kamchatka","Asia/Magadan","Asia/Srednekolymsk"]},{name:"Kamchatka Standard Time",abbr:"KDT",offset:13,isdst:!0,text:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old"},{name:"Tonga Standard Time",abbr:"TST",offset:13,isdst:!1,text:"(UTC+13:00) Nuku'alofa",utc:["Etc/GMT-13","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Tongatapu"]},{name:"Samoa Standard Time",abbr:"SST",offset:13,isdst:!1,text:"(UTC+13:00) Samoa",utc:["Pacific/Apia"]}],profession:["Airline Pilot","Academic Team","Accountant","Account Executive","Actor","Actuary","Acquisition Analyst","Administrative Asst.","Administrative Analyst","Administrator","Advertising Director","Aerospace Engineer","Agent","Agricultural Inspector","Agricultural Scientist","Air Traffic Controller","Animal Trainer","Anthropologist","Appraiser","Architect","Art Director","Artist","Astronomer","Athletic Coach","Auditor","Author","Baker","Banker","Bankruptcy Attorney","Benefits Manager","Biologist","Bio-feedback Specialist","Biomedical Engineer","Biotechnical Researcher","Broadcaster","Broker","Building Manager","Building Contractor","Building Inspector","Business Analyst","Business Planner","Business Manager","Buyer","Call Center Manager","Career Counselor","Cash Manager","Ceramic Engineer","Chief Executive Officer","Chief Operation Officer","Chef","Chemical Engineer","Chemist","Child Care Manager","Chief Medical Officer","Chiropractor","Cinematographer","City Housing Manager","City Manager","Civil Engineer","Claims Manager","Clinical Research Assistant","Collections Manager.","Compliance Manager","Comptroller","Computer Manager","Commercial Artist","Communications Affairs Director","Communications Director","Communications Engineer","Compensation Analyst","Computer Programmer","Computer Ops. Manager","Computer Engineer","Computer Operator","Computer Graphics Specialist","Construction Engineer","Construction Manager","Consultant","Consumer Relations Manager","Contract Administrator","Copyright Attorney","Copywriter","Corporate Planner","Corrections Officer","Cosmetologist","Credit Analyst","Cruise Director","Chief Information Officer","Chief Technology Officer","Customer Service Manager","Cryptologist","Dancer","Data Security Manager","Database Manager","Day Care Instructor","Dentist","Designer","Design Engineer","Desktop Publisher","Developer","Development Officer","Diamond Merchant","Dietitian","Direct Marketer","Director","Distribution Manager","Diversity Manager","Economist","EEO Compliance Manager","Editor","Education Adminator","Electrical Engineer","Electro Optical Engineer","Electronics Engineer","Embassy Management","Employment Agent","Engineer Technician","Entrepreneur","Environmental Analyst","Environmental Attorney","Environmental Engineer","Environmental Specialist","Escrow Officer","Estimator","Executive Assistant","Executive Director","Executive Recruiter","Facilities Manager","Family Counselor","Fashion Events Manager","Fashion Merchandiser","Fast Food Manager","Film Producer","Film Production Assistant","Financial Analyst","Financial Planner","Financier","Fine Artist","Wildlife Specialist","Fitness Consultant","Flight Attendant","Flight Engineer","Floral Designer","Food & Beverage Director","Food Service Manager","Forestry Technician","Franchise Management","Franchise Sales","Fraud Investigator","Freelance Writer","Fund Raiser","General Manager","Geologist","General Counsel","Geriatric Specialist","Gerontologist","Glamour Photographer","Golf Club Manager","Gourmet Chef","Graphic Designer","Grounds Keeper","Hazardous Waste Manager","Health Care Manager","Health Therapist","Health Service Administrator","Hearing Officer","Home Economist","Horticulturist","Hospital Administrator","Hotel Manager","Human Resources Manager","Importer","Industrial Designer","Industrial Engineer","Information Director","Inside Sales","Insurance Adjuster","Interior Decorator","Internal Controls Director","International Acct.","International Courier","International Lawyer","Interpreter","Investigator","Investment Banker","Investment Manager","IT Architect","IT Project Manager","IT Systems Analyst","Jeweler","Joint Venture Manager","Journalist","Labor Negotiator","Labor Organizer","Labor Relations Manager","Lab Services Director","Lab Technician","Land Developer","Landscape Architect","Law Enforcement Officer","Lawyer","Lead Software Engineer","Lead Software Test Engineer","Leasing Manager","Legal Secretary","Library Manager","Litigation Attorney","Loan Officer","Lobbyist","Logistics Manager","Maintenance Manager","Management Consultant","Managed Care Director","Managing Partner","Manufacturing Director","Manpower Planner","Marine Biologist","Market Res. Analyst","Marketing Director","Materials Manager","Mathematician","Membership Chairman","Mechanic","Mechanical Engineer","Media Buyer","Medical Investor","Medical Secretary","Medical Technician","Mental Health Counselor","Merchandiser","Metallurgical Engineering","Meteorologist","Microbiologist","MIS Manager","Motion Picture Director","Multimedia Director","Musician","Network Administrator","Network Specialist","Network Operator","New Product Manager","Novelist","Nuclear Engineer","Nuclear Specialist","Nutritionist","Nursing Administrator","Occupational Therapist","Oceanographer","Office Manager","Operations Manager","Operations Research Director","Optical Technician","Optometrist","Organizational Development Manager","Outplacement Specialist","Paralegal","Park Ranger","Patent Attorney","Payroll Specialist","Personnel Specialist","Petroleum Engineer","Pharmacist","Photographer","Physical Therapist","Physician","Physician Assistant","Physicist","Planning Director","Podiatrist","Political Analyst","Political Scientist","Politician","Portfolio Manager","Preschool Management","Preschool Teacher","Principal","Private Banker","Private Investigator","Probation Officer","Process Engineer","Producer","Product Manager","Product Engineer","Production Engineer","Production Planner","Professional Athlete","Professional Coach","Professor","Project Engineer","Project Manager","Program Manager","Property Manager","Public Administrator","Public Safety Director","PR Specialist","Publisher","Purchasing Agent","Publishing Director","Quality Assurance Specialist","Quality Control Engineer","Quality Control Inspector","Radiology Manager","Railroad Engineer","Real Estate Broker","Recreational Director","Recruiter","Redevelopment Specialist","Regulatory Affairs Manager","Registered Nurse","Rehabilitation Counselor","Relocation Manager","Reporter","Research Specialist","Restaurant Manager","Retail Store Manager","Risk Analyst","Safety Engineer","Sales Engineer","Sales Trainer","Sales Promotion Manager","Sales Representative","Sales Manager","Service Manager","Sanitation Engineer","Scientific Programmer","Scientific Writer","Securities Analyst","Security Consultant","Security Director","Seminar Presenter","Ship's Officer","Singer","Social Director","Social Program Planner","Social Research","Social Scientist","Social Worker","Sociologist","Software Developer","Software Engineer","Software Test Engineer","Soil Scientist","Special Events Manager","Special Education Teacher","Special Projects Director","Speech Pathologist","Speech Writer","Sports Event Manager","Statistician","Store Manager","Strategic Alliance Director","Strategic Planning Director","Stress Reduction Specialist","Stockbroker","Surveyor","Structural Engineer","Superintendent","Supply Chain Director","System Engineer","Systems Analyst","Systems Programmer","System Administrator","Tax Specialist","Teacher","Technical Support Specialist","Technical Illustrator","Technical Writer","Technology Director","Telecom Analyst","Telemarketer","Theatrical Director","Title Examiner","Tour Escort","Tour Guide Director","Traffic Manager","Trainer Translator","Transportation Manager","Travel Agent","Treasurer","TV Programmer","Underwriter","Union Representative","University Administrator","University Dean","Urban Planner","Veterinarian","Vendor Relations Director","Viticulturist","Warehouse Manager"],animals:{ocean:["Acantharea","Anemone","Angelfish King","Ahi Tuna","Albacore","American Oyster","Anchovy","Armored Snail","Arctic Char","Atlantic Bluefin Tuna","Atlantic Cod","Atlantic Goliath Grouper","Atlantic Trumpetfish","Atlantic Wolffish","Baleen Whale","Banded Butterflyfish","Banded Coral Shrimp","Banded Sea Krait","Barnacle","Barndoor Skate","Barracuda","Basking Shark","Bass","Beluga Whale","Bluebanded Goby","Bluehead Wrasse","Bluefish","Bluestreak Cleaner-Wrasse","Blue Marlin","Blue Shark","Blue Spiny Lobster","Blue Tang","Blue Whale","Broadclub Cuttlefish","Bull Shark","Chambered Nautilus","Chilean Basket Star","Chilean Jack Mackerel","Chinook Salmon","Christmas Tree Worm","Clam","Clown Anemonefish","Clown Triggerfish","Cod","Coelacanth","Cockscomb Cup Coral","Common Fangtooth","Conch","Cookiecutter Shark","Copepod","Coral","Corydoras","Cownose Ray","Crab","Crown-of-Thorns Starfish","Cushion Star","Cuttlefish","California Sea Otters","Dolphin","Dolphinfish","Dory","Devil Fish","Dugong","Dumbo Octopus","Dungeness Crab","Eccentric Sand Dollar","Edible Sea Cucumber","Eel","Elephant Seal","Elkhorn Coral","Emperor Shrimp","Estuarine Crocodile","Fathead Sculpin","Fiddler Crab","Fin Whale","Flameback","Flamingo Tongue Snail","Flashlight Fish","Flatback Turtle","Flatfish","Flying Fish","Flounder","Fluke","French Angelfish","Frilled Shark","Fugu (also called Pufferfish)","Gar","Geoduck","Giant Barrel Sponge","Giant Caribbean Sea Anemone","Giant Clam","Giant Isopod","Giant Kingfish","Giant Oarfish","Giant Pacific Octopus","Giant Pyrosome","Giant Sea Star","Giant Squid","Glowing Sucker Octopus","Giant Tube Worm","Goblin Shark","Goosefish","Great White Shark","Greenland Shark","Grey Atlantic Seal","Grouper","Grunion","Guineafowl Puffer","Haddock","Hake","Halibut","Hammerhead Shark","Hapuka","Harbor Porpoise","Harbor Seal","Hatchetfish","Hawaiian Monk Seal","Hawksbill Turtle","Hector's Dolphin","Hermit Crab","Herring","Hoki","Horn Shark","Horseshoe Crab","Humpback Anglerfish","Humpback Whale","Icefish","Imperator Angelfish","Irukandji Jellyfish","Isopod","Ivory Bush Coral","Japanese Spider Crab","Jellyfish","John Dory","Juan Fernandez Fur Seal","Killer Whale","Kiwa Hirsuta","Krill","Lagoon Triggerfish","Lamprey","Leafy Seadragon","Leopard Seal","Limpet","Ling","Lionfish","Lions Mane Jellyfish","Lobe Coral","Lobster","Loggerhead Turtle","Longnose Sawshark","Longsnout Seahorse","Lophelia Coral","Marrus Orthocanna","Manatee","Manta Ray","Marlin","Megamouth Shark","Mexican Lookdown","Mimic Octopus","Moon Jelly","Mollusk","Monkfish","Moray Eel","Mullet","Mussel","Megaladon","Napoleon Wrasse","Nassau Grouper","Narwhal","Nautilus","Needlefish","Northern Seahorse","North Atlantic Right Whale","Northern Red Snapper","Norway Lobster","Nudibranch","Nurse Shark","Oarfish","Ocean Sunfish","Oceanic Whitetip Shark","Octopus","Olive Sea Snake","Orange Roughy","Ostracod","Otter","Oyster","Pacific Angelshark","Pacific Blackdragon","Pacific Halibut","Pacific Sardine","Pacific Sea Nettle Jellyfish","Pacific White Sided Dolphin","Pantropical Spotted Dolphin","Patagonian Toothfish","Peacock Mantis Shrimp","Pelagic Thresher Shark","Penguin","Peruvian Anchoveta","Pilchard","Pink Salmon","Pinniped","Plankton","Porpoise","Polar Bear","Portuguese Man o' War","Pycnogonid Sea Spider","Quahog","Queen Angelfish","Queen Conch","Queen Parrotfish","Queensland Grouper","Ragfish","Ratfish","Rattail Fish","Ray","Red Drum","Red King Crab","Ringed Seal","Risso's Dolphin","Ross Seals","Sablefish","Salmon","Sand Dollar","Sandbar Shark","Sawfish","Sarcastic Fringehead","Scalloped Hammerhead Shark","Seahorse","Sea Cucumber","Sea Lion","Sea Urchin","Seal","Shark","Shortfin Mako Shark","Shovelnose Guitarfish","Shrimp","Silverside Fish","Skipjack Tuna","Slender Snipe Eel","Smalltooth Sawfish","Smelts","Sockeye Salmon","Southern Stingray","Sponge","Spotted Porcupinefish","Spotted Dolphin","Spotted Eagle Ray","Spotted Moray","Squid","Squidworm","Starfish","Stickleback","Stonefish","Stoplight Loosejaw","Sturgeon","Swordfish","Tan Bristlemouth","Tasseled Wobbegong","Terrible Claw Lobster","Threespot Damselfish","Tiger Prawn","Tiger Shark","Tilefish","Toadfish","Tropical Two-Wing Flyfish","Tuna","Umbrella Squid","Velvet Crab","Venus Flytrap Sea Anemone","Vigtorniella Worm","Viperfish","Vampire Squid","Vaquita","Wahoo","Walrus","West Indian Manatee","Whale","Whale Shark","Whiptail Gulper","White-Beaked Dolphin","White-Ring Garden Eel","White Shrimp","Wobbegong","Wrasse","Wreckfish","Xiphosura","Yellowtail Damselfish","Yelloweye Rockfish","Yellow Cup Black Coral","Yellow Tube Sponge","Yellowfin Tuna","Zebrashark","Zooplankton"],desert:["Aardwolf","Addax","African Wild Ass","Ant","Antelope","Armadillo","Baboon","Badger","Bat","Bearded Dragon","Beetle","Bird","Black-footed Cat","Boa","Brown Bear","Bustard","Butterfly","Camel","Caracal","Caracara","Caterpillar","Centipede","Cheetah","Chipmunk","Chuckwalla","Climbing Mouse","Coati","Cobra","Cotton Rat","Cougar","Courser","Crane Fly","Crow","Dassie Rat","Dove","Dunnart","Eagle","Echidna","Elephant","Emu","Falcon","Fly","Fox","Frogmouth","Gecko","Geoffroy's Cat","Gerbil","Grasshopper","Guanaco","Gundi","Hamster","Hawk","Hedgehog","Hyena","Hyrax","Jackal","Kangaroo","Kangaroo Rat","Kestrel","Kowari","Kultarr","Leopard","Lion","Macaw","Meerkat","Mouse","Oryx","Ostrich","Owl","Pronghorn","Python","Rabbit","Raccoon","Rattlesnake","Rhinoceros","Sand Cat","Spectacled Bear","Spiny Mouse","Starling","Stick Bug","Tarantula","Tit","Toad","Tortoise","Tyrant Flycatcher","Viper","Vulture","Waxwing","Xerus","Zebra"],grassland:["Aardvark","Aardwolf","Accentor","African Buffalo","African Wild Dog","Alpaca","Anaconda","Ant","Anteater","Antelope","Armadillo","Baboon","Badger","Bandicoot","Barbet","Bat","Bee","Bee-eater","Beetle","Bird","Bison","Black-footed Cat","Black-footed Ferret","Bluebird","Boa","Bowerbird","Brown Bear","Bush Dog","Bushshrike","Bustard","Butterfly","Buzzard","Caracal","Caracara","Cardinal","Caterpillar","Cheetah","Chipmunk","Civet","Climbing Mouse","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Common Genet","Cotton Rat","Cougar","Courser","Coyote","Crane","Crane Fly","Cricket","Crow","Culpeo","Death Adder","Deer","Deer Mouse","Dingo","Dinosaur","Dove","Drongo","Duck","Duiker","Dunnart","Eagle","Echidna","Elephant","Elk","Emu","Falcon","Finch","Flea","Fly","Flying Frog","Fox","Frog","Frogmouth","Garter Snake","Gazelle","Gecko","Geoffroy's Cat","Gerbil","Giant Tortoise","Giraffe","Grasshopper","Grison","Groundhog","Grouse","Guanaco","Guinea Pig","Hamster","Harrier","Hartebeest","Hawk","Hedgehog","Helmetshrike","Hippopotamus","Hornbill","Hyena","Hyrax","Impala","Jackal","Jaguar","Jaguarundi","Kangaroo","Kangaroo Rat","Kestrel","Kultarr","Ladybug","Leopard","Lion","Macaw","Meerkat","Mouse","Newt","Oryx","Ostrich","Owl","Pangolin","Pheasant","Prairie Dog","Pronghorn","Przewalski's Horse","Python","Quoll","Rabbit","Raven","Rhinoceros","Shelduck","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Tamandua","Tasmanian Devil","Thornbill","Thrush","Toad","Tortoise"],forest:["Agouti","Anaconda","Anoa","Ant","Anteater","Antelope","Armadillo","Asian Black Bear","Aye-aye","Babirusa","Baboon","Badger","Bandicoot","Banteng","Barbet","Basilisk","Bat","Bearded Dragon","Bee","Bee-eater","Beetle","Bettong","Binturong","Bird-of-paradise","Bongo","Bowerbird","Bulbul","Bush Dog","Bushbaby","Bushshrike","Butterfly","Buzzard","Caecilian","Cardinal","Cassowary","Caterpillar","Centipede","Chameleon","Chimpanzee","Cicada","Civet","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Colugo","Cotinga","Cotton Rat","Cougar","Crane Fly","Cricket","Crocodile","Crow","Cuckoo","Cuscus","Death Adder","Deer","Dhole","Dingo","Dinosaur","Drongo","Duck","Duiker","Eagle","Echidna","Elephant","Finch","Flat-headed Cat","Flea","Flowerpecker","Fly","Flying Frog","Fossa","Frog","Frogmouth","Gaur","Gecko","Gorilla","Grison","Hawaiian Honeycreeper","Hawk","Hedgehog","Helmetshrike","Hornbill","Hyrax","Iguana","Jackal","Jaguar","Jaguarundi","Kestrel","Ladybug","Lemur","Leopard","Lion","Macaw","Mandrill","Margay","Monkey","Mouse","Mouse Deer","Newt","Okapi","Old World Flycatcher","Orangutan","Owl","Pangolin","Peafowl","Pheasant","Possum","Python","Quokka","Rabbit","Raccoon","Red Panda","Red River Hog","Rhinoceros","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Sun Bear","Tamandua","Tamarin","Tapir","Tarantula","Thrush","Tiger","Tit","Toad","Tortoise","Toucan","Trogon","Trumpeter","Turaco","Turtle","Tyrant Flycatcher","Viper","Vulture","Wallaby","Warbler","Wasp","Waxwing","Weaver","Weaver-finch","Whistler","White-eye","Whydah","Woodswallow","Worm","Wren","Xenops","Yellowjacket","Accentor","African Buffalo","American Black Bear","Anole","Bird","Bison","Boa","Brown Bear","Chipmunk","Common Genet","Copperhead","Coyote","Deer Mouse","Dormouse","Elk","Emu","Fisher","Fox","Garter Snake","Giant Panda","Giant Tortoise","Groundhog","Grouse","Guanaco","Himalayan Tahr","Kangaroo","Koala","Numbat","Quoll","Raccoon dog","Tasmanian Devil","Thornbill","Turkey","Vole","Weasel","Wildcat","Wolf","Wombat","Woodchuck","Woodpecker"],farm:["Alpaca","Buffalo","Banteng","Cow","Cat","Chicken","Carp","Camel","Donkey","Dog","Duck","Emu","Goat","Gayal","Guinea","Goose","Horse","Honey","Llama","Pig","Pigeon","Rhea","Rabbit","Sheep","Silkworm","Turkey","Yak","Zebu"],pet:["Bearded Dragon","Birds","Burro","Cats","Chameleons","Chickens","Chinchillas","Chinese Water Dragon","Cows","Dogs","Donkey","Ducks","Ferrets","Fish","Geckos","Geese","Gerbils","Goats","Guinea Fowl","Guinea Pigs","Hamsters","Hedgehogs","Horses","Iguanas","Llamas","Lizards","Mice","Mule","Peafowl","Pigs and Hogs","Pigeons","Ponies","Pot Bellied Pig","Rabbits","Rats","Sheep","Skinks","Snakes","Stick Insects","Sugar Gliders","Tarantula","Turkeys","Turtles"],zoo:["Aardvark","African Wild Dog","Aldabra Tortoise","American Alligator","American Bison","Amur Tiger","Anaconda","Andean Condor","Asian Elephant","Baby Doll Sheep","Bald Eagle","Barred Owl","Blue Iguana","Boer Goat","California Sea Lion","Caribbean Flamingo","Chinchilla","Collared Lemur","Coquerel's Sifaka","Cuban Amazon Parrot","Ebony Langur","Fennec Fox","Fossa","Gelada","Giant Anteater","Giraffe","Gorilla","Grizzly Bear","Henkel's Leaf-tailed Gecko","Indian Gharial","Indian Rhinoceros","King Cobra","King Vulture","Komodo Dragon","Linne's Two-toed Sloth","Lion","Little Penguin","Madagascar Tree Boa","Magellanic Penguin","Malayan Tapir","Malayan Tiger","Matschies Tree Kangaroo","Mini Donkey","Monarch Butterfly","Nile crocodile","North American Porcupine","Nubian Ibex","Okapi","Poison Dart Frog","Polar Bear","Pygmy Marmoset","Radiated Tortoise","Red Panda","Red Ruffed Lemur","Ring-tailed Lemur","Ring-tailed Mongoose","Rock Hyrax","Small Clawed Asian Otter","Snow Leopard","Snowy Owl","Southern White-faced Owl","Southern White Rhinocerous","Squirrel Monkey","Tufted Puffin","White Cheeked Gibbon","White-throated Bee Eater","Zebra"]}},g=Object.prototype.hasOwnProperty,M=Object.keys||function(e){var n=[];for(var t in e)g.call(e,t)&&n.push(t);return n};function y(e,n){var t=Array.isArray(e),l=n||(t?new Array(e.length):{});return t?function(e,n){for(var t=0,l=e.length;t<l;t++)n[t]=e[t]}(e,l):function(e,n){for(var t,l=M(e),r=0,i=l.length;r<i;r++)n[t=l[r]]=e[t]||n[t]}(e,l),l}d.prototype.get=function(e){return y(b[e])},d.prototype.mac_address=function(e){(e=p(e)).separator||(e.separator=e.networkVersion?".":":");var n="ABCDEF1234567890";return e.networkVersion?this.n(this.string,3,{pool:n,length:4}).join(e.separator):this.n(this.string,6,{pool:n,length:2}).join(e.separator)},d.prototype.normal=function(e){if(f((e=p(e,{mean:0,dev:1,pool:[]})).pool.constructor!==Array,"Chance: The pool option must be a valid array."),f("number"!=typeof e.mean,"Chance: Mean (mean) must be a number"),f("number"!=typeof e.dev,"Chance: Standard deviation (dev) must be a number"),e.pool.length>0)return this.normal_pool(e);var n,t,l,r=e.mean,i=e.dev;do{n=(t=2*this.random()-1)*t+(l=2*this.random()-1)*l}while(n>=1);return i*(t*Math.sqrt(-2*Math.log(n)/n))+r},d.prototype.normal_pool=function(e){var n=0;do{var t=Math.round(this.normal({mean:e.mean,dev:e.dev}));if(t<e.pool.length&&t>=0)return e.pool[t];n++}while(n<100);throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.")},d.prototype.radio=function(e){var n="";switch((e=p(e,{side:"?"})).side.toLowerCase()){case"east":case"e":n="W";break;case"west":case"w":n="K";break;default:n=this.character({pool:"KW"})}return n+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})},d.prototype.set=function(e,n){"string"==typeof e?b[e]=n:b=y(e,b)},d.prototype.tv=function(e){return this.radio(e)},d.prototype.cnpj=function(){var e=this.n(this.natural,8,{max:9}),n=2+6*e[7]+7*e[6]+8*e[5]+9*e[4]+2*e[3]+3*e[2]+4*e[1]+5*e[0];(n=11-n%11)>=10&&(n=0);var t=2*n+3+7*e[7]+8*e[6]+9*e[5]+2*e[4]+3*e[3]+4*e[2]+5*e[1]+6*e[0];return(t=11-t%11)>=10&&(t=0),""+e[0]+e[1]+"."+e[2]+e[3]+e[4]+"."+e[5]+e[6]+e[7]+"/0001-"+n+t},d.prototype.mersenne_twister=function(e){return new v(e)},d.prototype.blueimp_md5=function(){return new A};var v=function(e){void 0===e&&(e=Math.floor(Math.random()*Math.pow(10,13))),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(e)};v.prototype.init_genrand=function(e){for(this.mt[0]=e>>>0,this.mti=1;this.mti<this.N;this.mti++)e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0},v.prototype.init_by_array=function(e,n){var t,l,r=1,i=0;for(this.init_genrand(19650218),t=this.N>n?this.N:n;t;t--)l=this.mt[r-1]^this.mt[r-1]>>>30,this.mt[r]=(this.mt[r]^(1664525*((4294901760&l)>>>16)<<16)+1664525*(65535&l))+e[i]+i,this.mt[r]>>>=0,i++,++r>=this.N&&(this.mt[0]=this.mt[this.N-1],r=1),i>=n&&(i=0);for(t=this.N-1;t;t--)l=this.mt[r-1]^this.mt[r-1]>>>30,this.mt[r]=(this.mt[r]^(1566083941*((4294901760&l)>>>16)<<16)+1566083941*(65535&l))-r,this.mt[r]>>>=0,++r>=this.N&&(this.mt[0]=this.mt[this.N-1],r=1);this.mt[0]=2147483648},v.prototype.genrand_int32=function(){var e,n=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var t;for(this.mti===this.N+1&&this.init_genrand(5489),t=0;t<this.N-this.M;t++)e=this.mt[t]&this.UPPER_MASK|this.mt[t+1]&this.LOWER_MASK,this.mt[t]=this.mt[t+this.M]^e>>>1^n[1&e];for(;t<this.N-1;t++)e=this.mt[t]&this.UPPER_MASK|this.mt[t+1]&this.LOWER_MASK,this.mt[t]=this.mt[t+(this.M-this.N)]^e>>>1^n[1&e];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^n[1&e],this.mti=0}return e=this.mt[this.mti++],e^=e>>>11,e^=e<<7&2636928640,e^=e<<15&4022730752,(e^=e>>>18)>>>0},v.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},v.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},v.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},v.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},v.prototype.genrand_res53=function(){return(67108864*(this.genrand_int32()>>>5)+(this.genrand_int32()>>>6))*(1/9007199254740992)};var A=function(){};A.prototype.VERSION="1.0.1",A.prototype.safe_add=function(e,n){var t=(65535&e)+(65535&n);return(e>>16)+(n>>16)+(t>>16)<<16|65535&t},A.prototype.bit_roll=function(e,n){return e<<n|e>>>32-n},A.prototype.md5_cmn=function(e,n,t,l,r,i){return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(n,e),this.safe_add(l,i)),r),t)},A.prototype.md5_ff=function(e,n,t,l,r,i,a){return this.md5_cmn(n&t|~n&l,e,n,r,i,a)},A.prototype.md5_gg=function(e,n,t,l,r,i,a){return this.md5_cmn(n&l|t&~l,e,n,r,i,a)},A.prototype.md5_hh=function(e,n,t,l,r,i,a){return this.md5_cmn(n^t^l,e,n,r,i,a)},A.prototype.md5_ii=function(e,n,t,l,r,i,a){return this.md5_cmn(t^(n|~l),e,n,r,i,a)},A.prototype.binl_md5=function(e,n){e[n>>5]|=128<<n%32,e[14+(n+64>>>9<<4)]=n;var t,l,r,i,a,o=1732584193,u=-271733879,s=-1732584194,c=271733878;for(t=0;t<e.length;t+=16)l=o,r=u,i=s,a=c,o=this.md5_ff(o,u,s,c,e[t],7,-680876936),c=this.md5_ff(c,o,u,s,e[t+1],12,-389564586),s=this.md5_ff(s,c,o,u,e[t+2],17,606105819),u=this.md5_ff(u,s,c,o,e[t+3],22,-1044525330),o=this.md5_ff(o,u,s,c,e[t+4],7,-176418897),c=this.md5_ff(c,o,u,s,e[t+5],12,1200080426),s=this.md5_ff(s,c,o,u,e[t+6],17,-1473231341),u=this.md5_ff(u,s,c,o,e[t+7],22,-45705983),o=this.md5_ff(o,u,s,c,e[t+8],7,1770035416),c=this.md5_ff(c,o,u,s,e[t+9],12,-1958414417),s=this.md5_ff(s,c,o,u,e[t+10],17,-42063),u=this.md5_ff(u,s,c,o,e[t+11],22,-1990404162),o=this.md5_ff(o,u,s,c,e[t+12],7,1804603682),c=this.md5_ff(c,o,u,s,e[t+13],12,-40341101),s=this.md5_ff(s,c,o,u,e[t+14],17,-1502002290),u=this.md5_ff(u,s,c,o,e[t+15],22,1236535329),o=this.md5_gg(o,u,s,c,e[t+1],5,-165796510),c=this.md5_gg(c,o,u,s,e[t+6],9,-1069501632),s=this.md5_gg(s,c,o,u,e[t+11],14,643717713),u=this.md5_gg(u,s,c,o,e[t],20,-373897302),o=this.md5_gg(o,u,s,c,e[t+5],5,-701558691),c=this.md5_gg(c,o,u,s,e[t+10],9,38016083),s=this.md5_gg(s,c,o,u,e[t+15],14,-660478335),u=this.md5_gg(u,s,c,o,e[t+4],20,-405537848),o=this.md5_gg(o,u,s,c,e[t+9],5,568446438),c=this.md5_gg(c,o,u,s,e[t+14],9,-1019803690),s=this.md5_gg(s,c,o,u,e[t+3],14,-187363961),u=this.md5_gg(u,s,c,o,e[t+8],20,1163531501),o=this.md5_gg(o,u,s,c,e[t+13],5,-1444681467),c=this.md5_gg(c,o,u,s,e[t+2],9,-51403784),s=this.md5_gg(s,c,o,u,e[t+7],14,1735328473),u=this.md5_gg(u,s,c,o,e[t+12],20,-1926607734),o=this.md5_hh(o,u,s,c,e[t+5],4,-378558),c=this.md5_hh(c,o,u,s,e[t+8],11,-2022574463),s=this.md5_hh(s,c,o,u,e[t+11],16,1839030562),u=this.md5_hh(u,s,c,o,e[t+14],23,-35309556),o=this.md5_hh(o,u,s,c,e[t+1],4,-1530992060),c=this.md5_hh(c,o,u,s,e[t+4],11,1272893353),s=this.md5_hh(s,c,o,u,e[t+7],16,-155497632),u=this.md5_hh(u,s,c,o,e[t+10],23,-1094730640),o=this.md5_hh(o,u,s,c,e[t+13],4,681279174),c=this.md5_hh(c,o,u,s,e[t],11,-358537222),s=this.md5_hh(s,c,o,u,e[t+3],16,-722521979),u=this.md5_hh(u,s,c,o,e[t+6],23,76029189),o=this.md5_hh(o,u,s,c,e[t+9],4,-640364487),c=this.md5_hh(c,o,u,s,e[t+12],11,-421815835),s=this.md5_hh(s,c,o,u,e[t+15],16,530742520),u=this.md5_hh(u,s,c,o,e[t+2],23,-995338651),o=this.md5_ii(o,u,s,c,e[t],6,-198630844),c=this.md5_ii(c,o,u,s,e[t+7],10,1126891415),s=this.md5_ii(s,c,o,u,e[t+14],15,-1416354905),u=this.md5_ii(u,s,c,o,e[t+5],21,-57434055),o=this.md5_ii(o,u,s,c,e[t+12],6,1700485571),c=this.md5_ii(c,o,u,s,e[t+3],10,-1894986606),s=this.md5_ii(s,c,o,u,e[t+10],15,-1051523),u=this.md5_ii(u,s,c,o,e[t+1],21,-2054922799),o=this.md5_ii(o,u,s,c,e[t+8],6,1873313359),c=this.md5_ii(c,o,u,s,e[t+15],10,-30611744),s=this.md5_ii(s,c,o,u,e[t+6],15,-1560198380),u=this.md5_ii(u,s,c,o,e[t+13],21,1309151649),o=this.md5_ii(o,u,s,c,e[t+4],6,-145523070),c=this.md5_ii(c,o,u,s,e[t+11],10,-1120210379),s=this.md5_ii(s,c,o,u,e[t+2],15,718787259),u=this.md5_ii(u,s,c,o,e[t+9],21,-343485551),o=this.safe_add(o,l),u=this.safe_add(u,r),s=this.safe_add(s,i),c=this.safe_add(c,a);return[o,u,s,c]},A.prototype.binl2rstr=function(e){var n,t="";for(n=0;n<32*e.length;n+=8)t+=String.fromCharCode(e[n>>5]>>>n%32&255);return t},A.prototype.rstr2binl=function(e){var n,t=[];for(t[(e.length>>2)-1]=void 0,n=0;n<t.length;n+=1)t[n]=0;for(n=0;n<8*e.length;n+=8)t[n>>5]|=(255&e.charCodeAt(n/8))<<n%32;return t},A.prototype.rstr_md5=function(e){return this.binl2rstr(this.binl_md5(this.rstr2binl(e),8*e.length))},A.prototype.rstr_hmac_md5=function(e,n){var t,l,r=this.rstr2binl(e),i=[],a=[];for(i[15]=a[15]=void 0,r.length>16&&(r=this.binl_md5(r,8*e.length)),t=0;t<16;t+=1)i[t]=909522486^r[t],a[t]=1549556828^r[t];return l=this.binl_md5(i.concat(this.rstr2binl(n)),512+8*n.length),this.binl2rstr(this.binl_md5(a.concat(l),640))},A.prototype.rstr2hex=function(e){var n,t,l="0123456789abcdef",r="";for(t=0;t<e.length;t+=1)n=e.charCodeAt(t),r+=l.charAt(n>>>4&15)+l.charAt(15&n);return r},A.prototype.str2rstr_utf8=function(e){return unescape(encodeURIComponent(e))},A.prototype.raw_md5=function(e){return this.rstr_md5(this.str2rstr_utf8(e))},A.prototype.hex_md5=function(e){return this.rstr2hex(this.raw_md5(e))},A.prototype.raw_hmac_md5=function(e,n){return this.rstr_hmac_md5(this.str2rstr_utf8(e),this.str2rstr_utf8(n))},A.prototype.hex_hmac_md5=function(e,n){return this.rstr2hex(this.raw_hmac_md5(e,n))},A.prototype.md5=function(e,n,t){return n?t?this.raw_hmac_md5(n,e):this.hex_hmac_md5(n,e):t?this.raw_md5(e):this.hex_md5(e)},e.exports&&(n=e.exports=d),n.Chance=d,void 0===(l=function(){return d}.apply(n,[]))||(e.exports=l),"undefined"!=typeof importScripts&&(chance=new d,self.Chance=d),"object"==typeof window&&"object"==typeof window.document&&(window.Chance=d,window.chance=new d)}()},43581:e=>{"use strict";var n=/\s*function(?:\s|\s*\/\*[^(?:*\/)]+\*\/\s*)*([^\(\/]+)/;function t(e){var t="";if(void 0===e.name){var l=String(e).match(n);l&&(t=l[1])}else t=e.name;return t}e.exports={compatibleInstance:function(e,n){return n instanceof Error&&e===n},compatibleConstructor:function(e,n){return n instanceof Error?e.constructor===n.constructor||e instanceof n.constructor:(n.prototype instanceof Error||n===Error)&&(e.constructor===n||e instanceof n)},compatibleMessage:function(e,n){var t="string"==typeof e?e:e.message;return n instanceof RegExp?n.test(t):"string"==typeof n&&-1!==t.indexOf(n)},getMessage:function(e){var n="";return e&&e.message?n=e.message:"string"==typeof e&&(n=e),n},getConstructorName:function(e){var n=e;return e instanceof Error?n=t(e.constructor):"function"==typeof e&&(n=t(e).trim()||t(new e)),n}}},66265:(e,n,t)=>{"use strict";var l=t(24834);function r(){this._key="chai/deep-eql__"+Math.random()+Date.now()}r.prototype={get:function(e){return e[this._key]},set:function(e,n){Object.isExtensible(e)&&Object.defineProperty(e,this._key,{value:n,configurable:!0})}};var i="function"==typeof WeakMap?WeakMap:r;function a(e,n,t){if(!t||m(e)||m(n))return null;var l=t.get(e);if(l){var r=l.get(n);if("boolean"==typeof r)return r}return null}function o(e,n,t,l){if(t&&!m(e)&&!m(n)){var r=t.get(e);r?r.set(n,l):((r=new i).set(n,l),t.set(e,r))}}function u(e,n,t){if(t&&t.comparator)return c(e,n,t);var l=s(e,n);return null!==l?l:c(e,n,t)}function s(e,n){return e===n?0!==e||1/e==1/n:e!=e&&n!=n||!m(e)&&!m(n)&&null}function c(e,n,t){(t=t||{}).memoize=!1!==t.memoize&&(t.memoize||new i);var r=t&&t.comparator,c=a(e,n,t.memoize);if(null!==c)return c;var m=a(n,e,t.memoize);if(null!==m)return m;if(r){var b=r(e,n);if(!1===b||!0===b)return o(e,n,t.memoize,b),b;var g=s(e,n);if(null!==g)return g}var M=l(e);if(M!==l(n))return o(e,n,t.memoize,!1),!1;o(e,n,t.memoize,!0);var y=function(e,n,t,l){switch(t){case"String":case"Number":case"Boolean":case"Date":return u(e.valueOf(),n.valueOf());case"Promise":case"Symbol":case"function":case"WeakMap":case"WeakSet":case"Error":return e===n;case"Arguments":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"Array":return d(e,n,l);case"RegExp":return function(e,n){return e.toString()===n.toString()}(e,n);case"Generator":return function(e,n,t){return d(f(e),f(n),t)}(e,n,l);case"DataView":return d(new Uint8Array(e.buffer),new Uint8Array(n.buffer),l);case"ArrayBuffer":return d(new Uint8Array(e),new Uint8Array(n),l);case"Set":case"Map":return function(e,n,t){if(e.size!==n.size)return!1;if(0===e.size)return!0;var l=[],r=[];return e.forEach((function(e,n){l.push([e,n])})),n.forEach((function(e,n){r.push([e,n])})),d(l.sort(),r.sort(),t)}(e,n,l);default:return function(e,n,t){var l=h(e),r=h(n);if(l.length&&l.length===r.length)return l.sort(),r.sort(),!1!==d(l,r)&&function(e,n,t,l){var r=t.length;if(0===r)return!0;for(var i=0;i<r;i+=1)if(!1===u(e[t[i]],n[t[i]],l))return!1;return!0}(e,n,l,t);var i=p(e),a=p(n);return i.length&&i.length===a.length?(i.sort(),a.sort(),d(i,a,t)):0===l.length&&0===i.length&&0===r.length&&0===a.length}(e,n,l)}}(e,n,M,t);return o(e,n,t.memoize,y),y}function d(e,n,t){var l=e.length;if(l!==n.length)return!1;if(0===l)return!0;for(var r=-1;++r<l;)if(!1===u(e[r],n[r],t))return!1;return!0}function p(e){if(function(e){return"undefined"!=typeof Symbol&&"object"==typeof e&&void 0!==Symbol.iterator&&"function"==typeof e[Symbol.iterator]}(e))try{return f(e[Symbol.iterator]())}catch(e){return[]}return[]}function f(e){for(var n=e.next(),t=[n.value];!1===n.done;)n=e.next(),t.push(n.value);return t}function h(e){var n=[];for(var t in e)n.push(t);return n}function m(e){return null===e||"object"!=typeof e}e.exports=u,e.exports.MemoizeMap=i},82142:e=>{function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function t(e){return"function"==typeof e}function l(e){return"object"==typeof e&&null!==e}function r(e){return void 0===e}e.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},n.prototype.emit=function(e){var n,i,a,o,u,s;if(this._events||(this._events={}),"error"===e&&(!this._events.error||l(this._events.error)&&!this._events.error.length)){if((n=arguments[1])instanceof Error)throw n;var c=new Error('Uncaught, unspecified "error" event. ('+n+")");throw c.context=n,c}if(r(i=this._events[e]))return!1;if(t(i))switch(arguments.length){case 1:i.call(this);break;case 2:i.call(this,arguments[1]);break;case 3:i.call(this,arguments[1],arguments[2]);break;default:o=Array.prototype.slice.call(arguments,1),i.apply(this,o)}else if(l(i))for(o=Array.prototype.slice.call(arguments,1),a=(s=i.slice()).length,u=0;u<a;u++)s[u].apply(this,o);return!0},n.prototype.addListener=function(e,i){var a;if(!t(i))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,t(i.listener)?i.listener:i),this._events[e]?l(this._events[e])?this._events[e].push(i):this._events[e]=[this._events[e],i]:this._events[e]=i,l(this._events[e])&&!this._events[e].warned&&(a=r(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&a>0&&this._events[e].length>a&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,n){if(!t(n))throw TypeError("listener must be a function");var l=!1;function r(){this.removeListener(e,r),l||(l=!0,n.apply(this,arguments))}return r.listener=n,this.on(e,r),this},n.prototype.removeListener=function(e,n){var r,i,a,o;if(!t(n))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(a=(r=this._events[e]).length,i=-1,r===n||t(r.listener)&&r.listener===n)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,n);else if(l(r)){for(o=a;o-- >0;)if(r[o]===n||r[o].listener&&r[o].listener===n){i=o;break}if(i<0)return this;1===r.length?(r.length=0,delete this._events[e]):r.splice(i,1),this._events.removeListener&&this.emit("removeListener",e,n)}return this},n.prototype.removeAllListeners=function(e){var n,l;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(n in this._events)"removeListener"!==n&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events={},this}if(t(l=this._events[e]))this.removeListener(e,l);else if(l)for(;l.length;)this.removeListener(e,l[l.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){return this._events&&this._events[e]?t(this._events[e])?[this._events[e]]:this._events[e].slice():[]},n.prototype.listenerCount=function(e){if(this._events){var n=this._events[e];if(t(n))return 1;if(n)return n.length}return 0},n.listenerCount=function(e,n){return e.listenerCount(n)}},15606:(e,n,t)=>{"use strict";var l=t(81295),r=Object.prototype.toString,i=Object.prototype.hasOwnProperty,a=function(e,n,t){for(var l=0,r=e.length;l<r;l++)i.call(e,l)&&(null==t?n(e[l],l,e):n.call(t,e[l],l,e))},o=function(e,n,t){for(var l=0,r=e.length;l<r;l++)null==t?n(e.charAt(l),l,e):n.call(t,e.charAt(l),l,e)},u=function(e,n,t){for(var l in e)i.call(e,l)&&(null==t?n(e[l],l,e):n.call(t,e[l],l,e))};e.exports=function(e,n,t){if(!l(n))throw new TypeError("iterator must be a function");var i;arguments.length>=3&&(i=t),"[object Array]"===r.call(e)?a(e,n,i):"string"==typeof e?o(e,n,i):u(e,n,i)}},44700:e=>{"use strict";var n="Function.prototype.bind called on incompatible ",t=Array.prototype.slice,l=Object.prototype.toString,r="[object Function]";e.exports=function(e){var i=this;if("function"!=typeof i||l.call(i)!==r)throw new TypeError(n+i);for(var a,o=t.call(arguments,1),u=function(){if(this instanceof a){var n=i.apply(this,o.concat(t.call(arguments)));return Object(n)===n?n:this}return i.apply(e,o.concat(t.call(arguments)))},s=Math.max(0,i.length-o.length),c=[],d=0;d<s;d++)c.push("$"+d);if(a=Function("binder","return function ("+c.join(",")+"){ return binder.apply(this,arguments); }")(u),i.prototype){var p=function(){};p.prototype=i.prototype,a.prototype=new p,p.prototype=null}return a}},65120:(e,n,t)=>{"use strict";var l=t(44700);e.exports=Function.prototype.bind||l},91521:e=>{"use strict";var n=Function.prototype.toString,t=/\s*function(?:\s|\s*\/\*[^(?:*\/)]+\*\/\s*)*([^\s\(\/]+)/;e.exports=function(e){if("function"!=typeof e)return null;var l="";if(void 0===Function.prototype.name&&void 0===e.name){var r=n.call(e).match(t);r&&(l=r[1])}else l=e.name;return l}},7370:(e,n,t)=>{"use strict";var l,r=SyntaxError,i=Function,a=TypeError,o=function(e){try{return i('"use strict"; return ('+e+").constructor;")()}catch(e){}},u=Object.getOwnPropertyDescriptor;if(u)try{u({},"")}catch(e){u=null}var s=function(){throw new a},c=u?function(){try{return s}catch(e){try{return u(arguments,"callee").get}catch(e){return s}}}():s,d=t(51012)(),p=Object.getPrototypeOf||function(e){return e.__proto__},f={},h="undefined"==typeof Uint8Array?l:p(Uint8Array),m={"%AggregateError%":"undefined"==typeof AggregateError?l:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?l:ArrayBuffer,"%ArrayIteratorPrototype%":d?p([][Symbol.iterator]()):l,"%AsyncFromSyncIteratorPrototype%":l,"%AsyncFunction%":f,"%AsyncGenerator%":f,"%AsyncGeneratorFunction%":f,"%AsyncIteratorPrototype%":f,"%Atomics%":"undefined"==typeof Atomics?l:Atomics,"%BigInt%":"undefined"==typeof BigInt?l:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?l:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?l:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?l:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?l:FinalizationRegistry,"%Function%":i,"%GeneratorFunction%":f,"%Int8Array%":"undefined"==typeof Int8Array?l:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?l:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?l:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":d?p(p([][Symbol.iterator]())):l,"%JSON%":"object"==typeof JSON?JSON:l,"%Map%":"undefined"==typeof Map?l:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&d?p((new Map)[Symbol.iterator]()):l,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?l:Promise,"%Proxy%":"undefined"==typeof Proxy?l:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?l:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?l:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&d?p((new Set)[Symbol.iterator]()):l,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?l:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":d?p(""[Symbol.iterator]()):l,"%Symbol%":d?Symbol:l,"%SyntaxError%":r,"%ThrowTypeError%":c,"%TypedArray%":h,"%TypeError%":a,"%Uint8Array%":"undefined"==typeof Uint8Array?l:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?l:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?l:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?l:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?l:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?l:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?l:WeakSet},b=function e(n){var t;if("%AsyncFunction%"===n)t=o("async function () {}");else if("%GeneratorFunction%"===n)t=o("function* () {}");else if("%AsyncGeneratorFunction%"===n)t=o("async function* () {}");else if("%AsyncGenerator%"===n){var l=e("%AsyncGeneratorFunction%");l&&(t=l.prototype)}else if("%AsyncIteratorPrototype%"===n){var r=e("%AsyncGenerator%");r&&(t=p(r.prototype))}return m[n]=t,t},g={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},M=t(65120),y=t(20661),v=M.call(Function.call,Array.prototype.concat),A=M.call(Function.apply,Array.prototype.splice),w=M.call(Function.call,String.prototype.replace),_=M.call(Function.call,String.prototype.slice),C=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,T=/\\(\\)?/g,S=function(e){var n=_(e,0,1),t=_(e,-1);if("%"===n&&"%"!==t)throw new r("invalid intrinsic syntax, expected closing `%`");if("%"===t&&"%"!==n)throw new r("invalid intrinsic syntax, expected opening `%`");var l=[];return w(e,C,(function(e,n,t,r){l[l.length]=t?w(r,T,"$1"):n||e})),l},z=function(e,n){var t,l=e;if(y(g,l)&&(l="%"+(t=g[l])[0]+"%"),y(m,l)){var i=m[l];if(i===f&&(i=b(l)),void 0===i&&!n)throw new a("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:t,name:l,value:i}}throw new r("intrinsic "+e+" does not exist!")};e.exports=function(e,n){if("string"!=typeof e||0===e.length)throw new a("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof n)throw new a('"allowMissing" argument must be a boolean');var t=S(e),l=t.length>0?t[0]:"",i=z("%"+l+"%",n),o=i.name,s=i.value,c=!1,d=i.alias;d&&(l=d[0],A(t,v([0,1],d)));for(var p=1,f=!0;p<t.length;p+=1){var h=t[p],b=_(h,0,1),g=_(h,-1);if(('"'===b||"'"===b||"`"===b||'"'===g||"'"===g||"`"===g)&&b!==g)throw new r("property names with quotes must have matching quotes");if("constructor"!==h&&f||(c=!0),y(m,o="%"+(l+="."+h)+"%"))s=m[o];else if(null!=s){if(!(h in s)){if(!n)throw new a("base intrinsic for "+e+" exists, but the property is not available.");return}if(u&&p+1>=t.length){var M=u(s,h);s=(f=!!M)&&"get"in M&&!("originalValue"in M.get)?M.get:s[h]}else f=y(s,h),s=s[h];f&&!c&&(m[o]=s)}}return s}},51609:(e,n,t)=>{"use strict";var l=t(7370)("%Object.getOwnPropertyDescriptor%",!0);if(l)try{l([],"length")}catch(e){l=null}e.exports=l},1310:(e,n,t)=>{"use strict";t.d(n,{Disposable:()=>a,Observable:()=>v,subscribeElem:()=>D});var l=t(70205);const r={autoDispose(e){}};let i=r;class a{constructor(){this._disposalList=new d,i.autoDispose(this),i=r}static create(e,...n){const t=i,l=new o;try{return i=l,s(e,new this(...n))}catch(e){try{l.clear()}catch(e){console.error("Error disposing partially constructed %s:",this.name,e)}throw e}finally{l.release(),i=t}}autoDispose(e){return this.onDispose(e.dispose,e),e}onDispose(e,n){return this._disposalList.addListener(e,n)}wipeOnDispose(){this.onDispose(this._wipeOutObject,this)}isDisposed(){return null===this._disposalList}dispose(){const e=this._disposalList;e?(this._disposalList=null,e.callAndDispose(this)):console.error("Error disposing %s which is already disposed",c(this))}_wipeOutObject(){for(const e of Object.keys(this))this[e]=null}}class o{constructor(){this._owned=null,this._disposalListener=void 0}static create(e){return s(e,new o)}autoDispose(e){return this.clear(),this._owned=e,e instanceof a&&(this._disposalListener=e.onDispose(this._onOutsideDispose,this)),e}release(){this._unlisten();const e=this._owned;return this._owned=null,e}clear(){this._unlisten();const e=this._owned;e&&(this._owned=null,e.dispose())}get(){return this._owned}isEmpty(){return!this._owned}dispose(){this.clear()}_unlisten(){const e=this._disposalListener;e&&(this._disposalListener=void 0,e.dispose())}_onOutsideDispose(){this._disposalListener=void 0,this._owned=null}}class u extends a{}function s(e,n){return e&&e.autoDispose(n),n}function c(e){return e&&e.constructor&&e.constructor.name?e.constructor.name:""+e}class d extends l.YI{constructor(){super()}addListener(e,n){const t=new p(e,n);return this._insertBefore(this._next,t),t}callAndDispose(e){try{p.callAll(this._next,this,e)}finally{this._disposeList()}}}class p extends l.YI{constructor(e,n){super(),this.callback=e,this.context=n}static callAll(e,n,t){for(;e!==n;){const n=e;try{n.callback.call(n.context)}catch(e){console.error("While disposing %s, error disposing %s: %s",c(t),c(this),e)}e=n._next}}dispose(){this.isDisposed()||this._removeNode(this)}}class f{constructor(e,n){this._priority=0,this._enqueued=!1,this._creation=++m,this._callback=e,this._context=n}static isPrioritySmaller(e,n){return e._priority<n._priority||e._priority===n._priority&&e._creation<n._creation}useDep(e){const n=e?e._priority:0;n>=this._priority&&(this._priority=n+1)}recompute(){this._priority=0,this._callback.call(this._context)}enqueue(){this._enqueued||(this._enqueued=!0,h.push(this))}}const h=new class{constructor(e){this._isPrior=e,this._items=[]}get size(){return this._items.length}push(e){const n=this._items,t=this._isPrior;let l=this._items.length;for(;l>0;){const r=l-1>>1,i=n[r];if(t(i,e))break;n[l]=i,l=r}n[l]=e}peek(){return this._items[0]}pop(){if(this._items.length<=1)return this._items.pop();const e=this._items,n=this._isPrior,t=e[0],l=e.pop(),r=this._items.length;let i=0,a=1;for(;a<r;){const t=a+1,o=t<r&&n(e[t],e[a])?t:a;if(n(l,e[o]))break;e[i]=e[o],i=o,a=i+i+1}return e[i]=l,t}}(f.isPrioritySmaller);let m=0;const b=[];let g=0;function M(){if(0===g&&h.size>0){g++;try{do{const e=h.pop();b.push(e),e.recompute()}while(h.size>0)}finally{for(const e of b)e._enqueued=!1;b.length=0,g--}}}class y{constructor(e){this._onChange=new l.Q5,this._value=e}get(){return this._value}set(e){e!==this._value&&this.setAndTrigger(e)}setAndTrigger(e){const n=this._value;this._value=e,this._onChange.emit(e,n),this._disposeOwned(),M()}addListener(e,n){return this._onChange.addListener(e,n)}hasListeners(){return this._onChange.hasListeners()}setListenerChangeCB(e,n){this._onChange.setChangeCB(e,n)}_getDepItem(){return null}dispose(){this._disposeOwned(),this._onChange.dispose(),this._value=void 0}isDisposed(){return this._onChange.isDisposed()}_disposeOwned(e){}_setWithArg(e,n){const t=this._value;this._value=e,this._onChange.emit(e,t,n),this._disposeOwned(n),M()}}class v extends y{constructor(){super(...arguments),this._owned=void 0}static holder(e){const n=new v(e);return n._owned=e,n}static create(e,n){return s(e,new v(n))}autoDispose(e){return this.setAndTrigger(e),this._owned=e,e}_disposeOwned(){this._owned&&(this._owned.dispose(),this._owned=void 0)}}const A=new WeakMap;function w(e,n){let t=e.firstChild;for(;t;)w(t,n),t=t.nextSibling;n(e)}const _={disposeNode:function(e){let n=A.get(e);if(n){let t=e;do{A.delete(t),n(e),t=n,n=A.get(t)}while(n)}},disposeRecursive:function(e){w(e,_.disposeNode)}};function C(e){_.disposeRecursive(e)}function T(e,n){const t=A.get(e);A.set(e,n),t&&A.set(n,t)}function S(e){return n=>T(n,e)}function z(e,n){n&&T(e,(()=>n.dispose()))}function O(e){if(e)return n=>z(n,e)}const E=new WeakMap;function L(e){return E.get(e)||E.set(e,new x(e)).get(e)}new WeakMap;class x extends v{constructor(e){super(e.peek()),this._koObs=e,this._koSub=null,this.setListenerChangeCB((e=>{e?this._koSub||(this._value=this._koObs.peek(),this._koSub=this._koObs.subscribe((e=>this.setAndTrigger(e)))):(this._koSub.dispose(),this._koSub=null)}))}get(){return this._koObs.peek()}set(e){!function(e){try{g++,e()}finally{g--,M()}}((()=>this._koObs(e)))}dispose(){throw new Error("KoWrapObs should not be disposed")}}const k=[];class N{constructor(e,n,t){this._depItem=new f(this._evaluate,this),this._dependencies=n.length>0?n:k,this._depListeners=n.length>0?n.map((e=>this._subscribeTo(e))):k,this._dynDeps=new Map,this._callback=e,this._useFunc=this._useDependency.bind(this),t&&(this._useFunc.owner=t),this._evaluate()}dispose(){this._callback=null;for(const e of this._depListeners)e.dispose();for(const e of this._dynDeps.values())e.dispose()}_getDepItem(){return this._depItem}_useDependency(e){const n="_getDepItem"in e?e:L(e);let t=this._dynDeps.get(n);return t||(t=this._subscribeTo(n),this._dynDeps.set(n,t)),t._inUse=!0,this._depItem.useDep(n._getDepItem()),n.get()}_evaluate(){if(null!==this._callback)try{const e=[this._useFunc];for(let n=0,t=this._dependencies.length;n<t;n++)e[n+1]=this._dependencies[n].get(),this._depItem.useDep(this._dependencies[n]._getDepItem());return this._callback.apply(void 0,e)}finally{this._dynDeps.forEach(((e,n)=>{e._inUse?e._inUse=!1:(this._dynDeps.delete(n),e.dispose())}))}}_subscribeTo(e){return("_getDepItem"in e?e:L(e)).addListener(this._enqueue,this)}_enqueue(){this._depItem.enqueue()}}function B(...e){const n=e.pop();return new N(n,e)}function q(){throw new Error("Can't write to non-writable computed")}class P extends v{constructor(e,n){super(void 0),this._callback=e,this._write=q,this._sub=new N(this._read.bind(this),n,this)}static create(e,...n){const t=n.pop();return s(e,new P(t,n))}_getDepItem(){return this._sub._getDepItem()}set(e){this._write(e)}onWrite(e){return this._write=e,this}dispose(){this._sub.dispose(),super.dispose()}_read(e,...n){super.set(this._callback(e,...n))}}function D(e,n,t){z(e,function(e,n){if("function"==typeof e){const t=e;if("function"==typeof t.peek){const e=t.subscribe((e=>n(e)));return n(t.peek()),e}const l=function(...e){const n=e.pop();return new P(n,e)}(e);return l.addListener((e=>n(e))),n(l.get()),l}return e instanceof y?B(e,((e,t)=>n(t))):(n(e),null)}(n,t))}const R={};var W,I;W=R,I="undefined"!=typeof window?window:{},W.DocumentFragment=I.DocumentFragment,W.Element=I.Element,W.Node=I.Node,W.document=I.document,W.window=I.window;const F=Object.assign({},R),j=new WeakMap;function X(e,n){for(const t of Object.keys(n)){const l=n[t];null!=l&&!1!==l&&e.setAttribute(t,!0===l?"":l)}}function G(e){return n=>X(n,e)}function H(e,n,t){null==t?e.removeAttribute(n):e.setAttribute(n,t)}function U(e,n){return t=>D(t,n,(n=>H(t,e,n)))}function $(e,n,t){H(e,n,t?"":null)}function V(e,n){return t=>D(t,n,(n=>$(t,e,n)))}function Z(e,n){e.appendChild(F.document.createTextNode(n))}function K(e){return n=>{const t=F.document.createTextNode("");D(n,e,(e=>{t.nodeValue=e})),n.appendChild(t)}}function Y(e,n,t){e.style[n]=t}function J(e,n){return t=>D(t,n,(n=>Y(t,e,n)))}function Q(e,n,t){e[n]=t}function ee(e,n){return t=>D(t,n,(n=>Q(t,e,n)))}function ne(e,n){e.style.display=n?"":"none"}function te(e){return n=>D(n,e,(e=>ne(n,e)))}function le(e,n){e.style.display=n?"none":""}function re(e){return n=>D(n,e,(e=>le(n,e)))}function ie(e,n,t=!0){e.classList.toggle(n,Boolean(t))}function ae(e,n){return"string"!=typeof e?ue("",e):n&&"boolean"!=typeof n?t=>D(t,n,(n=>ie(t,e,n))):t=>ie(t,e,n)}function oe(e,n,t){return"string"!=typeof n?ue(e,n):ae(e+n,t)}function ue(e,n){return t=>{let l=null;D(t,n,(n=>{l&&t.classList.remove(l),l=n?e+n:null,l&&t.classList.add(l)}))}}function se(e,n,t){const l=j.get(e);l?l[n]=t:(T(e,(()=>j.delete(e))),j.set(e,{[n]:t}))}function ce(e,n){return t=>D(t,n,(n=>se(t,e,n)))}function de(e,n){const t=j.get(e);return t&&t[n]}function pe(e,...n){return ye(be(he,e),n)}function fe(e,...n){return ye(be(me,e),n)}function he(e){return F.document.createElement(e)}function me(e){return F.document.createElementNS("http://www.w3.org/2000/svg",e)}function be(e,n){let t,l,r,i=n.indexOf(".");const a=n.indexOf("#");if(-1===i?i=n.length:r=n.substring(i+1).replace(/\./g," "),-1===a)t=n.substring(0,i);else{if(a>i)throw new Error(`ID must come before classes in dom("${n}")`);t=n.substring(0,a),l=n.substring(a+1,i)}const o=e(t);return l&&o.setAttribute("id",l),r&&o.setAttribute("class",r),o}function ge(e,...n){return Me(e,n)}function Me(e,n){for(const t of n)ve(e,t);return e}function ye(e,n){try{return Me(e,n)}catch(n){throw C(e),n}}function ve(e,n){if("function"==typeof n){const t=n(e);null!=t&&ve(e,t)}else Array.isArray(n)?Me(e,n):null==n||(n instanceof F.Node?e.appendChild(n):"object"==typeof n?X(e,n):e.appendChild(F.document.createTextNode(n)))}function Ae(...e){return ye(F.document.createDocumentFragment(),e)}function we(e){return F.document.querySelector(e)}function _e(e){return F.document.querySelectorAll(e)}function Ce(e,n,t){const l=e.parentNode;if(l){let r;for(let t=e.nextSibling;t&&t!==n;t=r)r=t.nextSibling,C(t),l.removeChild(t);t&&l.insertBefore(t instanceof F.Node?t:Ae(t),n)}}function Te(e,n=ze){const t=F.document.createComment("a"),l=F.document.createComment("b");return[t,l,r=>{D(l,e,(e=>Ce(t,l,n(e))))}]}function Se(e,n){const t=o.create(null),[l,r,i]=Te(e,(e=>n(u.create(t),e)));return z(r,t),[l,r,i]}function ze(e){return e}function Oe(e,n){return Te(e,(e=>e?n(e):null))}function Ee(e,n){return Se(e,((e,t)=>t?n(e,t):null))}function Le(e,...n){return Se(null,(t=>{const l="create"in e?e.create(t,...n):e(t,...n);return l&&"object"==typeof l&&"buildDom"in l?l.buildDom():l}))}class xe extends y{constructor(){super(...arguments),this._ownedItems=void 0}addListener(e,n){return super.addListener(e,n)}autoDispose(e){return this._ownedItems||(this._ownedItems=new Set),this._ownedItems.add(e),e}dispose(){if(this._ownedItems){for(const e of this.get())this._ownedItems.delete(e)&&e.dispose();this._ownedItems=void 0}super.dispose()}_setWithSplice(e,n){return this._setWithArg(e,n)}_disposeOwned(e){if(this._ownedItems)if(e)for(const n of e.deleted)this._ownedItems.delete(n)&&n.dispose();else{const e=this._ownedItems;this._ownedItems=new Set;for(const n of this.get())e.delete(n)&&this._ownedItems.add(n);for(const n of e)n.dispose()}}}class ke extends xe{constructor(e,n){var t;super([]),this._mapper=n,this._sub=(t=e,Array.isArray(t.get())?B(e,(n=>this._syncMap(e))):B(e,((e,n)=>(e(n),this._syncMap(n)))))}dispose(){this._unsync(),this._sub.dispose(),super.dispose()}_syncMap(e){this._source!==e?(this._unsync(),this._listener=e.addListener(this._recordChange,this),this._source=e,this._rebuild(e)):this._lastSplice?this._applySplice(e,this._lastSplice):this._rebuild(e),this._lastSplice=void 0}_unsync(){this._listener&&(this._listener.dispose(),this._listener=void 0,this._source=void 0)}_rebuild(e){this.set(e.get().map(((e,n)=>this._mapper.call(void 0,e,n,this))))}_applySplice(e,n){const t=e.get(),l=[];for(let e=n.start,r=0;r<n.numAdded;e++,r++)l.push(this._mapper.call(void 0,t[e],e,this));const r=this.get(),i=r.splice(n.start,n.deleted.length,...l);this._setWithSplice(r,{start:n.start,numAdded:l.length,deleted:i})}_recordChange(e,n,t){t&&void 0===this._lastSplice?this._lastSplice=t:this._lastSplice=!1}}function Ne(e,n){const t=F.document.createComment("a"),l=F.document.createComment("b");return[t,l,r=>{if(Array.isArray(e))return void Ce(t,l,e.map(n));const i=new ke(e,n);z(l,i),i.addListener(((e,n,i)=>{if(i){for(const e of i.deleted)e&&e.parentNode===r&&(C(e),r.removeChild(e));if(i.numAdded>0){const n=i.start+i.numAdded;let t=l;for(let l=n;l<e.length;l++){const n=e[l];if(n&&n.parentNode===r){t=n;break}}const a=Ae(e.slice(i.start,n));r.insertBefore(a,t)}}else Ce(t,l,e)})),Ce(t,l,i.get())}]}class Be{constructor(e,n,t,l,r){this.elem=e,this.eventType=n,this.callback=t,this.useCapture=l,this.selector=r,this.elem.addEventListener(this.eventType,this,this.useCapture)}handleEvent(e){(0,this.callback)(e,this.elem)}dispose(){this.elem.removeEventListener(this.eventType,this,this.useCapture)}}class qe extends Be{handleEvent(e){const n=function(e,n,t){for(let l=e;l&&l!==n;l=l.parentElement)if(l.matches(t))return l;return null}(e.target,this.elem,this.selector);n&&(0,this.callback)(e,n)}}function Pe(e,n,t,{useCapture:l=!1}={}){return new Be(e,n,t,l)}function De(e,n,{useCapture:t=!1}={}){return l=>{new Be(l,e,n,t)}}function Re(e,n,t,l,{useCapture:r=!1}={}){return new qe(e,t,l,r,n)}function We(e,n,t,{useCapture:l=!1}={}){return r=>{new qe(r,n,t,l,e)}}function Ie(e,n,t){return e.tabIndex>=0||e.setAttribute("tabindex","-1"),Pe(e,n,((e,n)=>{const l=t[e.key],r=l||t[e.key+"$"];r&&(l&&(e.stopPropagation(),e.preventDefault()),r(e,n))}))}function Fe(e){return n=>{Ie(n,"keypress",e)}}function je(e){return n=>{Ie(n,"keydown",e)}}function Xe(e,...n){return pe(e,...n)}var Ge;(Ge=Xe||(Xe={})).svg=fe,Ge.frag=Ae,Ge.update=ge,Ge.find=we,Ge.findAll=_e,Ge.domDispose=C,Ge.onDisposeElem=T,Ge.onDispose=S,Ge.autoDisposeElem=z,Ge.autoDispose=O,Ge.attrsElem=X,Ge.attrs=G,Ge.attrElem=H,Ge.attr=U,Ge.boolAttrElem=$,Ge.boolAttr=V,Ge.textElem=Z,Ge.text=K,Ge.styleElem=Y,Ge.style=J,Ge.propElem=Q,Ge.prop=ee,Ge.showElem=ne,Ge.show=te,Ge.hideElem=le,Ge.hide=re,Ge.clsElem=ie,Ge.cls=ae,Ge.clsPrefix=oe,Ge.dataElem=se,Ge.data=ce,Ge.getData=de,Ge.replaceContent=Ce,Ge.domComputed=Te,Ge.domComputedOwned=Se,Ge.maybe=Oe,Ge.maybeOwned=Ee,Ge.forEach=Ne,Ge.create=Le,Ge.onElem=Pe,Ge.on=De,Ge.onMatchElem=Re,Ge.onMatch=We,Ge.onKeyElem=Ie,Ge.onKeyPress=Fe,Ge.onKeyDown=je;const He={};class Ue{constructor(e){this._styles=e,this._mounted=!1,this.className=Ue._nextClassName(),Ue._unmounted.add(this)}static _nextClassName(){return`_grain${function(){const e=F.window||He;return e._grainNextStyleNum=(e._grainNextStyleNum||0)+1}()}_`}static _mountAll(){const e=Array.from(this._unmounted,(e=>e._createRules())).join("\n\n");F.document.head.appendChild(pe("style",e));for(const e of this._unmounted)e._mounted=!0;this._unmounted.clear()}addToElem(e){return this._mounted||Ue._mountAll(),e.classList.add(this.className),e}_createRules(){return function(e,n){const t=n.search(/[^;]*\{/);return`& {${t<0?n:n.slice(0,t)}\n}\n${t<0?"":n.slice(t)}`.replace(/&/g,e)}("."+this.className,this._styles)}}Ue._unmounted=new Set},70205:(e,n,t)=>{"use strict";function l(){}t.d(n,{Q5:()=>i,YI:()=>r});class r{constructor(){this._next=null,this._prev=null,this._next=this,this._prev=this}isDisposed(){return!this._next}_insertBefore(e,n){const t=e._prev;t._next=n,e._prev=n,n._prev=t,n._next=e}_removeNode(e){e._prev&&(e._prev._next=e._next,e._next._prev=e._prev),e._prev=e._next=null}_disposeList(){let e=this,n=e._next;for(;null!==n;)e._next=e._prev=null,e=n,n=e._next}}class i extends r{constructor(){super(),this._changeCB=l,this._changeCBContext=void 0}addListener(e,n){return new a(this,e,n)}emit(...e){a.callAll(this._next,this,e)}setChangeCB(e,n){this._changeCB=e||l,this._changeCBContext=n}_triggerChangeCB(){this._changeCB.call(this._changeCBContext,this.hasListeners())}hasListeners(){return this._next!==this}dispose(){this._disposeList(),this._changeCB=l,this._changeCBContext=void 0}}class a extends r{constructor(e,n,t){super(),this.emitter=e,this.callback=n,this.context=t,this._insertBefore(e,this),e._triggerChangeCB()}static callAll(e,n,t){for(;e!==n;){const n=e;n.callback.call(n.context,...t),e=n._next}}dispose(){this.isDisposed()||(this._removeNode(this),this.emitter._triggerChangeCB())}}},51012:(e,n,t)=>{"use strict";var l="undefined"!=typeof Symbol&&Symbol,r=t(67607);e.exports=function(){return"function"==typeof l&&"function"==typeof Symbol&&"symbol"==typeof l("foo")&&"symbol"==typeof Symbol("bar")&&r()}},67607:e=>{"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},n=Symbol("test"),t=Object(n);if("string"==typeof n)return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;for(n in e[n]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var l=Object.getOwnPropertySymbols(e);if(1!==l.length||l[0]!==n)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,n))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var r=Object.getOwnPropertyDescriptor(e,n);if(42!==r.value||!0!==r.enumerable)return!1}return!0}},16509:(e,n,t)=>{"use strict";var l=t(67607);e.exports=function(){return l()&&!!Symbol.toStringTag}},20661:(e,n,t)=>{"use strict";var l=t(65120);e.exports=l.call(Function.call,Object.prototype.hasOwnProperty)},68865:(e,n)=>{n.read=function(e,n,t,l,r){var i,a,o=8*r-l-1,u=(1<<o)-1,s=u>>1,c=-7,d=t?r-1:0,p=t?-1:1,f=e[n+d];for(d+=p,i=f&(1<<-c)-1,f>>=-c,c+=o;c>0;i=256*i+e[n+d],d+=p,c-=8);for(a=i&(1<<-c)-1,i>>=-c,c+=l;c>0;a=256*a+e[n+d],d+=p,c-=8);if(0===i)i=1-s;else{if(i===u)return a?NaN:1/0*(f?-1:1);a+=Math.pow(2,l),i-=s}return(f?-1:1)*a*Math.pow(2,i-l)},n.write=function(e,n,t,l,r,i){var a,o,u,s=8*i-r-1,c=(1<<s)-1,d=c>>1,p=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,f=l?0:i-1,h=l?1:-1,m=n<0||0===n&&1/n<0?1:0;for(n=Math.abs(n),isNaN(n)||n===1/0?(o=isNaN(n)?1:0,a=c):(a=Math.floor(Math.log(n)/Math.LN2),n*(u=Math.pow(2,-a))<1&&(a--,u*=2),(n+=a+d>=1?p/u:p*Math.pow(2,1-d))*u>=2&&(a++,u/=2),a+d>=c?(o=0,a=c):a+d>=1?(o=(n*u-1)*Math.pow(2,r),a+=d):(o=n*Math.pow(2,d-1)*Math.pow(2,r),a=0));r>=8;e[t+f]=255&o,f+=h,o/=256,r-=8);for(a=a<<r|o,s+=r;s>0;e[t+f]=255&a,f+=h,a/=256,s-=8);e[t+f-h]|=128*m}},40137:e=>{"function"==typeof Object.create?e.exports=function(e,n){n&&(e.super_=n,e.prototype=Object.create(n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,n){if(n){e.super_=n;var t=function(){};t.prototype=n.prototype,e.prototype=new t,e.prototype.constructor=e}}},87832:(e,n,t)=>{"use strict";var l=t(16509)(),r=t(92440)("Object.prototype.toString"),i=function(e){return!(l&&e&&"object"==typeof e&&Symbol.toStringTag in e)&&"[object Arguments]"===r(e)},a=function(e){return!!i(e)||null!==e&&"object"==typeof e&&"number"==typeof e.length&&e.length>=0&&"[object Array]"!==r(e)&&"[object Function]"===r(e.callee)},o=function(){return i(arguments)}();i.isLegacyArguments=a,e.exports=o?i:a},81295:e=>{"use strict";var n,t,l=Function.prototype.toString,r="object"==typeof Reflect&&null!==Reflect&&Reflect.apply;if("function"==typeof r&&"function"==typeof Object.defineProperty)try{n=Object.defineProperty({},"length",{get:function(){throw t}}),t={},r((function(){throw 42}),null,n)}catch(e){e!==t&&(r=null)}else r=null;var i=/^\s*class\b/,a=function(e){try{var n=l.call(e);return i.test(n)}catch(e){return!1}},o=function(e){try{return!a(e)&&(l.call(e),!0)}catch(e){return!1}},u=Object.prototype.toString,s="function"==typeof Symbol&&!!Symbol.toStringTag,c=!(0 in[,]),d=function(){return!1};if("object"==typeof document){var p=document.all;u.call(p)===u.call(document.all)&&(d=function(e){if((c||!e)&&(void 0===e||"object"==typeof e))try{var n=u.call(e);return("[object HTMLAllCollection]"===n||"[object HTML document.all class]"===n||"[object HTMLCollection]"===n||"[object Object]"===n)&&null==e("")}catch(e){}return!1})}e.exports=r?function(e){if(d(e))return!0;if(!e)return!1;if("function"!=typeof e&&"object"!=typeof e)return!1;try{r(e,null,n)}catch(e){if(e!==t)return!1}return!a(e)&&o(e)}:function(e){if(d(e))return!0;if(!e)return!1;if("function"!=typeof e&&"object"!=typeof e)return!1;if(s)return o(e);if(a(e))return!1;var n=u.call(e);return!("[object Function]"!==n&&"[object GeneratorFunction]"!==n&&!/^\[object HTML/.test(n))&&o(e)}},17206:(e,n,t)=>{"use strict";var l,r=Object.prototype.toString,i=Function.prototype.toString,a=/^\s*(?:function)?\*/,o=t(16509)(),u=Object.getPrototypeOf;e.exports=function(e){if("function"!=typeof e)return!1;if(a.test(i.call(e)))return!0;if(!o)return"[object GeneratorFunction]"===r.call(e);if(!u)return!1;if(void 0===l){var n=function(){if(!o)return!1;try{return Function("return function*() {}")()}catch(e){}}();l=!!n&&u(n)}return u(e)===l}},51578:(e,n,t)=>{"use strict";var l=t(15606),r=t(85299),i=t(92440),a=i("Object.prototype.toString"),o=t(16509)(),u=t(51609),s="undefined"==typeof globalThis?t.g:globalThis,c=r(),d=i("Array.prototype.indexOf",!0)||function(e,n){for(var t=0;t<e.length;t+=1)if(e[t]===n)return t;return-1},p=i("String.prototype.slice"),f={},h=Object.getPrototypeOf;o&&u&&h&&l(c,(function(e){var n=new s[e];if(Symbol.toStringTag in n){var t=h(n),l=u(t,Symbol.toStringTag);if(!l){var r=h(t);l=u(r,Symbol.toStringTag)}f[e]=l.get}})),e.exports=function(e){if(!e||"object"!=typeof e)return!1;if(!o||!(Symbol.toStringTag in e)){var n=p(a(e),8,-1);return d(c,n)>-1}return!!u&&function(e){var n=!1;return l(f,(function(t,l){if(!n)try{n=t.call(e)===l}catch(e){}})),n}(e)}},29301:(e,n,t)=>{var l,r,i;!function(a){var o=this||(0,eval)("this"),u=o.document,s=o.navigator,c=o.jQuery,d=o.JSON;c||"undefined"==typeof jQuery||(c=jQuery),function(a){r=[n,t],void 0===(i="function"==typeof(l=a)?l.apply(n,r):l)||(e.exports=i)}((function(e,n){function t(e,n){return(null===e||typeof e in A)&&e===n}function l(e,n){var t;return function(){t||(t=v.a.setTimeout((function(){t=a,e()}),n))}}function r(e,n){var t;return function(){clearTimeout(t),t=v.a.setTimeout(e,n)}}function i(e,n){n&&"change"!==n?"beforeChange"===n?this.oc(e):this.bb(e,n):this.pc(e)}function p(e,n){null!==n&&n.s&&n.s()}function f(e,n){var t=this.pd,l=t[S];l.qa||(this.Pb&&this.kb[n]?(t.tc(n,e,this.kb[n]),this.kb[n]=null,--this.Pb):l.F[n]||t.tc(n,e,l.G?{da:e}:t.Zc(e)),e.Ka&&e.fd())}var h,m,b,g,M,y,v=void 0!==e?e:{};v.b=function(e,n){for(var t=e.split("."),l=v,r=0;r<t.length-1;r++)l=l[t[r]];l[t[t.length-1]]=n},v.J=function(e,n,t){e[n]=t},v.version="3.5.0",v.b("version",v.version),v.options={deferUpdates:!1,useOnlyNativeEvents:!1,foreachHidesDestroyed:!1},v.a=function(){function e(e,n){for(var t in e)r.call(e,t)&&n(t,e[t])}function n(e,n){if(n)for(var t in n)r.call(n,t)&&(e[t]=n[t]);return e}function t(e,n){return e.__proto__=n,e}function l(e,n,t,l){var r=e[n].match(M)||[];v.a.C(t.match(M),(function(e){v.a.Oa(r,e,l)})),e[n]=r.join(" ")}var r=Object.prototype.hasOwnProperty,i={__proto__:[]}instanceof Array,p="function"==typeof Symbol,f={},h={};f[s&&/Firefox\/2/i.test(s.userAgent)?"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"],f.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" "),e(f,(function(e,n){if(n.length)for(var t=0,l=n.length;t<l;t++)h[n[t]]=e}));var m,b={propertychange:!0},g=u&&function(){for(var e=3,n=u.createElement("div"),t=n.getElementsByTagName("i");n.innerHTML="\x3c!--[if gt IE "+ ++e+"]><i></i><![endif]--\x3e",t[0];);return 4<e?e:a}(),M=/\S+/g;return{Ic:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],C:function(e,n,t){for(var l=0,r=e.length;l<r;l++)n.call(t,e[l],l,e)},A:"function"==typeof Array.prototype.indexOf?function(e,n){return Array.prototype.indexOf.call(e,n)}:function(e,n){for(var t=0,l=e.length;t<l;t++)if(e[t]===n)return t;return-1},Lb:function(e,n,t){for(var l=0,r=e.length;l<r;l++)if(n.call(t,e[l],l,e))return e[l];return a},hb:function(e,n){var t=v.a.A(e,n);0<t?e.splice(t,1):0===t&&e.shift()},vc:function(e){var n=[];return e&&v.a.C(e,(function(e){0>v.a.A(n,e)&&n.push(e)})),n},Mb:function(e,n,t){var l=[];if(e)for(var r=0,i=e.length;r<i;r++)l.push(n.call(t,e[r],r));return l},fb:function(e,n,t){var l=[];if(e)for(var r=0,i=e.length;r<i;r++)n.call(t,e[r],r)&&l.push(e[r]);return l},gb:function(e,n){if(n instanceof Array)e.push.apply(e,n);else for(var t=0,l=n.length;t<l;t++)e.push(n[t]);return e},Oa:function(e,n,t){var l=v.a.A(v.a.$b(e),n);0>l?t&&e.push(n):t||e.splice(l,1)},Ba:i,extend:n,setPrototypeOf:t,zb:i?t:n,O:e,Ha:function(e,n,t){if(!e)return e;var l,i={};for(l in e)r.call(e,l)&&(i[l]=n.call(t,e[l],l,e));return i},Sb:function(e){for(;e.firstChild;)v.removeNode(e.firstChild)},Xb:function(e){for(var n=((e=v.a.la(e))[0]&&e[0].ownerDocument||u).createElement("div"),t=0,l=e.length;t<l;t++)n.appendChild(v.na(e[t]));return n},Ca:function(e,n){for(var t=0,l=e.length,r=[];t<l;t++){var i=e[t].cloneNode(!0);r.push(n?v.na(i):i)}return r},ua:function(e,n){if(v.a.Sb(e),n)for(var t=0,l=n.length;t<l;t++)e.appendChild(n[t])},Wc:function(e,n){var t=e.nodeType?[e]:e;if(0<t.length){for(var l=t[0],r=l.parentNode,i=0,a=n.length;i<a;i++)r.insertBefore(n[i],l);for(i=0,a=t.length;i<a;i++)v.removeNode(t[i])}},Ua:function(e,n){if(e.length){for(n=8===n.nodeType&&n.parentNode||n;e.length&&e[0].parentNode!==n;)e.splice(0,1);for(;1<e.length&&e[e.length-1].parentNode!==n;)e.length--;if(1<e.length){var t=e[0],l=e[e.length-1];for(e.length=0;t!==l;)e.push(t),t=t.nextSibling;e.push(l)}}return e},Yc:function(e,n){7>g?e.setAttribute("selected",n):e.selected=n},Cb:function(e){return null===e||e===a?"":e.trim?e.trim():e.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},Td:function(e,n){return e=e||"",!(n.length>e.length)&&e.substring(0,n.length)===n},ud:function(e,n){if(e===n)return!0;if(11===e.nodeType)return!1;if(n.contains)return n.contains(1!==e.nodeType?e.parentNode:e);if(n.compareDocumentPosition)return 16==(16&n.compareDocumentPosition(e));for(;e&&e!=n;)e=e.parentNode;return!!e},Rb:function(e){return v.a.ud(e,e.ownerDocument.documentElement)},jd:function(e){return!!v.a.Lb(e,v.a.Rb)},P:function(e){return e&&e.tagName&&e.tagName.toLowerCase()},zc:function(e){return v.onError?function(){try{return e.apply(this,arguments)}catch(e){throw v.onError&&v.onError(e),e}}:e},setTimeout:function(e,n){return setTimeout(v.a.zc(e),n)},Fc:function(e){setTimeout((function(){throw v.onError&&v.onError(e),e}),0)},H:function(e,n,t){var l=v.a.zc(t);if(t=b[n],v.options.useOnlyNativeEvents||t||!c)if(t||"function"!=typeof e.addEventListener){if(void 0===e.attachEvent)throw Error("Browser doesn't support addEventListener or attachEvent");var r=function(n){l.call(e,n)},i="on"+n;e.attachEvent(i,r),v.a.I.za(e,(function(){e.detachEvent(i,r)}))}else e.addEventListener(n,l,!1);else m||(m="function"==typeof c(e).on?"on":"bind"),c(e)[m](n,l)},Fb:function(e,n){if(!e||!e.nodeType)throw Error("element must be a DOM node when calling triggerEvent");var t;if(t=!("input"!==v.a.P(e)||!e.type||"click"!=n.toLowerCase()||"checkbox"!=(t=e.type)&&"radio"!=t),v.options.useOnlyNativeEvents||!c||t)if("function"==typeof u.createEvent){if("function"!=typeof e.dispatchEvent)throw Error("The supplied element doesn't support dispatchEvent");(t=u.createEvent(h[n]||"HTMLEvents")).initEvent(n,!0,!0,o,0,0,0,0,0,!1,!1,!1,!1,0,e),e.dispatchEvent(t)}else if(t&&e.click)e.click();else{if(void 0===e.fireEvent)throw Error("Browser doesn't support triggering events");e.fireEvent("on"+n)}else c(e).trigger(n)},c:function(e){return v.N(e)?e():e},$b:function(e){return v.N(e)?e.w():e},Eb:function(e,n,t){var r;n&&("object"==typeof e.classList?(r=e.classList[t?"add":"remove"],v.a.C(n.match(M),(function(n){r.call(e.classList,n)}))):"string"==typeof e.className.baseVal?l(e.className,"baseVal",n,t):l(e,"className",n,t))},Ab:function(e,n){var t=v.a.c(n);null!==t&&t!==a||(t="");var l=v.h.firstChild(e);!l||3!=l.nodeType||v.h.nextSibling(l)?v.h.ua(e,[e.ownerDocument.createTextNode(t)]):l.data=t,v.a.zd(e)},Xc:function(e,n){if(e.name=n,7>=g)try{var t=e.name.replace(/[&<>'"]/g,(function(e){return"&#"+e.charCodeAt(0)+";"}));e.mergeAttributes(u.createElement("<input name='"+t+"'/>"),!1)}catch(e){}},zd:function(e){9<=g&&(e=1==e.nodeType?e:e.parentNode).style&&(e.style.zoom=e.style.zoom)},vd:function(e){if(g){var n=e.style.width;e.style.width=0,e.style.width=n}},Od:function(e,n){e=v.a.c(e),n=v.a.c(n);for(var t=[],l=e;l<=n;l++)t.push(l);return t},la:function(e){for(var n=[],t=0,l=e.length;t<l;t++)n.push(e[t]);return n},Da:function(e){return p?Symbol(e):e},Xd:6===g,Yd:7===g,W:g,Kc:function(e,n){for(var t=v.a.la(e.getElementsByTagName("input")).concat(v.a.la(e.getElementsByTagName("textarea"))),l="string"==typeof n?function(e){return e.name===n}:function(e){return n.test(e.name)},r=[],i=t.length-1;0<=i;i--)l(t[i])&&r.push(t[i]);return r},Md:function(e){return"string"==typeof e&&(e=v.a.Cb(e))?d&&d.parse?d.parse(e):new Function("return "+e)():null},fc:function(e,n,t){if(!d||!d.stringify)throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");return d.stringify(v.a.c(e),n,t)},Nd:function(n,t,l){var r=(l=l||{}).params||{},i=l.includeFields||this.Ic,a=n;if("object"==typeof n&&"form"===v.a.P(n)){a=n.action;for(var o=i.length-1;0<=o;o--)for(var s=v.a.Kc(n,i[o]),c=s.length-1;0<=c;c--)r[s[c].name]=s[c].value}t=v.a.c(t);var d=u.createElement("form");for(var p in d.style.display="none",d.action=a,d.method="post",t)(n=u.createElement("input")).type="hidden",n.name=p,n.value=v.a.fc(v.a.c(t[p])),d.appendChild(n);e(r,(function(e,n){var t=u.createElement("input");t.type="hidden",t.name=e,t.value=n,d.appendChild(t)})),u.body.appendChild(d),l.submitter?l.submitter(d):d.submit(),setTimeout((function(){d.parentNode.removeChild(d)}),0)}}}(),v.b("utils",v.a),v.b("utils.arrayForEach",v.a.C),v.b("utils.arrayFirst",v.a.Lb),v.b("utils.arrayFilter",v.a.fb),v.b("utils.arrayGetDistinctValues",v.a.vc),v.b("utils.arrayIndexOf",v.a.A),v.b("utils.arrayMap",v.a.Mb),v.b("utils.arrayPushAll",v.a.gb),v.b("utils.arrayRemoveItem",v.a.hb),v.b("utils.cloneNodes",v.a.Ca),v.b("utils.createSymbolOrString",v.a.Da),v.b("utils.extend",v.a.extend),v.b("utils.fieldsIncludedWithJsonPost",v.a.Ic),v.b("utils.getFormFields",v.a.Kc),v.b("utils.objectMap",v.a.Ha),v.b("utils.peekObservable",v.a.$b),v.b("utils.postJson",v.a.Nd),v.b("utils.parseJson",v.a.Md),v.b("utils.registerEventHandler",v.a.H),v.b("utils.stringifyJson",v.a.fc),v.b("utils.range",v.a.Od),v.b("utils.toggleDomNodeCssClass",v.a.Eb),v.b("utils.triggerEvent",v.a.Fb),v.b("utils.unwrapObservable",v.a.c),v.b("utils.objectForEach",v.a.O),v.b("utils.addOrRemoveItem",v.a.Oa),v.b("utils.setTextContent",v.a.Ab),v.b("unwrap",v.a.c),Function.prototype.bind||(Function.prototype.bind=function(e){var n=this;if(1===arguments.length)return function(){return n.apply(e,arguments)};var t=Array.prototype.slice.call(arguments,1);return function(){var l=t.slice(0);return l.push.apply(l,arguments),n.apply(e,l)}}),v.a.g=new function(){var e,n,t=0,l="__ko__"+(new Date).getTime(),r={};return v.a.W?(e=function(e,n){var i=e[l];if(!i||"null"===i||!r[i]){if(!n)return a;i=e[l]="ko"+t++,r[i]={}}return r[i]},n=function(e){var n=e[l];return!!n&&(delete r[n],e[l]=null,!0)}):(e=function(e,n){var t=e[l];return!t&&n&&(t=e[l]={}),t},n=function(e){return!!e[l]&&(delete e[l],!0)}),{get:function(n,t){var l=e(n,!1);return l&&l[t]},set:function(n,t,l){(n=e(n,l!==a))&&(n[t]=l)},Tb:function(n,t,l){return(n=e(n,!0))[t]||(n[t]=l)},clear:n,Z:function(){return t+++l}}},v.b("utils.domData",v.a.g),v.b("utils.domData.clear",v.a.g.clear),v.a.I=new function(){function e(e,n){var t=v.a.g.get(e,l);return t===a&&n&&(t=[],v.a.g.set(e,l,t)),t}function n(n){if(l=e(n,!1))for(var l=l.slice(0),r=0;r<l.length;r++)l[r](n);v.a.g.clear(n),v.a.I.cleanExternalData(n),i[n.nodeType]&&t(n.childNodes,!0)}function t(e,t){for(var l,r=[],i=0;i<e.length;i++)if((!t||8===e[i].nodeType)&&(n(r[r.length]=l=e[i]),e[i]!==l))for(;i--&&-1==v.a.A(r,e[i]););}var l=v.a.g.Z(),r={1:!0,8:!0,9:!0},i={1:!0,9:!0};return{za:function(n,t){if("function"!=typeof t)throw Error("Callback must be a function");e(n,!0).push(t)},xb:function(n,t){var r=e(n,!1);r&&(v.a.hb(r,t),0==r.length&&v.a.g.set(n,l,a))},na:function(e){return r[e.nodeType]&&(n(e),i[e.nodeType]&&t(e.getElementsByTagName("*"))),e},removeNode:function(e){v.na(e),e.parentNode&&e.parentNode.removeChild(e)},cleanExternalData:function(e){c&&"function"==typeof c.cleanData&&c.cleanData([e])}}},v.na=v.a.I.na,v.removeNode=v.a.I.removeNode,v.b("cleanNode",v.na),v.b("removeNode",v.removeNode),v.b("utils.domNodeDisposal",v.a.I),v.b("utils.domNodeDisposal.addDisposeCallback",v.a.I.za),v.b("utils.domNodeDisposal.removeDisposeCallback",v.a.I.xb),h=[0,"",""],M={thead:m=[1,"<table>","</table>"],tbody:m,tfoot:m,tr:[2,"<table><tbody>","</tbody></table>"],td:b=[3,"<table><tbody><tr>","</tr></tbody></table>"],th:b,option:g=[1,"<select multiple='multiple'>","</select>"],optgroup:g},y=8>=v.a.W,v.a.ta=function(e,n){var t;if(c){if(c.parseHTML)t=c.parseHTML(e,n)||[];else if((t=c.clean([e],n))&&t[0]){for(var l=t[0];l.parentNode&&11!==l.parentNode.nodeType;)l=l.parentNode;l.parentNode&&l.parentNode.removeChild(l)}}else{(t=n)||(t=u),l=t.parentWindow||t.defaultView||o;var r,i=v.a.Cb(e).toLowerCase(),a=t.createElement("div");for(r=(i=i.match(/^(?:\x3c!--.*?--\x3e\s*?)*?<([a-z]+)[\s>]/))&&M[i[1]]||h,i=r[0],r="ignored<div>"+r[1]+e+r[2]+"</div>","function"==typeof l.innerShiv?a.appendChild(l.innerShiv(r)):(y&&t.body.appendChild(a),a.innerHTML=r,y&&a.parentNode.removeChild(a));i--;)a=a.lastChild;t=v.a.la(a.lastChild.childNodes)}return t},v.a.Ld=function(e,n){var t=v.a.ta(e,n);return t.length&&t[0].parentElement||v.a.Xb(t)},v.a.dc=function(e,n){if(v.a.Sb(e),null!==(n=v.a.c(n))&&n!==a)if("string"!=typeof n&&(n=n.toString()),c)c(e).html(n);else for(var t=v.a.ta(n,e.ownerDocument),l=0;l<t.length;l++)e.appendChild(t[l])},v.b("utils.parseHtmlFragment",v.a.ta),v.b("utils.setHtml",v.a.dc),v.aa=function(){function e(n,t){if(n)if(8==n.nodeType)null!=(l=v.aa.Tc(n.nodeValue))&&t.push({sd:n,Jd:l});else if(1==n.nodeType)for(var l=0,r=n.childNodes,i=r.length;l<i;l++)e(r[l],t)}var n={};return{Wb:function(e){if("function"!=typeof e)throw Error("You can only pass a function to ko.memoization.memoize()");var t=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);return n[t]=e,"\x3c!--[ko_memo:"+t+"]--\x3e"},ad:function(e,t){var l=n[e];if(l===a)throw Error("Couldn't find any memo with ID "+e+". Perhaps it's already been unmemoized.");try{return l.apply(null,t||[]),!0}finally{delete n[e]}},bd:function(n,t){var l=[];e(n,l);for(var r=0,i=l.length;r<i;r++){var a=l[r].sd,o=[a];t&&v.a.gb(o,t),v.aa.ad(l[r].Jd,o),a.nodeValue="",a.parentNode&&a.parentNode.removeChild(a)}},Tc:function(e){return(e=e.match(/^\[ko_memo\:(.*?)\]$/))?e[1]:null}}}(),v.b("memoization",v.aa),v.b("memoization.memoize",v.aa.Wb),v.b("memoization.unmemoize",v.aa.ad),v.b("memoization.parseMemoText",v.aa.Tc),v.b("memoization.unmemoizeDomNodeAndDescendants",v.aa.bd),v.ma=function(){function e(){if(r)for(var e,n=r,t=0;a<r;)if(e=l[a++]){if(a>n){if(5e3<=++t){a=r,v.a.Fc(Error("'Too much recursion' after processing "+t+" task groups."));break}n=r}try{e()}catch(e){v.a.Fc(e)}}}function n(){e(),a=r=l.length=0}var t,l=[],r=0,i=1,a=0;return t=o.MutationObserver?function(e){var n=u.createElement("div");return new MutationObserver(e).observe(n,{attributes:!0}),function(){n.classList.toggle("foo")}}(n):u&&"onreadystatechange"in u.createElement("script")?function(e){var n=u.createElement("script");n.onreadystatechange=function(){n.onreadystatechange=null,u.documentElement.removeChild(n),n=null,e()},u.documentElement.appendChild(n)}:function(e){setTimeout(e,0)},{scheduler:t,yb:function(e){return r||v.ma.scheduler(n),l[r++]=e,i++},cancel:function(e){(e-=i-r)>=a&&e<r&&(l[e]=null)},resetForTesting:function(){var e=r-a;return a=r=l.length=0,e},Rd:e}}(),v.b("tasks",v.ma),v.b("tasks.schedule",v.ma.yb),v.b("tasks.runEarly",v.ma.Rd),v.Ta={throttle:function(e,n){e.throttleEvaluation=n;var t=null;return v.$({read:e,write:function(l){clearTimeout(t),t=v.a.setTimeout((function(){e(l)}),n)}})},rateLimit:function(e,n){var t,i,a;"number"==typeof n?t=n:(t=n.timeout,i=n.method),e.Hb=!1,a="function"==typeof i?i:"notifyWhenChangesStop"==i?r:l,e.tb((function(e){return a(e,t,n)}))},deferred:function(e,n){if(!0!==n)throw Error("The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled.");e.Hb||(e.Hb=!0,e.tb((function(n){var t,l=!1;return function(){if(!l){v.ma.cancel(t),t=v.ma.yb(n);try{l=!0,e.notifySubscribers(a,"dirty")}finally{l=!1}}}})))},notify:function(e,n){e.equalityComparer="always"==n?null:t}};var A={undefined:1,boolean:1,number:1,string:1};v.b("extenders",v.Ta),v.gc=function(e,n,t){this.da=e,this.kc=n,this.lc=t,this.Ib=!1,this.ab=this.Jb=null,v.J(this,"dispose",this.s),v.J(this,"disposeWhenNodeIsRemoved",this.l)},v.gc.prototype.s=function(){this.Ib||(this.ab&&v.a.I.xb(this.Jb,this.ab),this.Ib=!0,this.lc(),this.da=this.kc=this.lc=this.Jb=this.ab=null)},v.gc.prototype.l=function(e){this.Jb=e,v.a.I.za(e,this.ab=this.s.bind(this))},v.R=function(){v.a.zb(this,w),w.ob(this)};var w={ob:function(e){e.S={change:[]},e.rc=1},subscribe:function(e,n,t){var l=this;t=t||"change";var r=new v.gc(l,n?e.bind(n):e,(function(){v.a.hb(l.S[t],r),l.cb&&l.cb(t)}));return l.Qa&&l.Qa(t),l.S[t]||(l.S[t]=[]),l.S[t].push(r),r},notifySubscribers:function(e,n){if("change"===(n=n||"change")&&this.Gb(),this.Wa(n)){var t="change"===n&&this.dd||this.S[n].slice(0);try{v.v.wc();for(var l,r=0;l=t[r];++r)l.Ib||l.kc(e)}finally{v.v.end()}}},mb:function(){return this.rc},Cd:function(e){return this.mb()!==e},Gb:function(){++this.rc},tb:function(e){var n,t,l,r,a,o=this,u=v.N(o);o.bb||(o.bb=o.notifySubscribers,o.notifySubscribers=i);var s=e((function(){o.Ka=!1,u&&r===o&&(r=o.mc?o.mc():o());var e=t||a&&o.qb(l,r);a=t=n=!1,e&&o.bb(l=r)}));o.pc=function(e,t){t&&o.Ka||(a=!t),o.dd=o.S.change.slice(0),o.Ka=n=!0,r=e,s()},o.oc=function(e){n||(l=e,o.bb(e,"beforeChange"))},o.qc=function(){a=!0},o.fd=function(){o.qb(l,o.w(!0))&&(t=!0)}},Wa:function(e){return this.S[e]&&this.S[e].length},Ad:function(e){if(e)return this.S[e]&&this.S[e].length||0;var n=0;return v.a.O(this.S,(function(e,t){"dirty"!==e&&(n+=t.length)})),n},qb:function(e,n){return!this.equalityComparer||!this.equalityComparer(e,n)},toString:function(){return"[object Object]"},extend:function(e){var n=this;return e&&v.a.O(e,(function(e,t){var l=v.Ta[e];"function"==typeof l&&(n=l(n,t)||n)})),n}};v.J(w,"init",w.ob),v.J(w,"subscribe",w.subscribe),v.J(w,"extend",w.extend),v.J(w,"getSubscriptionsCount",w.Ad),v.a.Ba&&v.a.setPrototypeOf(w,Function.prototype),v.R.fn=w,v.Pc=function(e){return null!=e&&"function"==typeof e.subscribe&&"function"==typeof e.notifySubscribers},v.b("subscribable",v.R),v.b("isSubscribable",v.Pc),v.U=v.v=function(){function e(e){l.push(t),t=e}function n(){t=l.pop()}var t,l=[],r=0;return{wc:e,end:n,ac:function(e){if(t){if(!v.Pc(e))throw Error("Only subscribable things can act as dependencies");t.nd.call(t.od,e,e.ed||(e.ed=++r))}},K:function(t,l,r){try{return e(),t.apply(l,r||[])}finally{n()}},pa:function(){if(t)return t.o.pa()},Va:function(){if(t)return t.o.Va()},rb:function(){if(t)return t.rb},o:function(){if(t)return t.o}}}(),v.b("computedContext",v.U),v.b("computedContext.getDependenciesCount",v.U.pa),v.b("computedContext.getDependencies",v.U.Va),v.b("computedContext.isInitial",v.U.rb),v.b("computedContext.registerDependency",v.U.ac),v.b("ignoreDependencies",v.Wd=v.v.K);var _=v.a.Da("_latestValue");v.sa=function(e){function n(){return 0<arguments.length?(n.qb(n[_],arguments[0])&&(n.xa(),n[_]=arguments[0],n.wa()),this):(v.v.ac(n),n[_])}return n[_]=e,v.a.Ba||v.a.extend(n,v.R.fn),v.R.fn.ob(n),v.a.zb(n,C),v.options.deferUpdates&&v.Ta.deferred(n,!0),n};var C={equalityComparer:t,w:function(){return this[_]},wa:function(){this.notifySubscribers(this[_],"spectate"),this.notifySubscribers(this[_])},xa:function(){this.notifySubscribers(this[_],"beforeChange")}};v.a.Ba&&v.a.setPrototypeOf(C,v.R.fn);var T=v.sa.Na="__ko_proto__";C[T]=v.sa,v.N=function(e){if((e="function"==typeof e&&e[T])&&e!==C[T]&&e!==v.o.fn[T])throw Error("Invalid object that looks like an observable; possibly from another Knockout instance");return!!e},v.Ya=function(e){return"function"==typeof e&&(e[T]===C[T]||e[T]===v.o.fn[T]&&e.Mc)},v.b("observable",v.sa),v.b("isObservable",v.N),v.b("isWriteableObservable",v.Ya),v.b("isWritableObservable",v.Ya),v.b("observable.fn",C),v.J(C,"peek",C.w),v.J(C,"valueHasMutated",C.wa),v.J(C,"valueWillMutate",C.xa),v.Ia=function(e){if("object"!=typeof(e=e||[])||!("length"in e))throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");return e=v.sa(e),v.a.zb(e,v.Ia.fn),e.extend({trackArrayChanges:!0})},v.Ia.fn={remove:function(e){for(var n=this.w(),t=[],l="function"!=typeof e||v.N(e)?function(n){return n===e}:e,r=0;r<n.length;r++){var i=n[r];if(l(i)){if(0===t.length&&this.xa(),n[r]!==i)throw Error("Array modified during remove; cannot remove item");t.push(i),n.splice(r,1),r--}}return t.length&&this.wa(),t},removeAll:function(e){if(e===a){var n=this.w(),t=n.slice(0);return this.xa(),n.splice(0,n.length),this.wa(),t}return e?this.remove((function(n){return 0<=v.a.A(e,n)})):[]},destroy:function(e){var n=this.w(),t="function"!=typeof e||v.N(e)?function(n){return n===e}:e;this.xa();for(var l=n.length-1;0<=l;l--){var r=n[l];t(r)&&(r._destroy=!0)}this.wa()},destroyAll:function(e){return e===a?this.destroy((function(){return!0})):e?this.destroy((function(n){return 0<=v.a.A(e,n)})):[]},indexOf:function(e){var n=this();return v.a.A(n,e)},replace:function(e,n){var t=this.indexOf(e);0<=t&&(this.xa(),this.w()[t]=n,this.wa())},sorted:function(e){var n=this().slice(0);return e?n.sort(e):n.sort()},reversed:function(){return this().slice(0).reverse()}},v.a.Ba&&v.a.setPrototypeOf(v.Ia.fn,v.sa.fn),v.a.C("pop push reverse shift sort splice unshift".split(" "),(function(e){v.Ia.fn[e]=function(){var n=this.w();this.xa(),this.yc(n,e,arguments);var t=n[e].apply(n,arguments);return this.wa(),t===n?this:t}})),v.a.C(["slice"],(function(e){v.Ia.fn[e]=function(){var n=this();return n[e].apply(n,arguments)}})),v.Oc=function(e){return v.N(e)&&"function"==typeof e.remove&&"function"==typeof e.push},v.b("observableArray",v.Ia),v.b("isObservableArray",v.Oc),v.Ta.trackArrayChanges=function(e,n){function t(){function n(){if(s){var n,t=[].concat(e.w()||[]);e.Wa("arrayChange")&&((!u||1<s)&&(u=v.a.Ob(r,t,e.Nb)),n=u),r=t,u=null,s=0,n&&n.length&&e.notifySubscribers(n,"arrayChange")}}o?n():(o=!0,i=e.notifySubscribers,e.notifySubscribers=function(e,n){return n&&"change"!==n||++s,i.apply(this,arguments)},r=[].concat(e.w()||[]),u=null,l=e.subscribe(n))}if(e.Nb={},n&&"object"==typeof n&&v.a.extend(e.Nb,n),e.Nb.sparse=!0,!e.yc){var l,r,i,o=!1,u=null,s=0,c=e.Qa,d=e.cb;e.Qa=function(n){c&&c.call(e,n),"arrayChange"===n&&t()},e.cb=function(n){d&&d.call(e,n),"arrayChange"!==n||e.Wa("arrayChange")||(i&&(e.notifySubscribers=i,i=a),l&&l.s(),l=null,o=!1,r=a)},e.yc=function(e,n,t){function l(e,n,t){return r[r.length]={status:e,value:n,index:t}}if(o&&!s){var r=[],i=e.length,a=t.length,c=0;switch(n){case"push":c=i;case"unshift":for(n=0;n<a;n++)l("added",t[n],c+n);break;case"pop":c=i-1;case"shift":i&&l("deleted",e[c],c);break;case"splice":n=Math.min(Math.max(0,0>t[0]?i+t[0]:t[0]),i),i=1===a?i:Math.min(n+(t[1]||0),i),a=n+a-2,c=Math.max(i,a);for(var d=[],p=[],f=2;n<c;++n,++f)n<i&&p.push(l("deleted",e[n],n)),n<a&&d.push(l("added",t[f],n));v.a.Jc(p,d);break;default:return}u=r}}}};var S=v.a.Da("_state");v.o=v.$=function(e,n,t){function l(){if(0<arguments.length){if("function"!=typeof r)throw Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.");return r.apply(i.lb,arguments),this}return i.qa||v.v.ac(l),(i.ka||i.G&&l.Xa())&&l.ha(),i.X}if("object"==typeof e?t=e:(t=t||{},e&&(t.read=e)),"function"!=typeof t.read)throw Error("Pass a function that returns the value of the ko.computed");var r=t.write,i={X:a,ra:!0,ka:!0,pb:!1,hc:!1,qa:!1,vb:!1,G:!1,Vc:t.read,lb:n||t.owner,l:t.disposeWhenNodeIsRemoved||t.l||null,Sa:t.disposeWhen||t.Sa,Qb:null,F:{},V:0,Hc:null};return l[S]=i,l.Mc="function"==typeof r,v.a.Ba||v.a.extend(l,v.R.fn),v.R.fn.ob(l),v.a.zb(l,z),t.pure?(i.vb=!0,i.G=!0,v.a.extend(l,O)):t.deferEvaluation&&v.a.extend(l,E),v.options.deferUpdates&&v.Ta.deferred(l,!0),i.l&&(i.hc=!0,i.l.nodeType||(i.l=null)),i.G||t.deferEvaluation||l.ha(),i.l&&l.ja()&&v.a.I.za(i.l,i.Qb=function(){l.s()}),l};var z={equalityComparer:t,pa:function(){return this[S].V},Va:function(){var e=[];return v.a.O(this[S].F,(function(n,t){e[t.La]=t.da})),e},Ub:function(e){if(!this[S].V)return!1;var n=this.Va();return-1!==v.a.A(n,e)||!!v.a.Lb(n,(function(n){return n.Ub&&n.Ub(e)}))},tc:function(e,n,t){if(this[S].vb&&n===this)throw Error("A 'pure' computed must not be called recursively");this[S].F[e]=t,t.La=this[S].V++,t.Ma=n.mb()},Xa:function(){var e,n,t=this[S].F;for(e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&(n=t[e],this.Ja&&n.da.Ka||n.da.Cd(n.Ma)))return!0},Id:function(){this.Ja&&!this[S].pb&&this.Ja(!1)},ja:function(){var e=this[S];return e.ka||0<e.V},Qd:function(){this.Ka?this[S].ka&&(this[S].ra=!0):this.Gc()},Zc:function(e){if(e.Hb){var n=e.subscribe(this.Id,this,"dirty"),t=e.subscribe(this.Qd,this);return{da:e,s:function(){n.s(),t.s()}}}return e.subscribe(this.Gc,this)},Gc:function(){var e=this,n=e.throttleEvaluation;n&&0<=n?(clearTimeout(this[S].Hc),this[S].Hc=v.a.setTimeout((function(){e.ha(!0)}),n)):e.Ja?e.Ja(!0):e.ha(!0)},ha:function(e){var n=this[S],t=n.Sa,l=!1;if(!n.pb&&!n.qa){if(n.l&&!v.a.Rb(n.l)||t&&t()){if(!n.hc)return void this.s()}else n.hc=!1;n.pb=!0;try{l=this.yd(e)}finally{n.pb=!1}return l}},yd:function(e){var n=this[S],t=!1,l=n.vb?a:!n.V;t={pd:this,kb:n.F,Pb:n.V},v.v.wc({od:t,nd:f,o:this,rb:l}),n.F={},n.V=0;var r=this.xd(n,t);return n.V?t=this.qb(n.X,r):(this.s(),t=!0),t&&(n.G?this.Gb():this.notifySubscribers(n.X,"beforeChange"),n.X=r,this.notifySubscribers(n.X,"spectate"),!n.G&&e&&this.notifySubscribers(n.X),this.qc&&this.qc()),l&&this.notifySubscribers(n.X,"awake"),t},xd:function(e,n){try{var t=e.Vc;return e.lb?t.call(e.lb):t()}finally{v.v.end(),n.Pb&&!e.G&&v.a.O(n.kb,p),e.ra=e.ka=!1}},w:function(e){var n=this[S];return(n.ka&&(e||!n.V)||n.G&&this.Xa())&&this.ha(),n.X},tb:function(e){v.R.fn.tb.call(this,e),this.mc=function(){return this[S].G||(this[S].ra?this.ha():this[S].ka=!1),this[S].X},this.Ja=function(e){this.oc(this[S].X),this[S].ka=!0,e&&(this[S].ra=!0),this.pc(this,!e)}},s:function(){var e=this[S];!e.G&&e.F&&v.a.O(e.F,(function(e,n){n.s&&n.s()})),e.l&&e.Qb&&v.a.I.xb(e.l,e.Qb),e.F=a,e.V=0,e.qa=!0,e.ra=!1,e.ka=!1,e.G=!1,e.l=a,e.Sa=a,e.Vc=a,this.Mc||(e.lb=a)}},O={Qa:function(e){var n=this,t=n[S];if(!t.qa&&t.G&&"change"==e){if(t.G=!1,t.ra||n.Xa())t.F=null,t.V=0,n.ha()&&n.Gb();else{var l=[];v.a.O(t.F,(function(e,n){l[n.La]=e})),v.a.C(l,(function(e,l){var r=t.F[e],i=n.Zc(r.da);i.La=l,i.Ma=r.Ma,t.F[e]=i})),n.Xa()&&n.ha()&&n.Gb()}t.qa||n.notifySubscribers(t.X,"awake")}},cb:function(e){var n=this[S];n.qa||"change"!=e||this.Wa("change")||(v.a.O(n.F,(function(e,t){t.s&&(n.F[e]={da:t.da,La:t.La,Ma:t.Ma},t.s())})),n.G=!0,this.notifySubscribers(a,"asleep"))},mb:function(){var e=this[S];return e.G&&(e.ra||this.Xa())&&this.ha(),v.R.fn.mb.call(this)}},E={Qa:function(e){"change"!=e&&"beforeChange"!=e||this.w()}};v.a.Ba&&v.a.setPrototypeOf(z,v.R.fn);var L=v.sa.Na;z[L]=v.o,v.Nc=function(e){return"function"==typeof e&&e[L]===z[L]},v.Ed=function(e){return v.Nc(e)&&e[S]&&e[S].vb},v.b("computed",v.o),v.b("dependentObservable",v.o),v.b("isComputed",v.Nc),v.b("isPureComputed",v.Ed),v.b("computed.fn",z),v.J(z,"peek",z.w),v.J(z,"dispose",z.s),v.J(z,"isActive",z.ja),v.J(z,"getDependenciesCount",z.pa),v.J(z,"getDependencies",z.Va),v.wb=function(e,n){return"function"==typeof e?v.o(e,n,{pure:!0}):((e=v.a.extend({},e)).pure=!0,v.o(e,n))},v.b("pureComputed",v.wb),function(){function e(t,l,r){if(r=r||new n,"object"!=typeof(t=l(t))||null===t||t===a||t instanceof RegExp||t instanceof Date||t instanceof String||t instanceof Number||t instanceof Boolean)return t;var i=t instanceof Array?[]:{};return r.save(t,i),function(e,n){if(e instanceof Array){for(var t=0;t<e.length;t++)n(t);"function"==typeof e.toJSON&&n("toJSON")}else for(t in e)n(t)}(t,(function(n){var o=l(t[n]);switch(typeof o){case"boolean":case"number":case"string":case"function":i[n]=o;break;case"object":case"undefined":var u=r.get(o);i[n]=u!==a?u:e(o,l,r)}})),i}function n(){this.keys=[],this.values=[]}v.$c=function(n){if(0==arguments.length)throw Error("When calling ko.toJS, pass the object you want to convert.");return e(n,(function(e){for(var n=0;v.N(e)&&10>n;n++)e=e();return e}))},v.toJSON=function(e,n,t){return e=v.$c(e),v.a.fc(e,n,t)},n.prototype={constructor:n,save:function(e,n){var t=v.a.A(this.keys,e);0<=t?this.values[t]=n:(this.keys.push(e),this.values.push(n))},get:function(e){return 0<=(e=v.a.A(this.keys,e))?this.values[e]:a}}}(),v.b("toJS",v.$c),v.b("toJSON",v.toJSON),v.Vd=function(e,n,t){function l(n){var l=v.wb(e,t).extend({Ga:"always"}),r=l.subscribe((function(e){e&&(r.s(),n(e))}));return l.notifySubscribers(l.w()),r}return"function"!=typeof Promise||n?l(n.bind(t)):new Promise(l)},v.b("when",v.Vd),v.u={L:function(e){switch(v.a.P(e)){case"option":return!0===e.__ko__hasDomDataOptionValue__?v.a.g.get(e,v.f.options.Yb):7>=v.a.W?e.getAttributeNode("value")&&e.getAttributeNode("value").specified?e.value:e.text:e.value;case"select":return 0<=e.selectedIndex?v.u.L(e.options[e.selectedIndex]):a;default:return e.value}},ya:function(e,n,t){switch(v.a.P(e)){case"option":"string"==typeof n?(v.a.g.set(e,v.f.options.Yb,a),"__ko__hasDomDataOptionValue__"in e&&delete e.__ko__hasDomDataOptionValue__,e.value=n):(v.a.g.set(e,v.f.options.Yb,n),e.__ko__hasDomDataOptionValue__=!0,e.value="number"==typeof n?n:"");break;case"select":""!==n&&null!==n||(n=a);for(var l,r=-1,i=0,o=e.options.length;i<o;++i)if((l=v.u.L(e.options[i]))==n||""===l&&n===a){r=i;break}(t||0<=r||n===a&&1<e.size)&&(e.selectedIndex=r,6===v.a.W&&v.a.setTimeout((function(){e.selectedIndex=r}),0));break;default:null!==n&&n!==a||(n=""),e.value=n}}},v.b("selectExtensions",v.u),v.b("selectExtensions.readValue",v.u.L),v.b("selectExtensions.writeValue",v.u.ya),v.m=function(){function e(e){123===(e=v.a.Cb(e)).charCodeAt(0)&&(e=e.slice(1,-1));var n,t=[],a=(e+="\n,").match(l),o=[],u=0;if(1<a.length){for(var s,c=0;s=a[c];++c){var d=s.charCodeAt(0);if(44===d){if(0>=u){t.push(n&&o.length?{key:n,value:o.join("")}:{unknown:n||o.join("")}),n=u=0,o=[];continue}}else if(58===d){if(!u&&!n&&1===o.length){n=o.pop();continue}}else{if(47===d&&1<s.length&&(47===s.charCodeAt(1)||42===s.charCodeAt(1)))continue;47===d&&c&&1<s.length?(d=a[c-1].match(r))&&!i[d[0]]&&(a=(e=e.substr(e.indexOf(s)+1)).match(l),c=-1,s="/"):40===d||123===d||91===d?++u:41===d||125===d||93===d?--u:n||o.length||34!==d&&39!==d||(s=s.slice(1,-1))}o.push(s)}if(0<u)throw Error("Unbalanced parentheses, braces, or brackets")}return t}var n=["true","false","null","undefined"],t=/^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,l=RegExp("\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|`(?:\\\\.|[^`])*`|/\\*(?:[^*]|\\*+[^*/])*\\*+/|//.*\n|/(?:\\\\.|[^/])+/w*|[^\\s:,/][^,\"'`{}()/:[\\]]*[^\\s,\"'`{}()/:[\\]]|[^\\s]","g"),r=/[\])"'A-Za-z0-9_$]+$/,i={in:1,return:1,typeof:1},a={};return{Ra:[],va:a,Zb:e,ub:function(l,r){function i(e,l){var r;if(!c){var d=v.getBindingHandler(e);if(d&&d.preprocess&&!(l=d.preprocess(l,e,i)))return;(d=a[e])&&(r=l,0<=v.a.A(n,r)?r=!1:(d=r.match(t),r=null!==d&&(d[1]?"Object("+d[1]+")"+d[2]:r)),d=r),d&&u.push("'"+("string"==typeof a[e]?a[e]:e)+"':function(_z){"+r+"=_z}")}s&&(l="function(){return "+l+" }"),o.push("'"+e+"':"+l)}var o=[],u=[],s=(r=r||{}).valueAccessors,c=r.bindingParams,d="string"==typeof l?e(l):l;return v.a.C(d,(function(e){i(e.key||e.unknown,e.value)})),u.length&&i("_ko_property_writers","{"+u.join(",")+" }"),o.join(",")},Hd:function(e,n){for(var t=0;t<e.length;t++)if(e[t].key==n)return!0;return!1},$a:function(e,n,t,l,r){e&&v.N(e)?!v.Ya(e)||r&&e.w()===l||e(l):(e=n.get("_ko_property_writers"))&&e[t]&&e[t](l)}}}(),v.b("expressionRewriting",v.m),v.b("expressionRewriting.bindingRewriteValidators",v.m.Ra),v.b("expressionRewriting.parseObjectLiteral",v.m.Zb),v.b("expressionRewriting.preProcessBindings",v.m.ub),v.b("expressionRewriting._twoWayBindings",v.m.va),v.b("jsonExpressionRewriting",v.m),v.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",v.m.ub),function(){function e(e){return 8==e.nodeType&&i.test(r?e.text:e.nodeValue)}function n(e){return 8==e.nodeType&&a.test(r?e.text:e.nodeValue)}function t(t,l){for(var r=t,i=1,a=[];r=r.nextSibling;){if(n(r)&&(v.a.g.set(r,s,!0),0==--i))return a;a.push(r),e(r)&&i++}if(!l)throw Error("Cannot find closing comment tag to match: "+t.nodeValue);return null}function l(e,n){var l=t(e,n);return l?0<l.length?l[l.length-1].nextSibling:e.nextSibling:null}var r=u&&"\x3c!--test--\x3e"===u.createComment("test").text,i=r?/^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/:/^\s*ko(?:\s+([\s\S]+))?\s*$/,a=r?/^\x3c!--\s*\/ko\s*--\x3e$/:/^\s*\/ko\s*$/,o={ul:!0,ol:!0},s="__ko_matchedEndComment__";v.h={ea:{},childNodes:function(n){return e(n)?t(n):n.childNodes},Ea:function(n){if(e(n))for(var t=0,l=(n=v.h.childNodes(n)).length;t<l;t++)v.removeNode(n[t]);else v.a.Sb(n)},ua:function(n,t){if(e(n)){v.h.Ea(n);for(var l=n.nextSibling,r=0,i=t.length;r<i;r++)l.parentNode.insertBefore(t[r],l)}else v.a.ua(n,t)},Uc:function(n,t){e(n)?n.parentNode.insertBefore(t,n.nextSibling):n.firstChild?n.insertBefore(t,n.firstChild):n.appendChild(t)},Vb:function(n,t,l){l?e(n)?n.parentNode.insertBefore(t,l.nextSibling):l.nextSibling?n.insertBefore(t,l.nextSibling):n.appendChild(t):v.h.Uc(n,t)},firstChild:function(t){if(e(t))return!t.nextSibling||n(t.nextSibling)?null:t.nextSibling;if(t.firstChild&&n(t.firstChild))throw Error("Found invalid end comment, as the first child of "+t);return t.firstChild},nextSibling:function(t){if(e(t)&&(t=l(t)),t.nextSibling&&n(t.nextSibling)){var r=t.nextSibling;if(n(r)&&!v.a.g.get(r,s))throw Error("Found end comment without a matching opening comment, as child of "+t);return null}return t.nextSibling},Bd:e,Ud:function(e){return(e=(r?e.text:e.nodeValue).match(i))?e[1]:null},Rc:function(t){if(o[v.a.P(t)]){var r=t.firstChild;if(r)do{if(1===r.nodeType){var i,a=null;if(i=r.firstChild)do{if(a)a.push(i);else if(e(i)){var u=l(i,!0);u?i=u:a=[i]}else n(i)&&(a=[i])}while(i=i.nextSibling);if(i=a)for(a=r.nextSibling,u=0;u<i.length;u++)a?t.insertBefore(i[u],a):t.appendChild(i[u])}}while(r=r.nextSibling)}}}}(),v.b("virtualElements",v.h),v.b("virtualElements.allowedBindings",v.h.ea),v.b("virtualElements.emptyNode",v.h.Ea),v.b("virtualElements.insertAfter",v.h.Vb),v.b("virtualElements.prepend",v.h.Uc),v.b("virtualElements.setDomNodeChildren",v.h.ua),v.ga=function(){this.md={}},v.a.extend(v.ga.prototype,{nodeHasBindings:function(e){switch(e.nodeType){case 1:return null!=e.getAttribute("data-bind")||v.i.getComponentNameForNode(e);case 8:return v.h.Bd(e);default:return!1}},getBindings:function(e,n){var t=(t=this.getBindingsString(e,n))?this.parseBindingsString(t,n,e):null;return v.i.sc(t,e,n,!1)},getBindingAccessors:function(e,n){var t=(t=this.getBindingsString(e,n))?this.parseBindingsString(t,n,e,{valueAccessors:!0}):null;return v.i.sc(t,e,n,!0)},getBindingsString:function(e){switch(e.nodeType){case 1:return e.getAttribute("data-bind");case 8:return v.h.Ud(e);default:return null}},parseBindingsString:function(e,n,t,l){try{var r,i=this.md,a=e+(l&&l.valueAccessors||"");if(!(r=i[a])){var o,u="with($context){with($data||{}){return{"+v.m.ub(e,l)+"}}}";o=new Function("$context","$element",u),r=i[a]=o}return r(n,t)}catch(n){throw n.message="Unable to parse bindings.\nBindings value: "+e+"\nMessage: "+n.message,n}}}),v.ga.instance=new v.ga,v.b("bindingProvider",v.ga),function(){function e(e){var n=(e=v.a.g.get(e,A))&&e.M;n&&(e.M=null,n.Sc())}function n(n,t,l){this.node=n,this.xc=t,this.ib=[],this.T=!1,t.M||v.a.I.za(n,e),l&&l.M&&(l.M.ib.push(n),this.Kb=l)}function t(e){return function(){return e}}function l(e){return e()}function r(e){return v.a.Ha(v.v.K(e),(function(n,t){return function(){return e()[t]}}))}function i(e,n,l){return"function"==typeof e?r(e.bind(null,n,l)):v.a.Ha(e,t)}function s(e,n){return r(this.getBindings.bind(this,e,n))}function d(e,n){var t=v.h.firstChild(n);if(t){var l,r=v.ga.instance,i=r.preprocessNode;if(i){for(;l=t;)t=v.h.nextSibling(l),i.call(r,l);t=v.h.firstChild(n)}for(;l=t;)t=v.h.nextSibling(l),p(e,l)}v.j.Ga(n,v.j.T)}function p(e,n){var t=e,l=1===n.nodeType;l&&v.h.Rc(n),(l||v.ga.instance.nodeHasBindings(n))&&(t=f(n,null,e).bindingContextForDescendants),t&&!M[v.a.P(n)]&&d(t,n)}function f(e,n,t){var r,i=v.a.g.Tb(e,A,{}),o=i.gd;if(!n){if(o)throw Error("You cannot apply bindings multiple times to the same element.");i.gd=!0}if(o||(i.context=t),n&&"function"!=typeof n)r=n;else{var u=v.ga.instance,c=u.getBindingAccessors||s,d=v.$((function(){return(r=n?n(t,e):c.call(u,e,t))&&(t[m]&&t[m](),t[g]&&t[g]()),r}),null,{l:e});r&&d.ja()||(d=null)}var p,f=t;if(r){var h=function(){return v.a.Ha(d?d():r,l)},b=d?function(e){return function(){return l(d()[e])}}:function(e){return r[e]};h.get=function(e){return r[e]&&l(b(e))},h.has=function(e){return e in r},v.j.T in r&&v.j.subscribe(e,v.j.T,(function(){var n=(0,r[v.j.T])();if(n){var t=v.h.childNodes(e);t.length&&n(t,v.Dc(t[0]))}})),v.j.oa in r&&(f=v.j.Bb(e,t),v.j.subscribe(e,v.j.oa,(function(){var n=(0,r[v.j.oa])();n&&v.h.firstChild(e)&&n(e)}))),i=function(e){var n=[],t={},l=[];return v.a.O(e,(function r(i){if(!t[i]){var a=v.getBindingHandler(i);a&&(a.after&&(l.push(i),v.a.C(a.after,(function(n){if(e[n]){if(-1!==v.a.A(l,n))throw Error("Cannot combine the following bindings, because they have a cyclic dependency: "+l.join(", "));r(n)}})),l.length--),n.push({key:i,Lc:a})),t[i]=!0}})),n}(r),v.a.C(i,(function(n){var t=n.Lc.init,l=n.Lc.update,i=n.key;if(8===e.nodeType&&!v.h.ea[i])throw Error("The binding '"+i+"' cannot be used with virtual elements");try{"function"==typeof t&&v.v.K((function(){var n=t(e,b(i),h,f.$data,f);if(n&&n.controlsDescendantBindings){if(p!==a)throw Error("Multiple bindings ("+p+" and "+i+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");p=i}})),"function"==typeof l&&v.$((function(){l(e,b(i),h,f.$data,f)}),null,{l:e})}catch(e){throw e.message='Unable to process binding "'+i+": "+r[i]+'"\nMessage: '+e.message,e}}))}return{shouldBindDescendants:i=p===a,bindingContextForDescendants:i&&f}}function h(e,n){return e&&e instanceof v.fa?e:new v.fa(e,a,a,n)}var m=v.a.Da("_subscribable"),b=v.a.Da("_ancestorBindingInfo"),g=v.a.Da("_dataDependency");v.f={};var M={script:!0,textarea:!0,template:!0};v.getBindingHandler=function(e){return v.f[e]};var y={};v.fa=function(e,n,t,l,r){function i(){var e=d?c():c,r=v.a.c(e);return n?(v.a.extend(u,n),b in n&&(u[b]=n[b])):(u.$parents=[],u.$root=r,u.ko=v),u[m]=o,s?r=u.$data:(u.$rawData=e,u.$data=r),t&&(u[t]=r),l&&l(u,n,r),n&&n[m]&&!v.U.o().Ub(n[m])&&n[m](),p&&(u[g]=p),u.$data}var o,u=this,s=e===y,c=s?a:e,d="function"==typeof c&&!v.N(c),p=r&&r.dataDependency;r&&r.exportDependencies?i():((o=v.wb(i)).w(),o.ja()?o.equalityComparer=null:u[m]=a)},v.fa.prototype.createChildContext=function(e,n,t,l){if(!l&&n&&"object"==typeof n&&(n=(l=n).as,t=l.extend),n&&l&&l.noChildContext){var r="function"==typeof e&&!v.N(e);return new v.fa(y,this,null,(function(l){t&&t(l),l[n]=r?e():e}),l)}return new v.fa(e,this,n,(function(e,n){e.$parentContext=n,e.$parent=n.$data,e.$parents=(n.$parents||[]).slice(0),e.$parents.unshift(e.$parent),t&&t(e)}),l)},v.fa.prototype.extend=function(e,n){return new v.fa(y,this,null,(function(n){v.a.extend(n,"function"==typeof e?e(n):e)}),n)};var A=v.a.g.Z();n.prototype.Sc=function(){this.Kb&&this.Kb.M&&this.Kb.M.rd(this.node)},n.prototype.rd=function(e){v.a.hb(this.ib,e),!this.ib.length&&this.T&&this.Bc()},n.prototype.Bc=function(){this.T=!0,this.xc.M&&!this.ib.length&&(this.xc.M=null,v.a.I.xb(this.node,e),v.j.Ga(this.node,v.j.oa),this.Sc())},v.j={T:"childrenComplete",oa:"descendantsComplete",subscribe:function(e,n,t,l){return(e=v.a.g.Tb(e,A,{})).Fa||(e.Fa=new v.R),e.Fa.subscribe(t,l,n)},Ga:function(e,n){var t=v.a.g.get(e,A);if(t&&(t.Fa&&t.Fa.notifySubscribers(e,n),n==v.j.T))if(t.M)t.M.Bc();else if(t.M===a&&t.Fa&&t.Fa.Wa(v.j.oa))throw Error("descendantsComplete event not supported for bindings on this node")},Bb:function(e,t){var l=v.a.g.Tb(e,A,{});return l.M||(l.M=new n(e,l,t[b])),t[b]==l?t:t.extend((function(e){e[b]=l}))}},v.Sd=function(e){return(e=v.a.g.get(e,A))&&e.context},v.eb=function(e,n,t){return 1===e.nodeType&&v.h.Rc(e),f(e,n,h(t))},v.kd=function(e,n,t){return t=h(t),v.eb(e,i(n,t,e),t)},v.Pa=function(e,n){1!==n.nodeType&&8!==n.nodeType||d(h(e),n)},v.uc=function(e,n,t){if(!c&&o.jQuery&&(c=o.jQuery),2>arguments.length){if(!(n=u.body))throw Error("ko.applyBindings: could not find document.body; has the document been loaded?")}else if(!n||1!==n.nodeType&&8!==n.nodeType)throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");p(h(e,t),n)},v.Cc=function(e){return!e||1!==e.nodeType&&8!==e.nodeType?a:v.Sd(e)},v.Dc=function(e){return(e=v.Cc(e))?e.$data:a},v.b("bindingHandlers",v.f),v.b("bindingEvent",v.j),v.b("bindingEvent.subscribe",v.j.subscribe),v.b("bindingEvent.startPossiblyAsyncContentBinding",v.j.Bb),v.b("applyBindings",v.uc),v.b("applyBindingsToDescendants",v.Pa),v.b("applyBindingAccessorsToNode",v.eb),v.b("applyBindingsToNode",v.kd),v.b("contextFor",v.Cc),v.b("dataFor",v.Dc)}(),function(e){function n(n,l){var a,o=Object.prototype.hasOwnProperty.call(r,n)?r[n]:e;o?o.subscribe(l):((o=r[n]=new v.R).subscribe(l),t(n,(function(e,t){var l=!(!t||!t.synchronous);i[n]={definition:e,Fd:l},delete r[n],a||l?o.notifySubscribers(e):v.ma.yb((function(){o.notifySubscribers(e)}))})),a=!0)}function t(e,n){l("getConfig",[e],(function(t){t?l("loadComponent",[e,t],(function(e){n(e,t)})):n(null,null)}))}function l(n,t,r,i){i||(i=v.i.loaders.slice(0));var a=i.shift();if(a){var o=a[n];if(o){var u=!1;if(o.apply(a,t.concat((function(e){u?r(null):null!==e?r(e):l(n,t,r,i)})))!==e&&(u=!0,!a.suppressLoaderExceptions))throw Error("Component loaders must supply values by invoking the callback, not by returning values synchronously.")}else l(n,t,r,i)}else r(null)}var r={},i={};v.i={get:function(t,l){var r=Object.prototype.hasOwnProperty.call(i,t)?i[t]:e;r?r.Fd?v.v.K((function(){l(r.definition)})):v.ma.yb((function(){l(r.definition)})):n(t,l)},Ac:function(e){delete i[e]},nc:l},v.i.loaders=[],v.b("components",v.i),v.b("components.get",v.i.get),v.b("components.clearCachedDefinition",v.i.Ac)}(),function(){function e(e,n,t,l){function r(){0==--o&&l(a)}var a={},o=2,u=t.template;t=t.viewModel,u?i(n,u,(function(n){v.i.nc("loadTemplate",[e,n],(function(e){a.template=e,r()}))})):r(),t?i(n,t,(function(n){v.i.nc("loadViewModel",[e,n],(function(e){a[c]=e,r()}))})):r()}function t(e,n,l){if("function"==typeof n)l((function(e){return new n(e)}));else if("function"==typeof n[c])l(n[c]);else if("instance"in n){var r=n.instance;l((function(){return r}))}else"viewModel"in n?t(e,n.viewModel,l):e("Unknown viewModel value: "+n)}function l(e){switch(v.a.P(e)){case"script":return v.a.ta(e.text);case"textarea":return v.a.ta(e.value);case"template":if(r(e.content))return v.a.Ca(e.content.childNodes)}return v.a.Ca(e.childNodes)}function r(e){return o.DocumentFragment?e instanceof DocumentFragment:e&&11===e.nodeType}function i(e,t,l){"string"==typeof t.require?n||o.require?(n||o.require)([t.require],l):e("Uses require, but no AMD loader is present"):l(t)}function a(e){return function(n){throw Error("Component '"+e+"': "+n)}}var s={};v.i.register=function(e,n){if(!n)throw Error("Invalid configuration for "+e);if(v.i.sb(e))throw Error("Component "+e+" is already registered");s[e]=n},v.i.sb=function(e){return Object.prototype.hasOwnProperty.call(s,e)},v.i.unregister=function(e){delete s[e],v.i.Ac(e)},v.i.Ec={getConfig:function(e,n){n(v.i.sb(e)?s[e]:null)},loadComponent:function(n,t,l){var r=a(n);i(r,t,(function(t){e(n,r,t,l)}))},loadTemplate:function(e,n,t){if(e=a(e),"string"==typeof n)t(v.a.ta(n));else if(n instanceof Array)t(n);else if(r(n))t(v.a.la(n.childNodes));else if(n.element)if(n=n.element,o.HTMLElement?n instanceof HTMLElement:n&&n.tagName&&1===n.nodeType)t(l(n));else if("string"==typeof n){var i=u.getElementById(n);i?t(l(i)):e("Cannot find element with ID "+n)}else e("Unknown element type: "+n);else e("Unknown template value: "+n)},loadViewModel:function(e,n,l){t(a(e),n,l)}};var c="createViewModel";v.b("components.register",v.i.register),v.b("components.isRegistered",v.i.sb),v.b("components.unregister",v.i.unregister),v.b("components.defaultLoader",v.i.Ec),v.i.loaders.push(v.i.Ec),v.i.cd=s}(),function(){function e(e,t){if(l=e.getAttribute("params")){var l=n.parseBindingsString(l,t,e,{valueAccessors:!0,bindingParams:!0}),r=(l=v.a.Ha(l,(function(n){return v.o(n,null,{l:e})})),v.a.Ha(l,(function(n){var t=n.w();return n.ja()?v.o({read:function(){return v.a.c(n())},write:v.Ya(t)&&function(e){n()(e)},l:e}):t})));return Object.prototype.hasOwnProperty.call(r,"$raw")||(r.$raw=l),r}return{$raw:{}}}v.i.getComponentNameForNode=function(e){var n=v.a.P(e);if(v.i.sb(n)&&(-1!=n.indexOf("-")||"[object HTMLUnknownElement]"==""+e||8>=v.a.W&&e.tagName===n))return n},v.i.sc=function(n,t,l,r){if(1===t.nodeType){var i=v.i.getComponentNameForNode(t);if(i){if((n=n||{}).component)throw Error('Cannot use the "component" binding on a custom element matching a component');var a={name:i,params:e(t,l)};n.component=r?function(){return a}:a}}return n};var n=new v.ga;9>v.a.W&&(v.i.register=function(e){return function(n){return e.apply(this,arguments)}}(v.i.register),u.createDocumentFragment=function(e){return function(){var n,t=e(),l=v.i.cd;for(n in l);return t}}(u.createDocumentFragment))}(),function(){var e=0;v.f.component={init:function(n,t,l,r,i){function a(){var e=o&&o.dispose;"function"==typeof e&&e.call(o),s&&s.s(),u=o=s=null}var o,u,s,c=v.a.la(v.h.childNodes(n));return v.h.Ea(n),v.a.I.za(n,a),v.o((function(){var l,r,d=v.a.c(t());if("string"==typeof d?l=d:(l=v.a.c(d.name),r=v.a.c(d.params)),!l)throw Error("No component name specified");var p=v.j.Bb(n,i),f=u=++e;v.i.get(l,(function(e){if(u===f){if(a(),!e)throw Error("Unknown component '"+l+"'");!function(e,n,t){if(!(n=n.template))throw Error("Component '"+e+"' has no template");e=v.a.Ca(n),v.h.ua(t,e)}(l,e,n);var t=function(e,n,t){var l=e.createViewModel;return l?l.call(e,n,t):n}(e,r,{element:n,templateNodes:c});e=p.createChildContext(t,{extend:function(e){e.$component=t,e.$componentTemplateNodes=c}}),t&&t.koDescendantsComplete&&(s=v.j.subscribe(n,v.j.oa,t.koDescendantsComplete,t)),o=t,v.Pa(e,n)}}))}),null,{l:n}),{controlsDescendantBindings:!0}}},v.h.ea.component=!0}();var x={class:"className",for:"htmlFor"};v.f.attr={update:function(e,n){var t=v.a.c(n())||{};v.a.O(t,(function(n,t){t=v.a.c(t);var l=n.indexOf(":"),r=(l="lookupNamespaceURI"in e&&0<l&&e.lookupNamespaceURI(n.substr(0,l)),!1===t||null===t||t===a);r?l?e.removeAttributeNS(l,n):e.removeAttribute(n):t=t.toString(),8>=v.a.W&&n in x?(n=x[n],r?e.removeAttribute(n):e[n]=t):r||(l?e.setAttributeNS(l,n,t):e.setAttribute(n,t)),"name"===n&&v.a.Xc(e,r?"":t)}))}},v.f.checked={after:["value","attr"],init:function(e,n,t){function l(){var l=e.checked,u=r();if(!v.U.rb()&&(l||!o&&!v.U.pa())){var d=v.v.K(n);if(s){var f=c?d.w():d,h=p;p=u,h!==u?l&&(v.a.Oa(f,u,!0),v.a.Oa(f,h,!1)):v.a.Oa(f,u,l),c&&v.Ya(d)&&d(f)}else i&&(u===a?u=l:l||(u=a)),v.m.$a(d,t,"checked",u,!0)}}var r=v.wb((function(){return t.has("checkedValue")?v.a.c(t.get("checkedValue")):d?t.has("value")?v.a.c(t.get("value")):e.value:void 0})),i="checkbox"==e.type,o="radio"==e.type;if(i||o){var u=n(),s=i&&v.a.c(u)instanceof Array,c=!(s&&u.push&&u.splice),d=o||s,p=s?r():a;o&&!e.name&&v.f.uniqueName.init(e,(function(){return!0})),v.o(l,null,{l:e}),v.a.H(e,"click",l),v.o((function(){var t=v.a.c(n()),l=r();s?(e.checked=0<=v.a.A(t,l),p=l):e.checked=i&&l===a?!!t:r()===t}),null,{l:e}),u=a}}},v.m.va.checked=!0,v.f.checkedValue={update:function(e,n){e.value=v.a.c(n())}},v.f.class={update:function(e,n){var t=v.a.Cb(v.a.c(n()));v.a.Eb(e,e.__ko__cssValue,!1),e.__ko__cssValue=t,v.a.Eb(e,t,!0)}},v.f.css={update:function(e,n){var t=v.a.c(n());null!==t&&"object"==typeof t?v.a.O(t,(function(n,t){t=v.a.c(t),v.a.Eb(e,n,t)})):v.f.class.update(e,n)}},v.f.enable={update:function(e,n){var t=v.a.c(n());t&&e.disabled?e.removeAttribute("disabled"):t||e.disabled||(e.disabled=!0)}},v.f.disable={update:function(e,n){v.f.enable.update(e,(function(){return!v.a.c(n())}))}},v.f.event={init:function(e,n,t,l,r){var i=n()||{};v.a.O(i,(function(i){"string"==typeof i&&v.a.H(e,i,(function(e){var a,o=n()[i];if(o){try{var u=v.a.la(arguments);l=r.$data,u.unshift(l),a=o.apply(l,u)}finally{!0!==a&&(e.preventDefault?e.preventDefault():e.returnValue=!1)}!1===t.get(i+"Bubble")&&(e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation())}}))}))}},v.f.foreach={Qc:function(e){return function(){var n=e(),t=v.a.$b(n);return t&&"number"!=typeof t.length?(v.a.c(n),{foreach:t.data,as:t.as,noChildContext:t.noChildContext,includeDestroyed:t.includeDestroyed,afterAdd:t.afterAdd,beforeRemove:t.beforeRemove,afterRender:t.afterRender,beforeMove:t.beforeMove,afterMove:t.afterMove,templateEngine:v.ba.Na}):{foreach:n,templateEngine:v.ba.Na}}},init:function(e,n){return v.f.template.init(e,v.f.foreach.Qc(n))},update:function(e,n,t,l,r){return v.f.template.update(e,v.f.foreach.Qc(n),t,l,r)}},v.m.Ra.foreach=!1,v.h.ea.foreach=!0,v.f.hasfocus={init:function(e,n,t){function l(l){e.__ko_hasfocusUpdating=!0;var r=e.ownerDocument;if("activeElement"in r){var i;try{i=r.activeElement}catch(e){i=r.body}l=i===e}r=n(),v.m.$a(r,t,"hasfocus",l,!0),e.__ko_hasfocusLastValue=l,e.__ko_hasfocusUpdating=!1}var r=l.bind(null,!0),i=l.bind(null,!1);v.a.H(e,"focus",r),v.a.H(e,"focusin",r),v.a.H(e,"blur",i),v.a.H(e,"focusout",i),e.__ko_hasfocusLastValue=!1},update:function(e,n){var t=!!v.a.c(n());e.__ko_hasfocusUpdating||e.__ko_hasfocusLastValue===t||(t?e.focus():e.blur(),!t&&e.__ko_hasfocusLastValue&&e.ownerDocument.body.focus(),v.v.K(v.a.Fb,null,[e,t?"focusin":"focusout"]))}},v.m.va.hasfocus=!0,v.f.hasFocus=v.f.hasfocus,v.m.va.hasFocus="hasfocus",v.f.html={init:function(){return{controlsDescendantBindings:!0}},update:function(e,n){v.a.dc(e,n())}},function(){function e(e,n,t){v.f[e]={init:function(e,l,r,i,a){var o,u,s,c,d,p={};if(n){i=r.get("as");var f=r.get("noChildContext");p={as:i,noChildContext:f,exportDependencies:d=!(i&&f)}}return c=(s="render"==r.get("completeOn"))||r.has(v.j.oa),v.o((function(){var r,i=v.a.c(l()),f=!t!=!i,h=!u;(d||f!==o)&&(c&&(a=v.j.Bb(e,a)),f&&(n&&!d||(p.dataDependency=v.U.o()),r=n?a.createChildContext("function"==typeof i?i:l,p):v.U.pa()?a.extend(null,p):a),h&&v.U.pa()&&(u=v.a.Ca(v.h.childNodes(e),!0)),f?(h||v.h.ua(e,v.a.Ca(u)),v.Pa(r,e)):(v.h.Ea(e),s||v.j.Ga(e,v.j.T)),o=f)}),null,{l:e}),{controlsDescendantBindings:!0}}},v.m.Ra[e]=!1,v.h.ea[e]=!0}e("if"),e("ifnot",!1,!0),e("with",!0)}(),v.f.let={init:function(e,n,t,l,r){return n=r.extend(n),v.Pa(n,e),{controlsDescendantBindings:!0}}},v.h.ea.let=!0;var k={};v.f.options={init:function(e){if("select"!==v.a.P(e))throw Error("options binding applies only to SELECT elements");for(;0<e.length;)e.remove(0);return{controlsDescendantBindings:!0}},update:function(e,n,t){function l(){return v.a.fb(e.options,(function(e){return e.selected}))}function r(e,n,t){var l=typeof n;return"function"==l?n(e):"string"==l?e[n]:t}function i(n,l){if(h&&c)v.u.ya(e,v.a.c(t.get("value")),!0);else if(f.length){var r=0<=v.a.A(f,v.u.L(l[0]));v.a.Yc(l[0],r),h&&!r&&v.v.K(v.a.Fb,null,[e,"change"])}}var o=e.multiple,u=0!=e.length&&o?e.scrollTop:null,s=v.a.c(n()),c=t.get("valueAllowUnset")&&t.has("value"),d=t.get("optionsIncludeDestroyed");n={};var p,f=[];c||(o?f=v.a.Mb(l(),v.u.L):0<=e.selectedIndex&&f.push(v.u.L(e.options[e.selectedIndex]))),s&&(void 0===s.length&&(s=[s]),p=v.a.fb(s,(function(e){return d||e===a||null===e||!v.a.c(e._destroy)})),t.has("optionsCaption")&&null!==(s=v.a.c(t.get("optionsCaption")))&&s!==a&&p.unshift(k));var h=!1;n.beforeRemove=function(n){e.removeChild(n)},s=i,t.has("optionsAfterRender")&&"function"==typeof t.get("optionsAfterRender")&&(s=function(e,n){i(0,n),v.v.K(t.get("optionsAfterRender"),null,[n[0],e!==k?e:a])}),v.a.cc(e,p,(function(n,l,i){return i.length&&(f=!c&&i[0].selected?[v.u.L(i[0])]:[],h=!0),l=e.ownerDocument.createElement("option"),n===k?(v.a.Ab(l,t.get("optionsCaption")),v.u.ya(l,a)):(i=r(n,t.get("optionsValue"),n),v.u.ya(l,v.a.c(i)),n=r(n,t.get("optionsText"),i),v.a.Ab(l,n)),[l]}),n,s),v.v.K((function(){c?v.u.ya(e,v.a.c(t.get("value")),!0):(o?f.length&&l().length<f.length:f.length&&0<=e.selectedIndex?v.u.L(e.options[e.selectedIndex])!==f[0]:f.length||0<=e.selectedIndex)&&v.a.Fb(e,"change")})),v.a.vd(e),u&&20<Math.abs(u-e.scrollTop)&&(e.scrollTop=u)}},v.f.options.Yb=v.a.g.Z(),v.f.selectedOptions={after:["options","foreach"],init:function(e,n,t){v.a.H(e,"change",(function(){var l=n(),r=[];v.a.C(e.getElementsByTagName("option"),(function(e){e.selected&&r.push(v.u.L(e))})),v.m.$a(l,t,"selectedOptions",r)}))},update:function(e,n){if("select"!=v.a.P(e))throw Error("values binding applies only to SELECT elements");var t=v.a.c(n()),l=e.scrollTop;t&&"number"==typeof t.length&&v.a.C(e.getElementsByTagName("option"),(function(e){var n=0<=v.a.A(t,v.u.L(e));e.selected!=n&&v.a.Yc(e,n)})),e.scrollTop=l}},v.m.va.selectedOptions=!0,v.f.style={update:function(e,n){var t=v.a.c(n()||{});v.a.O(t,(function(n,t){if(null!==(t=v.a.c(t))&&t!==a&&!1!==t||(t=""),c)c(e).css(n,t);else if(/^--/.test(n))e.style.setProperty(n,t);else{n=n.replace(/-(\w)/g,(function(e,n){return n.toUpperCase()}));var l=e.style[n];e.style[n]=t,t===l||e.style[n]!=l||isNaN(t)||(e.style[n]=t+"px")}}))}},v.f.submit={init:function(e,n,t,l,r){if("function"!=typeof n())throw Error("The value for a submit binding must be a function");v.a.H(e,"submit",(function(t){var l,i=n();try{l=i.call(r.$data,e)}finally{!0!==l&&(t.preventDefault?t.preventDefault():t.returnValue=!1)}}))}},v.f.text={init:function(){return{controlsDescendantBindings:!0}},update:function(e,n){v.a.Ab(e,n())}},v.h.ea.text=!0,function(){if(o&&o.navigator){var e,n,t,l,r,i=function(e){if(e)return parseFloat(e[1])},u=o.navigator.userAgent;(e=o.opera&&o.opera.version&&parseInt(o.opera.version()))||(r=i(u.match(/Edge\/([^ ]+)$/)))||i(u.match(/Chrome\/([^ ]+)/))||(n=i(u.match(/Version\/([^ ]+) Safari/)))||(t=i(u.match(/Firefox\/([^ ]+)/)))||(l=v.a.W||i(u.match(/MSIE ([^ ]+)/)))||(l=i(u.match(/rv:([^ )]+)/)))}if(8<=l&&10>l)var s=v.a.g.Z(),c=v.a.g.Z(),d=function(e){var n=this.activeElement;(n=n&&v.a.g.get(n,c))&&n(e)},p=function(e,n){var t=e.ownerDocument;v.a.g.get(t,s)||(v.a.g.set(t,s,!0),v.a.H(t,"selectionchange",d)),v.a.g.set(e,c,n)};v.f.textInput={init:function(i,o,u){function s(e,n){v.a.H(i,e,n)}function c(){f||(h=i.value,f=v.a.setTimeout(d,4))}function d(){clearTimeout(f),h=f=a;var e=i.value;m!==e&&(m=e,v.m.$a(o(),u,"textInput",e))}var f,h,m=i.value,b=9==v.a.W?c:d,g=!1;l&&s("keypress",d),11>l&&s("propertychange",(function(e){g||"value"!==e.propertyName||b(e)})),8==l&&(s("keyup",d),s("keydown",d)),p&&(p(i,b),s("dragend",c)),(!l||9<=l)&&s("input",b),5>n&&"textarea"===v.a.P(i)?(s("keydown",c),s("paste",c),s("cut",c)):11>e?s("keydown",c):4>t?(s("DOMAutoComplete",d),s("dragdrop",d),s("drop",d)):r&&"number"===i.type&&s("keydown",c),s("change",d),s("blur",d),v.o((function e(){var n=v.a.c(o());null!==n&&n!==a||(n=""),h!==a&&n===h?v.a.setTimeout(e,4):i.value!==n&&(g=!0,i.value=n,g=!1,m=i.value)}),null,{l:i})}},v.m.va.textInput=!0,v.f.textinput={preprocess:function(e,n,t){t("textInput",e)}}}(),v.f.uniqueName={init:function(e,n){if(n()){var t="ko_unique_"+ ++v.f.uniqueName.qd;v.a.Xc(e,t)}}},v.f.uniqueName.qd=0,v.f.using={init:function(e,n,t,l,r){var i;return t.has("as")&&(i={as:t.get("as"),noChildContext:t.get("noChildContext")}),n=r.createChildContext(n,i),v.Pa(n,e),{controlsDescendantBindings:!0}}},v.h.ea.using=!0,v.f.value={after:["options","foreach"],init:function(e,n,t){var l=v.a.P(e),r="input"==l;if(!r||"checkbox"!=e.type&&"radio"!=e.type){var i=["change"],o=t.get("valueUpdate"),u=!1,s=null;o&&("string"==typeof o&&(o=[o]),v.a.gb(i,o),i=v.a.vc(i));var c,d=function(){s=null,u=!1;var l=n(),r=v.u.L(e);v.m.$a(l,t,"value",r)};!v.a.W||!r||"text"!=e.type||"off"==e.autocomplete||e.form&&"off"==e.form.autocomplete||-1!=v.a.A(i,"propertychange")||(v.a.H(e,"propertychange",(function(){u=!0})),v.a.H(e,"focus",(function(){u=!1})),v.a.H(e,"blur",(function(){u&&d()}))),v.a.C(i,(function(n){var t=d;v.a.Td(n,"after")&&(t=function(){s=v.u.L(e),v.a.setTimeout(d,0)},n=n.substring(5)),v.a.H(e,n,t)})),c=r&&"file"==e.type?function(){var t=v.a.c(n());null===t||t===a||""===t?e.value="":v.v.K(d)}:function(){var r=v.a.c(n()),i=v.u.L(e);null!==s&&r===s?v.a.setTimeout(c,0):r===i&&i!==a||("select"===l?(i=t.get("valueAllowUnset"),v.u.ya(e,r,i),i||r===v.u.L(e)||v.v.K(d)):v.u.ya(e,r))},v.o(c,null,{l:e})}else v.eb(e,{checkedValue:n})},update:function(){}},v.m.va.value=!0,v.f.visible={update:function(e,n){var t=v.a.c(n()),l="none"!=e.style.display;t&&!l?e.style.display="":!t&&l&&(e.style.display="none")}},v.f.hidden={update:function(e,n){v.f.visible.update(e,(function(){return!v.a.c(n())}))}},function(e){v.f[e]={init:function(n,t,l,r,i){return v.f.event.init.call(this,n,(function(){var n={};return n[e]=t(),n}),l,r,i)}}}("click"),v.ca=function(){},v.ca.prototype.renderTemplateSource=function(){throw Error("Override renderTemplateSource")},v.ca.prototype.createJavaScriptEvaluatorBlock=function(){throw Error("Override createJavaScriptEvaluatorBlock")},v.ca.prototype.makeTemplateSource=function(e,n){if("string"==typeof e){var t=(n=n||u).getElementById(e);if(!t)throw Error("Cannot find template with ID "+e);return new v.B.D(t)}if(1==e.nodeType||8==e.nodeType)return new v.B.ia(e);throw Error("Unknown template type: "+e)},v.ca.prototype.renderTemplate=function(e,n,t,l){return e=this.makeTemplateSource(e,l),this.renderTemplateSource(e,n,t,l)},v.ca.prototype.isTemplateRewritten=function(e,n){return!1===this.allowTemplateRewriting||this.makeTemplateSource(e,n).data("isRewritten")},v.ca.prototype.rewriteTemplate=function(e,n,t){n=n((e=this.makeTemplateSource(e,t)).text()),e.text(n),e.data("isRewritten",!0)},v.b("templateEngine",v.ca),v.ic=function(){function e(e,n,t,l){e=v.m.Zb(e);for(var r=v.m.Ra,i=0;i<e.length;i++){var a=e[i].key;if(Object.prototype.hasOwnProperty.call(r,a)){var o=r[a];if("function"==typeof o){if(a=o(e[i].value))throw Error(a)}else if(!o)throw Error("This template engine does not support the '"+a+"' binding within its templates")}}return t="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+v.m.ub(e,{valueAccessors:!0})+" } })()},'"+t.toLowerCase()+"')",l.createJavaScriptEvaluatorBlock(t)+n}var n=/(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'|[^>]*))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi,t=/\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;return{wd:function(e,n,t){n.isTemplateRewritten(e,t)||n.rewriteTemplate(e,(function(e){return v.ic.Kd(e,n)}),t)},Kd:function(l,r){return l.replace(n,(function(n,t,l,i,a){return e(a,t,l,r)})).replace(t,(function(n,t){return e(t,"\x3c!-- ko --\x3e","#comment",r)}))},ld:function(e,n){return v.aa.Wb((function(t,l){var r=t.nextSibling;r&&r.nodeName.toLowerCase()===n&&v.eb(r,e,l)}))}}}(),v.b("__tr_ambtns",v.ic.ld),function(){v.B={},v.B.D=function(e){if(this.D=e){var n=v.a.P(e);this.Db="script"===n?1:"textarea"===n?2:"template"==n&&e.content&&11===e.content.nodeType?3:4}},v.B.D.prototype.text=function(){var e=1===this.Db?"text":2===this.Db?"value":"innerHTML";if(0==arguments.length)return this.D[e];var n=arguments[0];"innerHTML"===e?v.a.dc(this.D,n):this.D[e]=n};var e=v.a.g.Z()+"_";v.B.D.prototype.data=function(n){if(1===arguments.length)return v.a.g.get(this.D,e+n);v.a.g.set(this.D,e+n,arguments[1])};var n=v.a.g.Z();v.B.D.prototype.nodes=function(){var e=this.D;if(0==arguments.length){var t=v.a.g.get(e,n)||{},l=t.jb||(3===this.Db?e.content:4===this.Db?e:a);return l&&!t.hd||(t=this.text())&&(l=v.a.Ld(t,e.ownerDocument),this.text(""),v.a.g.set(e,n,{jb:l,hd:!0})),l}v.a.g.set(e,n,{jb:arguments[0]})},v.B.ia=function(e){this.D=e},v.B.ia.prototype=new v.B.D,v.B.ia.prototype.constructor=v.B.ia,v.B.ia.prototype.text=function(){if(0==arguments.length){var e=v.a.g.get(this.D,n)||{};return e.jc===a&&e.jb&&(e.jc=e.jb.innerHTML),e.jc}v.a.g.set(this.D,n,{jc:arguments[0]})},v.b("templateSources",v.B),v.b("templateSources.domElement",v.B.D),v.b("templateSources.anonymousTemplate",v.B.ia)}(),function(){function e(e,n,t){var l;for(n=v.h.nextSibling(n);e&&(l=e)!==n;)t(l,e=v.h.nextSibling(l))}function n(n,t){if(n.length){var l=n[0],r=n[n.length-1],i=l.parentNode,a=v.ga.instance,o=a.preprocessNode;if(o){if(e(l,r,(function(e,n){var t=e.previousSibling,i=o.call(a,e);i&&(e===l&&(l=i[0]||n),e===r&&(r=i[i.length-1]||t))})),n.length=0,!l)return;l===r?n.push(l):(n.push(l,r),v.a.Ua(n,i))}e(l,r,(function(e){1!==e.nodeType&&8!==e.nodeType||v.uc(t,e)})),e(l,r,(function(e){1!==e.nodeType&&8!==e.nodeType||v.aa.bd(e,[t])})),v.a.Ua(n,i)}}function t(e){return e.nodeType?e:0<e.length?e[0]:null}function l(e,l,r,a,o){o=o||{};var u=(e&&t(e)||r||{}).ownerDocument,s=o.templateEngine||i;if(v.ic.wd(r,s,u),"number"!=typeof(r=s.renderTemplate(r,a,o,u)).length||0<r.length&&"number"!=typeof r[0].nodeType)throw Error("Template engine must return an array of DOM nodes");switch(u=!1,l){case"replaceChildren":v.h.ua(e,r),u=!0;break;case"replaceNode":v.a.Wc(e,r),u=!0;break;case"ignoreTargetNode":break;default:throw Error("Unknown renderMode: "+l)}return u&&(n(r,a),o.afterRender&&v.v.K(o.afterRender,null,[r,a[o.as||"$data"]]),"replaceChildren"==l&&v.j.Ga(e,v.j.T)),r}function r(e,n,t){return v.N(e)?e():"function"==typeof e?e(n,t):e}var i;v.ec=function(e){if(e!=a&&!(e instanceof v.ca))throw Error("templateEngine must inherit from ko.templateEngine");i=e},v.bc=function(e,n,o,u,s){if(((o=o||{}).templateEngine||i)==a)throw Error("Set a template engine before calling renderTemplate");if(s=s||"replaceChildren",u){var c=t(u);return v.$((function(){var i=n&&n instanceof v.fa?n:new v.fa(n,null,null,null,{exportDependencies:!0}),a=r(e,i.$data,i);i=l(u,s,a,i,o),"replaceNode"==s&&(c=t(u=i))}),null,{Sa:function(){return!c||!v.a.Rb(c)},l:c&&"replaceNode"==s?c.parentNode:c})}return v.aa.Wb((function(t){v.bc(e,n,o,t,"replaceNode")}))},v.Pd=function(e,t,i,o,u){function s(e,n){v.v.K(v.a.cc,null,[o,e,d,i,c,n]),v.j.Ga(o,v.j.T)}function c(e,t){n(t,p),i.afterRender&&i.afterRender(t,e),p=null}function d(n,t){p=u.createChildContext(n,{as:f,noChildContext:i.noChildContext,extend:function(e){e.$index=t,f&&(e[f+"Index"]=t)}});var a=r(e,n,p);return l(o,"ignoreTargetNode",a,p,i)}var p,f=i.as,h=!1===i.includeDestroyed||v.options.foreachHidesDestroyed&&!i.includeDestroyed;if(h||i.beforeRemove||!v.Oc(t))return v.$((function(){var e=v.a.c(t)||[];void 0===e.length&&(e=[e]),h&&(e=v.a.fb(e,(function(e){return e===a||null===e||!v.a.c(e._destroy)}))),s(e)}),null,{l:o});s(t.w());var m=t.subscribe((function(e){s(t(),e)}),null,"arrayChange");return m.l(o),m};var o=v.a.g.Z(),u=v.a.g.Z();v.f.template={init:function(e,n){var t=v.a.c(n());if("string"==typeof t||t.name)v.h.Ea(e);else if("nodes"in t){if(t=t.nodes||[],v.N(t))throw Error('The "nodes" option must be a plain, non-observable array.');var l=t[0]&&t[0].parentNode;l&&v.a.g.get(l,u)||(l=v.a.Xb(t),v.a.g.set(l,u,!0)),new v.B.ia(e).nodes(l)}else{if(!(0<(t=v.h.childNodes(e)).length))throw Error("Anonymous template defined, but no template content was provided");l=v.a.Xb(t),new v.B.ia(e).nodes(l)}return{controlsDescendantBindings:!0}},update:function(e,n,t,l,r){var i=n();t=!0,l=null,"string"==typeof(n=v.a.c(i))?n={}:(i=n.name,"if"in n&&(t=v.a.c(n.if)),t&&"ifnot"in n&&(t=!v.a.c(n.ifnot))),"foreach"in n?l=v.Pd(i||e,t&&n.foreach||[],n,e,r):t?(t=r,"data"in n&&(t=r.createChildContext(n.data,{as:n.as,noChildContext:n.noChildContext,exportDependencies:!0})),l=v.bc(i||e,t,n,e)):v.h.Ea(e),r=l,(n=v.a.g.get(e,o))&&"function"==typeof n.s&&n.s(),v.a.g.set(e,o,!r||r.ja&&!r.ja()?a:r)}},v.m.Ra.template=function(e){return 1==(e=v.m.Zb(e)).length&&e[0].unknown||v.m.Hd(e,"name")?null:"This template engine does not support anonymous templates nested within its templates"},v.h.ea.template=!0}(),v.b("setTemplateEngine",v.ec),v.b("renderTemplate",v.bc),v.a.Jc=function(e,n,t){var l,r,i,a,o;if(e.length&&n.length)for(l=r=0;(!t||l<t)&&(a=e[r]);++r){for(i=0;o=n[i];++i)if(a.value===o.value){a.moved=o.index,o.moved=a.index,n.splice(i,1),l=i=0;break}l+=i}},v.a.Ob=function(){function e(e,n,t,l,r){var i,a,o,u,s,c=Math.min,d=Math.max,p=[],f=e.length,h=n.length,m=h-f||1,b=f+h+1;for(i=0;i<=f;i++)for(u=o,p.push(o=[]),s=c(h,i+m),a=d(0,i-1);a<=s;a++)o[a]=a?i?e[i-1]===n[a-1]?u[a-1]:c(u[a]||b,o[a-1]||b)+1:a+1:i+1;for(c=[],d=[],m=[],i=f,a=h;i||a;)h=p[i][a]-1,a&&h===p[i][a-1]?d.push(c[c.length]={status:t,value:n[--a],index:a}):i&&h===p[i-1][a]?m.push(c[c.length]={status:l,value:e[--i],index:i}):(--a,--i,r.sparse||c.push({status:"retained",value:n[a]}));return v.a.Jc(m,d,!r.dontLimitMoves&&10*f),c.reverse()}return function(n,t,l){return l="boolean"==typeof l?{dontLimitMoves:l}:l||{},t=t||[],(n=n||[]).length<t.length?e(n,t,"added","deleted",l):e(t,n,"deleted","added",l)}}(),v.b("utils.compareArrays",v.a.Ob),function(){function e(e,n,t,l,r){var i=[],o=v.$((function(){var a=n(t,r,v.a.Ua(i,e))||[];0<i.length&&(v.a.Wc(i,a),l&&v.v.K(l,null,[t,a,r])),i.length=0,v.a.gb(i,a)}),null,{l:e,Sa:function(){return!v.a.jd(i)}});return{Y:i,$:o.ja()?o:a}}var n=v.a.g.Z(),t=v.a.g.Z();v.a.cc=function(l,r,i,o,u,s){function c(e){f={Aa:e,nb:v.sa(w++)},y.push(f),M||z.push(f)}function d(e){f=g[e],w!==f.nb.w()&&S.push(f),f.nb(w++),v.a.Ua(f.Y,l),y.push(f)}function p(e,n){if(e)for(var t=0,l=n.length;t<l;t++)v.a.C(n[t].Y,(function(l){e(l,t,n[t].Aa)}))}void 0===(r=r||[]).length&&(r=[r]),o=o||{};var f,h,m,b,g=v.a.g.get(l,n),M=!g,y=[],A=0,w=0,_=[],C=[],T=[],S=[],z=[],O=0;if(M)v.a.C(r,c);else{if(!s||g&&g._countWaitingForRemove){var E=v.a.Mb(g,(function(e){return e.Aa}));s=v.a.Ob(E,r,{dontLimitMoves:o.dontLimitMoves,sparse:!0})}var L,x,k;for(E=0;L=s[E];E++)switch(x=L.moved,k=L.index,L.status){case"deleted":for(;A<k;)d(A++);x===a&&((f=g[A]).$&&(f.$.s(),f.$=a),v.a.Ua(f.Y,l).length&&(o.beforeRemove&&(y.push(f),O++,f.Aa===t?f=null:T.push(f)),f&&_.push.apply(_,f.Y))),A++;break;case"added":for(;w<k;)d(A++);x!==a?(C.push(y.length),d(x)):c(L.value)}for(;w<r.length;)d(A++);y._countWaitingForRemove=O}v.a.g.set(l,n,y),p(o.beforeMove,S),v.a.C(_,o.beforeRemove?v.na:v.removeNode);try{b=l.ownerDocument.activeElement}catch(e){}if(C.length)for(;(E=C.shift())!=a;){for(f=y[E],h=a;E;)if((m=y[--E].Y)&&m.length){h=m[m.length-1];break}for(r=0;A=f.Y[r];h=A,r++)v.h.Vb(l,A,h)}for(E=0,C=v.h.firstChild(l);f=y[E];E++){for(f.Y||v.a.extend(f,e(l,i,f.Aa,u,f.nb)),r=0;A=f.Y[r];C=A.nextSibling,h=A,r++)A!==C&&v.h.Vb(l,A,h);!f.Dd&&u&&(u(f.Aa,f.Y,f.nb),f.Dd=!0,h=f.Y[f.Y.length-1])}for(b&&l.ownerDocument.activeElement!=b&&b.focus(),p(o.beforeRemove,T),E=0;E<T.length;++E)T[E].Aa=t;p(o.afterMove,S),p(o.afterAdd,z)}}(),v.b("utils.setDomNodeChildrenFromArrayMapping",v.a.cc),v.ba=function(){this.allowTemplateRewriting=!1},v.ba.prototype=new v.ca,v.ba.prototype.constructor=v.ba,v.ba.prototype.renderTemplateSource=function(e,n,t,l){return(n=9>v.a.W||!e.nodes?null:e.nodes())?v.a.la(n.cloneNode(!0).childNodes):(e=e.text(),v.a.ta(e,l))},v.ba.Na=new v.ba,v.ec(v.ba.Na),v.b("nativeTemplateEngine",v.ba),function(){v.Za=function(){var e=this.Gd=function(){if(!c||!c.tmpl)return 0;try{if(0<=c.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(e){}return 1}();this.renderTemplateSource=function(n,t,l,r){if(r=r||u,l=l||{},2>e)throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");var i=n.data("precompiled");return i||(i=n.text()||"",i=c.template(null,"{{ko_with $item.koBindingContext}}"+i+"{{/ko_with}}"),n.data("precompiled",i)),n=[t.$data],t=c.extend({koBindingContext:t},l.templateOptions),(t=c.tmpl(i,n,t)).appendTo(r.createElement("div")),c.fragments={},t},this.createJavaScriptEvaluatorBlock=function(e){return"{{ko_code ((function() { return "+e+" })()) }}"},this.addTemplate=function(e,n){u.write("<script type='text/html' id='"+e+"'>"+n+"<\/script>")},0<e&&(c.tmpl.tag.ko_code={open:"__.push($1 || '');"},c.tmpl.tag.ko_with={open:"with($1) {",close:"} "})},v.Za.prototype=new v.ca,v.Za.prototype.constructor=v.Za;var e=new v.Za;0<e.Gd&&v.ec(e),v.b("jqueryTmplTemplateEngine",v.Za)}()}))}()},17933:(e,n,t)=>{var l=t(33029);n.z=function(e){var n,t,r=(n=e,t=n.split("_"),2==t.length||2==(t=n.split("-")).length?t.pop():n).toUpperCase();return r in l?l[r]:null}},33029:e=>{e.exports={AD:"EUR",AE:"AED",AF:"AFN",AG:"XCD",AI:"XCD",AL:"ALL",AM:"AMD",AN:"ANG",AO:"AOA",AR:"ARS",AS:"USD",AT:"EUR",AU:"AUD",AW:"AWG",AX:"EUR",AZ:"AZN",BA:"BAM",BB:"BBD",BD:"BDT",BE:"EUR",BF:"XOF",BG:"BGN",BH:"BHD",BI:"BIF",BJ:"XOF",BL:"EUR",BM:"BMD",BN:"BND",BO:"BOB",BQ:"USD",BR:"BRL",BS:"BSD",BT:"BTN",BV:"NOK",BW:"BWP",BY:"BYR",BZ:"BZD",CA:"CAD",CC:"AUD",CD:"CDF",CF:"XAF",CG:"XAF",CH:"CHF",CI:"XOF",CK:"NZD",CL:"CLP",CM:"XAF",CN:"CNY",CO:"COP",CR:"CRC",CU:"CUP",CV:"CVE",CW:"ANG",CX:"AUD",CY:"EUR",CZ:"CZK",DE:"EUR",DJ:"DJF",DK:"DKK",DM:"XCD",DO:"DOP",DZ:"DZD",EC:"USD",EE:"EUR",EG:"EGP",EH:"MAD",ER:"ERN",ES:"EUR",ET:"ETB",FI:"EUR",FJ:"FJD",FK:"FKP",FM:"USD",FO:"DKK",FR:"EUR",GA:"XAF",GB:"GBP",GD:"XCD",GE:"GEL",GF:"EUR",GG:"GBP",GH:"GHS",GI:"GIP",GL:"DKK",GM:"GMD",GN:"GNF",GP:"EUR",GQ:"XAF",GR:"EUR",GS:"GBP",GT:"GTQ",GU:"USD",GW:"XOF",GY:"GYD",HK:"HKD",HM:"AUD",HN:"HNL",HR:"HRK",HT:"HTG",HU:"HUF",ID:"IDR",IE:"EUR",IL:"ILS",IM:"GBP",IN:"INR",IO:"USD",IQ:"IQD",IR:"IRR",IS:"ISK",IT:"EUR",JE:"GBP",JM:"JMD",JO:"JOD",JP:"JPY",KE:"KES",KG:"KGS",KH:"KHR",KI:"AUD",KM:"KMF",KN:"XCD",KP:"KPW",KR:"KRW",KW:"KWD",KY:"KYD",KZ:"KZT",LA:"LAK",LB:"LBP",LC:"XCD",LI:"CHF",LK:"LKR",LR:"LRD",LS:"LSL",LT:"LTL",LU:"EUR",LV:"LVL",LY:"LYD",MA:"MAD",MC:"EUR",MD:"MDL",ME:"EUR",MF:"EUR",MG:"MGA",MH:"USD",MK:"MKD",ML:"XOF",MM:"MMK",MN:"MNT",MO:"MOP",MP:"USD",MQ:"EUR",MR:"MRO",MS:"XCD",MT:"EUR",MU:"MUR",MV:"MVR",MW:"MWK",MX:"MXN",MY:"MYR",MZ:"MZN",NA:"NAD",NC:"XPF",NE:"XOF",NF:"AUD",NG:"NGN",NI:"NIO",NL:"EUR",NO:"NOK",NP:"NPR",NR:"AUD",NU:"NZD",NZ:"NZD",OM:"OMR",PA:"PAB",PE:"PEN",PF:"XPF",PG:"PGK",PH:"PHP",PK:"PKR",PL:"PLN",PM:"EUR",PN:"NZD",PR:"USD",PS:"ILS",PT:"EUR",PW:"USD",PY:"PYG",QA:"QAR",RE:"EUR",RO:"RON",RS:"RSD",RU:"RUB",RW:"RWF",SA:"SAR",SB:"SBD",SC:"SCR",SD:"SDG",SE:"SEK",SG:"SGD",SH:"SHP",SI:"EUR",SJ:"NOK",SK:"EUR",SL:"SLL",SM:"EUR",SN:"XOF",SO:"SOS",SR:"SRD",ST:"STD",SV:"SVC",SX:"ANG",SY:"SYP",SZ:"SZL",TC:"USD",TD:"XAF",TF:"EUR",TG:"XOF",TH:"THB",TJ:"TJS",TK:"NZD",TL:"USD",TM:"TMT",TN:"TND",TO:"TOP",TR:"TRY",TT:"TTD",TV:"AUD",TW:"TWD",TZ:"TZS",UA:"UAH",UG:"UGX",UM:"USD",US:"USD",UY:"UYU",UZ:"UZS",VA:"EUR",VC:"XCD",VE:"VEF",VG:"USD",VI:"USD",VN:"VND",VU:"VUV",WF:"XPF",WS:"WST",YE:"YER",YT:"EUR",ZA:"ZAR",ZM:"ZMK",ZW:"ZWL"}},96362:(e,n,t)=>{var l=t(89256)(t(56629),"DataView");e.exports=l},50664:(e,n,t)=>{var l=t(82461),r=t(23890),i=t(19043),a=t(68855),o=t(28357);function u(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}u.prototype.clear=l,u.prototype.delete=r,u.prototype.get=i,u.prototype.has=a,u.prototype.set=o,e.exports=u},30504:(e,n,t)=>{var l=t(33851),r=t(2245),i=t(94280),a=t(98287),o=t(13360);function u(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}u.prototype.clear=l,u.prototype.delete=r,u.prototype.get=i,u.prototype.has=a,u.prototype.set=o,e.exports=u},90991:(e,n,t)=>{var l=t(89256)(t(56629),"Map");e.exports=l},25968:(e,n,t)=>{var l=t(89760),r=t(6916),i=t(51768),a=t(4987),o=t(89617);function u(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}u.prototype.clear=l,u.prototype.delete=r,u.prototype.get=i,u.prototype.has=a,u.prototype.set=o,e.exports=u},69056:(e,n,t)=>{var l=t(89256)(t(56629),"Promise");e.exports=l},68024:(e,n,t)=>{var l=t(89256)(t(56629),"Set");e.exports=l},27615:(e,n,t)=>{var l=t(25968),r=t(38058),i=t(49493);function a(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new l;++n<t;)this.add(e[n])}a.prototype.add=a.prototype.push=r,a.prototype.has=i,e.exports=a},20907:(e,n,t)=>{var l=t(30504),r=t(61792),i=t(39079),a=t(12596),o=t(3951),u=t(5218);function s(e){var n=this.__data__=new l(e);this.size=n.size}s.prototype.clear=r,s.prototype.delete=i,s.prototype.get=a,s.prototype.has=o,s.prototype.set=u,e.exports=s},48015:(e,n,t)=>{var l=t(56629).Symbol;e.exports=l},88702:(e,n,t)=>{var l=t(56629).Uint8Array;e.exports=l},43416:(e,n,t)=>{var l=t(89256)(t(56629),"WeakMap");e.exports=l},12030:e=>{e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},95266:e=>{e.exports=function(e,n){for(var t=-1,l=null==e?0:e.length,r=0,i=[];++t<l;){var a=e[t];n(a,t,e)&&(i[r++]=a)}return i}},45379:(e,n,t)=>{var l=t(85198),r=t(96555),i=t(89312),a=t(44702),o=t(28185),u=t(29014),s=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=i(e),c=!t&&r(e),d=!t&&!c&&a(e),p=!t&&!c&&!d&&u(e),f=t||c||d||p,h=f?l(e.length,String):[],m=h.length;for(var b in e)!n&&!s.call(e,b)||f&&("length"==b||d&&("offset"==b||"parent"==b)||p&&("buffer"==b||"byteLength"==b||"byteOffset"==b)||o(b,m))||h.push(b);return h}},13208:e=>{e.exports=function(e,n){for(var t=-1,l=null==e?0:e.length,r=Array(l);++t<l;)r[t]=n(e[t],t,e);return r}},4642:e=>{e.exports=function(e,n){for(var t=-1,l=n.length,r=e.length;++t<l;)e[r+t]=n[t];return e}},99905:e=>{e.exports=function(e,n){for(var t=-1,l=null==e?0:e.length;++t<l;)if(n(e[t],t,e))return!0;return!1}},2932:(e,n,t)=>{var l=t(24391),r=t(82421),i=Object.prototype.hasOwnProperty;e.exports=function(e,n,t){var a=e[n];i.call(e,n)&&r(a,t)&&(void 0!==t||n in e)||l(e,n,t)}},62027:(e,n,t)=>{var l=t(82421);e.exports=function(e,n){for(var t=e.length;t--;)if(l(e[t][0],n))return t;return-1}},24391:(e,n,t)=>{var l=t(86288);e.exports=function(e,n,t){"__proto__"==n&&l?l(e,n,{configurable:!0,enumerable:!0,value:t,writable:!0}):e[n]=t}},26263:(e,n,t)=>{var l=t(77087),r=t(86063)(l);e.exports=r},59567:(e,n,t)=>{var l=t(4642),r=t(86192);e.exports=function e(n,t,i,a,o){var u=-1,s=n.length;for(i||(i=r),o||(o=[]);++u<s;){var c=n[u];t>0&&i(c)?t>1?e(c,t-1,i,a,o):l(o,c):a||(o[o.length]=c)}return o}},82299:(e,n,t)=>{var l=t(91241)();e.exports=l},77087:(e,n,t)=>{var l=t(82299),r=t(28327);e.exports=function(e,n){return e&&l(e,n,r)}},52041:(e,n,t)=>{var l=t(66099),r=t(25631);e.exports=function(e,n){for(var t=0,i=(n=l(n,e)).length;null!=e&&t<i;)e=e[r(n[t++])];return t&&t==i?e:void 0}},85389:(e,n,t)=>{var l=t(4642),r=t(89312);e.exports=function(e,n,t){var i=n(e);return r(e)?i:l(i,t(e))}},29779:(e,n,t)=>{var l=t(48015),r=t(25602),i=t(71648),a=l?l.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":a&&a in Object(e)?r(e):i(e)}},80693:e=>{e.exports=function(e,n){return null!=e&&n in Object(e)}},56382:(e,n,t)=>{var l=t(29779),r=t(1656);e.exports=function(e){return r(e)&&"[object Arguments]"==l(e)}},65043:(e,n,t)=>{var l=t(45721),r=t(1656);e.exports=function e(n,t,i,a,o){return n===t||(null==n||null==t||!r(n)&&!r(t)?n!=n&&t!=t:l(n,t,i,a,e,o))}},45721:(e,n,t)=>{var l=t(20907),r=t(41861),i=t(67763),a=t(95247),o=t(57615),u=t(89312),s=t(44702),c=t(29014),d="[object Arguments]",p="[object Array]",f="[object Object]",h=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,m,b,g){var M=u(e),y=u(n),v=M?p:o(e),A=y?p:o(n),w=(v=v==d?f:v)==f,_=(A=A==d?f:A)==f,C=v==A;if(C&&s(e)){if(!s(n))return!1;M=!0,w=!1}if(C&&!w)return g||(g=new l),M||c(e)?r(e,n,t,m,b,g):i(e,n,v,t,m,b,g);if(!(1&t)){var T=w&&h.call(e,"__wrapped__"),S=_&&h.call(n,"__wrapped__");if(T||S){var z=T?e.value():e,O=S?n.value():n;return g||(g=new l),b(z,O,t,m,g)}}return!!C&&(g||(g=new l),a(e,n,t,m,b,g))}},77368:(e,n,t)=>{var l=t(20907),r=t(65043);e.exports=function(e,n,t,i){var a=t.length,o=a,u=!i;if(null==e)return!o;for(e=Object(e);a--;){var s=t[a];if(u&&s[2]?s[1]!==e[s[0]]:!(s[0]in e))return!1}for(;++a<o;){var c=(s=t[a])[0],d=e[c],p=s[1];if(u&&s[2]){if(void 0===d&&!(c in e))return!1}else{var f=new l;if(i)var h=i(d,p,c,e,n,f);if(!(void 0===h?r(p,d,3,i,f):h))return!1}}return!0}},12465:(e,n,t)=>{var l=t(18798),r=t(93579),i=t(15908),a=t(91744),o=/^\[object .+?Constructor\]$/,u=Function.prototype,s=Object.prototype,c=u.toString,d=s.hasOwnProperty,p=RegExp("^"+c.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||r(e))&&(l(e)?p:o).test(a(e))}},37127:(e,n,t)=>{var l=t(29779),r=t(10006),i=t(1656),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&r(e.length)&&!!a[l(e)]}},41189:(e,n,t)=>{var l=t(79547),r=t(97007),i=t(72827),a=t(89312),o=t(46331);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?a(e)?r(e[0],e[1]):l(e):o(e)}},56635:(e,n,t)=>{var l=t(21142),r=t(79284),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!l(e))return r(e);var n=[];for(var t in Object(e))i.call(e,t)&&"constructor"!=t&&n.push(t);return n}},98288:(e,n,t)=>{var l=t(15908),r=t(21142),i=t(80159),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!l(e))return i(e);var n=r(e),t=[];for(var o in e)("constructor"!=o||!n&&a.call(e,o))&&t.push(o);return t}},840:(e,n,t)=>{var l=t(26263),r=t(19220);e.exports=function(e,n){var t=-1,i=r(e)?Array(e.length):[];return l(e,(function(e,l,r){i[++t]=n(e,l,r)})),i}},79547:(e,n,t)=>{var l=t(77368),r=t(79535),i=t(42872);e.exports=function(e){var n=r(e);return 1==n.length&&n[0][2]?i(n[0][0],n[0][1]):function(t){return t===e||l(t,e,n)}}},97007:(e,n,t)=>{var l=t(65043),r=t(43237),i=t(24532),a=t(72315),o=t(29300),u=t(42872),s=t(25631);e.exports=function(e,n){return a(e)&&o(n)?u(s(e),n):function(t){var a=r(t,e);return void 0===a&&a===n?i(t,e):l(n,a,3)}}},3392:(e,n,t)=>{var l=t(14556),r=t(24532);e.exports=function(e,n){return l(e,n,(function(n,t){return r(e,t)}))}},14556:(e,n,t)=>{var l=t(52041),r=t(14735),i=t(66099);e.exports=function(e,n,t){for(var a=-1,o=n.length,u={};++a<o;){var s=n[a],c=l(e,s);t(c,s)&&r(u,i(s,e),c)}return u}},15316:e=>{e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},59977:(e,n,t)=>{var l=t(52041);e.exports=function(e){return function(n){return l(n,e)}}},75845:(e,n,t)=>{var l=t(72827),r=t(5086),i=t(27616);e.exports=function(e,n){return i(r(e,n,l),e+"")}},14735:(e,n,t)=>{var l=t(2932),r=t(66099),i=t(28185),a=t(15908),o=t(25631);e.exports=function(e,n,t,u){if(!a(e))return e;for(var s=-1,c=(n=r(n,e)).length,d=c-1,p=e;null!=p&&++s<c;){var f=o(n[s]),h=t;if("__proto__"===f||"constructor"===f||"prototype"===f)return e;if(s!=d){var m=p[f];void 0===(h=u?u(m,f,p):void 0)&&(h=a(m)?m:i(n[s+1])?[]:{})}l(p,f,h),p=p[f]}return e}},74526:(e,n,t)=>{var l=t(27083),r=t(86288),i=t(72827),a=r?function(e,n){return r(e,"toString",{configurable:!0,enumerable:!1,value:l(n),writable:!0})}:i;e.exports=a},85198:e=>{e.exports=function(e,n){for(var t=-1,l=Array(e);++t<e;)l[t]=n(t);return l}},93340:(e,n,t)=>{var l=t(48015),r=t(13208),i=t(89312),a=t(34245),o=l?l.prototype:void 0,u=o?o.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(i(n))return r(n,e)+"";if(a(n))return u?u.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},15923:(e,n,t)=>{var l=t(30147),r=/^\s+/;e.exports=function(e){return e?e.slice(0,l(e)+1).replace(r,""):e}},18885:e=>{e.exports=function(e){return function(n){return e(n)}}},61428:e=>{e.exports=function(e,n){return e.has(n)}},10673:(e,n,t)=>{var l=t(72827);e.exports=function(e){return"function"==typeof e?e:l}},66099:(e,n,t)=>{var l=t(89312),r=t(72315),i=t(737),a=t(40879);e.exports=function(e,n){return l(e)?e:r(e,n)?[e]:i(a(e))}},19461:(e,n,t)=>{var l=t(56629)["__core-js_shared__"];e.exports=l},86063:(e,n,t)=>{var l=t(19220);e.exports=function(e,n){return function(t,r){if(null==t)return t;if(!l(t))return e(t,r);for(var i=t.length,a=n?i:-1,o=Object(t);(n?a--:++a<i)&&!1!==r(o[a],a,o););return t}}},91241:e=>{e.exports=function(e){return function(n,t,l){for(var r=-1,i=Object(n),a=l(n),o=a.length;o--;){var u=a[e?o:++r];if(!1===t(i[u],u,i))break}return n}}},86288:(e,n,t)=>{var l=t(89256),r=function(){try{var e=l(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=r},41861:(e,n,t)=>{var l=t(27615),r=t(99905),i=t(61428);e.exports=function(e,n,t,a,o,u){var s=1&t,c=e.length,d=n.length;if(c!=d&&!(s&&d>c))return!1;var p=u.get(e),f=u.get(n);if(p&&f)return p==n&&f==e;var h=-1,m=!0,b=2&t?new l:void 0;for(u.set(e,n),u.set(n,e);++h<c;){var g=e[h],M=n[h];if(a)var y=s?a(M,g,h,n,e,u):a(g,M,h,e,n,u);if(void 0!==y){if(y)continue;m=!1;break}if(b){if(!r(n,(function(e,n){if(!i(b,n)&&(g===e||o(g,e,t,a,u)))return b.push(n)}))){m=!1;break}}else if(g!==M&&!o(g,M,t,a,u)){m=!1;break}}return u.delete(e),u.delete(n),m}},67763:(e,n,t)=>{var l=t(48015),r=t(88702),i=t(82421),a=t(41861),o=t(5058),u=t(21368),s=l?l.prototype:void 0,c=s?s.valueOf:void 0;e.exports=function(e,n,t,l,s,d,p){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!d(new r(e),new r(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var f=o;case"[object Set]":var h=1&l;if(f||(f=u),e.size!=n.size&&!h)return!1;var m=p.get(e);if(m)return m==n;l|=2,p.set(e,n);var b=a(f(e),f(n),l,s,d,p);return p.delete(e),b;case"[object Symbol]":if(c)return c.call(e)==c.call(n)}return!1}},95247:(e,n,t)=>{var l=t(80755),r=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,i,a,o){var u=1&t,s=l(e),c=s.length;if(c!=l(n).length&&!u)return!1;for(var d=c;d--;){var p=s[d];if(!(u?p in n:r.call(n,p)))return!1}var f=o.get(e),h=o.get(n);if(f&&h)return f==n&&h==e;var m=!0;o.set(e,n),o.set(n,e);for(var b=u;++d<c;){var g=e[p=s[d]],M=n[p];if(i)var y=u?i(M,g,p,n,e,o):i(g,M,p,e,n,o);if(!(void 0===y?g===M||a(g,M,t,i,o):y)){m=!1;break}b||(b="constructor"==p)}if(m&&!b){var v=e.constructor,A=n.constructor;v==A||!("constructor"in e)||!("constructor"in n)||"function"==typeof v&&v instanceof v&&"function"==typeof A&&A instanceof A||(m=!1)}return o.delete(e),o.delete(n),m}},39127:(e,n,t)=>{var l=t(50949),r=t(5086),i=t(27616);e.exports=function(e){return i(r(e,void 0,l),e+"")}},99668:(e,n,t)=>{var l="object"==typeof t.g&&t.g&&t.g.Object===Object&&t.g;e.exports=l},80755:(e,n,t)=>{var l=t(85389),r=t(70175),i=t(28327);e.exports=function(e){return l(e,i,r)}},1742:(e,n,t)=>{var l=t(22686);e.exports=function(e,n){var t=e.__data__;return l(n)?t["string"==typeof n?"string":"hash"]:t.map}},79535:(e,n,t)=>{var l=t(29300),r=t(28327);e.exports=function(e){for(var n=r(e),t=n.length;t--;){var i=n[t],a=e[i];n[t]=[i,a,l(a)]}return n}},89256:(e,n,t)=>{var l=t(12465),r=t(87536);e.exports=function(e,n){var t=r(e,n);return l(t)?t:void 0}},69732:(e,n,t)=>{var l=t(93258)(Object.getPrototypeOf,Object);e.exports=l},25602:(e,n,t)=>{var l=t(48015),r=Object.prototype,i=r.hasOwnProperty,a=r.toString,o=l?l.toStringTag:void 0;e.exports=function(e){var n=i.call(e,o),t=e[o];try{e[o]=void 0;var l=!0}catch(e){}var r=a.call(e);return l&&(n?e[o]=t:delete e[o]),r}},70175:(e,n,t)=>{var l=t(95266),r=t(31354),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,o=a?function(e){return null==e?[]:(e=Object(e),l(a(e),(function(n){return i.call(e,n)})))}:r;e.exports=o},57615:(e,n,t)=>{var l=t(96362),r=t(90991),i=t(69056),a=t(68024),o=t(43416),u=t(29779),s=t(91744),c="[object Map]",d="[object Promise]",p="[object Set]",f="[object WeakMap]",h="[object DataView]",m=s(l),b=s(r),g=s(i),M=s(a),y=s(o),v=u;(l&&v(new l(new ArrayBuffer(1)))!=h||r&&v(new r)!=c||i&&v(i.resolve())!=d||a&&v(new a)!=p||o&&v(new o)!=f)&&(v=function(e){var n=u(e),t="[object Object]"==n?e.constructor:void 0,l=t?s(t):"";if(l)switch(l){case m:return h;case b:return c;case g:return d;case M:return p;case y:return f}return n}),e.exports=v},87536:e=>{e.exports=function(e,n){return null==e?void 0:e[n]}},14517:(e,n,t)=>{var l=t(66099),r=t(96555),i=t(89312),a=t(28185),o=t(10006),u=t(25631);e.exports=function(e,n,t){for(var s=-1,c=(n=l(n,e)).length,d=!1;++s<c;){var p=u(n[s]);if(!(d=null!=e&&t(e,p)))break;e=e[p]}return d||++s!=c?d:!!(c=null==e?0:e.length)&&o(c)&&a(p,c)&&(i(e)||r(e))}},82461:(e,n,t)=>{var l=t(13011);e.exports=function(){this.__data__=l?l(null):{},this.size=0}},23890:e=>{e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},19043:(e,n,t)=>{var l=t(13011),r=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(l){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(n,e)?n[e]:void 0}},68855:(e,n,t)=>{var l=t(13011),r=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return l?void 0!==n[e]:r.call(n,e)}},28357:(e,n,t)=>{var l=t(13011);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=l&&void 0===n?"__lodash_hash_undefined__":n,this}},86192:(e,n,t)=>{var l=t(48015),r=t(96555),i=t(89312),a=l?l.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||r(e)||!!(a&&e&&e[a])}},28185:e=>{var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var l=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==l||"symbol"!=l&&n.test(e))&&e>-1&&e%1==0&&e<t}},51275:(e,n,t)=>{var l=t(82421),r=t(19220),i=t(28185),a=t(15908);e.exports=function(e,n,t){if(!a(t))return!1;var o=typeof n;return!!("number"==o?r(t)&&i(n,t.length):"string"==o&&n in t)&&l(t[n],e)}},72315:(e,n,t)=>{var l=t(89312),r=t(34245),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;e.exports=function(e,n){if(l(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!r(e))||a.test(e)||!i.test(e)||null!=n&&e in Object(n)}},22686:e=>{e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},93579:(e,n,t)=>{var l,r=t(19461),i=(l=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+l:"";e.exports=function(e){return!!i&&i in e}},21142:e=>{var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},29300:(e,n,t)=>{var l=t(15908);e.exports=function(e){return e==e&&!l(e)}},33851:e=>{e.exports=function(){this.__data__=[],this.size=0}},2245:(e,n,t)=>{var l=t(62027),r=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=l(n,e);return!(t<0||(t==n.length-1?n.pop():r.call(n,t,1),--this.size,0))}},94280:(e,n,t)=>{var l=t(62027);e.exports=function(e){var n=this.__data__,t=l(n,e);return t<0?void 0:n[t][1]}},98287:(e,n,t)=>{var l=t(62027);e.exports=function(e){return l(this.__data__,e)>-1}},13360:(e,n,t)=>{var l=t(62027);e.exports=function(e,n){var t=this.__data__,r=l(t,e);return r<0?(++this.size,t.push([e,n])):t[r][1]=n,this}},89760:(e,n,t)=>{var l=t(50664),r=t(30504),i=t(90991);e.exports=function(){this.size=0,this.__data__={hash:new l,map:new(i||r),string:new l}}},6916:(e,n,t)=>{var l=t(1742);e.exports=function(e){var n=l(this,e).delete(e);return this.size-=n?1:0,n}},51768:(e,n,t)=>{var l=t(1742);e.exports=function(e){return l(this,e).get(e)}},4987:(e,n,t)=>{var l=t(1742);e.exports=function(e){return l(this,e).has(e)}},89617:(e,n,t)=>{var l=t(1742);e.exports=function(e,n){var t=l(this,e),r=t.size;return t.set(e,n),this.size+=t.size==r?0:1,this}},5058:e=>{e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,l){t[++n]=[l,e]})),t}},42872:e=>{e.exports=function(e,n){return function(t){return null!=t&&t[e]===n&&(void 0!==n||e in Object(t))}}},40129:(e,n,t)=>{var l=t(28082);e.exports=function(e){var n=l(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},13011:(e,n,t)=>{var l=t(89256)(Object,"create");e.exports=l},79284:(e,n,t)=>{var l=t(93258)(Object.keys,Object);e.exports=l},80159:e=>{e.exports=function(e){var n=[];if(null!=e)for(var t in Object(e))n.push(t);return n}},81828:(e,n,t)=>{e=t.nmd(e);var l=t(99668),r=n&&!n.nodeType&&n,i=r&&e&&!e.nodeType&&e,a=i&&i.exports===r&&l.process,o=function(){try{return i&&i.require&&i.require("util").types||a&&a.binding&&a.binding("util")}catch(e){}}();e.exports=o},71648:e=>{var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},93258:e=>{e.exports=function(e,n){return function(t){return e(n(t))}}},5086:(e,n,t)=>{var l=t(12030),r=Math.max;e.exports=function(e,n,t){return n=r(void 0===n?e.length-1:n,0),function(){for(var i=arguments,a=-1,o=r(i.length-n,0),u=Array(o);++a<o;)u[a]=i[n+a];a=-1;for(var s=Array(n+1);++a<n;)s[a]=i[a];return s[n]=t(u),l(e,this,s)}}},56629:(e,n,t)=>{var l=t(99668),r="object"==typeof self&&self&&self.Object===Object&&self,i=l||r||Function("return this")();e.exports=i},38058:e=>{e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},49493:e=>{e.exports=function(e){return this.__data__.has(e)}},21368:e=>{e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},27616:(e,n,t)=>{var l=t(74526),r=t(70291)(l);e.exports=r},70291:e=>{var n=Date.now;e.exports=function(e){var t=0,l=0;return function(){var r=n(),i=16-(r-l);if(l=r,i>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},61792:(e,n,t)=>{var l=t(30504);e.exports=function(){this.__data__=new l,this.size=0}},39079:e=>{e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},12596:e=>{e.exports=function(e){return this.__data__.get(e)}},3951:e=>{e.exports=function(e){return this.__data__.has(e)}},5218:(e,n,t)=>{var l=t(30504),r=t(90991),i=t(25968);e.exports=function(e,n){var t=this.__data__;if(t instanceof l){var a=t.__data__;if(!r||a.length<199)return a.push([e,n]),this.size=++t.size,this;t=this.__data__=new i(a)}return t.set(e,n),this.size=t.size,this}},737:(e,n,t)=>{var l=t(40129),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=l((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(r,(function(e,t,l,r){n.push(l?r.replace(i,"$1"):t||e)})),n}));e.exports=a},25631:(e,n,t)=>{var l=t(34245);e.exports=function(e){if("string"==typeof e||l(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},91744:e=>{var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},30147:e=>{var n=/\s/;e.exports=function(e){for(var t=e.length;t--&&n.test(e.charAt(t)););return t}},27083:e=>{e.exports=function(e){return function(){return e}}},88466:(e,n,t)=>{var l=t(15908),r=t(17121),i=t(4188),a=Math.max,o=Math.min;e.exports=function(e,n,t){var u,s,c,d,p,f,h=0,m=!1,b=!1,g=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function M(n){var t=u,l=s;return u=s=void 0,h=n,d=e.apply(l,t)}function y(e){return h=e,p=setTimeout(A,n),m?M(e):d}function v(e){var t=e-f;return void 0===f||t>=n||t<0||b&&e-h>=c}function A(){var e=r();if(v(e))return w(e);p=setTimeout(A,function(e){var t=n-(e-f);return b?o(t,c-(e-h)):t}(e))}function w(e){return p=void 0,g&&u?M(e):(u=s=void 0,d)}function _(){var e=r(),t=v(e);if(u=arguments,s=this,f=e,t){if(void 0===p)return y(f);if(b)return clearTimeout(p),p=setTimeout(A,n),M(f)}return void 0===p&&(p=setTimeout(A,n)),d}return n=i(n)||0,l(t)&&(m=!!t.leading,c=(b="maxWait"in t)?a(i(t.maxWait)||0,n):c,g="trailing"in t?!!t.trailing:g),_.cancel=function(){void 0!==p&&clearTimeout(p),h=0,u=f=s=p=void 0},_.flush=function(){return void 0===p?d:w(r())},_}},52906:(e,n,t)=>{var l=t(75845),r=t(82421),i=t(51275),a=t(72819),o=Object.prototype,u=o.hasOwnProperty,s=l((function(e,n){e=Object(e);var t=-1,l=n.length,s=l>2?n[2]:void 0;for(s&&i(n[0],n[1],s)&&(l=1);++t<l;)for(var c=n[t],d=a(c),p=-1,f=d.length;++p<f;){var h=d[p],m=e[h];(void 0===m||r(m,o[h])&&!u.call(e,h))&&(e[h]=c[h])}return e}));e.exports=s},82421:e=>{e.exports=function(e,n){return e===n||e!=e&&n!=n}},41469:(e,n,t)=>{var l=t(40879),r=/[\\^$.*+?()[\]{}|]/g,i=RegExp(r.source);e.exports=function(e){return(e=l(e))&&i.test(e)?e.replace(r,"\\$&"):e}},16914:(e,n,t)=>{var l=t(59567),r=t(13314);e.exports=function(e,n){return l(r(e,n),1)}},50949:(e,n,t)=>{var l=t(59567);e.exports=function(e){return null!=e&&e.length?l(e,1):[]}},43237:(e,n,t)=>{var l=t(52041);e.exports=function(e,n,t){var r=null==e?void 0:l(e,n);return void 0===r?t:r}},24532:(e,n,t)=>{var l=t(80693),r=t(14517);e.exports=function(e,n){return null!=e&&r(e,n,l)}},72827:e=>{e.exports=function(e){return e}},96555:(e,n,t)=>{var l=t(56382),r=t(1656),i=Object.prototype,a=i.hasOwnProperty,o=i.propertyIsEnumerable,u=l(function(){return arguments}())?l:function(e){return r(e)&&a.call(e,"callee")&&!o.call(e,"callee")};e.exports=u},89312:e=>{var n=Array.isArray;e.exports=n},19220:(e,n,t)=>{var l=t(18798),r=t(10006);e.exports=function(e){return null!=e&&r(e.length)&&!l(e)}},44702:(e,n,t)=>{e=t.nmd(e);var l=t(56629),r=t(68303),i=n&&!n.nodeType&&n,a=i&&e&&!e.nodeType&&e,o=a&&a.exports===i?l.Buffer:void 0,u=(o?o.isBuffer:void 0)||r;e.exports=u},18798:(e,n,t)=>{var l=t(29779),r=t(15908);e.exports=function(e){if(!r(e))return!1;var n=l(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},10006:e=>{e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},15908:e=>{e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},1656:e=>{e.exports=function(e){return null!=e&&"object"==typeof e}},99451:(e,n,t)=>{var l=t(29779),r=t(69732),i=t(1656),a=Function.prototype,o=Object.prototype,u=a.toString,s=o.hasOwnProperty,c=u.call(Object);e.exports=function(e){if(!i(e)||"[object Object]"!=l(e))return!1;var n=r(e);if(null===n)return!0;var t=s.call(n,"constructor")&&n.constructor;return"function"==typeof t&&t instanceof t&&u.call(t)==c}},18882:(e,n,t)=>{var l=t(29779),r=t(89312),i=t(1656);e.exports=function(e){return"string"==typeof e||!r(e)&&i(e)&&"[object String]"==l(e)}},34245:(e,n,t)=>{var l=t(29779),r=t(1656);e.exports=function(e){return"symbol"==typeof e||r(e)&&"[object Symbol]"==l(e)}},29014:(e,n,t)=>{var l=t(37127),r=t(18885),i=t(81828),a=i&&i.isTypedArray,o=a?r(a):l;e.exports=o},28327:(e,n,t)=>{var l=t(45379),r=t(56635),i=t(19220);e.exports=function(e){return i(e)?l(e):r(e)}},72819:(e,n,t)=>{var l=t(45379),r=t(98288),i=t(19220);e.exports=function(e){return i(e)?l(e,!0):r(e)}},97322:e=>{e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},13314:(e,n,t)=>{var l=t(13208),r=t(41189),i=t(840),a=t(89312);e.exports=function(e,n){return(a(e)?l:i)(e,r(n,3))}},87604:(e,n,t)=>{var l=t(24391),r=t(77087),i=t(41189);e.exports=function(e,n){var t={};return n=i(n,3),r(e,(function(e,r,i){l(t,r,n(e,r,i))})),t}},28082:(e,n,t)=>{var l=t(25968);function r(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var l=arguments,r=n?n.apply(this,l):l[0],i=t.cache;if(i.has(r))return i.get(r);var a=e.apply(this,l);return t.cache=i.set(r,a)||i,a};return t.cache=new(r.Cache||l),t}r.Cache=l,e.exports=r},17121:(e,n,t)=>{var l=t(56629);e.exports=function(){return l.Date.now()}},68525:(e,n,t)=>{var l=t(3392),r=t(39127)((function(e,n){return null==e?{}:l(e,n)}));e.exports=r},46331:(e,n,t)=>{var l=t(15316),r=t(59977),i=t(72315),a=t(25631);e.exports=function(e){return i(e)?l(a(e)):r(e)}},31354:e=>{e.exports=function(){return[]}},68303:e=>{e.exports=function(){return!1}},80417:(e,n,t)=>{var l=t(85198),r=t(10673),i=t(55231),a=4294967295,o=Math.min;e.exports=function(e,n){if((e=i(e))<1||e>9007199254740991)return[];var t=a,u=o(e,a);n=r(n),e-=a;for(var s=l(u,n);++t<e;)n(t);return s}},94826:(e,n,t)=>{var l=t(4188);e.exports=function(e){return e?Infinity===(e=l(e))||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}},55231:(e,n,t)=>{var l=t(94826);e.exports=function(e){var n=l(e),t=n%1;return n==n?t?n-t:n:0}},4188:(e,n,t)=>{var l=t(15923),r=t(15908),i=t(34245),a=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,u=/^0o[0-7]+$/i,s=parseInt;e.exports=function(e){if("number"==typeof e)return e;if(i(e))return NaN;if(r(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=r(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=l(e);var t=o.test(e);return t||u.test(e)?s(e.slice(2),t?2:8):a.test(e)?NaN:+e}},40879:(e,n,t)=>{var l=t(93340);e.exports=function(e){return null==e?"":l(e)}},68652:(e,n,t)=>{(e.exports=t(79903)).tz.load(t(91128))},79903:function(e,n,t){var l,r,i;!function(a,o){"use strict";e.exports?e.exports=o(t(60611)):(r=[t(60611)],void 0===(i="function"==typeof(l=o)?l.apply(n,r):l)||(e.exports=i))}(0,(function(e){"use strict";void 0===e.version&&e.default&&(e=e.default);var n,t={},l={},r={},i={},a={};e&&"string"==typeof e.version||O("Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/");var o=e.version.split("."),u=+o[0],s=+o[1];function c(e){return e>96?e-87:e>64?e-29:e-48}function d(e){var n=0,t=e.split("."),l=t[0],r=t[1]||"",i=1,a=0,o=1;for(45===e.charCodeAt(0)&&(n=1,o=-1);n<l.length;n++)a=60*a+c(l.charCodeAt(n));for(n=0;n<r.length;n++)i/=60,a+=c(r.charCodeAt(n))*i;return a*o}function p(e){for(var n=0;n<e.length;n++)e[n]=d(e[n])}function f(e,n){var t,l=[];for(t=0;t<n.length;t++)l[t]=e[n[t]];return l}function h(e){var n=e.split("|"),t=n[2].split(" "),l=n[3].split(""),r=n[4].split(" ");return p(t),p(l),p(r),function(e,n){for(var t=0;t<n;t++)e[t]=Math.round((e[t-1]||0)+6e4*e[t]);e[n-1]=1/0}(r,l.length),{name:n[0],abbrs:f(n[1].split(" "),l),offsets:f(t,l),untils:r,population:0|n[5]}}function m(e){e&&this._set(h(e))}function b(e,n){this.name=e,this.zones=n}function g(e){var n=e.toTimeString(),t=n.match(/\([a-z ]+\)/i);"GMT"===(t=t&&t[0]?(t=t[0].match(/[A-Z]/g))?t.join(""):void 0:(t=n.match(/[A-Z]{3,5}/g))?t[0]:void 0)&&(t=void 0),this.at=+e,this.abbr=t,this.offset=e.getTimezoneOffset()}function M(e){this.zone=e,this.offsetScore=0,this.abbrScore=0}function y(e,n){for(var t,l;l=6e4*((n.at-e.at)/12e4|0);)(t=new g(new Date(e.at+l))).offset===e.offset?e=t:n=t;return e}function v(e,n){return e.offsetScore!==n.offsetScore?e.offsetScore-n.offsetScore:e.abbrScore!==n.abbrScore?e.abbrScore-n.abbrScore:e.zone.population!==n.zone.population?n.zone.population-e.zone.population:n.zone.name.localeCompare(e.zone.name)}function A(e,n){var t,l;for(p(n),t=0;t<n.length;t++)l=n[t],a[l]=a[l]||{},a[l][e]=!0}function w(e){var n,t,l,r=e.length,o={},u=[];for(n=0;n<r;n++)for(t in l=a[e[n].offset]||{})l.hasOwnProperty(t)&&(o[t]=!0);for(n in o)o.hasOwnProperty(n)&&u.push(i[n]);return u}function _(e){return(e||"").toLowerCase().replace(/\//g,"_")}function C(e){var n,l,r,a;for("string"==typeof e&&(e=[e]),n=0;n<e.length;n++)a=_(l=(r=e[n].split("|"))[0]),t[a]=e[n],i[a]=l,A(a,r[2].split(" "))}function T(e,n){e=_(e);var r,a=t[e];return a instanceof m?a:"string"==typeof a?(a=new m(a),t[e]=a,a):l[e]&&n!==T&&(r=T(l[e],T))?((a=t[e]=new m)._set(r),a.name=i[e],a):null}function S(e){var n,t,r,a;for("string"==typeof e&&(e=[e]),n=0;n<e.length;n++)r=_((t=e[n].split("|"))[0]),a=_(t[1]),l[r]=a,i[r]=t[0],l[a]=r,i[a]=t[1]}function z(e){var n="X"===e._f||"x"===e._f;return!(!e._a||void 0!==e._tzm||n)}function O(e){"undefined"!=typeof console&&"function"==typeof console.error&&console.error(e)}function E(n){var t=Array.prototype.slice.call(arguments,0,-1),l=arguments[arguments.length-1],r=T(l),i=e.utc.apply(null,t);return r&&!e.isMoment(n)&&z(i)&&i.add(r.parse(i),"minutes"),i.tz(l),i}(u<2||2===u&&s<6)&&O("Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js "+e.version+". See momentjs.com"),m.prototype={_set:function(e){this.name=e.name,this.abbrs=e.abbrs,this.untils=e.untils,this.offsets=e.offsets,this.population=e.population},_index:function(e){var n,t=+e,l=this.untils;for(n=0;n<l.length;n++)if(t<l[n])return n},countries:function(){var e=this.name;return Object.keys(r).filter((function(n){return-1!==r[n].zones.indexOf(e)}))},parse:function(e){var n,t,l,r,i=+e,a=this.offsets,o=this.untils,u=o.length-1;for(r=0;r<u;r++)if(n=a[r],t=a[r+1],l=a[r?r-1:r],n<t&&E.moveAmbiguousForward?n=t:n>l&&E.moveInvalidForward&&(n=l),i<o[r]-6e4*n)return a[r];return a[u]},abbr:function(e){return this.abbrs[this._index(e)]},offset:function(e){return O("zone.offset has been deprecated in favor of zone.utcOffset"),this.offsets[this._index(e)]},utcOffset:function(e){return this.offsets[this._index(e)]}},M.prototype.scoreOffsetAt=function(e){this.offsetScore+=Math.abs(this.zone.utcOffset(e.at)-e.offset),this.zone.abbr(e.at).replace(/[^A-Z]/g,"")!==e.abbr&&this.abbrScore++},E.version="0.5.35",E.dataVersion="",E._zones=t,E._links=l,E._names=i,E._countries=r,E.add=C,E.link=S,E.load=function(e){C(e.zones),S(e.links),function(e){var n,t,l,i;if(e&&e.length)for(n=0;n<e.length;n++)t=(i=e[n].split("|"))[0].toUpperCase(),l=i[1].split(" "),r[t]=new b(t,l)}(e.countries),E.dataVersion=e.version},E.zone=T,E.zoneExists=function e(n){return e.didShowError||(e.didShowError=!0,O("moment.tz.zoneExists('"+n+"') has been deprecated in favor of !moment.tz.zone('"+n+"')")),!!T(n)},E.guess=function(e){return n&&!e||(n=function(){try{var e=Intl.DateTimeFormat().resolvedOptions().timeZone;if(e&&e.length>3){var n=i[_(e)];if(n)return n;O("Moment Timezone found "+e+" from the Intl api, but did not have that data loaded.")}}catch(e){}var t,l,r,a=function(){var e,n,t,l=(new Date).getFullYear()-2,r=new g(new Date(l,0,1)),i=[r];for(t=1;t<48;t++)(n=new g(new Date(l,t,1))).offset!==r.offset&&(e=y(r,n),i.push(e),i.push(new g(new Date(e.at+6e4)))),r=n;for(t=0;t<4;t++)i.push(new g(new Date(l+t,0,1))),i.push(new g(new Date(l+t,6,1)));return i}(),o=a.length,u=w(a),s=[];for(l=0;l<u.length;l++){for(t=new M(T(u[l]),o),r=0;r<o;r++)t.scoreOffsetAt(a[r]);s.push(t)}return s.sort(v),s.length>0?s[0].zone.name:void 0}()),n},E.names=function(){var e,n=[];for(e in i)i.hasOwnProperty(e)&&(t[e]||t[l[e]])&&i[e]&&n.push(i[e]);return n.sort()},E.Zone=m,E.unpack=h,E.unpackBase60=d,E.needsOffset=z,E.moveInvalidForward=!0,E.moveAmbiguousForward=!1,E.countries=function(){return Object.keys(r)},E.zonesForCountry=function(e,n){var t;if(t=(t=e).toUpperCase(),!(e=r[t]||null))return null;var l=e.zones.sort();return n?l.map((function(e){return{name:e,offset:T(e).utcOffset(new Date)}})):l};var L,x=e.fn;function k(e){return function(){return this._z?this._z.abbr(this):e.call(this)}}function N(e){return function(){return this._z=null,e.apply(this,arguments)}}e.tz=E,e.defaultZone=null,e.updateOffset=function(n,t){var l,r=e.defaultZone;if(void 0===n._z&&(r&&z(n)&&!n._isUTC&&(n._d=e.utc(n._a)._d,n.utc().add(r.parse(n),"minutes")),n._z=r),n._z)if(l=n._z.utcOffset(n),Math.abs(l)<16&&(l/=60),void 0!==n.utcOffset){var i=n._z;n.utcOffset(-l,t),n._z=i}else n.zone(l,t)},x.tz=function(n,t){if(n){if("string"!=typeof n)throw new Error("Time zone name must be a string, got "+n+" ["+typeof n+"]");return this._z=T(n),this._z?e.updateOffset(this,t):O("Moment Timezone has no data for "+n+". See http://momentjs.com/timezone/docs/#/data-loading/."),this}if(this._z)return this._z.name},x.zoneName=k(x.zoneName),x.zoneAbbr=k(x.zoneAbbr),x.utc=N(x.utc),x.local=N(x.local),x.utcOffset=(L=x.utcOffset,function(){return arguments.length>0&&(this._z=null),L.apply(this,arguments)}),e.tz.setDefault=function(n){return(u<2||2===u&&s<9)&&O("Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js "+e.version+"."),e.defaultZone=n?T(n):null,e};var B=e.momentProperties;return"[object Array]"===Object.prototype.toString.call(B)?(B.push("_z"),B.push("_a")):B&&(B._z=null),e}))},60611:function(e,n,t){(e=t.nmd(e)).exports=function(){"use strict";var n,l;function r(){return n.apply(null,arguments)}function i(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function a(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function o(e,n){return Object.prototype.hasOwnProperty.call(e,n)}function u(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var n;for(n in e)if(o(e,n))return!1;return!0}function s(e){return void 0===e}function c(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function d(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function p(e,n){var t,l=[],r=e.length;for(t=0;t<r;++t)l.push(n(e[t],t));return l}function f(e,n){for(var t in n)o(n,t)&&(e[t]=n[t]);return o(n,"toString")&&(e.toString=n.toString),o(n,"valueOf")&&(e.valueOf=n.valueOf),e}function h(e,n,t,l){return Sn(e,n,t,l,!0).utc()}function m(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidEra:null,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],era:null,meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function b(e){if(null==e._isValid){var n=m(e),t=l.call(n.parsedDateParts,(function(e){return null!=e})),r=!isNaN(e._d.getTime())&&n.overflow<0&&!n.empty&&!n.invalidEra&&!n.invalidMonth&&!n.invalidWeekday&&!n.weekdayMismatch&&!n.nullInput&&!n.invalidFormat&&!n.userInvalidated&&(!n.meridiem||n.meridiem&&t);if(e._strict&&(r=r&&0===n.charsLeftOver&&0===n.unusedTokens.length&&void 0===n.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return r;e._isValid=r}return e._isValid}function g(e){var n=h(NaN);return null!=e?f(m(n),e):m(n).userInvalidated=!0,n}l=Array.prototype.some?Array.prototype.some:function(e){var n,t=Object(this),l=t.length>>>0;for(n=0;n<l;n++)if(n in t&&e.call(this,t[n],n,t))return!0;return!1};var M=r.momentProperties=[],y=!1;function v(e,n){var t,l,r,i=M.length;if(s(n._isAMomentObject)||(e._isAMomentObject=n._isAMomentObject),s(n._i)||(e._i=n._i),s(n._f)||(e._f=n._f),s(n._l)||(e._l=n._l),s(n._strict)||(e._strict=n._strict),s(n._tzm)||(e._tzm=n._tzm),s(n._isUTC)||(e._isUTC=n._isUTC),s(n._offset)||(e._offset=n._offset),s(n._pf)||(e._pf=m(n)),s(n._locale)||(e._locale=n._locale),i>0)for(t=0;t<i;t++)s(r=n[l=M[t]])||(e[l]=r);return e}function A(e){v(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===y&&(y=!0,r.updateOffset(this),y=!1)}function w(e){return e instanceof A||null!=e&&null!=e._isAMomentObject}function _(e){!1===r.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function C(e,n){var t=!0;return f((function(){if(null!=r.deprecationHandler&&r.deprecationHandler(null,e),t){var l,i,a,u=[],s=arguments.length;for(i=0;i<s;i++){if(l="","object"==typeof arguments[i]){for(a in l+="\n["+i+"] ",arguments[0])o(arguments[0],a)&&(l+=a+": "+arguments[0][a]+", ");l=l.slice(0,-2)}else l=arguments[i];u.push(l)}_(e+"\nArguments: "+Array.prototype.slice.call(u).join("")+"\n"+(new Error).stack),t=!1}return n.apply(this,arguments)}),n)}var T,S={};function z(e,n){null!=r.deprecationHandler&&r.deprecationHandler(e,n),S[e]||(_(n),S[e]=!0)}function O(e){return"undefined"!=typeof Function&&e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function E(e,n){var t,l=f({},e);for(t in n)o(n,t)&&(a(e[t])&&a(n[t])?(l[t]={},f(l[t],e[t]),f(l[t],n[t])):null!=n[t]?l[t]=n[t]:delete l[t]);for(t in e)o(e,t)&&!o(n,t)&&a(e[t])&&(l[t]=f({},l[t]));return l}function L(e){null!=e&&this.set(e)}r.suppressDeprecationWarnings=!1,r.deprecationHandler=null,T=Object.keys?Object.keys:function(e){var n,t=[];for(n in e)o(e,n)&&t.push(n);return t};function x(e,n,t){var l=""+Math.abs(e),r=n-l.length;return(e>=0?t?"+":"":"-")+Math.pow(10,Math.max(0,r)).toString().substr(1)+l}var k=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,N=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,B={},q={};function P(e,n,t,l){var r=l;"string"==typeof l&&(r=function(){return this[l]()}),e&&(q[e]=r),n&&(q[n[0]]=function(){return x(r.apply(this,arguments),n[1],n[2])}),t&&(q[t]=function(){return this.localeData().ordinal(r.apply(this,arguments),e)})}function D(e,n){return e.isValid()?(n=R(n,e.localeData()),B[n]=B[n]||function(e){var n,t,l,r=e.match(k);for(n=0,t=r.length;n<t;n++)q[r[n]]?r[n]=q[r[n]]:r[n]=(l=r[n]).match(/\[[\s\S]/)?l.replace(/^\[|\]$/g,""):l.replace(/\\/g,"");return function(n){var l,i="";for(l=0;l<t;l++)i+=O(r[l])?r[l].call(n,e):r[l];return i}}(n),B[n](e)):e.localeData().invalidDate()}function R(e,n){var t=5;function l(e){return n.longDateFormat(e)||e}for(N.lastIndex=0;t>=0&&N.test(e);)e=e.replace(N,l),N.lastIndex=0,t-=1;return e}var W={};function I(e,n){var t=e.toLowerCase();W[t]=W[t+"s"]=W[n]=e}function F(e){return"string"==typeof e?W[e]||W[e.toLowerCase()]:void 0}function j(e){var n,t,l={};for(t in e)o(e,t)&&(n=F(t))&&(l[n]=e[t]);return l}var X={};function G(e,n){X[e]=n}function H(e){return e%4==0&&e%100!=0||e%400==0}function U(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function $(e){var n=+e,t=0;return 0!==n&&isFinite(n)&&(t=U(n)),t}function V(e,n){return function(t){return null!=t?(K(this,e,t),r.updateOffset(this,n),this):Z(this,e)}}function Z(e,n){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+n]():NaN}function K(e,n,t){e.isValid()&&!isNaN(t)&&("FullYear"===n&&H(e.year())&&1===e.month()&&29===e.date()?(t=$(t),e._d["set"+(e._isUTC?"UTC":"")+n](t,e.month(),we(t,e.month()))):e._d["set"+(e._isUTC?"UTC":"")+n](t))}var Y,J=/\d/,Q=/\d\d/,ee=/\d{3}/,ne=/\d{4}/,te=/[+-]?\d{6}/,le=/\d\d?/,re=/\d\d\d\d?/,ie=/\d\d\d\d\d\d?/,ae=/\d{1,3}/,oe=/\d{1,4}/,ue=/[+-]?\d{1,6}/,se=/\d+/,ce=/[+-]?\d+/,de=/Z|[+-]\d\d:?\d\d/gi,pe=/Z|[+-]\d\d(?::?\d\d)?/gi,fe=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;function he(e,n,t){Y[e]=O(n)?n:function(e,l){return e&&t?t:n}}function me(e,n){return o(Y,e)?Y[e](n._strict,n._locale):new RegExp(be(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,n,t,l,r){return n||t||l||r}))))}function be(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}Y={};var ge={};function Me(e,n){var t,l,r=n;for("string"==typeof e&&(e=[e]),c(n)&&(r=function(e,t){t[n]=$(e)}),l=e.length,t=0;t<l;t++)ge[e[t]]=r}function ye(e,n){Me(e,(function(e,t,l,r){l._w=l._w||{},n(e,l._w,l,r)}))}function ve(e,n,t){null!=n&&o(ge,e)&&ge[e](n,t._a,t,e)}var Ae;function we(e,n){if(isNaN(e)||isNaN(n))return NaN;var t,l=(n%(t=12)+t)%t;return e+=(n-l)/12,1===l?H(e)?29:28:31-l%7%2}Ae=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var n;for(n=0;n<this.length;++n)if(this[n]===e)return n;return-1},P("M",["MM",2],"Mo",(function(){return this.month()+1})),P("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),P("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),I("month","M"),G("month",8),he("M",le),he("MM",le,Q),he("MMM",(function(e,n){return n.monthsShortRegex(e)})),he("MMMM",(function(e,n){return n.monthsRegex(e)})),Me(["M","MM"],(function(e,n){n[1]=$(e)-1})),Me(["MMM","MMMM"],(function(e,n,t,l){var r=t._locale.monthsParse(e,l,t._strict);null!=r?n[1]=r:m(t).invalidMonth=e}));var _e="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),Ce="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),Te=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,Se=fe,ze=fe;function Oe(e,n,t){var l,r,i,a=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],l=0;l<12;++l)i=h([2e3,l]),this._shortMonthsParse[l]=this.monthsShort(i,"").toLocaleLowerCase(),this._longMonthsParse[l]=this.months(i,"").toLocaleLowerCase();return t?"MMM"===n?-1!==(r=Ae.call(this._shortMonthsParse,a))?r:null:-1!==(r=Ae.call(this._longMonthsParse,a))?r:null:"MMM"===n?-1!==(r=Ae.call(this._shortMonthsParse,a))||-1!==(r=Ae.call(this._longMonthsParse,a))?r:null:-1!==(r=Ae.call(this._longMonthsParse,a))||-1!==(r=Ae.call(this._shortMonthsParse,a))?r:null}function Ee(e,n){var t;if(!e.isValid())return e;if("string"==typeof n)if(/^\d+$/.test(n))n=$(n);else if(!c(n=e.localeData().monthsParse(n)))return e;return t=Math.min(e.date(),we(e.year(),n)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](n,t),e}function Le(e){return null!=e?(Ee(this,e),r.updateOffset(this,!0),this):Z(this,"Month")}function xe(){function e(e,n){return n.length-e.length}var n,t,l=[],r=[],i=[];for(n=0;n<12;n++)t=h([2e3,n]),l.push(this.monthsShort(t,"")),r.push(this.months(t,"")),i.push(this.months(t,"")),i.push(this.monthsShort(t,""));for(l.sort(e),r.sort(e),i.sort(e),n=0;n<12;n++)l[n]=be(l[n]),r[n]=be(r[n]);for(n=0;n<24;n++)i[n]=be(i[n]);this._monthsRegex=new RegExp("^("+i.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+l.join("|")+")","i")}function ke(e){return H(e)?366:365}P("Y",0,0,(function(){var e=this.year();return e<=9999?x(e,4):"+"+e})),P(0,["YY",2],0,(function(){return this.year()%100})),P(0,["YYYY",4],0,"year"),P(0,["YYYYY",5],0,"year"),P(0,["YYYYYY",6,!0],0,"year"),I("year","y"),G("year",1),he("Y",ce),he("YY",le,Q),he("YYYY",oe,ne),he("YYYYY",ue,te),he("YYYYYY",ue,te),Me(["YYYYY","YYYYYY"],0),Me("YYYY",(function(e,n){n[0]=2===e.length?r.parseTwoDigitYear(e):$(e)})),Me("YY",(function(e,n){n[0]=r.parseTwoDigitYear(e)})),Me("Y",(function(e,n){n[0]=parseInt(e,10)})),r.parseTwoDigitYear=function(e){return $(e)+($(e)>68?1900:2e3)};var Ne=V("FullYear",!0);function Be(e,n,t,l,r,i,a){var o;return e<100&&e>=0?(o=new Date(e+400,n,t,l,r,i,a),isFinite(o.getFullYear())&&o.setFullYear(e)):o=new Date(e,n,t,l,r,i,a),o}function qe(e){var n,t;return e<100&&e>=0?((t=Array.prototype.slice.call(arguments))[0]=e+400,n=new Date(Date.UTC.apply(null,t)),isFinite(n.getUTCFullYear())&&n.setUTCFullYear(e)):n=new Date(Date.UTC.apply(null,arguments)),n}function Pe(e,n,t){var l=7+n-t;return-(7+qe(e,0,l).getUTCDay()-n)%7+l-1}function De(e,n,t,l,r){var i,a,o=1+7*(n-1)+(7+t-l)%7+Pe(e,l,r);return o<=0?a=ke(i=e-1)+o:o>ke(e)?(i=e+1,a=o-ke(e)):(i=e,a=o),{year:i,dayOfYear:a}}function Re(e,n,t){var l,r,i=Pe(e.year(),n,t),a=Math.floor((e.dayOfYear()-i-1)/7)+1;return a<1?l=a+We(r=e.year()-1,n,t):a>We(e.year(),n,t)?(l=a-We(e.year(),n,t),r=e.year()+1):(r=e.year(),l=a),{week:l,year:r}}function We(e,n,t){var l=Pe(e,n,t),r=Pe(e+1,n,t);return(ke(e)-l+r)/7}P("w",["ww",2],"wo","week"),P("W",["WW",2],"Wo","isoWeek"),I("week","w"),I("isoWeek","W"),G("week",5),G("isoWeek",5),he("w",le),he("ww",le,Q),he("W",le),he("WW",le,Q),ye(["w","ww","W","WW"],(function(e,n,t,l){n[l.substr(0,1)]=$(e)}));function Ie(e,n){return e.slice(n,7).concat(e.slice(0,n))}P("d",0,"do","day"),P("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),P("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),P("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),P("e",0,0,"weekday"),P("E",0,0,"isoWeekday"),I("day","d"),I("weekday","e"),I("isoWeekday","E"),G("day",11),G("weekday",11),G("isoWeekday",11),he("d",le),he("e",le),he("E",le),he("dd",(function(e,n){return n.weekdaysMinRegex(e)})),he("ddd",(function(e,n){return n.weekdaysShortRegex(e)})),he("dddd",(function(e,n){return n.weekdaysRegex(e)})),ye(["dd","ddd","dddd"],(function(e,n,t,l){var r=t._locale.weekdaysParse(e,l,t._strict);null!=r?n.d=r:m(t).invalidWeekday=e})),ye(["d","e","E"],(function(e,n,t,l){n[l]=$(e)}));var Fe="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),je="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Xe="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),Ge=fe,He=fe,Ue=fe;function $e(e,n,t){var l,r,i,a=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],l=0;l<7;++l)i=h([2e3,1]).day(l),this._minWeekdaysParse[l]=this.weekdaysMin(i,"").toLocaleLowerCase(),this._shortWeekdaysParse[l]=this.weekdaysShort(i,"").toLocaleLowerCase(),this._weekdaysParse[l]=this.weekdays(i,"").toLocaleLowerCase();return t?"dddd"===n?-1!==(r=Ae.call(this._weekdaysParse,a))?r:null:"ddd"===n?-1!==(r=Ae.call(this._shortWeekdaysParse,a))?r:null:-1!==(r=Ae.call(this._minWeekdaysParse,a))?r:null:"dddd"===n?-1!==(r=Ae.call(this._weekdaysParse,a))||-1!==(r=Ae.call(this._shortWeekdaysParse,a))||-1!==(r=Ae.call(this._minWeekdaysParse,a))?r:null:"ddd"===n?-1!==(r=Ae.call(this._shortWeekdaysParse,a))||-1!==(r=Ae.call(this._weekdaysParse,a))||-1!==(r=Ae.call(this._minWeekdaysParse,a))?r:null:-1!==(r=Ae.call(this._minWeekdaysParse,a))||-1!==(r=Ae.call(this._weekdaysParse,a))||-1!==(r=Ae.call(this._shortWeekdaysParse,a))?r:null}function Ve(){function e(e,n){return n.length-e.length}var n,t,l,r,i,a=[],o=[],u=[],s=[];for(n=0;n<7;n++)t=h([2e3,1]).day(n),l=be(this.weekdaysMin(t,"")),r=be(this.weekdaysShort(t,"")),i=be(this.weekdays(t,"")),a.push(l),o.push(r),u.push(i),s.push(l),s.push(r),s.push(i);a.sort(e),o.sort(e),u.sort(e),s.sort(e),this._weekdaysRegex=new RegExp("^("+s.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+a.join("|")+")","i")}function Ze(){return this.hours()%12||12}function Ke(e,n){P(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),n)}))}function Ye(e,n){return n._meridiemParse}P("H",["HH",2],0,"hour"),P("h",["hh",2],0,Ze),P("k",["kk",2],0,(function(){return this.hours()||24})),P("hmm",0,0,(function(){return""+Ze.apply(this)+x(this.minutes(),2)})),P("hmmss",0,0,(function(){return""+Ze.apply(this)+x(this.minutes(),2)+x(this.seconds(),2)})),P("Hmm",0,0,(function(){return""+this.hours()+x(this.minutes(),2)})),P("Hmmss",0,0,(function(){return""+this.hours()+x(this.minutes(),2)+x(this.seconds(),2)})),Ke("a",!0),Ke("A",!1),I("hour","h"),G("hour",13),he("a",Ye),he("A",Ye),he("H",le),he("h",le),he("k",le),he("HH",le,Q),he("hh",le,Q),he("kk",le,Q),he("hmm",re),he("hmmss",ie),he("Hmm",re),he("Hmmss",ie),Me(["H","HH"],3),Me(["k","kk"],(function(e,n,t){var l=$(e);n[3]=24===l?0:l})),Me(["a","A"],(function(e,n,t){t._isPm=t._locale.isPM(e),t._meridiem=e})),Me(["h","hh"],(function(e,n,t){n[3]=$(e),m(t).bigHour=!0})),Me("hmm",(function(e,n,t){var l=e.length-2;n[3]=$(e.substr(0,l)),n[4]=$(e.substr(l)),m(t).bigHour=!0})),Me("hmmss",(function(e,n,t){var l=e.length-4,r=e.length-2;n[3]=$(e.substr(0,l)),n[4]=$(e.substr(l,2)),n[5]=$(e.substr(r)),m(t).bigHour=!0})),Me("Hmm",(function(e,n,t){var l=e.length-2;n[3]=$(e.substr(0,l)),n[4]=$(e.substr(l))})),Me("Hmmss",(function(e,n,t){var l=e.length-4,r=e.length-2;n[3]=$(e.substr(0,l)),n[4]=$(e.substr(l,2)),n[5]=$(e.substr(r))}));var Je=V("Hours",!0);var Qe,en={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",w:"a week",ww:"%d weeks",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:_e,monthsShort:Ce,week:{dow:0,doy:6},weekdays:Fe,weekdaysMin:Xe,weekdaysShort:je,meridiemParse:/[ap]\.?m?\.?/i},nn={},tn={};function ln(e,n){var t,l=Math.min(e.length,n.length);for(t=0;t<l;t+=1)if(e[t]!==n[t])return t;return l}function rn(e){return e?e.toLowerCase().replace("_","-"):e}function an(n){var l=null;if(void 0===nn[n]&&e&&e.exports&&function(e){return null!=e.match("^[^/\\\\]*$")}(n))try{l=Qe._abbr,t(49674)("./"+n),on(l)}catch(e){nn[n]=null}return nn[n]}function on(e,n){var t;return e&&((t=s(n)?sn(e):un(e,n))?Qe=t:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Qe._abbr}function un(e,n){if(null!==n){var t,l=en;if(n.abbr=e,null!=nn[e])z("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),l=nn[e]._config;else if(null!=n.parentLocale)if(null!=nn[n.parentLocale])l=nn[n.parentLocale]._config;else{if(null==(t=an(n.parentLocale)))return tn[n.parentLocale]||(tn[n.parentLocale]=[]),tn[n.parentLocale].push({name:e,config:n}),null;l=t._config}return nn[e]=new L(E(l,n)),tn[e]&&tn[e].forEach((function(e){un(e.name,e.config)})),on(e),nn[e]}return delete nn[e],null}function sn(e){var n;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Qe;if(!i(e)){if(n=an(e))return n;e=[e]}return function(e){for(var n,t,l,r,i=0;i<e.length;){for(n=(r=rn(e[i]).split("-")).length,t=(t=rn(e[i+1]))?t.split("-"):null;n>0;){if(l=an(r.slice(0,n).join("-")))return l;if(t&&t.length>=n&&ln(r,t)>=n-1)break;n--}i++}return Qe}(e)}function cn(e){var n,t=e._a;return t&&-2===m(e).overflow&&(n=t[1]<0||t[1]>11?1:t[2]<1||t[2]>we(t[0],t[1])?2:t[3]<0||t[3]>24||24===t[3]&&(0!==t[4]||0!==t[5]||0!==t[6])?3:t[4]<0||t[4]>59?4:t[5]<0||t[5]>59?5:t[6]<0||t[6]>999?6:-1,m(e)._overflowDayOfYear&&(n<0||n>2)&&(n=2),m(e)._overflowWeeks&&-1===n&&(n=7),m(e)._overflowWeekday&&-1===n&&(n=8),m(e).overflow=n),e}var dn=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,pn=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,fn=/Z|[+-]\d\d(?::?\d\d)?/,hn=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/],["YYYYMM",/\d{6}/,!1],["YYYY",/\d{4}/,!1]],mn=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],bn=/^\/?Date\((-?\d+)/i,gn=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,Mn={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function yn(e){var n,t,l,r,i,a,o=e._i,u=dn.exec(o)||pn.exec(o),s=hn.length,c=mn.length;if(u){for(m(e).iso=!0,n=0,t=s;n<t;n++)if(hn[n][1].exec(u[1])){r=hn[n][0],l=!1!==hn[n][2];break}if(null==r)return void(e._isValid=!1);if(u[3]){for(n=0,t=c;n<t;n++)if(mn[n][1].exec(u[3])){i=(u[2]||" ")+mn[n][0];break}if(null==i)return void(e._isValid=!1)}if(!l&&null!=i)return void(e._isValid=!1);if(u[4]){if(!fn.exec(u[4]))return void(e._isValid=!1);a="Z"}e._f=r+(i||"")+(a||""),Cn(e)}else e._isValid=!1}function vn(e){var n=parseInt(e,10);return n<=49?2e3+n:n<=999?1900+n:n}function An(e){var n,t,l,r,i,a,o,u,s=gn.exec(e._i.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(s){if(t=s[4],l=s[3],r=s[2],i=s[5],a=s[6],o=s[7],u=[vn(t),Ce.indexOf(l),parseInt(r,10),parseInt(i,10),parseInt(a,10)],o&&u.push(parseInt(o,10)),n=u,!function(e,n,t){return!e||je.indexOf(e)===new Date(n[0],n[1],n[2]).getDay()||(m(t).weekdayMismatch=!0,t._isValid=!1,!1)}(s[1],n,e))return;e._a=n,e._tzm=function(e,n,t){if(e)return Mn[e];if(n)return 0;var l=parseInt(t,10),r=l%100;return(l-r)/100*60+r}(s[8],s[9],s[10]),e._d=qe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),m(e).rfc2822=!0}else e._isValid=!1}function wn(e,n,t){return null!=e?e:null!=n?n:t}function _n(e){var n,t,l,i,a,o=[];if(!e._d){for(l=function(e){var n=new Date(r.now());return e._useUTC?[n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate()]:[n.getFullYear(),n.getMonth(),n.getDate()]}(e),e._w&&null==e._a[2]&&null==e._a[1]&&function(e){var n,t,l,r,i,a,o,u,s;null!=(n=e._w).GG||null!=n.W||null!=n.E?(i=1,a=4,t=wn(n.GG,e._a[0],Re(zn(),1,4).year),l=wn(n.W,1),((r=wn(n.E,1))<1||r>7)&&(u=!0)):(i=e._locale._week.dow,a=e._locale._week.doy,s=Re(zn(),i,a),t=wn(n.gg,e._a[0],s.year),l=wn(n.w,s.week),null!=n.d?((r=n.d)<0||r>6)&&(u=!0):null!=n.e?(r=n.e+i,(n.e<0||n.e>6)&&(u=!0)):r=i),l<1||l>We(t,i,a)?m(e)._overflowWeeks=!0:null!=u?m(e)._overflowWeekday=!0:(o=De(t,l,r,i,a),e._a[0]=o.year,e._dayOfYear=o.dayOfYear)}(e),null!=e._dayOfYear&&(a=wn(e._a[0],l[0]),(e._dayOfYear>ke(a)||0===e._dayOfYear)&&(m(e)._overflowDayOfYear=!0),t=qe(a,0,e._dayOfYear),e._a[1]=t.getUTCMonth(),e._a[2]=t.getUTCDate()),n=0;n<3&&null==e._a[n];++n)e._a[n]=o[n]=l[n];for(;n<7;n++)e._a[n]=o[n]=null==e._a[n]?2===n?1:0:e._a[n];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?qe:Be).apply(null,o),i=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&void 0!==e._w.d&&e._w.d!==i&&(m(e).weekdayMismatch=!0)}}function Cn(e){if(e._f!==r.ISO_8601)if(e._f!==r.RFC_2822){e._a=[],m(e).empty=!0;var n,t,l,i,a,o,u,s=""+e._i,c=s.length,d=0;for(u=(l=R(e._f,e._locale).match(k)||[]).length,n=0;n<u;n++)i=l[n],(t=(s.match(me(i,e))||[])[0])&&((a=s.substr(0,s.indexOf(t))).length>0&&m(e).unusedInput.push(a),s=s.slice(s.indexOf(t)+t.length),d+=t.length),q[i]?(t?m(e).empty=!1:m(e).unusedTokens.push(i),ve(i,t,e)):e._strict&&!t&&m(e).unusedTokens.push(i);m(e).charsLeftOver=c-d,s.length>0&&m(e).unusedInput.push(s),e._a[3]<=12&&!0===m(e).bigHour&&e._a[3]>0&&(m(e).bigHour=void 0),m(e).parsedDateParts=e._a.slice(0),m(e).meridiem=e._meridiem,e._a[3]=function(e,n,t){var l;return null==t?n:null!=e.meridiemHour?e.meridiemHour(n,t):null!=e.isPM?((l=e.isPM(t))&&n<12&&(n+=12),l||12!==n||(n=0),n):n}(e._locale,e._a[3],e._meridiem),null!==(o=m(e).era)&&(e._a[0]=e._locale.erasConvertYear(o,e._a[0])),_n(e),cn(e)}else An(e);else yn(e)}function Tn(e){var n=e._i,t=e._f;return e._locale=e._locale||sn(e._l),null===n||void 0===t&&""===n?g({nullInput:!0}):("string"==typeof n&&(e._i=n=e._locale.preparse(n)),w(n)?new A(cn(n)):(d(n)?e._d=n:i(t)?function(e){var n,t,l,r,i,a,o=!1,u=e._f.length;if(0===u)return m(e).invalidFormat=!0,void(e._d=new Date(NaN));for(r=0;r<u;r++)i=0,a=!1,n=v({},e),null!=e._useUTC&&(n._useUTC=e._useUTC),n._f=e._f[r],Cn(n),b(n)&&(a=!0),i+=m(n).charsLeftOver,i+=10*m(n).unusedTokens.length,m(n).score=i,o?i<l&&(l=i,t=n):(null==l||i<l||a)&&(l=i,t=n,a&&(o=!0));f(e,t||n)}(e):t?Cn(e):function(e){var n=e._i;s(n)?e._d=new Date(r.now()):d(n)?e._d=new Date(n.valueOf()):"string"==typeof n?function(e){var n=bn.exec(e._i);null===n?(yn(e),!1===e._isValid&&(delete e._isValid,An(e),!1===e._isValid&&(delete e._isValid,e._strict?e._isValid=!1:r.createFromInputFallback(e)))):e._d=new Date(+n[1])}(e):i(n)?(e._a=p(n.slice(0),(function(e){return parseInt(e,10)})),_n(e)):a(n)?function(e){if(!e._d){var n=j(e._i),t=void 0===n.day?n.date:n.day;e._a=p([n.year,n.month,t,n.hour,n.minute,n.second,n.millisecond],(function(e){return e&&parseInt(e,10)})),_n(e)}}(e):c(n)?e._d=new Date(n):r.createFromInputFallback(e)}(e),b(e)||(e._d=null),e))}function Sn(e,n,t,l,r){var o,s={};return!0!==n&&!1!==n||(l=n,n=void 0),!0!==t&&!1!==t||(l=t,t=void 0),(a(e)&&u(e)||i(e)&&0===e.length)&&(e=void 0),s._isAMomentObject=!0,s._useUTC=s._isUTC=r,s._l=t,s._i=e,s._f=n,s._strict=l,(o=new A(cn(Tn(s))))._nextDay&&(o.add(1,"d"),o._nextDay=void 0),o}function zn(e,n,t,l){return Sn(e,n,t,l,!1)}r.createFromInputFallback=C("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),r.ISO_8601=function(){},r.RFC_2822=function(){};var On=C("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=zn.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:g()})),En=C("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=zn.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:g()}));function Ln(e,n){var t,l;if(1===n.length&&i(n[0])&&(n=n[0]),!n.length)return zn();for(t=n[0],l=1;l<n.length;++l)n[l].isValid()&&!n[l][e](t)||(t=n[l]);return t}var xn=["year","quarter","month","week","day","hour","minute","second","millisecond"];function kn(e){var n=j(e),t=n.year||0,l=n.quarter||0,r=n.month||0,i=n.week||n.isoWeek||0,a=n.day||0,u=n.hour||0,s=n.minute||0,c=n.second||0,d=n.millisecond||0;this._isValid=function(e){var n,t,l=!1,r=xn.length;for(n in e)if(o(e,n)&&(-1===Ae.call(xn,n)||null!=e[n]&&isNaN(e[n])))return!1;for(t=0;t<r;++t)if(e[xn[t]]){if(l)return!1;parseFloat(e[xn[t]])!==$(e[xn[t]])&&(l=!0)}return!0}(n),this._milliseconds=+d+1e3*c+6e4*s+1e3*u*60*60,this._days=+a+7*i,this._months=+r+3*l+12*t,this._data={},this._locale=sn(),this._bubble()}function Nn(e){return e instanceof kn}function Bn(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function qn(e,n){P(e,0,0,(function(){var e=this.utcOffset(),t="+";return e<0&&(e=-e,t="-"),t+x(~~(e/60),2)+n+x(~~e%60,2)}))}qn("Z",":"),qn("ZZ",""),he("Z",pe),he("ZZ",pe),Me(["Z","ZZ"],(function(e,n,t){t._useUTC=!0,t._tzm=Dn(pe,e)}));var Pn=/([\+\-]|\d\d)/gi;function Dn(e,n){var t,l,r=(n||"").match(e);return null===r?null:0===(l=60*(t=((r[r.length-1]||[])+"").match(Pn)||["-",0,0])[1]+$(t[2]))?0:"+"===t[0]?l:-l}function Rn(e,n){var t,l;return n._isUTC?(t=n.clone(),l=(w(e)||d(e)?e.valueOf():zn(e).valueOf())-t.valueOf(),t._d.setTime(t._d.valueOf()+l),r.updateOffset(t,!1),t):zn(e).local()}function Wn(e){return-Math.round(e._d.getTimezoneOffset())}function In(){return!!this.isValid()&&this._isUTC&&0===this._offset}r.updateOffset=function(){};var Fn=/^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,jn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function Xn(e,n){var t,l,r,i,a,u,s=e,d=null;return Nn(e)?s={ms:e._milliseconds,d:e._days,M:e._months}:c(e)||!isNaN(+e)?(s={},n?s[n]=+e:s.milliseconds=+e):(d=Fn.exec(e))?(t="-"===d[1]?-1:1,s={y:0,d:$(d[2])*t,h:$(d[3])*t,m:$(d[4])*t,s:$(d[5])*t,ms:$(Bn(1e3*d[6]))*t}):(d=jn.exec(e))?(t="-"===d[1]?-1:1,s={y:Gn(d[2],t),M:Gn(d[3],t),w:Gn(d[4],t),d:Gn(d[5],t),h:Gn(d[6],t),m:Gn(d[7],t),s:Gn(d[8],t)}):null==s?s={}:"object"==typeof s&&("from"in s||"to"in s)&&(i=zn(s.from),a=zn(s.to),r=i.isValid()&&a.isValid()?(a=Rn(a,i),i.isBefore(a)?u=Hn(i,a):((u=Hn(a,i)).milliseconds=-u.milliseconds,u.months=-u.months),u):{milliseconds:0,months:0},(s={}).ms=r.milliseconds,s.M=r.months),l=new kn(s),Nn(e)&&o(e,"_locale")&&(l._locale=e._locale),Nn(e)&&o(e,"_isValid")&&(l._isValid=e._isValid),l}function Gn(e,n){var t=e&&parseFloat(e.replace(",","."));return(isNaN(t)?0:t)*n}function Hn(e,n){var t={};return t.months=n.month()-e.month()+12*(n.year()-e.year()),e.clone().add(t.months,"M").isAfter(n)&&--t.months,t.milliseconds=+n-+e.clone().add(t.months,"M"),t}function Un(e,n){return function(t,l){var r;return null===l||isNaN(+l)||(z(n,"moment()."+n+"(period, number) is deprecated. Please use moment()."+n+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=t,t=l,l=r),$n(this,Xn(t,l),e),this}}function $n(e,n,t,l){var i=n._milliseconds,a=Bn(n._days),o=Bn(n._months);e.isValid()&&(l=null==l||l,o&&Ee(e,Z(e,"Month")+o*t),a&&K(e,"Date",Z(e,"Date")+a*t),i&&e._d.setTime(e._d.valueOf()+i*t),l&&r.updateOffset(e,a||o))}Xn.fn=kn.prototype,Xn.invalid=function(){return Xn(NaN)};var Vn=Un(1,"add"),Zn=Un(-1,"subtract");function Kn(e){return"string"==typeof e||e instanceof String}function Yn(e){return w(e)||d(e)||Kn(e)||c(e)||function(e){var n=i(e),t=!1;return n&&(t=0===e.filter((function(n){return!c(n)&&Kn(e)})).length),n&&t}(e)||function(e){var n,t,l=a(e)&&!u(e),r=!1,i=["years","year","y","months","month","M","days","day","d","dates","date","D","hours","hour","h","minutes","minute","m","seconds","second","s","milliseconds","millisecond","ms"],s=i.length;for(n=0;n<s;n+=1)t=i[n],r=r||o(e,t);return l&&r}(e)||null==e}function Jn(e){var n,t=a(e)&&!u(e),l=!1,r=["sameDay","nextDay","lastDay","nextWeek","lastWeek","sameElse"];for(n=0;n<r.length;n+=1)l=l||o(e,r[n]);return t&&l}function Qn(e,n){if(e.date()<n.date())return-Qn(n,e);var t=12*(n.year()-e.year())+(n.month()-e.month()),l=e.clone().add(t,"months");return-(t+(n-l<0?(n-l)/(l-e.clone().add(t-1,"months")):(n-l)/(e.clone().add(t+1,"months")-l)))||0}function et(e){var n;return void 0===e?this._locale._abbr:(null!=(n=sn(e))&&(this._locale=n),this)}r.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",r.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var nt=C("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));function tt(){return this._locale}var lt=1e3,rt=6e4,it=36e5,at=126227808e5;function ot(e,n){return(e%n+n)%n}function ut(e,n,t){return e<100&&e>=0?new Date(e+400,n,t)-at:new Date(e,n,t).valueOf()}function st(e,n,t){return e<100&&e>=0?Date.UTC(e+400,n,t)-at:Date.UTC(e,n,t)}function ct(e,n){return n.erasAbbrRegex(e)}function dt(){var e,n,t=[],l=[],r=[],i=[],a=this.eras();for(e=0,n=a.length;e<n;++e)l.push(be(a[e].name)),t.push(be(a[e].abbr)),r.push(be(a[e].narrow)),i.push(be(a[e].name)),i.push(be(a[e].abbr)),i.push(be(a[e].narrow));this._erasRegex=new RegExp("^("+i.join("|")+")","i"),this._erasNameRegex=new RegExp("^("+l.join("|")+")","i"),this._erasAbbrRegex=new RegExp("^("+t.join("|")+")","i"),this._erasNarrowRegex=new RegExp("^("+r.join("|")+")","i")}function pt(e,n){P(0,[e,e.length],0,n)}function ft(e,n,t,l,r){var i;return null==e?Re(this,l,r).year:(n>(i=We(e,l,r))&&(n=i),ht.call(this,e,n,t,l,r))}function ht(e,n,t,l,r){var i=De(e,n,t,l,r),a=qe(i.year,0,i.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}P("N",0,0,"eraAbbr"),P("NN",0,0,"eraAbbr"),P("NNN",0,0,"eraAbbr"),P("NNNN",0,0,"eraName"),P("NNNNN",0,0,"eraNarrow"),P("y",["y",1],"yo","eraYear"),P("y",["yy",2],0,"eraYear"),P("y",["yyy",3],0,"eraYear"),P("y",["yyyy",4],0,"eraYear"),he("N",ct),he("NN",ct),he("NNN",ct),he("NNNN",(function(e,n){return n.erasNameRegex(e)})),he("NNNNN",(function(e,n){return n.erasNarrowRegex(e)})),Me(["N","NN","NNN","NNNN","NNNNN"],(function(e,n,t,l){var r=t._locale.erasParse(e,l,t._strict);r?m(t).era=r:m(t).invalidEra=e})),he("y",se),he("yy",se),he("yyy",se),he("yyyy",se),he("yo",(function(e,n){return n._eraYearOrdinalRegex||se})),Me(["y","yy","yyy","yyyy"],0),Me(["yo"],(function(e,n,t,l){var r;t._locale._eraYearOrdinalRegex&&(r=e.match(t._locale._eraYearOrdinalRegex)),t._locale.eraYearOrdinalParse?n[0]=t._locale.eraYearOrdinalParse(e,r):n[0]=parseInt(e,10)})),P(0,["gg",2],0,(function(){return this.weekYear()%100})),P(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),pt("gggg","weekYear"),pt("ggggg","weekYear"),pt("GGGG","isoWeekYear"),pt("GGGGG","isoWeekYear"),I("weekYear","gg"),I("isoWeekYear","GG"),G("weekYear",1),G("isoWeekYear",1),he("G",ce),he("g",ce),he("GG",le,Q),he("gg",le,Q),he("GGGG",oe,ne),he("gggg",oe,ne),he("GGGGG",ue,te),he("ggggg",ue,te),ye(["gggg","ggggg","GGGG","GGGGG"],(function(e,n,t,l){n[l.substr(0,2)]=$(e)})),ye(["gg","GG"],(function(e,n,t,l){n[l]=r.parseTwoDigitYear(e)})),P("Q",0,"Qo","quarter"),I("quarter","Q"),G("quarter",7),he("Q",J),Me("Q",(function(e,n){n[1]=3*($(e)-1)})),P("D",["DD",2],"Do","date"),I("date","D"),G("date",9),he("D",le),he("DD",le,Q),he("Do",(function(e,n){return e?n._dayOfMonthOrdinalParse||n._ordinalParse:n._dayOfMonthOrdinalParseLenient})),Me(["D","DD"],2),Me("Do",(function(e,n){n[2]=$(e.match(le)[0])}));var mt=V("Date",!0);P("DDD",["DDDD",3],"DDDo","dayOfYear"),I("dayOfYear","DDD"),G("dayOfYear",4),he("DDD",ae),he("DDDD",ee),Me(["DDD","DDDD"],(function(e,n,t){t._dayOfYear=$(e)})),P("m",["mm",2],0,"minute"),I("minute","m"),G("minute",14),he("m",le),he("mm",le,Q),Me(["m","mm"],4);var bt=V("Minutes",!1);P("s",["ss",2],0,"second"),I("second","s"),G("second",15),he("s",le),he("ss",le,Q),Me(["s","ss"],5);var gt,Mt,yt=V("Seconds",!1);for(P("S",0,0,(function(){return~~(this.millisecond()/100)})),P(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),P(0,["SSS",3],0,"millisecond"),P(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),P(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),P(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),P(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),P(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),P(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),I("millisecond","ms"),G("millisecond",16),he("S",ae,J),he("SS",ae,Q),he("SSS",ae,ee),gt="SSSS";gt.length<=9;gt+="S")he(gt,se);function vt(e,n){n[6]=$(1e3*("0."+e))}for(gt="S";gt.length<=9;gt+="S")Me(gt,vt);Mt=V("Milliseconds",!1),P("z",0,0,"zoneAbbr"),P("zz",0,0,"zoneName");var At=A.prototype;function wt(e){return e}At.add=Vn,At.calendar=function(e,n){1===arguments.length&&(arguments[0]?Yn(arguments[0])?(e=arguments[0],n=void 0):Jn(arguments[0])&&(n=arguments[0],e=void 0):(e=void 0,n=void 0));var t=e||zn(),l=Rn(t,this).startOf("day"),i=r.calendarFormat(this,l)||"sameElse",a=n&&(O(n[i])?n[i].call(this,t):n[i]);return this.format(a||this.localeData().calendar(i,this,zn(t)))},At.clone=function(){return new A(this)},At.diff=function(e,n,t){var l,r,i;if(!this.isValid())return NaN;if(!(l=Rn(e,this)).isValid())return NaN;switch(r=6e4*(l.utcOffset()-this.utcOffset()),n=F(n)){case"year":i=Qn(this,l)/12;break;case"month":i=Qn(this,l);break;case"quarter":i=Qn(this,l)/3;break;case"second":i=(this-l)/1e3;break;case"minute":i=(this-l)/6e4;break;case"hour":i=(this-l)/36e5;break;case"day":i=(this-l-r)/864e5;break;case"week":i=(this-l-r)/6048e5;break;default:i=this-l}return t?i:U(i)},At.endOf=function(e){var n,t;if(void 0===(e=F(e))||"millisecond"===e||!this.isValid())return this;switch(t=this._isUTC?st:ut,e){case"year":n=t(this.year()+1,0,1)-1;break;case"quarter":n=t(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":n=t(this.year(),this.month()+1,1)-1;break;case"week":n=t(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":n=t(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":n=t(this.year(),this.month(),this.date()+1)-1;break;case"hour":n=this._d.valueOf(),n+=it-ot(n+(this._isUTC?0:this.utcOffset()*rt),it)-1;break;case"minute":n=this._d.valueOf(),n+=rt-ot(n,rt)-1;break;case"second":n=this._d.valueOf(),n+=lt-ot(n,lt)-1}return this._d.setTime(n),r.updateOffset(this,!0),this},At.format=function(e){e||(e=this.isUtc()?r.defaultFormatUtc:r.defaultFormat);var n=D(this,e);return this.localeData().postformat(n)},At.from=function(e,n){return this.isValid()&&(w(e)&&e.isValid()||zn(e).isValid())?Xn({to:this,from:e}).locale(this.locale()).humanize(!n):this.localeData().invalidDate()},At.fromNow=function(e){return this.from(zn(),e)},At.to=function(e,n){return this.isValid()&&(w(e)&&e.isValid()||zn(e).isValid())?Xn({from:this,to:e}).locale(this.locale()).humanize(!n):this.localeData().invalidDate()},At.toNow=function(e){return this.to(zn(),e)},At.get=function(e){return O(this[e=F(e)])?this[e]():this},At.invalidAt=function(){return m(this).overflow},At.isAfter=function(e,n){var t=w(e)?e:zn(e);return!(!this.isValid()||!t.isValid())&&("millisecond"===(n=F(n)||"millisecond")?this.valueOf()>t.valueOf():t.valueOf()<this.clone().startOf(n).valueOf())},At.isBefore=function(e,n){var t=w(e)?e:zn(e);return!(!this.isValid()||!t.isValid())&&("millisecond"===(n=F(n)||"millisecond")?this.valueOf()<t.valueOf():this.clone().endOf(n).valueOf()<t.valueOf())},At.isBetween=function(e,n,t,l){var r=w(e)?e:zn(e),i=w(n)?n:zn(n);return!!(this.isValid()&&r.isValid()&&i.isValid())&&("("===(l=l||"()")[0]?this.isAfter(r,t):!this.isBefore(r,t))&&(")"===l[1]?this.isBefore(i,t):!this.isAfter(i,t))},At.isSame=function(e,n){var t,l=w(e)?e:zn(e);return!(!this.isValid()||!l.isValid())&&("millisecond"===(n=F(n)||"millisecond")?this.valueOf()===l.valueOf():(t=l.valueOf(),this.clone().startOf(n).valueOf()<=t&&t<=this.clone().endOf(n).valueOf()))},At.isSameOrAfter=function(e,n){return this.isSame(e,n)||this.isAfter(e,n)},At.isSameOrBefore=function(e,n){return this.isSame(e,n)||this.isBefore(e,n)},At.isValid=function(){return b(this)},At.lang=nt,At.locale=et,At.localeData=tt,At.max=En,At.min=On,At.parsingFlags=function(){return f({},m(this))},At.set=function(e,n){if("object"==typeof e){var t,l=function(e){var n,t=[];for(n in e)o(e,n)&&t.push({unit:n,priority:X[n]});return t.sort((function(e,n){return e.priority-n.priority})),t}(e=j(e)),r=l.length;for(t=0;t<r;t++)this[l[t].unit](e[l[t].unit])}else if(O(this[e=F(e)]))return this[e](n);return this},At.startOf=function(e){var n,t;if(void 0===(e=F(e))||"millisecond"===e||!this.isValid())return this;switch(t=this._isUTC?st:ut,e){case"year":n=t(this.year(),0,1);break;case"quarter":n=t(this.year(),this.month()-this.month()%3,1);break;case"month":n=t(this.year(),this.month(),1);break;case"week":n=t(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":n=t(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":n=t(this.year(),this.month(),this.date());break;case"hour":n=this._d.valueOf(),n-=ot(n+(this._isUTC?0:this.utcOffset()*rt),it);break;case"minute":n=this._d.valueOf(),n-=ot(n,rt);break;case"second":n=this._d.valueOf(),n-=ot(n,lt)}return this._d.setTime(n),r.updateOffset(this,!0),this},At.subtract=Zn,At.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},At.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},At.toDate=function(){return new Date(this.valueOf())},At.toISOString=function(e){if(!this.isValid())return null;var n=!0!==e,t=n?this.clone().utc():this;return t.year()<0||t.year()>9999?D(t,n?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):O(Date.prototype.toISOString)?n?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",D(t,"Z")):D(t,n?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},At.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e,n,t,l="moment",r="";return this.isLocal()||(l=0===this.utcOffset()?"moment.utc":"moment.parseZone",r="Z"),e="["+l+'("]',n=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY","-MM-DD[T]HH:mm:ss.SSS",t=r+'[")]',this.format(e+n+"-MM-DD[T]HH:mm:ss.SSS"+t)},"undefined"!=typeof Symbol&&null!=Symbol.for&&(At[Symbol.for("nodejs.util.inspect.custom")]=function(){return"Moment<"+this.format()+">"}),At.toJSON=function(){return this.isValid()?this.toISOString():null},At.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},At.unix=function(){return Math.floor(this.valueOf()/1e3)},At.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},At.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},At.eraName=function(){var e,n,t,l=this.localeData().eras();for(e=0,n=l.length;e<n;++e){if(t=this.clone().startOf("day").valueOf(),l[e].since<=t&&t<=l[e].until)return l[e].name;if(l[e].until<=t&&t<=l[e].since)return l[e].name}return""},At.eraNarrow=function(){var e,n,t,l=this.localeData().eras();for(e=0,n=l.length;e<n;++e){if(t=this.clone().startOf("day").valueOf(),l[e].since<=t&&t<=l[e].until)return l[e].narrow;if(l[e].until<=t&&t<=l[e].since)return l[e].narrow}return""},At.eraAbbr=function(){var e,n,t,l=this.localeData().eras();for(e=0,n=l.length;e<n;++e){if(t=this.clone().startOf("day").valueOf(),l[e].since<=t&&t<=l[e].until)return l[e].abbr;if(l[e].until<=t&&t<=l[e].since)return l[e].abbr}return""},At.eraYear=function(){var e,n,t,l,i=this.localeData().eras();for(e=0,n=i.length;e<n;++e)if(t=i[e].since<=i[e].until?1:-1,l=this.clone().startOf("day").valueOf(),i[e].since<=l&&l<=i[e].until||i[e].until<=l&&l<=i[e].since)return(this.year()-r(i[e].since).year())*t+i[e].offset;return this.year()},At.year=Ne,At.isLeapYear=function(){return H(this.year())},At.weekYear=function(e){return ft.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},At.isoWeekYear=function(e){return ft.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},At.quarter=At.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},At.month=Le,At.daysInMonth=function(){return we(this.year(),this.month())},At.week=At.weeks=function(e){var n=this.localeData().week(this);return null==e?n:this.add(7*(e-n),"d")},At.isoWeek=At.isoWeeks=function(e){var n=Re(this,1,4).week;return null==e?n:this.add(7*(e-n),"d")},At.weeksInYear=function(){var e=this.localeData()._week;return We(this.year(),e.dow,e.doy)},At.weeksInWeekYear=function(){var e=this.localeData()._week;return We(this.weekYear(),e.dow,e.doy)},At.isoWeeksInYear=function(){return We(this.year(),1,4)},At.isoWeeksInISOWeekYear=function(){return We(this.isoWeekYear(),1,4)},At.date=mt,At.day=At.days=function(e){if(!this.isValid())return null!=e?this:NaN;var n=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=function(e,n){return"string"!=typeof e?e:isNaN(e)?"number"==typeof(e=n.weekdaysParse(e))?e:null:parseInt(e,10)}(e,this.localeData()),this.add(e-n,"d")):n},At.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var n=(this.day()+7-this.localeData()._week.dow)%7;return null==e?n:this.add(e-n,"d")},At.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var n=function(e,n){return"string"==typeof e?n.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?n:n-7)}return this.day()||7},At.dayOfYear=function(e){var n=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?n:this.add(e-n,"d")},At.hour=At.hours=Je,At.minute=At.minutes=bt,At.second=At.seconds=yt,At.millisecond=At.milliseconds=Mt,At.utcOffset=function(e,n,t){var l,i=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null!=e){if("string"==typeof e){if(null===(e=Dn(pe,e)))return this}else Math.abs(e)<16&&!t&&(e*=60);return!this._isUTC&&n&&(l=Wn(this)),this._offset=e,this._isUTC=!0,null!=l&&this.add(l,"m"),i!==e&&(!n||this._changeInProgress?$n(this,Xn(e-i,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,r.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?i:Wn(this)},At.utc=function(e){return this.utcOffset(0,e)},At.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Wn(this),"m")),this},At.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=Dn(de,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},At.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?zn(e).utcOffset():0,(this.utcOffset()-e)%60==0)},At.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},At.isLocal=function(){return!!this.isValid()&&!this._isUTC},At.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},At.isUtc=In,At.isUTC=In,At.zoneAbbr=function(){return this._isUTC?"UTC":""},At.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},At.dates=C("dates accessor is deprecated. Use date instead.",mt),At.months=C("months accessor is deprecated. Use month instead",Le),At.years=C("years accessor is deprecated. Use year instead",Ne),At.zone=C("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,n){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,n),this):-this.utcOffset()})),At.isDSTShifted=C("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!s(this._isDSTShifted))return this._isDSTShifted;var e,n={};return v(n,this),(n=Tn(n))._a?(e=n._isUTC?h(n._a):zn(n._a),this._isDSTShifted=this.isValid()&&function(e,n,t){var l,r=Math.min(e.length,n.length),i=Math.abs(e.length-n.length),a=0;for(l=0;l<r;l++)(t&&e[l]!==n[l]||!t&&$(e[l])!==$(n[l]))&&a++;return a+i}(n._a,e.toArray())>0):this._isDSTShifted=!1,this._isDSTShifted}));var _t=L.prototype;function Ct(e,n,t,l){var r=sn(),i=h().set(l,n);return r[t](i,e)}function Tt(e,n,t){if(c(e)&&(n=e,e=void 0),e=e||"",null!=n)return Ct(e,n,t,"month");var l,r=[];for(l=0;l<12;l++)r[l]=Ct(e,l,t,"month");return r}function St(e,n,t,l){"boolean"==typeof e?(c(n)&&(t=n,n=void 0),n=n||""):(t=n=e,e=!1,c(n)&&(t=n,n=void 0),n=n||"");var r,i=sn(),a=e?i._week.dow:0,o=[];if(null!=t)return Ct(n,(t+a)%7,l,"day");for(r=0;r<7;r++)o[r]=Ct(n,(r+a)%7,l,"day");return o}_t.calendar=function(e,n,t){var l=this._calendar[e]||this._calendar.sameElse;return O(l)?l.call(n,t):l},_t.longDateFormat=function(e){var n=this._longDateFormat[e],t=this._longDateFormat[e.toUpperCase()];return n||!t?n:(this._longDateFormat[e]=t.match(k).map((function(e){return"MMMM"===e||"MM"===e||"DD"===e||"dddd"===e?e.slice(1):e})).join(""),this._longDateFormat[e])},_t.invalidDate=function(){return this._invalidDate},_t.ordinal=function(e){return this._ordinal.replace("%d",e)},_t.preparse=wt,_t.postformat=wt,_t.relativeTime=function(e,n,t,l){var r=this._relativeTime[t];return O(r)?r(e,n,t,l):r.replace(/%d/i,e)},_t.pastFuture=function(e,n){var t=this._relativeTime[e>0?"future":"past"];return O(t)?t(n):t.replace(/%s/i,n)},_t.set=function(e){var n,t;for(t in e)o(e,t)&&(O(n=e[t])?this[t]=n:this["_"+t]=n);this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},_t.eras=function(e,n){var t,l,i,a=this._eras||sn("en")._eras;for(t=0,l=a.length;t<l;++t)switch("string"==typeof a[t].since&&(i=r(a[t].since).startOf("day"),a[t].since=i.valueOf()),typeof a[t].until){case"undefined":a[t].until=1/0;break;case"string":i=r(a[t].until).startOf("day").valueOf(),a[t].until=i.valueOf()}return a},_t.erasParse=function(e,n,t){var l,r,i,a,o,u=this.eras();for(e=e.toUpperCase(),l=0,r=u.length;l<r;++l)if(i=u[l].name.toUpperCase(),a=u[l].abbr.toUpperCase(),o=u[l].narrow.toUpperCase(),t)switch(n){case"N":case"NN":case"NNN":if(a===e)return u[l];break;case"NNNN":if(i===e)return u[l];break;case"NNNNN":if(o===e)return u[l]}else if([i,a,o].indexOf(e)>=0)return u[l]},_t.erasConvertYear=function(e,n){var t=e.since<=e.until?1:-1;return void 0===n?r(e.since).year():r(e.since).year()+(n-e.offset)*t},_t.erasAbbrRegex=function(e){return o(this,"_erasAbbrRegex")||dt.call(this),e?this._erasAbbrRegex:this._erasRegex},_t.erasNameRegex=function(e){return o(this,"_erasNameRegex")||dt.call(this),e?this._erasNameRegex:this._erasRegex},_t.erasNarrowRegex=function(e){return o(this,"_erasNarrowRegex")||dt.call(this),e?this._erasNarrowRegex:this._erasRegex},_t.months=function(e,n){return e?i(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Te).test(n)?"format":"standalone"][e.month()]:i(this._months)?this._months:this._months.standalone},_t.monthsShort=function(e,n){return e?i(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Te.test(n)?"format":"standalone"][e.month()]:i(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},_t.monthsParse=function(e,n,t){var l,r,i;if(this._monthsParseExact)return Oe.call(this,e,n,t);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),l=0;l<12;l++){if(r=h([2e3,l]),t&&!this._longMonthsParse[l]&&(this._longMonthsParse[l]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[l]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),t||this._monthsParse[l]||(i="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[l]=new RegExp(i.replace(".",""),"i")),t&&"MMMM"===n&&this._longMonthsParse[l].test(e))return l;if(t&&"MMM"===n&&this._shortMonthsParse[l].test(e))return l;if(!t&&this._monthsParse[l].test(e))return l}},_t.monthsRegex=function(e){return this._monthsParseExact?(o(this,"_monthsRegex")||xe.call(this),e?this._monthsStrictRegex:this._monthsRegex):(o(this,"_monthsRegex")||(this._monthsRegex=ze),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},_t.monthsShortRegex=function(e){return this._monthsParseExact?(o(this,"_monthsRegex")||xe.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(o(this,"_monthsShortRegex")||(this._monthsShortRegex=Se),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},_t.week=function(e){return Re(e,this._week.dow,this._week.doy).week},_t.firstDayOfYear=function(){return this._week.doy},_t.firstDayOfWeek=function(){return this._week.dow},_t.weekdays=function(e,n){var t=i(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(n)?"format":"standalone"];return!0===e?Ie(t,this._week.dow):e?t[e.day()]:t},_t.weekdaysMin=function(e){return!0===e?Ie(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},_t.weekdaysShort=function(e){return!0===e?Ie(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},_t.weekdaysParse=function(e,n,t){var l,r,i;if(this._weekdaysParseExact)return $e.call(this,e,n,t);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),l=0;l<7;l++){if(r=h([2e3,1]).day(l),t&&!this._fullWeekdaysParse[l]&&(this._fullWeekdaysParse[l]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[l]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[l]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[l]||(i="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[l]=new RegExp(i.replace(".",""),"i")),t&&"dddd"===n&&this._fullWeekdaysParse[l].test(e))return l;if(t&&"ddd"===n&&this._shortWeekdaysParse[l].test(e))return l;if(t&&"dd"===n&&this._minWeekdaysParse[l].test(e))return l;if(!t&&this._weekdaysParse[l].test(e))return l}},_t.weekdaysRegex=function(e){return this._weekdaysParseExact?(o(this,"_weekdaysRegex")||Ve.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(o(this,"_weekdaysRegex")||(this._weekdaysRegex=Ge),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},_t.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(o(this,"_weekdaysRegex")||Ve.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(o(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=He),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},_t.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(o(this,"_weekdaysRegex")||Ve.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(o(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Ue),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},_t.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},_t.meridiem=function(e,n,t){return e>11?t?"pm":"PM":t?"am":"AM"},on("en",{eras:[{since:"0001-01-01",until:1/0,offset:1,name:"Anno Domini",narrow:"AD",abbr:"AD"},{since:"0000-12-31",until:-1/0,offset:1,name:"Before Christ",narrow:"BC",abbr:"BC"}],dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var n=e%10;return e+(1===$(e%100/10)?"th":1===n?"st":2===n?"nd":3===n?"rd":"th")}}),r.lang=C("moment.lang is deprecated. Use moment.locale instead.",on),r.langData=C("moment.langData is deprecated. Use moment.localeData instead.",sn);var zt=Math.abs;function Ot(e,n,t,l){var r=Xn(n,t);return e._milliseconds+=l*r._milliseconds,e._days+=l*r._days,e._months+=l*r._months,e._bubble()}function Et(e){return e<0?Math.floor(e):Math.ceil(e)}function Lt(e){return 4800*e/146097}function xt(e){return 146097*e/4800}function kt(e){return function(){return this.as(e)}}var Nt=kt("ms"),Bt=kt("s"),qt=kt("m"),Pt=kt("h"),Dt=kt("d"),Rt=kt("w"),Wt=kt("M"),It=kt("Q"),Ft=kt("y");function jt(e){return function(){return this.isValid()?this._data[e]:NaN}}var Xt=jt("milliseconds"),Gt=jt("seconds"),Ht=jt("minutes"),Ut=jt("hours"),$t=jt("days"),Vt=jt("months"),Zt=jt("years");var Kt=Math.round,Yt={ss:44,s:45,m:45,h:22,d:26,w:null,M:11};function Jt(e,n,t,l,r){return r.relativeTime(n||1,!!t,e,l)}var Qt=Math.abs;function el(e){return(e>0)-(e<0)||+e}function nl(){if(!this.isValid())return this.localeData().invalidDate();var e,n,t,l,r,i,a,o,u=Qt(this._milliseconds)/1e3,s=Qt(this._days),c=Qt(this._months),d=this.asSeconds();return d?(e=U(u/60),n=U(e/60),u%=60,e%=60,t=U(c/12),c%=12,l=u?u.toFixed(3).replace(/\.?0+$/,""):"",r=d<0?"-":"",i=el(this._months)!==el(d)?"-":"",a=el(this._days)!==el(d)?"-":"",o=el(this._milliseconds)!==el(d)?"-":"",r+"P"+(t?i+t+"Y":"")+(c?i+c+"M":"")+(s?a+s+"D":"")+(n||e||u?"T":"")+(n?o+n+"H":"")+(e?o+e+"M":"")+(u?o+l+"S":"")):"P0D"}var tl=kn.prototype;return tl.isValid=function(){return this._isValid},tl.abs=function(){var e=this._data;return this._milliseconds=zt(this._milliseconds),this._days=zt(this._days),this._months=zt(this._months),e.milliseconds=zt(e.milliseconds),e.seconds=zt(e.seconds),e.minutes=zt(e.minutes),e.hours=zt(e.hours),e.months=zt(e.months),e.years=zt(e.years),this},tl.add=function(e,n){return Ot(this,e,n,1)},tl.subtract=function(e,n){return Ot(this,e,n,-1)},tl.as=function(e){if(!this.isValid())return NaN;var n,t,l=this._milliseconds;if("month"===(e=F(e))||"quarter"===e||"year"===e)switch(n=this._days+l/864e5,t=this._months+Lt(n),e){case"month":return t;case"quarter":return t/3;case"year":return t/12}else switch(n=this._days+Math.round(xt(this._months)),e){case"week":return n/7+l/6048e5;case"day":return n+l/864e5;case"hour":return 24*n+l/36e5;case"minute":return 1440*n+l/6e4;case"second":return 86400*n+l/1e3;case"millisecond":return Math.floor(864e5*n)+l;default:throw new Error("Unknown unit "+e)}},tl.asMilliseconds=Nt,tl.asSeconds=Bt,tl.asMinutes=qt,tl.asHours=Pt,tl.asDays=Dt,tl.asWeeks=Rt,tl.asMonths=Wt,tl.asQuarters=It,tl.asYears=Ft,tl.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*$(this._months/12):NaN},tl._bubble=function(){var e,n,t,l,r,i=this._milliseconds,a=this._days,o=this._months,u=this._data;return i>=0&&a>=0&&o>=0||i<=0&&a<=0&&o<=0||(i+=864e5*Et(xt(o)+a),a=0,o=0),u.milliseconds=i%1e3,e=U(i/1e3),u.seconds=e%60,n=U(e/60),u.minutes=n%60,t=U(n/60),u.hours=t%24,a+=U(t/24),o+=r=U(Lt(a)),a-=Et(xt(r)),l=U(o/12),o%=12,u.days=a,u.months=o,u.years=l,this},tl.clone=function(){return Xn(this)},tl.get=function(e){return e=F(e),this.isValid()?this[e+"s"]():NaN},tl.milliseconds=Xt,tl.seconds=Gt,tl.minutes=Ht,tl.hours=Ut,tl.days=$t,tl.weeks=function(){return U(this.days()/7)},tl.months=Vt,tl.years=Zt,tl.humanize=function(e,n){if(!this.isValid())return this.localeData().invalidDate();var t,l,r=!1,i=Yt;return"object"==typeof e&&(n=e,e=!1),"boolean"==typeof e&&(r=e),"object"==typeof n&&(i=Object.assign({},Yt,n),null!=n.s&&null==n.ss&&(i.ss=n.s-1)),l=function(e,n,t,l){var r=Xn(e).abs(),i=Kt(r.as("s")),a=Kt(r.as("m")),o=Kt(r.as("h")),u=Kt(r.as("d")),s=Kt(r.as("M")),c=Kt(r.as("w")),d=Kt(r.as("y")),p=i<=t.ss&&["s",i]||i<t.s&&["ss",i]||a<=1&&["m"]||a<t.m&&["mm",a]||o<=1&&["h"]||o<t.h&&["hh",o]||u<=1&&["d"]||u<t.d&&["dd",u];return null!=t.w&&(p=p||c<=1&&["w"]||c<t.w&&["ww",c]),(p=p||s<=1&&["M"]||s<t.M&&["MM",s]||d<=1&&["y"]||["yy",d])[2]=n,p[3]=+e>0,p[4]=l,Jt.apply(null,p)}(this,!r,i,t=this.localeData()),r&&(l=t.pastFuture(+this,l)),t.postformat(l)},tl.toISOString=nl,tl.toString=nl,tl.toJSON=nl,tl.locale=et,tl.localeData=tt,tl.toIsoString=C("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",nl),tl.lang=nt,P("X",0,0,"unix"),P("x",0,0,"valueOf"),he("x",ce),he("X",/[+-]?\d+(\.\d{1,3})?/),Me("X",(function(e,n,t){t._d=new Date(1e3*parseFloat(e))})),Me("x",(function(e,n,t){t._d=new Date($(e))})),r.version="2.29.4",n=zn,r.fn=At,r.min=function(){return Ln("isBefore",[].slice.call(arguments,0))},r.max=function(){return Ln("isAfter",[].slice.call(arguments,0))},r.now=function(){return Date.now?Date.now():+new Date},r.utc=h,r.unix=function(e){return zn(1e3*e)},r.months=function(e,n){return Tt(e,n,"months")},r.isDate=d,r.locale=on,r.invalid=g,r.duration=Xn,r.isMoment=w,r.weekdays=function(e,n,t){return St(e,n,t,"weekdays")},r.parseZone=function(){return zn.apply(null,arguments).parseZone()},r.localeData=sn,r.isDuration=Nn,r.monthsShort=function(e,n){return Tt(e,n,"monthsShort")},r.weekdaysMin=function(e,n,t){return St(e,n,t,"weekdaysMin")},r.defineLocale=un,r.updateLocale=function(e,n){if(null!=n){var t,l,r=en;null!=nn[e]&&null!=nn[e].parentLocale?nn[e].set(E(nn[e]._config,n)):(null!=(l=an(e))&&(r=l._config),n=E(r,n),null==l&&(n.abbr=e),(t=new L(n)).parentLocale=nn[e],nn[e]=t),on(e)}else null!=nn[e]&&(null!=nn[e].parentLocale?(nn[e]=nn[e].parentLocale,e===on()&&on(e)):null!=nn[e]&&delete nn[e]);return nn[e]},r.locales=function(){return T(nn)},r.weekdaysShort=function(e,n,t){return St(e,n,t,"weekdaysShort")},r.normalizeUnits=F,r.relativeTimeRounding=function(e){return void 0===e?Kt:"function"==typeof e&&(Kt=e,!0)},r.relativeTimeThreshold=function(e,n){return void 0!==Yt[e]&&(void 0===n?Yt[e]:(Yt[e]=n,"s"===e&&(Yt.ss=n-1),!0))},r.calendarFormat=function(e,n){var t=e.diff(n,"days",!0);return t<-6?"sameElse":t<-1?"lastWeek":t<0?"lastDay":t<1?"sameDay":t<2?"nextDay":t<7?"nextWeek":"sameElse"},r.prototype=At,r.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},r}()},12462:(e,n,t)=>{var l;!function(r,i,a){if(r){for(var o,u={8:"backspace",9:"tab",13:"enter",16:"shift",17:"ctrl",18:"alt",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"ins",46:"del",91:"meta",93:"meta",224:"meta"},s={106:"*",107:"+",109:"-",110:".",111:"/",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},c={"~":"`","!":"1","@":"2","#":"3",$:"4","%":"5","^":"6","&":"7","*":"8","(":"9",")":"0",_:"-","+":"=",":":";",'"':"'","<":",",">":".","?":"/","|":"\\"},d={option:"alt",command:"meta",return:"enter",escape:"esc",plus:"+",mod:/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"meta":"ctrl"},p=1;p<20;++p)u[111+p]="f"+p;for(p=0;p<=9;++p)u[p+96]=p.toString();y.prototype.bind=function(e,n,t){var l=this;return e=e instanceof Array?e:[e],l._bindMultiple.call(l,e,n,t),l},y.prototype.unbind=function(e,n){return this.bind.call(this,e,(function(){}),n)},y.prototype.trigger=function(e,n){var t=this;return t._directMap[e+":"+n]&&t._directMap[e+":"+n]({},e),t},y.prototype.reset=function(){var e=this;return e._callbacks={},e._directMap={},e},y.prototype.stopCallback=function(e,n){return!((" "+n.className+" ").indexOf(" mousetrap ")>-1)&&!M(n,this.target)&&("INPUT"==n.tagName||"SELECT"==n.tagName||"TEXTAREA"==n.tagName||n.isContentEditable)},y.prototype.handleKey=function(){var e=this;return e._handleKey.apply(e,arguments)},y.addKeycodes=function(e){for(var n in e)e.hasOwnProperty(n)&&(u[n]=e[n]);o=null},y.init=function(){var e=y(i);for(var n in e)"_"!==n.charAt(0)&&(y[n]=function(n){return function(){return e[n].apply(e,arguments)}}(n))},y.init(),r.Mousetrap=y,e.exports&&(e.exports=y),void 0===(l=function(){return y}.call(n,t,n,e))||(e.exports=l)}function f(e,n,t){e.addEventListener?e.addEventListener(n,t,!1):e.attachEvent("on"+n,t)}function h(e){if("keypress"==e.type){var n=String.fromCharCode(e.which);return e.shiftKey||(n=n.toLowerCase()),n}return u[e.which]?u[e.which]:s[e.which]?s[e.which]:String.fromCharCode(e.which).toLowerCase()}function m(e){return"shift"==e||"ctrl"==e||"alt"==e||"meta"==e}function b(e,n,t){return t||(t=function(){if(!o)for(var e in o={},u)e>95&&e<112||u.hasOwnProperty(e)&&(o[u[e]]=e);return o}()[e]?"keydown":"keypress"),"keypress"==t&&n.length&&(t="keydown"),t}function g(e,n){var t,l,r,i=[];for(t=function(e){return"+"===e?["+"]:(e=e.replace(/\+{2}/g,"+plus")).split("+")}(e),r=0;r<t.length;++r)l=t[r],d[l]&&(l=d[l]),n&&"keypress"!=n&&c[l]&&(l=c[l],i.push("shift")),m(l)&&i.push(l);return{key:l,modifiers:i,action:n=b(l,i,n)}}function M(e,n){return null!==e&&e!==i&&(e===n||M(e.parentNode,n))}function y(e){var n=this;if(e=e||i,!(n instanceof y))return new y(e);n.target=e,n._callbacks={},n._directMap={};var t,l={},r=!1,a=!1,o=!1;function u(e){e=e||{};var n,t=!1;for(n in l)e[n]?t=!0:l[n]=0;t||(o=!1)}function s(e,t,r,i,a,o){var u,s,c,d,p=[],f=r.type;if(!n._callbacks[e])return[];for("keyup"==f&&m(e)&&(t=[e]),u=0;u<n._callbacks[e].length;++u)if(s=n._callbacks[e][u],(i||!s.seq||l[s.seq]==s.level)&&f==s.action&&("keypress"==f&&!r.metaKey&&!r.ctrlKey||(c=t,d=s.modifiers,c.sort().join(",")===d.sort().join(",")))){var h=!i&&s.combo==a,b=i&&s.seq==i&&s.level==o;(h||b)&&n._callbacks[e].splice(u,1),p.push(s)}return p}function c(e,t,l,r){n.stopCallback(t,t.target||t.srcElement,l,r)||!1===e(t,l)&&(function(e){e.preventDefault?e.preventDefault():e.returnValue=!1}(t),function(e){e.stopPropagation?e.stopPropagation():e.cancelBubble=!0}(t))}function d(e){"number"!=typeof e.which&&(e.which=e.keyCode);var t=h(e);t&&("keyup"!=e.type||r!==t?n.handleKey(t,function(e){var n=[];return e.shiftKey&&n.push("shift"),e.altKey&&n.push("alt"),e.ctrlKey&&n.push("ctrl"),e.metaKey&&n.push("meta"),n}(e),e):r=!1)}function p(e,i,a,d,f){n._directMap[e+":"+a]=i;var m,b=(e=e.replace(/\s+/g," ")).split(" ");b.length>1?function(e,n,i,a){function s(n){return function(){o=n,++l[e],clearTimeout(t),t=setTimeout(u,1e3)}}function d(n){c(i,n,e),"keyup"!==a&&(r=h(n)),setTimeout(u,10)}l[e]=0;for(var f=0;f<n.length;++f){var m=f+1===n.length?d:s(a||g(n[f+1]).action);p(n[f],m,a,e,f)}}(e,b,i,a):(m=g(e,a),n._callbacks[m.key]=n._callbacks[m.key]||[],s(m.key,m.modifiers,{type:m.action},d,e,f),n._callbacks[m.key][d?"unshift":"push"]({callback:i,modifiers:m.modifiers,action:m.action,seq:d,level:f,combo:e}))}n._handleKey=function(e,n,t){var l,r=s(e,n,t),i={},d=0,p=!1;for(l=0;l<r.length;++l)r[l].seq&&(d=Math.max(d,r[l].level));for(l=0;l<r.length;++l)if(r[l].seq){if(r[l].level!=d)continue;p=!0,i[r[l].seq]=1,c(r[l].callback,t,r[l].combo,r[l].seq)}else p||c(r[l].callback,t,r[l].combo);var f="keypress"==t.type&&a;t.type!=o||m(e)||f||u(i),a=p&&"keydown"==t.type},n._bindMultiple=function(e,n,t){for(var l=0;l<e.length;++l)p(e[l],n,t)},f(e,"keypress",d),f(e,"keydown",d),f(e,"keyup",d)}}("undefined"!=typeof window?window:null,"undefined"!=typeof window?document:null)},77428:e=>{"use strict";var n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;function r(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var l={};return"abcdefghijklmnopqrst".split("").forEach((function(e){l[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},l)).join("")}catch(e){return!1}}()?Object.assign:function(e,i){for(var a,o,u=r(e),s=1;s<arguments.length;s++){for(var c in a=Object(arguments[s]))t.call(a,c)&&(u[c]=a[c]);if(n){o=n(a);for(var d=0;d<o.length;d++)l.call(a,o[d])&&(u[o[d]]=a[o[d]])}}return u}},29452:e=>{"use strict";function n(e,n){return null!=e&&n in Object(e)}function t(e){return e.replace(/([^\\])\[/g,"$1.[").match(/(\\\.|[^.]+?)+/g).map((function(e){if("constructor"===e||"__proto__"===e||"prototype"===e)return{};var n=/^\[(\d+)\]$/.exec(e);return n?{i:parseFloat(n[1])}:{p:e.replace(/\\([.[\]])/g,"$1")}}))}function l(e,n,t){var l=e,r=null;t=void 0===t?n.length:t;for(var i=0;i<t;i++){var a=n[i];l&&(l=void 0===a.p?l[a.i]:l[a.p],i===t-1&&(r=l))}return r}function r(e,r){var i=t(r),a=i[i.length-1],o={parent:i.length>1?l(e,i,i.length-1):e,name:a.p||a.i,value:l(e,i)};return o.exists=n(o.parent,o.name),o}e.exports={hasProperty:n,getPathInfo:r,getPathValue:function(e,n){return r(e,n).value},setPathValue:function(e,n,l){return function(e,n,t){for(var l=e,r=t.length,i=null,a=0;a<r;a++){var o=null,u=null;if(i=t[a],a===r-1)l[o=void 0===i.p?i.i:i.p]=n;else if(void 0!==i.p&&l[i.p])l=l[i.p];else if(void 0!==i.i&&l[i.i])l=l[i.i];else{var s=t[a+1];o=void 0===i.p?i.i:i.p,u=void 0===s.p?[]:{},l[o]=u,l=l[o]}}}(e,l,t(n)),e}}},2724:e=>{var n,t,l=e.exports={};function r(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function a(e){if(n===setTimeout)return setTimeout(e,0);if((n===r||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:r}catch(e){n=r}try{t="function"==typeof clearTimeout?clearTimeout:i}catch(e){t=i}}();var o,u=[],s=!1,c=-1;function d(){s&&o&&(s=!1,o.length?u=o.concat(u):c=-1,u.length&&p())}function p(){if(!s){var e=a(d);s=!0;for(var n=u.length;n;){for(o=u,u=[];++c<n;)o&&o[c].run();c=-1,n=u.length}o=null,s=!1,function(e){if(t===clearTimeout)return clearTimeout(e);if((t===i||!t)&&clearTimeout)return t=clearTimeout,clearTimeout(e);try{t(e)}catch(n){try{return t.call(null,e)}catch(n){return t.call(this,e)}}}(e)}}function f(e,n){this.fun=e,this.array=n}function h(){}l.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];u.push(new f(e,n)),1!==u.length||s||a(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},l.title="browser",l.browser=!0,l.env={},l.argv=[],l.version="",l.versions={},l.on=h,l.addListener=h,l.once=h,l.off=h,l.removeListener=h,l.removeAllListeners=h,l.emit=h,l.prependListener=h,l.prependOnceListener=h,l.listeners=function(e){return[]},l.binding=function(e){throw new Error("process.binding is not supported")},l.cwd=function(){return"/"},l.chdir=function(e){throw new Error("process.chdir is not supported")},l.umask=function(){return 0}},85828:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FakeXMLHttpRequest:()=>_FakeXMLHttpRequest,addBehavior:()=>_addBehavior,assert:()=>_assert,createFakeServer:()=>_createFakeServer,createFakeServerWithClock:()=>_createFakeServerWithClock,createSandbox:()=>_createSandbox,createStubInstance:()=>_createStubInstance,default:()=>__WEBPACK_DEFAULT_EXPORT__,defaultConfig:()=>_defaultConfig,expectation:()=>_expectation,fake:()=>_fake,fakeServer:()=>_fakeServer,fakeServerWithClock:()=>_fakeServerWithClock,getFakes:()=>_getFakes,getRestorers:()=>_getRestorers,inject:()=>_inject,match:()=>_match,mock:()=>_mock,replace:()=>_replace,replaceGetter:()=>_replaceGetter,replaceSetter:()=>_replaceSetter,reset:()=>_reset,resetBehavior:()=>_resetBehavior,resetHistory:()=>_resetHistory,restore:()=>_restore,restoreContext:()=>_restoreContext,sandbox:()=>_sandbox,serverPrototype:()=>_serverPrototype,setFormatter:()=>_setFormatter,spy:()=>_spy,spyCall:()=>_spyCall,stub:()=>_stub,timers:()=>_timers,useFakeServer:()=>_useFakeServer,useFakeTimers:()=>_useFakeTimers,useFakeXMLHttpRequest:()=>_useFakeXMLHttpRequest,usingPromise:()=>_usingPromise,verify:()=>_verify,verifyAndRestore:()=>_verifyAndRestore,xhr:()=>_xhr});var call=Function.call,copyPrototype=function(e){return Object.getOwnPropertyNames(e).reduce((function(n,t){return"size"!==t&&"caller"!==t&&"callee"!==t&&"arguments"!==t&&"function"==typeof e[t]&&(n[t]=call.bind(e[t])),n}),Object.create(null))},array=copyPrototype(Array.prototype),every=array.every;function hasCallsLeft(e,n){return void 0===e[n.id]&&(e[n.id]=0),e[n.id]<n.callCount}function checkAdjacentCalls(e,n,t,l){var r=!0;return t!==l.length-1&&(r=n.calledBefore(l[t+1])),!(!hasCallsLeft(e,n)||!r||(e[n.id]+=1,0))}var calledInOrder=function(e){var n={},t=arguments.length>1?arguments:e;return every(t,checkAdjacentCalls.bind(null,n))},every$1=function(e,n){var t=!0;try{e.forEach((function(){if(!n.apply(this,arguments))throw new Error}))}catch(e){t=!1}return t},functionName=function(e){return e.displayName||e.name||(String(e).match(/function ([^\s(]+)/)||[])[1]},sort=array.sort,slice=array.slice;function comparator(e,n){var t=e.getCall(0),l=n.getCall(0);return(t&&t.callId||-1)<(l&&l.callId||-1)?-1:1}var orderByFirstCall=function(e){return sort(slice(e),comparator)},_function=copyPrototype(Function.prototype),object=copyPrototype(Object.prototype),string=copyPrototype(String.prototype),prototypes={array,function:_function,object,string},commonjsGlobal="undefined"!=typeof window?window:void 0!==__webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:{};function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}function unwrapExports(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function createCommonjsModule(e,n){return e(n={exports:{}},n.exports),n.exports}var typeDetect=createCommonjsModule((function(e,n){var t,l,r,i,a,o,u,s,c,d,p,f,h,m,b,g,M,y;e.exports=(t="function"==typeof Promise,l="object"==typeof self?self:commonjsGlobal,r="undefined"!=typeof Symbol,i="undefined"!=typeof Map,a="undefined"!=typeof Set,o="undefined"!=typeof WeakMap,u="undefined"!=typeof WeakSet,s="undefined"!=typeof DataView,c=r&&void 0!==Symbol.iterator,d=r&&void 0!==Symbol.toStringTag,p=a&&"function"==typeof Set.prototype.entries,f=i&&"function"==typeof Map.prototype.entries,h=p&&Object.getPrototypeOf((new Set).entries()),m=f&&Object.getPrototypeOf((new Map).entries()),b=c&&"function"==typeof Array.prototype[Symbol.iterator],g=b&&Object.getPrototypeOf([][Symbol.iterator]()),M=c&&"function"==typeof String.prototype[Symbol.iterator],y=M&&Object.getPrototypeOf(""[Symbol.iterator]()),function(e){var n=typeof e;if("object"!==n)return n;if(null===e)return"null";if(e===l)return"global";if(Array.isArray(e)&&(!1===d||!(Symbol.toStringTag in e)))return"Array";if("object"==typeof window&&null!==window){if("object"==typeof window.location&&e===window.location)return"Location";if("object"==typeof window.document&&e===window.document)return"Document";if("object"==typeof window.navigator){if("object"==typeof window.navigator.mimeTypes&&e===window.navigator.mimeTypes)return"MimeTypeArray";if("object"==typeof window.navigator.plugins&&e===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&e instanceof window.HTMLElement){if("BLOCKQUOTE"===e.tagName)return"HTMLQuoteElement";if("TD"===e.tagName)return"HTMLTableDataCellElement";if("TH"===e.tagName)return"HTMLTableHeaderCellElement"}}var r=d&&e[Symbol.toStringTag];if("string"==typeof r)return r;var c=Object.getPrototypeOf(e);return c===RegExp.prototype?"RegExp":c===Date.prototype?"Date":t&&c===Promise.prototype?"Promise":a&&c===Set.prototype?"Set":i&&c===Map.prototype?"Map":u&&c===WeakSet.prototype?"WeakSet":o&&c===WeakMap.prototype?"WeakMap":s&&c===DataView.prototype?"DataView":i&&c===m?"Map Iterator":a&&c===h?"Set Iterator":b&&c===g?"Array Iterator":M&&c===y?"String Iterator":null===c?"Object":Object.prototype.toString.call(e).slice(8,-1)})})),typeOf=function(e){return typeDetect(e).toLowerCase()};function valueToString(e){return e&&e.toString?e.toString():String(e)}var valueToString_1=valueToString,lib={calledInOrder,every:every$1,functionName,orderByFirstCall,prototypes,typeOf,valueToString:valueToString_1},arrayProto=lib.prototypes.array,hasOwnProperty=lib.prototypes.object.hasOwnProperty,join=arrayProto.join,push=arrayProto.push,slice$1=arrayProto.slice,hasDontEnumBug=function(){var e={constructor:function(){return"0"},toString:function(){return"1"},valueOf:function(){return"2"},toLocaleString:function(){return"3"},prototype:function(){return"4"},isPrototypeOf:function(){return"5"},propertyIsEnumerable:function(){return"6"},hasOwnProperty:function(){return"7"},length:function(){return"8"},unique:function(){return"9"}},n=[];for(var t in e)hasOwnProperty(e,t)&&push(n,e[t]());return"0123456789"!==join(n,"")}();function extendCommon(e,n,t){var l,r,i;for(r=0;r<n.length;r++){for(i in l=n[r])hasOwnProperty(l,i)&&t(e,l,i);hasDontEnumBug&&hasOwnProperty(l,"toString")&&l.toString!==e.toString&&(e.toString=l.toString)}return e}var extend=function(e){var n=slice$1(arguments,1);return extendCommon(e,n,(function(e,n,t){e[t]=n[t]}))},nonEnum=function(e){var n=slice$1(arguments,1);return extendCommon(e,n,(function(e,n,t){Object.defineProperty(e,t,{value:n[t],enumerable:!1,configurable:!0,writable:!0})}))};function nextTick(e){setTimeout(e,0)}extend.nonEnum=nonEnum;var getNextTick=function(e,n){return"object"==typeof e&&"function"==typeof e.nextTick?e.nextTick:"function"==typeof n?n:nextTick},root="undefined"!=typeof window?window:commonjsGlobal,nextTick$1=getNextTick(root.process,root.setImmediate),arrayProto$1=lib.prototypes.array,reduce=arrayProto$1.reduce,exportAsyncBehaviors=function(e){return reduce(Object.keys(e),(function(n,t){return t.match(/^(callsArg|yields)/)&&!t.match(/Async/)&&(n[t+"Async"]=function(){var n=e[t].apply(this,arguments);return this.callbackAsync=!0,n}),n}),{})},arrayProto$2=lib.prototypes.array,functionName$1=lib.functionName,valueToString$1=lib.valueToString,concat=arrayProto$2.concat,join$1=arrayProto$2.join,reverse=arrayProto$2.reverse,slice$2=arrayProto$2.slice,useLeftMostCallback=-1,useRightMostCallback=-2;function getCallback(e,n){var t,l=e.callArgAt;if(l>=0)return n[l];l===useLeftMostCallback&&(t=n),l===useRightMostCallback&&(t=reverse(slice$2(n)));for(var r=e.callArgProp,i=0,a=t.length;i<a;++i){if(!r&&"function"==typeof t[i])return t[i];if(r&&t[i]&&"function"==typeof t[i][r])return t[i][r]}return null}function getCallbackError(e,n,t){var l;return e.callArgAt<0?(l=e.callArgProp?functionName$1(e.stub)+" expected to yield to '"+valueToString$1(e.callArgProp)+"', but no object with such a property was passed.":functionName$1(e.stub)+" expected to yield, but no callback was passed.",t.length>0&&(l+=" Received ["+join$1(t,", ")+"]"),l):"argument at index "+e.callArgAt+" is not a function: "+n}function ensureArgs(e,n,t){var l=n[e.replace(/sArg/,"ArgAt")];if(l>=t.length)throw new TypeError(e+" failed: "+(l+1)+" arguments required but only "+t.length+" present")}function callCallback(e,n){if("number"==typeof e.callArgAt){ensureArgs("callsArg",e,n);var t=getCallback(e,n);if("function"!=typeof t)throw new TypeError(getCallbackError(e,t,n));if(!e.callbackAsync)return t.apply(e.callbackContext,e.callbackArguments);nextTick$1((function(){t.apply(e.callbackContext,e.callbackArguments)}))}}var proto={create:function(e){var n=extend({},proto);return delete n.create,delete n.addBehavior,delete n.createBehavior,n.stub=e,e.defaultBehavior&&e.defaultBehavior.promiseLibrary&&(n.promiseLibrary=e.defaultBehavior.promiseLibrary),n},isPresent:function(){return"number"==typeof this.callArgAt||this.exception||this.exceptionCreator||"number"==typeof this.returnArgAt||this.returnThis||"number"==typeof this.resolveArgAt||this.resolveThis||"number"==typeof this.throwArgAt||this.fakeFn||this.returnValueDefined},invoke:function(e,n){var t=callCallback(this,n);if(this.exception)throw this.exception;if(this.exceptionCreator)throw this.exception=this.exceptionCreator(),this.exceptionCreator=void 0,this.exception;if("number"==typeof this.returnArgAt)return ensureArgs("returnsArg",this,n),n[this.returnArgAt];if(this.returnThis)return e;if("number"==typeof this.throwArgAt)throw ensureArgs("throwsArg",this,n),n[this.throwArgAt];return this.fakeFn?this.fakeFn.apply(e,n):"number"==typeof this.resolveArgAt?(ensureArgs("resolvesArg",this,n),(this.promiseLibrary||Promise).resolve(n[this.resolveArgAt])):this.resolveThis?(this.promiseLibrary||Promise).resolve(e):this.resolve?(this.promiseLibrary||Promise).resolve(this.returnValue):this.reject?(this.promiseLibrary||Promise).reject(this.returnValue):this.callsThrough?this.stub.wrappedMethod.apply(e,n):void 0!==this.returnValue?this.returnValue:"number"==typeof this.callArgAt?t:this.returnValue},onCall:function(e){return this.stub.onCall(e)},onFirstCall:function(){return this.stub.onFirstCall()},onSecondCall:function(){return this.stub.onSecondCall()},onThirdCall:function(){return this.stub.onThirdCall()},withArgs:function(){throw new Error('Defining a stub by invoking "stub.onCall(...).withArgs(...)" is not supported. Use "stub.withArgs(...).onCall(...)" to define sequential behavior for calls with certain arguments.')}};function createBehavior(e){return function(){return this.defaultBehavior=this.defaultBehavior||proto.create(this),this.defaultBehavior[e].apply(this.defaultBehavior,arguments),this}}function addBehavior(e,n,t){proto[n]=function(){return t.apply(this,concat([this],slice$2(arguments))),this.stub||this},e[n]=createBehavior(n)}proto.addBehavior=addBehavior,proto.createBehavior=createBehavior;var asyncBehaviors=exportAsyncBehaviors(proto),behavior=extend({},proto,asyncBehaviors),forEach=lib.prototypes.array.forEach;function walkInternal(e,n,t,l,r){var i,a;if("function"==typeof Object.getOwnPropertyNames)forEach(Object.getOwnPropertyNames(e),(function(i){if(!0!==r[i]){r[i]=!0;var a="function"==typeof Object.getOwnPropertyDescriptor(e,i).get?l:e;n.call(t,i,a)}})),(i=Object.getPrototypeOf(e))&&walkInternal(i,n,t,l,r);else for(a in e)n.call(t,e[a],a,e)}var walk=function(e,n,t){return walkInternal(e,n,t,e,{})},getPropertyDescriptor=function(e,n){for(var t,l=e;l&&!(t=Object.getOwnPropertyDescriptor(l,n));)l=Object.getPrototypeOf(l);return t},hasOwnProperty$1=lib.prototypes.object.hasOwnProperty,push$1=lib.prototypes.array.push;function collectMethod(e,n,t,l){"function"==typeof getPropertyDescriptor(l,t).value&&hasOwnProperty$1(n,t)&&push$1(e,n[t])}function collectOwnMethods(e){var n=[];return walk(e,collectMethod.bind(null,n,e)),n}var collectOwnMethods_1=collectOwnMethods,isEsModule=function(e){return e&&"undefined"!=typeof Symbol&&"Module"===e[Symbol.toStringTag]&&Object.isSealed(e)};function isPropertyConfigurable(e,n){var t=getPropertyDescriptor(e,n);return!t||t.configurable}var isPropertyConfigurable_1=isPropertyConfigurable;function isNonExistentOwnProperty(e,n){return e&&void 0!==n&&!(n in e)}var isNonExistentOwnProperty_1=isNonExistentOwnProperty,o=Object.prototype;function getClass(e){return o.toString.call(e).split(/[ \]]/)[1]}var getClass_1=getClass;function isNaN$1(e){return"number"==typeof e&&e!=e}var isNan=isNaN$1;function isNegZero(e){return 0===e&&1/e==-1/0}var isNegZero_1=isNegZero;function identical(e,n){return!!(e===n||isNan(e)&&isNan(n))&&(0!==e||isNegZero_1(e)===isNegZero_1(n))}var identical_1=identical;function isArguments(e){if("Arguments"===getClass_1(e))return!0;if("object"!=typeof e||"number"!=typeof e.length||"Array"===getClass_1(e))return!1;if("function"==typeof e.callee)return!0;try{e[e.length]=6,delete e[e.length]}catch(e){return!0}return!1}var isArguments_1=isArguments;function isDate(e){return e instanceof Date}var isDate_1=isDate,div="undefined"!=typeof document&&document.createElement("div");function isElement(e){if(!e||1!==e.nodeType||!div)return!1;try{e.appendChild(div),e.removeChild(div)}catch(e){return!1}return!0}var isElement_1=isElement;function isObject(e){return!("object"!=typeof e||null===e||e instanceof Boolean||e instanceof Date||e instanceof Error||e instanceof Number||e instanceof RegExp||e instanceof String)}var isObject_1=isObject;function isSet(e){return"undefined"!=typeof Set&&e instanceof Set||!1}var isSet_1=isSet;function isSubset(e,n,t){var l=!0;return e.forEach((function(e){var r=!1;n.forEach((function(n){t(n,e)&&(r=!0)})),l=l&&r})),l}var isSubset_1=isSubset,re=/function (\w+)\s*\(/;function getClassName(e){if(e.constructor&&"name"in e.constructor)return e.constructor.name;if("function"==typeof e.constructor){var n=e.constructor.toString().match(re);if(n.length>1)return n[1]}return null}var getClassName_1=getClassName,every$2=Array.prototype.every,getTime=Date.prototype.getTime,hasOwnProperty$2=Object.prototype.hasOwnProperty,indexOf=Array.prototype.indexOf,keys=Object.keys;function deepEqualCyclic(e,n){var t=[],l=[],r=[],i=[],a={};return function e(n,o,u,s){var c=typeof n,d=typeof o;if(n===o||isNan(n)||isNan(o)||null==n||null==o||"object"!==c||"object"!==d)return identical_1(n,o);if(isElement_1(n)||isElement_1(o))return!1;var p=isDate_1(n),f=isDate_1(o);if((p||f)&&(!p||!f||getTime.call(n)!==getTime.call(o)))return!1;if(n instanceof RegExp&&o instanceof RegExp&&n.toString()!==o.toString())return!1;if(n instanceof Error&&o instanceof Error&&(n.constructor!==o.constructor||n.message!==o.message||n.stack!==o.stack))return!1;var h=getClass_1(n),m=getClass_1(o),b=keys(n),g=keys(o),M=getClassName_1(n),y=getClassName_1(o);if(isArguments_1(n)||isArguments_1(o)){if(n.length!==o.length)return!1}else if(c!==d||h!==m||b.length!==g.length||M&&y&&M!==y)return!1;return isSet_1(n)||isSet_1(o)?!(!isSet_1(n)||!isSet_1(o)||n.size!==o.size)&&isSubset_1(n,o,e):every$2.call(b,(function(c){if(!hasOwnProperty$2.call(o,c))return!1;var d=n[c],p=o[c],f=isObject_1(d),h=isObject_1(p),m=f?indexOf.call(t,d):-1,b=h?indexOf.call(l,p):-1,g=-1!==m?r[m]:u+"["+JSON.stringify(c)+"]",M=-1!==b?i[b]:s+"["+JSON.stringify(c)+"]",y=g+M;return!!a[y]||(-1===m&&f&&(t.push(d),r.push(g)),-1===b&&h&&(l.push(p),i.push(M)),f&&h&&(a[y]=!0),e(d,p,g,M))}))}(e,n,"$1","$2")}var deepEqual=deepEqualCyclic;function arrayContains(e,n,t){if(0===n.length)return!0;var l,r,i,a;for(l=0,r=e.length;l<r;++l)if(t(e[l],n[0])){for(i=0,a=n.length;i<a;++i){if(l+i>=r)return!1;if(!t(e[l+i],n[i]))return!1}return!0}return!1}function match(e,n){if(n&&"function"==typeof n.test)return n.test(e);if("function"==typeof n)return!0===n(e);if("string"==typeof n)return n=n.toLowerCase(),("string"==typeof e||!!e)&&String(e).toLowerCase().indexOf(n)>=0;if("number"==typeof n)return n===e;if("boolean"==typeof n)return n===e;if(void 0===n)return void 0===e;if(null===n)return null===e;if(isSet_1(e))return isSubset_1(n,e,match);if("Array"===getClass_1(e)&&"Array"===getClass_1(n))return arrayContains(e,n,match);if(isDate_1(n))return isDate_1(e)&&e.getTime()===n.getTime();if(n&&"object"==typeof n){if(n===e)return!0;var t;for(t in n){var l=e[t];if(void 0===l&&"function"==typeof e.getAttribute&&(l=e.getAttribute(t)),null===n[t]||void 0===n[t]){if(l!==n[t])return!1}else if(void 0===l||!match(l,n[t]))return!1}return!0}throw new Error("Matcher was not a string, a number, a function, a boolean or an object")}var match_1=match,samsam={isArguments:isArguments_1,isElement:isElement_1,isNegZero:isNegZero_1,identical:identical_1,deepEqual,match:match_1},deepEqual_1=createCommonjsModule((function(e){var n=lib.prototypes.array,t=lib.prototypes.object.toString,l=n.every,r=n.join,i=n.sort;function a(e){return e!=e}var o=e.exports=function(e,n,o){if(null===e&&null===n)return!0;if("object"!=typeof e||"object"!=typeof n)return a(e)&&a(n)||e===n;if(e instanceof Error&&n instanceof Error)return e===n;if(t(e)!==t(n))return!1;if(r(i(Object.keys(e)))!==r(i(Object.keys(n))))return!1;if(samsam.deepEqual(e,n))return!0;if(o){var u=Object.keys(e),s=l(u,(function(t){return o(e[t],n[t])}));return u.length>0&&s}return!1};o.use=function(e){return function n(t,l){return e.isMatcher(t)?e.isMatcher(l)?t===l:t.test(l):o(t,l,n)}}})),every$3=function(e,n){var t=!0;try{e.forEach((function(){if(!n.apply(this,arguments))throw new Error}))}catch(e){t=!1}return t},FUNC_ERROR_TEXT="Expected a function",HASH_UNDEFINED="__lodash_hash_undefined__",INFINITY=1/0,funcTag="[object Function]",genTag="[object GeneratorFunction]",symbolTag="[object Symbol]",reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,reLeadingDot=/^\./,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reEscapeChar=/\\(\\)?/g,reIsHostCtor=/^\[object .+?Constructor\]$/,freeGlobal="object"==typeof commonjsGlobal&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,freeSelf="object"==typeof self&&self&&self.Object===Object&&self,root$1=freeGlobal||freeSelf||Function("return this")();function getValue(e,n){return null==e?void 0:e[n]}function isHostObject(e){var n=!1;if(null!=e&&"function"!=typeof e.toString)try{n=!!(e+"")}catch(e){}return n}var arrayProto$3=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype,coreJsData=root$1["__core-js_shared__"],maskSrcKey=(uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||""),uid?"Symbol(src)_1."+uid:""),uid,funcToString=funcProto.toString,hasOwnProperty$3=objectProto.hasOwnProperty,objectToString=objectProto.toString,reIsNative=RegExp("^"+funcToString.call(hasOwnProperty$3).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Symbol$1=root$1.Symbol,splice=arrayProto$3.splice,Map$1=getNative(root$1,"Map"),nativeCreate=getNative(Object,"create"),symbolProto=Symbol$1?Symbol$1.prototype:void 0,symbolToString=symbolProto?symbolProto.toString:void 0;function Hash(e){var n=-1,t=e?e.length:0;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{}}function hashDelete(e){return this.has(e)&&delete this.__data__[e]}function hashGet(e){var n=this.__data__;if(nativeCreate){var t=n[e];return t===HASH_UNDEFINED?void 0:t}return hasOwnProperty$3.call(n,e)?n[e]:void 0}function hashHas(e){var n=this.__data__;return nativeCreate?void 0!==n[e]:hasOwnProperty$3.call(n,e)}function hashSet(e,n){return this.__data__[e]=nativeCreate&&void 0===n?HASH_UNDEFINED:n,this}function ListCache(e){var n=-1,t=e?e.length:0;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}function listCacheClear(){this.__data__=[]}function listCacheDelete(e){var n=this.__data__,t=assocIndexOf(n,e);return!(t<0||(t==n.length-1?n.pop():splice.call(n,t,1),0))}function listCacheGet(e){var n=this.__data__,t=assocIndexOf(n,e);return t<0?void 0:n[t][1]}function listCacheHas(e){return assocIndexOf(this.__data__,e)>-1}function listCacheSet(e,n){var t=this.__data__,l=assocIndexOf(t,e);return l<0?t.push([e,n]):t[l][1]=n,this}function MapCache(e){var n=-1,t=e?e.length:0;for(this.clear();++n<t;){var l=e[n];this.set(l[0],l[1])}}function mapCacheClear(){this.__data__={hash:new Hash,map:new(Map$1||ListCache),string:new Hash}}function mapCacheDelete(e){return getMapData(this,e).delete(e)}function mapCacheGet(e){return getMapData(this,e).get(e)}function mapCacheHas(e){return getMapData(this,e).has(e)}function mapCacheSet(e,n){return getMapData(this,e).set(e,n),this}function assocIndexOf(e,n){for(var t=e.length;t--;)if(eq(e[t][0],n))return t;return-1}function baseGet(e,n){for(var t=0,l=(n=isKey(n,e)?[n]:castPath(n)).length;null!=e&&t<l;)e=e[toKey(n[t++])];return t&&t==l?e:void 0}function baseIsNative(e){return!(!isObject$1(e)||isMasked(e))&&(isFunction(e)||isHostObject(e)?reIsNative:reIsHostCtor).test(toSource(e))}function baseToString(e){if("string"==typeof e)return e;if(isSymbol(e))return symbolToString?symbolToString.call(e):"";var n=e+"";return"0"==n&&1/e==-INFINITY?"-0":n}function castPath(e){return isArray(e)?e:stringToPath(e)}function getMapData(e,n){var t=e.__data__;return isKeyable(n)?t["string"==typeof n?"string":"hash"]:t.map}function getNative(e,n){var t=getValue(e,n);return baseIsNative(t)?t:void 0}function isKey(e,n){if(isArray(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!isSymbol(e))||reIsPlainProp.test(e)||!reIsDeepProp.test(e)||null!=n&&e in Object(n)}function isKeyable(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}function isMasked(e){return!!maskSrcKey&&maskSrcKey in e}Hash.prototype.clear=hashClear,Hash.prototype.delete=hashDelete,Hash.prototype.get=hashGet,Hash.prototype.has=hashHas,Hash.prototype.set=hashSet,ListCache.prototype.clear=listCacheClear,ListCache.prototype.delete=listCacheDelete,ListCache.prototype.get=listCacheGet,ListCache.prototype.has=listCacheHas,ListCache.prototype.set=listCacheSet,MapCache.prototype.clear=mapCacheClear,MapCache.prototype.delete=mapCacheDelete,MapCache.prototype.get=mapCacheGet,MapCache.prototype.has=mapCacheHas,MapCache.prototype.set=mapCacheSet;var stringToPath=memoize((function(e){e=toString(e);var n=[];return reLeadingDot.test(e)&&n.push(""),e.replace(rePropName,(function(e,t,l,r){n.push(l?r.replace(reEscapeChar,"$1"):t||e)})),n}));function toKey(e){if("string"==typeof e||isSymbol(e))return e;var n=e+"";return"0"==n&&1/e==-INFINITY?"-0":n}function toSource(e){if(null!=e){try{return funcToString.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function memoize(e,n){if("function"!=typeof e||n&&"function"!=typeof n)throw new TypeError(FUNC_ERROR_TEXT);var t=function(){var l=arguments,r=n?n.apply(this,l):l[0],i=t.cache;if(i.has(r))return i.get(r);var a=e.apply(this,l);return t.cache=i.set(r,a),a};return t.cache=new(memoize.Cache||MapCache),t}function eq(e,n){return e===n||e!=e&&n!=n}memoize.Cache=MapCache;var isArray=Array.isArray;function isFunction(e){var n=isObject$1(e)?objectToString.call(e):"";return n==funcTag||n==genTag}function isObject$1(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function isObjectLike(e){return!!e&&"object"==typeof e}function isSymbol(e){return"symbol"==typeof e||isObjectLike(e)&&objectToString.call(e)==symbolTag}function toString(e){return null==e?"":baseToString(e)}function get(e,n,t){var l=null==e?void 0:baseGet(e,n);return void 0===l?t:l}var lodash_get=get,typeOf$1=function(e){return typeDetect(e).toLowerCase()},slice$3=lib.prototypes.string.slice,iterableToString=function(e){var n="";function t(e){return"string"==typeof e?"'"+e+"'":String(e)}return"map"===typeOf$1(e)?function(e){return e.forEach((function(e,l){n+="["+t(l)+","+t(e)+"],"})),n=slice$3(n,0,-1)}(e):(e.forEach((function(e){n+=t(e)+","})),n=slice$3(n,0,-1))},arrayProto$4=lib.prototypes.array,deepEqual$1=deepEqual_1.use(match$1),functionName$2=lib.functionName,objectProto$1=lib.prototypes.object,stringProto=lib.prototypes.string,valueToString$2=lib.valueToString,arrayIndexOf=arrayProto$4.indexOf,arrayEvery=arrayProto$4.every,join$2=arrayProto$4.join,map=arrayProto$4.map,some=arrayProto$4.some,hasOwnProperty$4=objectProto$1.hasOwnProperty,isPrototypeOf=objectProto$1.isPrototypeOf,stringIndexOf=stringProto.indexOf;function assertType(e,n,t){var l=typeOf$1(e);if(l!==n)throw new TypeError("Expected type of "+t+" to be "+n+", but was "+l)}function assertMethodExists(e,n,t,l){if(void 0===e[n])throw new TypeError("Expected "+t+" to have method "+l)}var matcher={toString:function(){return this.message}};function isMatcher(e){return isPrototypeOf(matcher,e)}function matchObject(e,n){return null!=n&&arrayEvery(Object.keys(e),(function(t){var l=e[t],r=n[t];if(isMatcher(l)){if(!l.test(r))return!1}else if("object"===typeOf$1(l)){if(!matchObject(l,r))return!1}else if(!deepEqual$1(l,r))return!1;return!0}))}var TYPE_MAP={function:function(e,n,t){e.test=n,e.message=t||"match("+functionName$2(n)+")"},number:function(e,n){e.test=function(e){return n==e}},object:function(e,n){var t;return"function"==typeof n.test?(e.test=function(e){return!0===n.test(e)},e.message="match("+functionName$2(n.test)+")",e):(t=map(Object.keys(n),(function(e){return e+": "+valueToString$2(n[e])})),e.test=function(e){return matchObject(n,e)},e.message="match("+join$2(t,", ")+")",e)},regexp:function(e,n){e.test=function(e){return"string"==typeof e&&n.test(e)}},string:function(e,n){e.test=function(e){return"string"==typeof e&&-1!==stringIndexOf(e,n)},e.message='match("'+n+'")'}};function match$1(e,n){var t=Object.create(matcher),l=typeOf$1(e);return l in TYPE_MAP?TYPE_MAP[l](t,e,n):t.test=function(n){return deepEqual$1(e,n)},t.message||(t.message="match("+valueToString$2(e)+")"),t}function createPropertyMatcher(e,n){return function(t,l){assertType(t,"string","property");var r=1===arguments.length,i=n+'("'+t+'"';return r||(i+=", "+valueToString$2(l)),match$1((function(n){return!(null==n||!e(n,t))&&(r||deepEqual$1(l,n[t]))}),i+=")")}}matcher.or=function(e){var n=e;if(!arguments.length)throw new TypeError("Matcher expected");isMatcher(e)||(n=match$1(e));var t=this,l=Object.create(matcher);return l.test=function(e){return t.test(e)||n.test(e)},l.message=t.message+".or("+n.message+")",l},matcher.and=function(e){var n=e;if(!arguments.length)throw new TypeError("Matcher expected");isMatcher(e)||(n=match$1(e));var t=this,l=Object.create(matcher);return l.test=function(e){return t.test(e)&&n.test(e)},l.message=t.message+".and("+n.message+")",l},match$1.isMatcher=isMatcher,match$1.any=match$1((function(){return!0}),"any"),match$1.defined=match$1((function(e){return null!=e}),"defined"),match$1.truthy=match$1((function(e){return Boolean(e)}),"truthy"),match$1.falsy=match$1((function(e){return!e}),"falsy"),match$1.same=function(e){return match$1((function(n){return e===n}),"same("+valueToString$2(e)+")")},match$1.in=function(e){if(!Array.isArray(e))throw new TypeError("array expected");return match$1((function(n){return some(e,(function(e){return e===n}))}),"in("+valueToString$2(e)+")")},match$1.typeOf=function(e){return assertType(e,"string","type"),match$1((function(n){return typeOf$1(n)===e}),'typeOf("'+e+'")')},match$1.instanceOf=function(e){return"undefined"==typeof Symbol||void 0===Symbol.hasInstance?assertType(e,"function","type"):assertMethodExists(e,Symbol.hasInstance,"type","[Symbol.hasInstance]"),match$1((function(n){return n instanceof e}),"instanceOf("+(functionName$2(e)||Object.prototype.toString.call(e))+")")},match$1.has=createPropertyMatcher((function(e,n){return"object"==typeof e?n in e:void 0!==e[n]}),"has"),match$1.hasOwn=createPropertyMatcher((function(e,n){return hasOwnProperty$4(e,n)}),"hasOwn"),match$1.hasNested=function(e,n){assertType(e,"string","property");var t=1===arguments.length,l='hasNested("'+e+'"';return t||(l+=", "+valueToString$2(n)),match$1((function(l){return null!=l&&void 0!==lodash_get(l,e)&&(t||deepEqual$1(n,lodash_get(l,e)))}),l+=")")},match$1.every=function(e){if(!isMatcher(e))throw new TypeError("Matcher expected");return match$1((function(n){return"object"===typeOf$1(n)?every$3(Object.keys(n),(function(t){return e.test(n[t])})):Boolean(n)&&"function"===typeOf$1(n.forEach)&&every$3(n,(function(n){return e.test(n)}))}),"every("+e.message+")")},match$1.some=function(e){if(!isMatcher(e))throw new TypeError("Matcher expected");return match$1((function(n){return"object"===typeOf$1(n)?!every$3(Object.keys(n),(function(t){return!e.test(n[t])})):Boolean(n)&&"function"===typeOf$1(n.forEach)&&!every$3(n,(function(n){return!e.test(n)}))}),"some("+e.message+")")},match$1.array=match$1.typeOf("array"),match$1.array.deepEquals=function(e){return match$1((function(n){var t=n.length===e.length;return"array"===typeOf$1(n)&&t&&every$3(n,(function(n,t){return e[t]===n}))}),"deepEquals(["+iterableToString(e)+"])")},match$1.array.startsWith=function(e){return match$1((function(n){return"array"===typeOf$1(n)&&every$3(e,(function(e,t){return n[t]===e}))}),"startsWith(["+iterableToString(e)+"])")},match$1.array.endsWith=function(e){return match$1((function(n){var t=n.length-e.length;return"array"===typeOf$1(n)&&every$3(e,(function(e,l){return n[t+l]===e}))}),"endsWith(["+iterableToString(e)+"])")},match$1.array.contains=function(e){return match$1((function(n){return"array"===typeOf$1(n)&&every$3(e,(function(e){return-1!==arrayIndexOf(n,e)}))}),"contains(["+iterableToString(e)+"])")},match$1.map=match$1.typeOf("map"),match$1.map.deepEquals=function(e){return match$1((function(n){var t=n.size===e.size;return"map"===typeOf$1(n)&&t&&every$3(n,(function(n,t){return e.has(t)&&e.get(t)===n}))}),"deepEquals(Map["+iterableToString(e)+"])")},match$1.map.contains=function(e){return match$1((function(n){return"map"===typeOf$1(n)&&every$3(e,(function(e,t){return n.has(t)&&n.get(t)===e}))}),"contains(Map["+iterableToString(e)+"])")},match$1.set=match$1.typeOf("set"),match$1.set.deepEquals=function(e){return match$1((function(n){var t=n.size===e.size;return"set"===typeOf$1(n)&&t&&every$3(n,(function(n){return e.has(n)}))}),"deepEquals(Set["+iterableToString(e)+"])")},match$1.set.contains=function(e){return match$1((function(n){return"set"===typeOf$1(n)&&every$3(e,(function(e){return n.has(e)}))}),"contains(Set["+iterableToString(e)+"])")},match$1.bool=match$1.typeOf("boolean"),match$1.number=match$1.typeOf("number"),match$1.string=match$1.typeOf("string"),match$1.object=match$1.typeOf("object"),match$1.func=match$1.typeOf("function"),match$1.regexp=match$1.typeOf("regexp"),match$1.date=match$1.typeOf("date"),match$1.symbol=match$1.typeOf("symbol");var match_1$1=match$1,array$1=[null,"once","twice","thrice"],timesInWords=function(e){return array$1[e]||(e||0)+" times"},o$1=Object.prototype;function getClass$1(e){return o$1.toString.call(e).split(/[ \]]/)[1]}var getClass_1$1=getClass$1;function isNaN$2(e){return"number"==typeof e&&e!=e}var isNan$1=isNaN$2;function isNegZero$1(e){return 0===e&&1/e==-1/0}var isNegZero_1$1=isNegZero$1;function identical$1(e,n){return!!(e===n||isNan$1(e)&&isNan$1(n))&&(0!==e||isNegZero_1$1(e)===isNegZero_1$1(n))}var identical_1$1=identical$1;function isArguments$1(e){if("Arguments"===getClass_1$1(e))return!0;if("object"!=typeof e||"number"!=typeof e.length||"Array"===getClass_1$1(e))return!1;if("function"==typeof e.callee)return!0;try{e[e.length]=6,delete e[e.length]}catch(e){return!0}return!1}var isArguments_1$1=isArguments$1;function isDate$1(e){return e instanceof Date}var isDate_1$1=isDate$1,div$1="undefined"!=typeof document&&document.createElement("div");function isElement$1(e){if(!e||1!==e.nodeType||!div$1)return!1;try{e.appendChild(div$1),e.removeChild(div$1)}catch(e){return!1}return!0}var isElement_1$1=isElement$1;function isObject$2(e){return!("object"!=typeof e||null===e||e instanceof Boolean||e instanceof Date||e instanceof Error||e instanceof Number||e instanceof RegExp||e instanceof String)}var isObject_1$1=isObject$2;function isSet$1(e){return"undefined"!=typeof Set&&e instanceof Set||!1}var isSet_1$1=isSet$1,polyfill=(isCallable=function(e){return"function"==typeof e},maxSafeInteger=Math.pow(2,53)-1,toLength=function(e){var n=function(e){var n=Number(e);return isNaN(n)?0:0!==n&&isFinite(n)?(n>0?1:-1)*Math.floor(Math.abs(n)):n}(e);return Math.min(Math.max(n,0),maxSafeInteger)},iteratorProp=function(e){if(null!=e){if(["string","number","boolean","symbol"].indexOf(typeof e)>-1)return Symbol.iterator;if("undefined"!=typeof Symbol&&"iterator"in Symbol&&Symbol.iterator in e)return Symbol.iterator;if("@@iterator"in e)return"@@iterator"}},getMethod=function(e,n){if(null!=e&&null!=n){var t=e[n];if(null==t)return;if(!isCallable(t))throw new TypeError(t+" is not a function");return t}},iteratorStep=function(e){var n=e.next();return!Boolean(n.done)&&n},function(e){var n,t,l,r=this,i=arguments.length>1?arguments[1]:void 0;if(void 0!==i){if(!isCallable(i))throw new TypeError("Array.from: when provided, the second argument must be a function");arguments.length>2&&(n=arguments[2])}var a=getMethod(e,iteratorProp(e));if(void 0!==a){t=isCallable(r)?Object(new r):[];var o,u,s=a.call(e);if(null==s)throw new TypeError("Array.from requires an array-like or iterable object");for(l=0;;){if(!(o=iteratorStep(s)))return t.length=l,t;u=o.value,t[l]=i?i.call(n,u,l):u,l++}}else{var c=Object(e);if(null==e)throw new TypeError("Array.from requires an array-like object - not null or undefined");var d,p=toLength(c.length);for(t=isCallable(r)?Object(new r(p)):new Array(p),l=0;l<p;)d=c[l],t[l]=i?i.call(n,d,l):d,l++;t.length=p}return t}),isCallable,maxSafeInteger,toLength,iteratorProp,getMethod,iteratorStep,arrayFrom="function"==typeof Array.from?Array.from:polyfill;function isSubset$1(e,n,t){for(var l=arrayFrom(e),r=arrayFrom(n),i=0;i<l.length;i++){for(var a=!1,o=0;o<r.length;o++)if(t(r[o],l[i])){a=!0;break}if(!a)return!1}return!0}var isSubset_1$1=isSubset$1;function getClassName$1(e){return Object.getPrototypeOf(e)?e.constructor.name:null}var getClassName_1$1=getClassName$1,every$4=Array.prototype.every,getTime$1=Date.prototype.getTime,hasOwnProperty$5=Object.prototype.hasOwnProperty,indexOf$1=Array.prototype.indexOf,keys$1=Object.keys;function deepEqualCyclic$1(e,n){var t=[],l=[],r=[],i=[],a={};return function e(n,o,u,s){var c=typeof n,d=typeof o;if(n===o||isNan$1(n)||isNan$1(o)||null==n||null==o||"object"!==c||"object"!==d)return identical_1$1(n,o);if(isElement_1$1(n)||isElement_1$1(o))return!1;var p=isDate_1$1(n),f=isDate_1$1(o);if((p||f)&&(!p||!f||getTime$1.call(n)!==getTime$1.call(o)))return!1;if(n instanceof RegExp&&o instanceof RegExp&&n.toString()!==o.toString())return!1;if(n instanceof Error&&o instanceof Error&&n.stack!==o.stack)return!1;var h=getClass_1$1(n),m=getClass_1$1(o),b=keys$1(n),g=keys$1(o),M=getClassName_1$1(n),y=getClassName_1$1(o);if(isArguments_1$1(n)||isArguments_1$1(o)){if(n.length!==o.length)return!1}else if(c!==d||h!==m||b.length!==g.length||M&&y&&M!==y)return!1;return isSet_1$1(n)||isSet_1$1(o)?!(!isSet_1$1(n)||!isSet_1$1(o)||n.size!==o.size)&&isSubset_1$1(n,o,e):every$4.call(b,(function(c){if(!hasOwnProperty$5.call(o,c))return!1;var d=n[c],p=o[c],f=isObject_1$1(d),h=isObject_1$1(p),m=f?indexOf$1.call(t,d):-1,b=h?indexOf$1.call(l,p):-1,g=-1!==m?r[m]:u+"["+JSON.stringify(c)+"]",M=-1!==b?i[b]:s+"["+JSON.stringify(c)+"]",y=g+M;return!!a[y]||(-1===m&&f&&(t.push(d),r.push(g)),-1===b&&h&&(l.push(p),i.push(M)),f&&h&&(a[y]=!0),e(d,p,g,M))}))}(e,n,"$1","$2")}var deepEqual$2=deepEqualCyclic$1;function arrayContains$1(e,n,t){if(0===n.length)return!0;var l,r,i,a;for(l=0,r=e.length;l<r;++l)if(t(e[l],n[0])){for(i=0,a=n.length;i<a;++i){if(l+i>=r)return!1;if(!t(e[l+i],n[i]))return!1}return!0}return!1}function match$2(e,n){if(n&&"function"==typeof n.test)return n.test(e);if("function"==typeof n)return!0===n(e);if("string"==typeof n)return n=n.toLowerCase(),("string"==typeof e||!!e)&&String(e).toLowerCase().indexOf(n)>=0;if("number"==typeof n)return n===e;if("boolean"==typeof n)return n===e;if(void 0===n)return void 0===e;if(null===n)return null===e;if(isSet_1$1(e))return isSubset_1$1(n,e,match$2);if("Array"===getClass_1$1(e)&&"Array"===getClass_1$1(n))return arrayContains$1(e,n,match$2);if(isDate_1$1(n))return isDate_1$1(e)&&e.getTime()===n.getTime();if(n&&"object"==typeof n){if(n===e)return!0;var t;for(t in n){var l=e[t];if(void 0===l&&"function"==typeof e.getAttribute&&(l=e.getAttribute(t)),null===n[t]||void 0===n[t]){if(l!==n[t])return!1}else if(void 0===l||!match$2(l,n[t]))return!1}return!0}throw new Error("Matcher was not a string, a number, a function, a boolean or an object")}var match_1$2=match$2,samsam$1={isArguments:isArguments_1$1,isElement:isElement_1$1,isNegZero:isNegZero_1$1,identical:identical_1$1,deepEqual:deepEqual$2,match:match_1$2},formatio={excludeConstructors:["Object",/^.$/],quoteStrings:!0,limitChildrenCount:0},specialObjects=[];function functionName$3(e){if(!e)return"";if(e.displayName)return e.displayName;if(e.name)return e.name;var n=e.toString().match(/function\s+([^\(]+)/m);return n&&n[1]||""}function constructorName(e,n){var t,l,r=functionName$3(n&&n.constructor),i=e.excludeConstructors||formatio.excludeConstructors||[];for(t=0,l=i.length;t<l;++t){if("string"==typeof i[t]&&i[t]===r)return"";if(i[t].test&&i[t].test(r))return""}return r}function isCircular(e,n){if("object"!=typeof e)return!1;var t,l;for(t=0,l=n.length;t<l;++t)if(n[t]===e)return!0;return!1}function ascii(e,n,t,l){if("string"==typeof n){if(0===n.length)return"(empty string)";var r=e.quoteStrings;return t||"boolean"!=typeof r||r?'"'+n+'"':n}if("function"==typeof n&&!(n instanceof RegExp))return ascii.func(n);if(isCircular(n,t=t||[]))return"[Circular]";if("[object Array]"===Object.prototype.toString.call(n))return ascii.array.call(e,n,t);if(!n)return String(1/n==-1/0?"-0":n);if(samsam$1.isElement(n))return ascii.element(n);if("function"==typeof n.toString&&n.toString!==Object.prototype.toString)return n.toString();var i,a;for(i=0,a=specialObjects.length;i<a;i++)if(n===specialObjects[i].object)return specialObjects[i].value;return"undefined"!=typeof Set&&n instanceof Set?ascii.set.call(e,n,t):ascii.object.call(e,n,t,l)}function delimit(e,n){return(n=n||["[","]"])[0]+e+n[1]}function Formatio(e){for(var n in e)this[n]=e[n]}void 0!==commonjsGlobal&&specialObjects.push({object:commonjsGlobal,value:"[object global]"}),"undefined"!=typeof document&&specialObjects.push({object:document,value:"[object HTMLDocument]"}),"undefined"!=typeof window&&specialObjects.push({object:window,value:"[object Window]"}),ascii.func=function(e){return"function "+functionName$3(e)+"() {}"},ascii.array=function(e,n,t){(n=n||[]).push(e);var l,r,i=[];for(r=this.limitChildrenCount>0?Math.min(this.limitChildrenCount,e.length):e.length,l=0;l<r;++l)i.push(ascii(this,e[l],n));return r<e.length&&i.push("[... "+(e.length-r)+" more elements]"),delimit(i.join(", "),t)},ascii.set=function(e,n){return ascii.array.call(this,Array.from(e),n,["Set {","}"])},ascii.object=function(e,n,t){(n=n||[]).push(e),t=t||0;var l,r,i,a,o,u,s=[],c=Object.keys(e).sort(),d=3;for(u=this.limitChildrenCount>0?Math.min(this.limitChildrenCount,c.length):c.length,a=0;a<u;++a)r=isCircular(i=e[l=c[a]],n)?"[Circular]":ascii(this,i,n,t+2),d+=(r=(/\s/.test(l)?'"'+l+'"':l)+": "+r).length,s.push(r);var p=constructorName(this,e),f=p?"["+p+"] ":"",h="";for(a=0,o=t;a<o;++a)h+=" ";return u<c.length&&s.push("[... "+(c.length-u)+" more elements]"),d+t>80?f+"{\n  "+h+s.join(",\n  "+h)+"\n"+h+"}":f+"{ "+s.join(", ")+" }"},ascii.element=function(e){var n,t,l,r,i,a=e.tagName.toLowerCase(),o=e.attributes,u=[];for(l=0,r=o.length;l<r;++l)t=(n=o.item(l)).nodeName.toLowerCase().replace("html:",""),i=n.nodeValue,"contenteditable"===t&&"inherit"===i||i&&u.push(t+'="'+i+'"');var s="<"+a+(u.length>0?" ":""),c=e.innerHTML||"";return c.length>20&&(c=c.substr(0,20)+"[...]"),(s+u.join(" ")+">"+c+"</"+a+">").replace(/ contentEditable="inherit"/,"")},Formatio.prototype={functionName:functionName$3,configure:function(e){return new Formatio(e)},constructorName:function(e){return constructorName(this,e)},ascii:function(e,n,t){return ascii(this,e,n,t)}};var formatio_1=Formatio.prototype,formatter=formatio_1.configure({quoteStrings:!1,limitChildrenCount:250}),customFormatter;function format(){return customFormatter?customFormatter.apply(null,arguments):formatter.ascii.apply(formatter,arguments)}format.setFormatter=function(e){if("function"!=typeof e)throw new Error("format.setFormatter must be called with a function");customFormatter=e};var format_1=format,arrayProto$5=lib.prototypes.array,calledInOrder$1=lib.calledInOrder,orderByFirstCall$1=lib.orderByFirstCall,stringSlice=lib.prototypes.string.slice,arraySlice=arrayProto$5.slice,concat$1=arrayProto$5.concat,forEach$1=arrayProto$5.forEach,join$3=arrayProto$5.join,splice$1=arrayProto$5.splice,assert;function verifyIsStub(){var e=arraySlice(arguments);forEach$1(e,(function(e){e||assert.fail("fake is not a spy"),e.proxy&&e.proxy.isSinonProxy?verifyIsStub(e.proxy):("function"!=typeof e&&assert.fail(e+" is not a function"),"function"!=typeof e.getCall&&assert.fail(e+" is not stubbed"))}))}function verifyIsValidAssertion(e,n){switch(e){case"notCalled":case"called":case"calledOnce":case"calledTwice":case"calledThrice":0!==n.length&&assert.fail(e+" takes 1 argument but was called with "+(n.length+1)+" arguments")}}function failAssertion(e,n){var t=e||commonjsGlobal;(t.fail||assert.fail).call(t,n)}function mirrorPropAsAssertion(e,n,t){var l=t,r=n;2===arguments.length&&(l=n,r=e),assert[e]=function(n){verifyIsStub(n);var t=arraySlice(arguments,1);verifyIsValidAssertion(e,t),("function"==typeof r?r(n):"function"==typeof n[r]?n[r].apply(n,t):n[r])?assert.pass(e):failAssertion(this,(n.printf||n.proxy.printf).apply(n,concat$1([l],t)))}}function exposedName(e,n){return!e||/^fail/.test(n)?n:e+stringSlice(n,0,1).toUpperCase()+stringSlice(n,1)}assert={failException:"AssertError",fail:function(e){var n=new Error(e);throw n.name=this.failException||assert.failException,n},pass:function(){},callOrder:function(){verifyIsStub.apply(null,arguments);var e="",n="";if(calledInOrder$1(arguments))assert.pass("callOrder");else{try{e=join$3(arguments,", ");for(var t=arraySlice(arguments),l=t.length;l;)t[--l].called||splice$1(t,l,1);n=join$3(orderByFirstCall$1(t),", ")}catch(e){}failAssertion(this,"expected "+e+" to be called in order but were called as "+n)}},callCount:function(e,n){if(verifyIsStub(e),e.callCount!==n){var t="expected %n to be called "+timesInWords(n)+" but was called %c%C";failAssertion(this,e.printf(t))}else assert.pass("callCount")},expose:function(e,n){if(!e)throw new TypeError("target is null or undefined");var t=n||{},l=void 0===t.prefix?"assert":t.prefix,r=void 0===t.includeFail||Boolean(t.includeFail),i=this;return forEach$1(Object.keys(i),(function(n){"expose"===n||!r&&/^(fail)/.test(n)||(e[exposedName(l,n)]=i[n])})),e},match:function(e,n){if(match_1$1(n).test(e))assert.pass("match");else{var t=["expected value to match","    expected = "+format_1(n),"    actual = "+format_1(e)];failAssertion(this,join$3(t,"\n"))}}},mirrorPropAsAssertion("called","expected %n to have been called at least once but was never called"),mirrorPropAsAssertion("notCalled",(function(e){return!e.called}),"expected %n to not have been called but was called %c%C"),mirrorPropAsAssertion("calledOnce","expected %n to be called once but was called %c%C"),mirrorPropAsAssertion("calledTwice","expected %n to be called twice but was called %c%C"),mirrorPropAsAssertion("calledThrice","expected %n to be called thrice but was called %c%C"),mirrorPropAsAssertion("calledOn","expected %n to be called with %1 as this but was called with %t"),mirrorPropAsAssertion("alwaysCalledOn","expected %n to always be called with %1 as this but was called with %t"),mirrorPropAsAssertion("calledWithNew","expected %n to be called with new"),mirrorPropAsAssertion("alwaysCalledWithNew","expected %n to always be called with new"),mirrorPropAsAssertion("calledWith","expected %n to be called with arguments %D"),mirrorPropAsAssertion("calledWithMatch","expected %n to be called with match %D"),mirrorPropAsAssertion("alwaysCalledWith","expected %n to always be called with arguments %D"),mirrorPropAsAssertion("alwaysCalledWithMatch","expected %n to always be called with match %D"),mirrorPropAsAssertion("calledWithExactly","expected %n to be called with exact arguments %D"),mirrorPropAsAssertion("alwaysCalledWithExactly","expected %n to always be called with exact arguments %D"),mirrorPropAsAssertion("neverCalledWith","expected %n to never be called with arguments %*%C"),mirrorPropAsAssertion("neverCalledWithMatch","expected %n to never be called with match %*%C"),mirrorPropAsAssertion("threw","%n did not throw exception%C"),mirrorPropAsAssertion("alwaysThrew","%n did not always throw exception%C");var assert_1=assert,lolex=createCommonjsModule((function(module,exports){var f;f=function(){return function e(n,t,l){function r(a,o){if(!t[a]){if(!n[a]){var u="function"==typeof commonjsRequire&&commonjsRequire;if(!o&&u)return u(a,!0);if(i)return i(a,!0);var s=new Error("Cannot find module '"+a+"'");throw s.code="MODULE_NOT_FOUND",s}var c=t[a]={exports:{}};n[a][0].call(c.exports,(function(e){return r(n[a][1][e]||e)}),c,c.exports,e,n,t,l)}return t[a].exports}for(var i="function"==typeof commonjsRequire&&commonjsRequire,a=0;a<l.length;a++)r(l[a]);return r}({1:[function(require,module,exports){(function(global){function withGlobal(_global){var userAgent=_global.navigator&&_global.navigator.userAgent,isRunningInIE=userAgent&&userAgent.indexOf("MSIE ")>-1,maxTimeout=Math.pow(2,31)-1;isRunningInIE&&(_global.setTimeout=_global.setTimeout,_global.clearTimeout=_global.clearTimeout,_global.setInterval=_global.setInterval,_global.clearInterval=_global.clearInterval,_global.Date=_global.Date),void 0!==_global.setImmediate&&(_global.setImmediate=_global.setImmediate,_global.clearImmediate=_global.clearImmediate);var NOOP=function(){},timeoutResult=_global.setTimeout(NOOP,0),addTimerReturnsObject="object"==typeof timeoutResult,hrtimePresent=_global.process&&"function"==typeof _global.process.hrtime,nextTickPresent=_global.process&&"function"==typeof _global.process.nextTick,performancePresent=_global.performance&&"function"==typeof _global.performance.now,hasPerformancePrototype=_global.Performance&&(typeof _global.Performance).match(/^(function|object)$/),requestAnimationFramePresent=_global.requestAnimationFrame&&"function"==typeof _global.requestAnimationFrame,cancelAnimationFramePresent=_global.cancelAnimationFrame&&"function"==typeof _global.cancelAnimationFrame;_global.clearTimeout(timeoutResult);var NativeDate=_global.Date,uniqueTimerId=1;function isNumberFinite(e){return Number.isFinite?Number.isFinite(e):"number"==typeof e&&isFinite(e)}function parseTime(e){if(!e)return 0;var n,t=e.split(":"),l=t.length,r=l,i=0;if(l>3||!/^(\d\d:){0,2}\d\d?$/.test(e))throw new Error("tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits");for(;r--;){if((n=parseInt(t[r],10))>=60)throw new Error("Invalid time "+e);i+=n*Math.pow(60,l-r-1)}return 1e3*i}function nanoRemainder(e){var n=1e6,t=1e6*e%n,l=t<0?t+n:t;return Math.floor(l)}function getEpoch(e){if(!e)return 0;if("function"==typeof e.getTime)return e.getTime();if("number"==typeof e)return e;throw new TypeError("now should be milliseconds since UNIX epoch")}function inRange(e,n,t){return t&&t.callAt>=e&&t.callAt<=n}function mirrorDateProperties(e,n){var t;for(t in n)n.hasOwnProperty(t)&&(e[t]=n[t]);return n.now?e.now=function(){return e.clock.now}:delete e.now,n.toSource?e.toSource=function(){return n.toSource()}:delete e.toSource,e.toString=function(){return n.toString()},e.prototype=n.prototype,e.parse=n.parse,e.UTC=n.UTC,e.prototype.toUTCString=n.prototype.toUTCString,e}function createDate(){return mirrorDateProperties((function e(n,t,l,r,i,a,o){switch(arguments.length){case 0:return new NativeDate(e.clock.now);case 1:return new NativeDate(n);case 2:return new NativeDate(n,t);case 3:return new NativeDate(n,t,l);case 4:return new NativeDate(n,t,l,r);case 5:return new NativeDate(n,t,l,r,i);case 6:return new NativeDate(n,t,l,r,i,a);default:return new NativeDate(n,t,l,r,i,a,o)}}),NativeDate)}function enqueueJob(e,n){e.jobs||(e.jobs=[]),e.jobs.push(n)}function runJobs(e){if(e.jobs){for(var n=0;n<e.jobs.length;n++){var t=e.jobs[n];if(t.func.apply(null,t.args),e.loopLimit&&n>e.loopLimit)throw new Error("Aborting after running "+e.loopLimit+" timers, assuming an infinite loop!")}e.jobs=[]}}function addTimer(e,n){if(void 0===n.func)throw new Error("Callback must be provided to timer calls");if(n.type=n.immediate?"Immediate":"Timeout",n.hasOwnProperty("delay")&&(isNumberFinite(n.delay)||(n.delay=0),n.delay=n.delay>maxTimeout?1:n.delay,n.delay=Math.max(0,n.delay)),n.hasOwnProperty("interval")&&(n.type="Interval",n.interval=n.interval>maxTimeout?1:n.interval),n.hasOwnProperty("animation")&&(n.type="AnimationFrame",n.animation=!0),e.timers||(e.timers={}),n.id=uniqueTimerId++,n.createdAt=e.now,n.callAt=e.now+(parseInt(n.delay)||(e.duringTick?1:0)),e.timers[n.id]=n,addTimerReturnsObject){var t={id:n.id,ref:function(){return t},unref:function(){return t},refresh:function(){return t}};return t}return n.id}function compareTimers(e,n){return e.callAt<n.callAt?-1:e.callAt>n.callAt?1:e.immediate&&!n.immediate?-1:!e.immediate&&n.immediate?1:e.createdAt<n.createdAt?-1:e.createdAt>n.createdAt?1:e.id<n.id?-1:e.id>n.id?1:void 0}function firstTimerInRange(e,n,t){var l,r=e.timers,i=null;for(l in r)r.hasOwnProperty(l)&&(!inRange(n,t,r[l])||i&&1!==compareTimers(i,r[l])||(i=r[l]));return i}function firstTimer(e){var n,t=e.timers,l=null;for(n in t)t.hasOwnProperty(n)&&(l&&1!==compareTimers(l,t[n])||(l=t[n]));return l}function lastTimer(e){var n,t=e.timers,l=null;for(n in t)t.hasOwnProperty(n)&&(l&&-1!==compareTimers(l,t[n])||(l=t[n]));return l}function callTimer(clock,timer){"number"==typeof timer.interval?clock.timers[timer.id].callAt+=timer.interval:delete clock.timers[timer.id],"function"==typeof timer.func?timer.func.apply(null,timer.args):eval(timer.func)}function clearTimer(e,n,t){if(n&&(e.timers||(e.timers={}),"object"==typeof n&&(n=n.id),e.timers.hasOwnProperty(n))){var l=e.timers[n];if(l.type!==t){var r="AnimationFrame"===t?"cancelAnimationFrame":"clear"+t,i="AnimationFrame"===l.type?"requestAnimationFrame":"set"+l.type;throw new Error("Cannot clear timer: timer created with "+i+"() but cleared with "+r+"()")}delete e.timers[n]}}function uninstall(e,n,t){var l,r,i;for(r=0,i=e.methods.length;r<i;r++)if("hrtime"===(l=e.methods[r])&&n.process)n.process.hrtime=e._hrtime;else if("nextTick"===l&&n.process)n.process.nextTick=e._nextTick;else if("performance"===l)n[l]=e["_"+l];else if(n[l]&&n[l].hadOwnProperty)n[l]=e["_"+l],"clearInterval"===l&&!0===t.shouldAdvanceTime&&n[l](e.attachedInterval);else try{delete n[l]}catch(e){}return e.methods=[],e.timers?Object.keys(e.timers).map((function(n){return e.timers[n]})):[]}function hijackMethod(e,n,t){var l;if(t[n].hadOwnProperty=Object.prototype.hasOwnProperty.call(e,n),t["_"+n]=e[n],"Date"===n){var r=mirrorDateProperties(t[n],e[n]);e[n]=r}else if("performance"===n)e[n]=t[n];else for(l in e[n]=function(){return t[n].apply(t,arguments)},t[n])t[n].hasOwnProperty(l)&&(e[n][l]=t[n][l]);e[n].clock=t}function doIntervalTick(e,n){e.tick(n)}var timers={setTimeout:_global.setTimeout,clearTimeout:_global.clearTimeout,setImmediate:_global.setImmediate,clearImmediate:_global.clearImmediate,setInterval:_global.setInterval,clearInterval:_global.clearInterval,Date:_global.Date};hrtimePresent&&(timers.hrtime=_global.process.hrtime),nextTickPresent&&(timers.nextTick=_global.process.nextTick),performancePresent&&(timers.performance=_global.performance),requestAnimationFramePresent&&(timers.requestAnimationFrame=_global.requestAnimationFrame),cancelAnimationFramePresent&&(timers.cancelAnimationFrame=_global.cancelAnimationFrame);var keys=Object.keys||function(e){var n,t=[];for(n in e)e.hasOwnProperty(n)&&t.push(n);return t};function createClock(e,n){e=Math.floor(getEpoch(e)),n=n||1e3;var t=0,l=[0,0];if(void 0===NativeDate)throw new Error("The global scope doesn't have a `Date` object (see https://github.com/sinonjs/sinon/issues/1852#issuecomment-419622780)");var r={now:e,timeouts:{},Date:createDate(),loopLimit:n};function i(){return 16-(r.now-e)%16}function a(n){var i=r.now-l[0]-e,a=Math.floor(i/1e3),o=1e6*(i-1e3*a)+t-l[1];if(Array.isArray(n)){if(n[1]>1e9)throw new TypeError("Number of nanoseconds can't exceed a billion");var u=n[0],s=o-n[1],c=a-u;return s<0&&(s+=1e9,c-=1),[c,s]}return[a,o]}if(r.Date.clock=r,r.setTimeout=function(e,n){return addTimer(r,{func:e,args:Array.prototype.slice.call(arguments,2),delay:n})},r.clearTimeout=function(e){return clearTimer(r,e,"Timeout")},r.nextTick=function(e){return enqueueJob(r,{func:e,args:Array.prototype.slice.call(arguments,1)})},r.setInterval=function(e,n){return n=parseInt(n,10),addTimer(r,{func:e,args:Array.prototype.slice.call(arguments,2),delay:n,interval:n})},r.clearInterval=function(e){return clearTimer(r,e,"Interval")},r.setImmediate=function(e){return addTimer(r,{func:e,args:Array.prototype.slice.call(arguments,1),immediate:!0})},r.clearImmediate=function(e){return clearTimer(r,e,"Immediate")},r.countTimers=function(){return Object.keys(r.timers||{}).length},r.requestAnimationFrame=function(e){var n=addTimer(r,{func:e,delay:i(),args:[r.now+i()],animation:!0});return n.id||n},r.cancelAnimationFrame=function(e){return clearTimer(r,e,"AnimationFrame")},r.runMicrotasks=function(){runJobs(r)},r.tick=function(e){var n="number"==typeof e?e:parseTime(e),l=Math.floor(n),i=nanoRemainder(n),a=t+i,o=r.now+l;if(n<0)throw new TypeError("Negative ticks are not supported");a>=1e6&&(o+=1,a-=1e6),t=a;var u,s,c,d=r.now,p=r.now;for(r.duringTick=!0,c=r.now,runJobs(r),c!==r.now&&(d+=r.now-c,o+=r.now-c),u=firstTimerInRange(r,d,o);u&&d<=o;){if(r.timers[u.id]){d=u.callAt,r.now=u.callAt,c=r.now;try{runJobs(r),callTimer(r,u)}catch(e){s=s||e}c!==r.now&&(d+=r.now-c,o+=r.now-c,p+=r.now-c)}u=firstTimerInRange(r,p,o),p=d}if(c=r.now,runJobs(r),c!==r.now&&(d+=r.now-c,o+=r.now-c),r.duringTick=!1,u=firstTimerInRange(r,d,o))try{r.tick(o-r.now)}catch(e){s=s||e}else r.now=o,t=a;if(s)throw s;return r.now},r.next=function(){runJobs(r);var e=firstTimer(r);if(!e)return r.now;r.duringTick=!0;try{return r.now=e.callAt,callTimer(r,e),runJobs(r),r.now}finally{r.duringTick=!1}},r.runAll=function(){var e;for(runJobs(r),e=0;e<r.loopLimit;e++){if(!r.timers)return r.now;if(0===keys(r.timers).length)return r.now;r.next()}throw new Error("Aborting after running "+r.loopLimit+" timers, assuming an infinite loop!")},r.runToFrame=function(){return r.tick(i())},r.runToLast=function(){var e=lastTimer(r);return e?r.tick(e.callAt-r.now):(runJobs(r),r.now)},r.reset=function(){t=0,r.timers={},r.jobs=[],r.now=e},r.setSystemTime=function(e){var n,i,a=getEpoch(e),o=a-r.now;for(n in l[0]=o,l[1]=t,r.now=a,t=0,r.timers)r.timers.hasOwnProperty(n)&&((i=r.timers[n]).createdAt+=o,i.callAt+=o)},performancePresent){if(r.performance=Object.create(null),hasPerformancePrototype){var o=_global.Performance.prototype;Object.getOwnPropertyNames(o).forEach((function(e){r.performance[e]=NOOP}))}r.performance.now=function(){var e=a();return 1e3*e[0]+e[1]/1e6}}return hrtimePresent&&(r.hrtime=a),r}function install(e){if(arguments.length>1||e instanceof Date||Array.isArray(e)||"number"==typeof e)throw new TypeError("lolex.install called with "+String(e)+" lolex 2.0+ requires an object parameter - see https://github.com/sinonjs/lolex");var n,t;(e=void 0!==e?e:{}).shouldAdvanceTime=e.shouldAdvanceTime||!1,e.advanceTimeDelta=e.advanceTimeDelta||20;var l=e.target||_global,r=createClock(e.now,e.loopLimit);for(r.uninstall=function(){return uninstall(r,l,e)},r.methods=e.toFake||[],0===r.methods.length&&(r.methods=keys(timers).filter((function(e){return"nextTick"!==e}))),n=0,t=r.methods.length;n<t;n++)if("hrtime"===r.methods[n])l.process&&"function"==typeof l.process.hrtime&&hijackMethod(l.process,r.methods[n],r);else if("nextTick"===r.methods[n])l.process&&"function"==typeof l.process.nextTick&&hijackMethod(l.process,r.methods[n],r);else{if("setInterval"===r.methods[n]&&!0===e.shouldAdvanceTime){var i=doIntervalTick.bind(null,r,e.advanceTimeDelta),a=l[r.methods[n]](i,e.advanceTimeDelta);r.attachedInterval=a}hijackMethod(l,r.methods[n],r)}return r}return{timers,createClock,install,withGlobal}}var defaultImplementation=withGlobal(global||window);exports.timers=defaultImplementation.timers,exports.createClock=defaultImplementation.createClock,exports.install=defaultImplementation.install,exports.withGlobal=withGlobal}).call(this,void 0!==commonjsGlobal?commonjsGlobal:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[1])(1)},module.exports=f()}));function createClock(e,n){var t=lolex;null!==n&&"object"==typeof n&&(t=lolex.withGlobal(n));var l=t.install(e);return l.restore=l.uninstall,l}var useFakeTimers=function(e){var n=void 0!==e,t=("number"==typeof e||e instanceof Date)&&1===arguments.length,l=null!==e&&"object"==typeof e&&1===arguments.length;if(!n)return createClock({now:0});if(t)return createClock({now:e});if(l){var r=extend({},e),i=r.global;return delete r.global,createClock(r,i)}throw new TypeError("useFakeTimers expected epoch or config object. See https://github.com/sinonjs/sinon")},clock={create:function(e){return lolex.createClock(e)}},timers={setTimeout,clearTimeout,setImmediate:"undefined"!=typeof setImmediate?setImmediate:void 0,clearImmediate:"undefined"!=typeof clearImmediate?clearImmediate:void 0,setInterval,clearInterval,Date},fakeTimers={useFakeTimers,clock,timers},functionToString=function(){var e,n,t;if(this.getCall&&this.callCount)for(e=this.callCount;e--;)for(n in t=this.getCall(e).thisValue)if(t[n]===this)return n;return this.displayName||"sinon fake"},arrayProto$6=lib.prototypes.array,deepEqual$3=deepEqual_1.use(match_1$1),functionName$4=lib.functionName,valueToString$3=lib.valueToString,concat$2=arrayProto$6.concat,filter=arrayProto$6.filter,join$4=arrayProto$6.join,map$1=arrayProto$6.map,reduce$1=arrayProto$6.reduce,slice$4=arrayProto$6.slice;function throwYieldError(e,n,t){var l=functionName$4(e)+n;throw t.length&&(l+=" Received ["+join$4(slice$4(t),", ")+"]"),new Error(l)}var callProto={calledOn:function(e){return match_1$1&&match_1$1.isMatcher(e)?e.test(this.thisValue):this.thisValue===e},calledWith:function(){var e=this,n=slice$4(arguments);return!(n.length>e.args.length)&&reduce$1(n,(function(n,t,l){return n&&deepEqual$3(t,e.args[l])}),!0)},calledWithMatch:function(){var e=this,n=slice$4(arguments);return!(n.length>e.args.length)&&reduce$1(n,(function(n,t,l){var r=e.args[l];return n&&match_1$1&&match_1$1(t).test(r)}),!0)},calledWithExactly:function(){return arguments.length===this.args.length&&this.calledWith.apply(this,arguments)},notCalledWith:function(){return!this.calledWith.apply(this,arguments)},notCalledWithMatch:function(){return!this.calledWithMatch.apply(this,arguments)},returned:function(e){return deepEqual$3(e,this.returnValue)},threw:function(e){return void 0!==e&&this.exception?this.exception===e||this.exception.name===e:Boolean(this.exception)},calledWithNew:function(){return this.proxy.prototype&&this.thisValue instanceof this.proxy},calledBefore:function(e){return this.callId<e.callId},calledAfter:function(e){return this.callId>e.callId},calledImmediatelyBefore:function(e){return this.callId===e.callId-1},calledImmediatelyAfter:function(e){return this.callId===e.callId+1},callArg:function(e){return this.ensureArgIsAFunction(e),this.args[e]()},callArgOn:function(e,n){return this.ensureArgIsAFunction(e),this.args[e].apply(n)},callArgWith:function(e){return this.callArgOnWith.apply(this,concat$2([e,null],slice$4(arguments,1)))},callArgOnWith:function(e,n){this.ensureArgIsAFunction(e);var t=slice$4(arguments,2);return this.args[e].apply(n,t)},throwArg:function(e){if(e>this.args.length)throw new TypeError("Not enough arguments: "+e+" required but only "+this.args.length+" present");throw this.args[e]},yield:function(){return this.yieldOn.apply(this,concat$2([null],slice$4(arguments,0)))},yieldOn:function(e){var n=slice$4(this.args),t=filter(n,(function(e){return"function"==typeof e}))[0];return t||throwYieldError(this.proxy," cannot yield since no callback was passed.",n),t.apply(e,slice$4(arguments,1))},yieldTo:function(e){return this.yieldToOn.apply(this,concat$2([e,null],slice$4(arguments,1)))},yieldToOn:function(e,n){var t=slice$4(this.args),l=filter(t,(function(n){return n&&"function"==typeof n[e]}))[0],r=l&&l[e];return r||throwYieldError(this.proxy," cannot yield to '"+valueToString$3(e)+"' since no callback was passed.",t),r.apply(n,slice$4(arguments,2))},toString:function(){var e,n=this.proxy?String(this.proxy)+"(":"";return this.args?(e=map$1(this.args,(function(e){return format_1(e)})),n=n+join$4(e,", ")+")",void 0!==this.returnValue&&(n+=" => "+format_1(this.returnValue)),this.exception&&(n+=" !"+this.exception.name,this.exception.message&&(n+="("+this.exception.message+")")),this.stack&&(n+=(this.stack.split("\n")[3]||"unknown").replace(/^\s*(?:at\s+|@)?/," at ")),n):":("},ensureArgIsAFunction:function(e){if("function"!=typeof this.args[e])throw new TypeError("Expected argument at position "+e+" to be a Function, but was "+typeof this.args[e])}};function createSpyCall(e,n,t,l,r,i,a){if("number"!=typeof i)throw new TypeError("Call id is not a number");var o=Object.create(callProto),u=t.length>0&&t[t.length-1]||void 0,s=u&&"function"==typeof u?u:void 0;return o.proxy=e,o.thisValue=n,o.args=t,o.lastArg=u,o.callback=s,o.returnValue=l,o.exception=r,o.callId=i,o.errorWithCallStack=a,o}Object.defineProperty(callProto,"stack",{enumerable:!0,configurable:!0,get:function(){return this.errorWithCallStack&&this.errorWithCallStack.stack||""}}),callProto.invokeCallback=callProto.yield,createSpyCall.toString=callProto.toString;var call$1=createSpyCall,hasOwnProperty$6=lib.prototypes.object.hasOwnProperty,valueToString$4=lib.valueToString;function isFunction$1(e){return"function"==typeof e||Boolean(e&&e.constructor&&e.call&&e.apply)}function mirrorProperties(e,n){for(var t in n)hasOwnProperty$6(e,t)||(e[t]=n[t])}var hasES5Support="keys"in Object,wrapMethod=function(e,n,t){if(!e)throw new TypeError("Should wrap property of object");if("function"!=typeof t&&"object"!=typeof t)throw new TypeError("Method wrapper should be a function or a property descriptor");function l(e){var t;if(isFunction$1(e)){if(e.restore&&e.restore.sinon)t=new TypeError("Attempted to wrap "+valueToString$4(n)+" which is already wrapped");else if(e.calledBefore){var l=e.returns?"stubbed":"spied on";t=new TypeError("Attempted to wrap "+valueToString$4(n)+" which is already "+l)}}else t=new TypeError("Attempted to wrap "+typeof e+" property "+valueToString$4(n)+" as function");if(t)throw e&&e.stackTraceError&&(t.stack+="\n--------------\n"+e.stackTraceError.stack),t}var r,i,a,o;function u(){l(i=e[n]),e[n]=t,t.displayName=n}var s=e.hasOwnProperty?e.hasOwnProperty(n):hasOwnProperty$6(e,n);if(hasES5Support){var c="function"==typeof t?{value:t}:t;if((o=getPropertyDescriptor(e,n))?o.restore&&o.restore.sinon&&(r=new TypeError("Attempted to wrap "+n+" which is already wrapped")):r=new TypeError("Attempted to wrap "+typeof i+" property "+n+" as function"),r)throw o&&o.stackTraceError&&(r.stack+="\n--------------\n"+o.stackTraceError.stack),r;var d=Object.keys(c);for(a=0;a<d.length;a++)l(i=o[d[a]]);for(mirrorProperties(c,o),a=0;a<d.length;a++)mirrorProperties(c[d[a]],o[d[a]]);Object.defineProperty(e,n,c),"function"==typeof t&&e[n]!==t&&(delete e[n],u())}else u();return t.displayName=n,t.stackTraceError=new Error("Stack Trace for original"),t.restore=function(){if(s)hasES5Support&&Object.defineProperty(e,n,o);else try{delete e[n]}catch(e){}if(hasES5Support){var l=getPropertyDescriptor(e,n);l&&l.value===t&&(e[n]=i)}else e[n]===t&&(e[n]=i)},t.wrappedMethod=i,t.restore.sinon=!0,hasES5Support||mirrorProperties(t,i),t},global$1=void 0!==__webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}var cachedSetTimeout=defaultSetTimout,cachedClearTimeout=defaultClearTimeout;function runTimeout(e){if(cachedSetTimeout===setTimeout)return setTimeout(e,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(e,0);try{return cachedSetTimeout(e,0)}catch(n){try{return cachedSetTimeout.call(null,e,0)}catch(n){return cachedSetTimeout.call(this,e,0)}}}function runClearTimeout(e){if(cachedClearTimeout===clearTimeout)return clearTimeout(e);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(e);try{return cachedClearTimeout(e)}catch(n){try{return cachedClearTimeout.call(null,e)}catch(n){return cachedClearTimeout.call(this,e)}}}"function"==typeof global$1.setTimeout&&(cachedSetTimeout=setTimeout),"function"==typeof global$1.clearTimeout&&(cachedClearTimeout=clearTimeout);var queue=[],draining=!1,currentQueue,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var e=runTimeout(cleanUpNextTick);draining=!0;for(var n=queue.length;n;){for(currentQueue=queue,queue=[];++queueIndex<n;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,n=queue.length}currentQueue=null,draining=!1,runClearTimeout(e)}}function nextTick$2(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];queue.push(new Item(e,n)),1!==queue.length||draining||runTimeout(drainQueue)}function Item(e,n){this.fun=e,this.array=n}Item.prototype.run=function(){this.fun.apply(null,this.array)};var title="browser",platform="browser",browser=!0,env={},argv=[],version="",versions={},release={},config={};function noop(){}var on=noop,addListener=noop,once=noop,off=noop,removeListener=noop,removeAllListeners=noop,emit=noop;function binding(e){throw new Error("process.binding is not supported")}function cwd(){return"/"}function chdir(e){throw new Error("process.chdir is not supported")}function umask(){return 0}var performance=global$1.performance||{},performanceNow=performance.now||performance.mozNow||performance.msNow||performance.oNow||performance.webkitNow||function(){return(new Date).getTime()};function hrtime(e){var n=.001*performanceNow.call(performance),t=Math.floor(n),l=Math.floor(n%1*1e9);return e&&(t-=e[0],(l-=e[1])<0&&(t--,l+=1e9)),[t,l]}var startTime=new Date;function uptime(){return(new Date-startTime)/1e3}var process={nextTick:nextTick$2,title,browser,env,argv,version,versions,on,addListener,once,off,removeListener,removeAllListeners,emit,binding,cwd,chdir,umask,hrtime,platform,release,config,uptime},hasFlag=(e,n)=>{n=n||process.argv;const t=e.startsWith("-")?"":1===e.length?"-":"--",l=n.indexOf(t+e),r=n.indexOf("--");return-1!==l&&(-1===r||l<r)};const env$1=process.env;let forceColor;function translateLevel(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function supportsColor(e){if(!1===forceColor)return 0;if(hasFlag("color=16m")||hasFlag("color=full")||hasFlag("color=truecolor"))return 3;if(hasFlag("color=256"))return 2;if(e&&!e.isTTY&&!0!==forceColor)return 0;const n=forceColor?1:0;if("CI"in env$1)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in env$1))||"codeship"===env$1.CI_NAME?1:n;if("TEAMCITY_VERSION"in env$1)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env$1.TEAMCITY_VERSION)?1:0;if("truecolor"===env$1.COLORTERM)return 3;if("TERM_PROGRAM"in env$1){const e=parseInt((env$1.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(env$1.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(env$1.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env$1.TERM)||"COLORTERM"in env$1?1:(env$1.TERM,n)}function getSupportLevel(e){return translateLevel(supportsColor(e))}hasFlag("no-color")||hasFlag("no-colors")||hasFlag("color=false")?forceColor=!1:(hasFlag("color")||hasFlag("colors")||hasFlag("color=true")||hasFlag("color=always"))&&(forceColor=!0),"FORCE_COLOR"in env$1&&(forceColor=0===env$1.FORCE_COLOR.length||0!==parseInt(env$1.FORCE_COLOR,10));var supportsColor_1={supportsColor:getSupportLevel,stdout:getSupportLevel(process.stdout),stderr:getSupportLevel(process.stderr)};function colorize(e,n){return!1===supportsColor_1.stdout?e:"["+n+"m"+e+"[0m"}var red=function(e){return colorize(e,31)},green=function(e){return colorize(e,32)},cyan=function(e){return colorize(e,96)},white=function(e){return colorize(e,39)},bold=function(e){return colorize(e,1)},color={red,green,cyan,white,bold},base=createCommonjsModule((function(e,n){function t(){}function l(e,n,t,l,r){for(var i=0,a=n.length,o=0,u=0;i<a;i++){var s=n[i];if(s.removed){if(s.value=e.join(l.slice(u,u+s.count)),u+=s.count,i&&n[i-1].added){var c=n[i-1];n[i-1]=n[i],n[i]=c}}else{if(!s.added&&r){var d=t.slice(o,o+s.count);d=d.map((function(e,n){var t=l[u+n];return t.length>e.length?t:e})),s.value=e.join(d)}else s.value=e.join(t.slice(o,o+s.count));o+=s.count,s.added||(u+=s.count)}}var p=n[a-1];return a>1&&"string"==typeof p.value&&(p.added||p.removed)&&e.equals("",p.value)&&(n[a-2].value+=p.value,n.pop()),n}function r(e){return{newPos:e.newPos,components:e.components.slice(0)}}n.__esModule=!0,n.default=t,t.prototype={diff:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=t.callback;"function"==typeof t&&(i=t,t={}),this.options=t;var a=this;function o(e){return i?(setTimeout((function(){i(void 0,e)}),0),!0):e}e=this.castInput(e),n=this.castInput(n),e=this.removeEmpty(this.tokenize(e));var u=(n=this.removeEmpty(this.tokenize(n))).length,s=e.length,c=1,d=u+s,p=[{newPos:-1,components:[]}],f=this.extractCommon(p[0],n,e,0);if(p[0].newPos+1>=u&&f+1>=s)return o([{value:this.join(n),count:n.length}]);function h(){for(var t=-1*c;t<=c;t+=2){var i=void 0,d=p[t-1],f=p[t+1],h=(f?f.newPos:0)-t;d&&(p[t-1]=void 0);var m=d&&d.newPos+1<u,b=f&&0<=h&&h<s;if(m||b){if(!m||b&&d.newPos<f.newPos?(i=r(f),a.pushComponent(i.components,void 0,!0)):((i=d).newPos++,a.pushComponent(i.components,!0,void 0)),h=a.extractCommon(i,n,e,t),i.newPos+1>=u&&h+1>=s)return o(l(a,i.components,n,e,a.useLongestToken));p[t]=i}else p[t]=void 0}c++}if(i)!function e(){setTimeout((function(){if(c>d)return i();h()||e()}),0)}();else for(;c<=d;){var m=h();if(m)return m}},pushComponent:function(e,n,t){var l=e[e.length-1];l&&l.added===n&&l.removed===t?e[e.length-1]={count:l.count+1,added:n,removed:t}:e.push({count:1,added:n,removed:t})},extractCommon:function(e,n,t,l){for(var r=n.length,i=t.length,a=e.newPos,o=a-l,u=0;a+1<r&&o+1<i&&this.equals(n[a+1],t[o+1]);)a++,o++,u++;return u&&e.components.push({count:u}),e.newPos=a,o},equals:function(e,n){return this.options.comparator?this.options.comparator(e,n):e===n||this.options.ignoreCase&&e.toLowerCase()===n.toLowerCase()},removeEmpty:function(e){for(var n=[],t=0;t<e.length;t++)e[t]&&n.push(e[t]);return n},castInput:function(e){return e},tokenize:function(e){return e.split("")},join:function(e){return e.join("")}}}));unwrapExports(base);var character=createCommonjsModule((function(e,n){n.__esModule=!0,n.characterDiff=void 0,n.diffChars=function(e,n,t){return r.diff(e,n,t)};var t,l=(t=base)&&t.__esModule?t:{default:t},r=n.characterDiff=new l.default}));unwrapExports(character);var character_1=character.characterDiff,character_2=character.diffChars,params=createCommonjsModule((function(e,n){n.__esModule=!0,n.generateOptions=function(e,n){if("function"==typeof e)n.callback=e;else if(e)for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t]);return n}}));unwrapExports(params);var params_1=params.generateOptions,word=createCommonjsModule((function(e,n){n.__esModule=!0,n.wordDiff=void 0,n.diffWords=function(e,n,t){return t=(0,params.generateOptions)(t,{ignoreWhitespace:!0}),a.diff(e,n,t)},n.diffWordsWithSpace=function(e,n,t){return a.diff(e,n,t)};var t,l=(t=base)&&t.__esModule?t:{default:t},r=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,i=/\S/,a=n.wordDiff=new l.default;a.equals=function(e,n){return this.options.ignoreCase&&(e=e.toLowerCase(),n=n.toLowerCase()),e===n||this.options.ignoreWhitespace&&!i.test(e)&&!i.test(n)},a.tokenize=function(e){for(var n=e.split(/(\s+|\b)/),t=0;t<n.length-1;t++)!n[t+1]&&n[t+2]&&r.test(n[t])&&r.test(n[t+2])&&(n[t]+=n[t+2],n.splice(t+1,2),t--);return n}}));unwrapExports(word);var word_1=word.wordDiff,word_2=word.diffWords,word_3=word.diffWordsWithSpace,line=createCommonjsModule((function(e,n){n.__esModule=!0,n.lineDiff=void 0,n.diffLines=function(e,n,t){return r.diff(e,n,t)},n.diffTrimmedLines=function(e,n,t){var l=(0,params.generateOptions)(t,{ignoreWhitespace:!0});return r.diff(e,n,l)};var t,l=(t=base)&&t.__esModule?t:{default:t},r=n.lineDiff=new l.default;r.tokenize=function(e){var n=[],t=e.split(/(\n|\r\n)/);t[t.length-1]||t.pop();for(var l=0;l<t.length;l++){var r=t[l];l%2&&!this.options.newlineIsToken?n[n.length-1]+=r:(this.options.ignoreWhitespace&&(r=r.trim()),n.push(r))}return n}}));unwrapExports(line);var line_1=line.lineDiff,line_2=line.diffLines,line_3=line.diffTrimmedLines,sentence=createCommonjsModule((function(e,n){n.__esModule=!0,n.sentenceDiff=void 0,n.diffSentences=function(e,n,t){return r.diff(e,n,t)};var t,l=(t=base)&&t.__esModule?t:{default:t},r=n.sentenceDiff=new l.default;r.tokenize=function(e){return e.split(/(\S.+?[.!?])(?=\s+|$)/)}}));unwrapExports(sentence);var sentence_1=sentence.sentenceDiff,sentence_2=sentence.diffSentences,css=createCommonjsModule((function(e,n){n.__esModule=!0,n.cssDiff=void 0,n.diffCss=function(e,n,t){return r.diff(e,n,t)};var t,l=(t=base)&&t.__esModule?t:{default:t},r=n.cssDiff=new l.default;r.tokenize=function(e){return e.split(/([{}:;,]|\s+)/)}}));unwrapExports(css);var css_1=css.cssDiff,css_2=css.diffCss,json=createCommonjsModule((function(e,n){n.__esModule=!0,n.jsonDiff=void 0;var t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};n.diffJson=function(e,n,t){return a.diff(e,n,t)},n.canonicalize=o;var l,r=(l=base)&&l.__esModule?l:{default:l},i=Object.prototype.toString,a=n.jsonDiff=new r.default;function o(e,n,l,r,a){n=n||[],l=l||[],r&&(e=r(a,e));var u=void 0;for(u=0;u<n.length;u+=1)if(n[u]===e)return l[u];var s=void 0;if("[object Array]"===i.call(e)){for(n.push(e),s=new Array(e.length),l.push(s),u=0;u<e.length;u+=1)s[u]=o(e[u],n,l,r,a);return n.pop(),l.pop(),s}if(e&&e.toJSON&&(e=e.toJSON()),"object"===(void 0===e?"undefined":t(e))&&null!==e){n.push(e),s={},l.push(s);var c=[],d=void 0;for(d in e)e.hasOwnProperty(d)&&c.push(d);for(c.sort(),u=0;u<c.length;u+=1)s[d=c[u]]=o(e[d],n,l,r,d);n.pop(),l.pop()}else s=e;return s}a.useLongestToken=!0,a.tokenize=line.lineDiff.tokenize,a.castInput=function(e){var n=this.options,t=n.undefinedReplacement,l=n.stringifyReplacer,r=void 0===l?function(e,n){return void 0===n?t:n}:l;return"string"==typeof e?e:JSON.stringify(o(e,null,null,r),r,"  ")},a.equals=function(e,n){return r.default.prototype.equals.call(a,e.replace(/,([\r\n])/g,"$1"),n.replace(/,([\r\n])/g,"$1"))}}));unwrapExports(json);var json_1=json.jsonDiff,json_2=json.diffJson,json_3=json.canonicalize,array$2=createCommonjsModule((function(e,n){n.__esModule=!0,n.arrayDiff=void 0,n.diffArrays=function(e,n,t){return r.diff(e,n,t)};var t,l=(t=base)&&t.__esModule?t:{default:t},r=n.arrayDiff=new l.default;r.tokenize=function(e){return e.slice()},r.join=r.removeEmpty=function(e){return e}}));unwrapExports(array$2);var array_1=array$2.arrayDiff,array_2=array$2.diffArrays,parse=createCommonjsModule((function(e,n){n.__esModule=!0,n.parsePatch=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=e.split(/\r\n|[\n\v\f\r\x85]/),l=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],r=[],i=0;function a(){var e={};for(r.push(e);i<t.length;){var l=t[i];if(/^(\-\-\-|\+\+\+|@@)\s/.test(l))break;var a=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(l);a&&(e.index=a[1]),i++}for(o(e),o(e),e.hunks=[];i<t.length;){var s=t[i];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(s))break;if(/^@@/.test(s))e.hunks.push(u());else{if(s&&n.strict)throw new Error("Unknown line "+(i+1)+" "+JSON.stringify(s));i++}}}function o(e){var n=/^(---|\+\+\+)\s+(.*)$/.exec(t[i]);if(n){var l="---"===n[1]?"old":"new",r=n[2].split("\t",2),a=r[0].replace(/\\\\/g,"\\");/^".*"$/.test(a)&&(a=a.substr(1,a.length-2)),e[l+"FileName"]=a,e[l+"Header"]=(r[1]||"").trim(),i++}}function u(){for(var e=i,r=t[i++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),a={oldStart:+r[1],oldLines:+r[2]||1,newStart:+r[3],newLines:+r[4]||1,lines:[],linedelimiters:[]},o=0,u=0;i<t.length&&!(0===t[i].indexOf("--- ")&&i+2<t.length&&0===t[i+1].indexOf("+++ ")&&0===t[i+2].indexOf("@@"));i++){var s=0==t[i].length&&i!=t.length-1?" ":t[i][0];if("+"!==s&&"-"!==s&&" "!==s&&"\\"!==s)break;a.lines.push(t[i]),a.linedelimiters.push(l[i]||"\n"),"+"===s?o++:"-"===s?u++:" "===s&&(o++,u++)}if(o||1!==a.newLines||(a.newLines=0),u||1!==a.oldLines||(a.oldLines=0),n.strict){if(o!==a.newLines)throw new Error("Added line count did not match for hunk at line "+(e+1));if(u!==a.oldLines)throw new Error("Removed line count did not match for hunk at line "+(e+1))}return a}for(;i<t.length;)a();return r}}));unwrapExports(parse);var parse_1=parse.parsePatch,distanceIterator=createCommonjsModule((function(e,n){n.__esModule=!0,n.default=function(e,n,t){var l=!0,r=!1,i=!1,a=1;return function o(){if(l&&!i){if(r?a++:l=!1,e+a<=t)return a;i=!0}if(!r)return i||(l=!0),n<=e-a?-a++:(r=!0,o())}}}));unwrapExports(distanceIterator);var apply=createCommonjsModule((function(e,n){n.__esModule=!0,n.applyPatch=r,n.applyPatches=function(e,n){"string"==typeof e&&(e=(0,parse.parsePatch)(e));var t=0;!function l(){var i=e[t++];if(!i)return n.complete();n.loadFile(i,(function(e,t){if(e)return n.complete(e);var a=r(t,i,n);n.patched(i,a,(function(e){if(e)return n.complete(e);l()}))}))}()};var t,l=(t=distanceIterator)&&t.__esModule?t:{default:t};function r(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof n&&(n=(0,parse.parsePatch)(n)),Array.isArray(n)){if(n.length>1)throw new Error("applyPatch only works with a single input.");n=n[0]}var r=e.split(/\r\n|[\n\v\f\r\x85]/),i=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],a=n.hunks,o=t.compareLine||function(e,n,t,l){return n===l},u=0,s=t.fuzzFactor||0,c=0,d=0,p=void 0,f=void 0;function h(e,n){for(var t=0;t<e.lines.length;t++){var l=e.lines[t],i=l.length>0?l[0]:" ",a=l.length>0?l.substr(1):l;if(" "===i||"-"===i){if(!o(n+1,r[n],i,a)&&++u>s)return!1;n++}}return!0}for(var m=0;m<a.length;m++){for(var b=a[m],g=r.length-b.oldLines,M=0,y=d+b.oldStart-1,v=(0,l.default)(y,c,g);void 0!==M;M=v())if(h(b,y+M)){b.offset=d+=M;break}if(void 0===M)return!1;c=b.offset+b.oldStart+b.oldLines}for(var A=0,w=0;w<a.length;w++){var _=a[w],C=_.oldStart+_.offset+A-1;A+=_.newLines-_.oldLines,C<0&&(C=0);for(var T=0;T<_.lines.length;T++){var S=_.lines[T],z=S.length>0?S[0]:" ",O=S.length>0?S.substr(1):S,E=_.linedelimiters[T];if(" "===z)C++;else if("-"===z)r.splice(C,1),i.splice(C,1);else if("+"===z)r.splice(C,0,O),i.splice(C,0,E),C++;else if("\\"===z){var L=_.lines[T-1]?_.lines[T-1][0]:null;"+"===L?p=!0:"-"===L&&(f=!0)}}}if(p)for(;!r[r.length-1];)r.pop(),i.pop();else f&&(r.push(""),i.push("\n"));for(var x=0;x<r.length-1;x++)r[x]=r[x]+i[x];return r.join("")}}));unwrapExports(apply);var apply_1=apply.applyPatch,apply_2=apply.applyPatches,create=createCommonjsModule((function(e,n){function t(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}function l(e,n,l,r,i,a,o){o||(o={}),void 0===o.context&&(o.context=4);var u=(0,line.diffLines)(l,r,o);function s(e){return e.map((function(e){return" "+e}))}u.push({value:"",lines:[]});for(var c=[],d=0,p=0,f=[],h=1,m=1,b=function(e){var n=u[e],i=n.lines||n.value.replace(/\n$/,"").split("\n");if(n.lines=i,n.added||n.removed){var a;if(!d){var b=u[e-1];d=h,p=m,b&&(f=o.context>0?s(b.lines.slice(-o.context)):[],d-=f.length,p-=f.length)}(a=f).push.apply(a,t(i.map((function(e){return(n.added?"+":"-")+e})))),n.added?m+=i.length:h+=i.length}else{if(d)if(i.length<=2*o.context&&e<u.length-2){var g;(g=f).push.apply(g,t(s(i)))}else{var M,y=Math.min(i.length,o.context);(M=f).push.apply(M,t(s(i.slice(0,y))));var v={oldStart:d,oldLines:h-d+y,newStart:p,newLines:m-p+y,lines:f};if(e>=u.length-2&&i.length<=o.context){var A=/\n$/.test(l),w=/\n$/.test(r);0!=i.length||A?A&&w||f.push("\\ No newline at end of file"):f.splice(v.oldLines,0,"\\ No newline at end of file")}c.push(v),d=0,p=0,f=[]}h+=i.length,m+=i.length}},g=0;g<u.length;g++)b(g);return{oldFileName:e,newFileName:n,oldHeader:i,newHeader:a,hunks:c}}function r(e,n,t,r,i,a,o){var u=l(e,n,t,r,i,a,o),s=[];e==n&&s.push("Index: "+e),s.push("==================================================================="),s.push("--- "+u.oldFileName+(void 0===u.oldHeader?"":"\t"+u.oldHeader)),s.push("+++ "+u.newFileName+(void 0===u.newHeader?"":"\t"+u.newHeader));for(var c=0;c<u.hunks.length;c++){var d=u.hunks[c];s.push("@@ -"+d.oldStart+","+d.oldLines+" +"+d.newStart+","+d.newLines+" @@"),s.push.apply(s,d.lines)}return s.join("\n")+"\n"}n.__esModule=!0,n.structuredPatch=l,n.createTwoFilesPatch=r,n.createPatch=function(e,n,t,l,i,a){return r(e,e,n,t,l,i,a)}}));unwrapExports(create);var create_1=create.structuredPatch,create_2=create.createTwoFilesPatch,create_3=create.createPatch,array$4=createCommonjsModule((function(e,n){function t(e,n){if(n.length>e.length)return!1;for(var t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}n.__esModule=!0,n.arrayEqual=function(e,n){return e.length===n.length&&t(e,n)},n.arrayStartsWith=t}));unwrapExports(array$4);var array_1$1=array$4.arrayEqual,array_2$1=array$4.arrayStartsWith,merge_1=createCommonjsModule((function(e,n){function t(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}function l(e){var n=M(e.lines),t=n.oldLines,l=n.newLines;void 0!==t?e.oldLines=t:delete e.oldLines,void 0!==l?e.newLines=l:delete e.newLines}function r(e,n){if("string"==typeof e){if(/^@@/m.test(e)||/^Index:/m.test(e))return(0,parse.parsePatch)(e)[0];if(!n)throw new Error("Must provide a base reference or pass in a patch");return(0,create.structuredPatch)(void 0,void 0,n,e)}return e}function i(e){return e.newFileName&&e.newFileName!==e.oldFileName}function a(e,n,t){return n===t?n:(e.conflict=!0,{mine:n,theirs:t})}function o(e,n){return e.oldStart<n.oldStart&&e.oldStart+e.oldLines<n.oldStart}function u(e,n){return{oldStart:e.oldStart,oldLines:e.oldLines,newStart:e.newStart+n,newLines:e.newLines,lines:e.lines}}function s(e,n,r,i,a){var o={offset:n,lines:r,index:0},u={offset:i,lines:a,index:0};for(f(e,o,u),f(e,u,o);o.index<o.lines.length&&u.index<u.lines.length;){var s=o.lines[o.index],b=u.lines[u.index];if("-"!==s[0]&&"+"!==s[0]||"-"!==b[0]&&"+"!==b[0])if("+"===s[0]&&" "===b[0]){var g;(g=e.lines).push.apply(g,t(m(o)))}else if("+"===b[0]&&" "===s[0]){var M;(M=e.lines).push.apply(M,t(m(u)))}else"-"===s[0]&&" "===b[0]?d(e,o,u):"-"===b[0]&&" "===s[0]?d(e,u,o,!0):s===b?(e.lines.push(s),o.index++,u.index++):p(e,m(o),m(u));else c(e,o,u)}h(e,o),h(e,u),l(e)}function c(e,n,l){var r=m(n),i=m(l);if(b(r)&&b(i)){var a,o;if((0,array$4.arrayStartsWith)(r,i)&&g(l,r,r.length-i.length))return void(a=e.lines).push.apply(a,t(r));if((0,array$4.arrayStartsWith)(i,r)&&g(n,i,i.length-r.length))return void(o=e.lines).push.apply(o,t(i))}else if((0,array$4.arrayEqual)(r,i)){var u;return void(u=e.lines).push.apply(u,t(r))}p(e,r,i)}function d(e,n,l,r){var i,a=m(n),o=function(e,n){for(var t=[],l=[],r=0,i=!1,a=!1;r<n.length&&e.index<e.lines.length;){var o=e.lines[e.index],u=n[r];if("+"===u[0])break;if(i=i||" "!==o[0],l.push(u),r++,"+"===o[0])for(a=!0;"+"===o[0];)t.push(o),o=e.lines[++e.index];u.substr(1)===o.substr(1)?(t.push(o),e.index++):a=!0}if("+"===(n[r]||"")[0]&&i&&(a=!0),a)return t;for(;r<n.length;)l.push(n[r++]);return{merged:l,changes:t}}(l,a);o.merged?(i=e.lines).push.apply(i,t(o.merged)):p(e,r?o:a,r?a:o)}function p(e,n,t){e.conflict=!0,e.lines.push({conflict:!0,mine:n,theirs:t})}function f(e,n,t){for(;n.offset<t.offset&&n.index<n.lines.length;){var l=n.lines[n.index++];e.lines.push(l),n.offset++}}function h(e,n){for(;n.index<n.lines.length;){var t=n.lines[n.index++];e.lines.push(t)}}function m(e){for(var n=[],t=e.lines[e.index][0];e.index<e.lines.length;){var l=e.lines[e.index];if("-"===t&&"+"===l[0]&&(t="+"),t!==l[0])break;n.push(l),e.index++}return n}function b(e){return e.reduce((function(e,n){return e&&"-"===n[0]}),!0)}function g(e,n,t){for(var l=0;l<t;l++){var r=n[n.length-t+l].substr(1);if(e.lines[e.index+l]!==" "+r)return!1}return e.index+=t,!0}function M(e){var n=0,t=0;return e.forEach((function(e){if("string"!=typeof e){var l=M(e.mine),r=M(e.theirs);void 0!==n&&(l.oldLines===r.oldLines?n+=l.oldLines:n=void 0),void 0!==t&&(l.newLines===r.newLines?t+=l.newLines:t=void 0)}else void 0===t||"+"!==e[0]&&" "!==e[0]||t++,void 0===n||"-"!==e[0]&&" "!==e[0]||n++})),{oldLines:n,newLines:t}}n.__esModule=!0,n.calcLineCount=l,n.merge=function(e,n,t){e=r(e,t),n=r(n,t);var l={};(e.index||n.index)&&(l.index=e.index||n.index),(e.newFileName||n.newFileName)&&(i(e)?i(n)?(l.oldFileName=a(l,e.oldFileName,n.oldFileName),l.newFileName=a(l,e.newFileName,n.newFileName),l.oldHeader=a(l,e.oldHeader,n.oldHeader),l.newHeader=a(l,e.newHeader,n.newHeader)):(l.oldFileName=e.oldFileName,l.newFileName=e.newFileName,l.oldHeader=e.oldHeader,l.newHeader=e.newHeader):(l.oldFileName=n.oldFileName||e.oldFileName,l.newFileName=n.newFileName||e.newFileName,l.oldHeader=n.oldHeader||e.oldHeader,l.newHeader=n.newHeader||e.newHeader)),l.hunks=[];for(var c=0,d=0,p=0,f=0;c<e.hunks.length||d<n.hunks.length;){var h=e.hunks[c]||{oldStart:1/0},m=n.hunks[d]||{oldStart:1/0};if(o(h,m))l.hunks.push(u(h,p)),c++,f+=h.newLines-h.oldLines;else if(o(m,h))l.hunks.push(u(m,f)),d++,p+=m.newLines-m.oldLines;else{var b={oldStart:Math.min(h.oldStart,m.oldStart),oldLines:0,newStart:Math.min(h.newStart+p,m.oldStart+f),newLines:0,lines:[]};s(b,h.oldStart,h.lines,m.oldStart,m.lines),d++,c++,l.hunks.push(b)}}return l}}));unwrapExports(merge_1);var merge_2=merge_1.calcLineCount,merge_3=merge_1.merge,dmp=createCommonjsModule((function(e,n){n.__esModule=!0,n.convertChangesToDMP=function(e){for(var n=[],t=void 0,l=void 0,r=0;r<e.length;r++)l=(t=e[r]).added?1:t.removed?-1:0,n.push([l,t.value]);return n}}));unwrapExports(dmp);var dmp_1=dmp.convertChangesToDMP,xml=createCommonjsModule((function(e,n){n.__esModule=!0,n.convertChangesToXML=function(e){for(var n=[],t=0;t<e.length;t++){var l=e[t];l.added?n.push("<ins>"):l.removed&&n.push("<del>"),n.push((r=l.value,void 0,r.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"))),l.added?n.push("</ins>"):l.removed&&n.push("</del>")}var r;return n.join("")}}));unwrapExports(xml);var xml_1=xml.convertChangesToXML,lib$1=createCommonjsModule((function(e,n){n.__esModule=!0,n.canonicalize=n.convertChangesToXML=n.convertChangesToDMP=n.merge=n.parsePatch=n.applyPatches=n.applyPatch=n.createPatch=n.createTwoFilesPatch=n.structuredPatch=n.diffArrays=n.diffJson=n.diffCss=n.diffSentences=n.diffTrimmedLines=n.diffLines=n.diffWordsWithSpace=n.diffWords=n.diffChars=n.Diff=void 0;var t,l=(t=base)&&t.__esModule?t:{default:t};n.Diff=l.default,n.diffChars=character.diffChars,n.diffWords=word.diffWords,n.diffWordsWithSpace=word.diffWordsWithSpace,n.diffLines=line.diffLines,n.diffTrimmedLines=line.diffTrimmedLines,n.diffSentences=sentence.diffSentences,n.diffCss=css.diffCss,n.diffJson=json.diffJson,n.diffArrays=array$2.diffArrays,n.structuredPatch=create.structuredPatch,n.createTwoFilesPatch=create.createTwoFilesPatch,n.createPatch=create.createPatch,n.applyPatch=apply.applyPatch,n.applyPatches=apply.applyPatches,n.parsePatch=parse.parsePatch,n.merge=merge_1.merge,n.convertChangesToDMP=dmp.convertChangesToDMP,n.convertChangesToXML=xml.convertChangesToXML,n.canonicalize=json.canonicalize}));unwrapExports(lib$1);var lib_1$1=lib$1.canonicalize,lib_2$1=lib$1.convertChangesToXML,lib_3$1=lib$1.convertChangesToDMP,lib_4$1=lib$1.merge,lib_5$1=lib$1.parsePatch,lib_6$1=lib$1.applyPatches,lib_7$1=lib$1.applyPatch,lib_8=lib$1.createPatch,lib_9=lib$1.createTwoFilesPatch,lib_10=lib$1.structuredPatch,lib_11=lib$1.diffArrays,lib_12=lib$1.diffJson,lib_13=lib$1.diffCss,lib_14=lib$1.diffSentences,lib_15=lib$1.diffTrimmedLines,lib_16=lib$1.diffLines,lib_17=lib$1.diffWordsWithSpace,lib_18=lib$1.diffWords,lib_19=lib$1.diffChars,lib_20=lib$1.Diff,arrayProto$7=lib.prototypes.array,join$5=arrayProto$7.join,map$2=arrayProto$7.map,push$2=arrayProto$7.push;function colorSinonMatchText(e,n,t){var l=t;return e.test(n)||(e.message=color.red(e.message),l&&(l=color.green(l))),l+" "+e.message}function colorDiffText(e){var n=map$2(e,(function(n){var t=n.value;return n.added?t=color.green(t):n.removed&&(t=color.red(t)),2===e.length&&(t+=" "),t}));return join$5(n,"")}var spyFormatters={c:function(e){return timesInWords(e.callCount)},n:function(e){return e.toString()},D:function(e,n){for(var t="",l=0,r=e.callCount;l<r;++l){r>1&&(t+="\nCall "+(l+1)+":");for(var i=e.getCall(l).args,a=0;a<i.length||a<n.length;++a){t+="\n";var o=a<i.length?format_1(i[a]):"";if(match_1$1.isMatcher(n[a]))t+=colorSinonMatchText(n[a],i[a],o);else{var u=a<n.length?format_1(n[a]):"";t+=colorDiffText(lib$1.diffJson(o,u))}}}return t},C:function(e){for(var n=[],t=0,l=e.callCount;t<l;++t){var r="    "+e.getCall(t).toString();/\n/.test(n[t-1])&&(r="\n"+r),push$2(n,r)}return n.length>0?"\n"+join$5(n,"\n"):""},t:function(e){for(var n=[],t=0,l=e.callCount;t<l;++t)push$2(n,format_1(e.thisValues[t]));return join$5(n,", ")},"*":function(e,n){return join$5(map$2(n,(function(e){return format_1(e)})),", ")}},arrayProto$8=lib.prototypes.array,createBehavior$1=behavior.create,functionName$5=lib.functionName,deepEqual$4=deepEqual_1.use(match_1$1),valueToString$5=lib.valueToString,concat$3=arrayProto$8.concat,forEach$2=arrayProto$8.forEach,pop=arrayProto$8.pop,push$3=arrayProto$8.push,slice$5=arrayProto$8.slice,filter$1=Array.prototype.filter,ErrorConstructor=Error.prototype.constructor,bind=Function.prototype.bind,callId=0;function spy(e,n,t){var l,r;if(isEsModule(e))throw new TypeError("ES Modules cannot be spied");return n||"function"!=typeof e?e||n?t?(l={},r=getPropertyDescriptor(e,n),forEach$2(t,(function(e){l[e]=spy.create(r[e])})),wrapMethod(e,n,l)):wrapMethod(e,n,spy.create(e[n])):spy.create((function(){})):spy.create(e)}function incrementCallCount(){this.called=!0,this.callCount+=1,this.notCalled=!1,this.calledOnce=1===this.callCount,this.calledTwice=2===this.callCount,this.calledThrice=3===this.callCount}function createCallProperties(){this.firstCall=this.getCall(0),this.secondCall=this.getCall(1),this.thirdCall=this.getCall(2),this.lastCall=this.getCall(this.callCount-1)}function createProxy(e,n){var t;if(n)switch(n){case 1:t=function(n){return t.invoke(e,this,slice$5(arguments))};break;case 2:t=function(n,l){return t.invoke(e,this,slice$5(arguments))};break;case 3:t=function(n,l,r){return t.invoke(e,this,slice$5(arguments))};break;case 4:t=function(n,l,r,i){return t.invoke(e,this,slice$5(arguments))};break;case 5:t=function(n,l,r,i,a){return t.invoke(e,this,slice$5(arguments))};break;case 6:t=function(n,l,r,i,a,o){return t.invoke(e,this,slice$5(arguments))};break;case 7:t=function(n,l,r,i,a,o,u){return t.invoke(e,this,slice$5(arguments))};break;case 8:t=function(n,l,r,i,a,o,u,s){return t.invoke(e,this,slice$5(arguments))};break;case 9:t=function(n,l,r,i,a,o,u,s,c){return t.invoke(e,this,slice$5(arguments))};break;case 10:t=function(n,l,r,i,a,o,u,s,c,d){return t.invoke(e,this,slice$5(arguments))};break;case 11:t=function(n,l,r,i,a,o,u,s,c,d,p){return t.invoke(e,this,slice$5(arguments))};break;case 12:t=function(n,l,r,i,a,o,u,s,c,d,p,f){return t.invoke(e,this,slice$5(arguments))};break;default:t=function(){return t.invoke(e,this,slice$5(arguments))}}else t=function(){return t.invoke(e,this,slice$5(arguments))};return t.isSinonProxy=!0,t}var uuid=0,spyApi={formatters:spyFormatters,resetHistory:function(){if(this.invoking){var e=new Error("Cannot reset Sinon function while invoking it. Move the call to .resetHistory outside of the callback.");throw e.name="InvalidResetException",e}return this.called=!1,this.notCalled=!0,this.calledOnce=!1,this.calledTwice=!1,this.calledThrice=!1,this.callCount=0,this.firstCall=null,this.secondCall=null,this.thirdCall=null,this.lastCall=null,this.args=[],this.returnValues=[],this.thisValues=[],this.exceptions=[],this.callIds=[],this.errorsWithCallStack=[],this.fakes&&forEach$2(this.fakes,(function(e){e.resetHistory?e.resetHistory():e.reset()})),this},create:function(e,n){var t,l=e;"function"!=typeof l?l=function(){}:t=functionName$5(l);var r=createProxy(l,n||l.length);return extend.nonEnum(r,spy),delete r.create,extend.nonEnum(r,l),r.resetHistory(),r.prototype=l.prototype,r.displayName=t||"spy",r.toString=functionToString,r.instantiateFake=spy.create,r.id="spy#"+uuid++,r},invoke:function(e,n,t){var l,r,i=this.matchingFakes(t),a=callId++;incrementCallCount.call(this),push$3(this.thisValues,n),push$3(this.args,t),push$3(this.callIds,a),forEach$2(i,(function(e){incrementCallCount.call(e),push$3(e.thisValues,n),push$3(e.args,t),push$3(e.callIds,a)})),createCallProperties.call(this),forEach$2(i,(function(e){createCallProperties.call(e)}));try{this.invoking=!0,this.getCall(this.callCount-1).calledWithNew()?"object"!=typeof(r=new(bind.apply(this.func||e,concat$3([n],t))))&&(r=n):r=(this.func||e).apply(n,t)}catch(e){l=e}finally{delete this.invoking}push$3(this.exceptions,l),push$3(this.returnValues,r),forEach$2(i,(function(e){push$3(e.exceptions,l),push$3(e.returnValues,r)}));var o=new ErrorConstructor;try{throw o}catch(e){}if(push$3(this.errorsWithCallStack,o),forEach$2(i,(function(e){push$3(e.errorsWithCallStack,o)})),createCallProperties.call(this),forEach$2(i,(function(e){createCallProperties.call(e)})),void 0!==l)throw l;return r},named:function(e){return this.displayName=e,this},getCall:function(e){return e<0||e>=this.callCount?null:call$1(this,this.thisValues[e],this.args[e],this.returnValues[e],this.exceptions[e],this.callIds[e],this.errorsWithCallStack[e])},getCalls:function(){var e,n=[];for(e=0;e<this.callCount;e++)push$3(n,this.getCall(e));return n},calledBefore:function(e){return!!this.called&&(!e.called||this.callIds[0]<e.callIds[e.callIds.length-1])},calledAfter:function(e){return!(!this.called||!e.called)&&this.callIds[this.callCount-1]>e.callIds[0]},calledImmediatelyBefore:function(e){return!(!this.called||!e.called)&&this.callIds[this.callCount-1]===e.callIds[e.callCount-1]-1},calledImmediatelyAfter:function(e){return!(!this.called||!e.called)&&this.callIds[this.callCount-1]===e.callIds[e.callCount-1]+1},withArgs:function(){var e=slice$5(arguments);if(this.fakes){var n=pop(this.matchingFakes(e,!0));if(n)return n}else this.fakes=[];var t=this,l=this.instantiateFake();return l.matchingArguments=e,l.parent=this,push$3(this.fakes,l),t.defaultBehavior&&t.defaultBehavior.promiseLibrary&&(l.defaultBehavior=l.defaultBehavior||createBehavior$1(l),l.defaultBehavior.promiseLibrary=t.defaultBehavior.promiseLibrary),l.withArgs=function(){return t.withArgs.apply(t,arguments)},forEach$2(t.args,(function(e,n){l.matches(e)&&(incrementCallCount.call(l),push$3(l.thisValues,t.thisValues[n]),push$3(l.args,e),push$3(l.returnValues,t.returnValues[n]),push$3(l.exceptions,t.exceptions[n]),push$3(l.callIds,t.callIds[n]))})),createCallProperties.call(l),l},matchingFakes:function(e,n){return filter$1.call(this.fakes||[],(function(t){return t.matches(e,n)}))},matches:function(e,n){var t=this.matchingArguments;if(t.length<=e.length&&deepEqual$4(t,slice$5(e,0,t.length)))return!n||t.length===e.length},printf:function(e){var n,t=this,l=slice$5(arguments,1);return(e||"").replace(/%(.)/g,(function(e,r){return"function"==typeof(n=spyApi.formatters[r])?String(n(t,l)):isNaN(parseInt(r,10))?"%"+r:format_1(l[r-1])}))}};function delegateToCalls(e,n,t,l,r,i){spyApi[e]=function(){if(!this.called)return!!r&&r.apply(this,arguments);if(void 0!==i&&this.callCount!==i)return!1;for(var a,o=0,u=[],s=0,c=this.callCount;s<c;s+=1){var d=(a=this.getCall(s))[t||e].apply(a,arguments);if(push$3(u,d),d&&(o+=1,n))return!0}return l?u:o===this.callCount}}delegateToCalls("calledOn",!0),delegateToCalls("alwaysCalledOn",!1,"calledOn"),delegateToCalls("calledWith",!0),delegateToCalls("calledOnceWith",!0,"calledWith",!1,void 0,1),delegateToCalls("calledWithMatch",!0),delegateToCalls("alwaysCalledWith",!1,"calledWith"),delegateToCalls("alwaysCalledWithMatch",!1,"calledWithMatch"),delegateToCalls("calledWithExactly",!0),delegateToCalls("calledOnceWithExactly",!0,"calledWithExactly",!1,void 0,1),delegateToCalls("alwaysCalledWithExactly",!1,"calledWithExactly"),delegateToCalls("neverCalledWith",!1,"notCalledWith",!1,(function(){return!0})),delegateToCalls("neverCalledWithMatch",!1,"notCalledWithMatch",!1,(function(){return!0})),delegateToCalls("threw",!0),delegateToCalls("alwaysThrew",!1,"threw"),delegateToCalls("returned",!0),delegateToCalls("alwaysReturned",!1,"returned"),delegateToCalls("calledWithNew",!0),delegateToCalls("alwaysCalledWithNew",!1,"calledWithNew"),delegateToCalls("callArg",!1,"callArgWith",!0,(function(){throw new Error(this.toString()+" cannot call arg since it was not yet invoked.")})),spyApi.callArgWith=spyApi.callArg,delegateToCalls("callArgOn",!1,"callArgOnWith",!0,(function(){throw new Error(this.toString()+" cannot call arg since it was not yet invoked.")})),spyApi.callArgOnWith=spyApi.callArgOn,delegateToCalls("throwArg",!1,"throwArg",!1,(function(){throw new Error(this.toString()+" cannot throw arg since it was not yet invoked.")})),delegateToCalls("yield",!1,"yield",!0,(function(){throw new Error(this.toString()+" cannot yield since it was not yet invoked.")})),spyApi.invokeCallback=spyApi.yield,delegateToCalls("yieldOn",!1,"yieldOn",!0,(function(){throw new Error(this.toString()+" cannot yield since it was not yet invoked.")})),delegateToCalls("yieldTo",!1,"yieldTo",!0,(function(e){throw new Error(this.toString()+" cannot yield to '"+valueToString$5(e)+"' since it was not yet invoked.")})),delegateToCalls("yieldToOn",!1,"yieldToOn",!0,(function(e){throw new Error(this.toString()+" cannot yield to '"+valueToString$5(e)+"' since it was not yet invoked.")})),extend(spy,spyApi),spy.spyCall=call$1;var spy_1=spy,arrayProto$9=lib.prototypes.array,slice$6=arrayProto$9.slice,useLeftMostCallback$1=-1,useRightMostCallback$1=-2;function throwsException(e,n,t){"function"==typeof n?e.exceptionCreator=n:"string"==typeof n?e.exceptionCreator=function(){var e=new Error(t||"");return e.name=n,e}:n?e.exception=n:e.exceptionCreator=function(){return new Error("Error")}}var defaultBehaviors={callsFake:function(e,n){e.fakeFn=n},callsArg:function(e,n){if("number"!=typeof n)throw new TypeError("argument index is not number");e.callArgAt=n,e.callbackArguments=[],e.callbackContext=void 0,e.callArgProp=void 0,e.callbackAsync=!1},callsArgOn:function(e,n,t){if("number"!=typeof n)throw new TypeError("argument index is not number");e.callArgAt=n,e.callbackArguments=[],e.callbackContext=t,e.callArgProp=void 0,e.callbackAsync=!1},callsArgWith:function(e,n){if("number"!=typeof n)throw new TypeError("argument index is not number");e.callArgAt=n,e.callbackArguments=slice$6(arguments,2),e.callbackContext=void 0,e.callArgProp=void 0,e.callbackAsync=!1},callsArgOnWith:function(e,n,t){if("number"!=typeof n)throw new TypeError("argument index is not number");e.callArgAt=n,e.callbackArguments=slice$6(arguments,3),e.callbackContext=t,e.callArgProp=void 0,e.callbackAsync=!1},usingPromise:function(e,n){e.promiseLibrary=n},yields:function(e){e.callArgAt=useLeftMostCallback$1,e.callbackArguments=slice$6(arguments,1),e.callbackContext=void 0,e.callArgProp=void 0,e.callbackAsync=!1},yieldsRight:function(e){e.callArgAt=useRightMostCallback$1,e.callbackArguments=slice$6(arguments,1),e.callbackContext=void 0,e.callArgProp=void 0,e.callbackAsync=!1},yieldsOn:function(e,n){e.callArgAt=useLeftMostCallback$1,e.callbackArguments=slice$6(arguments,2),e.callbackContext=n,e.callArgProp=void 0,e.callbackAsync=!1},yieldsTo:function(e,n){e.callArgAt=useLeftMostCallback$1,e.callbackArguments=slice$6(arguments,2),e.callbackContext=void 0,e.callArgProp=n,e.callbackAsync=!1},yieldsToOn:function(e,n,t){e.callArgAt=useLeftMostCallback$1,e.callbackArguments=slice$6(arguments,3),e.callbackContext=t,e.callArgProp=n,e.callbackAsync=!1},throws:throwsException,throwsException,returns:function(e,n){e.returnValue=n,e.resolve=!1,e.reject=!1,e.returnValueDefined=!0,e.exception=void 0,e.exceptionCreator=void 0,e.fakeFn=void 0},returnsArg:function(e,n){if("number"!=typeof n)throw new TypeError("argument index is not number");e.returnArgAt=n},throwsArg:function(e,n){if("number"!=typeof n)throw new TypeError("argument index is not number");e.throwArgAt=n},returnsThis:function(e){e.returnThis=!0},resolves:function(e,n){e.returnValue=n,e.resolve=!0,e.resolveThis=!1,e.reject=!1,e.returnValueDefined=!0,e.exception=void 0,e.exceptionCreator=void 0,e.fakeFn=void 0},resolvesArg:function(e,n){if("number"!=typeof n)throw new TypeError("argument index is not number");e.resolveArgAt=n,e.returnValue=void 0,e.resolve=!0,e.resolveThis=!1,e.reject=!1,e.returnValueDefined=!1,e.exception=void 0,e.exceptionCreator=void 0,e.fakeFn=void 0},rejects:function(e,n,t){var l;return"string"==typeof n?(l=new Error(t||"")).name=n:l=n||new Error("Error"),e.returnValue=l,e.resolve=!1,e.resolveThis=!1,e.reject=!0,e.returnValueDefined=!0,e.exception=void 0,e.exceptionCreator=void 0,e.fakeFn=void 0,e},resolvesThis:function(e){e.returnValue=void 0,e.resolve=!1,e.resolveThis=!0,e.reject=!1,e.returnValueDefined=!1,e.exception=void 0,e.exceptionCreator=void 0,e.fakeFn=void 0},callThrough:function(e){e.callsThrough=!0},get:function(e,n){var t=e.stub||e;return Object.defineProperty(t.rootObj,t.propName,{get:n,configurable:isPropertyConfigurable_1(t.rootObj,t.propName)}),e},set:function(e,n){var t=e.stub||e;return Object.defineProperty(t.rootObj,t.propName,{set:n,configurable:isPropertyConfigurable_1(t.rootObj,t.propName)}),e},value:function(e,n){var t=e.stub||e;return Object.defineProperty(t.rootObj,t.propName,{value:n,enumerable:!0,configurable:isPropertyConfigurable_1(t.rootObj,t.propName)}),e}},asyncBehaviors$1=exportAsyncBehaviors(defaultBehaviors),defaultBehaviors_1=extend({},defaultBehaviors,asyncBehaviors$1);function stubEntireObject(e,n){return walk(n||{},(function(t,l){l!==Object.prototype&&"constructor"!==t&&"function"==typeof getPropertyDescriptor(l,t).value&&e(n,t)})),n}var stubEntireObject_1=stubEntireObject,valueToString$6=lib.valueToString;function throwOnFalsyObject(e,n){if(n&&!e){var t=null===e?"null":"undefined";throw new Error("Trying to stub property '"+valueToString$6(n)+"' of "+t)}}var throwOnFalsyObject_1=throwOnFalsyObject,arrayProto$a=lib.prototypes.array,hasOwnProperty$7=lib.prototypes.object.hasOwnProperty,valueToString$7=lib.valueToString,forEach$3=arrayProto$a.forEach,pop$1=arrayProto$a.pop,slice$7=arrayProto$a.slice,sort$1=arrayProto$a.sort;function stub(e,n){if(arguments.length>2)throw new TypeError("stub(obj, 'meth', fn) has been removed, see documentation");if(isEsModule(e))throw new TypeError("ES Modules cannot be stubbed");if(throwOnFalsyObject_1.apply(null,arguments),isNonExistentOwnProperty_1(e,n))throw new TypeError("Cannot stub non-existent own property "+valueToString$7(n));var t=getPropertyDescriptor(e,n),l=void 0===n&&"object"==typeof e,r=!e&&void 0===n,i=!("object"!=typeof e&&"function"!=typeof e||void 0===n||void 0!==t&&"function"==typeof t.value||"undefined"!=typeof descriptor),a="object"==typeof e&&void 0!==t&&"function"==typeof t.value,o=a?e[n].length:0;if(l)return stubEntireObject_1(stub,e);if(r)return stub.create();var u=stub.create(o);return u.rootObj=e,u.propName=n,u.restore=function(){void 0===t?delete e[n]:Object.defineProperty(e,n,t)},i?u:wrapMethod(e,n,u)}function getParentBehaviour(e){return e.parent&&getCurrentBehavior(e.parent)}function getDefaultBehavior(e){return e.defaultBehavior||getParentBehaviour(e)||behavior.create(e)}function getCurrentBehavior(e){var n=e.behaviors[e.callCount-1];return n&&n.isPresent()?n:getDefaultBehavior(e)}stub.createStubInstance=function(e,n){if("function"!=typeof e)throw new TypeError("The constructor should be a function.");var t=stub(Object.create(e.prototype));return forEach$3(Object.keys(n||{}),(function(e){if(!(e in t))throw new Error("Cannot stub "+e+". Property does not exist!");var l=n[e];l.createStubInstance?t[e]=l:t[e].returns(l)})),t};var uuid$1=0,proto$1={create:function(e){var n=function(){var e=slice$7(arguments),t=n.matchingFakes(e),l=pop$1(sort$1(t,(function(e,n){return e.matchingArguments.length-n.matchingArguments.length})))||n;return getCurrentBehavior(l).invoke(this,arguments)},t=n;return(n=spy_1.create(n,e)).id="stub#"+uuid$1++,n.func=t,extend(n,stub),n.instantiateFake=stub.create,n.displayName="stub",n.toString=functionToString,n.defaultBehavior=null,n.behaviors=[],n},resetBehavior:function(){var e=this.fakes||[];this.defaultBehavior=null,this.behaviors=[],delete this.returnValue,delete this.returnArgAt,delete this.throwArgAt,delete this.resolveArgAt,delete this.fakeFn,this.returnThis=!1,this.resolveThis=!1,forEach$3(e,(function(e){e.resetBehavior()}))},resetHistory:spy_1.resetHistory,reset:function(){this.resetHistory(),this.resetBehavior()},onCall:function(e){return this.behaviors[e]||(this.behaviors[e]=behavior.create(this)),this.behaviors[e]},onFirstCall:function(){return this.onCall(0)},onSecondCall:function(){return this.onCall(1)},onThirdCall:function(){return this.onCall(2)}};forEach$3(Object.keys(behavior),(function(e){hasOwnProperty$7(behavior,e)&&!hasOwnProperty$7(proto$1,e)&&"create"!==e&&"withArgs"!==e&&"invoke"!==e&&(proto$1[e]=behavior.createBehavior(e))})),forEach$3(Object.keys(defaultBehaviors_1),(function(e){hasOwnProperty$7(defaultBehaviors_1,e)&&!hasOwnProperty$7(proto$1,e)&&behavior.addBehavior(stub,e,defaultBehaviors_1[e])})),extend(stub,proto$1);var stub_1=stub,arrayProto$b=lib.prototypes.array,spyInvoke=spy_1.invoke,spyCallToString=call$1.toString,deepEqual$5=deepEqual_1.use(match_1$1),valueToString$8=lib.valueToString,every$5=arrayProto$b.every,forEach$4=arrayProto$b.forEach,push$4=arrayProto$b.push,slice$8=arrayProto$b.slice;function callCountInWords(e){return 0===e?"never called":"called "+timesInWords(e)}function expectedCallCountInWords(e){var n=e.minCalls,t=e.maxCalls;if("number"==typeof n&&"number"==typeof t){var l=timesInWords(n);return n!==t&&(l="at least "+l+" and at most "+timesInWords(t)),l}return"number"==typeof n?"at least "+timesInWords(n):"at most "+timesInWords(t)}function receivedMinCalls(e){return!("number"==typeof e.minCalls)||e.callCount>=e.minCalls}function receivedMaxCalls(e){return"number"==typeof e.maxCalls&&e.callCount===e.maxCalls}function verifyMatcher(e,n){return match_1$1&&match_1$1.isMatcher(e)&&e.test(n)||!0}var mockExpectation={minCalls:1,maxCalls:1,create:function(e){var n=extend(stub_1.create(),mockExpectation);return delete n.create,n.method=e,n},invoke:function(e,n,t){return this.verifyCallAllowed(n,t),spyInvoke.apply(this,arguments)},atLeast:function(e){if("number"!=typeof e)throw new TypeError("'"+valueToString$8(e)+"' is not number");return this.limitsSet||(this.maxCalls=null,this.limitsSet=!0),this.minCalls=e,this},atMost:function(e){if("number"!=typeof e)throw new TypeError("'"+valueToString$8(e)+"' is not number");return this.limitsSet||(this.minCalls=null,this.limitsSet=!0),this.maxCalls=e,this},never:function(){return this.exactly(0)},once:function(){return this.exactly(1)},twice:function(){return this.exactly(2)},thrice:function(){return this.exactly(3)},exactly:function(e){if("number"!=typeof e)throw new TypeError("'"+valueToString$8(e)+"' is not a number");return this.atLeast(e),this.atMost(e)},met:function(){return!this.failed&&receivedMinCalls(this)},verifyCallAllowed:function(e,n){var t=this.expectedArguments;receivedMaxCalls(this)&&(this.failed=!0,mockExpectation.fail(this.method+" already called "+timesInWords(this.maxCalls))),"expectedThis"in this&&this.expectedThis!==e&&mockExpectation.fail(this.method+" called with "+valueToString$8(e)+" as thisValue, expected "+valueToString$8(this.expectedThis)),"expectedArguments"in this&&(n||mockExpectation.fail(this.method+" received no arguments, expected "+format_1(t)),n.length<t.length&&mockExpectation.fail(this.method+" received too few arguments ("+format_1(n)+"), expected "+format_1(t)),this.expectsExactArgCount&&n.length!==t.length&&mockExpectation.fail(this.method+" received too many arguments ("+format_1(n)+"), expected "+format_1(t)),forEach$4(t,(function(e,l){verifyMatcher(e,n[l])||mockExpectation.fail(this.method+" received wrong arguments "+format_1(n)+", didn't match "+String(t)),deepEqual$5(e,n[l])||mockExpectation.fail(this.method+" received wrong arguments "+format_1(n)+", expected "+format_1(t))}),this))},allowsCall:function(e,n){var t=this.expectedArguments;if(this.met()&&receivedMaxCalls(this))return!1;if("expectedThis"in this&&this.expectedThis!==e)return!1;if(!("expectedArguments"in this))return!0;var l=n||[];return!(l.length<t.length)&&(!this.expectsExactArgCount||l.length===t.length)&&every$5(t,(function(e,n){return!!verifyMatcher(e,l[n])&&!!deepEqual$5(e,l[n])}))},withArgs:function(){return this.expectedArguments=slice$8(arguments),this},withExactArgs:function(){return this.withArgs.apply(this,arguments),this.expectsExactArgCount=!0,this},on:function(e){return this.expectedThis=e,this},toString:function(){var e=slice$8(this.expectedArguments||[]);this.expectsExactArgCount||push$4(e,"[...]");var n=spyCallToString.call({proxy:this.method||"anonymous mock expectation",args:e}).replace(", [...","[, ...")+" "+expectedCallCountInWords(this);return this.met()?"Expectation met: "+n:"Expected "+n+" ("+callCountInWords(this.callCount)+")"},verify:function(){return this.met()?mockExpectation.pass(String(this)):mockExpectation.fail(String(this)),!0},pass:function(e){assert_1.pass(e)},fail:function(e){var n=new Error(e);throw n.name="ExpectationError",n}},mockExpectation_1=mockExpectation,forEach$5=Array.prototype.forEach;function usePromiseLibrary(e,n){void 0!==e&&(Array.isArray(n)?forEach$5.call(n,usePromiseLibrary.bind(null,e)):"function"==typeof n.usingPromise&&n.usingPromise(e))}var usePromiseLibrary_1=usePromiseLibrary,arrayProto$c=lib.prototypes.array,spyCallToString$1=call$1.toString,deepEqual$6=deepEqual_1.use(match_1$1),concat$4=arrayProto$c.concat,filter$2=arrayProto$c.filter,forEach$6=arrayProto$c.forEach,every$6=arrayProto$c.every,join$6=arrayProto$c.join,push$5=arrayProto$c.push,slice$9=arrayProto$c.slice,unshift=arrayProto$c.unshift;function mock(e){return e&&"string"!=typeof e?mock.create(e):mockExpectation_1.create(e||"Anonymous mock")}function each(e,n){forEach$6(e||[],n)}function arrayEquals(e,n,t){return(!t||e.length===n.length)&&every$6(e,(function(e,t){return deepEqual$6(e,n[t])}))}extend(mock,{create:function(e){if(!e)throw new TypeError("object is null");var n=extend({},mock);return n.object=e,delete n.create,n},expects:function(e){if(!e)throw new TypeError("method is falsy");if(this.expectations||(this.expectations={},this.proxies=[],this.failures=[]),!this.expectations[e]){this.expectations[e]=[];var n=this;wrapMethod(this.object,e,(function(){return n.invokeMethod(e,this,arguments)})),push$5(this.proxies,e)}var t=mockExpectation_1.create(e);return extend(t,this.object[e]),push$5(this.expectations[e],t),usePromiseLibrary_1(this.promiseLibrary,t),t},restore:function(){var e=this.object;each(this.proxies,(function(n){"function"==typeof e[n].restore&&e[n].restore()}))},verify:function(){var e=this.expectations||{},n=this.failures?slice$9(this.failures):[],t=[];return each(this.proxies,(function(l){each(e[l],(function(e){e.met()?push$5(t,String(e)):push$5(n,String(e))}))})),this.restore(),n.length>0?mockExpectation_1.fail(join$6(concat$4(n,t),"\n")):t.length>0&&mockExpectation_1.pass(join$6(concat$4(n,t),"\n")),!0},usingPromise:function(e){return this.promiseLibrary=e,this},invokeMethod:function(e,n,t){var l,r=this.expectations&&this.expectations[e]?this.expectations[e]:[],i=t||[],a=filter$2(r,(function(e){return arrayEquals(e.expectedArguments||[],i,e.expectsExactArgCount)})),o=filter$2(a,(function(e){return!e.met()&&e.allowsCall(n,t)}));if(o.length>0)return o[0].apply(n,t);var u=[],s=0;if(forEach$6(a,(function(e){e.allowsCall(n,t)?l=l||e:s+=1})),l&&0===s)return l.apply(n,t);forEach$6(r,(function(e){push$5(u,"    "+String(e))})),unshift(u,"Unexpected call: "+spyCallToString$1.call({proxy:e,args:t}));var c=new Error;if(!c.stack)try{throw c}catch(e){}push$5(this.failures,"Unexpected call: "+spyCallToString$1.call({proxy:e,args:t,stack:c.stack})),mockExpectation_1.fail(join$6(u,"\n"))}});var mock_1=mock,arrayProto$d=lib.prototypes.array,forEach$7=arrayProto$d.forEach,slice$a=arrayProto$d.slice;function getError(e){return e instanceof Error?e:new Error(e)}function cleanProxy(e){return forEach$7(["instantiateFake","callArg","callArgOn","callArgOnWith","callArgWith","invokeCallback","throwArg","withArgs","yield","yieldOn","yieldTo","yieldToOn"],(function(n){delete e[n]})),e}var uuid$2=0;function wrapFunc(e){var n=cleanProxy(spy_1((function(){var t=arguments.length>0&&arguments[arguments.length-1]||void 0,l=t&&"function"==typeof t?t:void 0;return n.lastArg=t,n.callback=l,e&&e.apply(this,arguments)})));return n.displayName="fake",n.id="fake#"+uuid$2++,n}function fake(e){if(arguments.length>0&&"function"!=typeof e)throw new TypeError("Expected f argument to be a Function");return wrapFunc(e)}function yieldInternal(e,n){return wrapFunc((function(){var t=arguments[arguments.length-1];if("function"!=typeof t)throw new TypeError("Expected last argument to be a function");e?nextTick$1((function(){t.apply(null,n)})):t.apply(null,n)}))}fake.returns=function(e){return wrapFunc((function(){return e}))},fake.throws=function(e){return wrapFunc((function(){throw getError(e)}))},fake.resolves=function(e){return wrapFunc((function(){return Promise.resolve(e)}))},fake.rejects=function(e){return wrapFunc((function(){return Promise.reject(getError(e))}))},fake.yields=function(){return yieldInternal(!1,slice$a(arguments))},fake.yieldsAsync=function(){return yieldInternal(!0,slice$a(arguments))};var fake_1=fake,nise=createCommonjsModule((function(module,exports){var f;f=function(){return function e(n,t,l){function r(a,o){if(!t[a]){if(!n[a]){var u="function"==typeof commonjsRequire&&commonjsRequire;if(!o&&u)return u(a,!0);if(i)return i(a,!0);var s=new Error("Cannot find module '"+a+"'");throw s.code="MODULE_NOT_FOUND",s}var c=t[a]={exports:{}};n[a][0].call(c.exports,(function(e){return r(n[a][1][e]||e)}),c,c.exports,e,n,t,l)}return t[a].exports}for(var i="function"==typeof commonjsRequire&&commonjsRequire,a=0;a<l.length;a++)r(l[a]);return r}({1:[function(e,n,t){var l=setTimeout;n.exports=function(e){return(e=e||{}).hasOwnProperty("logger")||(e.logger=function(){}),e.hasOwnProperty("useImmediateExceptions")||(e.useImmediateExceptions=!0),e.hasOwnProperty("setTimeout")||(e.setTimeout=l),function(n,t){var l=n+" threw exception: ",r={name:t.name||n,message:t.message||t.toString(),stack:t.stack};function i(){throw r.message=l+r.message,r}e.logger(l+"["+r.name+"] "+r.message),r.stack&&e.logger(r.stack),e.useImmediateExceptions?i():e.setTimeout(i,0)}}},{}],2:[function(e,n,t){var l=e("./event");function r(e,n,t){this.initEvent(e,!1,!1,t),this.detail=n.detail||null}r.prototype=new l,r.prototype.constructor=r,n.exports=r},{"./event":4}],3:[function(e,n,t){function l(e){return e!==Object(e)?{capture:Boolean(e),once:!1,passive:!1}:{capture:Boolean(e.capture),once:Boolean(e.once),passive:Boolean(e.passive)}}function r(e,n){return function(t){return t.capture===n&&t.listener===e}}var i={addEventListener:function(e,n,t){var i=l(t);null!=n&&(this.eventListeners=this.eventListeners||{},this.eventListeners[e]=this.eventListeners[e]||[],this.eventListeners[e].some(r(n,i.capture))||this.eventListeners[e].push({listener:n,capture:i.capture,once:i.once}))},removeEventListener:function(e,n,t){if(this.eventListeners&&this.eventListeners[e]){var i,a=l(t);this.eventListeners[e]=this.eventListeners[e].filter((i=r(n,a.capture),function(){return!i.apply(this,arguments)}))}},dispatchEvent:function(e){if(!this.eventListeners||!this.eventListeners[e.type])return Boolean(e.defaultPrevented);var n=this,t=e.type,l=n.eventListeners[t];return n.eventListeners[t]=l.filter((function(e){return!e.once})),l.forEach((function(t){var l=t.listener;"function"==typeof l?l.call(n,e):l.handleEvent(e)})),Boolean(e.defaultPrevented)}};n.exports=i},{}],4:[function(e,n,t){function l(e,n,t,l){this.initEvent(e,n,t,l)}l.prototype={initEvent:function(e,n,t,l){this.type=e,this.bubbles=n,this.cancelable=t,this.target=l,this.currentTarget=l},stopPropagation:function(){},preventDefault:function(){this.defaultPrevented=!0}},n.exports=l},{}],5:[function(e,n,t){n.exports={Event:e("./event"),ProgressEvent:e("./progress-event"),CustomEvent:e("./custom-event"),EventTarget:e("./event-target")}},{"./custom-event":2,"./event":4,"./event-target":3,"./progress-event":6}],6:[function(e,n,t){var l=e("./event");function r(e,n,t){this.initEvent(e,!1,!1,t),this.loaded="number"==typeof n.loaded?n.loaded:null,this.total="number"==typeof n.total?n.total:null,this.lengthComputable=!!n.total}r.prototype=new l,r.prototype.constructor=r,n.exports=r},{"./event":4}],7:[function(e,n,t){var l=e("lolex"),r=e("./index");function i(){}i.prototype=r;var a=new i;a.addRequest=function(e){if(e.async&&("object"==typeof setTimeout.clock?this.clock=setTimeout.clock:(this.clock=l.install(),this.resetClock=!0),!this.longestTimeout)){var n=this.clock.setTimeout,t=this.clock.setInterval,i=this;this.clock.setTimeout=function(e,t){return i.longestTimeout=Math.max(t,i.longestTimeout||0),n.apply(this,arguments)},this.clock.setInterval=function(e,n){return i.longestTimeout=Math.max(n,i.longestTimeout||0),t.apply(this,arguments)}}return r.addRequest.call(this,e)},a.respond=function(){var e=r.respond.apply(this,arguments);return this.clock&&(this.clock.tick(this.longestTimeout||0),this.longestTimeout=0,this.resetClock&&(this.clock.uninstall(),this.resetClock=!1)),e},a.restore=function(){return this.clock&&this.clock.uninstall(),r.restore.apply(this,arguments)},n.exports=a},{"./index":9,lolex:32}],8:[function(e,n,t){var l=e("@sinonjs/formatio").configure({quoteStrings:!1,limitChildrenCount:250});n.exports=function(){return l.ascii.apply(l,arguments)}},{"@sinonjs/formatio":13}],9:[function(e,n,t){var l=e("../fake-xhr"),r=[].push,i=e("./format"),a=e("../configure-logger"),o=e("path-to-regexp"),u="undefined"!=typeof ArrayBuffer;function s(e){var n=e;if("[object Array]"!==Object.prototype.toString.call(e)&&(n=[200,{},e]),"string"!=typeof n[2]){if(!u)throw new TypeError("Fake server response body should be a string, but was "+typeof n[2]);if(!(n[2]instanceof ArrayBuffer))throw new TypeError("Fake server response body should be a string or ArrayBuffer, but was "+typeof n[2])}return n}function c(e,n){var t="undefined"==typeof window?{host:"localhost",protocol:"http"}:void 0!==window.location?window.location:void 0!==window.window&&void 0!==window.window.location?window.window.location:{host:"localhost",protocol:"http"},l=new RegExp("^"+t.protocol+"//"+t.host),r=n.url;if(/^https?:\/\//.test(r)&&!l.test(r)||(r=r.replace(l,"")),function(e,n,t){var l=e.method,r=!l||l.toLowerCase()===n.toLowerCase(),i=e.url,a=!i||i===t||"function"==typeof i.test&&i.test(t);return r&&a}(e,this.getHTTPMethod(n),r)){if("function"==typeof e.response){var i=e.url,a=[n].concat(i&&"function"==typeof i.exec?i.exec(r).slice(1):[]);return e.response.apply(e,a)}return!0}return!1}function d(){var e=++this.requestCount;this.requested=!0,this.requestedOnce=1===e,this.requestedTwice=2===e,this.requestedThrice=3===e,this.firstRequest=this.getRequest(0),this.secondRequest=this.getRequest(1),this.thirdRequest=this.getRequest(2),this.lastRequest=this.getRequest(e-1)}var p={create:function(e){var n=Object.create(this);return n.configure(e),this.xhr=l.useFakeXMLHttpRequest(),n.requests=[],n.requestCount=0,n.queue=[],n.responses=[],this.xhr.onCreate=function(e){e.unsafeHeadersEnabled=function(){return!(!1===n.unsafeHeadersEnabled)},n.addRequest(e)},n},configure:function(e){var n=this,t={autoRespond:!0,autoRespondAfter:!0,respondImmediately:!0,fakeHTTPMethods:!0,logger:!0,unsafeHeadersEnabled:!0};e=e||{},Object.keys(e).forEach((function(l){l in t&&(n[l]=e[l])})),n.logError=a(e)},addRequest:function(e){var n=this;r.call(this.requests,e),d.call(this),e.onSend=function(){n.handleRequest(this),n.respondImmediately?n.respond():n.autoRespond&&!n.responding&&(setTimeout((function(){n.responding=!1,n.respond()}),n.autoRespondAfter||10),n.responding=!0)}},getHTTPMethod:function(e){if(this.fakeHTTPMethods&&/post/i.test(e.method)){var n=(e.requestBody||"").match(/_method=([^\b;]+)/);return n?n[1]:e.method}return e.method},handleRequest:function(e){e.async?r.call(this.queue,e):this.processRequest(e)},logger:function(){},logError:a({}),log:function(e,n){var t;t="Request:\n"+i(n)+"\n\n",t+="Response:\n"+i(e)+"\n\n","function"==typeof this.logger&&this.logger(t)},respondWith:function(e,n,t){1!==arguments.length||"function"==typeof e?(1===arguments.length&&(t=e,n=e=null),2===arguments.length&&(t=n,n=e,e=null),r.call(this.responses,{method:e,url:"string"==typeof n&&""!==n?o(n):n,response:"function"==typeof t?t:s(t)})):this.response=s(e)},respond:function(){arguments.length>0&&this.respondWith.apply(this,arguments);var e=this.queue||[],n=e.splice(0,e.length),t=this;n.forEach((function(e){t.processRequest(e)}))},processRequest:function(e){try{if(e.aborted)return;var n=this.response||[404,{},""];if(this.responses)for(var t=this.responses.length-1;t>=0;t--)if(c.call(this,this.responses[t],e)){n=this.responses[t].response;break}4!==e.readyState&&(this.log(n,e),e.respond(n[0],n[1],n[2]))}catch(e){this.logError("Fake server request processing",e)}},restore:function(){return this.xhr.restore&&this.xhr.restore.apply(this.xhr,arguments)},getRequest:function(e){return this.requests[e]||null},reset:function(){this.resetBehavior(),this.resetHistory()},resetBehavior:function(){this.responses.length=this.queue.length=0},resetHistory:function(){this.requests.length=this.requestCount=0,this.requestedOnce=this.requestedTwice=this.requestedThrice=this.requested=!1,this.firstRequest=this.secondRequest=this.thirdRequest=this.lastRequest=null}};n.exports=p},{"../configure-logger":1,"../fake-xhr":11,"./format":8,"path-to-regexp":33}],10:[function(e,n,t){t.isSupported=function(){try{return!!new Blob}catch(e){return!1}}()},{}],11:[function(e,n,t){(function(t){var l,r=e("text-encoding").TextEncoder,i=e("../configure-logger"),a=e("../event"),o=e("just-extend"),u="undefined"!=typeof ProgressEvent,s="undefined"!=typeof CustomEvent,c="undefined"!=typeof FormData,d="undefined"!=typeof ArrayBuffer,p=e("./blob").isSupported,f=t.navigator&&"ReactNative"===t.navigator.product,h={XMLHttpRequest:t.XMLHttpRequest};h.GlobalXMLHttpRequest=t.XMLHttpRequest,h.GlobalActiveXObject=t.ActiveXObject,h.supportsActiveX=void 0!==h.GlobalActiveXObject,h.supportsXHR=void 0!==h.GlobalXMLHttpRequest,h.workingXHR=void 0!==(l=t).XMLHttpRequest?l.XMLHttpRequest:!(void 0===l.ActiveXObject)&&function(){return new l.ActiveXObject("MSXML2.XMLHTTP.3.0")},h.supportsTimeout=h.supportsXHR&&"timeout"in new h.GlobalXMLHttpRequest,h.supportsCORS=f||h.supportsXHR&&"withCredentials"in new h.GlobalXMLHttpRequest;var m={"Accept-Charset":!0,"Access-Control-Request-Headers":!0,"Access-Control-Request-Method":!0,"Accept-Encoding":!0,Connection:!0,"Content-Length":!0,Cookie:!0,Cookie2:!0,"Content-Transfer-Encoding":!0,Date:!0,DNT:!0,Expect:!0,Host:!0,"Keep-Alive":!0,Origin:!0,Referer:!0,TE:!0,Trailer:!0,"Transfer-Encoding":!0,Upgrade:!0,"User-Agent":!0,Via:!0};function b(){var e=this;["loadstart","progress","abort","error","load","timeout","loadend"].forEach((function(n){e.addEventListener(n,(function(t){var l=e["on"+n];l&&"function"==typeof l&&l.call(this,t)}))}))}function g(e){b.call(this),this.readyState=g.UNSENT,this.requestHeaders={},this.requestBody=null,this.status=0,this.statusText="",this.upload=new b,this.responseType="",this.response="",this.logError=i(e),h.supportsTimeout&&(this.timeout=0),h.supportsCORS&&(this.withCredentials=!1),"function"==typeof g.onCreate&&g.onCreate(this)}function M(e){if(e.readyState!==g.OPENED)throw new Error("INVALID_STATE_ERR");if(e.sendFlag)throw new Error("INVALID_STATE_ERR")}function y(e,n){return Object.keys(e).filter((function(e){return e.toLowerCase()===n.toLowerCase()}))[0]||null}function v(e){return!/^Set-Cookie2?$/i.test(e)}b.prototype=a.EventTarget;var A=function(e,n,t){switch(t.length){case 0:return e[n]();case 1:return e[n](t[0]);case 2:return e[n](t[0],t[1]);case 3:return e[n](t[0],t[1],t[2]);case 4:return e[n](t[0],t[1],t[2],t[3]);case 5:return e[n](t[0],t[1],t[2],t[3],t[4]);default:throw new Error("Unhandled case")}};function w(e){if(e.readyState!==g.OPENED)throw new Error("INVALID_STATE_ERR - "+e.readyState)}function _(e,n){return e instanceof ArrayBuffer?e:new r(n||"utf-8").encode(e).buffer}function C(e){return!e||/(text\/xml)|(application\/xml)|(\+xml)/.test(e)}function T(e){""===e.responseType||"text"===e.responseType?e.response=e.responseText="":e.response=e.responseText=null,e.responseXML=null}function S(e){T(e),e.errorFlag=!0,e.requestHeaders={},e.responseHeaders={},e.readyState!==g.UNSENT&&e.sendFlag&&e.readyState!==g.DONE&&(e.readyStateChange(g.DONE),e.sendFlag=!1)}g.filters=[],g.addFilter=function(e){this.filters.push(e)},g.defake=function(e,n){var t=new h.workingXHR;["open","setRequestHeader","abort","getResponseHeader","getAllResponseHeaders","addEventListener","overrideMimeType","removeEventListener"].forEach((function(n){e[n]=function(){return A(t,n,arguments)}})),e.send=function(){return t.responseType!==e.responseType&&(t.responseType=e.responseType),A(t,"send",arguments)};var l=function(n){n.forEach((function(n){e[n]=t[n]}))},r=function(){e.readyState=t.readyState,t.readyState>=g.HEADERS_RECEIVED&&l(["status","statusText"]),t.readyState>=g.LOADING&&(l(["response"]),""!==t.responseType&&"text"!==t.responseType||l(["responseText"])),t.readyState!==g.DONE||""!==t.responseType&&"document"!==t.responseType||l(["responseXML"])},i=function(){e.onreadystatechange&&e.onreadystatechange.call(e,{target:e,currentTarget:e})};t.addEventListener?(t.addEventListener("readystatechange",r),Object.keys(e.eventListeners).forEach((function(n){e.eventListeners[n].forEach((function(e){t.addEventListener(n,e.listener,{capture:e.capture,once:e.once})}))})),t.addEventListener("readystatechange",i)):t.onreadystatechange=function(){r(),i()},A(t,"open",n)},g.useFilters=!1,g.parseXML=function(e){if(""!==e)try{if("undefined"!=typeof DOMParser){var n,t=new DOMParser,l="";try{var r=t.parseFromString("INVALID","text/xml").getElementsByTagName("parsererror");r.length&&(l=r[0].namespaceURI)}catch(e){}try{n=t.parseFromString(e,"text/xml")}catch(e){return null}return n.getElementsByTagNameNS(l,"parsererror").length?null:n}var i=new window.ActiveXObject("Microsoft.XMLDOM");return i.async="false",i.loadXML(e),0!==i.parseError.errorCode?null:i}catch(e){}return null},g.statusCodes={100:"Continue",101:"Switching Protocols",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",300:"Multiple Choice",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",416:"Requested Range Not Satisfiable",417:"Expectation Failed",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported"},o(g.prototype,a.EventTarget,{async:!0,open:function(e,n,t,l,r){if(this.method=e,this.url=n,this.async="boolean"!=typeof t||t,this.username=l,this.password=r,T(this),this.requestHeaders={},this.sendFlag=!1,!0===g.useFilters){var i=arguments,a=g.filters.some((function(e){return e.apply(this,i)}));if(a)return void g.defake(this,arguments)}this.readyStateChange(g.OPENED)},readyStateChange:function(e){this.readyState=e;var n,t,l=new a.Event("readystatechange",!1,!1,this);if("function"==typeof this.onreadystatechange)try{this.onreadystatechange(l)}catch(e){this.logError("Fake XHR onreadystatechange handler",e)}this.readyState===g.DONE&&(this.timedOut||this.aborted||0===this.status?(t={loaded:0,total:0},n=(this.timedOut?"timeout":this.aborted&&"abort")||"error"):(t={loaded:100,total:100},n="load"),u&&(this.upload.dispatchEvent(new a.ProgressEvent("progress",t,this)),this.upload.dispatchEvent(new a.ProgressEvent(n,t,this)),this.upload.dispatchEvent(new a.ProgressEvent("loadend",t,this))),this.dispatchEvent(new a.ProgressEvent("progress",t,this)),this.dispatchEvent(new a.ProgressEvent(n,t,this)),this.dispatchEvent(new a.ProgressEvent("loadend",t,this))),this.dispatchEvent(l)},setRequestHeader:function(e,n){if("string"!=typeof n)throw new TypeError("By RFC7230, section 3.2.4, header values should be strings. Got "+typeof n);M(this);var t=!0;if("function"==typeof this.unsafeHeadersEnabled&&(t=this.unsafeHeadersEnabled()),t&&(null!==y(m,e)||/^(Sec-|Proxy-)/i.test(e)))throw new Error('Refused to set unsafe header "'+e+'"');n=function(e){return e.replace(/^[\x09\x0A\x0D\x20]+|[\x09\x0A\x0D\x20]+$/g,"")}(n);var l=y(this.requestHeaders,e);l?this.requestHeaders[l]+=", "+n:this.requestHeaders[e]=n},setStatus:function(e){var n="number"==typeof e?e:200;w(this),this.status=n,this.statusText=g.statusCodes[n]},setResponseHeaders:function(e){w(this);var n=this.responseHeaders={};Object.keys(e).forEach((function(t){n[t]=e[t]})),this.async?this.readyStateChange(g.HEADERS_RECEIVED):this.readyState=g.HEADERS_RECEIVED},send:function(e){if(M(this),!/^(head)$/i.test(this.method)){var n=y(this.requestHeaders,"Content-Type");if(this.requestHeaders[n]){var t=this.requestHeaders[n].split(";");this.requestHeaders[n]=t[0]+";charset=utf-8"}else!c||e instanceof FormData||(this.requestHeaders["Content-Type"]="text/plain;charset=utf-8");this.requestBody=e}if(this.errorFlag=!1,this.sendFlag=this.async,T(this),this.readyStateChange(g.OPENED),"function"==typeof this.onSend&&this.onSend(this),h.supportsTimeout&&"object"==typeof setInterval.clock&&"object"==typeof Date.clock)var l=Date.now(),r=this,i=setInterval((function(){r.readyState===g.UNSENT||r.readyState===g.DONE?clearInterval(i):"number"==typeof r.timeout&&r.timeout>0&&Date.now()>=l+r.timeout&&(r.triggerTimeout(),clearInterval(i))}),1);this.dispatchEvent(new a.Event("loadstart",!1,!1,this))},abort:function(){this.aborted=!0,S(this),this.readyState=g.UNSENT},error:function(){T(this),this.errorFlag=!0,this.requestHeaders={},this.responseHeaders={},this.readyStateChange(g.DONE)},triggerTimeout:function(){h.supportsTimeout&&(this.timedOut=!0,S(this))},getResponseHeader:function(e){return this.readyState<g.HEADERS_RECEIVED||/^Set-Cookie2?$/i.test(e)?null:(e=y(this.responseHeaders,e),this.responseHeaders[e]||null)},getAllResponseHeaders:function(){if(this.readyState<g.HEADERS_RECEIVED)return"";var e=this.responseHeaders;return Object.keys(e).filter(v).reduce((function(n,t){return n+(t+": ")+e[t]+"\r\n"}),"")},setResponseBody:function(e){!function(e){if(e.readyState===g.DONE)throw new Error("Request done")}(this),function(e){if(e.async&&e.readyState!==g.HEADERS_RECEIVED)throw new Error("No headers received")}(this),function(e,n){var t=null,l="string"==typeof e;if("arraybuffer"===n?l||e instanceof ArrayBuffer||((t=new Error("Attempted to respond to fake XMLHttpRequest with "+e+", which is not a string or ArrayBuffer.")).name="InvalidBodyException"):l||((t=new Error("Attempted to respond to fake XMLHttpRequest with "+e+", which is not a string.")).name="InvalidBodyException"),t)throw t}(e,this.responseType);var n=this.overriddenMimeType||this.getResponseHeader("Content-Type"),t=""===this.responseType||"text"===this.responseType;if(T(this),this.async){var l=this.chunkSize||10,r=0;do{this.readyStateChange(g.LOADING),t&&(this.responseText=this.response+=e.substring(r,r+l)),r+=l}while(r<e.length)}this.response=function(e,n,t){if(""===e||"text"===e)return t;if(d&&"arraybuffer"===e)return _(t);if("json"===e)try{return JSON.parse(t)}catch(e){return null}else{if(p&&"blob"===e){var l={};return n&&(l.type=n),new Blob([_(t)],l)}if("document"===e)return C(n)?g.parseXML(t):null}throw new Error("Invalid responseType "+e)}(this.responseType,n,e),t&&(this.responseText=this.response),"document"===this.responseType?this.responseXML=this.response:""===this.responseType&&C(n)&&(this.responseXML=g.parseXML(this.responseText)),this.readyStateChange(g.DONE)},respond:function(e,n,t){this.setStatus(e),this.setResponseHeaders(n||{}),this.setResponseBody(t||"")},uploadProgress:function(e){u&&this.upload.dispatchEvent(new a.ProgressEvent("progress",e,this.upload))},downloadProgress:function(e){u&&this.dispatchEvent(new a.ProgressEvent("progress",e,this))},uploadError:function(e){s&&this.upload.dispatchEvent(new a.CustomEvent("error",{detail:e}))},overrideMimeType:function(e){if(this.readyState>=g.LOADING)throw new Error("INVALID_STATE_ERR");this.overriddenMimeType=e}});var z={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4};o(g,z),o(g.prototype,z),n.exports={xhr:h,FakeXMLHttpRequest:g,useFakeXMLHttpRequest:function(){return g.restore=function(e){h.supportsXHR&&(t.XMLHttpRequest=h.GlobalXMLHttpRequest),h.supportsActiveX&&(t.ActiveXObject=h.GlobalActiveXObject),delete g.restore,!0!==e&&delete g.onCreate},h.supportsXHR&&(t.XMLHttpRequest=g),h.supportsActiveX&&(t.ActiveXObject=function(e){return"Microsoft.XMLHTTP"===e||/^Msxml2\.XMLHTTP/i.test(e)?new g:new h.GlobalActiveXObject(e)}),g}}}).call(this,void 0!==commonjsGlobal?commonjsGlobal:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../configure-logger":1,"../event":5,"./blob":10,"just-extend":31,"text-encoding":34}],12:[function(e,n,t){n.exports={fakeServer:e("./fake-server"),fakeServerWithClock:e("./fake-server/fake-server-with-clock"),fakeXhr:e("./fake-xhr")}},{"./fake-server":9,"./fake-server/fake-server-with-clock":7,"./fake-xhr":11}],13:[function(e,n,t){(function(t){var l=e("@sinonjs/samsam"),r={excludeConstructors:["Object",/^.$/],quoteStrings:!0,limitChildrenCount:0},i=[];function a(e){if(!e)return"";if(e.displayName)return e.displayName;if(e.name)return e.name;var n=e.toString().match(/function\s+([^\(]+)/m);return n&&n[1]||""}function o(e,n){var t,l,i=a(n&&n.constructor),o=e.excludeConstructors||r.excludeConstructors||[];for(t=0,l=o.length;t<l;++t){if("string"==typeof o[t]&&o[t]===i)return"";if(o[t].test&&o[t].test(i))return""}return i}function u(e,n){if("object"!=typeof e)return!1;var t,l;for(t=0,l=n.length;t<l;++t)if(n[t]===e)return!0;return!1}function s(e,n,t,r){if("string"==typeof n){if(0===n.length)return"(empty string)";var a=e.quoteStrings;return t||"boolean"!=typeof a||a?'"'+n+'"':n}if("function"==typeof n&&!(n instanceof RegExp))return s.func(n);if(u(n,t=t||[]))return"[Circular]";if("[object Array]"===Object.prototype.toString.call(n))return s.array.call(e,n,t);if(!n)return String(1/n==-1/0?"-0":n);if(l.isElement(n))return s.element(n);if("function"==typeof n.toString&&n.toString!==Object.prototype.toString)return n.toString();var o,c;for(o=0,c=i.length;o<c;o++)if(n===i[o].object)return i[o].value;return"undefined"!=typeof Set&&n instanceof Set?s.set.call(e,n,t):s.object.call(e,n,t,r)}function c(e){for(var n in e)this[n]=e[n]}void 0!==t&&i.push({object:t,value:"[object global]"}),"undefined"!=typeof document&&i.push({object:document,value:"[object HTMLDocument]"}),"undefined"!=typeof window&&i.push({object:window,value:"[object Window]"}),s.func=function(e){return"function "+a(e)+"() {}"},s.array=function(e,n,t){(n=n||[]).push(e);var l,r,i=[];for(r=this.limitChildrenCount>0?Math.min(this.limitChildrenCount,e.length):e.length,l=0;l<r;++l)i.push(s(this,e[l],n));return r<e.length&&i.push("[... "+(e.length-r)+" more elements]"),function(e,n){return(n=n||["[","]"])[0]+e+n[1]}(i.join(", "),t)},s.set=function(e,n){return s.array.call(this,Array.from(e),n,["Set {","}"])},s.object=function(e,n,t){(n=n||[]).push(e),t=t||0;var l,r,i,a,c,d,p=[],f=Object.keys(e).sort(),h=3;for(d=this.limitChildrenCount>0?Math.min(this.limitChildrenCount,f.length):f.length,a=0;a<d;++a)r=u(i=e[l=f[a]],n)?"[Circular]":s(this,i,n,t+2),h+=(r=(/\s/.test(l)?'"'+l+'"':l)+": "+r).length,p.push(r);var m=o(this,e),b=m?"["+m+"] ":"",g="";for(a=0,c=t;a<c;++a)g+=" ";return d<f.length&&p.push("[... "+(f.length-d)+" more elements]"),h+t>80?b+"{\n  "+g+p.join(",\n  "+g)+"\n"+g+"}":b+"{ "+p.join(", ")+" }"},s.element=function(e){var n,t,l,r,i,a=e.tagName.toLowerCase(),o=e.attributes,u=[];for(l=0,r=o.length;l<r;++l)t=(n=o.item(l)).nodeName.toLowerCase().replace("html:",""),i=n.nodeValue,"contenteditable"===t&&"inherit"===i||i&&u.push(t+'="'+i+'"');var s="<"+a+(u.length>0?" ":""),c=e.innerHTML||"";return c.length>20&&(c=c.substr(0,20)+"[...]"),(s+u.join(" ")+">"+c+"</"+a+">").replace(/ contentEditable="inherit"/,"")},c.prototype={functionName:a,configure:function(e){return new c(e)},constructorName:function(e){return o(this,e)},ascii:function(e,n,t){return s(this,e,n,t)}},n.exports=c.prototype}).call(this,void 0!==commonjsGlobal?commonjsGlobal:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"@sinonjs/samsam":27}],14:[function(e,n,t){var l=e("./get-class"),r=e("./identical"),i=e("./is-arguments"),a=e("./is-date"),o=e("./is-element"),u=e("./is-nan"),s=e("./is-object"),c=e("./is-set"),d=e("./is-subset"),p=e("./get-class-name"),f=Array.prototype.every,h=Date.prototype.getTime,m=Object.prototype.hasOwnProperty,b=Array.prototype.indexOf,g=Object.keys;n.exports=function(e,n){var t=[],M=[],y=[],v=[],A={};return function e(n,w,_,C){var T=typeof n,S=typeof w;if(n===w||u(n)||u(w)||null==n||null==w||"object"!==T||"object"!==S)return r(n,w);if(o(n)||o(w))return!1;var z=a(n),O=a(w);if((z||O)&&(!z||!O||h.call(n)!==h.call(w)))return!1;if(n instanceof RegExp&&w instanceof RegExp&&n.toString()!==w.toString())return!1;if(n instanceof Error&&w instanceof Error&&n.stack!==w.stack)return!1;var E=l(n),L=l(w),x=g(n),k=g(w),N=p(n),B=p(w);if(i(n)||i(w)){if(n.length!==w.length)return!1}else if(T!==S||E!==L||x.length!==k.length||N&&B&&N!==B)return!1;return c(n)||c(w)?!(!c(n)||!c(w)||n.size!==w.size)&&d(n,w,e):f.call(x,(function(l){if(!m.call(w,l))return!1;var r=n[l],i=w[l],a=s(r),o=s(i),u=a?b.call(t,r):-1,c=o?b.call(M,i):-1,d=-1!==u?y[u]:_+"["+JSON.stringify(l)+"]",p=-1!==c?v[c]:C+"["+JSON.stringify(l)+"]",f=d+p;return!!A[f]||(-1===u&&a&&(t.push(r),y.push(d)),-1===c&&o&&(M.push(i),v.push(p)),a&&o&&(A[f]=!0),e(r,i,d,p))}))}(e,n,"$1","$2")}},{"./get-class":16,"./get-class-name":15,"./identical":17,"./is-arguments":18,"./is-date":19,"./is-element":20,"./is-nan":21,"./is-object":23,"./is-set":24,"./is-subset":25}],15:[function(e,n,t){n.exports=function(e){return Object.getPrototypeOf(e)?e.constructor.name:null}},{}],16:[function(e,n,t){var l=Object.prototype;n.exports=function(e){return l.toString.call(e).split(/[ \]]/)[1]}},{}],17:[function(e,n,t){var l=e("./is-nan"),r=e("./is-neg-zero");n.exports=function(e,n){return!!(e===n||l(e)&&l(n))&&(0!==e||r(e)===r(n))}},{"./is-nan":21,"./is-neg-zero":22}],18:[function(e,n,t){var l=e("./get-class");n.exports=function(e){if("Arguments"===l(e))return!0;if("object"!=typeof e||"number"!=typeof e.length||"Array"===l(e))return!1;if("function"==typeof e.callee)return!0;try{e[e.length]=6,delete e[e.length]}catch(e){return!0}return!1}},{"./get-class":16}],19:[function(e,n,t){n.exports=function(e){return e instanceof Date}},{}],20:[function(e,n,t){var l="undefined"!=typeof document&&document.createElement("div");n.exports=function(e){if(!e||1!==e.nodeType||!l)return!1;try{e.appendChild(l),e.removeChild(l)}catch(e){return!1}return!0}},{}],21:[function(e,n,t){n.exports=function(e){return"number"==typeof e&&e!=e}},{}],22:[function(e,n,t){n.exports=function(e){return 0===e&&1/e==-1/0}},{}],23:[function(e,n,t){n.exports=function(e){return!("object"!=typeof e||null===e||e instanceof Boolean||e instanceof Date||e instanceof Error||e instanceof Number||e instanceof RegExp||e instanceof String)}},{}],24:[function(e,n,t){n.exports=function(e){return"undefined"!=typeof Set&&e instanceof Set||!1}},{}],25:[function(e,n,t){var l=e("array-from");n.exports=function(e,n,t){for(var r=l(e),i=l(n),a=0;a<r.length;a++){for(var o=!1,u=0;u<i.length;u++)if(t(i[u],r[a])){o=!0;break}if(!o)return!1}return!0}},{"array-from":28}],26:[function(e,n,t){var l=e("./get-class"),r=e("./is-date"),i=e("./is-set"),a=e("./is-subset");n.exports=function e(n,t){if(t&&"function"==typeof t.test)return t.test(n);if("function"==typeof t)return!0===t(n);if("string"==typeof t)return t=t.toLowerCase(),("string"==typeof n||!!n)&&String(n).toLowerCase().indexOf(t)>=0;if("number"==typeof t)return t===n;if("boolean"==typeof t)return t===n;if(void 0===t)return void 0===n;if(null===t)return null===n;if(i(n))return a(t,n,e);if("Array"===l(n)&&"Array"===l(t))return function(e,n,t){if(0===n.length)return!0;var l,r,i,a;for(l=0,r=e.length;l<r;++l)if(t(e[l],n[0])){for(i=0,a=n.length;i<a;++i){if(l+i>=r)return!1;if(!t(e[l+i],n[i]))return!1}return!0}return!1}(n,t,e);if(r(t))return r(n)&&n.getTime()===t.getTime();if(t&&"object"==typeof t){if(t===n)return!0;var o;for(o in t){var u=n[o];if(void 0===u&&"function"==typeof n.getAttribute&&(u=n.getAttribute(o)),null===t[o]||void 0===t[o]){if(u!==t[o])return!1}else if(void 0===u||!e(u,t[o]))return!1}return!0}throw new Error("Matcher was not a string, a number, a function, a boolean or an object")}},{"./get-class":16,"./is-date":19,"./is-set":24,"./is-subset":25}],27:[function(e,n,t){var l=e("./deep-equal"),r=e("./identical"),i=e("./is-arguments"),a=e("./is-element"),o=e("./is-neg-zero"),u=e("./match");n.exports={isArguments:i,isElement:a,isNegZero:o,identical:r,deepEqual:l,match:u}},{"./deep-equal":14,"./identical":17,"./is-arguments":18,"./is-element":20,"./is-neg-zero":22,"./match":26}],28:[function(e,n,t){n.exports="function"==typeof Array.from?Array.from:e("./polyfill")},{"./polyfill":29}],29:[function(e,n,t){n.exports=function(){var e=function(e){return"function"==typeof e},n=Math.pow(2,53)-1,t=function(e){var t=function(e){var n=Number(e);return isNaN(n)?0:0!==n&&isFinite(n)?(n>0?1:-1)*Math.floor(Math.abs(n)):n}(e);return Math.min(Math.max(t,0),n)},l=function(e){if(null!=e){if(["string","number","boolean","symbol"].indexOf(typeof e)>-1)return Symbol.iterator;if("undefined"!=typeof Symbol&&"iterator"in Symbol&&Symbol.iterator in e)return Symbol.iterator;if("@@iterator"in e)return"@@iterator"}},r=function(n,t){if(null!=n&&null!=t){var l=n[t];if(null==l)return;if(!e(l))throw new TypeError(l+" is not a function");return l}},i=function(e){var n=e.next();return!Boolean(n.done)&&n};return function(n){var a,o,u,s=this,c=arguments.length>1?arguments[1]:void 0;if(void 0!==c){if(!e(c))throw new TypeError("Array.from: when provided, the second argument must be a function");arguments.length>2&&(a=arguments[2])}var d=r(n,l(n));if(void 0!==d){o=e(s)?Object(new s):[];var p,f,h=d.call(n);if(null==h)throw new TypeError("Array.from requires an array-like or iterable object");for(u=0;;){if(!(p=i(h)))return o.length=u,o;f=p.value,o[u]=c?c.call(a,f,u):f,u++}}else{var m=Object(n);if(null==n)throw new TypeError("Array.from requires an array-like object - not null or undefined");var b,g=t(m.length);for(o=e(s)?Object(new s(g)):new Array(g),u=0;u<g;)b=m[u],o[u]=c?c.call(a,b,u):b,u++;o.length=g}return o}}()},{}],30:[function(e,n,t){n.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},{}],31:[function(e,n,t){function l(e){return Array.isArray(e)||"[object Object]"=={}.toString.call(e)}n.exports=function e(){var n=[].slice.call(arguments),t=!1;"boolean"==typeof n[0]&&(t=n.shift());var r=n[0];if(!r||"object"!=typeof r&&"function"!=typeof r)throw new Error("extendee must be an object");for(var i=n.slice(1),a=i.length,o=0;o<a;o++){var u=i[o];for(var s in u)if(u.hasOwnProperty(s)){var c=u[s];if(t&&l(c)){var d=Array.isArray(c)?[]:{};r[s]=e(!0,r[s]||d,c)}else r[s]=c}}return r}},{}],32:[function(require,module,exports){(function(global){var userAgent=global.navigator&&global.navigator.userAgent,isRunningInIE=userAgent&&userAgent.indexOf("MSIE ")>-1,maxTimeout=Math.pow(2,31)-1;isRunningInIE&&(global.setTimeout=global.setTimeout,global.clearTimeout=global.clearTimeout,global.setInterval=global.setInterval,global.clearInterval=global.clearInterval,global.Date=global.Date),void 0!==global.setImmediate&&(global.setImmediate=global.setImmediate,global.clearImmediate=global.clearImmediate);var NOOP=function(){},timeoutResult=setTimeout(NOOP,0),addTimerReturnsObject="object"==typeof timeoutResult,hrtimePresent=global.process&&"function"==typeof global.process.hrtime,nextTickPresent=global.process&&"function"==typeof global.process.nextTick,performancePresent=global.performance&&"function"==typeof global.performance.now,requestAnimationFramePresent=global.requestAnimationFrame&&"function"==typeof global.requestAnimationFrame,cancelAnimationFramePresent=global.cancelAnimationFrame&&"function"==typeof global.cancelAnimationFrame;clearTimeout(timeoutResult);var NativeDate=Date,uniqueTimerId=1;function parseTime(e){if(!e)return 0;var n,t=e.split(":"),l=t.length,r=l,i=0;if(l>3||!/^(\d\d:){0,2}\d\d?$/.test(e))throw new Error("tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits");for(;r--;){if((n=parseInt(t[r],10))>=60)throw new Error("Invalid time "+e);i+=n*Math.pow(60,l-r-1)}return 1e3*i}function fixedFloor(e){return e>=0?Math.floor(e):Math.ceil(e)}function fixedModulo(e,n){return(e%n+n)%n}function getEpoch(e){if(!e)return 0;if("function"==typeof e.getTime)return e.getTime();if("number"==typeof e)return e;throw new TypeError("now should be milliseconds since UNIX epoch")}function inRange(e,n,t){return t&&t.callAt>=e&&t.callAt<=n}function mirrorDateProperties(e,n){var t;for(t in n)n.hasOwnProperty(t)&&(e[t]=n[t]);return n.now?e.now=function(){return e.clock.now}:delete e.now,n.toSource?e.toSource=function(){return n.toSource()}:delete e.toSource,e.toString=function(){return n.toString()},e.prototype=n.prototype,e.parse=n.parse,e.UTC=n.UTC,e.prototype.toUTCString=n.prototype.toUTCString,e}function createDate(){return mirrorDateProperties((function e(n,t,l,r,i,a,o){switch(arguments.length){case 0:return new NativeDate(e.clock.now);case 1:return new NativeDate(n);case 2:return new NativeDate(n,t);case 3:return new NativeDate(n,t,l);case 4:return new NativeDate(n,t,l,r);case 5:return new NativeDate(n,t,l,r,i);case 6:return new NativeDate(n,t,l,r,i,a);default:return new NativeDate(n,t,l,r,i,a,o)}}),NativeDate)}function enqueueJob(e,n){e.jobs||(e.jobs=[]),e.jobs.push(n)}function runJobs(e){if(e.jobs){for(var n=0;n<e.jobs.length;n++){var t=e.jobs[n];t.func.apply(null,t.args)}e.jobs=[]}}function addTimer(e,n){if(void 0===n.func)throw new Error("Callback must be provided to timer calls");return n.type=n.immediate?"Immediate":"Timeout",n.hasOwnProperty("delay")&&(n.delay=n.delay>maxTimeout?1:n.delay,n.delay=Math.max(0,n.delay)),n.hasOwnProperty("interval")&&(n.type="Interval",n.interval=n.interval>maxTimeout?1:n.interval),n.hasOwnProperty("animation")&&(n.type="AnimationFrame",n.animation=!0),e.timers||(e.timers={}),n.id=uniqueTimerId++,n.createdAt=e.now,n.callAt=e.now+(parseInt(n.delay)||(e.duringTick?1:0)),e.timers[n.id]=n,addTimerReturnsObject?{id:n.id,ref:NOOP,unref:NOOP}:n.id}function compareTimers(e,n){return e.callAt<n.callAt?-1:e.callAt>n.callAt?1:e.immediate&&!n.immediate?-1:!e.immediate&&n.immediate?1:e.createdAt<n.createdAt?-1:e.createdAt>n.createdAt?1:e.id<n.id?-1:e.id>n.id?1:void 0}function firstTimerInRange(e,n,t){var l,r=e.timers,i=null;for(l in r)r.hasOwnProperty(l)&&(!inRange(n,t,r[l])||i&&1!==compareTimers(i,r[l])||(i=r[l]));return i}function firstTimer(e){var n,t=e.timers,l=null;for(n in t)t.hasOwnProperty(n)&&(l&&1!==compareTimers(l,t[n])||(l=t[n]));return l}function lastTimer(e){var n,t=e.timers,l=null;for(n in t)t.hasOwnProperty(n)&&(l&&-1!==compareTimers(l,t[n])||(l=t[n]));return l}function callTimer(clock,timer){"number"==typeof timer.interval?clock.timers[timer.id].callAt+=timer.interval:delete clock.timers[timer.id],"function"==typeof timer.func?timer.func.apply(null,timer.args):eval(timer.func)}function clearTimer(e,n,t){if(n&&(e.timers||(e.timers=[]),"object"==typeof n&&(n=n.id),e.timers.hasOwnProperty(n))){var l=e.timers[n];if(l.type!==t){var r="AnimationFrame"===t?"cancelAnimationFrame":"clear"+t,i="AnimationFrame"===l.type?"requestAnimationFrame":"set"+l.type;throw new Error("Cannot clear timer: timer created with "+i+"() but cleared with "+r+"()")}delete e.timers[n]}}function uninstall(e,n,t){var l,r,i;for(r=0,i=e.methods.length;r<i;r++)if("hrtime"===(l=e.methods[r])&&n.process)n.process.hrtime=e._hrtime;else if("nextTick"===l&&n.process)n.process.nextTick=e._nextTick;else if(n[l]&&n[l].hadOwnProperty)n[l]=e["_"+l],"clearInterval"===l&&!0===t.shouldAdvanceTime&&n[l](e.attachedInterval);else try{delete n[l]}catch(e){}return e.methods=[],e.timers?Object.keys(e.timers).map((function(n){return e.timers[n]})):[]}function hijackMethod(e,n,t){var l;if(t[n].hadOwnProperty=Object.prototype.hasOwnProperty.call(e,n),t["_"+n]=e[n],"Date"===n){var r=mirrorDateProperties(t[n],e[n]);e[n]=r}else for(l in e[n]=function(){return t[n].apply(t,arguments)},t[n])t[n].hasOwnProperty(l)&&(e[n][l]=t[n][l]);e[n].clock=t}function doIntervalTick(e,n){e.tick(n)}var timers={setTimeout,clearTimeout,setImmediate:global.setImmediate,clearImmediate:global.clearImmediate,setInterval,clearInterval,Date};hrtimePresent&&(timers.hrtime=global.process.hrtime),nextTickPresent&&(timers.nextTick=global.process.nextTick),performancePresent&&(timers.performance=global.performance),requestAnimationFramePresent&&(timers.requestAnimationFrame=global.requestAnimationFrame),cancelAnimationFramePresent&&(timers.cancelAnimationFrame=global.cancelAnimationFrame);var keys=Object.keys||function(e){var n,t=[];for(n in e)e.hasOwnProperty(n)&&t.push(n);return t};function createClock(e,n){n=n||1e3;var t={now:getEpoch(e=e||0),hrNow:0,timeouts:{},Date:createDate(),loopLimit:n};function l(){return 16-(t.now-e)%16}function r(e){t.hrNow+=e-t.now}return t.Date.clock=t,t.setTimeout=function(e,n){return addTimer(t,{func:e,args:Array.prototype.slice.call(arguments,2),delay:n})},t.clearTimeout=function(e){return clearTimer(t,e,"Timeout")},t.nextTick=function(e){return enqueueJob(t,{func:e,args:Array.prototype.slice.call(arguments,1)})},t.setInterval=function(e,n){return addTimer(t,{func:e,args:Array.prototype.slice.call(arguments,2),delay:n,interval:n})},t.clearInterval=function(e){return clearTimer(t,e,"Interval")},t.setImmediate=function(e){return addTimer(t,{func:e,args:Array.prototype.slice.call(arguments,1),immediate:!0})},t.clearImmediate=function(e){return clearTimer(t,e,"Immediate")},t.requestAnimationFrame=function(e){var n=addTimer(t,{func:e,delay:l(),args:[t.now+l()],animation:!0});return n.id||n},t.cancelAnimationFrame=function(e){return clearTimer(t,e,"AnimationFrame")},t.tick=function(e){e="number"==typeof e?e:parseTime(e);var n,l,i,a=t.now,o=t.now+e,u=t.now;for(t.duringTick=!0,i=t.now,runJobs(t),i!==t.now&&(a+=t.now-i,o+=t.now-i),n=firstTimerInRange(t,a,o);n&&a<=o;){if(t.timers[n.id]){r(n.callAt),a=n.callAt,t.now=n.callAt,i=t.now;try{runJobs(t),callTimer(t,n)}catch(e){l=l||e}i!==t.now&&(a+=t.now-i,o+=t.now-i,u+=t.now-i)}n=firstTimerInRange(t,u,o),u=a}if(i=t.now,runJobs(t),i!==t.now&&(a+=t.now-i,o+=t.now-i),t.duringTick=!1,n=firstTimerInRange(t,a,o))try{t.tick(o-t.now)}catch(e){l=l||e}else r(o),t.now=o;if(l)throw l;return t.now},t.next=function(){runJobs(t);var e=firstTimer(t);if(!e)return t.now;t.duringTick=!0;try{return r(e.callAt),t.now=e.callAt,callTimer(t,e),runJobs(t),t.now}finally{t.duringTick=!1}},t.runAll=function(){var e;for(runJobs(t),e=0;e<t.loopLimit;e++){if(!t.timers)return t.now;if(0===keys(t.timers).length)return t.now;t.next()}throw new Error("Aborting after running "+t.loopLimit+" timers, assuming an infinite loop!")},t.runToFrame=function(){return t.tick(l())},t.runToLast=function(){var e=lastTimer(t);return e?t.tick(e.callAt):(runJobs(t),t.now)},t.reset=function(){t.timers={}},t.setSystemTime=function(e){var n,l,r=getEpoch(e),i=r-t.now;for(n in t.now=r,t.timers)t.timers.hasOwnProperty(n)&&((l=t.timers[n]).createdAt+=i,l.callAt+=i)},performancePresent&&(t.performance=Object.create(global.performance),t.performance.now=function(){return t.hrNow}),hrtimePresent&&(t.hrtime=function(e){if(Array.isArray(e)){var n=e[0]+e[1]/1e9,l=t.hrNow/1e3-n;return[fixedFloor(l),fixedModulo(1e9*l,1e9)]}return[fixedFloor(t.hrNow/1e3),fixedModulo(1e6*t.hrNow,1e9)]}),t}exports.timers=timers,exports.createClock=createClock,exports.install=function(e){if(arguments.length>1||e instanceof Date||Array.isArray(e)||"number"==typeof e)throw new TypeError("lolex.install called with "+String(e)+" lolex 2.0+ requires an object parameter - see https://github.com/sinonjs/lolex");var n,t;(e=void 0!==e?e:{}).shouldAdvanceTime=e.shouldAdvanceTime||!1,e.advanceTimeDelta=e.advanceTimeDelta||20;var l=e.target||global,r=createClock(e.now,e.loopLimit);for(r.uninstall=function(){return uninstall(r,l,e)},r.methods=e.toFake||[],0===r.methods.length&&(r.methods=keys(timers).filter((function(e){return"nextTick"!==e}))),n=0,t=r.methods.length;n<t;n++)if("hrtime"===r.methods[n])l.process&&"function"==typeof l.process.hrtime&&hijackMethod(l.process,r.methods[n],r);else if("nextTick"===r.methods[n])l.process&&"function"==typeof l.process.nextTick&&hijackMethod(l.process,r.methods[n],r);else{if("setInterval"===r.methods[n]&&!0===e.shouldAdvanceTime){var i=doIntervalTick.bind(null,r,e.advanceTimeDelta),a=l[r.methods[n]](i,e.advanceTimeDelta);r.attachedInterval=a}hijackMethod(l,r.methods[n],r)}return r}}).call(this,void 0!==commonjsGlobal?commonjsGlobal:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],33:[function(e,n,t){var l=e("isarray");n.exports=function e(n,t,r){return l(t)||(r=t||r,t=[]),r=r||{},n instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var l=0;l<t.length;l++)n.push({name:l,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,n)}(n,t):l(n)?function(n,t,l){for(var r=[],i=0;i<n.length;i++)r.push(e(n[i],t,l).source);return c(new RegExp("(?:"+r.join("|")+")",d(l)),t)}(n,t,r):function(e,n,t){return p(i(e,t),n,t)}(n,t,r)},n.exports.parse=i,n.exports.compile=function(e,n){return o(i(e,n))},n.exports.tokensToFunction=o,n.exports.tokensToRegExp=p;var r=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,n){for(var t,l=[],i=0,a=0,o="",c=n&&n.delimiter||"/";null!=(t=r.exec(e));){var d=t[0],p=t[1],f=t.index;if(o+=e.slice(a,f),a=f+d.length,p)o+=p[1];else{var h=e[a],m=t[2],b=t[3],g=t[4],M=t[5],y=t[6],v=t[7];o&&(l.push(o),o="");var A=null!=m&&null!=h&&h!==m,w="+"===y||"*"===y,_="?"===y||"*"===y,C=t[2]||c,T=g||M;l.push({name:b||i++,prefix:m||"",delimiter:C,optional:_,repeat:w,partial:A,asterisk:!!v,pattern:T?s(T):v?".*":"[^"+u(C)+"]+?"})}}return a<e.length&&(o+=e.substr(a)),o&&l.push(o),l}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function o(e){for(var n=new Array(e.length),t=0;t<e.length;t++)"object"==typeof e[t]&&(n[t]=new RegExp("^(?:"+e[t].pattern+")$"));return function(t,r){for(var i="",o=t||{},u=(r||{}).pretty?a:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var d,p=o[c.name];if(null==p){if(c.optional){c.partial&&(i+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(l(p)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var f=0;f<p.length;f++){if(d=u(p[f]),!n[s].test(d))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(d)+"`");i+=(0===f?c.prefix:c.delimiter)+d}}else{if(d=c.asterisk?encodeURI(p).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(p),!n[s].test(d))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+d+'"');i+=c.prefix+d}}else i+=c}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,n){return e.keys=n,e}function d(e){return e.sensitive?"":"i"}function p(e,n,t){l(n)||(t=n||t,n=[]);for(var r=(t=t||{}).strict,i=!1!==t.end,a="",o=0;o<e.length;o++){var s=e[o];if("string"==typeof s)a+=u(s);else{var p=u(s.prefix),f="(?:"+s.pattern+")";n.push(s),s.repeat&&(f+="(?:"+p+f+")*"),a+=f=s.optional?s.partial?p+"("+f+")?":"(?:"+p+"("+f+"))?":p+"("+f+")"}}var h=u(t.delimiter||"/"),m=a.slice(-h.length)===h;return r||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":r&&m?"":"(?="+h+"|$)",c(new RegExp("^"+a,d(t)),n)}},{isarray:30}],34:[function(e,n,t){var l=e("./lib/encoding.js");n.exports={TextEncoder:l.TextEncoder,TextDecoder:l.TextDecoder}},{"./lib/encoding.js":36}],35:[function(e,n,t){var l;l=this||{},void 0!==n&&n.exports&&(n.exports=l),l["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}},{}],36:[function(e,n,t){!function(t){function l(e,n,t){return n<=e&&e<=t}void 0!==n&&n.exports&&!t["encoding-indexes"]&&(t["encoding-indexes"]=e("./encoding-indexes.js")["encoding-indexes"]);var r=Math.floor;function i(e){if(void 0===e)return{};if(e===Object(e))return e;throw TypeError("Could not convert argument to dictionary")}function a(e){return 0<=e&&e<=127}var o=a,u=-1;function s(e){this.tokens=[].slice.call(e),this.tokens.reverse()}s.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():u},prepend:function(e){if(Array.isArray(e))for(var n=e;n.length;)this.tokens.push(n.pop());else this.tokens.push(e)},push:function(e){if(Array.isArray(e))for(var n=e;n.length;)this.tokens.unshift(n.shift());else this.tokens.unshift(e)}};var c=-1;function d(e,n){if(e)throw TypeError("Decoder error");return n||65533}function p(e){throw TypeError("The code point "+e+" could not be encoded.")}function f(e){return e=String(e).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(m,e)?m[e]:null}var h=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],m={};h.forEach((function(e){e.encodings.forEach((function(e){e.labels.forEach((function(n){m[n]=e}))}))}));var b,g,M={},y={};function v(e,n){return n&&n[e]||null}function A(e,n){var t=n.indexOf(e);return-1===t?null:t}function w(e){if(!("encoding-indexes"in t))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return t["encoding-indexes"][e]}var _="utf-8";function C(e,n){if(!(this instanceof C))throw TypeError("Called as a function. Did you forget 'new'?");e=void 0!==e?String(e):_,n=i(n),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var t=f(e);if(null===t||"replacement"===t.name)throw RangeError("Unknown encoding: "+e);if(!y[t.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");var l=this;return l._encoding=t,Boolean(n.fatal)&&(l._error_mode="fatal"),Boolean(n.ignoreBOM)&&(l._ignoreBOM=!0),Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase(),this.fatal="fatal"===l._error_mode,this.ignoreBOM=l._ignoreBOM),l}function T(e,n){if(!(this instanceof T))throw TypeError("Called as a function. Did you forget 'new'?");n=i(n),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(n.fatal)?"fatal":"replacement";var l=this;if(Boolean(n.NONSTANDARD_allowLegacyEncoding)){var r=f(e=void 0!==e?String(e):_);if(null===r||"replacement"===r.name)throw RangeError("Unknown encoding: "+e);if(!M[r.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");l._encoding=r}else l._encoding=f("utf-8"),void 0!==e&&"console"in t&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=l._encoding.name.toLowerCase()),l}function S(e){var n=e.fatal,t=0,r=0,i=0,a=128,o=191;this.handler=function(e,s){if(s===u&&0!==i)return i=0,d(n);if(s===u)return c;if(0===i){if(l(s,0,127))return s;if(l(s,194,223))i=1,t=31&s;else if(l(s,224,239))224===s&&(a=160),237===s&&(o=159),i=2,t=15&s;else{if(!l(s,240,244))return d(n);240===s&&(a=144),244===s&&(o=143),i=3,t=7&s}return null}if(!l(s,a,o))return t=i=r=0,a=128,o=191,e.prepend(s),d(n);if(a=128,o=191,t=t<<6|63&s,(r+=1)!==i)return null;var p=t;return t=i=r=0,p}}function z(e){e.fatal,this.handler=function(e,n){if(n===u)return c;if(o(n))return n;var t,r;l(n,128,2047)?(t=1,r=192):l(n,2048,65535)?(t=2,r=224):l(n,65536,1114111)&&(t=3,r=240);for(var i=[(n>>6*t)+r];t>0;){var a=n>>6*(t-1);i.push(128|63&a),t-=1}return i}}function O(e,n){var t=n.fatal;this.handler=function(n,l){if(l===u)return c;if(a(l))return l;var r=e[l-128];return null===r?d(t):r}}function E(e,n){n.fatal,this.handler=function(n,t){if(t===u)return c;if(o(t))return t;var l=A(t,e);return null===l&&p(t),l+128}}function L(e){var n=e.fatal,t=0,r=0,i=0;this.handler=function(e,o){if(o===u&&0===t&&0===r&&0===i)return c;var s;if(o!==u||0===t&&0===r&&0===i||(t=0,r=0,i=0,d(n)),0!==i){s=null,l(o,48,57)&&(s=function(e){if(e>39419&&e<189e3||e>1237575)return null;if(7457===e)return 59335;var n,t=0,l=0,r=w("gb18030-ranges");for(n=0;n<r.length;++n){var i=r[n];if(!(i[0]<=e))break;t=i[0],l=i[1]}return l+e-t}(10*(126*(10*(t-129)+r-48)+i-129)+o-48));var p=[r,i,o];return t=0,r=0,i=0,null===s?(e.prepend(p),d(n)):s}if(0!==r)return l(o,129,254)?(i=o,null):(e.prepend([r,o]),t=0,r=0,d(n));if(0!==t){if(l(o,48,57))return r=o,null;var f=t,h=null;t=0;var m=o<127?64:65;return(l(o,64,126)||l(o,128,254))&&(h=190*(f-129)+(o-m)),null===(s=null===h?null:v(h,w("gb18030")))&&a(o)&&e.prepend(o),null===s?d(n):s}return a(o)?o:128===o?8364:l(o,129,254)?(t=o,null):d(n)}}function x(e,n){e.fatal,this.handler=function(e,t){if(t===u)return c;if(o(t))return t;if(58853===t)return p(t);if(n&&8364===t)return 128;var l=A(t,w("gb18030"));if(null!==l){var i=l%190;return[r(l/190)+129,i+(i<63?64:65)]}if(n)return p(t);l=function(e){if(59335===e)return 7457;var n,t=0,l=0,r=w("gb18030-ranges");for(n=0;n<r.length;++n){var i=r[n];if(!(i[1]<=e))break;t=i[1],l=i[0]}return l+e-t}(t);var a=r(l/10/126/10),s=r((l-=10*a*126*10)/10/126),d=r((l-=10*s*126)/10);return[a+129,s+48,d+129,l-10*d+48]}}function k(e){var n=e.fatal,t=0;this.handler=function(e,r){if(r===u&&0!==t)return t=0,d(n);if(r===u&&0===t)return c;if(0!==t){var i=t,o=null;t=0;var s=r<127?64:98;switch((l(r,64,126)||l(r,161,254))&&(o=157*(i-129)+(r-s)),o){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var p=null===o?null:v(o,w("big5"));return null===p&&a(r)&&e.prepend(r),null===p?d(n):p}return a(r)?r:l(r,129,254)?(t=r,null):d(n)}}function N(e){e.fatal,this.handler=function(e,n){if(n===u)return c;if(o(n))return n;var t=function(e){g=g||w("big5").map((function(e,n){return n<5024?null:e}));var n=g;return 9552===e||9566===e||9569===e||9578===e||21313===e||21317===e?n.lastIndexOf(e):A(e,n)}(n);if(null===t)return p(n);var l=r(t/157)+129;if(l<161)return p(n);var i=t%157;return[l,i+(i<63?64:98)]}}function B(e){var n=e.fatal,t=!1,r=0;this.handler=function(e,i){if(i===u&&0!==r)return r=0,d(n);if(i===u&&0===r)return c;if(142===r&&l(i,161,223))return r=0,65216+i;if(143===r&&l(i,161,254))return t=!0,r=i,null;if(0!==r){var o=r;r=0;var s=null;return l(o,161,254)&&l(i,161,254)&&(s=v(94*(o-161)+(i-161),w(t?"jis0212":"jis0208"))),t=!1,l(i,161,254)||e.prepend(i),null===s?d(n):s}return a(i)?i:142===i||143===i||l(i,161,254)?(r=i,null):d(n)}}function q(e){e.fatal,this.handler=function(e,n){if(n===u)return c;if(o(n))return n;if(165===n)return 92;if(8254===n)return 126;if(l(n,65377,65439))return[142,n-65377+161];8722===n&&(n=65293);var t=A(n,w("jis0208"));return null===t?p(n):[r(t/94)+161,t%94+161]}}function P(e){var n=e.fatal,t=0,r=0,i=!1;this.handler=function(e,a){switch(t){default:case 0:return 27===a?(t=5,null):l(a,0,127)&&14!==a&&15!==a&&27!==a?(i=!1,a):a===u?c:(i=!1,d(n));case 1:return 27===a?(t=5,null):92===a?(i=!1,165):126===a?(i=!1,8254):l(a,0,127)&&14!==a&&15!==a&&27!==a&&92!==a&&126!==a?(i=!1,a):a===u?c:(i=!1,d(n));case 2:return 27===a?(t=5,null):l(a,33,95)?(i=!1,65344+a):a===u?c:(i=!1,d(n));case 3:return 27===a?(t=5,null):l(a,33,126)?(i=!1,r=a,t=4,null):a===u?c:(i=!1,d(n));case 4:if(27===a)return t=5,d(n);if(l(a,33,126)){t=3;var o=v(94*(r-33)+a-33,w("jis0208"));return null===o?d(n):o}return a===u?(t=3,e.prepend(a),d(n)):(t=3,d(n));case 5:return 36===a||40===a?(r=a,t=6,null):(e.prepend(a),i=!1,t=0,d(n));case 6:var s=r;r=0;var p=null;if(40===s&&66===a&&(p=0),40===s&&74===a&&(p=1),40===s&&73===a&&(p=2),36!==s||64!==a&&66!==a||(p=3),null!==p){t=t=p;var f=i;return i=!0,f?d(n):null}return e.prepend([s,a]),i=!1,t=0,d(n)}}}function D(e){e.fatal;var n=0;this.handler=function(e,t){if(t===u&&0!==n)return e.prepend(t),n=0,[27,40,66];if(t===u&&0===n)return c;if(!(0!==n&&1!==n||14!==t&&15!==t&&27!==t))return p(65533);if(0===n&&o(t))return t;if(1===n&&(o(t)&&92!==t&&126!==t||165==t||8254==t)){if(o(t))return t;if(165===t)return 92;if(8254===t)return 126}if(o(t)&&0!==n)return e.prepend(t),n=0,[27,40,66];if((165===t||8254===t)&&1!==n)return e.prepend(t),n=1,[27,40,74];8722===t&&(t=65293);var l=A(t,w("jis0208"));return null===l?p(t):2!==n?(e.prepend(t),n=2,[27,36,66]):[r(l/94)+33,l%94+33]}}function R(e){var n=e.fatal,t=0;this.handler=function(e,r){if(r===u&&0!==t)return t=0,d(n);if(r===u&&0===t)return c;if(0!==t){var i=t,o=null;t=0;var s=r<127?64:65,p=i<160?129:193;if((l(r,64,126)||l(r,128,252))&&(o=188*(i-p)+r-s),l(o,8836,10715))return 48508+o;var f=null===o?null:v(o,w("jis0208"));return null===f&&a(r)&&e.prepend(r),null===f?d(n):f}return a(r)||128===r?r:l(r,161,223)?65216+r:l(r,129,159)||l(r,224,252)?(t=r,null):d(n)}}function W(e){e.fatal,this.handler=function(e,n){if(n===u)return c;if(o(n)||128===n)return n;if(165===n)return 92;if(8254===n)return 126;if(l(n,65377,65439))return n-65377+161;8722===n&&(n=65293);var t=function(e){return b=b||w("jis0208").map((function(e,n){return l(n,8272,8835)?null:e})),b.indexOf(e)}(n);if(null===t)return p(n);var i=r(t/188),a=t%188;return[i+(i<31?129:193),a+(a<63?64:65)]}}function I(e){var n=e.fatal,t=0;this.handler=function(e,r){if(r===u&&0!==t)return t=0,d(n);if(r===u&&0===t)return c;if(0!==t){var i=t,o=null;t=0,l(r,65,254)&&(o=190*(i-129)+(r-65));var s=null===o?null:v(o,w("euc-kr"));return null===o&&a(r)&&e.prepend(r),null===s?d(n):s}return a(r)?r:l(r,129,254)?(t=r,null):d(n)}}function F(e){e.fatal,this.handler=function(e,n){if(n===u)return c;if(o(n))return n;var t=A(n,w("euc-kr"));return null===t?p(n):[r(t/190)+129,t%190+65]}}function j(e,n){var t=e>>8,l=255&e;return n?[t,l]:[l,t]}function X(e,n){var t=n.fatal,r=null,i=null;this.handler=function(n,a){if(a===u&&(null!==r||null!==i))return d(t);if(a===u&&null===r&&null===i)return c;if(null===r)return r=a,null;var o;if(o=e?(r<<8)+a:(a<<8)+r,r=null,null!==i){var s=i;return i=null,l(o,56320,57343)?65536+1024*(s-55296)+(o-56320):(n.prepend(j(o,e)),d(t))}return l(o,55296,56319)?(i=o,null):l(o,56320,57343)?d(t):o}}function G(e,n){n.fatal,this.handler=function(n,t){if(t===u)return c;if(l(t,0,65535))return j(t,e);var r=j(55296+(t-65536>>10),e),i=j(56320+(t-65536&1023),e);return r.concat(i)}}function H(e){e.fatal,this.handler=function(e,n){return n===u?c:a(n)?n:63360+n-128}}function U(e){e.fatal,this.handler=function(e,n){return n===u?c:o(n)?n:l(n,63360,63487)?n-63360+128:p(n)}}Object.defineProperty&&(Object.defineProperty(C.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(C.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(C.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),C.prototype.decode=function(e,n){var t;t="object"==typeof e&&e instanceof ArrayBuffer?new Uint8Array(e):"object"==typeof e&&"buffer"in e&&e.buffer instanceof ArrayBuffer?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(0),n=i(n),this._do_not_flush||(this._decoder=y[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(n.stream);for(var l,r=new s(t),a=[];;){var o=r.read();if(o===u)break;if((l=this._decoder.handler(r,o))===c)break;null!==l&&(Array.isArray(l)?a.push.apply(a,l):a.push(l))}if(!this._do_not_flush){do{if((l=this._decoder.handler(r,r.read()))===c)break;null!==l&&(Array.isArray(l)?a.push.apply(a,l):a.push(l))}while(!r.endOfStream());this._decoder=null}return function(e){return n=this._encoding.name,!(-1!==["UTF-8","UTF-16LE","UTF-16BE"].indexOf(n))||this._ignoreBOM||this._BOMseen||(e.length>0&&65279===e[0]?(this._BOMseen=!0,e.shift()):e.length>0&&(this._BOMseen=!0)),function(e){for(var n="",t=0;t<e.length;++t){var l=e[t];l<=65535?n+=String.fromCharCode(l):(l-=65536,n+=String.fromCharCode(55296+(l>>10),56320+(1023&l)))}return n}(e);var n}.call(this,a)},Object.defineProperty&&Object.defineProperty(T.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),T.prototype.encode=function(e,n){e=void 0===e?"":String(e),n=i(n),this._do_not_flush||(this._encoder=M[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(n.stream);for(var t,l=new s(function(e){for(var n=String(e),t=n.length,l=0,r=[];l<t;){var i=n.charCodeAt(l);if(i<55296||i>57343)r.push(i);else if(56320<=i&&i<=57343)r.push(65533);else if(55296<=i&&i<=56319)if(l===t-1)r.push(65533);else{var a=n.charCodeAt(l+1);if(56320<=a&&a<=57343){var o=1023&i,u=1023&a;r.push(65536+(o<<10)+u),l+=1}else r.push(65533)}l+=1}return r}(e)),r=[];;){var a=l.read();if(a===u)break;if((t=this._encoder.handler(l,a))===c)break;Array.isArray(t)?r.push.apply(r,t):r.push(t)}if(!this._do_not_flush){for(;(t=this._encoder.handler(l,l.read()))!==c;)Array.isArray(t)?r.push.apply(r,t):r.push(t);this._encoder=null}return new Uint8Array(r)},M["UTF-8"]=function(e){return new z(e)},y["UTF-8"]=function(e){return new S(e)},"encoding-indexes"in t&&h.forEach((function(e){"Legacy single-byte encodings"===e.heading&&e.encodings.forEach((function(e){var n=e.name,t=w(n.toLowerCase());y[n]=function(e){return new O(t,e)},M[n]=function(e){return new E(t,e)}}))})),y.GBK=function(e){return new L(e)},M.GBK=function(e){return new x(e,!0)},M.gb18030=function(e){return new x(e)},y.gb18030=function(e){return new L(e)},M.Big5=function(e){return new N(e)},y.Big5=function(e){return new k(e)},M["EUC-JP"]=function(e){return new q(e)},y["EUC-JP"]=function(e){return new B(e)},M["ISO-2022-JP"]=function(e){return new D(e)},y["ISO-2022-JP"]=function(e){return new P(e)},M.Shift_JIS=function(e){return new W(e)},y.Shift_JIS=function(e){return new R(e)},M["EUC-KR"]=function(e){return new F(e)},y["EUC-KR"]=function(e){return new I(e)},M["UTF-16BE"]=function(e){return new G(!0,e)},y["UTF-16BE"]=function(e){return new X(!0,e)},M["UTF-16LE"]=function(e){return new G(!1,e)},y["UTF-16LE"]=function(e){return new X(!1,e)},M["x-user-defined"]=function(e){return new U(e)},y["x-user-defined"]=function(e){return new H(e)},t.TextEncoder||(t.TextEncoder=T),t.TextDecoder||(t.TextDecoder=C),void 0!==n&&n.exports&&(n.exports={TextEncoder:t.TextEncoder,TextDecoder:t.TextDecoder,EncodingIndexes:t["encoding-indexes"]})}(this||{})},{"./encoding-indexes.js":35}]},{},[12])(12)},module.exports=f()})),arrayProto$e=lib.prototypes.array,valueToString$9=lib.valueToString,fakeServer=nise.fakeServer,fakeXhr=nise.fakeXhr,filter$3=arrayProto$e.filter,forEach$8=arrayProto$e.filter,push$6=arrayProto$e.push,reverse$1=arrayProto$e.reverse;function applyOnEach(e,n){var t=filter$3(e,(function(e){return"function"==typeof e[n]}));forEach$8(t,(function(e){e[n]()}))}function Sandbox(){var e,n=this,t=[],l=[];function r(e,n){var t=getPropertyDescriptor(e,n);function l(){Object.defineProperty(e,n,t)}return l.object=e,l.property=n,l}function i(e,n){forEach$8(l,(function(t){if(t.object===e&&t.property===n)throw new TypeError("Attempted to replace "+n+" which is already replaced")}))}n.serverPrototype=fakeServer,n.getFakes=function(){return t},n.getRestorers=function(){return l},n.createStubInstance=function(e){if("function"!=typeof e)throw new TypeError("The constructor should be a function.");return this.stub(Object.create(e.prototype))},n.inject=function(e){return e.spy=function(){return n.spy.apply(null,arguments)},e.stub=function(){return n.stub.apply(null,arguments)},e.mock=function(){return n.mock.apply(null,arguments)},n.clock&&(e.clock=n.clock),n.server&&(e.server=n.server,e.requests=n.server.requests),e.match=match_1$1,e},n.mock=function(){var n=mock_1.apply(null,arguments);return push$6(t,n),usePromiseLibrary_1(e,n),n},n.reset=function(){applyOnEach(t,"reset"),applyOnEach(t,"resetHistory")},n.resetBehavior=function(){applyOnEach(t,"resetBehavior")},n.resetHistory=function(){function e(e){var n=e.resetHistory||e.reset;n&&n.call(e)}forEach$8(t,(function(n){if("function"!=typeof n){var t=[];n.get&&push$6(t,n.get),n.set&&push$6(t,n.set),forEach$8(t,e)}else e(n)}))},n.restore=function(){if(arguments.length)throw new Error("sandbox.restore() does not take any parameters. Perhaps you meant stub.restore()");reverse$1(t),applyOnEach(t,"restore"),t=[],forEach$8(l,(function(e){e()})),l=[],n.restoreContext()},n.restoreContext=function(){var e=n.injectedKeys,t=n.injectInto;e&&(forEach$8(e,(function(e){delete t[e]})),e=[])},n.replace=function(e,n,t){var a=getPropertyDescriptor(e,n);if(void 0===a)throw new TypeError("Cannot replace non-existent own property "+valueToString$9(n));if(void 0===t)throw new TypeError("Expected replacement argument to be defined");if("function"==typeof a.get)throw new Error("Use sandbox.replaceGetter for replacing getters");if("function"==typeof a.set)throw new Error("Use sandbox.replaceSetter for replacing setters");if(typeof e[n]!=typeof t)throw new TypeError("Cannot replace "+typeof e[n]+" with "+typeof t);return i(e,n),push$6(l,r(e,n)),e[n]=t,t},n.replaceGetter=function(e,n,t){var a=getPropertyDescriptor(e,n);if(void 0===a)throw new TypeError("Cannot replace non-existent own property "+valueToString$9(n));if("function"!=typeof t)throw new TypeError("Expected replacement argument to be a function");if("function"!=typeof a.get)throw new Error("`object.property` is not a getter");return i(e,n),push$6(l,r(e,n)),Object.defineProperty(e,n,{get:t,configurable:isPropertyConfigurable_1(e,n)}),t},n.replaceSetter=function(e,n,t){var a=getPropertyDescriptor(e,n);if(void 0===a)throw new TypeError("Cannot replace non-existent own property "+valueToString$9(n));if("function"!=typeof t)throw new TypeError("Expected replacement argument to be a function");if("function"!=typeof a.set)throw new Error("`object.property` is not a setter");return i(e,n),push$6(l,r(e,n)),Object.defineProperty(e,n,{set:t,configurable:isPropertyConfigurable_1(e,n)}),t},n.spy=function(){var e=spy_1.apply(spy_1,arguments);return push$6(t,e),e},n.stub=function(n,l){if(isEsModule(n))throw new TypeError("ES Modules cannot be stubbed");if(isNonExistentOwnProperty_1(n,l))throw new TypeError("Cannot stub non-existent own property "+valueToString$9(l));var r=stub_1.apply(null,arguments),i=void 0===l&&"object"==typeof n;if(i){var a=collectOwnMethods_1(r);forEach$8(a,(function(e){push$6(t,e)})),usePromiseLibrary_1(e,a)}else push$6(t,r),usePromiseLibrary_1(e,r);return r},n.fake=function(e){var n=fake_1.apply(fake_1,arguments);return push$6(t,n),n},forEach$8(Object.keys(fake_1),(function(e){var l=fake_1[e];"function"==typeof l&&(n.fake[e]=function(){var e=l.apply(l,arguments);return push$6(t,e),e})})),n.useFakeTimers=function(e){var l=fakeTimers.useFakeTimers.call(null,e);return n.clock=l,push$6(t,l),l},n.verify=function(){applyOnEach(t,"verify")},n.verifyAndRestore=function(){var e;try{n.verify()}catch(n){e=n}if(n.restore(),e)throw e},n.useFakeServer=function(){var e=n.serverPrototype||fakeServer;return e&&e.create?(n.server=e.create(),push$6(t,n.server),n.server):null},n.useFakeXMLHttpRequest=function(){var e=fakeXhr.useFakeXMLHttpRequest();return push$6(t,e),e},n.usingPromise=function(l){return e=l,t.promiseLibrary=l,n}}Sandbox.prototype.assert=assert_1,Sandbox.prototype.match=match_1$1;var sandbox=Sandbox,arrayProto$f=lib.prototypes.array,forEach$9=arrayProto$f.forEach,push$7=arrayProto$f.push;function prepareSandboxFromConfig(e){var n=new sandbox;return e.useFakeServer&&("object"==typeof e.useFakeServer&&(n.serverPrototype=e.useFakeServer),n.useFakeServer()),e.useFakeTimers&&("object"==typeof e.useFakeTimers?n.useFakeTimers(e.useFakeTimers):n.useFakeTimers()),n}function exposeValue(e,n,t,l){l&&(n.injectInto&&!(t in n.injectInto)?(n.injectInto[t]=l,push$7(e.injectedKeys,t)):push$7(e.args,l))}function createSandbox(e){if(!e)return new sandbox;var n=prepareSandboxFromConfig(e);n.args=n.args||[],n.injectedKeys=[],n.injectInto=e.injectInto;var t=n.inject({});return e.properties?forEach$9(e.properties,(function(l){var r=t[l]||"sandbox"===l&&n;exposeValue(n,e,l,r)})):exposeValue(n,e,"sandbox"),n}var createSandbox_1=createSandbox,deprecated=createCommonjsModule((function(e,n){n.wrap=function(e,t){var l=function(){return n.printWarning(t),e.apply(this,arguments)};return e.prototype&&(l.prototype=e.prototype),l},n.defaultMsg=function(e){return"sinon."+e+" is deprecated and will be removed from the public API in a future version of sinon."},n.printWarning=function(e){"undefined"!=typeof console&&(console.info?console.info(e):console.log(e))}})),deprecated_1=deprecated.wrap,deprecated_2=deprecated.defaultMsg,deprecated_3=deprecated.printWarning,defaultConfig={injectIntoThis:!0,injectInto:null,properties:["spy","stub","mock","clock","server","requests"],useFakeTimers:!0,useFakeServer:!0},apiMethods={createSandbox:createSandbox_1,assert:assert_1,match:match_1$1,spyCall:call$1,expectation:mockExpectation_1,createStubInstance:stub_1.createStubInstance,defaultConfig,setFormatter:format_1.setFormatter,timers:fakeTimers.timers,xhr:nise.fakeXhr.xhr,FakeXMLHttpRequest:nise.fakeXhr.FakeXMLHttpRequest,fakeServer:nise.fakeServer,fakeServerWithClock:nise.fakeServerWithClock,createFakeServer:nise.fakeServer.create.bind(nise.fakeServer),createFakeServerWithClock:nise.fakeServerWithClock.create.bind(nise.fakeServerWithClock),addBehavior:function(e,n){behavior.addBehavior(stub_1,e,n)}},legacySandboxAPI={sandbox:{create:deprecated.wrap(createSandbox_1,"`sandbox.create()` is deprecated. Use default sandbox at `sinon.sandbox` or create new sandboxes with `sinon.createSandbox()`")}},sandbox$1=new sandbox,api=extend(sandbox$1,legacySandboxAPI,apiMethods),sinon=api;const __WEBPACK_DEFAULT_EXPORT__=sinon,_serverPrototype=sinon.serverPrototype,_getFakes=sinon.getFakes,_getRestorers=sinon.getRestorers,_createStubInstance=sinon.createStubInstance,_inject=sinon.inject,_mock=sinon.mock,_reset=sinon.reset,_resetBehavior=sinon.resetBehavior,_resetHistory=sinon.resetHistory,_restore=sinon.restore,_restoreContext=sinon.restoreContext,_replace=sinon.replace,_replaceGetter=sinon.replaceGetter,_replaceSetter=sinon.replaceSetter,_spy=sinon.spy,_stub=sinon.stub,_fake=sinon.fake,_useFakeTimers=sinon.useFakeTimers,_verify=sinon.verify,_verifyAndRestore=sinon.verifyAndRestore,_useFakeServer=sinon.useFakeServer,_useFakeXMLHttpRequest=sinon.useFakeXMLHttpRequest,_usingPromise=sinon.usingPromise,_sandbox=sinon.sandbox,_createSandbox=sinon.createSandbox,_assert=sinon.assert,_match=sinon.match,_spyCall=sinon.spyCall,_expectation=sinon.expectation,_defaultConfig=sinon.defaultConfig,_setFormatter=sinon.setFormatter,_timers=sinon.timers,_xhr=sinon.xhr,_FakeXMLHttpRequest=sinon.FakeXMLHttpRequest,_fakeServer=sinon.fakeServer,_fakeServerWithClock=sinon.fakeServerWithClock,_createFakeServer=sinon.createFakeServer,_createFakeServerWithClock=sinon.createFakeServerWithClock,_addBehavior=sinon.addBehavior},24834:function(e,n,t){e.exports=function(){"use strict";var e="function"==typeof Promise,n="object"==typeof self?self:t.g,l="undefined"!=typeof Symbol,r="undefined"!=typeof Map,i="undefined"!=typeof Set,a="undefined"!=typeof WeakMap,o="undefined"!=typeof WeakSet,u="undefined"!=typeof DataView,s=l&&void 0!==Symbol.iterator,c=l&&void 0!==Symbol.toStringTag,d=i&&"function"==typeof Set.prototype.entries,p=r&&"function"==typeof Map.prototype.entries,f=d&&Object.getPrototypeOf((new Set).entries()),h=p&&Object.getPrototypeOf((new Map).entries()),m=s&&"function"==typeof Array.prototype[Symbol.iterator],b=m&&Object.getPrototypeOf([][Symbol.iterator]()),g=s&&"function"==typeof String.prototype[Symbol.iterator],M=g&&Object.getPrototypeOf(""[Symbol.iterator]());return function(t){var l=typeof t;if("object"!==l)return l;if(null===t)return"null";if(t===n)return"global";if(Array.isArray(t)&&(!1===c||!(Symbol.toStringTag in t)))return"Array";if("object"==typeof window&&null!==window){if("object"==typeof window.location&&t===window.location)return"Location";if("object"==typeof window.document&&t===window.document)return"Document";if("object"==typeof window.navigator){if("object"==typeof window.navigator.mimeTypes&&t===window.navigator.mimeTypes)return"MimeTypeArray";if("object"==typeof window.navigator.plugins&&t===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&t instanceof window.HTMLElement){if("BLOCKQUOTE"===t.tagName)return"HTMLQuoteElement";if("TD"===t.tagName)return"HTMLTableDataCellElement";if("TH"===t.tagName)return"HTMLTableHeaderCellElement"}}var s=c&&t[Symbol.toStringTag];if("string"==typeof s)return s;var d=Object.getPrototypeOf(t);return d===RegExp.prototype?"RegExp":d===Date.prototype?"Date":e&&d===Promise.prototype?"Promise":i&&d===Set.prototype?"Set":r&&d===Map.prototype?"Map":o&&d===WeakSet.prototype?"WeakSet":a&&d===WeakMap.prototype?"WeakMap":u&&d===DataView.prototype?"DataView":r&&d===h?"Map Iterator":i&&d===f?"Set Iterator":m&&d===b?"Array Iterator":g&&d===M?"String Iterator":null===d?"Object":Object.prototype.toString.call(t).slice(8,-1)}}()},2173:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(23982),r=t(84150);function i(e){if(!(0,l.Z)(e))return{};if(r.fX)return(0,r.fX)(e);var n=function(){};n.prototype=e;var t=new n;return n.prototype=null,t}},2693:(e,n,t)=>{"use strict";t.d(n,{Z:()=>c});var l=t(20214),r=t(67993),i=t(23982),a=t(6753),o=t(51837),u=t(76455),s=t(2189);function c(e,n,t){return null==e?l.Z:(0,r.Z)(e)?(0,s.Z)(e,n,t):(0,i.Z)(e)&&!(0,a.Z)(e)?(0,o.Z)(e):(0,u.Z)(e)}},65625:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(81559),r=t(2693),i=t(5259);function a(e,n,t){return l.Z.iteratee!==i.Z?l.Z.iteratee(e,n):(0,r.Z)(e,n,t)}},94312:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(81559);function r(e,n){return e._chain?(0,l.Z)(n).chain():n}},83764:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(84150),r=t(67993),i=t(27946);function a(e,n){n=function(e){for(var n={},t=e.length,l=0;l<t;++l)n[e[l]]=!0;return{contains:function(e){return n[e]},push:function(t){return n[t]=!0,e.push(t)}}}(n);var t=l.yY.length,a=e.constructor,o=(0,r.Z)(a)&&a.prototype||l.V4,u="constructor";for((0,i.Z)(e,u)&&!n.contains(u)&&n.push(u);t--;)(u=l.yY[t])in e&&e[u]!==o[u]&&!n.contains(u)&&n.push(u)}},76204:(e,n,t)=>{"use strict";function l(e,n){return function(t){var l=arguments.length;if(n&&(t=Object(t)),l<2||null==t)return t;for(var r=1;r<l;r++)for(var i=arguments[r],a=e(i),o=a.length,u=0;u<o;u++){var s=a[u];n&&void 0!==t[s]||(t[s]=i[s])}return t}}t.d(n,{Z:()=>l})},49730:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(62938);function r(e){var n=function(n){return e[n]},t="(?:"+(0,l.Z)(e).join("|")+")",r=RegExp(t),i=RegExp(t,"g");return function(e){return e=null==e?"":""+e,r.test(e)?e.replace(i,n):e}}},68141:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(82838),r=t(84150),i=t(71213);function a(e,n,t){return function(a,o,u){var s=0,c=(0,l.Z)(a);if("number"==typeof u)e>0?s=u>=0?u:Math.max(u+c,s):c=u>=0?Math.min(u+1,c):u+c+1;else if(t&&u&&c)return a[u=t(a,o)]===o?u:-1;if(o!=o)return(u=n(r.tP.call(a,s,c),i.Z))>=0?u+s:-1;for(u=e>0?s:c-1;u>=0&&u<c;u+=e)if(a[u]===o)return u;return-1}}},63130:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(65625),r=t(82838);function i(e){return function(n,t,i){t=(0,l.Z)(t,i);for(var a=(0,r.Z)(n),o=e>0?0:a-1;o>=0&&o<a;o+=e)if(t(n[o],o,n))return o;return-1}}},49522:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(26615),r=t(62938),i=t(2189);function a(e){var n=function(n,t,i,a){var o=!(0,l.Z)(n)&&(0,r.Z)(n),u=(o||n).length,s=e>0?0:u-1;for(a||(i=n[o?o[s]:s],s+=e);s>=0&&s<u;s+=e){var c=o?o[s]:s;i=t(i,n[c],c,n)}return i};return function(e,t,l,r){var a=arguments.length>=3;return n(e,(0,i.Z)(t,r,4),l,a)}}},16485:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(84150);function r(e){return function(n){var t=e(n);return"number"==typeof t&&t>=0&&t<=l.OR}}},93363:(e,n,t)=>{"use strict";function l(e,n){for(var t=n.length,l=0;l<t;l++){if(null==e)return;e=e[n[l]]}return t?e:void 0}t.d(n,{Z:()=>l})},41361:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"}},75260:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(2173),r=t(23982);function i(e,n,t,i,a){if(!(i instanceof n))return e.apply(t,a);var o=(0,l.Z)(e.prototype),u=e.apply(o,a);return(0,r.Z)(u)?u:o}},90254:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var l=t(82838),r=t(26615),i=t(6753),a=t(1610);function o(e,n,t,u){if(u=u||[],n||0===n){if(n<=0)return u.concat(e)}else n=1/0;for(var s=u.length,c=0,d=(0,l.Z)(e);c<d;c++){var p=e[c];if((0,r.Z)(p)&&((0,i.Z)(p)||(0,a.Z)(p)))if(n>1)o(p,n-1,t,u),s=u.length;else for(var f=0,h=p.length;f<h;)u[s++]=p[f++];else t||(u[s++]=p)}return u}},49135:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(45578).Z)("byteLength")},82838:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(45578).Z)("length")},99012:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(65625),r=t(91031);function i(e,n){return function(t,i,a){var o=n?[[],[]]:{};return i=(0,l.Z)(i,a),(0,r.Z)(t,(function(n,l){var r=i(n,l,t);e(o,n,r)})),o}}},27946:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(84150);function r(e,n){return null!=e&&l.nr.call(e,n)}},33712:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(52097).Z)("Object")},26615:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(16485),r=t(82838);const i=(0,l.Z)(r.Z)},67044:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(16485),r=t(49135);const i=(0,l.Z)(r.Z)},33201:(e,n,t)=>{"use strict";function l(e,n,t){return n in t}t.d(n,{Z:()=>l})},60795:(e,n,t)=>{"use strict";t.d(n,{Eo:()=>c,SR:()=>p,dJ:()=>a,j$:()=>d});var l=t(82838),r=t(67993),i=t(11901);function a(e){var n=(0,l.Z)(e);return function(t){if(null==t)return!1;var a=(0,i.Z)(t);if((0,l.Z)(a))return!1;for(var u=0;u<n;u++)if(!(0,r.Z)(t[e[u]]))return!1;return e!==d||!(0,r.Z)(t[o])}}var o="forEach",u=["clear","delete"],s=["get","has","set"],c=u.concat(o,s),d=u.concat(s),p=["add"].concat(u,o,"has")},2189:(e,n,t)=>{"use strict";function l(e,n,t){if(void 0===n)return e;switch(null==t?3:t){case 1:return function(t){return e.call(n,t)};case 3:return function(t,l,r){return e.call(n,t,l,r)};case 4:return function(t,l,r,i){return e.call(n,t,l,r,i)}}return function(){return e.apply(n,arguments)}}t.d(n,{Z:()=>l})},84150:(e,n,t)=>{"use strict";t.d(n,{Aq:()=>f,BB:()=>c,DD:()=>m,Hs:()=>h,Jz:()=>r,LW:()=>p,O0:()=>i,OP:()=>g,OR:()=>w,SI:()=>o,V4:()=>a,VF:()=>u,_u:()=>y,fX:()=>b,lE:()=>M,nr:()=>d,q4:()=>l,qH:()=>v,tP:()=>s,yY:()=>A});var l="1.12.1",r="object"==typeof self&&self.self===self&&self||"object"==typeof t.g&&t.g.global===t.g&&t.g||Function("return this")()||{},i=Array.prototype,a=Object.prototype,o="undefined"!=typeof Symbol?Symbol.prototype:null,u=i.push,s=i.slice,c=a.toString,d=a.hasOwnProperty,p="undefined"!=typeof ArrayBuffer,f="undefined"!=typeof DataView,h=Array.isArray,m=Object.keys,b=Object.create,g=p&&ArrayBuffer.isView,M=isNaN,y=isFinite,v=!{toString:null}.propertyIsEnumerable("toString"),A=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],w=Math.pow(2,53)-1},45578:(e,n,t)=>{"use strict";function l(e){return function(n){return null==n?void 0:n[e]}}t.d(n,{Z:()=>l})},47597:(e,n,t)=>{"use strict";t.d(n,{G:()=>i,f:()=>a});var l=t(84150),r=t(33712),i=l.Aq&&(0,r.Z)(new DataView(new ArrayBuffer(8))),a="undefined"!=typeof Map&&(0,r.Z)(new Map)},52097:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(84150);function r(e){var n="[object "+e+"]";return function(e){return l.BB.call(e)===n}}},76373:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(49135);function r(e){return new Uint8Array(e.buffer||e,e.byteOffset||0,(0,l.Z)(e))}},55587:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(81559);function r(e){return l.Z.toPath(e)}t(49027)},69265:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(79271),r=t(41361);const i=(0,l.Z)(r.Z)},55187:(e,n,t)=>{"use strict";function l(e,n){return function(){if(--e<1)return n.apply(this,arguments)}}t.d(n,{Z:()=>l})},11901:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(23982),r=t(84150),i=t(83764);function a(e){if(!(0,l.Z)(e))return[];var n=[];for(var t in e)n.push(t);return r.qH&&(0,i.Z)(e,n),n}},75855:(e,n,t)=>{"use strict";function l(e,n){var t;return function(){return--e>0&&(t=n.apply(this,arguments)),e<=1&&(n=null),t}}t.d(n,{Z:()=>l})},48722:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(70880),r=t(67993),i=t(75260);const a=(0,l.Z)((function(e,n,t){if(!(0,r.Z)(e))throw new TypeError("Bind must be called on a function");var a=(0,l.Z)((function(l){return(0,i.Z)(e,a,n,this,t.concat(l))}));return a}))},3617:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(70880),r=t(90254),i=t(48722);const a=(0,l.Z)((function(e,n){var t=(n=(0,r.Z)(n,!1,!1)).length;if(t<1)throw new Error("bindAll must be passed function names");for(;t--;){var l=n[t];e[l]=(0,i.Z)(e[l],e)}return e}))},66113:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(81559);function r(e){var n=(0,l.Z)(e);return n._chain=!0,n}},46529:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(84150);function r(e,n){if(null==n||n<1)return[];for(var t=[],r=0,i=e.length;r<i;)t.push(l.tP.call(e,r,r+=n));return t}},16961:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(23982),r=t(6753),i=t(29279);function a(e){return(0,l.Z)(e)?(0,r.Z)(e)?e.slice():(0,i.Z)({},e):e}},30918:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(10092);function r(e){return(0,l.Z)(e,Boolean)}},27210:(e,n,t)=>{"use strict";function l(){var e=arguments,n=e.length-1;return function(){for(var t=n,l=e[n].apply(this,arguments);t--;)l=e[t].call(this,l);return l}}t.d(n,{Z:()=>l})},75342:(e,n,t)=>{"use strict";function l(e){return function(){return e}}t.d(n,{Z:()=>l})},6376:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(26615),r=t(20491),i=t(9082);function a(e,n,t,a){return(0,l.Z)(e)||(e=(0,r.Z)(e)),("number"!=typeof t||a)&&(t=0),(0,i.Z)(e,n,t)>=0}},75989:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(99012),r=t(27946);const i=(0,l.Z)((function(e,n,t){(0,r.Z)(e,t)?e[t]++:e[t]=1}))},27761:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(2173),r=t(34250);function i(e,n){var t=(0,l.Z)(e);return n&&(0,r.Z)(t,n),t}},11688:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(70880),r=t(40374);function i(e,n,t){var i,a,o,u,s,c=function(){var l=(0,r.Z)()-a;n>l?i=setTimeout(c,n-l):(i=null,t||(u=e.apply(s,o)),i||(o=s=null))},d=(0,l.Z)((function(l){return s=this,o=l,a=(0,r.Z)(),i||(i=setTimeout(c,n),t&&(u=e.apply(s,o))),u}));return d.cancel=function(){clearTimeout(i),i=o=s=null},d}},22636:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(76204),r=t(11901);const i=(0,l.Z)(r.Z,!0)},74151:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(70407),r=t(17064),i=t(81559);const a=(0,l.Z)(r.Z,i.Z,1)},17064:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(70880).Z)((function(e,n,t){return setTimeout((function(){return e.apply(null,t)}),n)}))},89699:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var l=t(70880),r=t(90254),i=t(10092),a=t(6376);const o=(0,l.Z)((function(e,n){return n=(0,r.Z)(n,!0,!0),(0,i.Z)(e,(function(e){return!(0,a.Z)(n,e)}))}))},91031:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(2189),r=t(26615),i=t(62938);function a(e,n,t){var a,o;if(n=(0,l.Z)(n,t),(0,r.Z)(e))for(a=0,o=e.length;a<o;a++)n(e[a],a,e);else{var u=(0,i.Z)(e);for(a=0,o=u.length;a<o;a++)n(e[u[a]],u[a],e)}return e}},49922:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(49730),r=t(41361);const i=(0,l.Z)(r.Z)},8754:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(65625),r=t(26615),i=t(62938);function a(e,n,t){n=(0,l.Z)(n,t);for(var a=!(0,r.Z)(e)&&(0,i.Z)(e),o=(a||e).length,u=0;u<o;u++){var s=a?a[u]:u;if(!n(e[s],s,e))return!1}return!0}},29279:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(76204),r=t(11901);const i=(0,l.Z)(r.Z)},34250:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(76204),r=t(62938);const i=(0,l.Z)(r.Z)},10092:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(65625),r=t(91031);function i(e,n,t){var i=[];return n=(0,l.Z)(n,t),(0,r.Z)(e,(function(e,t,l){n(e,t,l)&&i.push(e)})),i}},7645:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(26615),r=t(78329),i=t(22032);function a(e,n,t){var a=((0,l.Z)(e)?r.Z:i.Z)(e,n,t);if(void 0!==a&&-1!==a)return e[a]}},78329:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(63130).Z)(1)},22032:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(65625),r=t(62938);function i(e,n,t){n=(0,l.Z)(n,t);for(var i,a=(0,r.Z)(e),o=0,u=a.length;o<u;o++)if(n(e[i=a[o]],i,e))return i}},15141:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(63130).Z)(-1)},35690:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(7645),r=t(51837);function i(e,n){return(0,l.Z)(e,(0,r.Z)(n))}},90044:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(84729);function r(e,n,t){return null==e||e.length<1?null==n||t?void 0:[]:null==n||t?e[0]:(0,l.Z)(e,e.length-n)}},69363:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(90254);function r(e,n){return(0,l.Z)(e,n,!1)}},34573:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(67993);function r(e){var n=[];for(var t in e)(0,l.Z)(e[t])&&n.push(t);return n.sort()}},10183:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(55587),r=t(93363),i=t(42532);function a(e,n,t){var a=(0,r.Z)(e,(0,l.Z)(n));return(0,i.Z)(a)?t:a}},13123:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(99012),r=t(27946);const i=(0,l.Z)((function(e,n,t){(0,r.Z)(e,t)?e[t].push(n):e[t]=[n]}))},76629:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(27946),r=t(55587);function i(e,n){for(var t=(n=(0,r.Z)(n)).length,i=0;i<t;i++){var a=n[i];if(!(0,l.Z)(e,a))return!1;e=e[a]}return!!t}},20214:(e,n,t)=>{"use strict";function l(e){return e}t.d(n,{Z:()=>l})},54156:(e,n,t)=>{"use strict";t.r(n),t.d(n,{VERSION:()=>r.VERSION,after:()=>r.after,all:()=>r.all,allKeys:()=>r.allKeys,any:()=>r.any,assign:()=>r.assign,before:()=>r.before,bind:()=>r.bind,bindAll:()=>r.bindAll,chain:()=>r.chain,chunk:()=>r.chunk,clone:()=>r.clone,collect:()=>r.collect,compact:()=>r.compact,compose:()=>r.compose,constant:()=>r.constant,contains:()=>r.contains,countBy:()=>r.countBy,create:()=>r.create,debounce:()=>r.debounce,default:()=>l.Z,defaults:()=>r.defaults,defer:()=>r.defer,delay:()=>r.delay,detect:()=>r.detect,difference:()=>r.difference,drop:()=>r.drop,each:()=>r.each,escape:()=>r.escape,every:()=>r.every,extend:()=>r.extend,extendOwn:()=>r.extendOwn,filter:()=>r.filter,find:()=>r.find,findIndex:()=>r.findIndex,findKey:()=>r.findKey,findLastIndex:()=>r.findLastIndex,findWhere:()=>r.findWhere,first:()=>r.first,flatten:()=>r.flatten,foldl:()=>r.foldl,foldr:()=>r.foldr,forEach:()=>r.forEach,functions:()=>r.functions,get:()=>r.get,groupBy:()=>r.groupBy,has:()=>r.has,head:()=>r.head,identity:()=>r.identity,include:()=>r.include,includes:()=>r.includes,indexBy:()=>r.indexBy,indexOf:()=>r.indexOf,initial:()=>r.initial,inject:()=>r.inject,intersection:()=>r.intersection,invert:()=>r.invert,invoke:()=>r.invoke,isArguments:()=>r.isArguments,isArray:()=>r.isArray,isArrayBuffer:()=>r.isArrayBuffer,isBoolean:()=>r.isBoolean,isDataView:()=>r.isDataView,isDate:()=>r.isDate,isElement:()=>r.isElement,isEmpty:()=>r.isEmpty,isEqual:()=>r.isEqual,isError:()=>r.isError,isFinite:()=>r.isFinite,isFunction:()=>r.isFunction,isMap:()=>r.isMap,isMatch:()=>r.isMatch,isNaN:()=>r.isNaN,isNull:()=>r.isNull,isNumber:()=>r.isNumber,isObject:()=>r.isObject,isRegExp:()=>r.isRegExp,isSet:()=>r.isSet,isString:()=>r.isString,isSymbol:()=>r.isSymbol,isTypedArray:()=>r.isTypedArray,isUndefined:()=>r.isUndefined,isWeakMap:()=>r.isWeakMap,isWeakSet:()=>r.isWeakSet,iteratee:()=>r.iteratee,keys:()=>r.keys,last:()=>r.last,lastIndexOf:()=>r.lastIndexOf,map:()=>r.map,mapObject:()=>r.mapObject,matcher:()=>r.matcher,matches:()=>r.matches,max:()=>r.max,memoize:()=>r.memoize,methods:()=>r.methods,min:()=>r.min,mixin:()=>r.mixin,negate:()=>r.negate,noop:()=>r.noop,now:()=>r.now,object:()=>r.object,omit:()=>r.omit,once:()=>r.once,pairs:()=>r.pairs,partial:()=>r.partial,partition:()=>r.partition,pick:()=>r.pick,pluck:()=>r.pluck,property:()=>r.property,propertyOf:()=>r.propertyOf,random:()=>r.random,range:()=>r.range,reduce:()=>r.reduce,reduceRight:()=>r.reduceRight,reject:()=>r.reject,rest:()=>r.rest,restArguments:()=>r.restArguments,result:()=>r.result,sample:()=>r.sample,select:()=>r.select,shuffle:()=>r.shuffle,size:()=>r.size,some:()=>r.some,sortBy:()=>r.sortBy,sortedIndex:()=>r.sortedIndex,tail:()=>r.tail,take:()=>r.take,tap:()=>r.tap,template:()=>r.template,templateSettings:()=>r.templateSettings,throttle:()=>r.throttle,times:()=>r.times,toArray:()=>r.toArray,toPath:()=>r.toPath,transpose:()=>r.transpose,unescape:()=>r.unescape,union:()=>r.union,uniq:()=>r.uniq,unique:()=>r.unique,uniqueId:()=>r.uniqueId,unzip:()=>r.unzip,values:()=>r.values,where:()=>r.where,without:()=>r.without,wrap:()=>r.wrap,zip:()=>r.zip});var l=t(48181),r=t(56185)},48181:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(56185),r=(0,l.mixin)(l);r._=r;const i=r},56185:(e,n,t)=>{"use strict";t.r(n),t.d(n,{VERSION:()=>l.q4,after:()=>Ae.Z,all:()=>Re.Z,allKeys:()=>k.Z,any:()=>We.Z,assign:()=>R.Z,before:()=>we.Z,bind:()=>de.Z,bindAll:()=>pe.Z,chain:()=>ue.Z,chunk:()=>yn.Z,clone:()=>F.Z,collect:()=>Ne.Z,compact:()=>un.Z,compose:()=>ve.Z,constant:()=>$.Z,contains:()=>Ie.Z,countBy:()=>Ye.Z,create:()=>I.Z,debounce:()=>ge.Z,default:()=>An.Z,defaults:()=>W.Z,defer:()=>me.Z,delay:()=>he.Z,detect:()=>Le.Z,difference:()=>hn.Z,drop:()=>on.Z,each:()=>ke.Z,escape:()=>te.Z,every:()=>Re.Z,extend:()=>D.Z,extendOwn:()=>R.Z,filter:()=>Pe.Z,find:()=>Le.Z,findIndex:()=>Te.Z,findKey:()=>Ce.Z,findLastIndex:()=>Se.Z,findWhere:()=>xe.Z,first:()=>ln.Z,flatten:()=>sn.Z,foldl:()=>Be.Z,foldr:()=>qe.Z,forEach:()=>ke.Z,functions:()=>P.Z,get:()=>X.Z,groupBy:()=>Ze.Z,has:()=>G.Z,head:()=>ln.Z,identity:()=>U.Z,include:()=>Ie.Z,includes:()=>Ie.Z,indexBy:()=>Ke.Z,indexOf:()=>Oe.Z,initial:()=>rn.Z,inject:()=>Be.Z,intersection:()=>fn.Z,invert:()=>q.Z,invoke:()=>Fe.Z,isArguments:()=>v.Z,isArray:()=>M.Z,isArrayBuffer:()=>b.Z,isBoolean:()=>u.Z,isDataView:()=>g.Z,isDate:()=>p.Z,isElement:()=>s.Z,isEmpty:()=>C.Z,isEqual:()=>S.Z,isError:()=>h.Z,isFinite:()=>A.Z,isFunction:()=>y.Z,isMap:()=>z.Z,isMatch:()=>T.Z,isNaN:()=>w.Z,isNull:()=>a.Z,isNumber:()=>d.Z,isObject:()=>i.Z,isRegExp:()=>f.Z,isSet:()=>E.Z,isString:()=>c.Z,isSymbol:()=>m.Z,isTypedArray:()=>_.Z,isUndefined:()=>o.Z,isWeakMap:()=>O.Z,isWeakSet:()=>L.Z,iteratee:()=>se.Z,keys:()=>x.Z,last:()=>an.Z,lastIndexOf:()=>Ee.Z,map:()=>Ne.Z,mapObject:()=>H.Z,matcher:()=>J.Z,matches:()=>J.Z,max:()=>Ge.Z,memoize:()=>fe.Z,methods:()=>P.Z,min:()=>He.Z,mixin:()=>vn.Z,negate:()=>ye.Z,noop:()=>V.Z,now:()=>ne.Z,object:()=>gn.Z,omit:()=>tn.Z,once:()=>_e.Z,pairs:()=>B.Z,partial:()=>ce.Z,partition:()=>Je.Z,pick:()=>nn.Z,pluck:()=>je.Z,property:()=>K.Z,propertyOf:()=>Y.Z,random:()=>ee.Z,range:()=>Mn.Z,reduce:()=>Be.Z,reduceRight:()=>qe.Z,reject:()=>De.Z,rest:()=>on.Z,restArguments:()=>r.Z,result:()=>ae.Z,sample:()=>$e.Z,select:()=>Pe.Z,shuffle:()=>Ue.Z,size:()=>en.Z,some:()=>We.Z,sortBy:()=>Ve.Z,sortedIndex:()=>ze.Z,tail:()=>on.Z,take:()=>ln.Z,tap:()=>j.Z,template:()=>ie.Z,templateSettings:()=>re.Z,throttle:()=>be.Z,times:()=>Q.Z,toArray:()=>Qe.Z,toPath:()=>Z.Z,transpose:()=>mn.Z,unescape:()=>le.Z,union:()=>pn.Z,uniq:()=>dn.Z,unique:()=>dn.Z,uniqueId:()=>oe.Z,unzip:()=>mn.Z,values:()=>N.Z,where:()=>Xe.Z,without:()=>cn.Z,wrap:()=>Me.Z,zip:()=>bn.Z});var l=t(84150),r=t(70880),i=t(23982),a=t(97986),o=t(42532),u=t(39873),s=t(62066),c=t(53873),d=t(50051),p=t(64834),f=t(72507),h=t(70296),m=t(21579),b=t(49198),g=t(10381),M=t(6753),y=t(67993),v=t(1610),A=t(19207),w=t(71213),_=t(52150),C=t(5550),T=t(93538),S=t(5409),z=t(59050),O=t(51756),E=t(80877),L=t(5539),x=t(62938),k=t(11901),N=t(20491),B=t(51141),q=t(79271),P=t(34573),D=t(29279),R=t(34250),W=t(22636),I=t(27761),F=t(16961),j=t(50350),X=t(10183),G=t(76629),H=t(87170),U=t(20214),$=t(75342),V=t(91410),Z=t(49027),K=t(76455),Y=t(4196),J=t(51837),Q=t(48539),ee=t(31207),ne=t(40374),te=t(49922),le=t(41923),re=t(61363),ie=t(43385),ae=t(8071),oe=t(77006),ue=t(66113),se=t(5259),ce=t(70407),de=t(48722),pe=t(3617),fe=t(6630),he=t(17064),me=t(74151),be=t(44847),ge=t(11688),Me=t(21798),ye=t(4391),ve=t(27210),Ae=t(55187),we=t(75855),_e=t(94935),Ce=t(22032),Te=t(78329),Se=t(15141),ze=t(74415),Oe=t(9082),Ee=t(28726),Le=t(7645),xe=t(35690),ke=t(91031),Ne=t(68440),Be=t(39073),qe=t(19548),Pe=t(10092),De=t(33909),Re=t(8754),We=t(96062),Ie=t(6376),Fe=t(74869),je=t(11918),Xe=t(58039),Ge=t(5842),He=t(72595),Ue=t(2893),$e=t(52188),Ve=t(30245),Ze=t(13123),Ke=t(17511),Ye=t(75989),Je=t(76390),Qe=t(3982),en=t(90180),nn=t(77128),tn=t(86539),ln=t(90044),rn=t(84729),an=t(27406),on=t(78197),un=t(30918),sn=t(69363),cn=t(43189),dn=t(12400),pn=t(199),fn=t(72599),hn=t(89699),mn=t(46490),bn=t(23262),gn=t(54959),Mn=t(26071),yn=t(46529),vn=t(27717),An=t(77239)},17511:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(99012).Z)((function(e,n,t){e[t]=n}))},9082:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(74415),r=t(78329);const i=(0,t(68141).Z)(1,r.Z,l.Z)},84729:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(84150);function r(e,n,t){return l.tP.call(e,0,Math.max(0,e.length-(null==n||t?1:n)))}},72599:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(82838),r=t(6376);function i(e){for(var n=[],t=arguments.length,i=0,a=(0,l.Z)(e);i<a;i++){var o=e[i];if(!(0,r.Z)(n,o)){var u;for(u=1;u<t&&(0,r.Z)(arguments[u],o);u++);u===t&&n.push(o)}}return n}},79271:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(62938);function r(e){for(var n={},t=(0,l.Z)(e),r=0,i=t.length;r<i;r++)n[e[t[r]]]=t[r];return n}},74869:(e,n,t)=>{"use strict";t.d(n,{Z:()=>u});var l=t(70880),r=t(67993),i=t(68440),a=t(93363),o=t(55587);const u=(0,l.Z)((function(e,n,t){var l,u;return(0,r.Z)(n)?u=n:(n=(0,o.Z)(n),l=n.slice(0,-1),n=n[n.length-1]),(0,i.Z)(e,(function(e){var r=u;if(!r){if(l&&l.length&&(e=(0,a.Z)(e,l)),null==e)return;r=e[n]}return null==r?r:r.apply(e,t)}))}))},1610:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(52097),r=t(27946),i=(0,l.Z)("Arguments");!function(){i(arguments)||(i=function(e){return(0,r.Z)(e,"callee")})}();const a=i},6753:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(84150),r=t(52097);const i=l.Hs||(0,r.Z)("Array")},49198:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(52097).Z)("ArrayBuffer")},39873:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(84150);function r(e){return!0===e||!1===e||"[object Boolean]"===l.BB.call(e)}},10381:(e,n,t)=>{"use strict";t.d(n,{Z:()=>u});var l=t(52097),r=t(67993),i=t(49198),a=t(47597),o=(0,l.Z)("DataView");const u=a.G?function(e){return null!=e&&(0,r.Z)(e.getInt8)&&(0,i.Z)(e.buffer)}:o},64834:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(52097).Z)("Date")},62066:(e,n,t)=>{"use strict";function l(e){return!(!e||1!==e.nodeType)}t.d(n,{Z:()=>l})},5550:(e,n,t)=>{"use strict";t.d(n,{Z:()=>u});var l=t(82838),r=t(6753),i=t(53873),a=t(1610),o=t(62938);function u(e){if(null==e)return!0;var n=(0,l.Z)(e);return"number"==typeof n&&((0,r.Z)(e)||(0,i.Z)(e)||(0,a.Z)(e))?0===n:0===(0,l.Z)((0,o.Z)(e))}},5409:(e,n,t)=>{"use strict";t.d(n,{Z:()=>b});var l=t(81559),r=t(84150),i=t(49135),a=t(52150),o=t(67993),u=t(47597),s=t(10381),c=t(62938),d=t(27946),p=t(76373),f="[object DataView]";function h(e,n,t,l){if(e===n)return 0!==e||1/e==1/n;if(null==e||null==n)return!1;if(e!=e)return n!=n;var r=typeof e;return("function"===r||"object"===r||"object"==typeof n)&&m(e,n,t,l)}function m(e,n,t,b){e instanceof l.Z&&(e=e._wrapped),n instanceof l.Z&&(n=n._wrapped);var g=r.BB.call(e);if(g!==r.BB.call(n))return!1;if(u.G&&"[object Object]"==g&&(0,s.Z)(e)){if(!(0,s.Z)(n))return!1;g=f}switch(g){case"[object RegExp]":case"[object String]":return""+e==""+n;case"[object Number]":return+e!=+e?+n!=+n:0==+e?1/+e==1/n:+e==+n;case"[object Date]":case"[object Boolean]":return+e==+n;case"[object Symbol]":return r.SI.valueOf.call(e)===r.SI.valueOf.call(n);case"[object ArrayBuffer]":case f:return m((0,p.Z)(e),(0,p.Z)(n),t,b)}var M="[object Array]"===g;if(!M&&(0,a.Z)(e)){if((0,i.Z)(e)!==(0,i.Z)(n))return!1;if(e.buffer===n.buffer&&e.byteOffset===n.byteOffset)return!0;M=!0}if(!M){if("object"!=typeof e||"object"!=typeof n)return!1;var y=e.constructor,v=n.constructor;if(y!==v&&!((0,o.Z)(y)&&y instanceof y&&(0,o.Z)(v)&&v instanceof v)&&"constructor"in e&&"constructor"in n)return!1}b=b||[];for(var A=(t=t||[]).length;A--;)if(t[A]===e)return b[A]===n;if(t.push(e),b.push(n),M){if((A=e.length)!==n.length)return!1;for(;A--;)if(!h(e[A],n[A],t,b))return!1}else{var w,_=(0,c.Z)(e);if(A=_.length,(0,c.Z)(n).length!==A)return!1;for(;A--;)if(w=_[A],!(0,d.Z)(n,w)||!h(e[w],n[w],t,b))return!1}return t.pop(),b.pop(),!0}function b(e,n){return h(e,n)}},70296:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(52097).Z)("Error")},19207:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(84150),r=t(21579);function i(e){return!(0,r.Z)(e)&&(0,l._u)(e)&&!isNaN(parseFloat(e))}},67993:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var l=t(52097),r=t(84150),i=(0,l.Z)("Function"),a=r.Jz.document&&r.Jz.document.childNodes;"object"!=typeof Int8Array&&"function"!=typeof a&&(i=function(e){return"function"==typeof e||!1});const o=i},59050:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(52097),r=t(47597),i=t(60795);const a=r.f?(0,i.dJ)(i.Eo):(0,l.Z)("Map")},93538:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(62938);function r(e,n){var t=(0,l.Z)(n),r=t.length;if(null==e)return!r;for(var i=Object(e),a=0;a<r;a++){var o=t[a];if(n[o]!==i[o]||!(o in i))return!1}return!0}},71213:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(84150),r=t(50051);function i(e){return(0,r.Z)(e)&&(0,l.lE)(e)}},97986:(e,n,t)=>{"use strict";function l(e){return null===e}t.d(n,{Z:()=>l})},50051:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(52097).Z)("Number")},23982:(e,n,t)=>{"use strict";function l(e){var n=typeof e;return"function"===n||"object"===n&&!!e}t.d(n,{Z:()=>l})},72507:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(52097).Z)("RegExp")},80877:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(52097),r=t(47597),i=t(60795);const a=r.f?(0,i.dJ)(i.SR):(0,l.Z)("Set")},53873:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(52097).Z)("String")},21579:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(52097).Z)("Symbol")},52150:(e,n,t)=>{"use strict";t.d(n,{Z:()=>u});var l=t(84150),r=t(10381),i=t(75342),a=t(67044),o=/\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\]/;const u=l.LW?function(e){return l.OP?(0,l.OP)(e)&&!(0,r.Z)(e):(0,a.Z)(e)&&o.test(l.BB.call(e))}:(0,i.Z)(!1)},42532:(e,n,t)=>{"use strict";function l(e){return void 0===e}t.d(n,{Z:()=>l})},51756:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(52097),r=t(47597),i=t(60795);const a=r.f?(0,i.dJ)(i.j$):(0,l.Z)("WeakMap")},5539:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(52097).Z)("WeakSet")},5259:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(81559),r=t(2693);function i(e,n){return(0,r.Z)(e,n,1/0)}l.Z.iteratee=i},62938:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var l=t(23982),r=t(84150),i=t(27946),a=t(83764);function o(e){if(!(0,l.Z)(e))return[];if(r.DD)return(0,r.DD)(e);var n=[];for(var t in e)(0,i.Z)(e,t)&&n.push(t);return r.qH&&(0,a.Z)(e,n),n}},27406:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(78197);function r(e,n,t){return null==e||e.length<1?null==n||t?void 0:[]:null==n||t?e[e.length-1]:(0,l.Z)(e,Math.max(0,e.length-n))}},28726:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(15141);const r=(0,t(68141).Z)(-1,l.Z)},68440:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(65625),r=t(26615),i=t(62938);function a(e,n,t){n=(0,l.Z)(n,t);for(var a=!(0,r.Z)(e)&&(0,i.Z)(e),o=(a||e).length,u=Array(o),s=0;s<o;s++){var c=a?a[s]:s;u[s]=n(e[c],c,e)}return u}},87170:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(65625),r=t(62938);function i(e,n,t){n=(0,l.Z)(n,t);for(var i=(0,r.Z)(e),a=i.length,o={},u=0;u<a;u++){var s=i[u];o[s]=n(e[s],s,e)}return o}},51837:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(34250),r=t(93538);function i(e){return e=(0,l.Z)({},e),function(n){return(0,r.Z)(n,e)}}},5842:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var l=t(26615),r=t(20491),i=t(65625),a=t(91031);function o(e,n,t){var o,u,s=-1/0,c=-1/0;if(null==n||"number"==typeof n&&"object"!=typeof e[0]&&null!=e)for(var d=0,p=(e=(0,l.Z)(e)?e:(0,r.Z)(e)).length;d<p;d++)null!=(o=e[d])&&o>s&&(s=o);else n=(0,i.Z)(n,t),(0,a.Z)(e,(function(e,t,l){((u=n(e,t,l))>c||u===-1/0&&s===-1/0)&&(s=e,c=u)}));return s}},6630:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(27946);function r(e,n){var t=function(r){var i=t.cache,a=""+(n?n.apply(this,arguments):r);return(0,l.Z)(i,a)||(i[a]=e.apply(this,arguments)),i[a]};return t.cache={},t}},72595:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var l=t(26615),r=t(20491),i=t(65625),a=t(91031);function o(e,n,t){var o,u,s=1/0,c=1/0;if(null==n||"number"==typeof n&&"object"!=typeof e[0]&&null!=e)for(var d=0,p=(e=(0,l.Z)(e)?e:(0,r.Z)(e)).length;d<p;d++)null!=(o=e[d])&&o<s&&(s=o);else n=(0,i.Z)(n,t),(0,a.Z)(e,(function(e,t,l){((u=n(e,t,l))<c||u===1/0&&s===1/0)&&(s=e,c=u)}));return s}},27717:(e,n,t)=>{"use strict";t.d(n,{Z:()=>u});var l=t(81559),r=t(91031),i=t(34573),a=t(84150),o=t(94312);function u(e){return(0,r.Z)((0,i.Z)(e),(function(n){var t=l.Z[n]=e[n];l.Z.prototype[n]=function(){var e=[this._wrapped];return a.VF.apply(e,arguments),(0,o.Z)(this,t.apply(l.Z,e))}})),l.Z}},4391:(e,n,t)=>{"use strict";function l(e){return function(){return!e.apply(this,arguments)}}t.d(n,{Z:()=>l})},91410:(e,n,t)=>{"use strict";function l(){}t.d(n,{Z:()=>l})},40374:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=Date.now||function(){return(new Date).getTime()}},54959:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(82838);function r(e,n){for(var t={},r=0,i=(0,l.Z)(e);r<i;r++)n?t[e[r]]=n[r]:t[e[r][0]]=e[r][1];return t}},86539:(e,n,t)=>{"use strict";t.d(n,{Z:()=>c});var l=t(70880),r=t(67993),i=t(4391),a=t(68440),o=t(90254),u=t(6376),s=t(77128);const c=(0,l.Z)((function(e,n){var t,l=n[0];return(0,r.Z)(l)?(l=(0,i.Z)(l),n.length>1&&(t=n[1])):(n=(0,a.Z)((0,o.Z)(n,!1,!1),String),l=function(e,t){return!(0,u.Z)(n,t)}),(0,s.Z)(e,l,t)}))},94935:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(70407),r=t(75855);const i=(0,l.Z)(r.Z,2)},51141:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(62938);function r(e){for(var n=(0,l.Z)(e),t=n.length,r=Array(t),i=0;i<t;i++)r[i]=[n[i],e[n[i]]];return r}},70407:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var l=t(70880),r=t(75260),i=t(81559),a=(0,l.Z)((function(e,n){var t=a.placeholder,l=function(){for(var i=0,a=n.length,o=Array(a),u=0;u<a;u++)o[u]=n[u]===t?arguments[i++]:n[u];for(;i<arguments.length;)o.push(arguments[i++]);return(0,r.Z)(e,l,this,this,o)};return l}));a.placeholder=i.Z;const o=a},76390:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(99012).Z)((function(e,n,t){e[t?0:1].push(n)}),!0)},77128:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var l=t(70880),r=t(67993),i=t(2189),a=t(11901),o=t(33201),u=t(90254);const s=(0,l.Z)((function(e,n){var t={},l=n[0];if(null==e)return t;(0,r.Z)(l)?(n.length>1&&(l=(0,i.Z)(l,n[1])),n=(0,a.Z)(e)):(l=o.Z,n=(0,u.Z)(n,!1,!1),e=Object(e));for(var s=0,c=n.length;s<c;s++){var d=n[s],p=e[d];l(p,d,e)&&(t[d]=p)}return t}))},11918:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(68440),r=t(76455);function i(e,n){return(0,l.Z)(e,(0,r.Z)(n))}},76455:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(93363),r=t(55587);function i(e){return e=(0,r.Z)(e),function(n){return(0,l.Z)(n,e)}}},4196:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(91410),r=t(10183);function i(e){return null==e?l.Z:function(n){return(0,r.Z)(e,n)}}},31207:(e,n,t)=>{"use strict";function l(e,n){return null==n&&(n=e,e=0),e+Math.floor(Math.random()*(n-e+1))}t.d(n,{Z:()=>l})},26071:(e,n,t)=>{"use strict";function l(e,n,t){null==n&&(n=e||0,e=0),t||(t=n<e?-1:1);for(var l=Math.max(Math.ceil((n-e)/t),0),r=Array(l),i=0;i<l;i++,e+=t)r[i]=e;return r}t.d(n,{Z:()=>l})},39073:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(49522).Z)(1)},19548:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=(0,t(49522).Z)(-1)},33909:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(10092),r=t(4391),i=t(65625);function a(e,n,t){return(0,l.Z)(e,(0,r.Z)((0,i.Z)(n)),t)}},78197:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(84150);function r(e,n,t){return l.tP.call(e,null==n||t?1:n)}},70880:(e,n,t)=>{"use strict";function l(e,n){return n=null==n?e.length-1:+n,function(){for(var t=Math.max(arguments.length-n,0),l=Array(t),r=0;r<t;r++)l[r]=arguments[r+n];switch(n){case 0:return e.call(this,l);case 1:return e.call(this,arguments[0],l);case 2:return e.call(this,arguments[0],arguments[1],l)}var i=Array(n+1);for(r=0;r<n;r++)i[r]=arguments[r];return i[n]=l,e.apply(this,i)}}t.d(n,{Z:()=>l})},8071:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(67993),r=t(55587);function i(e,n,t){var i=(n=(0,r.Z)(n)).length;if(!i)return(0,l.Z)(t)?t.call(e):t;for(var a=0;a<i;a++){var o=null==e?void 0:e[n[a]];void 0===o&&(o=t,a=i),e=(0,l.Z)(o)?o.call(e):o}return e}},52188:(e,n,t)=>{"use strict";t.d(n,{Z:()=>u});var l=t(26615),r=t(16961),i=t(20491),a=t(82838),o=t(31207);function u(e,n,t){if(null==n||t)return(0,l.Z)(e)||(e=(0,i.Z)(e)),e[(0,o.Z)(e.length-1)];var u=(0,l.Z)(e)?(0,r.Z)(e):(0,i.Z)(e),s=(0,a.Z)(u);n=Math.max(Math.min(n,s),0);for(var c=s-1,d=0;d<n;d++){var p=(0,o.Z)(d,c),f=u[d];u[d]=u[p],u[p]=f}return u.slice(0,n)}},2893:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(52188);function r(e){return(0,l.Z)(e,1/0)}},90180:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(26615),r=t(62938);function i(e){return null==e?0:(0,l.Z)(e)?e.length:(0,r.Z)(e).length}},96062:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(65625),r=t(26615),i=t(62938);function a(e,n,t){n=(0,l.Z)(n,t);for(var a=!(0,r.Z)(e)&&(0,i.Z)(e),o=(a||e).length,u=0;u<o;u++){var s=a?a[u]:u;if(n(e[s],s,e))return!0}return!1}},30245:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(65625),r=t(11918),i=t(68440);function a(e,n,t){var a=0;return n=(0,l.Z)(n,t),(0,r.Z)((0,i.Z)(e,(function(e,t,l){return{value:e,index:a++,criteria:n(e,t,l)}})).sort((function(e,n){var t=e.criteria,l=n.criteria;if(t!==l){if(t>l||void 0===t)return 1;if(t<l||void 0===l)return-1}return e.index-n.index})),"value")}},74415:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(65625),r=t(82838);function i(e,n,t,i){for(var a=(t=(0,l.Z)(t,i,1))(n),o=0,u=(0,r.Z)(e);o<u;){var s=Math.floor((o+u)/2);t(e[s])<a?o=s+1:u=s}return o}},50350:(e,n,t)=>{"use strict";function l(e,n){return n(e),e}t.d(n,{Z:()=>l})},43385:(e,n,t)=>{"use strict";t.d(n,{Z:()=>c});var l=t(22636),r=t(81559),i=(t(61363),/(.)^/),a={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},o=/\\|'|\r|\n|\u2028|\u2029/g;function u(e){return"\\"+a[e]}var s=/^\s*(\w|\$)+\s*$/;function c(e,n,t){!n&&t&&(n=t),n=(0,l.Z)({},n,r.Z.templateSettings);var a=RegExp([(n.escape||i).source,(n.interpolate||i).source,(n.evaluate||i).source].join("|")+"|$","g"),c=0,d="__p+='";e.replace(a,(function(n,t,l,r,i){return d+=e.slice(c,i).replace(o,u),c=i+n.length,t?d+="'+\n((__t=("+t+"))==null?'':_.escape(__t))+\n'":l?d+="'+\n((__t=("+l+"))==null?'':__t)+\n'":r&&(d+="';\n"+r+"\n__p+='"),n})),d+="';\n";var p,f=n.variable;if(f){if(!s.test(f))throw new Error(f)}else d="with(obj||{}){\n"+d+"}\n",f="obj";d="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+d+"return __p;\n";try{p=new Function(f,"_",d)}catch(e){throw e.source=d,e}var h=function(e){return p.call(this,e,r.Z)};return h.source="function("+f+"){\n"+d+"}",h}},61363:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});const l=t(81559).Z.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g}},44847:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(40374);function r(e,n,t){var r,i,a,o,u=0;t||(t={});var s=function(){u=!1===t.leading?0:(0,l.Z)(),r=null,o=e.apply(i,a),r||(i=a=null)},c=function(){var c=(0,l.Z)();u||!1!==t.leading||(u=c);var d=n-(c-u);return i=this,a=arguments,d<=0||d>n?(r&&(clearTimeout(r),r=null),u=c,o=e.apply(i,a),r||(i=a=null)):r||!1===t.trailing||(r=setTimeout(s,d)),o};return c.cancel=function(){clearTimeout(r),u=0,r=i=a=null},c}},48539:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(2189);function r(e,n,t){var r=Array(Math.max(0,e));n=(0,l.Z)(n,t,1);for(var i=0;i<e;i++)r[i]=n(i);return r}},3982:(e,n,t)=>{"use strict";t.d(n,{Z:()=>d});var l=t(6753),r=t(84150),i=t(53873),a=t(26615),o=t(68440),u=t(20214),s=t(20491),c=/[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;function d(e){return e?(0,l.Z)(e)?r.tP.call(e):(0,i.Z)(e)?e.match(c):(0,a.Z)(e)?(0,o.Z)(e,u.Z):(0,s.Z)(e):[]}},49027:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(81559),r=t(6753);function i(e){return(0,r.Z)(e)?e:[e]}l.Z.toPath=i},77239:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var l=t(81559),r=t(91031),i=t(84150),a=t(94312);(0,r.Z)(["pop","push","reverse","shift","sort","splice","unshift"],(function(e){var n=i.O0[e];l.Z.prototype[e]=function(){var t=this._wrapped;return null!=t&&(n.apply(t,arguments),"shift"!==e&&"splice"!==e||0!==t.length||delete t[0]),(0,a.Z)(this,t)}})),(0,r.Z)(["concat","join","slice"],(function(e){var n=i.O0[e];l.Z.prototype[e]=function(){var e=this._wrapped;return null!=e&&(e=n.apply(e,arguments)),(0,a.Z)(this,e)}}));const o=l.Z},81559:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(84150);function r(e){return e instanceof r?e:this instanceof r?void(this._wrapped=e):new r(e)}r.VERSION=l.q4,r.prototype.value=function(){return this._wrapped},r.prototype.valueOf=r.prototype.toJSON=r.prototype.value,r.prototype.toString=function(){return String(this._wrapped)}},41923:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(49730),r=t(69265);const i=(0,l.Z)(r.Z)},199:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(70880),r=t(12400),i=t(90254);const a=(0,l.Z)((function(e){return(0,r.Z)((0,i.Z)(e,!0,!0))}))},12400:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var l=t(39873),r=t(65625),i=t(82838),a=t(6376);function o(e,n,t,o){(0,l.Z)(n)||(o=t,t=n,n=!1),null!=t&&(t=(0,r.Z)(t,o));for(var u=[],s=[],c=0,d=(0,i.Z)(e);c<d;c++){var p=e[c],f=t?t(p,c,e):p;n&&!t?(c&&s===f||u.push(p),s=f):t?(0,a.Z)(s,f)||(s.push(f),u.push(p)):(0,a.Z)(u,p)||u.push(p)}return u}},77006:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=0;function r(e){var n=++l+"";return e?e+n:n}},46490:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var l=t(5842),r=t(82838),i=t(11918);function a(e){for(var n=e&&(0,l.Z)(e,r.Z).length||0,t=Array(n),a=0;a<n;a++)t[a]=(0,i.Z)(e,a);return t}},20491:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(62938);function r(e){for(var n=(0,l.Z)(e),t=n.length,r=Array(t),i=0;i<t;i++)r[i]=e[n[i]];return r}},58039:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(10092),r=t(51837);function i(e,n){return(0,l.Z)(e,(0,r.Z)(n))}},43189:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(70880),r=t(89699);const i=(0,l.Z)((function(e,n){return(0,r.Z)(e,n)}))},21798:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});var l=t(70407);function r(e,n){return(0,l.Z)(n,e)}},23262:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var l=t(70880),r=t(46490);const i=(0,l.Z)(r.Z)},66218:e=>{e.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},44645:(e,n,t)=>{"use strict";var l=t(87832),r=t(17206),i=t(22080),a=t(51578);function o(e){return e.call.bind(e)}var u="undefined"!=typeof BigInt,s="undefined"!=typeof Symbol,c=o(Object.prototype.toString),d=o(Number.prototype.valueOf),p=o(String.prototype.valueOf),f=o(Boolean.prototype.valueOf);if(u)var h=o(BigInt.prototype.valueOf);if(s)var m=o(Symbol.prototype.valueOf);function b(e,n){if("object"!=typeof e)return!1;try{return n(e),!0}catch(e){return!1}}function g(e){return"[object Map]"===c(e)}function M(e){return"[object Set]"===c(e)}function y(e){return"[object WeakMap]"===c(e)}function v(e){return"[object WeakSet]"===c(e)}function A(e){return"[object ArrayBuffer]"===c(e)}function w(e){return"undefined"!=typeof ArrayBuffer&&(A.working?A(e):e instanceof ArrayBuffer)}function _(e){return"[object DataView]"===c(e)}function C(e){return"undefined"!=typeof DataView&&(_.working?_(e):e instanceof DataView)}n.isArgumentsObject=l,n.isGeneratorFunction=r,n.isTypedArray=a,n.isPromise=function(e){return"undefined"!=typeof Promise&&e instanceof Promise||null!==e&&"object"==typeof e&&"function"==typeof e.then&&"function"==typeof e.catch},n.isArrayBufferView=function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):a(e)||C(e)},n.isUint8Array=function(e){return"Uint8Array"===i(e)},n.isUint8ClampedArray=function(e){return"Uint8ClampedArray"===i(e)},n.isUint16Array=function(e){return"Uint16Array"===i(e)},n.isUint32Array=function(e){return"Uint32Array"===i(e)},n.isInt8Array=function(e){return"Int8Array"===i(e)},n.isInt16Array=function(e){return"Int16Array"===i(e)},n.isInt32Array=function(e){return"Int32Array"===i(e)},n.isFloat32Array=function(e){return"Float32Array"===i(e)},n.isFloat64Array=function(e){return"Float64Array"===i(e)},n.isBigInt64Array=function(e){return"BigInt64Array"===i(e)},n.isBigUint64Array=function(e){return"BigUint64Array"===i(e)},g.working="undefined"!=typeof Map&&g(new Map),n.isMap=function(e){return"undefined"!=typeof Map&&(g.working?g(e):e instanceof Map)},M.working="undefined"!=typeof Set&&M(new Set),n.isSet=function(e){return"undefined"!=typeof Set&&(M.working?M(e):e instanceof Set)},y.working="undefined"!=typeof WeakMap&&y(new WeakMap),n.isWeakMap=function(e){return"undefined"!=typeof WeakMap&&(y.working?y(e):e instanceof WeakMap)},v.working="undefined"!=typeof WeakSet&&v(new WeakSet),n.isWeakSet=function(e){return v(e)},A.working="undefined"!=typeof ArrayBuffer&&A(new ArrayBuffer),n.isArrayBuffer=w,_.working="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView&&_(new DataView(new ArrayBuffer(1),0,1)),n.isDataView=C;var T="undefined"!=typeof SharedArrayBuffer?SharedArrayBuffer:void 0;function S(e){return"[object SharedArrayBuffer]"===c(e)}function z(e){return void 0!==T&&(void 0===S.working&&(S.working=S(new T)),S.working?S(e):e instanceof T)}function O(e){return b(e,d)}function E(e){return b(e,p)}function L(e){return b(e,f)}function x(e){return u&&b(e,h)}function k(e){return s&&b(e,m)}n.isSharedArrayBuffer=z,n.isAsyncFunction=function(e){return"[object AsyncFunction]"===c(e)},n.isMapIterator=function(e){return"[object Map Iterator]"===c(e)},n.isSetIterator=function(e){return"[object Set Iterator]"===c(e)},n.isGeneratorObject=function(e){return"[object Generator]"===c(e)},n.isWebAssemblyCompiledModule=function(e){return"[object WebAssembly.Module]"===c(e)},n.isNumberObject=O,n.isStringObject=E,n.isBooleanObject=L,n.isBigIntObject=x,n.isSymbolObject=k,n.isBoxedPrimitive=function(e){return O(e)||E(e)||L(e)||x(e)||k(e)},n.isAnyArrayBuffer=function(e){return"undefined"!=typeof Uint8Array&&(w(e)||z(e))},["isProxy","isExternal","isModuleNamespaceObject"].forEach((function(e){Object.defineProperty(n,e,{enumerable:!1,value:function(){throw new Error(e+" is not supported in userland")}})}))},55723:(e,n,t)=>{var l=t(2724),r=Object.getOwnPropertyDescriptors||function(e){for(var n=Object.keys(e),t={},l=0;l<n.length;l++)t[n[l]]=Object.getOwnPropertyDescriptor(e,n[l]);return t},i=/%[sdj%]/g;n.format=function(e){if(!y(e)){for(var n=[],t=0;t<arguments.length;t++)n.push(s(arguments[t]));return n.join(" ")}t=1;for(var l=arguments,r=l.length,a=String(e).replace(i,(function(e){if("%%"===e)return"%";if(t>=r)return e;switch(e){case"%s":return String(l[t++]);case"%d":return Number(l[t++]);case"%j":try{return JSON.stringify(l[t++])}catch(e){return"[Circular]"}default:return e}})),o=l[t];t<r;o=l[++t])g(o)||!w(o)?a+=" "+o:a+=" "+s(o);return a},n.deprecate=function(e,t){if(void 0!==l&&!0===l.noDeprecation)return e;if(void 0===l)return function(){return n.deprecate(e,t).apply(this,arguments)};var r=!1;return function(){if(!r){if(l.throwDeprecation)throw new Error(t);l.traceDeprecation?console.trace(t):console.error(t),r=!0}return e.apply(this,arguments)}};var a={},o=/^$/;if(l.env.NODE_DEBUG){var u=l.env.NODE_DEBUG;u=u.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),o=new RegExp("^"+u+"$","i")}function s(e,t){var l={seen:[],stylize:d};return arguments.length>=3&&(l.depth=arguments[2]),arguments.length>=4&&(l.colors=arguments[3]),b(t)?l.showHidden=t:t&&n._extend(l,t),v(l.showHidden)&&(l.showHidden=!1),v(l.depth)&&(l.depth=2),v(l.colors)&&(l.colors=!1),v(l.customInspect)&&(l.customInspect=!0),l.colors&&(l.stylize=c),p(l,e,l.depth)}function c(e,n){var t=s.styles[n];return t?"["+s.colors[t][0]+"m"+e+"["+s.colors[t][1]+"m":e}function d(e,n){return e}function p(e,t,l){if(e.customInspect&&t&&T(t.inspect)&&t.inspect!==n.inspect&&(!t.constructor||t.constructor.prototype!==t)){var r=t.inspect(l,e);return y(r)||(r=p(e,r,l)),r}var i=function(e,n){if(v(n))return e.stylize("undefined","undefined");if(y(n)){var t="'"+JSON.stringify(n).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(t,"string")}return M(n)?e.stylize(""+n,"number"):b(n)?e.stylize(""+n,"boolean"):g(n)?e.stylize("null","null"):void 0}(e,t);if(i)return i;var a=Object.keys(t),o=function(e){var n={};return e.forEach((function(e,t){n[e]=!0})),n}(a);if(e.showHidden&&(a=Object.getOwnPropertyNames(t)),C(t)&&(a.indexOf("message")>=0||a.indexOf("description")>=0))return f(t);if(0===a.length){if(T(t)){var u=t.name?": "+t.name:"";return e.stylize("[Function"+u+"]","special")}if(A(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(_(t))return e.stylize(Date.prototype.toString.call(t),"date");if(C(t))return f(t)}var s,c="",d=!1,w=["{","}"];return m(t)&&(d=!0,w=["[","]"]),T(t)&&(c=" [Function"+(t.name?": "+t.name:"")+"]"),A(t)&&(c=" "+RegExp.prototype.toString.call(t)),_(t)&&(c=" "+Date.prototype.toUTCString.call(t)),C(t)&&(c=" "+f(t)),0!==a.length||d&&0!=t.length?l<0?A(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),s=d?function(e,n,t,l,r){for(var i=[],a=0,o=n.length;a<o;++a)L(n,String(a))?i.push(h(e,n,t,l,String(a),!0)):i.push("");return r.forEach((function(r){r.match(/^\d+$/)||i.push(h(e,n,t,l,r,!0))})),i}(e,t,l,o,a):a.map((function(n){return h(e,t,l,o,n,d)})),e.seen.pop(),function(e,n,t){return e.reduce((function(e,n){return n.indexOf("\n"),e+n.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?t[0]+(""===n?"":n+"\n ")+" "+e.join(",\n  ")+" "+t[1]:t[0]+n+" "+e.join(", ")+" "+t[1]}(s,c,w)):w[0]+c+w[1]}function f(e){return"["+Error.prototype.toString.call(e)+"]"}function h(e,n,t,l,r,i){var a,o,u;if((u=Object.getOwnPropertyDescriptor(n,r)||{value:n[r]}).get?o=u.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):u.set&&(o=e.stylize("[Setter]","special")),L(l,r)||(a="["+r+"]"),o||(e.seen.indexOf(u.value)<0?(o=g(t)?p(e,u.value,null):p(e,u.value,t-1)).indexOf("\n")>-1&&(o=i?o.split("\n").map((function(e){return"  "+e})).join("\n").slice(2):"\n"+o.split("\n").map((function(e){return"   "+e})).join("\n")):o=e.stylize("[Circular]","special")),v(a)){if(i&&r.match(/^\d+$/))return o;(a=JSON.stringify(""+r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.slice(1,-1),a=e.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=e.stylize(a,"string"))}return a+": "+o}function m(e){return Array.isArray(e)}function b(e){return"boolean"==typeof e}function g(e){return null===e}function M(e){return"number"==typeof e}function y(e){return"string"==typeof e}function v(e){return void 0===e}function A(e){return w(e)&&"[object RegExp]"===S(e)}function w(e){return"object"==typeof e&&null!==e}function _(e){return w(e)&&"[object Date]"===S(e)}function C(e){return w(e)&&("[object Error]"===S(e)||e instanceof Error)}function T(e){return"function"==typeof e}function S(e){return Object.prototype.toString.call(e)}function z(e){return e<10?"0"+e.toString(10):e.toString(10)}n.debuglog=function(e){if(e=e.toUpperCase(),!a[e])if(o.test(e)){var t=l.pid;a[e]=function(){var l=n.format.apply(n,arguments);console.error("%s %d: %s",e,t,l)}}else a[e]=function(){};return a[e]},n.inspect=s,s.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},s.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},n.types=t(44645),n.isArray=m,n.isBoolean=b,n.isNull=g,n.isNullOrUndefined=function(e){return null==e},n.isNumber=M,n.isString=y,n.isSymbol=function(e){return"symbol"==typeof e},n.isUndefined=v,n.isRegExp=A,n.types.isRegExp=A,n.isObject=w,n.isDate=_,n.types.isDate=_,n.isError=C,n.types.isNativeError=C,n.isFunction=T,n.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},n.isBuffer=t(66218);var O=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function E(){var e=new Date,n=[z(e.getHours()),z(e.getMinutes()),z(e.getSeconds())].join(":");return[e.getDate(),O[e.getMonth()],n].join(" ")}function L(e,n){return Object.prototype.hasOwnProperty.call(e,n)}n.log=function(){console.log("%s - %s",E(),n.format.apply(n,arguments))},n.inherits=t(40137),n._extend=function(e,n){if(!n||!w(n))return e;for(var t=Object.keys(n),l=t.length;l--;)e[t[l]]=n[t[l]];return e};var x="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function k(e,n){if(!e){var t=new Error("Promise was rejected with a falsy value");t.reason=e,e=t}return n(e)}n.promisify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');if(x&&e[x]){var n;if("function"!=typeof(n=e[x]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(n,x,{value:n,enumerable:!1,writable:!1,configurable:!0}),n}function n(){for(var n,t,l=new Promise((function(e,l){n=e,t=l})),r=[],i=0;i<arguments.length;i++)r.push(arguments[i]);r.push((function(e,l){e?t(e):n(l)}));try{e.apply(this,r)}catch(e){t(e)}return l}return Object.setPrototypeOf(n,Object.getPrototypeOf(e)),x&&Object.defineProperty(n,x,{value:n,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(n,r(e))},n.promisify.custom=x,n.callbackify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');function n(){for(var n=[],t=0;t<arguments.length;t++)n.push(arguments[t]);var r=n.pop();if("function"!=typeof r)throw new TypeError("The last argument must be of type Function");var i=this,a=function(){return r.apply(i,arguments)};e.apply(this,n).then((function(e){l.nextTick(a.bind(null,null,e))}),(function(e){l.nextTick(k.bind(null,e,a))}))}return Object.setPrototypeOf(n,Object.getPrototypeOf(e)),Object.defineProperties(n,r(e)),n}},22080:(e,n,t)=>{"use strict";var l=t(15606),r=t(85299),i=t(92440),a=t(51609),o=i("Object.prototype.toString"),u=t(16509)(),s="undefined"==typeof globalThis?t.g:globalThis,c=r(),d=i("String.prototype.slice"),p={},f=Object.getPrototypeOf;u&&a&&f&&l(c,(function(e){if("function"==typeof s[e]){var n=new s[e];if(Symbol.toStringTag in n){var t=f(n),l=a(t,Symbol.toStringTag);if(!l){var r=f(t);l=a(r,Symbol.toStringTag)}p[e]=l.get}}}));var h=t(51578);e.exports=function(e){return!!h(e)&&(u&&Symbol.toStringTag in e?function(e){var n=!1;return l(p,(function(t,l){if(!n)try{var r=t.call(e);r===l&&(n=r)}catch(e){}})),n}(e):d(o(e),8,-1))}},93102:e=>{"use strict";e.exports=window.alert},19567:e=>{"use strict";e.exports=window.jQuery},85299:(e,n,t)=>{"use strict";var l=["BigInt64Array","BigUint64Array","Float32Array","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray"],r="undefined"==typeof globalThis?t.g:globalThis;e.exports=function(){for(var e=[],n=0;n<l.length;n++)"function"==typeof r[l[n]]&&(e[e.length]=l[n]);return e}},91128:e=>{"use strict";e.exports=JSON.parse('{"version":"2021e","zones":["Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5","Africa/Nairobi|LMT +0230 EAT +0245|-2r.g -2u -30 -2J|012132|-2ua2r.g N6nV.g 3Fbu h1cu dzbJ|47e5","Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5","Africa/Lagos|LMT GMT +0030 WAT|-d.z 0 -u -10|01023|-2B40d.z 7iod.z dnXK.p dLzH.z|17e6","Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4","Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5","Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6","Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|32e5","Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3","Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|20e4","Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5","Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|012121212121212121212121212121212131|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 PeX0|","Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5","Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5","Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5","Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00|","Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5","Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5","Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4","America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326","America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4","America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5","America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4","America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0|","America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0|","America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0|","America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0|","America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|","America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0|","America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|","America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0|","America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0|","America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0|","America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0|","America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0|","America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5","America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5","America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3","America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5","America/Barbados|LMT AST ADT -0330|3W.t 40 30 3u|0121213121212121|-2m4k1.v 1eAN1.v RB0 1Bz0 Op0 1rb0 11d0 1jJc0 IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4","America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5","America/Belize|LMT CST -0530 CWT CPT CDT|5Q.M 60 5u 50 50 50|012121212121212121212121212121212121212121212121213412121212121212121212121212121212121212121215151|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu Rcu 7Bt0 Ni0 4nd0 Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu e9Au qn0 lxB0 mn0|57e3","America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2","America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5","America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4","America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2","America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4","America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4","America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5","America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3","America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5","America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4","America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5","America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5","America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4","America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8","America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3","America/Dawson|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|010102304056565656565656565656565656565656565656565656565656565656565656565656565656565656567|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|13e2","America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5","America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|0123425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5","America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|0121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5","America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3","America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5","America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5","America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2","America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5","America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3","America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3","America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2","America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|0121212121212121212121212121212121212121212121212121212121212121212121212132121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 7jA0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2","America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5","America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5","America/Guyana|LMT -04 -0345 -03|3Q.D 40 3J 30|01231|-2mf87.l 8Hc7.l 2r7bJ Ey0f|80e4","America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4","America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5","America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4","America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010401054541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2","America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2","America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4","America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3","America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X 9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5","America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6","America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6","America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4","America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5","America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5","America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4","America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4","America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4","America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2","America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5","America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2","America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6","America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2","America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3","America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5","America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5","America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5","America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6","America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2","America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2","America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2","America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3","America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2","America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4","America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5","America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4","America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4","America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|","America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842","America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2","America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5","America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4","America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229","America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4","America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5","America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5","America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6","America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452","America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2","America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4","America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3","America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5","America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656","America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4","America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5","America/Whitehorse|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|010102304056565656565656565656565656565656565656565656565656565656565656565656565656565656567|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|23e3","America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4","America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642","America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3","Antarctica/Casey|-00 +08 +11|0 -80 -b0|0121212121212|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10 1o30 14k0 1kr0 12l0 1o01|10","Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70","Pacific/Port_Moresby|+10|-a0|0||25e4","Antarctica/Macquarie|AEST AEDT -00|-a0 -b0 0|010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 1a00 4SK0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 3Co0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|1","Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60","Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5","Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40","Antarctica/Rothera|-00 -03|0 30|01|gOo0|130","Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5","Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40","Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25","Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4","Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5","Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 LA0 1C00 LA0 1C00 Oo0 1zc0 Oo0 1C00 LA0 1C00 LA0 1C00 LA0 1C00 LA0 1C00 Oo0 1zc0 Oo0 1C00 LA0 1C00 LA0 1C00 LA0 1C00 LA0 1C00 Oo0 1C00 LA0 1C00|25e5","Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3","Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4","Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4","Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4","Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|","Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5","Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4","Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5","Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6","Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|","Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5","Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4","Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4","Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6","Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4","Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3","Asia/Shanghai|CST CDT|-80 -90|01010101010101010101010101010|-23uw0 18n0 OjB0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6","Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5","Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6","Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5","Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4","Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5","Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4","Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2o0 MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qo0 Xc0 1qo0 Xc0 1qo0 1200 1nA0 1200 1qo0 Xc0 1qo0 Xc0 1qo0 Xc0 1qo0 Xc0 1qo0 1200 1nA0 1200 1qo0 Xc0 1qo0 Xc0 1qo0 Xc0 1qo0 Xc0 1qo0 1200 1qo0 Xc0 1qo0|18e5","Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|01010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2o0 MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qo0 Xc0 1qo0 Xc0 1qo0 1200 1nA0 1200 1qo0 Xc0 1qo0 Xc0 1qo0 Xc0 1qo0 Xc0 1qo0 1200 1nA0 1200 1qo0 Xc0 1qo0 Xc0 1qo0 Xc0 1qo0 Xc0 1qo0 1200 1qo0 Xc0 1qo0|25e4","Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5","Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5","Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3","Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4","Europe/Istanbul|IMT EET EEST +03 +04|-1U.U -20 -30 -30 -40|0121212121212121212121212121212121212121212121234312121212121212121212121212121212121212121212121212121212121212123|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6","Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6","Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4","Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|01212121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyOk.E MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 3LA0 Eo0 oo0 1co0 1dA0 16o0 10M0 1jc0 1tA0 14o0 1cM0 1a00 11A0 1Nc0 Ao0 1Nc0 Ao0 1Ko0 LA0 1o00 WM0 EQK0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4","Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5","Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4","Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6","Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5","Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5","Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2","Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5","Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5","Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4","Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4","Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3","Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5","Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6","Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4","Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4","Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5","Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5","Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4","Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4","Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5","Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|","Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4","Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5","Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4","Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4","Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|012343434343151515151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6","Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2","Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5","Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5","Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5","Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6","Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3","Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e6","Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5","Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5","Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2","Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4","Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4","Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5","Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5","Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|0121212121212121212121212121212121212121212123212321232123212121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4","Atlantic/Bermuda|BMT BST AST ADT|4j.i 3j.i 40 30|010102323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28p7E.G 1bb0 1i10 11X0 ru30 thbE.G 1PX0 11B0 1tz0 Rd0 1zb0 Op0 1zb0 3I10 Lz0 1EN0 FX0 1HB0 FX0 1Kp0 Db0 1Kp0 Db0 1Kp0 FX0 93d0 11z0 GAp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3","Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4","Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3","Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|0121212121212121212121212121212121212121212123212321232123212121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4","Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4","Atlantic/South_Georgia|-02|20|0||30","Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2","Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5","Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5","Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5","Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3","Australia/Hobart|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 1a00 1qM0 Oo0 1zc0 Oo0 TAo0 yM0 1cM0 1cM0 1fA0 1a00 VfA0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4","Australia/Darwin|ACST ACDT|-9u -au|010101010|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00|12e4","Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293iJ xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368","Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347","Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10","Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5","Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293i0 xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5","CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2","CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","EST|EST|50|0||","EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","Etc/GMT-0|GMT|0|0||","Etc/GMT-1|+01|-10|0||","Etc/GMT-11|+11|-b0|0||","Pacific/Tarawa|+12|-c0|0||29e3","Etc/GMT-13|+13|-d0|0||","Etc/GMT-14|+14|-e0|0||","Etc/GMT-2|+02|-20|0||","Etc/GMT-3|+03|-30|0||","Etc/GMT-4|+04|-40|0||","Etc/GMT-5|+05|-50|0||","Etc/GMT-6|+06|-60|0||","Indian/Christmas|+07|-70|0||21e2","Etc/GMT-8|+08|-80|0||","Pacific/Palau|+09|-90|0||21e3","Etc/GMT+1|-01|10|0||","Etc/GMT+10|-10|a0|0||","Etc/GMT+11|-11|b0|0||","Etc/GMT+12|-12|c0|0||","Etc/GMT+3|-03|30|0||","Etc/GMT+4|-04|40|0||","Etc/GMT+5|-05|50|0||","Etc/GMT+6|-06|60|0||","Etc/GMT+7|-07|70|0||","Etc/GMT+8|-08|80|0||","Etc/GMT+9|-09|90|0||","Etc/UTC|UTC|0|0||","Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5","Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3","Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5","Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5","Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6","Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5","Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5","Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5","Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5","Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 1oo0 11c0 1lc0 17c0 O1V0 3Nf0 WM0 1fA0 1cM0 1cM0 1oJ0 1dd0 1020 1fX0 1cp0 1cM0 1cM0 1cM0 1fA0 1a00 bhy0 Rb0 1wr0 Rc0 1C00 LA0 1C00 LA0 SNW0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cO0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5","Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4","Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4","Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3","Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Kaliningrad|CET CEST EET EEST MSK MSD +03|-10 -20 -20 -30 -30 -40 -30|01010101010101232454545454545454543232323232323232323232323232323232323232323262|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1en0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4","Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5","Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4","Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5","Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5","Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4","Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5","Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2n5c9.l cFX9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3","Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6","Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6","Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4","Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5","Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5","Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810|","Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4","Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5","Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4","Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4","Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5","Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4","Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5","Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|0123232323232323212121212121212121212121212121212121212121212121|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0 5gn0|10e5","Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5","Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4","HST|HST|a0|0||","Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2","Indian/Cocos|+0630|-6u|0||596","Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130","Indian/Mahe|LMT +04|-3F.M -40|01|-2xorF.M|79e3","Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4","Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4","Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4","Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3","MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","MST|MST|70|0||","MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600","Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0|37e3","Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4","Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3","Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|012121212121212121212121|-2l9nd.g 2uNXd.g Dc0 n610 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3","Pacific/Enderbury|-00 -12 -11 +13|0 c0 b0 -d0|0123|-1iIo0 1GsA0 B7X0|1","Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483","Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|01212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 2hc0 bc0 4q00 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00|88e4","Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3","Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125","Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4","Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4","Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4","Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2","Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2","Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3","Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2","Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2","Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3","Pacific/Niue|LMT -1120 -11|bj.E bk b0|012|-FScE.k suo0.k|12e2","Pacific/Norfolk|+1112 +1130 +1230 +11 +12|-bc -bu -cu -b0 -c0|012134343434343434343434343434343434343434|-Kgbc W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|25e4","Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3","Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56","Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3","Pacific/Rarotonga|LMT -1030 -0930 -10|aD.4 au 9u a0|0123232323232323232323232323|-FSdk.U 13tbO.U IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3","Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4","Pacific/Tongatapu|LMT +1220 +13 +14|-cj.c -ck -d0 -e0|01232323232|-XbMj.c BgLX.c 1yndk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3","PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|"],"links":["Africa/Abidjan|Africa/Accra","Africa/Abidjan|Africa/Bamako","Africa/Abidjan|Africa/Banjul","Africa/Abidjan|Africa/Conakry","Africa/Abidjan|Africa/Dakar","Africa/Abidjan|Africa/Freetown","Africa/Abidjan|Africa/Lome","Africa/Abidjan|Africa/Nouakchott","Africa/Abidjan|Africa/Ouagadougou","Africa/Abidjan|Africa/Timbuktu","Africa/Abidjan|Atlantic/St_Helena","Africa/Cairo|Egypt","Africa/Johannesburg|Africa/Maseru","Africa/Johannesburg|Africa/Mbabane","Africa/Lagos|Africa/Bangui","Africa/Lagos|Africa/Brazzaville","Africa/Lagos|Africa/Douala","Africa/Lagos|Africa/Kinshasa","Africa/Lagos|Africa/Libreville","Africa/Lagos|Africa/Luanda","Africa/Lagos|Africa/Malabo","Africa/Lagos|Africa/Niamey","Africa/Lagos|Africa/Porto-Novo","Africa/Maputo|Africa/Blantyre","Africa/Maputo|Africa/Bujumbura","Africa/Maputo|Africa/Gaborone","Africa/Maputo|Africa/Harare","Africa/Maputo|Africa/Kigali","Africa/Maputo|Africa/Lubumbashi","Africa/Maputo|Africa/Lusaka","Africa/Nairobi|Africa/Addis_Ababa","Africa/Nairobi|Africa/Asmara","Africa/Nairobi|Africa/Asmera","Africa/Nairobi|Africa/Dar_es_Salaam","Africa/Nairobi|Africa/Djibouti","Africa/Nairobi|Africa/Kampala","Africa/Nairobi|Africa/Mogadishu","Africa/Nairobi|Indian/Antananarivo","Africa/Nairobi|Indian/Comoro","Africa/Nairobi|Indian/Mayotte","Africa/Tripoli|Libya","America/Adak|America/Atka","America/Adak|US/Aleutian","America/Anchorage|US/Alaska","America/Argentina/Buenos_Aires|America/Buenos_Aires","America/Argentina/Catamarca|America/Argentina/ComodRivadavia","America/Argentina/Catamarca|America/Catamarca","America/Argentina/Cordoba|America/Cordoba","America/Argentina/Cordoba|America/Rosario","America/Argentina/Jujuy|America/Jujuy","America/Argentina/Mendoza|America/Mendoza","America/Chicago|US/Central","America/Denver|America/Shiprock","America/Denver|Navajo","America/Denver|US/Mountain","America/Detroit|US/Michigan","America/Edmonton|Canada/Mountain","America/Fort_Wayne|America/Indiana/Indianapolis","America/Fort_Wayne|America/Indianapolis","America/Fort_Wayne|US/East-Indiana","America/Godthab|America/Nuuk","America/Halifax|Canada/Atlantic","America/Havana|Cuba","America/Indiana/Knox|America/Knox_IN","America/Indiana/Knox|US/Indiana-Starke","America/Jamaica|Jamaica","America/Kentucky/Louisville|America/Louisville","America/Los_Angeles|US/Pacific","America/Manaus|Brazil/West","America/Mazatlan|Mexico/BajaSur","America/Mexico_City|Mexico/General","America/New_York|US/Eastern","America/Noronha|Brazil/DeNoronha","America/Panama|America/Atikokan","America/Panama|America/Cayman","America/Panama|America/Coral_Harbour","America/Phoenix|America/Creston","America/Phoenix|US/Arizona","America/Puerto_Rico|America/Anguilla","America/Puerto_Rico|America/Antigua","America/Puerto_Rico|America/Aruba","America/Puerto_Rico|America/Blanc-Sablon","America/Puerto_Rico|America/Curacao","America/Puerto_Rico|America/Dominica","America/Puerto_Rico|America/Grenada","America/Puerto_Rico|America/Guadeloupe","America/Puerto_Rico|America/Kralendijk","America/Puerto_Rico|America/Lower_Princes","America/Puerto_Rico|America/Marigot","America/Puerto_Rico|America/Montserrat","America/Puerto_Rico|America/Port_of_Spain","America/Puerto_Rico|America/St_Barthelemy","America/Puerto_Rico|America/St_Kitts","America/Puerto_Rico|America/St_Lucia","America/Puerto_Rico|America/St_Thomas","America/Puerto_Rico|America/St_Vincent","America/Puerto_Rico|America/Tortola","America/Puerto_Rico|America/Virgin","America/Regina|Canada/Saskatchewan","America/Rio_Branco|America/Porto_Acre","America/Rio_Branco|Brazil/Acre","America/Santiago|Chile/Continental","America/Sao_Paulo|Brazil/East","America/St_Johns|Canada/Newfoundland","America/Tijuana|America/Ensenada","America/Tijuana|America/Santa_Isabel","America/Tijuana|Mexico/BajaNorte","America/Toronto|America/Montreal","America/Toronto|America/Nassau","America/Toronto|Canada/Eastern","America/Vancouver|Canada/Pacific","America/Whitehorse|Canada/Yukon","America/Winnipeg|Canada/Central","Asia/Ashgabat|Asia/Ashkhabad","Asia/Bangkok|Asia/Phnom_Penh","Asia/Bangkok|Asia/Vientiane","Asia/Dhaka|Asia/Dacca","Asia/Dubai|Asia/Muscat","Asia/Ho_Chi_Minh|Asia/Saigon","Asia/Hong_Kong|Hongkong","Asia/Jerusalem|Asia/Tel_Aviv","Asia/Jerusalem|Israel","Asia/Kathmandu|Asia/Katmandu","Asia/Kolkata|Asia/Calcutta","Asia/Kuala_Lumpur|Asia/Singapore","Asia/Kuala_Lumpur|Singapore","Asia/Macau|Asia/Macao","Asia/Makassar|Asia/Ujung_Pandang","Asia/Nicosia|Europe/Nicosia","Asia/Qatar|Asia/Bahrain","Asia/Rangoon|Asia/Yangon","Asia/Riyadh|Antarctica/Syowa","Asia/Riyadh|Asia/Aden","Asia/Riyadh|Asia/Kuwait","Asia/Seoul|ROK","Asia/Shanghai|Asia/Chongqing","Asia/Shanghai|Asia/Chungking","Asia/Shanghai|Asia/Harbin","Asia/Shanghai|PRC","Asia/Taipei|ROC","Asia/Tehran|Iran","Asia/Thimphu|Asia/Thimbu","Asia/Tokyo|Japan","Asia/Ulaanbaatar|Asia/Ulan_Bator","Asia/Urumqi|Asia/Kashgar","Atlantic/Faroe|Atlantic/Faeroe","Atlantic/Reykjavik|Iceland","Atlantic/South_Georgia|Etc/GMT+2","Australia/Adelaide|Australia/South","Australia/Brisbane|Australia/Queensland","Australia/Broken_Hill|Australia/Yancowinna","Australia/Darwin|Australia/North","Australia/Hobart|Australia/Currie","Australia/Hobart|Australia/Tasmania","Australia/Lord_Howe|Australia/LHI","Australia/Melbourne|Australia/Victoria","Australia/Perth|Australia/West","Australia/Sydney|Australia/ACT","Australia/Sydney|Australia/Canberra","Australia/Sydney|Australia/NSW","Etc/GMT-0|Etc/GMT","Etc/GMT-0|Etc/GMT+0","Etc/GMT-0|Etc/GMT0","Etc/GMT-0|Etc/Greenwich","Etc/GMT-0|GMT","Etc/GMT-0|GMT+0","Etc/GMT-0|GMT-0","Etc/GMT-0|GMT0","Etc/GMT-0|Greenwich","Etc/UTC|Etc/UCT","Etc/UTC|Etc/Universal","Etc/UTC|Etc/Zulu","Etc/UTC|UCT","Etc/UTC|UTC","Etc/UTC|Universal","Etc/UTC|Zulu","Europe/Belgrade|Europe/Ljubljana","Europe/Belgrade|Europe/Podgorica","Europe/Belgrade|Europe/Sarajevo","Europe/Belgrade|Europe/Skopje","Europe/Belgrade|Europe/Zagreb","Europe/Chisinau|Europe/Tiraspol","Europe/Dublin|Eire","Europe/Helsinki|Europe/Mariehamn","Europe/Istanbul|Asia/Istanbul","Europe/Istanbul|Turkey","Europe/Lisbon|Portugal","Europe/London|Europe/Belfast","Europe/London|Europe/Guernsey","Europe/London|Europe/Isle_of_Man","Europe/London|Europe/Jersey","Europe/London|GB","Europe/London|GB-Eire","Europe/Moscow|W-SU","Europe/Oslo|Arctic/Longyearbyen","Europe/Oslo|Atlantic/Jan_Mayen","Europe/Prague|Europe/Bratislava","Europe/Rome|Europe/San_Marino","Europe/Rome|Europe/Vatican","Europe/Warsaw|Poland","Europe/Zurich|Europe/Busingen","Europe/Zurich|Europe/Vaduz","Indian/Christmas|Etc/GMT-7","Pacific/Auckland|Antarctica/McMurdo","Pacific/Auckland|Antarctica/South_Pole","Pacific/Auckland|NZ","Pacific/Chatham|NZ-CHAT","Pacific/Chuuk|Pacific/Truk","Pacific/Chuuk|Pacific/Yap","Pacific/Easter|Chile/EasterIsland","Pacific/Enderbury|Pacific/Kanton","Pacific/Guam|Pacific/Saipan","Pacific/Honolulu|Pacific/Johnston","Pacific/Honolulu|US/Hawaii","Pacific/Kwajalein|Kwajalein","Pacific/Pago_Pago|Pacific/Midway","Pacific/Pago_Pago|Pacific/Samoa","Pacific/Pago_Pago|US/Samoa","Pacific/Palau|Etc/GMT-9","Pacific/Pohnpei|Pacific/Ponape","Pacific/Port_Moresby|Antarctica/DumontDUrville","Pacific/Port_Moresby|Etc/GMT-10","Pacific/Tarawa|Etc/GMT-12","Pacific/Tarawa|Pacific/Funafuti","Pacific/Tarawa|Pacific/Wake","Pacific/Tarawa|Pacific/Wallis"],"countries":["AD|Europe/Andorra","AE|Asia/Dubai","AF|Asia/Kabul","AG|America/Port_of_Spain America/Antigua","AI|America/Port_of_Spain America/Anguilla","AL|Europe/Tirane","AM|Asia/Yerevan","AO|Africa/Lagos Africa/Luanda","AQ|Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Mawson Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Pacific/Auckland Antarctica/McMurdo","AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia","AS|Pacific/Pago_Pago","AT|Europe/Vienna","AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla","AW|America/Curacao America/Aruba","AX|Europe/Helsinki Europe/Mariehamn","AZ|Asia/Baku","BA|Europe/Belgrade Europe/Sarajevo","BB|America/Barbados","BD|Asia/Dhaka","BE|Europe/Brussels","BF|Africa/Abidjan Africa/Ouagadougou","BG|Europe/Sofia","BH|Asia/Qatar Asia/Bahrain","BI|Africa/Maputo Africa/Bujumbura","BJ|Africa/Lagos Africa/Porto-Novo","BL|America/Port_of_Spain America/St_Barthelemy","BM|Atlantic/Bermuda","BN|Asia/Brunei","BO|America/La_Paz","BQ|America/Curacao America/Kralendijk","BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco","BS|America/Nassau","BT|Asia/Thimphu","BW|Africa/Maputo Africa/Gaborone","BY|Europe/Minsk","BZ|America/Belize","CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder_Bay America/Iqaluit America/Pangnirtung America/Atikokan America/Winnipeg America/Rainy_River America/Resolute America/Rankin_Inlet America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife America/Inuvik America/Creston America/Dawson_Creek America/Fort_Nelson America/Whitehorse America/Dawson America/Vancouver","CC|Indian/Cocos","CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi","CF|Africa/Lagos Africa/Bangui","CG|Africa/Lagos Africa/Brazzaville","CH|Europe/Zurich","CI|Africa/Abidjan","CK|Pacific/Rarotonga","CL|America/Santiago America/Punta_Arenas Pacific/Easter","CM|Africa/Lagos Africa/Douala","CN|Asia/Shanghai Asia/Urumqi","CO|America/Bogota","CR|America/Costa_Rica","CU|America/Havana","CV|Atlantic/Cape_Verde","CW|America/Curacao","CX|Indian/Christmas","CY|Asia/Nicosia Asia/Famagusta","CZ|Europe/Prague","DE|Europe/Zurich Europe/Berlin Europe/Busingen","DJ|Africa/Nairobi Africa/Djibouti","DK|Europe/Copenhagen","DM|America/Port_of_Spain America/Dominica","DO|America/Santo_Domingo","DZ|Africa/Algiers","EC|America/Guayaquil Pacific/Galapagos","EE|Europe/Tallinn","EG|Africa/Cairo","EH|Africa/El_Aaiun","ER|Africa/Nairobi Africa/Asmara","ES|Europe/Madrid Africa/Ceuta Atlantic/Canary","ET|Africa/Nairobi Africa/Addis_Ababa","FI|Europe/Helsinki","FJ|Pacific/Fiji","FK|Atlantic/Stanley","FM|Pacific/Chuuk Pacific/Pohnpei Pacific/Kosrae","FO|Atlantic/Faroe","FR|Europe/Paris","GA|Africa/Lagos Africa/Libreville","GB|Europe/London","GD|America/Port_of_Spain America/Grenada","GE|Asia/Tbilisi","GF|America/Cayenne","GG|Europe/London Europe/Guernsey","GH|Africa/Accra","GI|Europe/Gibraltar","GL|America/Nuuk America/Danmarkshavn America/Scoresbysund America/Thule","GM|Africa/Abidjan Africa/Banjul","GN|Africa/Abidjan Africa/Conakry","GP|America/Port_of_Spain America/Guadeloupe","GQ|Africa/Lagos Africa/Malabo","GR|Europe/Athens","GS|Atlantic/South_Georgia","GT|America/Guatemala","GU|Pacific/Guam","GW|Africa/Bissau","GY|America/Guyana","HK|Asia/Hong_Kong","HN|America/Tegucigalpa","HR|Europe/Belgrade Europe/Zagreb","HT|America/Port-au-Prince","HU|Europe/Budapest","ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura","IE|Europe/Dublin","IL|Asia/Jerusalem","IM|Europe/London Europe/Isle_of_Man","IN|Asia/Kolkata","IO|Indian/Chagos","IQ|Asia/Baghdad","IR|Asia/Tehran","IS|Atlantic/Reykjavik","IT|Europe/Rome","JE|Europe/London Europe/Jersey","JM|America/Jamaica","JO|Asia/Amman","JP|Asia/Tokyo","KE|Africa/Nairobi","KG|Asia/Bishkek","KH|Asia/Bangkok Asia/Phnom_Penh","KI|Pacific/Tarawa Pacific/Enderbury Pacific/Kiritimati","KM|Africa/Nairobi Indian/Comoro","KN|America/Port_of_Spain America/St_Kitts","KP|Asia/Pyongyang","KR|Asia/Seoul","KW|Asia/Riyadh Asia/Kuwait","KY|America/Panama America/Cayman","KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau Asia/Oral","LA|Asia/Bangkok Asia/Vientiane","LB|Asia/Beirut","LC|America/Port_of_Spain America/St_Lucia","LI|Europe/Zurich Europe/Vaduz","LK|Asia/Colombo","LR|Africa/Monrovia","LS|Africa/Johannesburg Africa/Maseru","LT|Europe/Vilnius","LU|Europe/Luxembourg","LV|Europe/Riga","LY|Africa/Tripoli","MA|Africa/Casablanca","MC|Europe/Monaco","MD|Europe/Chisinau","ME|Europe/Belgrade Europe/Podgorica","MF|America/Port_of_Spain America/Marigot","MG|Africa/Nairobi Indian/Antananarivo","MH|Pacific/Majuro Pacific/Kwajalein","MK|Europe/Belgrade Europe/Skopje","ML|Africa/Abidjan Africa/Bamako","MM|Asia/Yangon","MN|Asia/Ulaanbaatar Asia/Hovd Asia/Choibalsan","MO|Asia/Macau","MP|Pacific/Guam Pacific/Saipan","MQ|America/Martinique","MR|Africa/Abidjan Africa/Nouakchott","MS|America/Port_of_Spain America/Montserrat","MT|Europe/Malta","MU|Indian/Mauritius","MV|Indian/Maldives","MW|Africa/Maputo Africa/Blantyre","MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosillo America/Tijuana America/Bahia_Banderas","MY|Asia/Kuala_Lumpur Asia/Kuching","MZ|Africa/Maputo","NA|Africa/Windhoek","NC|Pacific/Noumea","NE|Africa/Lagos Africa/Niamey","NF|Pacific/Norfolk","NG|Africa/Lagos","NI|America/Managua","NL|Europe/Amsterdam","NO|Europe/Oslo","NP|Asia/Kathmandu","NR|Pacific/Nauru","NU|Pacific/Niue","NZ|Pacific/Auckland Pacific/Chatham","OM|Asia/Dubai Asia/Muscat","PA|America/Panama","PE|America/Lima","PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier","PG|Pacific/Port_Moresby Pacific/Bougainville","PH|Asia/Manila","PK|Asia/Karachi","PL|Europe/Warsaw","PM|America/Miquelon","PN|Pacific/Pitcairn","PR|America/Puerto_Rico","PS|Asia/Gaza Asia/Hebron","PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores","PW|Pacific/Palau","PY|America/Asuncion","QA|Asia/Qatar","RE|Indian/Reunion","RO|Europe/Bucharest","RS|Europe/Belgrade","RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Volgograd Europe/Astrakhan Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr","RW|Africa/Maputo Africa/Kigali","SA|Asia/Riyadh","SB|Pacific/Guadalcanal","SC|Indian/Mahe","SD|Africa/Khartoum","SE|Europe/Stockholm","SG|Asia/Singapore","SH|Africa/Abidjan Atlantic/St_Helena","SI|Europe/Belgrade Europe/Ljubljana","SJ|Europe/Oslo Arctic/Longyearbyen","SK|Europe/Prague Europe/Bratislava","SL|Africa/Abidjan Africa/Freetown","SM|Europe/Rome Europe/San_Marino","SN|Africa/Abidjan Africa/Dakar","SO|Africa/Nairobi Africa/Mogadishu","SR|America/Paramaribo","SS|Africa/Juba","ST|Africa/Sao_Tome","SV|America/El_Salvador","SX|America/Curacao America/Lower_Princes","SY|Asia/Damascus","SZ|Africa/Johannesburg Africa/Mbabane","TC|America/Grand_Turk","TD|Africa/Ndjamena","TF|Indian/Reunion Indian/Kerguelen","TG|Africa/Abidjan Africa/Lome","TH|Asia/Bangkok","TJ|Asia/Dushanbe","TK|Pacific/Fakaofo","TL|Asia/Dili","TM|Asia/Ashgabat","TN|Africa/Tunis","TO|Pacific/Tongatapu","TR|Europe/Istanbul","TT|America/Port_of_Spain","TV|Pacific/Funafuti","TW|Asia/Taipei","TZ|Africa/Nairobi Africa/Dar_es_Salaam","UA|Europe/Simferopol Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye","UG|Africa/Nairobi Africa/Kampala","UM|Pacific/Pago_Pago Pacific/Wake Pacific/Honolulu Pacific/Midway","US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla America/Yakutat America/Nome America/Adak Pacific/Honolulu","UY|America/Montevideo","UZ|Asia/Samarkand Asia/Tashkent","VA|Europe/Rome Europe/Vatican","VC|America/Port_of_Spain America/St_Vincent","VE|America/Caracas","VG|America/Port_of_Spain America/Tortola","VI|America/Port_of_Spain America/St_Thomas","VN|Asia/Bangkok Asia/Ho_Chi_Minh","VU|Pacific/Efate","WF|Pacific/Wallis","WS|Pacific/Apia","YE|Asia/Riyadh Asia/Aden","YT|Africa/Nairobi Indian/Mayotte","ZA|Africa/Johannesburg","ZM|Africa/Maputo Africa/Lusaka","ZW|Africa/Maputo Africa/Harare"]}')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__),t.loaded=!0,t.exports}__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var __webpack_exports__={};window.loadTests=function(){__webpack_require__(1034),__webpack_require__(36492),__webpack_require__(57994),__webpack_require__(21898),__webpack_require__(91561),__webpack_require__(75849),__webpack_require__(30164),__webpack_require__(91013),__webpack_require__(38641),__webpack_require__(84786),__webpack_require__(13844),__webpack_require__(79118),__webpack_require__(6817),__webpack_require__(15481),__webpack_require__(27726),__webpack_require__(32777),__webpack_require__(20003),__webpack_require__(10815),__webpack_require__(18892),__webpack_require__(56697),__webpack_require__(63967),__webpack_require__(59367),__webpack_require__(75812),__webpack_require__(81266),__webpack_require__(85320),__webpack_require__(96212)},window.gristy=__webpack_exports__.default})();
//# sourceMappingURL=test.bundle.js.map