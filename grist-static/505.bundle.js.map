{"version":3,"file":"505.bundle.js","mappings":"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","sources":["./app/client/ui/SortFilterConfig.ts?","./app/client/components/ViewConfigTab.js?"],"sourcesContent":["import {GristDoc} from 'app/client/components/GristDoc';\nimport {makeT} from 'app/client/lib/localization';\nimport {ViewSectionRec} from 'app/client/models/DocModel';\nimport {FilterConfig} from 'app/client/ui/FilterConfig';\nimport {cssLabel, cssSaveButtonsRow} from 'app/client/ui/RightPanelStyles';\nimport {SortConfig} from 'app/client/ui/SortConfig';\nimport {basicButton, primaryButton} from 'app/client/ui2018/buttons';\nimport {Computed, Disposable, dom, makeTestId, styled} from 'grainjs';\n\nconst testId = makeTestId('test-sort-filter-config-');\n\nconst t = makeT('SortFilterConfig');\n\nexport class SortFilterConfig extends Disposable {\n  private _docModel = this._gristDoc.docModel;\n  private _isReadonly = this._gristDoc.isReadonly;\n\n  private _hasChanges: Computed<boolean> = Computed.create(this, (use) => (\n    use(this._section.filterSpecChanged) || !use(this._section.activeSortJson.isSaved)\n  ));\n\n  constructor(private _section: ViewSectionRec, private _gristDoc: GristDoc) {\n    super();\n  }\n\n  public buildDom() {\n    return [\n      cssLabel(t('Sort')),\n      dom.create(SortConfig, this._section, this._gristDoc, {\n        menuOptions: {attach: 'body'},\n      }),\n      cssLabel(t('Filter')),\n      dom.create(FilterConfig, this._section, {\n        menuOptions: {attach: 'body'},\n      }),\n      dom.maybe(this._hasChanges, () => [\n        cssSaveButtonsRow(\n          cssSaveButton(t('Save'),\n            dom.on('click', () => this._save()),\n            dom.boolAttr('disabled', this._isReadonly),\n            testId('save'),\n          ),\n          basicButton(t('Revert'),\n            dom.on('click', () => this._revert()),\n            testId('revert'),\n          ),\n          testId('save-btns'),\n        ),\n      ]),\n    ];\n  }\n\n  private async _save() {\n    await this._docModel.docData.bundleActions(t('Update Sort & Filter settings'), () => Promise.all([\n      this._section.activeSortJson.save(),\n      this._section.saveFilters(),\n    ]));\n  }\n\n  private _revert() {\n    this._section.activeSortJson.revert();\n    this._section.revertFilters();\n  }\n}\n\nconst cssSaveButton = styled(primaryButton, `\n  margin-right: 8px;\n`);\n","var _ = require('underscore');\nvar ko = require('knockout');\nvar dispose = require('../lib/dispose');\nvar dom = require('../lib/dom');\nvar kd = require('../lib/koDom');\nvar kf = require('../lib/koForm');\nvar koArray = require('../lib/koArray');\nvar commands = require('./commands');\nvar {CustomSectionElement} = require('../lib/CustomSectionElement');\nconst {ChartConfig} = require('./ChartView');\nconst {Computed, dom: grainjsDom, makeTestId} = require('grainjs');\n\nconst {cssRow} = require('app/client/ui/RightPanelStyles');\nconst {SortFilterConfig} = require('app/client/ui/SortFilterConfig');\nconst {primaryButton} = require('app/client/ui2018/buttons');\nconst {select} = require('app/client/ui2018/menus');\nconst {confirmModal} = require('app/client/ui2018/modals');\nconst {makeT} = require('app/client/lib/localization');\n\nconst testId = makeTestId('test-vconfigtab-');\n\nconst t = makeT('ViewConfigTab');\n\n/**\n * Helper class that combines one ViewSection's data for building dom.\n */\nfunction ViewSectionData(section) {\n  this.section = section;\n\n  // A koArray reflecting the columns (RowModels) that are not present in the current view.\n  this.hiddenFields = this.autoDispose(koArray.syncedKoArray(section.hiddenColumns));\n}\ndispose.makeDisposable(ViewSectionData);\n\n\nfunction ViewConfigTab(options) {\n  var self = this;\n  this.gristDoc = options.gristDoc;\n  this.viewModel = options.viewModel;\n\n  // viewModel may point to different views, but viewSectionData is a single koArray reflecting\n  // the sections of the current view.\n  this.viewSectionData = this.autoDispose(\n    koArray.syncedKoArray(this.viewModel.viewSections, function(section) {\n      return ViewSectionData.create(section);\n    })\n    .setAutoDisposeValues()\n  );\n\n  this.isDetail = this.autoDispose(ko.computed(function() {\n    return ['detail', 'single'].includes(this.viewModel.activeSection().parentKey());\n  }, this));\n  this.isChart = this.autoDispose(ko.computed(function() {\n    return this.viewModel.activeSection().parentKey() === 'chart';}, this));\n  this.isGrid = this.autoDispose(ko.computed(function() {\n    return this.viewModel.activeSection().parentKey() === 'record';}, this));\n  this.isCustom = this.autoDispose(ko.computed(function() {\n    return this.viewModel.activeSection().parentKey() === 'custom';}, this));\n  this.isRaw = this.autoDispose(ko.computed(function() {\n    return this.viewModel.activeSection().isRaw();}, this));\n\n  this.activeRawSectionData = this.autoDispose(ko.computed(function() {\n    return self.isRaw() ? ViewSectionData.create(self.viewModel.activeSection()) : null;\n  }));\n\n  this.activeSectionData = this.autoDispose(ko.computed(function() {\n    return (\n      _.find(self.viewSectionData.all(), function(sectionData) {\n        return sectionData.section &&\n          sectionData.section.getRowId() === self.viewModel.activeSectionId();\n      })\n      || self.activeRawSectionData()\n      || self.viewSectionData.at(0)\n    );\n  }));\n}\ndispose.makeDisposable(ViewConfigTab);\n\n\nViewConfigTab.prototype.buildSortFilterDom = function() {\n  return grainjsDom.maybe(this.activeSectionData, ({section}) => {\n    return grainjsDom.create(SortFilterConfig, section, this.gristDoc);\n  });\n};\n\nViewConfigTab.prototype._makeOnDemand = function(table) {\n  // After saving the changed setting, force the reload of the document.\n  const onConfirm = () => {\n    return table.onDemand.saveOnly(!table.onDemand.peek())\n    .then(() => {\n      return this.gristDoc.docComm.reloadDoc()\n      .catch((err) => {\n        // Ignore the expected error from the socket shutdown that we asked for.\n        if (!err.message.includes('GristWSConnection disposed')) {\n          throw err;\n        }\n      })\n    });\n  }\n\n  if (table.onDemand()) {\n    confirmModal('Unmark table On-Demand?', 'Unmark On-Demand', onConfirm, {\n      explanation: dom('div', 'If you unmark table ', dom('b', table), ' as On-Demand, ' +\n        'its data will be loaded into the calculation engine and will be available ' +\n        'for use in formulas. For a big table, this may greatly increase load times.',\n        dom('br'), dom('br'), 'Changing this setting will reload the document for all users.'),\n    });\n  } else {\n    confirmModal('Make table On-Demand?', 'Make On-Demand', onConfirm, {\n      explanation: dom('div', 'If you make table ', dom('b', table), ' On-Demand, ' +\n        'its data will no longer be loaded into the calculation engine and will not be available ' +\n        'for use in formulas. It will remain available for viewing and editing.',\n        dom('br'), dom('br'), 'Changing this setting will reload the document for all users.'),\n    });\n  }\n};\n\nViewConfigTab.prototype._buildAdvancedSettingsDom = function() {\n  return kd.maybe(() => {\n    const s = this.activeSectionData();\n    return s && !s.section.table().summarySourceTable() ? s : null;\n  }, (sectionData) => {\n\n    const table = sectionData.section.table();\n    const isCollapsed = ko.observable(true);\n    return [\n      kf.collapserLabel(isCollapsed, t(\"Advanced settings\"), dom.testId('ViewConfig_advanced')),\n      kf.helpRow(kd.hide(isCollapsed),\n        t(\"Big tables may be marked as \\\"on-demand\\\" to avoid loading them into the data engine.\"),\n        kd.style('text-align', 'left'),\n        kd.style('margin-top', '1.5rem')\n      ),\n      kf.row(kd.hide(isCollapsed),\n        kf.label('Table ', dom('b', kd.text(table.tableId)), ':')\n      ),\n      kf.row(kd.hide(isCollapsed),\n        kf.buttonGroup(kf.button(() => this._makeOnDemand(table),\n          kd.text(() => table.onDemand() ? t(\"Unmark On-Demand\") : t(\"Make On-Demand\")),\n          dom.testId('ViewConfig_onDemandBtn')\n        ))\n      ),\n    ];\n  });\n};\n\nViewConfigTab.prototype._buildThemeDom = function() {\n  return kd.maybe(this.activeSectionData, (sectionData) => {\n    var section = sectionData.section;\n    if (this.isDetail()) {\n      const theme = Computed.create(null, (use) => use(section.themeDef));\n      theme.onWrite(val => section.themeDef.setAndSave(val));\n      return cssRow(\n        dom.autoDispose(theme),\n        select(theme, [\n          {label: t(\"Form\"),        value: 'form'   },\n          {label: t(\"Compact\"),     value: 'compact'},\n          {label: t(\"Blocks\"),      value: 'blocks'  },\n        ]),\n        testId('detail-theme')\n      );\n    }\n  });\n};\n\nViewConfigTab.prototype._buildChartConfigDom = function() {\n  return grainjsDom.maybe(this.viewModel.activeSection, (section) => grainjsDom.create(ChartConfig, this.gristDoc, section));\n};\n\nViewConfigTab.prototype._buildLayoutDom = function() {\n  return kd.maybe(this.activeSectionData, (sectionData) => {\n    if (this.isDetail()) {\n      const view = sectionData.section.viewInstance.peek();\n      const layoutEditorObs = ko.computed(() => view && view.recordLayout && view.recordLayout.layoutEditor());\n      return cssRow({style: 'margin-top: 16px;'},\n        kd.maybe(layoutEditorObs, (editor) => editor.buildFinishButtons()),\n        primaryButton(t(\"Edit Card Layout\"),\n          dom.autoDispose(layoutEditorObs),\n          dom.on('click', () => commands.allCommands.editLayout.run()),\n          grainjsDom.hide(layoutEditorObs),\n          grainjsDom.cls('behavioral-prompt-edit-card-layout'),\n          testId('detail-edit-layout'),\n        )\n      );\n    }\n  });\n};\n\n/**\n * Builds the three items for configuring a `Custom View`:\n *  1) Mode picker: let user choose between 'url' and 'plugin' mode\n *  2) Show if 'url' mode: let user enter the url\n *  3) Show if 'plugin' mode: let user pick a plugin and a section from the list of available plugin.\n */\nViewConfigTab.prototype._buildCustomTypeItems = function() {\n  const docPluginManager = this.gristDoc.docPluginManager;\n  const activeSection = this.viewModel.activeSection;\n\n  // all available custom sections grouped by their plugin id\n  const customSections = _.groupBy(CustomSectionElement.getSections(docPluginManager.pluginsList), s => s.pluginId);\n\n  // all plugin ids which have custom sections\n  const allPlugins = Object.keys(customSections);\n\n  // the list of customSections of the selected plugin (computed)\n  const customSectionIds = ko.pureComputed(() => {\n    const sections = customSections[this.viewModel.activeSection().customDef.pluginId()] || [];\n    return sections.map(({sectionId}) => sectionId);\n  });\n\n  return [{\n\n    // 1)\n    buildDom: () => kd.scope(activeSection, ({customDef}) => kf.buttonSelect(customDef.mode,\n      kf.optionButton('url', 'URL', dom.testId('ViewConfigTab_customView_url')),\n      kf.optionButton('plugin', 'Plugin', dom.testId('ViewConfigTab_customView_plugin'))))\n  }, {\n\n    // 2)\n    // TODO: refactor this part, Custom Widget moved to separate file.\n  }, {\n\n    // 3)\n    showObs: () => activeSection().customDef.mode() === \"plugin\",\n    buildDom: () => kd.scope(activeSection, ({customDef}) => dom('div',\n      kf.row(5, t(\"Plugin: \"), 13, kf.text(customDef.pluginId, {}, {list: \"list_plugin\"}, dom.testId('ViewConfigTab_customView_pluginId'))),\n      kf.row(5, t(\"Section: \"), 13, kf.text(customDef.sectionId, {}, {list: \"list_section\"},  dom.testId('ViewConfigTab_customView_sectionId'))),\n      // For both `customPlugin` and `selectedSection` it is possible for the value not to be in the\n      // list of options. Combining <datalist> and <input> allows both to freely edit the value with\n      // keyboard and to select it from a list. Although the content of the list seems to be\n      // filtered by the current value, which could confuse user into thinking that there are no\n      // available options. I think it would be better to have the full list always, but it seems\n      // harder to accomplish and is left as a TODO.\n      dom('datalist#list_plugin',  kd.foreach(koArray(allPlugins), value => dom('option', {value}))),\n      dom('datalist#list_section', kd.scope(customSectionIds, sections => kd.foreach(koArray(sections), (value) => dom('option', {value}))))\n      ))\n  }];\n};\n\nmodule.exports = ViewConfigTab;\n"],"names":["testId","makeTestId","t","makeT","SortFilterConfig","Disposable","constructor","_section","_gristDoc","super","_docModel","this","docModel","_isReadonly","isReadonly","_hasChanges","Computed","use","filterSpecChanged","activeSortJson","isSaved","cssLabel","dom","menuOptions","attach","cssSaveButtonsRow","cssSaveButton","_save","basicButton","_revert","docData","bundleActions","Promise","all","save","saveFilters","revert","revertFilters","styled","primaryButton","_","ko","dispose","kd","kf","koArray","commands","CustomSectionElement","ChartConfig","grainjsDom","cssRow","select","confirmModal","ViewSectionData","section","hiddenFields","autoDispose","syncedKoArray","hiddenColumns","ViewConfigTab","options","self","gristDoc","viewModel","viewSectionData","viewSections","create","setAutoDisposeValues","isDetail","computed","includes","activeSection","parentKey","isChart","isGrid","isCustom","isRaw","activeRawSectionData","activeSectionData","find","sectionData","getRowId","activeSectionId","at","makeDisposable","prototype","buildSortFilterDom","maybe","_makeOnDemand","table","onConfirm","onDemand","saveOnly","peek","then","docComm","reloadDoc","catch","err","message","explanation","_buildAdvancedSettingsDom","s","summarySourceTable","isCollapsed","observable","collapserLabel","helpRow","hide","style","row","label","text","tableId","buttonGroup","button","_buildThemeDom","theme","themeDef","onWrite","val","setAndSave","value","_buildChartConfigDom","_buildLayoutDom","view","viewInstance","layoutEditorObs","recordLayout","layoutEditor","editor","buildFinishButtons","on","allCommands","editLayout","run","cls","_buildCustomTypeItems","docPluginManager","customSections","groupBy","getSections","pluginsList","pluginId","allPlugins","Object","keys","customSectionIds","pureComputed","customDef","map","sectionId","buildDom","scope","buttonSelect","mode","optionButton","showObs","list","foreach","sections","module","exports"],"sourceRoot":""}